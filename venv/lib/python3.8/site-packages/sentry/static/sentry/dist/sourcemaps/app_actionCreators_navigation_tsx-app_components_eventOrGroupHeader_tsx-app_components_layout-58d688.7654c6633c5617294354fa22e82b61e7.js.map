{"version":3,"file":"chunks/app_actionCreators_navigation_tsx-app_components_eventOrGroupHeader_tsx-app_components_layout-58d688.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/navigation.tsx","webpack:///./app/actionCreators/prompts.tsx","webpack:///./app/components/clippedBox.tsx","webpack:///./app/components/contextData/toggle.tsx","webpack:///./app/components/contextData/utils.tsx","webpack:///./app/components/contextData/index.tsx","webpack:///./app/components/contextPickerModal.tsx","webpack:///./app/components/eventTitleError.tsx","webpack:///./app/components/eventOrGroupHeader.tsx","webpack:///./app/components/eventTitleTreeLabel.tsx","webpack:///./app/components/eventOrGroupTitle.tsx","webpack:///./app/components/events/eventDataSection.tsx","webpack:///./app/components/events/interfaces/crashContent/stackTrace/content.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/expander.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/leadHint.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/wrapper.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/default.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/native.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/nativeV2.tsx","webpack:///./app/components/events/interfaces/frame/lineV2/index.tsx","webpack:///./app/components/events/interfaces/crashContent/stackTrace/contentV2.tsx","webpack:///./app/components/events/interfaces/nativeFrame.tsx","webpack:///./app/components/events/interfaces/crashContent/stackTrace/contentV3.tsx","webpack:///./app/components/events/interfaces/debugMeta/utils.tsx","webpack:///./app/components/events/interfaces/frame/assembly.tsx","webpack:///./app/components/events/interfaces/frame/contextLine.tsx","webpack:///./app/components/events/interfaces/frame/frameRegisters/registers.tsx","webpack:///./app/components/events/interfaces/frame/frameRegisters/utils.tsx","webpack:///./app/components/events/interfaces/frame/frameRegisters/value.tsx","webpack:///./app/components/events/interfaces/frame/frameRegisters/index.tsx","webpack:///./app/components/events/interfaces/frame/frameVariables.tsx","webpack:///./app/components/events/interfaces/frame/openInContextLine.tsx","webpack:///./app/components/events/interfaces/frame/stacktraceLinkModal.tsx","webpack:///./app/components/events/interfaces/frame/stacktraceLink.tsx","webpack:///./app/components/events/interfaces/frame/context.tsx","webpack:///./app/components/events/interfaces/frame/defaultTitle/originalSourceInfo.tsx","webpack:///./app/components/events/interfaces/frame/defaultTitle/index.tsx","webpack:///./app/components/events/interfaces/frame/functionName.tsx","webpack:///./app/components/events/interfaces/frame/groupingIndicator.tsx","webpack:///./app/components/events/interfaces/frame/line.tsx","webpack:///./app/components/events/interfaces/frame/packageLink.tsx","webpack:///./app/components/events/interfaces/frame/packageStatus.tsx","webpack:///./app/components/events/interfaces/frame/symbol.tsx","webpack:///./app/components/events/interfaces/frame/togglableAddress.tsx","webpack:///./app/components/events/interfaces/frame/utils.tsx","webpack:///./app/components/events/interfaces/keyValueList/value.tsx","webpack:///./app/components/events/interfaces/keyValueList/index.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/findBestThread.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/getThreadStacktrace.tsx","webpack:///./app/components/events/interfaces/types.tsx","webpack:///./app/components/events/interfaces/utils.tsx","webpack:///./app/components/events/meta/annotatedText/redaction.tsx","webpack:///./app/components/events/meta/annotatedText/utils.tsx","webpack:///./app/components/events/meta/annotatedText/chunk.tsx","webpack:///./app/components/events/meta/annotatedText/chunks.tsx","webpack:///./app/components/events/meta/annotatedText/valueElement.tsx","webpack:///./app/components/events/meta/annotatedText/index.tsx","webpack:///./app/components/events/meta/metaProxy.tsx","webpack:///./app/components/events/styles.tsx","webpack:///./app/components/events/traceEventDataSection.tsx","webpack:///./app/components/forms/compositeSelect.tsx","webpack:///./app/components/layouts/thirds.tsx","webpack:///./app/components/navTabs.tsx","webpack:///./app/components/pagination.tsx","webpack:///./app/components/sentryAppComponentIcon.tsx","webpack:///./app/components/stacktracePreview.tsx","webpack:///./app/components/strictClick.tsx","webpack:///./app/components/timeSince.tsx","webpack:///./app/stores/debugMetaStore.tsx","webpack:///./app/stores/latestContextStore.tsx","webpack:///./app/stores/organizationsStore.tsx","webpack:///./app/stores/sentryAppComponentsStore.tsx","webpack:///./app/utils/fileExtension.tsx","webpack:///./app/utils/promptsActivity.tsx","webpack:///./app/utils/promptIsDismissed.tsx","webpack:///./app/utils/recordSentryAppInteraction.tsx","webpack:///./app/utils/replaceRouterParams.tsx","webpack:///./app/utils/useOrganization.tsx","webpack:///./app/utils/withOrganizations.tsx","webpack:///./app/utils/withSentryAppComponents.tsx","webpack:///./app/views/organizationGroupDetails/unhandledTag.tsx","webpack:///./app/views/organizationIntegrations/integrationIcon.tsx","webpack:///./app/views/settings/account/notifications/feedbackAlert.tsx"],"sourcesContent":["import {InjectedRouter} from 'react-router';\nimport {Location} from 'history';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport ContextPickerModal from 'sentry/components/contextPickerModal';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\n// TODO(ts): figure out better typing for react-router here\nexport function navigateTo(\n  to: string,\n  router: InjectedRouter & {location?: Location},\n  configUrl?: string\n) {\n  // Check for placeholder params\n  const needOrg = to.includes(':orgId');\n  const needProject = to.includes(':projectId') || to.includes(':project');\n  const comingFromProjectId = router?.location?.query?.project;\n  const needProjectId = !comingFromProjectId || Array.isArray(comingFromProjectId);\n\n  const projectById = ProjectsStore.getById(comingFromProjectId);\n\n  if (needOrg || (needProject && (needProjectId || !projectById)) || configUrl) {\n    openModal(\n      modalProps => (\n        <ContextPickerModal\n          {...modalProps}\n          nextPath={to}\n          needOrg={needOrg}\n          needProject={needProject}\n          configUrl={configUrl}\n          comingFromProjectId={\n            Array.isArray(comingFromProjectId) ? '' : comingFromProjectId || ''\n          }\n          onFinish={path => {\n            modalProps.closeModal();\n            return window.setTimeout(() => router.push(path), 0);\n          }}\n        />\n      ),\n      {}\n    );\n  } else {\n    if (projectById) {\n      to = replaceRouterParams(to, {\n        projectId: projectById.slug,\n        project: projectById.id,\n      });\n    }\n    router.push(to);\n  }\n}\n","import {Client} from 'sentry/api';\n\ntype PromptsUpdateParams = {\n  /**\n   * The prompt feature name\n   */\n  feature: string;\n  /**\n   * The numeric organization ID as a string\n   */\n  organizationId: string;\n  status: 'snoozed' | 'dismissed';\n  /**\n   * The numeric project ID as a string\n   */\n  projectId?: string;\n};\n\n/**\n * Update the status of a prompt\n */\nexport function promptsUpdate(api: Client, params: PromptsUpdateParams) {\n  return api.requestPromise('/prompts-activity/', {\n    method: 'PUT',\n    data: {\n      organization_id: params.organizationId,\n      project_id: params.projectId,\n      feature: params.feature,\n      status: params.status,\n    },\n  });\n}\n\ntype PromptCheckParams = {\n  /**\n   * The prompt feature name\n   */\n  feature: string;\n  /**\n   * The numeric organization ID as a string\n   */\n  organizationId: string;\n  /**\n   * The numeric project ID as a string\n   */\n  projectId?: string;\n};\n\nexport type PromptResponseItem = {\n  dismissed_ts?: number;\n  snoozed_ts?: number;\n};\nexport type PromptResponse = {\n  data?: PromptResponseItem;\n  features?: {[key: string]: PromptResponseItem};\n};\n\nexport type PromptData = null | {\n  dismissedTime?: number;\n  snoozedTime?: number;\n};\n\n/**\n * Get the status of a prompt\n */\nexport async function promptsCheck(\n  api: Client,\n  params: PromptCheckParams\n): Promise<PromptData> {\n  const query = {\n    feature: params.feature,\n    organization_id: params.organizationId,\n    ...(params.projectId === undefined ? {} : {project_id: params.projectId}),\n  };\n\n  const response: PromptResponse = await api.requestPromise('/prompts-activity/', {\n    query,\n  });\n\n  if (response?.data) {\n    return {\n      dismissedTime: response.data.dismissed_ts,\n      snoozedTime: response.data.snoozed_ts,\n    };\n  }\n\n  return null;\n}\n\n/**\n * Get the status of many prompt\n */\nexport async function batchedPromptsCheck<T extends readonly string[]>(\n  api: Client,\n  features: T,\n  params: {organizationId: string; projectId?: string}\n): Promise<{[key in T[number]]: PromptData}> {\n  const query = {\n    feature: features,\n    organization_id: params.organizationId,\n    ...(params.projectId === undefined ? {} : {project_id: params.projectId}),\n  };\n\n  const response: PromptResponse = await api.requestPromise('/prompts-activity/', {\n    query,\n  });\n  const responseFeatures = response?.features;\n\n  const result: {[key in T[number]]?: PromptData} = {};\n  if (!responseFeatures) {\n    return result as {[key in T[number]]: PromptData};\n  }\n  for (const featureName of features) {\n    const item = responseFeatures[featureName];\n    if (item) {\n      result[featureName] = {\n        dismissedTime: item.dismissed_ts,\n        snoozedTime: item.snoozed_ts,\n      };\n    } else {\n      result[featureName] = null;\n    }\n  }\n  return result as {[key in T[number]]: PromptData};\n}\n","import {PureComponent} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport color from 'color';\n\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype DefaultProps = {\n  btnText?: string;\n  clipHeight?: number;\n  defaultClipped?: boolean;\n};\n\ntype Props = {\n  clipHeight: number;\n  className?: string;\n  /**\n   * When available replaces the default clipFade component\n   */\n  clipFade?: ({showMoreButton}: {showMoreButton: React.ReactNode}) => React.ReactNode;\n  /**\n   * Triggered when user clicks on the show more button\n   */\n  onReveal?: () => void;\n  /**\n   * Its trigged when the component is mounted and its height available\n   */\n  onSetRenderedHeight?: (renderedHeight: number) => void;\n  renderedHeight?: number;\n  title?: string;\n} & DefaultProps;\n\ntype State = {\n  isClipped: boolean;\n  isRevealed: boolean;\n  renderedHeight?: number;\n};\n\nclass ClippedBox extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    defaultClipped: false,\n    clipHeight: 200,\n    btnText: t('Show More'),\n  };\n\n  state: State = {\n    isClipped: !!this.props.defaultClipped,\n    isRevealed: false, // True once user has clicked \"Show More\" button\n    renderedHeight: this.props.renderedHeight,\n  };\n\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const renderedHeight = (findDOMNode(this) as HTMLElement).offsetHeight;\n    this.props.onSetRenderedHeight?.(renderedHeight);\n    this.calcHeight(renderedHeight);\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.renderedHeight !== this.props.renderedHeight) {\n      this.setRenderedHeight();\n    }\n\n    if (prevState.renderedHeight !== this.state.renderedHeight) {\n      this.calcHeight(this.state.renderedHeight);\n    }\n\n    if (this.state.isRevealed || !this.state.isClipped) {\n      return;\n    }\n\n    if (!this.props.renderedHeight) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const renderedHeight = (findDOMNode(this) as HTMLElement).offsetHeight;\n\n      if (renderedHeight < this.props.clipHeight) {\n        this.reveal();\n      }\n    }\n  }\n\n  setRenderedHeight() {\n    this.setState({\n      renderedHeight: this.props.renderedHeight,\n    });\n  }\n\n  calcHeight(renderedHeight?: number) {\n    if (!renderedHeight) {\n      return;\n    }\n\n    if (!this.state.isClipped && renderedHeight > this.props.clipHeight) {\n      /* eslint react/no-did-mount-set-state:0 */\n      // okay if this causes re-render; cannot determine until\n      // rendered first anyways\n      this.setState({\n        isClipped: true,\n      });\n    }\n  }\n\n  reveal = () => {\n    const {onReveal} = this.props;\n\n    this.setState({\n      isClipped: false,\n      isRevealed: true,\n    });\n\n    if (onReveal) {\n      onReveal();\n    }\n  };\n\n  handleClickReveal = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    this.reveal();\n  };\n\n  render() {\n    const {isClipped, isRevealed} = this.state;\n    const {title, children, clipHeight, btnText, className, clipFade} = this.props;\n\n    const showMoreButton = (\n      <Button\n        onClick={this.reveal}\n        priority=\"primary\"\n        size=\"xsmall\"\n        aria-label={btnText ?? t('Show More')}\n      >\n        {btnText}\n      </Button>\n    );\n\n    return (\n      <Wrapper\n        clipHeight={clipHeight}\n        isClipped={isClipped}\n        isRevealed={isRevealed}\n        className={className}\n      >\n        {title && <Title>{title}</Title>}\n        {children}\n        {isClipped &&\n          (clipFade?.({showMoreButton}) ?? <ClipFade>{showMoreButton}</ClipFade>)}\n      </Wrapper>\n    );\n  }\n}\n\nexport default ClippedBox;\n\nconst Wrapper = styled('div', {\n  shouldForwardProp: prop =>\n    prop !== 'clipHeight' && prop !== 'isClipped' && prop !== 'isRevealed',\n})<State & {clipHeight: number}>`\n  position: relative;\n  border-top: 1px solid ${p => p.theme.backgroundSecondary};\n  margin-left: -${space(3)};\n  margin-right: -${space(3)};\n  padding: ${space(2)} ${space(3)} 0;\n\n  :first-of-type {\n    margin-top: -${space(2)};\n    border: 0;\n  }\n\n  /* For \"Show More\" animation */\n  ${p =>\n    p.isRevealed &&\n    css`\n      transition: all 5s ease-in-out;\n      max-height: 50000px;\n    `};\n\n  ${p =>\n    p.isClipped &&\n    css`\n      max-height: ${p.clipHeight}px;\n      overflow: hidden;\n    `};\n`;\n\nconst Title = styled('h5')`\n  margin-bottom: ${space(2)};\n`;\n\nconst ClipFade = styled('div')`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  padding: 40px 0 0;\n  background-image: linear-gradient(\n    180deg,\n    ${p => color(p.theme.background).alpha(0.15).string()},\n    ${p => p.theme.background}\n  );\n  text-align: center;\n  border-bottom: ${space(1.5)} solid ${p => p.theme.background};\n  /* Let pointer-events pass through ClipFade to visible elements underneath it */\n  pointer-events: none;\n  /* Ensure pointer-events trigger event listeners on \"Expand\" button */\n  > * {\n    pointer-events: auto;\n  }\n`;\n","import {Children, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconAdd, IconSubtract} from 'sentry/icons';\n\ntype Props = {\n  children: React.ReactNode;\n  highUp: boolean;\n  wrapClassName: string;\n};\n\nfunction Toggle({highUp, wrapClassName, children}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  const wrappedChildren = <span className={wrapClassName}>{children}</span>;\n\n  if (highUp) {\n    return wrappedChildren;\n  }\n\n  return (\n    <span>\n      <IconWrapper\n        isExpanded={isExpanded}\n        onClick={evt => {\n          setIsExpanded(!isExpanded);\n          evt.preventDefault();\n        }}\n      >\n        {isExpanded ? (\n          <IconSubtract size=\"9px\" color=\"white\" />\n        ) : (\n          <IconAdd size=\"9px\" color=\"white\" />\n        )}\n      </IconWrapper>\n      {isExpanded && wrappedChildren}\n    </span>\n  );\n}\n\nexport default Toggle;\n\nconst IconWrapper = styled('div')<{isExpanded: boolean}>`\n  border-radius: 2px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  ${p =>\n    p.isExpanded\n      ? `\n          background: ${p.theme.gray300};\n          border: 1px solid ${p.theme.gray300};\n          &:hover {\n            background: ${p.theme.gray400};\n          }\n        `\n      : `\n          background: ${p.theme.blue300};\n          border: 1px solid ${p.theme.blue300};\n          &:hover {\n            background: ${p.theme.blue200};\n          }\n        `}\n`;\n","export function looksLikeObjectRepr(value: string) {\n  const a = value[0];\n  const z = value[value.length - 1];\n\n  if (a === '<' && z === '>') {\n    return true;\n  }\n\n  if (a === '[' && z === ']') {\n    return true;\n  }\n\n  if (a === '(' && z === ')') {\n    return true;\n  }\n\n  if (z === ')' && value.match(/^[\\w\\d._-]+\\(/)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function looksLikeMultiLineString(value: string) {\n  return !!value.match(/[\\r\\n]/);\n}\n\nexport function padNumbersInString(string: string) {\n  return string.replace(/(\\d+)/g, (num: string) => {\n    let isNegative = false;\n    let realNum = parseInt(num, 10);\n    if (realNum < 0) {\n      realNum *= -1;\n      isNegative = true;\n    }\n    let s = '0000000000000' + realNum;\n    s = s.substr(s.length - (isNegative ? 11 : 12));\n    if (isNegative) {\n      s = '-' + s;\n    }\n    return s;\n  });\n}\n\nexport function naturalCaseInsensitiveSort(a: string, b: string) {\n  a = padNumbersInString(a).toLowerCase();\n  b = padNumbersInString(b).toLowerCase();\n  return a === b ? 0 : a < b ? -1 : 1;\n}\n\nexport function analyzeStringForRepr(value: string) {\n  const rv = {\n    repr: value,\n    isString: true,\n    isMultiLine: false,\n    isStripped: false,\n  };\n\n  // stripped for security reasons\n  if (value.match(/^['\"]?\\*{8,}['\"]?$/)) {\n    rv.isStripped = true;\n    return rv;\n  }\n\n  if (looksLikeObjectRepr(value)) {\n    rv.isString = false;\n    return rv;\n  }\n\n  rv.isMultiLine = looksLikeMultiLineString(value);\n  return rv;\n}\n","import {isValidElement} from 'react';\nimport styled from '@emotion/styled';\nimport isArray from 'lodash/isArray';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Meta} from 'sentry/types';\nimport {isUrl} from 'sentry/utils';\n\nimport Toggle from './toggle';\nimport {analyzeStringForRepr, naturalCaseInsensitiveSort} from './utils';\n\ntype Value = null | string | boolean | number | {[key: string]: Value} | Value[];\n\ntype Props = React.HTMLAttributes<HTMLPreElement> & {\n  data?: Value;\n  jsonConsts?: boolean;\n  maxDefaultDepth?: number;\n  meta?: Meta;\n  preserveQuotes?: boolean;\n  withAnnotatedText?: boolean;\n};\n\nfunction getValueWithAnnotatedText(v: Value, meta?: Meta) {\n  return <AnnotatedText value={v} meta={meta} />;\n}\n\nfunction walk({\n  depth,\n  value,\n  maxDefaultDepth: maxDepth = 2,\n  preserveQuotes,\n  withAnnotatedText,\n  jsonConsts,\n  meta,\n}: {\n  depth: number;\n  value: Value;\n} & Pick<\n  Props,\n  'withAnnotatedText' | 'preserveQuotes' | 'jsonConsts' | 'meta' | 'maxDefaultDepth'\n>) {\n  let i = 0;\n\n  const children: React.ReactNode[] = [];\n\n  if (value === null) {\n    return <span className=\"val-null\">{jsonConsts ? 'null' : 'None'}</span>;\n  }\n\n  if (value === true || value === false) {\n    return (\n      <span className=\"val-bool\">\n        {jsonConsts ? (value ? 'true' : 'false') : value ? 'True' : 'False'}\n      </span>\n    );\n  }\n\n  if (isString(value)) {\n    const valueInfo = analyzeStringForRepr(value);\n\n    const valueToBeReturned = withAnnotatedText\n      ? getValueWithAnnotatedText(valueInfo.repr, meta)\n      : valueInfo.repr;\n\n    const out = [\n      <span\n        key=\"value\"\n        className={\n          (valueInfo.isString ? 'val-string' : '') +\n          (valueInfo.isStripped ? ' val-stripped' : '') +\n          (valueInfo.isMultiLine ? ' val-string-multiline' : '')\n        }\n      >\n        {preserveQuotes ? `\"${valueToBeReturned}\"` : valueToBeReturned}\n      </span>,\n    ];\n\n    if (valueInfo.isString && isUrl(value)) {\n      out.push(\n        <ExternalLink key=\"external\" href={value} className=\"external-icon\">\n          <StyledIconOpen size=\"xs\" aria-label={t('Open link')} />\n        </ExternalLink>\n      );\n    }\n\n    return out;\n  }\n\n  if (isNumber(value)) {\n    const valueToBeReturned =\n      withAnnotatedText && meta ? getValueWithAnnotatedText(value, meta) : value;\n    return <span>{valueToBeReturned}</span>;\n  }\n\n  if (isArray(value)) {\n    for (i = 0; i < value.length; i++) {\n      children.push(\n        <span className=\"val-array-item\" key={i}>\n          {walk({\n            value: value[i],\n            depth: depth + 1,\n            preserveQuotes,\n            withAnnotatedText,\n            jsonConsts,\n            meta,\n          })}\n          {i < value.length - 1 ? <span className=\"val-array-sep\">{', '}</span> : null}\n        </span>\n      );\n    }\n    return (\n      <span className=\"val-array\">\n        <span className=\"val-array-marker\">{'['}</span>\n        <Toggle highUp={depth <= maxDepth} wrapClassName=\"val-array-items\">\n          {children}\n        </Toggle>\n        <span className=\"val-array-marker\">{']'}</span>\n      </span>\n    );\n  }\n\n  if (isValidElement(value)) {\n    return value;\n  }\n\n  const keys = Object.keys(value);\n\n  keys.sort(naturalCaseInsensitiveSort);\n\n  for (i = 0; i < keys.length; i++) {\n    const key = keys[i];\n\n    children.push(\n      <span className=\"val-dict-pair\" key={key}>\n        <span className=\"val-dict-key\">\n          <span className=\"val-string\">{preserveQuotes ? `\"${key}\"` : key}</span>\n        </span>\n        <span className=\"val-dict-col\">{': '}</span>\n        <span className=\"val-dict-value\">\n          {walk({\n            value: value[key],\n            depth: depth + 1,\n            preserveQuotes,\n            withAnnotatedText,\n            jsonConsts,\n            meta,\n          })}\n          {i < keys.length - 1 ? <span className=\"val-dict-sep\">{', '}</span> : null}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <span className=\"val-dict\">\n      <span className=\"val-dict-marker\">{'{'}</span>\n      <Toggle highUp={depth <= maxDepth - 1} wrapClassName=\"val-dict-items\">\n        {children}\n      </Toggle>\n      <span className=\"val-dict-marker\">{'}'}</span>\n    </span>\n  );\n}\n\nfunction ContextData({\n  children,\n  meta,\n  jsonConsts,\n  maxDefaultDepth,\n  data = null,\n  preserveQuotes = false,\n  withAnnotatedText = false,\n  ...props\n}: Props) {\n  return (\n    <pre {...props}>\n      {walk({\n        value: data,\n        depth: 0,\n        maxDefaultDepth,\n        meta,\n        jsonConsts,\n        withAnnotatedText,\n        preserveQuotes,\n      })}\n      {children}\n    </pre>\n  );\n}\n\nexport default ContextData;\n\nconst StyledIconOpen = styled(IconOpen)`\n  position: relative;\n  top: 1px;\n`;\n","import {Component, Fragment} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {components, StylesConfig} from 'react-select';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport OrganizationsStore from 'sentry/stores/organizationsStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport space from 'sentry/styles/space';\nimport {Integration, Organization, Project} from 'sentry/types';\nimport Projects from 'sentry/utils/projects';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport IntegrationIcon from 'sentry/views/organizationIntegrations/integrationIcon';\n\ntype Props = ModalRenderProps & {\n  integrationConfigs: Integration[];\n\n  loading: boolean;\n\n  /**\n   * Does modal need to prompt for organization.\n   * TODO(billy): This can be derived from `nextPath`\n   */\n  needOrg: boolean;\n\n  /**\n   * Does modal need to prompt for project\n   */\n  needProject: boolean;\n\n  /**\n   * The destination route\n   */\n  nextPath: string;\n\n  /**\n   * Finish callback\n   */\n  onFinish: (path: string) => number | void;\n  /**\n   * Callback for when organization is selected\n   */\n  onSelectOrganization: (orgSlug: string) => void;\n\n  /**\n   * Organization slug\n   */\n  organization: string;\n\n  /**\n   * List of available organizations\n   */\n  organizations: Organization[];\n\n  projects: Project[];\n  /**\n   * Id of the project (most likely from the URL)\n   * on which the modal was opened\n   */\n  comingFromProjectId?: string;\n};\n\nconst selectStyles: StylesConfig = {\n  menu: provided => ({\n    ...provided,\n    position: 'initial',\n    boxShadow: 'none',\n    marginBottom: 0,\n  }),\n  option: (provided, state: any) => ({\n    ...provided,\n    opacity: state.isDisabled ? 0.6 : 1,\n    cursor: state.isDisabled ? 'not-allowed' : 'pointer',\n    pointerEvents: state.isDisabled ? 'none' : 'auto',\n  }),\n};\n\nclass ContextPickerModal extends Component<Props> {\n  componentDidMount() {\n    const {organization, projects, organizations} = this.props;\n\n    // Don't make any assumptions if there are multiple organizations\n    if (organizations.length !== 1) {\n      return;\n    }\n\n    // If there is an org in context (and there's only 1 org available),\n    // attempt to see if we need more info from user and redirect otherwise\n    if (organization) {\n      // This will handle if we can intelligently move the user forward\n      this.navigateIfFinish([{slug: organization}], projects);\n      return;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Component may be mounted before projects is fetched, check if we can finish when\n    // component is updated with projects\n    if (JSON.stringify(prevProps.projects) !== JSON.stringify(this.props.projects)) {\n      this.navigateIfFinish(this.props.organizations, this.props.projects);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.onFinishTimeout);\n  }\n\n  onFinishTimeout: number | undefined = undefined;\n\n  // TODO(ts) The various generics in react-select types make getting this\n  // right hard.\n  orgSelect: any | null = null;\n  projectSelect: any | null = null;\n  configSelect: any | null = null;\n\n  // Performs checks to see if we need to prompt user\n  // i.e. When there is only 1 org and no project is needed or\n  // there is only 1 org and only 1 project (which should be rare)\n  navigateIfFinish = (\n    organizations: Array<{slug: string}>,\n    projects: Array<{slug: string}>,\n    latestOrg: string = this.props.organization\n  ) => {\n    const {needProject, onFinish, nextPath, integrationConfigs} = this.props;\n    const {isSuperuser} = ConfigStore.get('user') || {};\n\n    // If no project is needed and theres only 1 org OR\n    // if we need a project and there's only 1 project\n    // then return because we can't navigate anywhere yet\n    if (\n      (!needProject && organizations.length !== 1) ||\n      (needProject && projects.length !== 1) ||\n      (integrationConfigs.length && isSuperuser)\n    ) {\n      return;\n    }\n\n    window.clearTimeout(this.onFinishTimeout);\n\n    // If there is only one org and we don't need a project slug, then call finish callback\n    if (!needProject) {\n      this.onFinishTimeout =\n        onFinish(\n          replaceRouterParams(nextPath, {\n            orgId: organizations[0].slug,\n          })\n        ) ?? undefined;\n      return;\n    }\n\n    // Use latest org or if only 1 org, use that\n    let org = latestOrg;\n    if (!org && organizations.length === 1) {\n      org = organizations[0].slug;\n    }\n\n    this.onFinishTimeout =\n      onFinish(\n        replaceRouterParams(nextPath, {\n          orgId: org,\n          projectId: projects[0].slug,\n          project: this.props.projects.find(p => p.slug === projects[0].slug)?.id,\n        })\n      ) ?? undefined;\n  };\n\n  doFocus = (ref: any | null) => {\n    if (!ref || this.props.loading) {\n      return;\n    }\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = findDOMNode(ref) as HTMLElement;\n\n    if (el !== null) {\n      const input = el.querySelector('input');\n\n      input && input.focus();\n    }\n  };\n\n  handleSelectOrganization = ({value}: {value: string}) => {\n    // If we do not need to select a project, we can early return after selecting an org\n    // No need to fetch org details\n    if (!this.props.needProject) {\n      this.navigateIfFinish([{slug: value}], []);\n      return;\n    }\n\n    this.props.onSelectOrganization(value);\n  };\n\n  handleSelectProject = ({value}: {value: string}) => {\n    const {organization} = this.props;\n    if (!value || !organization) {\n      return;\n    }\n\n    this.navigateIfFinish([{slug: organization}], [{slug: value}]);\n  };\n\n  handleSelectConfiguration = ({value}: {value: string}) => {\n    const {onFinish, nextPath} = this.props;\n\n    if (!value) {\n      return;\n    }\n\n    onFinish(`${nextPath}${value}/`);\n    return;\n  };\n\n  getMemberProjects = () => {\n    const {projects} = this.props;\n    const nonMemberProjects: Project[] = [];\n    const memberProjects: Project[] = [];\n    projects.forEach(project =>\n      project.isMember ? memberProjects.push(project) : nonMemberProjects.push(project)\n    );\n\n    return [memberProjects, nonMemberProjects];\n  };\n\n  onMenuOpen = (\n    ref: any | null,\n    listItems: (Project | Integration)[],\n    valueKey: string,\n    currentSelected: string = ''\n  ) => {\n    // Hacky way to pre-focus to an item with newer versions of react select\n    // See https://github.com/JedWatson/react-select/issues/3648\n    setTimeout(() => {\n      if (ref) {\n        const choices = ref.select.state.menuOptions.focusable;\n        const toBeFocused = listItems.find(({id}) => id === currentSelected);\n        const selectedIndex = toBeFocused\n          ? choices.findIndex(option => option.value === toBeFocused[valueKey])\n          : 0;\n        if (selectedIndex >= 0 && toBeFocused) {\n          // Focusing selected option only if it exists\n          ref.select.scrollToFocusedOptionOnUpdate = true;\n          ref.select.inputIsHiddenAfterUpdate = false;\n          ref.select.setState({\n            focusedValue: null,\n            focusedOption: choices[selectedIndex],\n          });\n        }\n      }\n    });\n  };\n\n  // TODO(TS): Fix typings\n  customOptionProject = ({label, ...props}: any) => {\n    const project = this.props.projects.find(({slug}) => props.value === slug);\n    if (!project) {\n      return null;\n    }\n    return (\n      <components.Option label={label} {...props}>\n        <ProjectBadgeOption\n          project={project}\n          avatarSize={20}\n          displayName={label}\n          avatarProps={{consistentWidth: true}}\n        />\n      </components.Option>\n    );\n  };\n\n  get headerText() {\n    const {needOrg, needProject, integrationConfigs} = this.props;\n    if (needOrg && needProject) {\n      return t('Select an organization and a project to continue');\n    }\n    if (needOrg) {\n      return t('Select an organization to continue');\n    }\n    if (needProject) {\n      return t('Select a project to continue');\n    }\n    if (integrationConfigs.length) {\n      return t('Select a configuration to continue');\n    }\n    // if neither project nor org needs to be selected, nothing will render anyways\n    return '';\n  }\n\n  renderProjectSelectOrMessage() {\n    const {organization, projects, comingFromProjectId} = this.props;\n    const [memberProjects, nonMemberProjects] = this.getMemberProjects();\n    const {isSuperuser} = ConfigStore.get('user') || {};\n\n    const projectOptions = [\n      {\n        label: t('My Projects'),\n        options: memberProjects.map(p => ({\n          value: p.slug,\n          label: t(`${p.slug}`),\n          isDisabled: false,\n        })),\n      },\n      {\n        label: t('All Projects'),\n        options: nonMemberProjects.map(p => ({\n          value: p.slug,\n          label: t(`${p.slug}`),\n          isDisabled: isSuperuser ? false : true,\n        })),\n      },\n    ];\n\n    if (!projects.length) {\n      return (\n        <div>\n          {tct('You have no projects. Click [link] to make one.', {\n            link: (\n              <Link to={`/organizations/${organization}/projects/new/`}>{t('here')}</Link>\n            ),\n          })}\n        </div>\n      );\n    }\n\n    return (\n      <StyledSelectControl\n        ref={(ref: any) => {\n          this.projectSelect = ref;\n          this.doFocus(this.projectSelect);\n        }}\n        placeholder={t('Select a Project to continue')}\n        name=\"project\"\n        options={projectOptions}\n        onChange={this.handleSelectProject}\n        onMenuOpen={() =>\n          this.onMenuOpen(this.projectSelect, projects, 'slug', comingFromProjectId)\n        }\n        components={{Option: this.customOptionProject, DropdownIndicator: null}}\n        styles={selectStyles}\n        menuIsOpen\n      />\n    );\n  }\n\n  renderIntegrationConfigs() {\n    const {integrationConfigs} = this.props;\n    const {isSuperuser} = ConfigStore.get('user') || {};\n\n    const options = [\n      {\n        label: tct('[providerName] Configurations', {\n          providerName: integrationConfigs[0].provider.name,\n        }),\n        options: integrationConfigs.map(config => ({\n          value: config.id,\n          label: (\n            <StyledIntegrationItem>\n              <IntegrationIcon size={22} integration={config} />\n              <span>{config.domainName}</span>\n            </StyledIntegrationItem>\n          ),\n          isDisabled: isSuperuser ? false : true,\n        })),\n      },\n    ];\n    return (\n      <StyledSelectControl\n        ref={(ref: any) => {\n          this.configSelect = ref;\n          this.doFocus(this.configSelect);\n        }}\n        placeholder={t('Select a configuration to continue')}\n        name=\"configurations\"\n        options={options}\n        onChange={this.handleSelectConfiguration}\n        onMenuOpen={() => this.onMenuOpen(this.configSelect, integrationConfigs, 'id')}\n        components={{DropdownIndicator: null}}\n        styles={selectStyles}\n        menuIsOpen\n      />\n    );\n  }\n\n  render() {\n    const {\n      needOrg,\n      needProject,\n      organization,\n      organizations,\n      loading,\n      Header,\n      Body,\n      integrationConfigs,\n    } = this.props;\n    const {isSuperuser} = ConfigStore.get('user') || {};\n\n    const shouldShowProjectSelector = organization && needProject && !loading;\n\n    const shouldShowConfigSelector = integrationConfigs.length > 0 && isSuperuser;\n\n    const orgChoices = organizations\n      .filter(({status}) => status.id !== 'pending_deletion')\n      .map(({slug}) => ({label: slug, value: slug}));\n\n    const shouldShowPicker = needOrg || needProject || shouldShowConfigSelector;\n\n    if (!shouldShowPicker) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <Header closeButton>{this.headerText}</Header>\n        <Body>\n          {loading && <StyledLoadingIndicator overlay />}\n          {needOrg && (\n            <StyledSelectControl\n              ref={(ref: any) => {\n                this.orgSelect = ref;\n                if (shouldShowProjectSelector) {\n                  return;\n                }\n                this.doFocus(this.orgSelect);\n              }}\n              placeholder={t('Select an Organization')}\n              name=\"organization\"\n              options={orgChoices}\n              value={organization}\n              onChange={this.handleSelectOrganization}\n              components={{DropdownIndicator: null}}\n              styles={selectStyles}\n              menuIsOpen\n            />\n          )}\n\n          {shouldShowProjectSelector && this.renderProjectSelectOrMessage()}\n          {shouldShowConfigSelector && this.renderIntegrationConfigs()}\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\ntype ContainerProps = Omit<\n  Props,\n  | 'projects'\n  | 'loading'\n  | 'organizations'\n  | 'organization'\n  | 'onSelectOrganization'\n  | 'integrationConfigs'\n> & {\n  configUrl?: string;\n  /**\n   * List of slugs we want to be able to choose from\n   */\n  projectSlugs?: string[];\n} & AsyncComponent['props'];\n\ntype ContainerState = {\n  organizations: Organization[];\n  integrationConfigs?: Integration[];\n  selectedOrganization?: string;\n} & AsyncComponent['state'];\n\nclass ContextPickerModalContainer extends AsyncComponent<ContainerProps, ContainerState> {\n  getDefaultState() {\n    const storeState = OrganizationStore.get();\n    return {\n      ...super.getDefaultState(),\n      organizations: OrganizationsStore.getAll(),\n      selectedOrganization: storeState.organization?.slug,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {configUrl} = this.props;\n    if (configUrl) {\n      return [['integrationConfigs', configUrl]];\n    }\n    return [];\n  }\n\n  componentWillUnmount() {\n    this.unlistener?.();\n  }\n\n  unlistener = OrganizationsStore.listen(\n    (organizations: Organization[]) => this.setState({organizations}),\n    undefined\n  );\n\n  handleSelectOrganization = (organizationSlug: string) => {\n    this.setState({selectedOrganization: organizationSlug});\n  };\n\n  renderModal({\n    projects,\n    initiallyLoaded,\n    integrationConfigs,\n  }: {\n    initiallyLoaded?: boolean;\n    integrationConfigs?: Integration[];\n    projects?: Project[];\n  }) {\n    return (\n      <ContextPickerModal\n        {...this.props}\n        projects={projects || []}\n        loading={!initiallyLoaded}\n        organizations={this.state.organizations}\n        organization={this.state.selectedOrganization!}\n        onSelectOrganization={this.handleSelectOrganization}\n        integrationConfigs={integrationConfigs || []}\n      />\n    );\n  }\n\n  render() {\n    const {projectSlugs, configUrl} = this.props;\n\n    if (configUrl && this.state.loading) {\n      return <LoadingIndicator />;\n    }\n    if (this.state.integrationConfigs?.length) {\n      return this.renderModal({\n        integrationConfigs: this.state.integrationConfigs,\n        initiallyLoaded: !this.state.loading,\n      });\n    }\n    if (this.state.selectedOrganization) {\n      return (\n        <Projects\n          orgId={this.state.selectedOrganization}\n          allProjects={!projectSlugs?.length}\n          slugs={projectSlugs}\n        >\n          {({projects, initiallyLoaded}) =>\n            this.renderModal({projects: projects as Project[], initiallyLoaded})\n          }\n        </Projects>\n      );\n    }\n\n    return this.renderModal({});\n  }\n}\n\nexport default ContextPickerModalContainer;\n\nconst StyledSelectControl = styled(SelectControl)`\n  margin-top: ${space(1)};\n`;\n\nconst ProjectBadgeOption = styled(IdBadge)`\n  margin: ${space(1)};\n`;\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  z-index: 1;\n`;\n\nconst StyledIntegrationItem = styled('div')`\n  display: grid;\n  grid-template-columns: ${space(4)} auto;\n  grid-template-rows: 1fr;\n`;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nfunction EventTitleError() {\n  return (\n    <Wrapper>\n      <Title>{t('<unknown>')}</Title>\n      <ErrorMessage>{t('There was an error rendering the title')}</ErrorMessage>\n    </Wrapper>\n  );\n}\n\nexport default EventTitleError;\n\nconst Wrapper = styled('span')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Title = styled('span')`\n  margin-right: ${space(0.5)};\n`;\n\nconst ErrorMessage = styled('span')`\n  color: ${p => p.theme.alert.error.iconColor};\n  background: ${p => p.theme.alert.error.backgroundLight};\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: 0 ${space(0.5)};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  align-items: center;\n`;\n","import {Fragment} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconMute, IconStar} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, GroupTombstone, Level, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {getLocation, getMessage} from 'sentry/utils/events';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {TagAndMessageWrapper} from 'sentry/views/organizationGroupDetails/unhandledTag';\n\nimport EventTitleError from './eventTitleError';\n\ntype Size = 'small' | 'normal';\n\ntype Props = WithRouterProps<{orgId: string}> & {\n  data: Event | Group | GroupTombstone;\n  organization: Organization;\n  className?: string;\n  /* is issue breakdown? */\n  grouping?: boolean;\n  hideIcons?: boolean;\n  hideLevel?: boolean;\n  includeLink?: boolean;\n  index?: number;\n  /** Group link clicked */\n  onClick?: () => void;\n  query?: string;\n  size?: Size;\n};\n\n/**\n * Displays an event or group/issue title (i.e. in Stream)\n */\nfunction EventOrGroupHeader({\n  data,\n  index,\n  organization,\n  params,\n  query,\n  onClick,\n  className,\n  hideIcons,\n  hideLevel,\n  includeLink = true,\n  size = 'normal',\n  grouping = false,\n  ...props\n}: Props) {\n  const hasGroupingTreeUI = !!organization.features?.includes('grouping-tree-ui');\n\n  function getTitleChildren() {\n    const {level, status, isBookmarked, hasSeen} = data as Group;\n    return (\n      <Fragment>\n        {!hideLevel && level && (\n          <GroupLevel level={level}>\n            <Tooltip title={tct('Error level: [level]', {level: capitalize(level)})}>\n              <span />\n            </Tooltip>\n          </GroupLevel>\n        )}\n        {!hideIcons && status === 'ignored' && (\n          <IconWrapper>\n            <IconMute color=\"red300\" />\n          </IconWrapper>\n        )}\n        {!hideIcons && isBookmarked && (\n          <IconWrapper>\n            <IconStar isSolid color=\"yellow300\" />\n          </IconWrapper>\n        )}\n        <ErrorBoundary customComponent={<EventTitleError />} mini>\n          <StyledEventOrGroupTitle\n            data={data}\n            organization={organization}\n            hasSeen={hasGroupingTreeUI && hasSeen === undefined ? true : hasSeen}\n            withStackTracePreview\n            hasGuideAnchor={index === 0}\n            grouping={grouping}\n          />\n        </ErrorBoundary>\n      </Fragment>\n    );\n  }\n\n  function getTitle() {\n    const orgId = params?.orgId;\n\n    const {id, status} = data as Group;\n    const {eventID, groupID} = data as Event;\n    const {location} = props;\n\n    const commonEleProps = {\n      'data-test-id': status === 'resolved' ? 'resolved-issue' : null,\n      style: status === 'resolved' ? {textDecoration: 'line-through'} : undefined,\n    };\n\n    if (includeLink) {\n      return (\n        <GlobalSelectionLink\n          {...commonEleProps}\n          to={{\n            pathname: `/organizations/${orgId}/issues/${eventID ? groupID : id}/${\n              eventID ? `events/${eventID}/` : ''\n            }`,\n            query: {\n              query,\n              // This adds sort to the query if one was selected from the\n              // issues list page\n              ...(location.query.sort !== undefined ? {sort: location.query.sort} : {}),\n              // This appends _allp to the URL parameters if they have no\n              // project selected (\"all\" projects included in results). This is\n              // so that when we enter the issue details page and lock them to\n              // a project, we can properly take them back to the issue list\n              // page with no project selected (and not the locked project\n              // selected)\n              ...(location.query.project !== undefined ? {} : {_allp: 1}),\n            },\n          }}\n          onClick={onClick}\n        >\n          {getTitleChildren()}\n        </GlobalSelectionLink>\n      );\n    }\n\n    return <span {...commonEleProps}>{getTitleChildren()}</span>;\n  }\n\n  const location = getLocation(data);\n  const message = getMessage(data);\n\n  return (\n    <div className={className} data-test-id=\"event-issue-header\">\n      <Title size={size} hasGroupingTreeUI={hasGroupingTreeUI}>\n        {getTitle()}\n      </Title>\n      {location && <Location size={size}>{location}</Location>}\n      {message && (\n        <StyledTagAndMessageWrapper size={size}>\n          {message && <Message>{message}</Message>}\n        </StyledTagAndMessageWrapper>\n      )}\n    </div>\n  );\n}\n\nconst truncateStyles = css`\n  overflow: hidden;\n  max-width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst getMargin = ({size}: {size: Size}) => {\n  if (size === 'small') {\n    return 'margin: 0;';\n  }\n\n  return 'margin: 0 0 5px';\n};\n\nconst Title = styled('div')<{hasGroupingTreeUI: boolean; size: Size}>`\n  line-height: 1;\n  margin-bottom: ${space(0.25)};\n  & em {\n    font-size: ${p => p.theme.fontSizeMedium};\n    font-style: normal;\n    font-weight: 300;\n    color: ${p => p.theme.subText};\n  }\n  ${p =>\n    !p.hasGroupingTreeUI\n      ? css`\n          ${truncateStyles}\n        `\n      : css`\n          > a:first-child {\n            display: flex;\n            min-height: ${space(3)};\n          }\n        `}\n`;\n\nconst LocationWrapper = styled('div')`\n  ${truncateStyles};\n  ${getMargin};\n  direction: rtl;\n  text-align: left;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  span {\n    direction: ltr;\n  }\n`;\n\nfunction Location(props) {\n  const {children, ...rest} = props;\n  return (\n    <LocationWrapper {...rest}>\n      {tct('in [location]', {\n        location: <span>{children}</span>,\n      })}\n    </LocationWrapper>\n  );\n}\n\nconst StyledTagAndMessageWrapper = styled(TagAndMessageWrapper)`\n  ${getMargin};\n  line-height: 1.2;\n`;\n\nconst Message = styled('div')`\n  ${truncateStyles};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst IconWrapper = styled('span')`\n  position: relative;\n  display: flex;\n  margin-right: 5px;\n`;\n\nconst GroupLevel = styled('div')<{level: Level}>`\n  position: absolute;\n  left: -1px;\n  width: 9px;\n  height: 15px;\n  border-radius: 0 3px 3px 0;\n\n  background-color: ${p => p.theme.level[p.level] ?? p.theme.level.default};\n\n  & span {\n    display: block;\n    width: 9px;\n    height: 15px;\n  }\n`;\n\nexport default withRouter(withOrganization(EventOrGroupHeader));\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)<{\n  hasSeen: boolean;\n}>`\n  font-weight: ${p => (p.hasSeen ? 400 : 600)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {TreeLabelPart} from 'sentry/types';\nimport {getTreeLabelPartDetails} from 'sentry/utils/events';\n\ntype Props = {\n  treeLabel: TreeLabelPart[];\n};\n\nfunction EventTitleTreeLabel({treeLabel}: Props) {\n  const firstFourParts = treeLabel.slice(0, 4);\n  const remainingParts = treeLabel.slice(firstFourParts.length);\n\n  return (\n    <Wrapper>\n      <FirstFourParts>\n        {firstFourParts.map((part, index) => {\n          const label = getTreeLabelPartDetails(part);\n          if (index !== firstFourParts.length - 1) {\n            return (\n              <Fragment key={index}>\n                <PriorityLabel>{label}</PriorityLabel>\n                <Divider>{'|'}</Divider>\n              </Fragment>\n            );\n          }\n          return <PriorityLabel key={index}>{label}</PriorityLabel>;\n        })}\n      </FirstFourParts>\n      {!!remainingParts.length && (\n        <RemainingLabels>\n          {remainingParts.map((part, index) => {\n            const label = getTreeLabelPartDetails(part);\n            return (\n              <Fragment key={index}>\n                <Divider>{'|'}</Divider>\n                <Label>{label}</Label>\n              </Fragment>\n            );\n          })}\n        </RemainingLabels>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default EventTitleTreeLabel;\n\nconst Wrapper = styled('div')`\n  display: inline-grid;\n  grid-template-columns: auto 1fr;\n  align-items: center;\n`;\n\nconst FirstFourParts = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  align-items: center;\n`;\n\nconst Label = styled('div')`\n  display: inline-block;\n`;\n\nconst PriorityLabel = styled(Label)`\n  ${p => p.theme.overflowEllipsis}\n  display: inline-block;\n`;\n\nconst RemainingLabels = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n  display: inline-block;\n  min-width: 50px;\n`;\n\nexport const Divider = styled('div')`\n  color: ${p => p.theme.gray200};\n  display: inline-block;\n  padding: 0 ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {BaseGroup, GroupTombstone, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {getTitle} from 'sentry/utils/events';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport EventTitleTreeLabel from './eventTitleTreeLabel';\nimport {StackTracePreview} from './stacktracePreview';\n\ntype Props = {\n  data: Event | BaseGroup | GroupTombstone;\n  organization: Organization;\n  className?: string;\n  /* is issue breakdown? */\n  grouping?: boolean;\n  hasGuideAnchor?: boolean;\n  withStackTracePreview?: boolean;\n};\n\nfunction EventOrGroupTitle({\n  organization,\n  data,\n  withStackTracePreview,\n  grouping = false,\n  className,\n}: Props) {\n  const event = data as Event;\n  const groupingCurrentLevel = (data as BaseGroup).metadata?.current_level;\n\n  const hasGroupingTreeUI = !!organization?.features.includes('grouping-tree-ui');\n  const hasGroupingStacktraceUI = !!organization?.features.includes(\n    'grouping-stacktrace-ui'\n  );\n  const {id, eventID, groupID, projectID} = event;\n\n  const {title, subtitle, treeLabel} = getTitle(event, organization?.features, grouping);\n\n  return (\n    <Wrapper className={className} hasGroupingTreeUI={hasGroupingTreeUI}>\n      {withStackTracePreview ? (\n        <StyledStacktracePreview\n          organization={organization}\n          issueId={groupID ? groupID : id}\n          groupingCurrentLevel={groupingCurrentLevel}\n          // we need eventId and projectSlug only when hovering over Event, not Group\n          // (different API call is made to get the stack trace then)\n          eventId={eventID}\n          projectSlug={eventID ? ProjectsStore.getById(projectID)?.slug : undefined}\n          hasGroupingStacktraceUI={hasGroupingStacktraceUI}\n        >\n          {treeLabel ? <EventTitleTreeLabel treeLabel={treeLabel} /> : title}\n        </StyledStacktracePreview>\n      ) : treeLabel ? (\n        <EventTitleTreeLabel treeLabel={treeLabel} />\n      ) : (\n        title\n      )}\n      {subtitle && (\n        <Fragment>\n          <Spacer />\n          <Subtitle title={subtitle}>{subtitle}</Subtitle>\n          <br />\n        </Fragment>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default withOrganization(EventOrGroupTitle);\n\n/**\n * &nbsp; is used instead of margin/padding to split title and subtitle\n * into 2 separate text nodes on the HTML AST. This allows the\n * title to be highlighted without spilling over to the subtitle.\n */\nconst Spacer = () => <span style={{display: 'inline-block', width: 10}}>&nbsp;</span>;\n\nconst Subtitle = styled('em')`\n  color: ${p => p.theme.gray300};\n  font-style: normal;\n`;\n\nconst StyledStacktracePreview = styled(StackTracePreview)<{\n  hasGroupingStacktraceUI: boolean;\n}>`\n  ${p =>\n    p.hasGroupingStacktraceUI &&\n    css`\n      display: inline-flex;\n      overflow: hidden;\n      height: 100%;\n      > span:first-child {\n        ${p.theme.overflowEllipsis}\n      }\n    `}\n`;\n\nconst Wrapper = styled('span')<{hasGroupingTreeUI: boolean}>`\n  ${p =>\n    p.hasGroupingTreeUI &&\n    css`\n      display: inline-grid;\n      grid-template-columns: auto max-content 1fr max-content;\n      align-items: flex-end;\n      line-height: 100%;\n\n      ${Subtitle} {\n        ${p.theme.overflowEllipsis};\n        display: inline-block;\n        height: 100%;\n      }\n    `}\n`;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {DataSection} from 'sentry/components/events/styles';\nimport Anchor from 'sentry/components/links/anchor';\nimport {IconAnchor} from 'sentry/icons/iconAnchor';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\ntype Props = {\n  children: React.ReactNode;\n  title: React.ReactNode;\n  type: string;\n  actions?: React.ReactNode;\n  className?: string;\n  isCentered?: boolean;\n  raw?: boolean;\n  showPermalink?: boolean;\n  toggleRaw?: (enable: boolean) => void;\n  wrapTitle?: boolean;\n};\n\nfunction scrollToSection(element: HTMLDivElement) {\n  if (window.location.hash && element) {\n    const [, hash] = window.location.hash.split('#');\n\n    try {\n      const anchorElement = hash && element.querySelector('div#' + hash);\n      if (anchorElement) {\n        anchorElement.scrollIntoView();\n      }\n    } catch {\n      // Since we're blindly taking the hash from the url and shoving\n      // it into a querySelector, it's possible that this may\n      // raise an exception if the input is invalid. So let's just ignore\n      // this instead of blowing up.\n      // e.g. `document.querySelector('div#=')`\n      // > Uncaught DOMException: Failed to execute 'querySelector' on 'Document': 'div#=' is not a valid selector.\n    }\n  }\n}\n\nfunction EventDataSection({\n  children,\n  className,\n  type,\n  title,\n  toggleRaw,\n  raw = false,\n  wrapTitle = true,\n  actions,\n  isCentered = false,\n  showPermalink = true,\n  ...props\n}: Props) {\n  const titleNode = wrapTitle ? <h3>{title}</h3> : title;\n\n  return (\n    <DataSection ref={scrollToSection} className={className || ''} {...props}>\n      {title && (\n        <SectionHeader id={type} isCentered={isCentered}>\n          <Title>\n            {showPermalink ? (\n              <Permalink className=\"permalink\">\n                <PermalinkAnchor href={`#${type}`}>\n                  <StyledIconAnchor size=\"xs\" color=\"subText\" />\n                </PermalinkAnchor>\n                {titleNode}\n              </Permalink>\n            ) : (\n              titleNode\n            )}\n          </Title>\n          {type === 'extra' && (\n            <ButtonBar merged active={raw ? 'raw' : 'formatted'}>\n              <Button\n                barId=\"formatted\"\n                size=\"xsmall\"\n                onClick={() => callIfFunction(toggleRaw, false)}\n              >\n                {t('Formatted')}\n              </Button>\n              <Button\n                barId=\"raw\"\n                size=\"xsmall\"\n                onClick={() => callIfFunction(toggleRaw, true)}\n              >\n                {t('Raw')}\n              </Button>\n            </ButtonBar>\n          )}\n          {actions && <ActionContainer>{actions}</ActionContainer>}\n        </SectionHeader>\n      )}\n      <SectionContents>{children}</SectionContents>\n    </DataSection>\n  );\n}\n\nconst Title = styled('div')`\n  display: flex;\n`;\n\nconst Permalink = styled('span')`\n  width: 100%;\n  position: relative;\n`;\n\nconst StyledIconAnchor = styled(IconAnchor)`\n  opacity: 0;\n  transform: translateY(-1px);\n  transition: opacity 100ms;\n`;\n\nconst PermalinkAnchor = styled(Anchor)`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% + ${space(3)});\n  height: 100%;\n  padding-left: ${space(0.5)};\n  transform: translateX(-${space(3)});\n\n  :hover ${StyledIconAnchor}, :focus ${StyledIconAnchor} {\n    opacity: 1;\n  }\n`;\n\nconst SectionHeader = styled('div')<{isCentered?: boolean}>`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: ${space(1)};\n\n  > * {\n    margin-bottom: ${space(0.5)};\n  }\n\n  & h3,\n  & h3 a {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${p => p.theme.gray300};\n  }\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    padding: ${space(0.75)} 0;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n\n  & small {\n    color: ${p => p.theme.textColor};\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin-right: ${space(0.5)};\n    margin-left: ${space(0.5)};\n\n    text-transform: none;\n  }\n  & small > span {\n    color: ${p => p.theme.textColor};\n    font-weight: normal;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.large}) {\n    & > small {\n      margin-left: ${space(1)};\n      display: inline-block;\n    }\n  }\n\n  ${p =>\n    p.isCentered &&\n    css`\n      align-items: center;\n      @media (max-width: ${p.theme.breakpoints.small}) {\n        display: block;\n      }\n    `}\n\n  >*:first-child {\n    position: relative;\n    flex-grow: 1;\n  }\n`;\n\nexport const SectionContents = styled('div')`\n  position: relative;\n`;\n\nconst ActionContainer = styled('div')`\n  flex-shrink: 0;\n  max-width: 100%;\n`;\n\nexport default EventDataSection;\n","import {cloneElement, Component} from 'react';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport {t} from 'sentry/locale';\nimport {Frame, Organization, PlatformType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport Line from '../../frame/line';\nimport {getImageRange, parseAddress, stackTracePlatformIcon} from '../../utils';\n\nconst defaultProps = {\n  includeSystemFrames: true,\n  expandFirstFrame: true,\n};\n\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  data: StacktraceType;\n  event: Event;\n  platform: PlatformType;\n  className?: string;\n  isHoverPreviewed?: boolean;\n  newestFirst?: boolean;\n  organization?: Organization;\n} & Partial<DefaultProps>;\n\ntype State = {\n  showCompleteFunctionName: boolean;\n  showingAbsoluteAddresses: boolean;\n};\n\nclass Content extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    includeSystemFrames: true,\n    expandFirstFrame: true,\n  };\n\n  state: State = {\n    showingAbsoluteAddresses: false,\n    showCompleteFunctionName: false,\n  };\n\n  renderOmittedFrames = (firstFrameOmitted, lastFrameOmitted) => {\n    const props = {\n      className: 'frame frames-omitted',\n      key: 'omitted',\n    };\n    const text = t(\n      'Frames %d until %d were omitted and not available.',\n      firstFrameOmitted,\n      lastFrameOmitted\n    );\n    return <li {...props}>{text}</li>;\n  };\n\n  isFrameAfterLastNonApp(): boolean {\n    const {data} = this.props;\n\n    const frames = data.frames ?? [];\n\n    if (!frames.length || frames.length < 2) {\n      return false;\n    }\n\n    const lastFrame = frames[frames.length - 1];\n    const penultimateFrame = frames[frames.length - 2];\n\n    return penultimateFrame.inApp && !lastFrame.inApp;\n  }\n\n  frameIsVisible = (frame: Frame, nextFrame: Frame) => {\n    const {includeSystemFrames} = this.props;\n\n    return (\n      includeSystemFrames ||\n      frame.inApp ||\n      (nextFrame && nextFrame.inApp) ||\n      // the last non-app frame\n      (!frame.inApp && !nextFrame)\n    );\n  };\n\n  findImageForAddress(address: Frame['instructionAddr'], addrMode: Frame['addrMode']) {\n    const images = this.props.event.entries.find(entry => entry.type === 'debugmeta')\n      ?.data?.images;\n\n    return images && address\n      ? images.find((img, idx) => {\n          if (!addrMode || addrMode === 'abs') {\n            const [startAddress, endAddress] = getImageRange(img);\n            return address >= (startAddress as any) && address < (endAddress as any);\n          }\n\n          return addrMode === `rel:${idx}`;\n        })\n      : null;\n  }\n\n  handleToggleAddresses = (event: React.MouseEvent<SVGElement>) => {\n    event.stopPropagation(); // to prevent collapsing if collapsible\n\n    this.setState(prevState => ({\n      showingAbsoluteAddresses: !prevState.showingAbsoluteAddresses,\n    }));\n  };\n\n  handleToggleFunctionName = (event: React.MouseEvent<SVGElement>) => {\n    event.stopPropagation(); // to prevent collapsing if collapsible\n\n    this.setState(prevState => ({\n      showCompleteFunctionName: !prevState.showCompleteFunctionName,\n    }));\n  };\n\n  getClassName() {\n    const {className = '', includeSystemFrames} = this.props;\n\n    if (includeSystemFrames) {\n      return `${className} traceback full-traceback`;\n    }\n\n    return `${className} traceback in-app-traceback`;\n  }\n\n  render() {\n    const {\n      data,\n      event,\n      newestFirst,\n      expandFirstFrame,\n      platform,\n      includeSystemFrames,\n      isHoverPreviewed,\n    } = this.props;\n\n    const {showingAbsoluteAddresses, showCompleteFunctionName} = this.state;\n\n    let firstFrameOmitted = null;\n    let lastFrameOmitted = null;\n\n    if (data.framesOmitted) {\n      firstFrameOmitted = data.framesOmitted[0];\n      lastFrameOmitted = data.framesOmitted[1];\n    }\n\n    let lastFrameIdx: number | null = null;\n\n    (data.frames ?? []).forEach((frame, frameIdx) => {\n      if (frame.inApp) {\n        lastFrameIdx = frameIdx;\n      }\n    });\n\n    if (lastFrameIdx === null) {\n      lastFrameIdx = (data.frames ?? []).length - 1;\n    }\n\n    const frames: React.ReactElement[] = [];\n    let nRepeats = 0;\n\n    const maxLengthOfAllRelativeAddresses = (data.frames ?? []).reduce(\n      (maxLengthUntilThisPoint, frame) => {\n        const correspondingImage = this.findImageForAddress(\n          frame.instructionAddr,\n          frame.addrMode\n        );\n\n        try {\n          const relativeAddress = (\n            parseAddress(frame.instructionAddr) -\n            parseAddress(correspondingImage.image_addr)\n          ).toString(16);\n\n          return maxLengthUntilThisPoint > relativeAddress.length\n            ? maxLengthUntilThisPoint\n            : relativeAddress.length;\n        } catch {\n          return maxLengthUntilThisPoint;\n        }\n      },\n      0\n    );\n\n    const isFrameAfterLastNonApp = this.isFrameAfterLastNonApp();\n\n    (data.frames ?? []).forEach((frame, frameIdx) => {\n      const prevFrame = (data.frames ?? [])[frameIdx - 1];\n      const nextFrame = (data.frames ?? [])[frameIdx + 1];\n      const repeatedFrame =\n        nextFrame &&\n        frame.lineNo === nextFrame.lineNo &&\n        frame.instructionAddr === nextFrame.instructionAddr &&\n        frame.package === nextFrame.package &&\n        frame.module === nextFrame.module &&\n        frame.function === nextFrame.function;\n\n      if (repeatedFrame) {\n        nRepeats++;\n      }\n\n      if (this.frameIsVisible(frame, nextFrame) && !repeatedFrame) {\n        const image = this.findImageForAddress(frame.instructionAddr, frame.addrMode);\n\n        frames.push(\n          <Line\n            key={frameIdx}\n            event={event}\n            data={frame}\n            isExpanded={expandFirstFrame && lastFrameIdx === frameIdx}\n            emptySourceNotation={lastFrameIdx === frameIdx && frameIdx === 0}\n            isOnlyFrame={(data.frames ?? []).length === 1}\n            nextFrame={nextFrame}\n            prevFrame={prevFrame}\n            platform={platform}\n            timesRepeated={nRepeats}\n            showingAbsoluteAddress={showingAbsoluteAddresses}\n            onAddressToggle={this.handleToggleAddresses}\n            image={image}\n            maxLengthOfRelativeAddress={maxLengthOfAllRelativeAddresses}\n            registers={{}} // TODO: Fix registers\n            isFrameAfterLastNonApp={isFrameAfterLastNonApp}\n            includeSystemFrames={includeSystemFrames}\n            onFunctionNameToggle={this.handleToggleFunctionName}\n            showCompleteFunctionName={showCompleteFunctionName}\n            isHoverPreviewed={isHoverPreviewed}\n            isFirst={newestFirst ? frameIdx === lastFrameIdx : frameIdx === 0}\n          />\n        );\n      }\n\n      if (!repeatedFrame) {\n        nRepeats = 0;\n      }\n\n      if (frameIdx === firstFrameOmitted) {\n        frames.push(this.renderOmittedFrames(firstFrameOmitted, lastFrameOmitted));\n      }\n    });\n\n    if (frames.length > 0 && data.registers) {\n      const lastFrame = frames.length - 1;\n      frames[lastFrame] = cloneElement(frames[lastFrame], {\n        registers: data.registers,\n      });\n    }\n\n    if (newestFirst) {\n      frames.reverse();\n    }\n\n    const className = this.getClassName();\n    const platformIcon = stackTracePlatformIcon(platform, data.frames ?? []);\n\n    return (\n      <Wrapper className={className} data-test-id=\"stack-trace-content\">\n        <StyledPlatformIcon\n          platform={platformIcon}\n          size=\"20px\"\n          style={{borderRadius: '3px 0 0 3px'}}\n          data-test-id={`platform-icon-${platformIcon}`}\n        />\n        <StyledList data-test-id=\"frames\">{frames}</StyledList>\n      </Wrapper>\n    );\n  }\n}\n\nexport default withOrganization(Content);\n\nconst Wrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  position: absolute;\n  top: -1px;\n  left: -20px;\n`;\n\nconst StyledList = styled('ul')`\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport {IconChevron} from 'sentry/icons/iconChevron';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PlatformType} from 'sentry/types';\n\nimport {isDotnet} from '../utils';\n\ntype Props = {\n  isExpandable: boolean;\n  onToggleContext: (evt: React.MouseEvent) => void;\n  platform: PlatformType;\n  isExpanded?: boolean;\n  isHoverPreviewed?: boolean;\n};\n\nfunction Expander({\n  isExpandable,\n  isHoverPreviewed,\n  isExpanded,\n  platform,\n  onToggleContext,\n}: Props) {\n  if (!isExpandable) {\n    return null;\n  }\n\n  return (\n    <StyledButton\n      className=\"btn-toggle\"\n      css={isDotnet(platform) && {display: 'block !important'}} // remove important once we get rid of css files\n      size=\"zero\"\n      title={t('Toggle Context')}\n      tooltipProps={\n        isHoverPreviewed ? {delay: STACKTRACE_PREVIEW_TOOLTIP_DELAY} : undefined\n      }\n      onClick={onToggleContext}\n    >\n      <IconChevron direction={isExpanded ? 'up' : 'down'} size=\"8px\" />\n    </StyledButton>\n  );\n}\n\nexport default Expander;\n\n// the Button's label has the padding of 3px because the button size has to be 16x16 px.\nconst StyledButton = styled(Button)`\n  margin-left: ${space(1)};\n  span:first-child {\n    padding: 3px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport {Frame} from 'sentry/types';\n\ntype Props = {\n  leadsToApp: boolean;\n  isExpanded?: boolean;\n  nextFrame?: Frame;\n};\n\nfunction LeadHint({leadsToApp, isExpanded, nextFrame}: Props) {\n  if (isExpanded || !leadsToApp) {\n    return null;\n  }\n\n  return (\n    <Wrapper className=\"leads-to-app-hint\" width={!nextFrame ? '115px' : ''}>\n      {!nextFrame ? t('Crashed in non-app') : t('Called from')}\n      {': '}\n    </Wrapper>\n  );\n}\n\nexport default LeadHint;\n\nconst Wrapper = styled('div')<{width?: string}>`\n  ${p => p.theme.overflowEllipsis}\n  max-width: ${p => (p.width ? p.width : '67px')}\n`;\n","import styled from '@emotion/styled';\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr auto;\n`;\n\nexport default Wrapper;\n","import styled from '@emotion/styled';\n\nimport {IconRefresh} from 'sentry/icons/iconRefresh';\nimport {tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport DefaultTitle from '../defaultTitle';\n\nimport Expander from './expander';\nimport LeadHint from './leadHint';\nimport Wrapper from './wrapper';\n\ntype Props = React.ComponentProps<typeof Expander> &\n  React.ComponentProps<typeof LeadHint> & {\n    frame: Frame;\n    isUsedForGrouping: boolean;\n    onClick?: () => void;\n    onMouseDown?: React.MouseEventHandler<HTMLDivElement>;\n    timesRepeated?: number;\n  };\n\nfunction Default({\n  frame,\n  nextFrame,\n  isHoverPreviewed,\n  isExpanded,\n  platform,\n  timesRepeated,\n  isUsedForGrouping,\n  leadsToApp,\n  onMouseDown,\n  onClick,\n  ...props\n}: Props) {\n  function renderRepeats() {\n    if (defined(timesRepeated) && timesRepeated > 0) {\n      return (\n        <RepeatedFrames\n          title={tn('Frame repeated %s time', 'Frame repeated %s times', timesRepeated)}\n        >\n          <RepeatedContent>\n            <StyledIconRefresh />\n            <span>{timesRepeated}</span>\n          </RepeatedContent>\n        </RepeatedFrames>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <Wrapper className=\"title\" onMouseDown={onMouseDown} onClick={onClick}>\n      <VertCenterWrapper>\n        <Title>\n          <LeadHint\n            isExpanded={isExpanded}\n            nextFrame={nextFrame}\n            leadsToApp={leadsToApp}\n          />\n          <DefaultTitle\n            frame={frame}\n            platform={platform}\n            isHoverPreviewed={isHoverPreviewed}\n            isUsedForGrouping={isUsedForGrouping}\n          />\n        </Title>\n        {renderRepeats()}\n      </VertCenterWrapper>\n      <Expander\n        isExpanded={isExpanded}\n        isHoverPreviewed={isHoverPreviewed}\n        platform={platform}\n        {...props}\n      />\n    </Wrapper>\n  );\n}\n\nexport default Default;\n\nconst VertCenterWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')`\n  > * {\n    vertical-align: middle;\n    line-height: 1;\n  }\n`;\n\nconst RepeatedContent = styled(VertCenterWrapper)`\n  justify-content: center;\n`;\n\nconst RepeatedFrames = styled('div')`\n  display: inline-block;\n  border-radius: 50px;\n  padding: 1px 3px;\n  margin-left: ${space(1)};\n  border-width: thin;\n  border-style: solid;\n  border-color: ${p => p.theme.pink200};\n  color: ${p => p.theme.pink300};\n  background-color: ${p => p.theme.backgroundSecondary};\n  white-space: nowrap;\n`;\n\nconst StyledIconRefresh = styled(IconRefresh)`\n  margin-right: ${space(0.25)};\n`;\n","import styled from '@emotion/styled';\nimport scrollToElement from 'scroll-to-element';\n\nimport {t} from 'sentry/locale';\nimport {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Frame} from 'sentry/types';\n\nimport DebugImage from '../../debugMeta/debugImage';\nimport {combineStatus} from '../../debugMeta/utils';\nimport {SymbolicatorStatus} from '../../types';\nimport PackageLink from '../packageLink';\nimport PackageStatus from '../packageStatus';\nimport Symbol from '../symbol';\nimport TogglableAddress from '../togglableAddress';\nimport {getPlatform} from '../utils';\n\nimport Expander from './expander';\nimport LeadHint from './leadHint';\nimport Wrapper from './wrapper';\n\ntype Props = React.ComponentProps<typeof Expander> &\n  React.ComponentProps<typeof LeadHint> & {\n    frame: Frame;\n    isUsedForGrouping: boolean;\n    image?: React.ComponentProps<typeof DebugImage>['image'];\n    includeSystemFrames?: boolean;\n    isFrameAfterLastNonApp?: boolean;\n    maxLengthOfRelativeAddress?: number;\n    onAddressToggle?: (event: React.MouseEvent<SVGElement>) => void;\n    onClick?: () => void;\n    onFunctionNameToggle?: (event: React.MouseEvent<SVGElement>) => void;\n    onMouseDown?: React.MouseEventHandler<HTMLDivElement>;\n    prevFrame?: Frame;\n    showCompleteFunctionName?: boolean;\n    showingAbsoluteAddress?: boolean;\n  };\n\nfunction Native({\n  frame,\n  isFrameAfterLastNonApp,\n  isExpanded,\n  isHoverPreviewed,\n  onAddressToggle,\n  image,\n  includeSystemFrames,\n  showingAbsoluteAddress,\n  showCompleteFunctionName,\n  onFunctionNameToggle,\n  maxLengthOfRelativeAddress,\n  platform,\n  prevFrame,\n  isUsedForGrouping,\n  nextFrame,\n  leadsToApp,\n  onMouseDown,\n  onClick,\n  ...props\n}: Props) {\n  const {instructionAddr, trust, addrMode, symbolicatorStatus} = frame ?? {};\n\n  function packageStatus() {\n    // this is the status of image that belongs to this frame\n    if (!image) {\n      return 'empty';\n    }\n\n    const combinedStatus = combineStatus(image.debug_status, image.unwind_status);\n\n    switch (combinedStatus) {\n      case 'unused':\n        return 'empty';\n      case 'found':\n        return 'success';\n      default:\n        return 'error';\n    }\n  }\n\n  function makeFilter(addr: string): string {\n    if (!(!addrMode || addrMode === 'abs') && image) {\n      return `${image.debug_id}!${addr}`;\n    }\n\n    return addr;\n  }\n\n  function scrollToImage(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.stopPropagation(); // to prevent collapsing if collapsible\n\n    if (instructionAddr) {\n      DebugMetaActions.updateFilter(makeFilter(instructionAddr));\n    }\n    scrollToElement('#images-loaded');\n  }\n\n  const shouldShowLinkToImage =\n    !!symbolicatorStatus &&\n    symbolicatorStatus !== SymbolicatorStatus.UNKNOWN_IMAGE &&\n    !isHoverPreviewed;\n\n  const isInlineFrame =\n    prevFrame &&\n    getPlatform(frame.platform, platform ?? 'other') ===\n      (prevFrame.platform || platform) &&\n    instructionAddr === prevFrame.instructionAddr;\n\n  const isFoundByStackScanning = trust === 'scan' || trust === 'cfi-scan';\n\n  return (\n    <Wrapper className=\"title as-table\" onMouseDown={onMouseDown} onClick={onClick}>\n      <NativeLineContent isFrameAfterLastNonApp={!!isFrameAfterLastNonApp}>\n        <PackageInfo>\n          <LeadHint\n            isExpanded={isExpanded}\n            nextFrame={nextFrame}\n            leadsToApp={leadsToApp}\n          />\n          <PackageLink\n            includeSystemFrames={!!includeSystemFrames}\n            withLeadHint={!(isExpanded || !leadsToApp)}\n            packagePath={frame.package}\n            onClick={scrollToImage}\n            isClickable={shouldShowLinkToImage}\n            isHoverPreviewed={isHoverPreviewed}\n          >\n            {!isHoverPreviewed && (\n              <PackageStatus\n                status={packageStatus()}\n                tooltip={t('Go to Images Loaded')}\n              />\n            )}\n          </PackageLink>\n        </PackageInfo>\n        {instructionAddr && (\n          <TogglableAddress\n            address={instructionAddr}\n            startingAddress={image ? image.image_addr : null}\n            isAbsolute={!!showingAbsoluteAddress}\n            isFoundByStackScanning={isFoundByStackScanning}\n            isInlineFrame={!!isInlineFrame}\n            onToggle={onAddressToggle}\n            relativeAddressMaxlength={maxLengthOfRelativeAddress}\n            isHoverPreviewed={isHoverPreviewed}\n          />\n        )}\n        <Symbol\n          frame={frame}\n          showCompleteFunctionName={!!showCompleteFunctionName}\n          onFunctionNameToggle={onFunctionNameToggle}\n          isHoverPreviewed={isHoverPreviewed}\n          isUsedForGrouping={isUsedForGrouping}\n        />\n      </NativeLineContent>\n      <Expander\n        isExpanded={isExpanded}\n        isHoverPreviewed={isHoverPreviewed}\n        platform={platform}\n        {...props}\n      />\n    </Wrapper>\n  );\n}\n\nexport default Native;\n\nconst PackageInfo = styled('span')`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  order: 2;\n  align-items: flex-start;\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    order: 0;\n  }\n`;\n\nconst NativeLineContent = styled('div')<{isFrameAfterLastNonApp: boolean}>`\n  display: grid;\n  flex: 1;\n  gap: ${space(0.5)};\n  grid-template-columns: auto 1fr;\n  align-items: center;\n  justify-content: flex-start;\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '200px' : '150px')} minmax(117px, auto)\n      1fr;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.large}) and (max-width: ${props =>\n      props.theme.breakpoints.xlarge}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '180px' : '140px')} minmax(117px, auto)\n      1fr;\n  }\n`;\n","import {useContext} from 'react';\nimport styled from '@emotion/styled';\nimport scrollToElement from 'scroll-to-element';\n\nimport {TraceEventDataSectionContext} from 'sentry/components/events/traceEventDataSection';\nimport {t} from 'sentry/locale';\nimport {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Frame} from 'sentry/types';\n\nimport DebugImage from '../../debugMeta/debugImage';\nimport {combineStatus} from '../../debugMeta/utils';\nimport {SymbolicatorStatus} from '../../types';\nimport PackageLink from '../packageLink';\nimport PackageStatus from '../packageStatus';\nimport Symbol from '../symbol';\nimport TogglableAddress from '../togglableAddress';\nimport {getPlatform} from '../utils';\n\nimport Expander from './expander';\nimport LeadHint from './leadHint';\nimport Wrapper from './wrapper';\n\ntype Props = React.ComponentProps<typeof Expander> &\n  React.ComponentProps<typeof LeadHint> & {\n    frame: Frame;\n    isUsedForGrouping: boolean;\n    image?: React.ComponentProps<typeof DebugImage>['image'];\n    includeSystemFrames?: boolean;\n    isFrameAfterLastNonApp?: boolean;\n    maxLengthOfRelativeAddress?: number;\n    onClick?: () => void;\n    onMouseDown?: React.MouseEventHandler<HTMLDivElement>;\n    prevFrame?: Frame;\n  };\n\nfunction Native({\n  frame,\n  isFrameAfterLastNonApp,\n  isExpanded,\n  isHoverPreviewed,\n  image,\n  includeSystemFrames,\n  maxLengthOfRelativeAddress,\n  platform,\n  prevFrame,\n  isUsedForGrouping,\n  nextFrame,\n  leadsToApp,\n  onMouseDown,\n  onClick,\n  ...props\n}: Props) {\n  const traceEventDataSectionContext = useContext(TraceEventDataSectionContext);\n\n  if (!traceEventDataSectionContext) {\n    return null;\n  }\n\n  const {instructionAddr, trust, addrMode, symbolicatorStatus} = frame ?? {};\n\n  function packageStatus() {\n    // this is the status of image that belongs to this frame\n    if (!image) {\n      return 'empty';\n    }\n\n    const combinedStatus = combineStatus(image.debug_status, image.unwind_status);\n\n    switch (combinedStatus) {\n      case 'unused':\n        return 'empty';\n      case 'found':\n        return 'success';\n      default:\n        return 'error';\n    }\n  }\n\n  function makeFilter(addr: string): string {\n    if (!(!addrMode || addrMode === 'abs') && image) {\n      return `${image.debug_id}!${addr}`;\n    }\n\n    return addr;\n  }\n\n  function scrollToImage(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.stopPropagation(); // to prevent collapsing if collapsible\n\n    if (instructionAddr) {\n      DebugMetaActions.updateFilter(makeFilter(instructionAddr));\n    }\n    scrollToElement('#images-loaded');\n  }\n\n  const shouldShowLinkToImage =\n    !!symbolicatorStatus &&\n    symbolicatorStatus !== SymbolicatorStatus.UNKNOWN_IMAGE &&\n    !isHoverPreviewed;\n\n  const isInlineFrame =\n    prevFrame &&\n    getPlatform(frame.platform, platform ?? 'other') ===\n      (prevFrame.platform || platform) &&\n    instructionAddr === prevFrame.instructionAddr;\n\n  const isFoundByStackScanning = trust === 'scan' || trust === 'cfi-scan';\n\n  return (\n    <Wrapper className=\"title as-table\" onMouseDown={onMouseDown} onClick={onClick}>\n      <NativeLineContent isFrameAfterLastNonApp={!!isFrameAfterLastNonApp}>\n        <PackageInfo>\n          <LeadHint\n            isExpanded={isExpanded}\n            nextFrame={nextFrame}\n            leadsToApp={leadsToApp}\n          />\n          <PackageLink\n            includeSystemFrames={!!includeSystemFrames}\n            withLeadHint={!(isExpanded || !leadsToApp)}\n            packagePath={frame.package}\n            onClick={scrollToImage}\n            isClickable={shouldShowLinkToImage}\n            isHoverPreviewed={isHoverPreviewed}\n          >\n            {!isHoverPreviewed && (\n              <PackageStatus\n                status={packageStatus()}\n                tooltip={t('Go to Images Loaded')}\n              />\n            )}\n          </PackageLink>\n        </PackageInfo>\n        {instructionAddr && (\n          <TogglableAddress\n            address={instructionAddr}\n            startingAddress={image ? image.image_addr : null}\n            isAbsolute={traceEventDataSectionContext.display.includes(\n              'absolute-addresses'\n            )}\n            isFoundByStackScanning={isFoundByStackScanning}\n            isInlineFrame={!!isInlineFrame}\n            relativeAddressMaxlength={maxLengthOfRelativeAddress}\n            isHoverPreviewed={isHoverPreviewed}\n          />\n        )}\n        <Symbol\n          frame={frame}\n          showCompleteFunctionName={traceEventDataSectionContext.display.includes(\n            'verbose-function-names'\n          )}\n          absoluteFilePaths={traceEventDataSectionContext.display.includes(\n            'absolute-file-paths'\n          )}\n          isHoverPreviewed={isHoverPreviewed}\n          isUsedForGrouping={isUsedForGrouping}\n          nativeStackTraceV2\n        />\n      </NativeLineContent>\n      <Expander\n        isExpanded={isExpanded}\n        isHoverPreviewed={isHoverPreviewed}\n        platform={platform}\n        {...props}\n      />\n    </Wrapper>\n  );\n}\n\nexport default Native;\n\nconst PackageInfo = styled('span')`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  order: 2;\n  align-items: flex-start;\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    order: 0;\n  }\n`;\n\nconst NativeLineContent = styled('div')<{isFrameAfterLastNonApp: boolean}>`\n  display: grid;\n  flex: 1;\n  gap: ${space(0.5)};\n  grid-template-columns: auto 1fr;\n  align-items: center;\n  justify-content: flex-start;\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '200px' : '150px')} minmax(117px, auto)\n      1fr;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.large}) and (max-width: ${props =>\n      props.theme.breakpoints.xlarge}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '180px' : '140px')} minmax(117px, auto)\n      1fr;\n  }\n`;\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport ListItem from 'sentry/components/list/listItem';\nimport StrictClick from 'sentry/components/strictClick';\nimport {PlatformType, SentryAppComponent} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withSentryAppComponents from 'sentry/utils/withSentryAppComponents';\n\nimport Context from '../context';\nimport {PackageStatusIcon} from '../packageStatus';\nimport {FunctionNameToggleIcon} from '../symbol';\nimport {AddressToggleIcon} from '../togglableAddress';\nimport {\n  getPlatform,\n  hasAssembly,\n  hasContextRegisters,\n  hasContextSource,\n  hasContextVars,\n  isExpandable,\n} from '../utils';\n\nimport Default from './default';\nimport Native from './native';\nimport NativeV2 from './nativeV2';\n\ntype Props = Omit<\n  React.ComponentProps<typeof Native>,\n  'onToggleContext' | 'isExpandable' | 'leadsToApp' | 'hasGroupingBadge'\n> &\n  Omit<\n    React.ComponentProps<typeof Default>,\n    'onToggleContext' | 'isExpandable' | 'leadsToApp' | 'hasGroupingBadge'\n  > & {\n    components: Array<SentryAppComponent>;\n    event: Event;\n    registers: Record<string, string>;\n    emptySourceNotation?: boolean;\n    isOnlyFrame?: boolean;\n    nativeV2?: boolean;\n  };\n\nfunction Line({\n  frame,\n  nextFrame,\n  prevFrame,\n  timesRepeated,\n  includeSystemFrames,\n  onAddressToggle,\n  onFunctionNameToggle,\n  showingAbsoluteAddress,\n  showCompleteFunctionName,\n  isFrameAfterLastNonApp,\n  isUsedForGrouping,\n  maxLengthOfRelativeAddress,\n  image,\n  registers,\n  isOnlyFrame,\n  event,\n  components,\n  emptySourceNotation = false,\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed = false,\n  nativeV2 = false,\n  ...props\n}: Props) {\n  /* Prioritize the frame platform but fall back to the platform\n   of the stack trace / exception */\n  const platform = getPlatform(frame.platform, props.platform ?? 'other') as PlatformType;\n  const leadsToApp = !frame.inApp && ((nextFrame && nextFrame.inApp) || !nextFrame);\n\n  const expandable =\n    !leadsToApp || includeSystemFrames\n      ? isExpandable({\n          frame,\n          registers,\n          platform,\n          emptySourceNotation,\n          isOnlyFrame,\n        })\n      : false;\n\n  const [isExpanded, setIsExpanded] = useState(\n    expandable ? props.isExpanded ?? false : false\n  );\n\n  function toggleContext(evt: React.MouseEvent) {\n    evt.preventDefault();\n    setIsExpanded(!isExpanded);\n  }\n\n  function renderLine() {\n    switch (platform) {\n      case 'objc':\n      case 'cocoa':\n      case 'native':\n        return nativeV2 ? (\n          <NativeV2\n            leadsToApp={leadsToApp}\n            frame={frame}\n            prevFrame={prevFrame}\n            nextFrame={nextFrame}\n            isHoverPreviewed={isHoverPreviewed}\n            platform={platform}\n            isExpanded={isExpanded}\n            isExpandable={expandable}\n            includeSystemFrames={includeSystemFrames}\n            isFrameAfterLastNonApp={isFrameAfterLastNonApp}\n            onToggleContext={toggleContext}\n            image={image}\n            maxLengthOfRelativeAddress={maxLengthOfRelativeAddress}\n            isUsedForGrouping={isUsedForGrouping}\n          />\n        ) : (\n          <Native\n            leadsToApp={leadsToApp}\n            frame={frame}\n            prevFrame={prevFrame}\n            nextFrame={nextFrame}\n            isHoverPreviewed={isHoverPreviewed}\n            platform={platform}\n            isExpanded={isExpanded}\n            isExpandable={expandable}\n            onAddressToggle={onAddressToggle}\n            onFunctionNameToggle={onFunctionNameToggle}\n            includeSystemFrames={includeSystemFrames}\n            showingAbsoluteAddress={showingAbsoluteAddress}\n            showCompleteFunctionName={showCompleteFunctionName}\n            isFrameAfterLastNonApp={isFrameAfterLastNonApp}\n            onToggleContext={toggleContext}\n            image={image}\n            maxLengthOfRelativeAddress={maxLengthOfRelativeAddress}\n            isUsedForGrouping={isUsedForGrouping}\n          />\n        );\n      default:\n        return (\n          <Default\n            leadsToApp={leadsToApp}\n            frame={frame}\n            nextFrame={nextFrame}\n            timesRepeated={timesRepeated}\n            isHoverPreviewed={isHoverPreviewed}\n            platform={platform}\n            isExpanded={isExpanded}\n            isExpandable={expandable}\n            onToggleContext={toggleContext}\n            isUsedForGrouping={isUsedForGrouping}\n          />\n        );\n    }\n  }\n\n  const className = classNames({\n    frame: true,\n    'is-expandable': expandable,\n    expanded: isExpanded,\n    collapsed: !isExpanded,\n    'system-frame': !frame.inApp,\n    'frame-errors': !!(frame.errors ?? []).length,\n    'leads-to-app': leadsToApp,\n  });\n\n  return (\n    <StyleListItem className={className} data-test-id=\"stack-trace-frame\">\n      <StrictClick onClick={expandable ? toggleContext : undefined}>\n        {renderLine()}\n      </StrictClick>\n      <Context\n        frame={frame}\n        event={event}\n        registers={registers}\n        components={components}\n        hasContextSource={hasContextSource(frame)}\n        hasContextVars={hasContextVars(frame)}\n        hasContextRegisters={hasContextRegisters(registers)}\n        emptySourceNotation={emptySourceNotation}\n        hasAssembly={hasAssembly(frame, platform)}\n        expandable={expandable}\n        isExpanded={isExpanded}\n      />\n    </StyleListItem>\n  );\n}\n\nexport default withSentryAppComponents(Line, {componentType: 'stacktrace-link'});\n\nconst StyleListItem = styled(ListItem)`\n  overflow: hidden;\n\n  :first-child {\n    border-top: none;\n  }\n\n  ${PackageStatusIcon} {\n    flex-shrink: 0;\n  }\n  :hover {\n    ${PackageStatusIcon} {\n      visibility: visible;\n    }\n    ${AddressToggleIcon} {\n      visibility: visible;\n    }\n    ${FunctionNameToggleIcon} {\n      visibility: visible;\n    }\n  }\n`;\n","import {cloneElement, Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {PlatformIcon} from 'platformicons';\n\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame, Group, PlatformType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {StacktraceType} from 'sentry/types/stacktrace';\n\nimport Line from '../../frame/lineV2';\nimport {getImageRange, parseAddress, stackTracePlatformIcon} from '../../utils';\n\ntype Props = {\n  data: StacktraceType;\n  event: Event;\n  platform: PlatformType;\n  className?: string;\n  expandFirstFrame?: boolean;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  includeSystemFrames?: boolean;\n  isHoverPreviewed?: boolean;\n  newestFirst?: boolean;\n};\n\nfunction Content({\n  data,\n  platform,\n  event,\n  newestFirst,\n  className,\n  isHoverPreviewed,\n  groupingCurrentLevel,\n  includeSystemFrames = true,\n  expandFirstFrame = true,\n}: Props) {\n  const [showingAbsoluteAddresses, setShowingAbsoluteAddresses] = useState(false);\n  const [showCompleteFunctionName, setShowCompleteFunctionName] = useState(false);\n\n  const {frames = [], framesOmitted, registers} = data;\n\n  function findImageForAddress(\n    address: Frame['instructionAddr'],\n    addrMode: Frame['addrMode']\n  ) {\n    const images = event.entries.find(entry => entry.type === 'debugmeta')?.data?.images;\n\n    return images && address\n      ? images.find((img, idx) => {\n          if (!addrMode || addrMode === 'abs') {\n            const [startAddress, endAddress] = getImageRange(img);\n            return address >= (startAddress as any) && address < (endAddress as any);\n          }\n\n          return addrMode === `rel:${idx}`;\n        })\n      : null;\n  }\n\n  function getClassName() {\n    if (includeSystemFrames) {\n      return `${className} traceback full-traceback`;\n    }\n\n    return `${className} traceback in-app-traceback`;\n  }\n\n  function isFrameUsedForGrouping(frame: Frame) {\n    const {minGroupingLevel} = frame;\n\n    if (groupingCurrentLevel === undefined || minGroupingLevel === undefined) {\n      return false;\n    }\n\n    return minGroupingLevel <= groupingCurrentLevel;\n  }\n\n  function handleToggleAddresses(mouseEvent: React.MouseEvent<SVGElement>) {\n    mouseEvent.stopPropagation(); // to prevent collapsing if collapsible\n    setShowingAbsoluteAddresses(!showingAbsoluteAddresses);\n  }\n\n  function handleToggleFunctionName(mouseEvent: React.MouseEvent<SVGElement>) {\n    mouseEvent.stopPropagation(); // to prevent collapsing if collapsible\n    setShowCompleteFunctionName(!showCompleteFunctionName);\n  }\n\n  function getLastFrameIndex() {\n    const inAppFrameIndexes = frames\n      .map((frame, frameIndex) => {\n        if (frame.inApp) {\n          return frameIndex;\n        }\n        return undefined;\n      })\n      .filter(frame => frame !== undefined);\n\n    return !inAppFrameIndexes.length\n      ? frames.length - 1\n      : inAppFrameIndexes[inAppFrameIndexes.length - 1];\n  }\n\n  function renderOmittedFrames(firstFrameOmitted: any, lastFrameOmitted: any) {\n    return (\n      <ListItem className=\"frame frames-omitted\">\n        {t(\n          'Frames %d until %d were omitted and not available.',\n          firstFrameOmitted,\n          lastFrameOmitted\n        )}\n      </ListItem>\n    );\n  }\n\n  function renderConvertedFrames() {\n    const firstFrameOmitted = framesOmitted?.[0] ?? null;\n    const lastFrameOmitted = framesOmitted?.[1] ?? null;\n    const lastFrameIndex = getLastFrameIndex();\n\n    let nRepeats = 0;\n\n    const maxLengthOfAllRelativeAddresses = frames.reduce(\n      (maxLengthUntilThisPoint, frame) => {\n        const correspondingImage = findImageForAddress(\n          frame.instructionAddr,\n          frame.addrMode\n        );\n\n        try {\n          const relativeAddress = (\n            parseAddress(frame.instructionAddr) -\n            parseAddress(correspondingImage.image_addr)\n          ).toString(16);\n\n          return maxLengthUntilThisPoint > relativeAddress.length\n            ? maxLengthUntilThisPoint\n            : relativeAddress.length;\n        } catch {\n          return maxLengthUntilThisPoint;\n        }\n      },\n      0\n    );\n\n    const convertedFrames = frames\n      .map((frame, frameIndex) => {\n        const prevFrame = frames[frameIndex - 1];\n        const nextFrame = frames[frameIndex + 1];\n\n        const repeatedFrame =\n          nextFrame &&\n          frame.lineNo === nextFrame.lineNo &&\n          frame.instructionAddr === nextFrame.instructionAddr &&\n          frame.package === nextFrame.package &&\n          frame.module === nextFrame.module &&\n          frame.function === nextFrame.function;\n\n        if (repeatedFrame) {\n          nRepeats++;\n        }\n\n        const isUsedForGrouping = isFrameUsedForGrouping(frame);\n\n        const isVisible =\n          includeSystemFrames ||\n          frame.inApp ||\n          (nextFrame && nextFrame.inApp) ||\n          // the last non-app frame\n          (!frame.inApp && !nextFrame) ||\n          isUsedForGrouping;\n\n        if (isVisible && !repeatedFrame) {\n          const lineProps = {\n            event,\n            frame,\n            prevFrame,\n            nextFrame,\n            isExpanded: expandFirstFrame && lastFrameIndex === frameIndex,\n            emptySourceNotation: lastFrameIndex === frameIndex && frameIndex === 0,\n            platform,\n            timesRepeated: nRepeats,\n            showingAbsoluteAddress: showingAbsoluteAddresses,\n            onAddressToggle: handleToggleAddresses,\n            image: findImageForAddress(frame.instructionAddr, frame.addrMode),\n            maxLengthOfRelativeAddress: maxLengthOfAllRelativeAddresses,\n            registers: {},\n            includeSystemFrames,\n            onFunctionNameToggle: handleToggleFunctionName,\n            showCompleteFunctionName,\n            isHoverPreviewed,\n            isUsedForGrouping,\n          };\n\n          nRepeats = 0;\n\n          if (frameIndex === firstFrameOmitted) {\n            return (\n              <Fragment key={frameIndex}>\n                <Line {...lineProps} />\n                {renderOmittedFrames(firstFrameOmitted, lastFrameOmitted)}\n              </Fragment>\n            );\n          }\n\n          return <Line key={frameIndex} {...lineProps} />;\n        }\n\n        if (!repeatedFrame) {\n          nRepeats = 0;\n        }\n\n        if (frameIndex !== firstFrameOmitted) {\n          return null;\n        }\n\n        return renderOmittedFrames(firstFrameOmitted, lastFrameOmitted);\n      })\n      .filter(frame => !!frame) as React.ReactElement[];\n\n    if (convertedFrames.length > 0 && registers) {\n      const lastFrame = convertedFrames.length - 1;\n      convertedFrames[lastFrame] = cloneElement(convertedFrames[lastFrame], {\n        registers,\n      });\n\n      if (!newestFirst) {\n        return convertedFrames;\n      }\n\n      return [...convertedFrames].reverse();\n    }\n\n    if (!newestFirst) {\n      return convertedFrames;\n    }\n\n    return [...convertedFrames].reverse();\n  }\n\n  return (\n    <Wrapper className={getClassName()} data-test-id=\"stack-trace-content-v2\">\n      <StyledPlatformIcon\n        platform={stackTracePlatformIcon(platform, frames)}\n        size=\"20px\"\n        style={{borderRadius: '3px 0 0 3px'}}\n      />\n      <StyledList>{renderConvertedFrames()}</StyledList>\n    </Wrapper>\n  );\n}\n\nexport default Content;\n\nconst Wrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  position: absolute;\n  margin-top: -1px;\n  left: -${space(3)};\n`;\n\nconst StyledList = styled(List)`\n  gap: 0;\n`;\n","import {Fragment, MouseEvent, useContext, useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport scrollToElement from 'scroll-to-element';\n\nimport Button from 'sentry/components/button';\nimport {\n  hasAssembly,\n  hasContextRegisters,\n  hasContextSource,\n  hasContextVars,\n  isDotnet,\n  isExpandable,\n  trimPackage,\n} from 'sentry/components/events/interfaces/frame/utils';\nimport {formatAddress, parseAddress} from 'sentry/components/events/interfaces/utils';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {TraceEventDataSectionContext} from 'sentry/components/events/traceEventDataSection';\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport StrictClick from 'sentry/components/strictClick';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconChevron} from 'sentry/icons/iconChevron';\nimport {IconInfo} from 'sentry/icons/iconInfo';\nimport {IconQuestion} from 'sentry/icons/iconQuestion';\nimport {IconWarning} from 'sentry/icons/iconWarning';\nimport {t} from 'sentry/locale';\nimport {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Frame, PlatformType, SentryAppComponent} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {Color} from 'sentry/utils/theme';\nimport withSentryAppComponents from 'sentry/utils/withSentryAppComponents';\n\nimport DebugImage from './debugMeta/debugImage';\nimport {combineStatus} from './debugMeta/utils';\nimport Context from './frame/context';\nimport {SymbolicatorStatus} from './types';\n\ntype Props = {\n  components: Array<SentryAppComponent>;\n  event: Event;\n  frame: Frame;\n  isUsedForGrouping: boolean;\n  platform: PlatformType;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  image?: React.ComponentProps<typeof DebugImage>['image'];\n  includeSystemFrames?: boolean;\n  isExpanded?: boolean;\n  isHoverPreviewed?: boolean;\n  isOnlyFrame?: boolean;\n  maxLengthOfRelativeAddress?: number;\n  nextFrame?: Frame;\n  prevFrame?: Frame;\n};\n\nfunction NativeFrame({\n  frame,\n  nextFrame,\n  prevFrame,\n  includeSystemFrames,\n  isUsedForGrouping,\n  maxLengthOfRelativeAddress,\n  image,\n  registers,\n  isOnlyFrame,\n  event,\n  components,\n  isExpanded,\n  platform,\n  emptySourceNotation = false,\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed = false,\n}: Props) {\n  const traceEventDataSectionContext = useContext(TraceEventDataSectionContext);\n\n  const absolute = traceEventDataSectionContext?.display.includes('absolute-addresses');\n\n  const fullStackTrace = traceEventDataSectionContext?.fullStackTrace;\n\n  const fullFunctionName = traceEventDataSectionContext?.display.includes(\n    'verbose-function-names'\n  );\n\n  const absoluteFilePaths =\n    traceEventDataSectionContext?.display.includes('absolute-file-paths');\n\n  const tooltipDelay = isHoverPreviewed ? STACKTRACE_PREVIEW_TOOLTIP_DELAY : undefined;\n  const foundByStackScanning = frame.trust === 'scan' || frame.trust === 'cfi-scan';\n  const startingAddress = image ? image.image_addr : null;\n  const packageClickable =\n    !!frame.symbolicatorStatus &&\n    frame.symbolicatorStatus !== SymbolicatorStatus.UNKNOWN_IMAGE &&\n    !isHoverPreviewed;\n\n  const leadsToApp = !frame.inApp && ((nextFrame && nextFrame.inApp) || !nextFrame);\n  const expandable =\n    !leadsToApp || includeSystemFrames\n      ? isExpandable({\n          frame,\n          registers,\n          platform,\n          emptySourceNotation,\n          isOnlyFrame,\n        })\n      : false;\n\n  const inlineFrame =\n    prevFrame &&\n    platform === (prevFrame.platform || platform) &&\n    frame.instructionAddr === prevFrame.instructionAddr;\n\n  const functionNameHiddenDetails =\n    defined(frame.rawFunction) &&\n    defined(frame.function) &&\n    frame.function !== frame.rawFunction;\n\n  const [expanded, setExpanded] = useState(expandable ? isExpanded ?? false : false);\n\n  function getRelativeAddress() {\n    if (!startingAddress) {\n      return '';\n    }\n\n    const relativeAddress = formatAddress(\n      parseAddress(frame.instructionAddr) - parseAddress(startingAddress),\n      maxLengthOfRelativeAddress\n    );\n\n    return `+${relativeAddress}`;\n  }\n\n  function getAddressTooltip() {\n    if (inlineFrame && foundByStackScanning) {\n      return t('Inline frame, found by stack scanning');\n    }\n\n    if (inlineFrame) {\n      return t('Inline frame');\n    }\n\n    if (foundByStackScanning) {\n      return t('Found by stack scanning');\n    }\n\n    return undefined;\n  }\n\n  function getFunctionName() {\n    if (functionNameHiddenDetails && fullFunctionName && frame.rawFunction) {\n      return {\n        value: frame.rawFunction,\n        meta: getMeta(frame, 'rawFunction'),\n      };\n    }\n\n    if (frame.function) {\n      return {\n        value: frame.function,\n        meta: getMeta(frame, 'function'),\n      };\n    }\n\n    return undefined;\n  }\n\n  function getStatus() {\n    // this is the status of image that belongs to this frame\n    if (!image) {\n      return undefined;\n    }\n\n    const combinedStatus = combineStatus(image.debug_status, image.unwind_status);\n\n    switch (combinedStatus) {\n      case 'unused':\n        return undefined;\n      case 'found':\n        return 'success';\n      default:\n        return 'error';\n    }\n  }\n\n  function handleGoToImagesLoaded(e: MouseEvent) {\n    e.stopPropagation(); // to prevent collapsing if collapsible\n\n    if (frame.instructionAddr) {\n      const searchTerm =\n        !(!frame.addrMode || frame.addrMode === 'abs') && image\n          ? `${image.debug_id}!${frame.instructionAddr}`\n          : frame.instructionAddr;\n\n      DebugMetaActions.updateFilter(searchTerm);\n    }\n\n    scrollToElement('#images-loaded');\n  }\n\n  function handleToggleContext(e: MouseEvent) {\n    if (!expandable) {\n      return;\n    }\n    e.preventDefault();\n    setExpanded(!expanded);\n  }\n\n  const relativeAddress = getRelativeAddress();\n  const addressTooltip = getAddressTooltip();\n  const functionName = getFunctionName();\n  const status = getStatus();\n\n  return (\n    <GridRow\n      inApp={frame.inApp}\n      expandable={expandable}\n      expanded={expanded}\n      data-test-id=\"stack-trace-frame\"\n    >\n      <StrictClick onClick={handleToggleContext}>\n        <StrictClickContent>\n          <StatusCell>\n            {(status === 'error' || status === undefined) &&\n              (packageClickable ? (\n                <PackageStatusButton\n                  onClick={handleGoToImagesLoaded}\n                  title={t('Go to images loaded')}\n                  aria-label={t('Go to images loaded')}\n                  icon={\n                    status === 'error' ? (\n                      <IconQuestion size=\"sm\" color=\"red300\" />\n                    ) : (\n                      <IconWarning size=\"sm\" color=\"red300\" />\n                    )\n                  }\n                  size=\"zero\"\n                  borderless\n                />\n              ) : status === 'error' ? (\n                <IconQuestion size=\"sm\" color=\"red300\" />\n              ) : (\n                <IconWarning size=\"sm\" color=\"red300\" />\n              ))}\n          </StatusCell>\n          <PackageCell>\n            {!fullStackTrace && !expanded && leadsToApp && (\n              <Fragment>\n                {!nextFrame ? t('Crashed in non-app') : t('Called from')}\n                {':'}&nbsp;\n              </Fragment>\n            )}\n            <span>\n              <Tooltip\n                title={frame.package ?? t('Go to images loaded')}\n                delay={tooltipDelay}\n                disabled={frame.package ? false : !packageClickable}\n                containerDisplayMode=\"inline-flex\"\n              >\n                <Package\n                  color={\n                    status === undefined || status === 'error'\n                      ? 'red300'\n                      : packageClickable\n                      ? 'blue300'\n                      : undefined\n                  }\n                  onClick={packageClickable ? handleGoToImagesLoaded : undefined}\n                >\n                  {frame.package ? trimPackage(frame.package) : `<${t('unknown')}>`}\n                </Package>\n              </Tooltip>\n            </span>\n          </PackageCell>\n          <AddressCell>\n            <Tooltip\n              title={addressTooltip}\n              disabled={!(foundByStackScanning || inlineFrame)}\n              delay={tooltipDelay}\n            >\n              {!relativeAddress || absolute ? frame.instructionAddr : relativeAddress}\n            </Tooltip>\n          </AddressCell>\n          <GroupingCell>\n            {isUsedForGrouping && (\n              <Tooltip\n                title={t('This frame appears in all other events related to this issue')}\n                containerDisplayMode=\"inline-flex\"\n              >\n                <IconInfo size=\"sm\" color=\"gray300\" />\n              </Tooltip>\n            )}\n          </GroupingCell>\n          <FunctionNameCell>\n            <FunctionName>\n              {functionName ? (\n                <AnnotatedText value={functionName.value} meta={functionName.meta} />\n              ) : (\n                `<${t('unknown')}>`\n              )}\n            </FunctionName>\n            {frame.filename && (\n              <Tooltip\n                title={frame.absPath}\n                disabled={!(defined(frame.absPath) && frame.absPath !== frame.filename)}\n                delay={tooltipDelay}\n                containerDisplayMode=\"inline-flex\"\n              >\n                <FileName>\n                  {'('}\n                  {absoluteFilePaths ? frame.absPath : frame.filename}\n                  {frame.lineNo && `:${frame.lineNo}`}\n                  {')'}\n                </FileName>\n              </Tooltip>\n            )}\n          </FunctionNameCell>\n          <ExpandCell>\n            {expandable && (\n              <ToggleButton\n                size=\"zero\"\n                css={isDotnet(platform) && {display: 'block !important'}} // remove important once we get rid of css files\n                title={t('Toggle Context')}\n                aria-label={t('Toggle Context')}\n                tooltipProps={\n                  isHoverPreviewed ? {delay: STACKTRACE_PREVIEW_TOOLTIP_DELAY} : undefined\n                }\n                icon={<IconChevron size=\"8px\" direction={expanded ? 'up' : 'down'} />}\n              />\n            )}\n          </ExpandCell>\n        </StrictClickContent>\n      </StrictClick>\n      <RegistersCell>\n        {expanded && (\n          <Registers\n            frame={frame}\n            event={event}\n            registers={registers}\n            components={components}\n            hasContextSource={hasContextSource(frame)}\n            hasContextVars={hasContextVars(frame)}\n            hasContextRegisters={hasContextRegisters(registers)}\n            emptySourceNotation={emptySourceNotation}\n            hasAssembly={hasAssembly(frame, platform)}\n            expandable={expandable}\n            isExpanded={expanded}\n          />\n        )}\n      </RegistersCell>\n    </GridRow>\n  );\n}\n\nexport default withSentryAppComponents(NativeFrame, {componentType: 'stacktrace-link'});\n\nconst Cell = styled('div')`\n  padding: ${space(0.5)};\n  display: flex;\n  flex-wrap: wrap;\n  word-break: break-all;\n  align-items: flex-start;\n`;\n\nconst StatusCell = styled(Cell)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: 1/1;\n    grid-row: 1/1;\n  }\n`;\n\nconst PackageCell = styled(Cell)`\n  color: ${p => p.theme.subText};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: 2/2;\n    grid-row: 1/1;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(2, auto);\n  }\n`;\n\nconst AddressCell = styled(Cell)`\n  font-family: ${p => p.theme.text.familyMono};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: 3/3;\n    grid-row: 1/1;\n  }\n`;\n\nconst GroupingCell = styled(Cell)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: 1/1;\n    grid-row: 2/2;\n  }\n`;\n\nconst FunctionNameCell = styled(Cell)`\n  color: ${p => p.theme.textColor};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: 2/-1;\n    grid-row: 2/2;\n  }\n`;\n\nconst ExpandCell = styled(Cell)``;\n\nconst RegistersCell = styled('div')`\n  grid-column: 1/-1;\n  margin-left: -${space(0.5)};\n  margin-right: -${space(0.5)};\n  cursor: default;\n`;\n\nconst Registers = styled(Context)`\n  padding: 0;\n  margin: 0;\n`;\n\nconst ToggleButton = styled(Button)`\n  width: 16px;\n  height: 16px;\n`;\n\nconst Package = styled('span')<{color?: Color}>`\n  border-bottom: 1px dashed ${p => p.theme.border};\n  ${p => p.color && `color: ${p.theme[p.color]}`};\n  ${p => p.onClick && `cursor: pointer;`}\n`;\n\nconst FunctionName = styled('div')`\n  color: ${p => p.theme.headingColor};\n  margin-right: ${space(1)};\n`;\n\nconst FileName = styled('span')`\n  color: ${p => p.theme.subText};\n  border-bottom: 1px dashed ${p => p.theme.border};\n`;\n\nconst PackageStatusButton = styled(Button)`\n  padding: 0;\n  border: none;\n`;\n\nconst GridRow = styled('div')<{expandable: boolean; expanded: boolean; inApp: boolean}>`\n  ${p => p.expandable && `cursor: pointer;`};\n  ${p => p.inApp && `background: ${p.theme.bodyBackground};`};\n  ${p =>\n    !p.inApp &&\n    css`\n      color: ${p.theme.subText};\n      ${FunctionName} {\n        color: ${p.theme.subText};\n      }\n      ${FunctionNameCell} {\n        color: ${p.theme.subText};\n      }\n    `};\n\n  display: grid;\n  align-items: flex-start;\n  padding: ${space(0.5)};\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n\n  grid-template-columns: 24px 132px 138px 24px 1fr 24px;\n  grid-template-rows: 1fr;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 24px auto minmax(138px, 1fr) 24px;\n    grid-template-rows: repeat(2, auto);\n  }\n`;\n\nconst StrictClickContent = styled('div')`\n  display: contents;\n`;\n","import {cloneElement, Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Frame, Group, PlatformType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {StacktraceType} from 'sentry/types/stacktrace';\n\nimport NativeFrame from '../../nativeFrame';\nimport {getImageRange, parseAddress} from '../../utils';\n\ntype Props = {\n  data: StacktraceType;\n  event: Event;\n  platform: PlatformType;\n  expandFirstFrame?: boolean;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  includeSystemFrames?: boolean;\n  isHoverPreviewed?: boolean;\n  newestFirst?: boolean;\n};\n\nfunction Content({\n  data,\n  platform,\n  event,\n  newestFirst,\n  isHoverPreviewed,\n  groupingCurrentLevel,\n  includeSystemFrames = true,\n  expandFirstFrame = true,\n}: Props) {\n  const [showingAbsoluteAddresses, setShowingAbsoluteAddresses] = useState(false);\n  const [showCompleteFunctionName, setShowCompleteFunctionName] = useState(false);\n\n  const {frames = [], framesOmitted, registers} = data;\n\n  function findImageForAddress(\n    address: Frame['instructionAddr'],\n    addrMode: Frame['addrMode']\n  ) {\n    const images = event.entries.find(entry => entry.type === 'debugmeta')?.data?.images;\n\n    if (!images || !address) {\n      return null;\n    }\n\n    const image = images.find((img, idx) => {\n      if (!addrMode || addrMode === 'abs') {\n        const [startAddress, endAddress] = getImageRange(img);\n        return address >= (startAddress as any) && address < (endAddress as any);\n      }\n\n      return addrMode === `rel:${idx}`;\n    });\n\n    return image;\n  }\n\n  function isFrameUsedForGrouping(frame: Frame) {\n    const {minGroupingLevel} = frame;\n\n    if (groupingCurrentLevel === undefined || minGroupingLevel === undefined) {\n      return false;\n    }\n\n    return minGroupingLevel <= groupingCurrentLevel;\n  }\n\n  function handleToggleAddresses(mouseEvent: React.MouseEvent<SVGElement>) {\n    mouseEvent.stopPropagation(); // to prevent collapsing if collapsible\n    setShowingAbsoluteAddresses(!showingAbsoluteAddresses);\n  }\n\n  function handleToggleFunctionName(mouseEvent: React.MouseEvent<SVGElement>) {\n    mouseEvent.stopPropagation(); // to prevent collapsing if collapsible\n    setShowCompleteFunctionName(!showCompleteFunctionName);\n  }\n\n  function getLastFrameIndex() {\n    const inAppFrameIndexes = frames\n      .map((frame, frameIndex) => {\n        if (frame.inApp) {\n          return frameIndex;\n        }\n        return undefined;\n      })\n      .filter(frame => frame !== undefined);\n\n    return !inAppFrameIndexes.length\n      ? frames.length - 1\n      : inAppFrameIndexes[inAppFrameIndexes.length - 1];\n  }\n\n  function renderOmittedFrames(firstFrameOmitted: any, lastFrameOmitted: any) {\n    return t(\n      'Frames %d until %d were omitted and not available.',\n      firstFrameOmitted,\n      lastFrameOmitted\n    );\n  }\n\n  const firstFrameOmitted = framesOmitted?.[0] ?? null;\n  const lastFrameOmitted = framesOmitted?.[1] ?? null;\n  const lastFrameIndex = getLastFrameIndex();\n\n  let nRepeats = 0;\n\n  const maxLengthOfAllRelativeAddresses = frames.reduce(\n    (maxLengthUntilThisPoint, frame) => {\n      const correspondingImage = findImageForAddress(\n        frame.instructionAddr,\n        frame.addrMode\n      );\n\n      try {\n        const relativeAddress = (\n          parseAddress(frame.instructionAddr) -\n          parseAddress(correspondingImage.image_addr)\n        ).toString(16);\n\n        return maxLengthUntilThisPoint > relativeAddress.length\n          ? maxLengthUntilThisPoint\n          : relativeAddress.length;\n      } catch {\n        return maxLengthUntilThisPoint;\n      }\n    },\n    0\n  );\n\n  const convertedFrames = frames\n    .map((frame, frameIndex) => {\n      const prevFrame = frames[frameIndex - 1];\n      const nextFrame = frames[frameIndex + 1];\n\n      const repeatedFrame =\n        nextFrame &&\n        frame.lineNo === nextFrame.lineNo &&\n        frame.instructionAddr === nextFrame.instructionAddr &&\n        frame.package === nextFrame.package &&\n        frame.module === nextFrame.module &&\n        frame.function === nextFrame.function;\n\n      if (repeatedFrame) {\n        nRepeats++;\n      }\n\n      const isUsedForGrouping = isFrameUsedForGrouping(frame);\n\n      const isVisible =\n        includeSystemFrames ||\n        frame.inApp ||\n        (nextFrame && nextFrame.inApp) ||\n        // the last non-app frame\n        (!frame.inApp && !nextFrame) ||\n        isUsedForGrouping;\n\n      if (isVisible && !repeatedFrame) {\n        const frameProps = {\n          event,\n          frame,\n          prevFrame,\n          nextFrame,\n          isExpanded: expandFirstFrame && lastFrameIndex === frameIndex,\n          emptySourceNotation: lastFrameIndex === frameIndex && frameIndex === 0,\n          platform,\n          timesRepeated: nRepeats,\n          showingAbsoluteAddress: showingAbsoluteAddresses,\n          onAddressToggle: handleToggleAddresses,\n          image: findImageForAddress(frame.instructionAddr, frame.addrMode),\n          maxLengthOfRelativeAddress: maxLengthOfAllRelativeAddresses,\n          registers: {},\n          includeSystemFrames,\n          onFunctionNameToggle: handleToggleFunctionName,\n          showCompleteFunctionName,\n          isHoverPreviewed,\n          isUsedForGrouping,\n        };\n\n        nRepeats = 0;\n\n        if (frameIndex === firstFrameOmitted) {\n          return (\n            <Fragment key={frameIndex}>\n              <NativeFrame {...frameProps} />\n              {renderOmittedFrames(firstFrameOmitted, lastFrameOmitted)}\n            </Fragment>\n          );\n        }\n\n        return <NativeFrame key={frameIndex} {...frameProps} />;\n      }\n\n      if (!repeatedFrame) {\n        nRepeats = 0;\n      }\n\n      if (frameIndex !== firstFrameOmitted) {\n        return null;\n      }\n\n      return renderOmittedFrames(firstFrameOmitted, lastFrameOmitted);\n    })\n    .filter(frame => !!frame) as React.ReactElement[];\n\n  if (convertedFrames.length > 0 && registers) {\n    const lastFrame = convertedFrames.length - 1;\n    convertedFrames[lastFrame] = cloneElement(convertedFrames[lastFrame], {\n      registers,\n    });\n\n    return (\n      <Wrapper isHoverPreviewed={isHoverPreviewed} data-test-id=\"stack-trace\">\n        {!newestFirst ? convertedFrames : [...convertedFrames].reverse()}\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper isHoverPreviewed={isHoverPreviewed} data-test-id=\"stack-trace\">\n      {!newestFirst ? convertedFrames : [...convertedFrames].reverse()}\n    </Wrapper>\n  );\n}\n\nexport default Content;\n\nconst Wrapper = styled(Panel)<{isHoverPreviewed?: boolean}>`\n  display: grid;\n  overflow: hidden;\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 16px;\n  color: ${p => p.theme.gray500};\n  ${p =>\n    p.isHoverPreviewed &&\n    `\n      border: 0;\n      border-radius: 0;\n      box-shadow: none;\n      margin-bottom: 0;\n    `}\n`;\n","type Status =\n  | 'found'\n  | 'unused'\n  | 'missing'\n  | 'malformed'\n  | 'timeout'\n  | 'fetching_failed'\n  | 'other'\n  | null\n  | undefined;\n\nfunction getStatusWeight(status: Status) {\n  switch (status) {\n    case null:\n    case undefined:\n    case 'unused':\n      return 0;\n    case 'found':\n      return 1;\n    default:\n      return 2;\n  }\n}\n\nfunction combineStatus(debugStatus: Status, unwindStatus: Status): Status {\n  const debugWeight = getStatusWeight(debugStatus);\n  const unwindWeight = getStatusWeight(unwindStatus);\n\n  const combined = debugWeight >= unwindWeight ? debugStatus : unwindStatus;\n  return combined || 'unused';\n}\n\nfunction getFileName(path: string) {\n  const directorySeparator = /^([a-z]:\\\\|\\\\\\\\)/i.test(path) ? '\\\\' : '/';\n  return path.split(directorySeparator).pop();\n}\n\nexport {combineStatus, getFileName};\n","import styled from '@emotion/styled';\n\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  culture?: string;\n  filePath?: string | null;\n  name?: string;\n  publicKeyToken?: string;\n  version?: string;\n};\n\nfunction Assembly({name, version, culture, publicKeyToken, filePath}: Props) {\n  return (\n    <AssemblyWrapper>\n      <AssemblyInfo>\n        <Caption>Assembly:</Caption>\n        {name || '-'}\n      </AssemblyInfo>\n      <AssemblyInfo>\n        <Caption>{t('Version')}:</Caption>\n        {version || '-'}\n      </AssemblyInfo>\n      <AssemblyInfo>\n        <Caption>{t('Culture')}:</Caption>\n        {culture || '-'}\n      </AssemblyInfo>\n      <AssemblyInfo>\n        <Caption>PublicKeyToken:</Caption>\n        {publicKeyToken || '-'}\n      </AssemblyInfo>\n\n      {filePath && (\n        <FilePathInfo>\n          <Caption>{t('Path')}:</Caption>\n          <Tooltip title={filePath}>\n            <TextCopyInput rtl>{filePath}</TextCopyInput>\n          </Tooltip>\n        </FilePathInfo>\n      )}\n    </AssemblyWrapper>\n  );\n}\n\nconst AssemblyWrapper = styled('div')`\n  font-size: 80%;\n  display: flex;\n  flex-wrap: wrap;\n  color: ${p => p.theme.textColor};\n  text-align: center;\n  position: relative;\n  padding: 0 ${space(3)} 0 ${space(3)};\n`;\n\nconst AssemblyInfo = styled('div')`\n  margin-right: 15px;\n  margin-bottom: 5px;\n`;\n\nconst Caption = styled('span')`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst FilePathInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n  input {\n    width: 300px;\n    height: 20px;\n    padding-top: 0;\n    padding-bottom: 0;\n    line-height: 1.5;\n    @media (max-width: ${theme.breakpoints.medium}) {\n      width: auto;\n    }\n  }\n  button {\n    min-height: 20px;\n    height: 20px;\n    padding: ${space(1)};\n  }\n  svg {\n    width: 11px;\n    height: 11px;\n  }\n`;\n\nexport {Assembly};\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nconst Context = styled('div')`\n  display: inline;\n`;\n\ninterface Props {\n  isActive: boolean;\n  line: [number, string];\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst ContextLine = function (props: Props) {\n  const {line, isActive, className} = props;\n  let lineWs = '';\n  let lineCode = '';\n  if (typeof line[1] === 'string') {\n    [, lineWs, lineCode] = line[1].match(/^(\\s*)(.*?)$/m)!;\n  }\n  const Component = !props.children ? Fragment : Context;\n  return (\n    <li className={classNames(className, 'expandable', {active: isActive})} key={line[0]}>\n      <Component>\n        <span className=\"ws\">{lineWs}</span>\n        <span className=\"contextline\">{lineCode}</span>\n      </Component>\n      {props.children}\n    </li>\n  );\n};\n\nexport default ContextLine;\n","// Architecture \"x86\" (alias \"i386\", \"i686\")\n// Special case: Breakpad uses \"efl\" in place of \"eflags\"\nexport const REGISTERS_X86 = {\n  eax: 0,\n  ecx: 1,\n  edx: 2,\n  ebx: 3,\n  esp: 4,\n  ebp: 5,\n  esi: 6,\n  edi: 7,\n  eip: 8,\n  eflags: 9,\n  efl: 9,\n  unused1: 10,\n  st0: 11,\n  st1: 12,\n  st2: 13,\n  st3: 14,\n  st4: 15,\n  st5: 16,\n  st6: 17,\n  st7: 18,\n  unused2: 19,\n  unused3: 20,\n  xmm0: 21,\n  xmm1: 22,\n  xmm2: 23,\n  xmm3: 24,\n  xmm4: 25,\n  xmm5: 26,\n  xmm6: 27,\n  xmm7: 28,\n  mm0: 29,\n  mm1: 30,\n  mm2: 31,\n  mm3: 32,\n  mm4: 33,\n  mm5: 34,\n  mm6: 35,\n  mm7: 36,\n  fcw: 37,\n  fsw: 38,\n  mxcsr: 39,\n  es: 40,\n  cs: 41,\n  ss: 42,\n  ds: 43,\n  fs: 44,\n  gs: 45,\n  unused4: 46,\n  unused5: 47,\n  tr: 48,\n  ldtr: 49,\n};\n\n// Architecture \"x86_64\" (alias \"amd64\")\nexport const REGISTERS_X86_64 = {\n  rax: 0,\n  rdx: 1,\n  rcx: 2,\n  rbx: 3,\n  rsi: 4,\n  rdi: 5,\n  rbp: 6,\n  rsp: 7,\n  r8: 8,\n  r9: 9,\n  r10: 10,\n  r11: 11,\n  r12: 12,\n  r13: 13,\n  r14: 14,\n  r15: 15,\n  rip: 16,\n  xmm0: 17,\n  xmm1: 18,\n  xmm2: 19,\n  xmm3: 20,\n  xmm4: 21,\n  xmm5: 22,\n  xmm6: 23,\n  xmm7: 24,\n  xmm8: 25,\n  xmm9: 26,\n  xmm10: 27,\n  xmm11: 28,\n  xmm12: 29,\n  xmm13: 30,\n  xmm14: 31,\n  xmm15: 32,\n  st0: 33,\n  st1: 34,\n  st2: 35,\n  st3: 36,\n  st4: 37,\n  st5: 38,\n  st6: 39,\n  st7: 40,\n  mm0: 41,\n  mm1: 42,\n  mm2: 43,\n  mm3: 44,\n  mm4: 45,\n  mm5: 46,\n  mm6: 47,\n  mm7: 48,\n  rflags: 49,\n  es: 50,\n  cs: 51,\n  ss: 52,\n  ds: 53,\n  fs: 54,\n  gs: 55,\n  unused1: 56,\n  unused2: 57,\n  'fs.base': 58,\n  'gs.base': 59,\n  unused3: 60,\n  unused4: 61,\n  tr: 62,\n  ldtr: 63,\n  mxcsr: 64,\n  fcw: 65,\n  fsw: 66,\n};\n\n// Architecture \"arm*\" (32-bit)\n// Special case: \"r11\" -> \"fp\"\nexport const REGISTERS_ARM = {\n  r0: 0,\n  r1: 1,\n  r2: 2,\n  r3: 3,\n  r4: 4,\n  r5: 5,\n  r6: 6,\n  r7: 7,\n  r8: 8,\n  r9: 9,\n  r10: 10,\n  r11: 11,\n  fp: 11,\n  r12: 12,\n  sp: 13,\n  lr: 14,\n  pc: 15,\n  f0: 96,\n  f1: 97,\n  f2: 98,\n  f3: 99,\n  f4: 100,\n  f5: 101,\n  f6: 102,\n  f7: 103,\n  fps: 24,\n  cpsr: 25,\n  s0: 64,\n  s1: 65,\n  s2: 66,\n  s3: 67,\n  s4: 68,\n  s5: 69,\n  s6: 70,\n  s7: 71,\n  s8: 72,\n  s9: 73,\n  s10: 74,\n  s11: 75,\n  s12: 76,\n  s13: 77,\n  s14: 78,\n  s15: 79,\n  s16: 80,\n  s17: 81,\n  s18: 82,\n  s19: 83,\n  s20: 84,\n  s21: 85,\n  s22: 86,\n  s23: 87,\n  s24: 88,\n  s25: 89,\n  s26: 90,\n  s27: 91,\n  s28: 92,\n  s29: 93,\n  s30: 94,\n  s31: 95,\n};\n\n// Architecture \"arm64\" (alias aarch64)\n// Special cases: \"x30\" -> \"lr\", \"x29\" -> \"fp\", \"x17\" -> \"ip1\", \"x16\" -> \"ip0\"\nexport const REGISTERS_ARM64 = {\n  x0: 0,\n  x1: 1,\n  x2: 2,\n  x3: 3,\n  x4: 4,\n  x5: 5,\n  x6: 6,\n  x7: 7,\n  x8: 8,\n  x9: 9,\n  x10: 10,\n  x11: 11,\n  x12: 12,\n  x13: 13,\n  x14: 14,\n  x15: 15,\n  x16: 16,\n  ip0: 16,\n  x17: 17,\n  ip1: 17,\n  x18: 18,\n  x19: 19,\n  x20: 20,\n  x21: 21,\n  x22: 22,\n  x23: 23,\n  x24: 24,\n  x25: 25,\n  x26: 26,\n  x27: 27,\n  x28: 28,\n  x29: 29,\n  fp: 29,\n  x30: 30,\n  lr: 30,\n  sp: 31,\n  pc: 32,\n  v0: 64,\n  v1: 65,\n  v2: 66,\n  v3: 67,\n  v4: 68,\n  v5: 69,\n  v6: 70,\n  v7: 71,\n  v8: 72,\n  v9: 73,\n  v10: 74,\n  v11: 75,\n  v12: 76,\n  v13: 77,\n  v14: 78,\n  v15: 79,\n  v16: 80,\n  v17: 81,\n  v18: 82,\n  v19: 83,\n  v20: 84,\n  v21: 85,\n  v22: 86,\n  v23: 87,\n  v24: 88,\n  v25: 89,\n  v26: 90,\n  v27: 91,\n  v28: 92,\n  v29: 93,\n  v30: 94,\n  v31: 95,\n};\n\n// Architectures \"mips\" and \"mips64\"\nexport const REGISTERS_MIPS = {\n  zero: 0,\n  at: 1,\n  v0: 2,\n  v1: 3,\n  a0: 4,\n  a1: 5,\n  a2: 6,\n  a3: 7,\n  t0: 8,\n  t1: 9,\n  t2: 10,\n  t3: 11,\n  t4: 12,\n  t5: 13,\n  t6: 14,\n  t7: 15,\n  s0: 16,\n  s1: 17,\n  s2: 18,\n  s3: 19,\n  s4: 20,\n  s5: 21,\n  s6: 22,\n  s7: 23,\n  t8: 24,\n  t9: 25,\n  k0: 26,\n  k1: 27,\n  gp: 28,\n  sp: 29,\n  fp: 30,\n  ra: 31,\n  lo: 32,\n  hi: 33,\n  pc: 34,\n  f0: 35,\n  f2: 36,\n  f3: 37,\n  f4: 38,\n  f5: 39,\n  f6: 40,\n  f7: 41,\n  f8: 42,\n  f9: 43,\n  f10: 44,\n  f11: 45,\n  f12: 46,\n  f13: 47,\n  f14: 48,\n  f15: 49,\n  f16: 50,\n  f17: 51,\n  f18: 52,\n  f19: 53,\n  f20: 54,\n  f21: 55,\n  f22: 56,\n  f23: 57,\n  f24: 58,\n  f25: 59,\n  f26: 60,\n  f27: 61,\n  f28: 62,\n  f29: 63,\n  f30: 64,\n  f31: 65,\n  fcsr: 66,\n  fir: 67,\n};\n\n// Architectures \"ppc\" and \"ppc64\" (incomplete)\nexport const REGISTERS_PPC = {\n  r0: 0,\n  r1: 1,\n  r2: 2,\n  r3: 3,\n  r4: 4,\n  r5: 5,\n  r6: 6,\n  r7: 7,\n  r8: 8,\n  r9: 9,\n  r10: 10,\n  r11: 11,\n  r12: 12,\n  r13: 13,\n  r14: 14,\n  r15: 15,\n  r16: 16,\n  r17: 17,\n  r18: 18,\n  r19: 19,\n  r20: 20,\n  r21: 21,\n  r22: 22,\n  r23: 23,\n  r24: 24,\n  r25: 25,\n  r26: 26,\n  r27: 27,\n  r28: 28,\n  r29: 29,\n  r30: 30,\n  r31: 31,\n  f0: 32,\n  f1: 33,\n  f2: 34,\n  f3: 35,\n  f4: 36,\n  f5: 37,\n  f6: 38,\n  f7: 39,\n  f8: 40,\n  f9: 41,\n  f10: 42,\n  f11: 43,\n  f12: 44,\n  f13: 45,\n  f14: 46,\n  f15: 47,\n  f16: 48,\n  f17: 49,\n  f18: 50,\n  f19: 51,\n  f20: 52,\n  f21: 53,\n  f22: 54,\n  f23: 55,\n  f24: 56,\n  f25: 57,\n  f26: 58,\n  f27: 59,\n  f28: 60,\n  f29: 61,\n  f30: 62,\n  f31: 63,\n  cr: 64,\n  fpsrc: 65,\n  msr: 66,\n  sr0: 70,\n  sr1: 71,\n  sr2: 72,\n  sr3: 73,\n  sr4: 74,\n  sr5: 75,\n  sr6: 76,\n  sr7: 77,\n  sr8: 78,\n  sr9: 79,\n  sr10: 80,\n  sr11: 81,\n  sr12: 82,\n  sr13: 83,\n  sr14: 84,\n  sr15: 85,\n  srr0: 86,\n  srr1: 87,\n};\n","import {\n  REGISTERS_ARM64,\n  REGISTERS_MIPS,\n  REGISTERS_PPC,\n  REGISTERS_X86,\n  REGISTERS_X86_64,\n} from './registers';\n\nfunction getRegisterMap(deviceArch: string) {\n  if (deviceArch.startsWith('x86_64')) {\n    return REGISTERS_X86_64;\n  }\n\n  if (deviceArch.startsWith('x86')) {\n    return REGISTERS_X86;\n  }\n\n  if (deviceArch.startsWith('arm64')) {\n    return REGISTERS_ARM64;\n  }\n\n  if (deviceArch.startsWith('arm')) {\n    return REGISTERS_ARM64;\n  }\n\n  if (deviceArch.startsWith('mips')) {\n    return REGISTERS_MIPS;\n  }\n\n  if (deviceArch.startsWith('ppc')) {\n    return REGISTERS_PPC;\n  }\n\n  return undefined;\n}\n\nfunction getRegisterIndex(register: string, registerMap: Record<string, number>) {\n  return registerMap[register[0] === '$' ? register.slice(1) : register] ?? -1;\n}\n\nexport function getSortedRegisters(\n  registers: Record<string, string | null>,\n  deviceArch?: string\n) {\n  const entries = Object.entries(registers);\n\n  if (!deviceArch) {\n    return entries;\n  }\n\n  const registerMap = getRegisterMap(deviceArch);\n\n  if (!registerMap) {\n    return entries;\n  }\n\n  return entries.sort(\n    (a, b) => getRegisterIndex(a[0], registerMap) - getRegisterIndex(b[0], registerMap)\n  );\n}\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconSliders} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta} from 'sentry/types';\n\nconst REGISTER_VIEWS = [t('Hexadecimal'), t('Numeric')];\n\ntype Props = {\n  value: string | number;\n  meta?: Meta;\n};\n\ntype State = {\n  view: number;\n};\n\nfunction Value({meta, value}: Props) {\n  const [state, setState] = useState<State>({view: 0});\n\n  function formatValue() {\n    try {\n      const parsed = typeof value === 'string' ? parseInt(value, 16) : value;\n      if (isNaN(parsed)) {\n        return value;\n      }\n\n      switch (state.view) {\n        case 1:\n          return `${parsed}`;\n        case 0:\n        default:\n          return `0x${('0000000000000000' + parsed.toString(16)).substr(-16)}`;\n      }\n    } catch {\n      return value;\n    }\n  }\n\n  return (\n    <InlinePre>\n      <AnnotatedText value={formatValue()} meta={meta} />\n      <StyledTooltip\n        title={REGISTER_VIEWS[state.view]}\n        containerDisplayMode=\"inline-flex\"\n      >\n        <Toggle\n          onClick={() => {\n            setState({view: (state.view + 1) % REGISTER_VIEWS.length});\n          }}\n          size=\"xs\"\n          aria-label={t('Toggle register value format')}\n        />\n      </StyledTooltip>\n    </InlinePre>\n  );\n}\n\nexport default Value;\n\nconst StyledTooltip = styled(Tooltip)`\n  align-items: center;\n`;\n\nconst InlinePre = styled('pre')`\n  margin: 0;\n  padding: ${space(1)};\n  display: inline-grid;\n  line-height: 1rem;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1)};\n  text-align: left;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst Toggle = styled(IconSliders)`\n  opacity: 0.33;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\n\nimport {getSortedRegisters} from './utils';\nimport Value from './value';\n\ntype Props = {\n  registers: Record<string, string | null>;\n  deviceArch?: string;\n};\n\nconst CLIPPED_HEIGHT = 40;\n\nfunction FrameRegisters({registers, deviceArch}: Props) {\n  const [isRevealed, setIsRevealed] = useState(false);\n  const [renderedHeight, setRenderedHeight] = useState(0);\n\n  // make sure that clicking on the registers does not actually do\n  // anything on the containing element.\n  const handlePreventToggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n  };\n\n  const sortedRegisters = getSortedRegisters(registers, deviceArch);\n\n  return (\n    <Wrapper>\n      <Title>{t('Registers')}</Title>\n      <StyledClippedBox\n        isRevealed={isRevealed}\n        renderedHeight={renderedHeight}\n        clipHeight={CLIPPED_HEIGHT}\n        onReveal={() => setIsRevealed(true)}\n        onSetRenderedHeight={setRenderedHeight}\n        clipFade={({showMoreButton}) => {\n          return <ClipFade>{showMoreButton}</ClipFade>;\n        }}\n      >\n        <Registers>\n          {sortedRegisters.map(([name, value]) => {\n            if (!defined(value)) {\n              return null;\n            }\n            return (\n              <Register key={name} onClick={handlePreventToggling}>\n                {name}\n                <Value value={value} meta={getMeta(registers, name)} />\n              </Register>\n            );\n          })}\n        </Registers>\n      </StyledClippedBox>\n    </Wrapper>\n  );\n}\n\nexport default FrameRegisters;\n\nconst Wrapper = styled('div')`\n  padding: ${space(1)} ${space(1)} ${space(0.5)} calc(${space(4)} + ${space(0.25)});\n  display: grid;\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1rem;\n  margin-top: ${space(0.5)};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 132px 1fr;\n  }\n`;\n\nconst Title = styled('div')`\n  padding-right: ${space(1)};\n  padding-bottom: ${space(1)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    padding-bottom: 0;\n    padding-right: ${space(1)};\n  }\n`;\n\nconst Registers = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(14.063rem, 1fr));\n  gap: ${space(1)};\n`;\n\nconst Register = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: 3em 1fr;\n  align-items: center;\n  color: ${p => p.theme.gray300};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    text-align: right;\n  }\n`;\n\nconst StyledClippedBox = styled(ClippedBox)<{\n  isRevealed: boolean;\n  renderedHeight: number;\n}>`\n  margin-left: 0;\n  margin-right: 0;\n  padding: 0;\n  border-top: 0;\n\n  ${p =>\n    !p.isRevealed &&\n    p.renderedHeight > CLIPPED_HEIGHT &&\n    css`\n      /* the height of 2 frame rows + button height */\n      max-height: calc(${CLIPPED_HEIGHT * 2}px + 28px);\n\n      @media (min-width: ${p.theme.breakpoints.small}) {\n        /* the height of 1 frame row + button height */\n        max-height: calc(${CLIPPED_HEIGHT}px + 28px);\n      }\n\n      > *:last-child {\n        background: ${p.theme.white};\n        right: 0;\n        bottom: 0;\n        width: 100%;\n        position: absolute;\n      }\n    `}\n`;\n\nconst ClipFade = styled('div')`\n  background: ${p => p.theme.white};\n  display: flex;\n  justify-content: flex-end;\n  /* Let pointer-events pass through ClipFade to visible elements underneath it */\n  pointer-events: none;\n  /* Ensure pointer-events trigger event listeners on \"Expand\" button */\n  > * {\n    pointer-events: auto;\n  }\n`;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\n\nimport KeyValueList from '../keyValueList';\n\ntype Props = {\n  data: Record<string, string>;\n};\n\nconst FrameVariables = ({data}: Props) => {\n  // make sure that clicking on the variables does not actually do\n  // anything on the containing element.\n  const handlePreventToggling = () => (event: React.MouseEvent<HTMLTableElement>) => {\n    event.stopPropagation();\n  };\n\n  const getTransformedData = (): KeyValueListData => {\n    const transformedData: KeyValueListData = [];\n\n    const dataKeys = Object.keys(data).reverse();\n    for (const key of dataKeys) {\n      transformedData.push({\n        key,\n        subject: key,\n        value: data[key],\n        meta: getMeta(data, key),\n      });\n    }\n    return transformedData;\n  };\n\n  const transformedData = getTransformedData();\n\n  return (\n    <KeyValueList data={transformedData} onClick={handlePreventToggling} isContextData />\n  );\n};\n\nexport default FrameVariables;\n","import styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport SentryAppComponentIcon from 'sentry/components/sentryAppComponentIcon';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SentryAppComponent} from 'sentry/types';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\n\ntype Props = {\n  components: Array<SentryAppComponent>;\n  filename: string;\n  lineNo: number;\n};\n\nconst OpenInContextLine = ({lineNo, filename, components}: Props) => {\n  const handleRecordInteraction =\n    (slug: SentryAppComponent['sentryApp']['slug']) => () => {\n      recordInteraction(slug, 'sentry_app_component_interacted', {\n        componentType: 'stacktrace-link',\n      });\n    };\n\n  const getUrl = (url: SentryAppComponent['schema']['url']) => {\n    return addQueryParamsToExistingUrl(url, {lineNo, filename});\n  };\n\n  return (\n    <OpenInContainer columnQuantity={components.length + 1}>\n      <div>{t('Open this line in')}</div>\n      {components.map(component => {\n        const url = getUrl(component.schema.url);\n        const {slug} = component.sentryApp;\n        const onClickRecordInteraction = handleRecordInteraction(slug);\n        return (\n          <OpenInLink\n            key={component.uuid}\n            data-test-id={`stacktrace-link-${slug}`}\n            href={url}\n            onClick={onClickRecordInteraction}\n            onContextMenu={onClickRecordInteraction}\n            openInNewTab\n          >\n            <SentryAppComponentIcon sentryAppComponent={component} />\n            <OpenInName>{t(`${component.sentryApp.name}`)}</OpenInName>\n          </OpenInLink>\n        );\n      })}\n    </OpenInContainer>\n  );\n};\n\nexport {OpenInContextLine};\n\nexport const OpenInContainer = styled('div')<{columnQuantity: number}>`\n  position: relative;\n  z-index: 1;\n  display: grid;\n  grid-template-columns: repeat(${p => p.columnQuantity}, max-content);\n  gap: ${space(1)};\n  color: ${p => p.theme.subText};\n  background-color: ${p => p.theme.background};\n  font-family: ${p => p.theme.text.family};\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(0.25)} ${space(3)};\n  box-shadow: ${p => p.theme.dropShadowLightest};\n  text-indent: initial;\n  overflow: auto;\n  white-space: nowrap;\n`;\n\nexport const OpenInLink = styled(ExternalLink)`\n  display: inline-grid;\n  align-items: center;\n  grid-template-columns: max-content auto;\n  gap: ${space(0.75)};\n  color: ${p => p.theme.gray300};\n`;\n\nexport const OpenInName = styled('strong')`\n  color: ${p => p.theme.subText};\n  font-weight: 700;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport InputField from 'sentry/components/forms/inputField';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Integration, Organization, Project} from 'sentry/types';\nimport {\n  getIntegrationIcon,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport withApi from 'sentry/utils/withApi';\nimport FeedbackAlert from 'sentry/views/settings/account/notifications/feedbackAlert';\n\ntype Props = ModalRenderProps & {\n  api: Client;\n  filename: string;\n  integrations: Integration[];\n  onSubmit: () => void;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  sourceCodeInput: string;\n};\n\nclass StacktraceLinkModal extends Component<Props, State> {\n  state: State = {\n    sourceCodeInput: '',\n  };\n\n  onHandleChange(sourceCodeInput: string) {\n    this.setState({\n      sourceCodeInput,\n    });\n  }\n\n  onManualSetup(provider: string) {\n    trackIntegrationAnalytics('integrations.stacktrace_manual_option_clicked', {\n      view: 'stacktrace_issue_details',\n      setup_type: 'manual',\n      provider,\n      organization: this.props.organization,\n    });\n  }\n\n  handleSubmit = async () => {\n    const {sourceCodeInput} = this.state;\n    const {api, closeModal, filename, onSubmit, organization, project} = this.props;\n    trackIntegrationAnalytics('integrations.stacktrace_submit_config', {\n      setup_type: 'automatic',\n      view: 'stacktrace_issue_details',\n      organization,\n    });\n\n    const parsingEndpoint = `/projects/${organization.slug}/${project.slug}/repo-path-parsing/`;\n    try {\n      const configData = await api.requestPromise(parsingEndpoint, {\n        method: 'POST',\n        data: {\n          sourceUrl: sourceCodeInput,\n          stackPath: filename,\n        },\n      });\n\n      const configEndpoint = `/organizations/${organization.slug}/code-mappings/`;\n      await api.requestPromise(configEndpoint, {\n        method: 'POST',\n        data: {\n          ...configData,\n          projectId: project.id,\n          integrationId: configData.integrationId,\n        },\n      });\n\n      addSuccessMessage(t('Stack trace configuration saved.'));\n      trackIntegrationAnalytics('integrations.stacktrace_complete_setup', {\n        setup_type: 'automatic',\n        provider: configData.config?.provider.key,\n        view: 'stacktrace_issue_details',\n        organization,\n      });\n      closeModal();\n      onSubmit();\n    } catch (err) {\n      const errors = err?.responseJSON\n        ? Array.isArray(err?.responseJSON)\n          ? err?.responseJSON\n          : Object.values(err?.responseJSON)\n        : [];\n      const apiErrors = errors.length > 0 ? `: ${errors.join(', ')}` : '';\n      addErrorMessage(t('Something went wrong%s', apiErrors));\n    }\n  };\n\n  render() {\n    const {sourceCodeInput} = this.state;\n    const {Header, Body, filename, integrations, organization} = this.props;\n    const baseUrl = `/settings/${organization.slug}/integrations`;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Link Stack Trace To Source Code')}</Header>\n        <Body>\n          <ModalContainer>\n            <div>\n              <h6>{t('Automatic Setup')}</h6>\n              {tct(\n                'Enter the source code URL corresponding to stack trace filename [filename] so we can automatically set up stack trace linking for this project.',\n                {\n                  filename: <code>{filename}</code>,\n                }\n              )}\n            </div>\n            <SourceCodeInput>\n              <StyledInputField\n                inline={false}\n                flexibleControlStateSize\n                stacked\n                name=\"source-code-input\"\n                type=\"text\"\n                value={sourceCodeInput}\n                onChange={val => this.onHandleChange(val)}\n                placeholder={t(\n                  `https://github.com/helloworld/Hello-World/blob/master/${filename}`\n                )}\n              />\n              <ButtonBar>\n                <Button\n                  data-test-id=\"quick-setup-button\"\n                  type=\"button\"\n                  onClick={() => this.handleSubmit()}\n                >\n                  {t('Submit')}\n                </Button>\n              </ButtonBar>\n            </SourceCodeInput>\n            <div>\n              <h6>{t('Manual Setup')}</h6>\n              <Alert type=\"warning\">\n                {t(\n                  'We recommend this for more complicated configurations, like projects with multiple repositories.'\n                )}\n              </Alert>\n              {t(\n                \"To manually configure stack trace linking, select the integration you'd like to use for mapping:\"\n              )}\n            </div>\n            <ManualSetup>\n              {integrations.map(integration => (\n                <Button\n                  key={integration.id}\n                  type=\"button\"\n                  onClick={() => this.onManualSetup(integration.provider.key)}\n                  to={`${baseUrl}/${integration.provider.key}/${integration.id}/?tab=codeMappings&referrer=stacktrace-issue-details`}\n                >\n                  {getIntegrationIcon(integration.provider.key)}\n                  <IntegrationName>{integration.name}</IntegrationName>\n                </Button>\n              ))}\n            </ManualSetup>\n            <StyledFeedbackAlert />\n          </ModalContainer>\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nconst SourceCodeInput = styled('div')`\n  display: grid;\n  grid-template-columns: 5fr 1fr;\n  gap: ${space(1)};\n`;\n\nconst ManualSetup = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  justify-items: center;\n`;\n\nconst ModalContainer = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n\n  code {\n    word-break: break-word;\n  }\n`;\n\nconst StyledFeedbackAlert = styled(FeedbackAlert)`\n  margin-bottom: 0;\n`;\n\nconst StyledInputField = styled(InputField)`\n  padding: 0px;\n`;\n\nconst IntegrationName = styled('p')`\n  padding-left: 10px;\n`;\n\nexport default withApi(StacktraceLinkModal);\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport {ResponseMeta} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Body, Header, Hovercard} from 'sentry/components/hovercard';\nimport {IconInfo} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Frame,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfigWithIntegration,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {StacktraceLinkEvents} from 'sentry/utils/analytics/integrations/stacktraceLinkAnalyticsEvents';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport {\n  getIntegrationIcon,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport {promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport {OpenInContainer, OpenInLink, OpenInName} from './openInContextLine';\nimport StacktraceLinkModal from './stacktraceLinkModal';\n\ntype Props = AsyncComponent['props'] & {\n  event: Event;\n  frame: Frame;\n  lineNo: number;\n  organization: Organization;\n  projects: Project[];\n};\n\nexport type StacktraceErrorMessage =\n  | 'file_not_found'\n  | 'stack_root_mismatch'\n  | 'integration_link_forbidden';\n\n// format of the ProjectStacktraceLinkEndpoint response\ntype StacktraceResultItem = {\n  integrations: Integration[];\n  attemptedUrl?: string;\n  config?: RepositoryProjectPathConfigWithIntegration;\n  error?: StacktraceErrorMessage;\n  sourceUrl?: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  isDismissed: boolean;\n  match: StacktraceResultItem;\n  promptLoaded: boolean;\n};\n\nclass StacktraceLink extends AsyncComponent<Props, State> {\n  get project() {\n    // we can't use the withProject HoC on an the issue page\n    // so we ge around that by using the withProjects HoC\n    // and look up the project from the list\n    const {projects, event} = this.props;\n    return projects.find(project => project.id === event.projectID);\n  }\n  get match() {\n    return this.state.match;\n  }\n  get config() {\n    return this.match.config;\n  }\n\n  get integrations() {\n    return this.match.integrations;\n  }\n\n  get errorText() {\n    const error = this.match.error;\n\n    switch (error) {\n      case 'stack_root_mismatch':\n        return t('Error matching your configuration.');\n      case 'file_not_found':\n        return t('Source file not found.');\n      case 'integration_link_forbidden':\n        return t('The repository integration was disconnected.');\n      default:\n        return t('There was an error encountered with the code mapping for this project');\n    }\n  }\n\n  componentDidMount() {\n    this.promptsCheck();\n  }\n\n  async promptsCheck() {\n    const {organization} = this.props;\n\n    const prompt = await promptsCheck(this.api, {\n      organizationId: organization.id,\n      projectId: this.project?.id,\n      feature: 'stacktrace_link',\n    });\n\n    this.setState({\n      isDismissed: promptIsDismissed(prompt),\n      promptLoaded: true,\n    });\n  }\n\n  dismissPrompt() {\n    const {organization} = this.props;\n    promptsUpdate(this.api, {\n      organizationId: organization.id,\n      projectId: this.project?.id,\n      feature: 'stacktrace_link',\n      status: 'dismissed',\n    });\n\n    trackIntegrationAnalytics('integrations.stacktrace_link_cta_dismissed', {\n      view: 'stacktrace_issue_details',\n      organization,\n    });\n\n    this.setState({isDismissed: true});\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, frame, event} = this.props;\n    const project = this.project;\n    if (!project) {\n      throw new Error('Unable to find project');\n    }\n    const commitId = event.release?.lastCommit?.id;\n    const platform = event.platform;\n    const sdkName = event.sdk?.name;\n    return [\n      [\n        'match',\n        `/projects/${organization.slug}/${project.slug}/stacktrace-link/`,\n        {\n          query: {\n            file: frame.filename,\n            platform,\n            commitId,\n            ...(sdkName && {sdkName}),\n            ...(frame.absPath && {absPath: frame.absPath}),\n            ...(frame.module && {module: frame.module}),\n            ...(frame.package && {package: frame.package}),\n          },\n        },\n      ],\n    ];\n  }\n\n  onRequestError(resp: ResponseMeta) {\n    handleXhrErrorResponse('Unable to fetch stack trace link')(resp);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      showModal: false,\n      sourceCodeInput: '',\n      match: {integrations: []},\n      isDismissed: false,\n      promptLoaded: false,\n    };\n  }\n\n  onOpenLink() {\n    const provider = this.config?.provider;\n    if (provider) {\n      trackIntegrationAnalytics(\n        StacktraceLinkEvents.OPEN_LINK,\n        {\n          view: 'stacktrace_issue_details',\n          provider: provider.key,\n          organization: this.props.organization,\n        },\n        {startSession: true}\n      );\n    }\n  }\n\n  onReconfigureMapping() {\n    const provider = this.config?.provider;\n    const error = this.match.error;\n    if (provider) {\n      trackIntegrationAnalytics(\n        'integrations.reconfigure_stacktrace_setup',\n        {\n          view: 'stacktrace_issue_details',\n          provider: provider.key,\n          error_reason: error,\n          organization: this.props.organization,\n        },\n        {startSession: true}\n      );\n    }\n  }\n\n  handleSubmit = () => {\n    this.reloadData();\n  };\n\n  // don't show the error boundary if the component fails.\n  // capture the endpoint error on onRequestError\n  renderError(): React.ReactNode {\n    return null;\n  }\n\n  renderLoading() {\n    // TODO: Add loading\n    return null;\n  }\n\n  renderNoMatch() {\n    const {organization} = this.props;\n    const filename = this.props.frame.filename;\n    const platform = this.props.event.platform;\n    if (this.project && this.integrations.length > 0 && filename) {\n      return (\n        <Access organization={organization} access={['org:integrations']}>\n          {({hasAccess}) =>\n            hasAccess && (\n              <CodeMappingButtonContainer columnQuantity={2}>\n                {tct('[link:Link your stack trace to your source code.]', {\n                  link: (\n                    <a\n                      onClick={() => {\n                        trackIntegrationAnalytics(\n                          'integrations.stacktrace_start_setup',\n                          {\n                            view: 'stacktrace_issue_details',\n                            platform,\n                            organization,\n                          },\n                          {startSession: true}\n                        );\n                        openModal(\n                          deps =>\n                            this.project && (\n                              <StacktraceLinkModal\n                                onSubmit={this.handleSubmit}\n                                filename={filename}\n                                project={this.project}\n                                organization={organization}\n                                integrations={this.integrations}\n                                {...deps}\n                              />\n                            )\n                        );\n                      }}\n                    />\n                  ),\n                })}\n                <StyledIconClose size=\"xs\" onClick={() => this.dismissPrompt()} />\n              </CodeMappingButtonContainer>\n            )\n          }\n        </Access>\n      );\n    }\n    return null;\n  }\n\n  renderHovercard() {\n    const error = this.match.error;\n    const url = this.match.attemptedUrl;\n    const {frame} = this.props;\n    const {config} = this.match;\n    return (\n      <Fragment>\n        <StyledHovercard\n          header={\n            error === 'stack_root_mismatch' ? (\n              <span>{t('Mismatch between filename and stack root')}</span>\n            ) : (\n              <span>{t('Unable to find source code url')}</span>\n            )\n          }\n          body={\n            error === 'stack_root_mismatch' ? (\n              <HeaderContainer>\n                <HovercardLine>\n                  filename: <code>{`${frame.filename}`}</code>\n                </HovercardLine>\n                <HovercardLine>\n                  stack root: <code>{`${config?.stackRoot}`}</code>\n                </HovercardLine>\n              </HeaderContainer>\n            ) : (\n              <HeaderContainer>\n                <HovercardLine>{url}</HovercardLine>\n              </HeaderContainer>\n            )\n          }\n        >\n          <StyledIconInfo size=\"xs\" />\n        </StyledHovercard>\n      </Fragment>\n    );\n  }\n\n  renderMatchNoUrl() {\n    const {config, error} = this.match;\n    const {organization} = this.props;\n    const url = `/settings/${organization.slug}/integrations/${config?.provider.key}/${config?.integrationId}/?tab=codeMappings`;\n    return (\n      <CodeMappingButtonContainer columnQuantity={2}>\n        <ErrorInformation>\n          {error && this.renderHovercard()}\n          <ErrorText>{this.errorText}</ErrorText>\n          {tct('[link:Configure Stack Trace Linking] to fix this problem.', {\n            link: (\n              <a\n                onClick={() => {\n                  this.onReconfigureMapping();\n                }}\n                href={url}\n              />\n            ),\n          })}\n        </ErrorInformation>\n      </CodeMappingButtonContainer>\n    );\n  }\n\n  renderMatchWithUrl(config: RepositoryProjectPathConfigWithIntegration, url: string) {\n    url = `${url}#L${this.props.frame.lineNo}`;\n    return (\n      <OpenInContainer columnQuantity={2}>\n        <div>{t('Open this line in')}</div>\n        <OpenInLink onClick={() => this.onOpenLink()} href={url} openInNewTab>\n          <StyledIconWrapper>{getIntegrationIcon(config.provider.key)}</StyledIconWrapper>\n          <OpenInName>{config.provider.name}</OpenInName>\n        </OpenInLink>\n      </OpenInContainer>\n    );\n  }\n\n  renderBody() {\n    const {config, sourceUrl} = this.match || {};\n    const {isDismissed, promptLoaded} = this.state;\n\n    if (config && sourceUrl) {\n      return this.renderMatchWithUrl(config, sourceUrl);\n    }\n    if (config) {\n      return this.renderMatchNoUrl();\n    }\n\n    if (!promptLoaded || (promptLoaded && isDismissed)) {\n      return null;\n    }\n\n    return this.renderNoMatch();\n  }\n}\n\nexport default withProjects(withOrganization(StacktraceLink));\nexport {StacktraceLink};\n\nexport const CodeMappingButtonContainer = styled(OpenInContainer)`\n  justify-content: space-between;\n`;\n\nconst StyledIconWrapper = styled('span')`\n  color: inherit;\n  line-height: 0;\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  margin: auto;\n  cursor: pointer;\n`;\n\nconst StyledIconInfo = styled(IconInfo)`\n  margin-right: ${space(0.5)};\n  margin-bottom: -2px;\n  cursor: pointer;\n  line-height: 0;\n`;\n\nconst StyledHovercard = styled(Hovercard)`\n  font-weight: normal;\n  width: inherit;\n  line-height: 0;\n  ${Header} {\n    font-weight: strong;\n    font-size: ${p => p.theme.fontSizeSmall};\n    color: ${p => p.theme.subText};\n  }\n  ${Body} {\n    font-weight: normal;\n    font-size: ${p => p.theme.fontSizeSmall};\n  }\n`;\nconst HeaderContainer = styled('div')`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst HovercardLine = styled('div')`\n  padding-bottom: 3px;\n`;\n\nconst ErrorInformation = styled('div')`\n  padding-right: 5px;\n  margin-right: ${space(1)};\n`;\nconst ErrorText = styled('span')`\n  margin-right: ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {IconFlag} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame, Organization, SentryAppComponent} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport {parseAssembly} from '../utils';\n\nimport {Assembly} from './assembly';\nimport ContextLine from './contextLine';\nimport FrameRegisters from './frameRegisters';\nimport FrameVariables from './frameVariables';\nimport {OpenInContextLine} from './openInContextLine';\nimport StacktraceLink from './stacktraceLink';\n\ntype Props = {\n  components: Array<SentryAppComponent>;\n  event: Event;\n  frame: Frame;\n  registers: {[key: string]: string};\n  className?: string;\n  emptySourceNotation?: boolean;\n  expandable?: boolean;\n  hasAssembly?: boolean;\n  hasContextRegisters?: boolean;\n  hasContextSource?: boolean;\n  hasContextVars?: boolean;\n  isExpanded?: boolean;\n  organization?: Organization;\n};\n\nconst Context = ({\n  hasContextVars = false,\n  hasContextSource = false,\n  hasContextRegisters = false,\n  isExpanded = false,\n  hasAssembly = false,\n  expandable = false,\n  emptySourceNotation = false,\n  registers,\n  components,\n  frame,\n  event,\n  organization,\n  className,\n}: Props) => {\n  if (!hasContextSource && !hasContextVars && !hasContextRegisters && !hasAssembly) {\n    return emptySourceNotation ? (\n      <div className=\"empty-context\">\n        <StyledIconFlag size=\"xs\" />\n        <p>{t('No additional details are available for this frame.')}</p>\n      </div>\n    ) : null;\n  }\n\n  const getContextLines = () => {\n    if (isExpanded) {\n      return frame.context;\n    }\n    return frame.context.filter(l => l[0] === frame.lineNo);\n  };\n\n  const contextLines = getContextLines();\n\n  const startLineNo = hasContextSource ? frame.context[0][0] : undefined;\n\n  return (\n    <ol\n      start={startLineNo}\n      className={`${className} context ${isExpanded ? 'expanded' : ''}`}\n    >\n      {defined(frame.errors) && (\n        <li className={expandable ? 'expandable error' : 'error'} key=\"errors\">\n          {frame.errors.join(', ')}\n        </li>\n      )}\n\n      {frame.context &&\n        contextLines.map((line, index) => {\n          const isActive = frame.lineNo === line[0];\n          const hasComponents = isActive && components.length > 0;\n          return (\n            <StyledContextLine key={index} line={line} isActive={isActive}>\n              {hasComponents && (\n                <ErrorBoundary mini>\n                  <OpenInContextLine\n                    key={index}\n                    lineNo={line[0]}\n                    filename={frame.filename || ''}\n                    components={components}\n                  />\n                </ErrorBoundary>\n              )}\n              {organization?.features.includes('integrations-stacktrace-link') &&\n                isActive &&\n                isExpanded &&\n                frame.inApp &&\n                frame.filename && (\n                  <ErrorBoundary customComponent={null}>\n                    <StacktraceLink\n                      key={index}\n                      lineNo={line[0]}\n                      frame={frame}\n                      event={event}\n                    />\n                  </ErrorBoundary>\n                )}\n            </StyledContextLine>\n          );\n        })}\n\n      {hasContextVars && (\n        <StyledClippedBox clipHeight={100}>\n          <FrameVariables data={frame.vars || {}} />\n        </StyledClippedBox>\n      )}\n\n      {hasContextRegisters && (\n        <FrameRegisters registers={registers} deviceArch={event.contexts?.device?.arch} />\n      )}\n\n      {hasAssembly && (\n        <Assembly {...parseAssembly(frame.package)} filePath={frame.absPath} />\n      )}\n    </ol>\n  );\n};\n\nexport default withOrganization(Context);\n\nconst StyledClippedBox = styled(ClippedBox)`\n  margin-left: 0;\n  margin-right: 0;\n  &:first-of-type {\n    margin-top: 0;\n  }\n  :first-child {\n    margin-top: -${space(3)};\n  }\n  > *:first-child {\n    padding-top: 0;\n    border-top: none;\n  }\n`;\n\nconst StyledIconFlag = styled(IconFlag)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledContextLine = styled(ContextLine)`\n  background: inherit;\n  padding: 0;\n  text-indent: 20px;\n  z-index: 1000;\n`;\n","import {Fragment} from 'react';\n\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\ntype Props = {\n  map?: string | null;\n  mapUrl?: string | null;\n};\n\n// TODO(Priscila): Remove BR tags\n// mapUrl not always present; e.g. uploaded source maps\nconst OriginalSourceInfo = ({mapUrl, map}: Props) => {\n  if (!defined(map) && !defined(mapUrl)) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <strong>{t('Source Map')}</strong>\n      <br />\n      {mapUrl ?? map}\n      <br />\n    </Fragment>\n  );\n};\n\nexport default OriginalSourceInfo;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport Tooltip from 'sentry/components/tooltip';\nimport Truncate from 'sentry/components/truncate';\nimport {IconOpen, IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame, Meta, PlatformType} from 'sentry/types';\nimport {defined, isUrl} from 'sentry/utils';\n\nimport FunctionName from '../functionName';\nimport GroupingIndicator from '../groupingIndicator';\nimport {getPlatform, isDotnet, trimPackage} from '../utils';\n\nimport OriginalSourceInfo from './originalSourceInfo';\n\ntype Props = {\n  frame: Frame;\n  platform: PlatformType;\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed?: boolean;\n  isUsedForGrouping?: boolean;\n};\n\ntype GetPathNameOutput = {key: string; value: string; meta?: Meta};\n\nconst DefaultTitle = ({frame, platform, isHoverPreviewed, isUsedForGrouping}: Props) => {\n  const title: Array<React.ReactElement> = [];\n  const framePlatform = getPlatform(frame.platform, platform);\n  const tooltipDelay = isHoverPreviewed ? STACKTRACE_PREVIEW_TOOLTIP_DELAY : undefined;\n\n  const handleExternalLink = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.stopPropagation();\n  };\n\n  const getModule = (): GetPathNameOutput | undefined => {\n    if (frame.module) {\n      return {\n        key: 'module',\n        value: frame.module,\n        meta: getMeta(frame, 'module'),\n      };\n    }\n\n    return undefined;\n  };\n\n  const getPathNameOrModule = (\n    shouldPrioritizeModuleName: boolean\n  ): GetPathNameOutput | undefined => {\n    if (shouldPrioritizeModuleName) {\n      if (frame.module) {\n        return getModule();\n      }\n      if (frame.filename) {\n        return {\n          key: 'filename',\n          value: frame.filename,\n          meta: getMeta(frame, 'filename'),\n        };\n      }\n      return undefined;\n    }\n\n    if (frame.filename) {\n      return {\n        key: 'filename',\n        value: frame.filename,\n        meta: getMeta(frame, 'filename'),\n      };\n    }\n\n    if (frame.module) {\n      return getModule();\n    }\n\n    return undefined;\n  };\n\n  // TODO(dcramer): this needs to use a formatted string so it can be\n  // localized correctly\n  if (defined(frame.filename || frame.module)) {\n    // prioritize module name for Java as filename is often only basename\n    const shouldPrioritizeModuleName = framePlatform === 'java';\n\n    // we do not want to show path in title on csharp platform\n    const pathNameOrModule = isDotnet(framePlatform)\n      ? getModule()\n      : getPathNameOrModule(shouldPrioritizeModuleName);\n    const enablePathTooltip =\n      defined(frame.absPath) && frame.absPath !== pathNameOrModule?.value;\n\n    if (pathNameOrModule) {\n      title.push(\n        <Tooltip\n          key={pathNameOrModule.key}\n          title={frame.absPath}\n          disabled={!enablePathTooltip}\n          delay={tooltipDelay}\n        >\n          <code key=\"filename\" className=\"filename\" data-test-id=\"filename\">\n            <AnnotatedText\n              value={<Truncate value={pathNameOrModule.value} maxLength={100} leftTrim />}\n              meta={pathNameOrModule.meta}\n            />\n          </code>\n        </Tooltip>\n      );\n    }\n\n    // in case we prioritized the module name but we also have a filename info\n    // we want to show a litle (?) icon that on hover shows the actual filename\n    if (shouldPrioritizeModuleName && frame.filename) {\n      title.push(\n        <Tooltip key={frame.filename} title={frame.filename} delay={tooltipDelay}>\n          <a className=\"in-at real-filename\">\n            <IconQuestion size=\"xs\" />\n          </a>\n        </Tooltip>\n      );\n    }\n\n    if (frame.absPath && isUrl(frame.absPath)) {\n      title.push(\n        <StyledExternalLink href={frame.absPath} key=\"share\" onClick={handleExternalLink}>\n          <IconOpen size=\"xs\" />\n        </StyledExternalLink>\n      );\n    }\n\n    if (\n      (defined(frame.function) || defined(frame.rawFunction)) &&\n      defined(pathNameOrModule)\n    ) {\n      title.push(\n        <InFramePosition className=\"in-at\" key=\"in\">\n          {` ${t('in')} `}\n        </InFramePosition>\n      );\n    }\n  }\n\n  if (defined(frame.function) || defined(frame.rawFunction)) {\n    title.push(\n      <FunctionName\n        frame={frame}\n        key=\"function\"\n        className=\"function\"\n        data-test-id=\"function\"\n      />\n    );\n  }\n\n  // we don't want to render out zero line numbers which are used to\n  // indicate lack of source information for native setups.  We could\n  // TODO(mitsuhiko): only do this for events from native platforms?\n  if (defined(frame.lineNo) && frame.lineNo !== 0) {\n    title.push(\n      <InFramePosition className=\"in-at in-at-line\" key=\"no\">\n        {` ${t('at line')} `}\n      </InFramePosition>\n    );\n    title.push(\n      <code key=\"line\" className=\"lineno\">\n        {defined(frame.colNo) ? `${frame.lineNo}:${frame.colNo}` : frame.lineNo}\n      </code>\n    );\n  }\n\n  if (defined(frame.package) && !isDotnet(framePlatform)) {\n    title.push(<InFramePosition key=\"within\">{` ${t('within')} `}</InFramePosition>);\n    title.push(\n      <code title={frame.package} className=\"package\" key=\"package\">\n        {trimPackage(frame.package)}\n      </code>\n    );\n  }\n\n  if (defined(frame.origAbsPath)) {\n    title.push(\n      <Tooltip\n        key=\"info-tooltip\"\n        title={<OriginalSourceInfo mapUrl={frame.mapUrl} map={frame.map} />}\n        delay={tooltipDelay}\n      >\n        <a className=\"in-at original-src\">\n          <IconQuestion size=\"xs\" />\n        </a>\n      </Tooltip>\n    );\n  }\n\n  if (isUsedForGrouping) {\n    title.push(<StyledGroupingIndicator key=\"info-tooltip\" />);\n  }\n\n  return <Fragment>{title}</Fragment>;\n};\n\nexport default DefaultTitle;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  position: relative;\n  top: ${space(0.25)};\n  margin-left: ${space(0.5)};\n`;\n\nconst InFramePosition = styled('span')`\n  color: ${p => p.theme.textColor};\n  opacity: 0.6;\n`;\n\nconst StyledGroupingIndicator = styled(GroupingIndicator)`\n  margin-left: ${space(0.75)};\n`;\n","import AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\nimport {Frame} from 'sentry/types';\n\ntype Props = {\n  frame: Frame;\n  className?: string;\n  hasHiddenDetails?: boolean;\n  showCompleteFunctionName?: boolean;\n};\n\nconst FunctionName = ({\n  frame,\n  showCompleteFunctionName,\n  hasHiddenDetails,\n  className,\n  ...props\n}: Props) => {\n  const getValueOutput = ():\n    | {meta: ReturnType<typeof getMeta>; value: Frame['function']}\n    | undefined => {\n    if (hasHiddenDetails && showCompleteFunctionName && frame.rawFunction) {\n      return {\n        value: frame.rawFunction,\n        meta: getMeta(frame, 'rawFunction'),\n      };\n    }\n\n    if (frame.function) {\n      return {\n        value: frame.function,\n        meta: getMeta(frame, 'function'),\n      };\n    }\n\n    if (frame.rawFunction) {\n      return {\n        value: frame.rawFunction,\n        meta: getMeta(frame, 'rawFunction'),\n      };\n    }\n\n    return undefined;\n  };\n\n  const valueOutput = getValueOutput();\n\n  return (\n    <code className={className} {...props}>\n      {!valueOutput ? (\n        t('<unknown>')\n      ) : (\n        <AnnotatedText value={valueOutput.value} meta={valueOutput.meta} />\n      )}\n    </code>\n  );\n};\n\nexport default FunctionName;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconInfo} from 'sentry/icons/iconInfo';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  className?: string;\n};\n\nfunction GroupingIndicator({className}: Props) {\n  return (\n    <StyledTooltip\n      title={t('This frame appears in all other events related to this issue')}\n      containerDisplayMode=\"inline-flex\"\n      className={className}\n    >\n      <IconInfo size=\"xs\" color=\"gray300\" />\n    </StyledTooltip>\n  );\n}\n\nexport default GroupingIndicator;\n\nconst StyledTooltip = styled(Tooltip)`\n  align-items: center;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport scrollToElement from 'scroll-to-element';\n\nimport Button from 'sentry/components/button';\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport StrictClick from 'sentry/components/strictClick';\nimport {IconChevron, IconRefresh} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Frame, Organization, PlatformType, SentryAppComponent} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withSentryAppComponents from 'sentry/utils/withSentryAppComponents';\n\nimport DebugImage from '../debugMeta/debugImage';\nimport {combineStatus} from '../debugMeta/utils';\nimport {SymbolicatorStatus} from '../types';\n\nimport Context from './context';\nimport DefaultTitle from './defaultTitle';\nimport PackageLink from './packageLink';\nimport PackageStatus, {PackageStatusIcon} from './packageStatus';\nimport Symbol, {FunctionNameToggleIcon} from './symbol';\nimport TogglableAddress, {AddressToggleIcon} from './togglableAddress';\nimport {\n  getPlatform,\n  hasAssembly,\n  hasContextRegisters,\n  hasContextSource,\n  hasContextVars,\n  isDotnet,\n  isExpandable,\n} from './utils';\n\ntype Props = {\n  components: Array<SentryAppComponent>;\n  data: Frame;\n  event: Event;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  image?: React.ComponentProps<typeof DebugImage>['image'];\n  includeSystemFrames?: boolean;\n  isExpanded?: boolean;\n  isFirst?: boolean;\n  isFrameAfterLastNonApp?: boolean;\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed?: boolean;\n  isOnlyFrame?: boolean;\n  maxLengthOfRelativeAddress?: number;\n  nextFrame?: Frame;\n  onAddressToggle?: (event: React.MouseEvent<SVGElement>) => void;\n  onFunctionNameToggle?: (event: React.MouseEvent<SVGElement>) => void;\n  organization?: Organization;\n  platform?: PlatformType;\n  prevFrame?: Frame;\n  showCompleteFunctionName?: boolean;\n  showingAbsoluteAddress?: boolean;\n  timesRepeated?: number;\n};\n\ntype State = {\n  isExpanded?: boolean;\n};\n\nfunction makeFilter(\n  addr: string,\n  addrMode: string | undefined,\n  image?: React.ComponentProps<typeof DebugImage>['image']\n): string {\n  if (!(!addrMode || addrMode === 'abs') && image) {\n    return `${image.debug_id}!${addr}`;\n  }\n\n  return addr;\n}\n\nexport class Line extends Component<Props, State> {\n  static defaultProps = {\n    isExpanded: false,\n    emptySourceNotation: false,\n    isHoverPreviewed: false,\n  };\n\n  // isExpanded can be initialized to true via parent component;\n  // data synchronization is not important\n  // https://facebook.github.io/react/tips/props-in-getInitialState-as-anti-pattern.html\n  state: State = {\n    isExpanded: this.props.isExpanded,\n  };\n\n  toggleContext = evt => {\n    evt && evt.preventDefault();\n\n    this.setState({\n      isExpanded: !this.state.isExpanded,\n    });\n  };\n\n  getPlatform() {\n    // prioritize the frame platform but fall back to the platform\n    // of the stack trace / exception\n    return getPlatform(this.props.data.platform, this.props.platform ?? 'other');\n  }\n\n  isInlineFrame() {\n    return (\n      this.props.prevFrame &&\n      this.getPlatform() === (this.props.prevFrame.platform || this.props.platform) &&\n      this.props.data.instructionAddr === this.props.prevFrame.instructionAddr\n    );\n  }\n\n  isExpandable() {\n    const {registers, platform, emptySourceNotation, isOnlyFrame, data} = this.props;\n    return isExpandable({\n      frame: data,\n      registers,\n      platform,\n      emptySourceNotation,\n      isOnlyFrame,\n    });\n  }\n\n  shouldShowLinkToImage() {\n    const {isHoverPreviewed, data} = this.props;\n    const {symbolicatorStatus} = data;\n\n    return (\n      !!symbolicatorStatus &&\n      symbolicatorStatus !== SymbolicatorStatus.UNKNOWN_IMAGE &&\n      !isHoverPreviewed\n    );\n  }\n\n  packageStatus() {\n    // this is the status of image that belongs to this frame\n    const {image} = this.props;\n    if (!image) {\n      return 'empty';\n    }\n\n    const combinedStatus = combineStatus(image.debug_status, image.unwind_status);\n\n    switch (combinedStatus) {\n      case 'unused':\n        return 'empty';\n      case 'found':\n        return 'success';\n      default:\n        return 'error';\n    }\n  }\n\n  scrollToImage = event => {\n    event.stopPropagation(); // to prevent collapsing if collapsible\n\n    const {instructionAddr, addrMode} = this.props.data;\n    if (instructionAddr) {\n      DebugMetaActions.updateFilter(\n        makeFilter(instructionAddr, addrMode, this.props.image)\n      );\n    }\n    scrollToElement('#images-loaded');\n  };\n\n  preventCollapse = evt => {\n    evt.stopPropagation();\n  };\n\n  renderExpander() {\n    if (!this.isExpandable()) {\n      return null;\n    }\n\n    const {isHoverPreviewed} = this.props;\n    const {isExpanded} = this.state;\n\n    return (\n      <ToggleContextButtonWrapper>\n        <ToggleContextButton\n          className=\"btn-toggle\"\n          data-test-id={`toggle-button-${isExpanded ? 'expanded' : 'collapsed'}`}\n          css={isDotnet(this.getPlatform()) && {display: 'block !important'}} // remove important once we get rid of css files\n          size=\"zero\"\n          title={t('Toggle Context')}\n          tooltipProps={\n            isHoverPreviewed ? {delay: STACKTRACE_PREVIEW_TOOLTIP_DELAY} : undefined\n          }\n          onClick={this.toggleContext}\n        >\n          <IconChevron direction={isExpanded ? 'up' : 'down'} size=\"8px\" />\n        </ToggleContextButton>\n      </ToggleContextButtonWrapper>\n    );\n  }\n\n  leadsToApp() {\n    const {data, nextFrame} = this.props;\n    return !data.inApp && ((nextFrame && nextFrame.inApp) || !nextFrame);\n  }\n\n  isFoundByStackScanning() {\n    const {data} = this.props;\n\n    return data.trust === 'scan' || data.trust === 'cfi-scan';\n  }\n\n  renderLeadHint() {\n    const {isExpanded} = this.state;\n\n    if (isExpanded) {\n      return null;\n    }\n\n    const leadsToApp = this.leadsToApp();\n\n    if (!leadsToApp) {\n      return null;\n    }\n\n    const {nextFrame} = this.props;\n\n    return !nextFrame ? (\n      <LeadHint className=\"leads-to-app-hint\" width=\"115px\">\n        {t('Crashed in non-app')}\n        {': '}\n      </LeadHint>\n    ) : (\n      <LeadHint className=\"leads-to-app-hint\">\n        {t('Called from')}\n        {': '}\n      </LeadHint>\n    );\n  }\n\n  renderRepeats() {\n    const timesRepeated = this.props.timesRepeated;\n    if (timesRepeated && timesRepeated > 0) {\n      return (\n        <RepeatedFrames\n          title={`Frame repeated ${timesRepeated} time${timesRepeated === 1 ? '' : 's'}`}\n        >\n          <RepeatedContent>\n            <StyledIconRefresh />\n            <span>{timesRepeated}</span>\n          </RepeatedContent>\n        </RepeatedFrames>\n      );\n    }\n\n    return null;\n  }\n\n  renderDefaultLine() {\n    const {isHoverPreviewed} = this.props;\n\n    return (\n      <StrictClick onClick={this.isExpandable() ? this.toggleContext : undefined}>\n        <DefaultLine className=\"title\" data-test-id=\"title\">\n          <VertCenterWrapper>\n            <div>\n              {this.renderLeadHint()}\n              <DefaultTitle\n                frame={this.props.data}\n                platform={this.props.platform ?? 'other'}\n                isHoverPreviewed={isHoverPreviewed}\n              />\n            </div>\n            {this.renderRepeats()}\n          </VertCenterWrapper>\n          {this.renderExpander()}\n        </DefaultLine>\n      </StrictClick>\n    );\n  }\n\n  renderNativeLine() {\n    const {\n      data,\n      showingAbsoluteAddress,\n      onAddressToggle,\n      onFunctionNameToggle,\n      image,\n      maxLengthOfRelativeAddress,\n      includeSystemFrames,\n      isFrameAfterLastNonApp,\n      showCompleteFunctionName,\n      isHoverPreviewed,\n    } = this.props;\n\n    const leadHint = this.renderLeadHint();\n    const packageStatus = this.packageStatus();\n\n    return (\n      <StrictClick onClick={this.isExpandable() ? this.toggleContext : undefined}>\n        <DefaultLine className=\"title as-table\" data-test-id=\"title\">\n          <NativeLineContent isFrameAfterLastNonApp={!!isFrameAfterLastNonApp}>\n            <PackageInfo>\n              {leadHint}\n              <PackageLink\n                includeSystemFrames={!!includeSystemFrames}\n                withLeadHint={leadHint !== null}\n                packagePath={data.package}\n                onClick={this.scrollToImage}\n                isClickable={this.shouldShowLinkToImage()}\n                isHoverPreviewed={isHoverPreviewed}\n              >\n                {!isHoverPreviewed && (\n                  <PackageStatus\n                    status={packageStatus}\n                    tooltip={t('Go to Images Loaded')}\n                  />\n                )}\n              </PackageLink>\n            </PackageInfo>\n            {data.instructionAddr && (\n              <TogglableAddress\n                address={data.instructionAddr}\n                startingAddress={image ? image.image_addr : null}\n                isAbsolute={!!showingAbsoluteAddress}\n                isFoundByStackScanning={this.isFoundByStackScanning()}\n                isInlineFrame={!!this.isInlineFrame()}\n                onToggle={onAddressToggle}\n                relativeAddressMaxlength={maxLengthOfRelativeAddress}\n                isHoverPreviewed={isHoverPreviewed}\n              />\n            )}\n            <Symbol\n              frame={data}\n              showCompleteFunctionName={!!showCompleteFunctionName}\n              onFunctionNameToggle={onFunctionNameToggle}\n              isHoverPreviewed={isHoverPreviewed}\n            />\n          </NativeLineContent>\n          {this.renderExpander()}\n        </DefaultLine>\n      </StrictClick>\n    );\n  }\n\n  renderLine() {\n    switch (this.getPlatform()) {\n      case 'objc':\n      // fallthrough\n      case 'cocoa':\n      // fallthrough\n      case 'native':\n        return this.renderNativeLine();\n      default:\n        return this.renderDefaultLine();\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n\n    const className = classNames({\n      frame: true,\n      'is-expandable': this.isExpandable(),\n      expanded: this.state.isExpanded,\n      collapsed: !this.state.isExpanded,\n      'system-frame': !data.inApp,\n      'frame-errors': data.errors,\n      'leads-to-app': this.leadsToApp(),\n    });\n    const props = {className};\n\n    return (\n      <StyledLi {...props}>\n        {this.renderLine()}\n        <Context\n          frame={data}\n          event={this.props.event}\n          registers={this.props.registers}\n          components={this.props.components}\n          hasContextSource={hasContextSource(data)}\n          hasContextVars={hasContextVars(data)}\n          hasContextRegisters={hasContextRegisters(this.props.registers)}\n          emptySourceNotation={this.props.emptySourceNotation}\n          hasAssembly={hasAssembly(data, this.props.platform)}\n          expandable={this.isExpandable()}\n          isExpanded={this.state.isExpanded}\n        />\n      </StyledLi>\n    );\n  }\n}\n\nexport default withOrganization(\n  withSentryAppComponents(Line, {componentType: 'stacktrace-link'})\n);\n\nconst PackageInfo = styled('div')`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  order: 2;\n  align-items: flex-start;\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    order: 0;\n  }\n`;\n\nconst RepeatedFrames = styled('div')`\n  display: inline-block;\n  border-radius: 50px;\n  padding: 1px 3px;\n  margin-left: ${space(1)};\n  border-width: thin;\n  border-style: solid;\n  border-color: ${p => p.theme.pink200};\n  color: ${p => p.theme.pink300};\n  background-color: ${p => p.theme.backgroundSecondary};\n  white-space: nowrap;\n`;\n\nconst VertCenterWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst RepeatedContent = styled(VertCenterWrapper)`\n  justify-content: center;\n`;\n\nconst NativeLineContent = styled('div')<{isFrameAfterLastNonApp: boolean}>`\n  display: grid;\n  flex: 1;\n  gap: ${space(0.5)};\n  grid-template-columns: ${p =>\n    `minmax(${p.isFrameAfterLastNonApp ? '167px' : '117px'}, auto)  1fr`};\n  align-items: center;\n  justify-content: flex-start;\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '200px' : '150px')} minmax(117px, auto)\n      1fr;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.large}) and (max-width: ${props =>\n      props.theme.breakpoints.xlarge}) {\n    grid-template-columns:\n      ${p => (p.isFrameAfterLastNonApp ? '180px' : '140px')} minmax(117px, auto)\n      1fr;\n  }\n`;\n\nconst DefaultLine = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n`;\n\nconst StyledIconRefresh = styled(IconRefresh)`\n  margin-right: ${space(0.25)};\n`;\n\nconst LeadHint = styled('div')<{width?: string}>`\n  ${p => p.theme.overflowEllipsis}\n  max-width: ${p => (p.width ? p.width : '67px')}\n`;\n\nconst ToggleContextButtonWrapper = styled('span')`\n  margin-left: ${space(1)};\n`;\n\n// the Button's label has the padding of 3px because the button size has to be 16x16 px.\nconst ToggleContextButton = styled(Button)`\n  span:first-child {\n    padding: 3px;\n  }\n`;\n\nconst StyledLi = styled('li')`\n  ${PackageStatusIcon} {\n    flex-shrink: 0;\n  }\n  :hover {\n    ${PackageStatusIcon} {\n      visibility: visible;\n    }\n    ${AddressToggleIcon} {\n      visibility: visible;\n    }\n    ${FunctionNameToggleIcon} {\n      visibility: visible;\n    }\n  }\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport Tooltip from 'sentry/components/tooltip';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\n\ntype Props = {\n  includeSystemFrames: boolean;\n  onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n  packagePath: string | null;\n  withLeadHint: boolean;\n  isClickable?: boolean;\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed?: boolean;\n};\n\nclass PackageLink extends Component<Props> {\n  handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const {isClickable, onClick} = this.props;\n\n    if (isClickable) {\n      onClick(event);\n    }\n  };\n\n  render() {\n    const {\n      packagePath,\n      isClickable,\n      withLeadHint,\n      children,\n      includeSystemFrames,\n      isHoverPreviewed,\n    } = this.props;\n\n    return (\n      <Package\n        onClick={this.handleClick}\n        isClickable={isClickable}\n        withLeadHint={withLeadHint}\n        includeSystemFrames={includeSystemFrames}\n      >\n        {defined(packagePath) ? (\n          <Tooltip\n            title={packagePath}\n            delay={isHoverPreviewed ? STACKTRACE_PREVIEW_TOOLTIP_DELAY : undefined}\n          >\n            <PackageName\n              isClickable={isClickable}\n              withLeadHint={withLeadHint}\n              includeSystemFrames={includeSystemFrames}\n            >\n              {trimPackage(packagePath)}\n            </PackageName>\n          </Tooltip>\n        ) : (\n          <span>{'<unknown>'}</span>\n        )}\n        {children}\n      </Package>\n    );\n  }\n}\n\nexport const Package = styled('a')<Partial<Props>>`\n  font-size: 13px;\n  font-weight: bold;\n  padding: 0 0 0 ${space(0.5)};\n  color: ${p => p.theme.textColor};\n  :hover {\n    color: ${p => p.theme.textColor};\n  }\n  cursor: ${p => (p.isClickable ? 'pointer' : 'default')};\n  display: flex;\n  align-items: center;\n\n  ${p =>\n    p.withLeadHint && (p.includeSystemFrames ? `max-width: 89px;` : `max-width: 76px;`)}\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) and (max-width: ${p =>\n    p.theme.breakpoints.xlarge}) {\n    ${p =>\n      p.withLeadHint && (p.includeSystemFrames ? `max-width: 76px;` : `max-width: 63px;`)}\n  }\n`;\n\nexport const PackageName = styled('span')<\n  Pick<Props, 'isClickable' | 'withLeadHint' | 'includeSystemFrames'>\n>`\n  max-width: ${p =>\n    p.withLeadHint && p.isClickable && !p.includeSystemFrames ? '45px' : '104px'};\n  ${p => p.theme.overflowEllipsis}\n`;\n\nexport default PackageLink;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconCircle, IconFlag} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  status: 'error' | 'success' | 'empty';\n  tooltip?: string;\n};\n\nfunction PackageStatus({status, tooltip}: Props) {\n  const getIcon = () => {\n    switch (status) {\n      case 'success':\n        return <IconCheckmark isCircled color=\"green300\" size=\"xs\" />;\n      case 'empty':\n        return <IconCircle size=\"xs\" />;\n      case 'error':\n      default:\n        return <IconFlag color=\"red300\" size=\"xs\" />;\n    }\n  };\n\n  const icon = getIcon();\n\n  if (status === 'empty') {\n    return null;\n  }\n\n  return (\n    <StyledTooltip\n      title={tooltip}\n      disabled={!(tooltip && tooltip.length)}\n      containerDisplayMode=\"inline-flex\"\n    >\n      <PackageStatusIcon>{icon}</PackageStatusIcon>\n    </StyledTooltip>\n  );\n}\n\nconst StyledTooltip = styled(Tooltip)`\n  margin-left: ${space(0.75)};\n`;\n\nexport const PackageStatusIcon = styled('span')`\n  height: 12px;\n  align-items: center;\n  cursor: pointer;\n  visibility: hidden;\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nexport default PackageStatus;\n","import styled from '@emotion/styled';\n\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFilter} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport FunctionName from './functionName';\nimport GroupingIndicator from './groupingIndicator';\nimport {getFrameHint} from './utils';\n\ntype Props = {\n  frame: Frame;\n  absoluteFilePaths?: boolean;\n  className?: string;\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed?: boolean;\n  isUsedForGrouping?: boolean;\n  nativeStackTraceV2?: boolean;\n  onFunctionNameToggle?: (event: React.MouseEvent<SVGElement>) => void;\n  showCompleteFunctionName?: boolean;\n};\n\nconst Symbol = ({\n  frame,\n  absoluteFilePaths,\n  onFunctionNameToggle,\n  showCompleteFunctionName,\n  nativeStackTraceV2,\n  isHoverPreviewed,\n  isUsedForGrouping,\n  className,\n}: Props) => {\n  const hasFunctionNameHiddenDetails =\n    defined(frame.rawFunction) &&\n    defined(frame.function) &&\n    frame.function !== frame.rawFunction;\n\n  const getFunctionNameTooltipTitle = () => {\n    if (!hasFunctionNameHiddenDetails) {\n      return undefined;\n    }\n\n    if (!showCompleteFunctionName) {\n      return t('Expand function details');\n    }\n\n    return t('Hide function details');\n  };\n\n  const [hint, hintIcon] = getFrameHint(frame);\n  const enablePathTooltip = defined(frame.absPath) && frame.absPath !== frame.filename;\n  const functionNameTooltipTitle = getFunctionNameTooltipTitle();\n  const tooltipDelay = isHoverPreviewed ? STACKTRACE_PREVIEW_TOOLTIP_DELAY : undefined;\n\n  return (\n    <Wrapper className={className}>\n      {onFunctionNameToggle && (\n        <FunctionNameToggleTooltip\n          title={functionNameTooltipTitle}\n          containerDisplayMode=\"inline-flex\"\n          delay={tooltipDelay}\n        >\n          <FunctionNameToggleIcon\n            hasFunctionNameHiddenDetails={hasFunctionNameHiddenDetails}\n            onClick={hasFunctionNameHiddenDetails ? onFunctionNameToggle : undefined}\n            size=\"xs\"\n            color=\"purple300\"\n          />\n        </FunctionNameToggleTooltip>\n      )}\n      <Data>\n        <StyledFunctionName\n          frame={frame}\n          showCompleteFunctionName={showCompleteFunctionName}\n          hasHiddenDetails={hasFunctionNameHiddenDetails}\n        />\n        {hint && (\n          <HintStatus>\n            <Tooltip title={hint} delay={tooltipDelay}>\n              {hintIcon}\n            </Tooltip>\n          </HintStatus>\n        )}\n        {frame.filename &&\n          (nativeStackTraceV2 ? (\n            <Filename>\n              {'('}\n              {absoluteFilePaths ? frame.absPath : frame.filename}\n              {frame.lineNo && `:${frame.lineNo}`}\n              {')'}\n            </Filename>\n          ) : (\n            <FileNameTooltip\n              title={frame.absPath}\n              disabled={!enablePathTooltip}\n              delay={tooltipDelay}\n            >\n              <Filename>\n                {'('}\n                {frame.filename}\n                {frame.lineNo && `:${frame.lineNo}`}\n                {')'}\n              </Filename>\n            </FileNameTooltip>\n          ))}\n        {isUsedForGrouping && <GroupingIndicator />}\n      </Data>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  text-align: left;\n  grid-column-start: 1;\n  grid-column-end: -1;\n  order: 3;\n  flex: 1;\n\n  display: flex;\n\n  code {\n    background: transparent;\n    color: ${p => p.theme.textColor};\n    padding-right: ${space(0.5)};\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    order: 0;\n    grid-column-start: auto;\n    grid-column-end: auto;\n  }\n`;\n\nconst StyledFunctionName = styled(FunctionName)`\n  margin-right: ${space(0.75)};\n`;\n\nconst Data = styled('div')`\n  max-width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst HintStatus = styled('span')`\n  position: relative;\n  top: ${space(0.25)};\n  margin: 0 ${space(0.75)} 0 -${space(0.25)};\n`;\n\nconst FileNameTooltip = styled(Tooltip)`\n  margin-right: ${space(0.75)};\n`;\n\nconst Filename = styled('span')`\n  color: ${p => p.theme.purple300};\n`;\n\nexport const FunctionNameToggleIcon = styled(IconFilter, {\n  shouldForwardProp: prop => prop !== 'hasFunctionNameHiddenDetails',\n})<{\n  hasFunctionNameHiddenDetails: boolean;\n}>`\n  cursor: pointer;\n  visibility: hidden;\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n  ${p => !p.hasFunctionNameHiddenDetails && 'opacity: 0; cursor: inherit;'};\n`;\n\nconst FunctionNameToggleTooltip = styled(Tooltip)`\n  height: 16px;\n  align-items: center;\n  margin-right: ${space(0.75)};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: none;\n  }\n`;\n\nexport default Symbol;\n","import styled from '@emotion/styled';\n\nimport {STACKTRACE_PREVIEW_TOOLTIP_DELAY} from 'sentry/components/stacktracePreview';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFilter} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {formatAddress, parseAddress} from '../utils';\n\ntype Props = {\n  address: string;\n  isAbsolute: boolean;\n  isFoundByStackScanning: boolean;\n  isInlineFrame: boolean;\n  startingAddress: string | null;\n  className?: string;\n  /**\n   * Is the stack trace being previewed in a hovercard?\n   */\n  isHoverPreviewed?: boolean;\n  onToggle?: (event: React.MouseEvent<SVGElement>) => void;\n  relativeAddressMaxlength?: number;\n};\n\nfunction TogglableAddress({\n  startingAddress,\n  address,\n  relativeAddressMaxlength,\n  isInlineFrame,\n  isFoundByStackScanning,\n  isAbsolute,\n  onToggle,\n  isHoverPreviewed,\n  className,\n}: Props) {\n  const convertAbsoluteAddressToRelative = () => {\n    if (!startingAddress) {\n      return '';\n    }\n\n    const relativeAddress = formatAddress(\n      parseAddress(address) - parseAddress(startingAddress),\n      relativeAddressMaxlength\n    );\n\n    return `+${relativeAddress}`;\n  };\n\n  const getAddressTooltip = () => {\n    if (isInlineFrame && isFoundByStackScanning) {\n      return t('Inline frame, found by stack scanning');\n    }\n\n    if (isInlineFrame) {\n      return t('Inline frame');\n    }\n\n    if (isFoundByStackScanning) {\n      return t('Found by stack scanning');\n    }\n\n    return undefined;\n  };\n\n  const relativeAddress = convertAbsoluteAddressToRelative();\n  const canBeConverted = !!relativeAddress;\n\n  const formattedAddress = !relativeAddress || isAbsolute ? address : relativeAddress;\n  const tooltipTitle = getAddressTooltip();\n  const tooltipDelay = isHoverPreviewed ? STACKTRACE_PREVIEW_TOOLTIP_DELAY : undefined;\n\n  return (\n    <Wrapper className={className}>\n      {onToggle && canBeConverted && (\n        <AddressIconTooltip\n          title={isAbsolute ? t('Switch to relative') : t('Switch to absolute')}\n          containerDisplayMode=\"inline-flex\"\n          delay={tooltipDelay}\n        >\n          <AddressToggleIcon onClick={onToggle} size=\"xs\" color=\"purple300\" />\n        </AddressIconTooltip>\n      )}\n      <Tooltip\n        title={tooltipTitle}\n        disabled={!(isFoundByStackScanning || isInlineFrame)}\n        delay={tooltipDelay}\n      >\n        <Address\n          isFoundByStackScanning={isFoundByStackScanning}\n          isInlineFrame={isInlineFrame}\n          canBeConverted={canBeConverted}\n        >\n          {formattedAddress}\n        </Address>\n      </Tooltip>\n    </Wrapper>\n  );\n}\n\nconst AddressIconTooltip = styled(Tooltip)`\n  align-items: center;\n  margin-right: ${space(0.75)};\n`;\n\nconst AddressToggleIcon = styled(IconFilter)`\n  cursor: pointer;\n  visibility: hidden;\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n`;\n\nconst getAddresstextBorderBottom = (\n  p: Pick<Partial<Props>, 'isFoundByStackScanning' | 'isInlineFrame'> & {theme: Theme}\n) => {\n  if (p.isFoundByStackScanning) {\n    return `1px dashed ${p.theme.red300}`;\n  }\n\n  if (p.isInlineFrame) {\n    return `1px dashed ${p.theme.blue300}`;\n  }\n\n  return 'none';\n};\n\nconst Address = styled('span')<Partial<Props> & {canBeConverted: boolean}>`\n  border-bottom: ${getAddresstextBorderBottom};\n  white-space: nowrap;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    padding-left: ${p => (p.canBeConverted ? null : '18px')};\n  }\n`;\n\nconst Wrapper = styled('span')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  color: ${p => p.theme.textColor};\n  letter-spacing: -0.25px;\n  width: 100%;\n  flex-grow: 0;\n  flex-shrink: 0;\n  display: inline-flex;\n  align-items: center;\n  padding: 0 ${space(0.5)} 0 0;\n  order: 1;\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    padding: 0 ${space(0.5)};\n    order: 0;\n  }\n`;\n\nexport default TogglableAddress;\nexport {AddressToggleIcon};\n","import {IconQuestion, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Frame, PlatformType} from 'sentry/types';\nimport {defined, objectIsEmpty} from 'sentry/utils';\n\nimport {SymbolicatorStatus} from '../types';\n\nexport function trimPackage(pkg: string) {\n  const pieces = pkg.split(/^([a-z]:\\\\|\\\\\\\\)/i.test(pkg) ? '\\\\' : '/');\n  const filename = pieces[pieces.length - 1] || pieces[pieces.length - 2] || pkg;\n  return filename.replace(/\\.(dylib|so|a|dll|exe)$/, '');\n}\n\nexport function getPlatform(dataPlatform: PlatformType | null, platform: string) {\n  // prioritize the frame platform but fall back to the platform\n  // of the stack trace / exception\n  return dataPlatform || platform;\n}\n\nexport function getFrameHint(frame: Frame) {\n  // returning [hintText, hintIcon]\n  const {symbolicatorStatus} = frame;\n  const func = frame.function || '<unknown>';\n  // Custom color used to match adjacent text.\n  const warningIcon = <IconQuestion size=\"xs\" color={'#2c45a8' as any} />;\n  const errorIcon = <IconWarning size=\"xs\" color=\"red300\" />;\n\n  if (func.match(/^@objc\\s/)) {\n    return [t('Objective-C -> Swift shim frame'), warningIcon];\n  }\n  if (func.match(/^__?hidden#\\d+/)) {\n    return [t('Hidden function from bitcode build'), errorIcon];\n  }\n  if (!symbolicatorStatus && func === '<unknown>') {\n    // Only render this if the event was not symbolicated.\n    return [t('No function name was supplied by the client SDK.'), warningIcon];\n  }\n\n  if (\n    func === '<unknown>' ||\n    (func === '<redacted>' && symbolicatorStatus === SymbolicatorStatus.MISSING_SYMBOL)\n  ) {\n    switch (symbolicatorStatus) {\n      case SymbolicatorStatus.MISSING_SYMBOL:\n        return [t('The symbol was not found within the debug file.'), warningIcon];\n      case SymbolicatorStatus.UNKNOWN_IMAGE:\n        return [t('No image is specified for the address of the frame.'), warningIcon];\n      case SymbolicatorStatus.MISSING:\n        return [\n          t('The debug file could not be retrieved from any of the sources.'),\n          errorIcon,\n        ];\n      case SymbolicatorStatus.MALFORMED:\n        return [t('The retrieved debug file could not be processed.'), errorIcon];\n      default:\n    }\n  }\n\n  if (func === '<redacted>') {\n    return [t('Unknown system frame. Usually from beta SDKs'), warningIcon];\n  }\n\n  return [null, null];\n}\n\nexport function isDotnet(platform: string) {\n  // csharp platform represents .NET and can be F#, VB or any language targeting CLS (the Common Language Specification)\n  return platform === 'csharp';\n}\n\nexport function hasContextSource(frame: Frame) {\n  return defined(frame.context) && !!frame.context.length;\n}\n\nexport function hasContextVars(frame: Frame) {\n  return !objectIsEmpty(frame.vars || {});\n}\n\nexport function hasContextRegisters(registers: Record<string, string>) {\n  return !objectIsEmpty(registers);\n}\n\nexport function hasAssembly(frame: Frame, platform?: string) {\n  return (\n    isDotnet(getPlatform(frame.platform, platform ?? 'other')) && defined(frame.package)\n  );\n}\n\nexport function isExpandable({\n  frame,\n  registers,\n  emptySourceNotation,\n  platform,\n  isOnlyFrame,\n}: {\n  frame: Frame;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  isOnlyFrame?: boolean;\n  platform?: string;\n}) {\n  return (\n    (!isOnlyFrame && emptySourceNotation) ||\n    hasContextSource(frame) ||\n    hasContextVars(frame) ||\n    hasContextRegisters(registers) ||\n    hasAssembly(frame, platform)\n  );\n}\n","import React, {Fragment, isValidElement} from 'react';\n\nimport ContextData from 'sentry/components/contextData';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {KeyValueListData} from 'sentry/types';\n\nexport interface ValueProps\n  extends Pick<KeyValueListData[0], 'subjectIcon' | 'meta' | 'value'> {\n  isContextData?: boolean;\n  raw?: boolean;\n}\n\nexport function Value({subjectIcon, meta, raw, isContextData, value = null}: ValueProps) {\n  if (isContextData) {\n    return (\n      <ContextData\n        data={!raw ? value : JSON.stringify(value)}\n        meta={meta}\n        withAnnotatedText\n      >\n        {subjectIcon}\n      </ContextData>\n    );\n  }\n\n  const dataValue: React.ReactNode =\n    typeof value === 'object' && !isValidElement(value)\n      ? JSON.stringify(value, null, 2)\n      : value;\n\n  if (typeof dataValue !== 'string' && isValidElement(dataValue)) {\n    return <Fragment>{dataValue}</Fragment>;\n  }\n\n  return (\n    <pre className=\"val-string\">\n      <AnnotatedText value={dataValue} meta={meta} />\n      {subjectIcon}\n    </pre>\n  );\n}\n","import styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport space from 'sentry/styles/space';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport theme from 'sentry/utils/theme';\n\nimport {Value, ValueProps} from './value';\n\ninterface Props extends Pick<ValueProps, 'raw' | 'isContextData'> {\n  data?: KeyValueListData;\n  isSorted?: boolean;\n  longKeys?: boolean;\n  onClick?: () => void;\n}\n\nfunction KeyValueList({\n  data,\n  isContextData = false,\n  isSorted = true,\n  raw = false,\n  longKeys = false,\n  onClick,\n}: Props) {\n  if (!defined(data) || data.length === 0) {\n    return null;\n  }\n\n  const keyValueData = isSorted ? sortBy(data, [({key}) => key.toLowerCase()]) : data;\n\n  return (\n    <table className=\"table key-value\" onClick={onClick}>\n      <tbody>\n        {keyValueData.map(\n          ({\n            key,\n            subject,\n            value = null,\n            meta,\n            subjectIcon,\n            subjectDataTestId,\n            actionButton,\n          }) => {\n            return (\n              <tr key={`${key}.${value}`}>\n                <TableSubject className=\"key\" wide={longKeys}>\n                  {subject}\n                </TableSubject>\n                <td className=\"val\" data-test-id={subjectDataTestId}>\n                  {actionButton ? (\n                    <ValueWithButtonContainer>\n                      <Value\n                        isContextData={isContextData}\n                        meta={meta}\n                        subjectIcon={subjectIcon}\n                        value={value}\n                        raw={raw}\n                      />\n                      <ActionButtonWrapper>{actionButton}</ActionButtonWrapper>\n                    </ValueWithButtonContainer>\n                  ) : (\n                    <Value\n                      isContextData={isContextData}\n                      meta={meta}\n                      subjectIcon={subjectIcon}\n                      value={value}\n                      raw={raw}\n                    />\n                  )}\n                </td>\n              </tr>\n            );\n          }\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nexport default KeyValueList;\n\nconst TableSubject = styled('td')<{wide?: boolean}>`\n  @media (min-width: ${theme.breakpoints.large}) {\n    max-width: ${p => (p.wide ? '620px !important' : 'none')};\n  }\n`;\n\nconst ValueWithButtonContainer = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  background: ${p => p.theme.bodyBackground};\n  padding: ${space(1)} 10px;\n  margin: ${space(0.25)} 0;\n  pre {\n    padding: 0 !important;\n    margin: 0 !important;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 1fr max-content;\n  }\n`;\n\nconst ActionButtonWrapper = styled('div')`\n  height: 100%;\n  display: flex;\n  align-items: flex-start;\n`;\n","import {Thread} from 'sentry/types';\n\nfunction findBestThread(threads: Array<Thread>) {\n  // search the entire threads list for a crashed thread with stack trace\n  return (\n    threads.find(thread => thread.crashed) ||\n    threads.find(thread => thread.stacktrace) ||\n    threads[0]\n  );\n}\n\nexport default findBestThread;\n","import {StacktraceType, Thread} from 'sentry/types';\n\nfunction getThreadStacktrace(raw: boolean, thread?: Thread): StacktraceType | undefined {\n  if (!thread) {\n    return undefined;\n  }\n\n  if (raw && thread.rawStacktrace) {\n    return thread.rawStacktrace;\n  }\n\n  if (thread.stacktrace) {\n    return thread.stacktrace;\n  }\n\n  return undefined;\n}\n\nexport default getThreadStacktrace;\n","export enum SymbolicatorStatus {\n  SYMBOLICATED = 'symbolicated',\n  MISSING_SYMBOL = 'missing_symbol',\n  UNKNOWN_IMAGE = 'unknown_image',\n  MISSING = 'missing',\n  MALFORMED = 'malformed',\n}\n","import * as Sentry from '@sentry/react';\nimport compact from 'lodash/compact';\nimport isString from 'lodash/isString';\nimport uniq from 'lodash/uniq';\nimport * as qs from 'query-string';\n\nimport {FILTER_MASK} from 'sentry/constants';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Frame, PlatformType} from 'sentry/types';\nimport {EntryRequest} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {fileExtensionToPlatform, getFileExtension} from 'sentry/utils/fileExtension';\n\nimport {DebugImage} from './debugMeta/types';\n\nexport function escapeQuotes(v: string) {\n  return v.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n}\n\n// TODO(dcramer): support cookies\nexport function getCurlCommand(data: EntryRequest['data']) {\n  let result = 'curl';\n\n  if (defined(data.method) && data.method !== 'GET') {\n    result += ' \\\\\\n -X ' + data.method;\n  }\n\n  // TODO(benvinegar): just gzip? what about deflate?\n  const compressed = data.headers?.find(\n    h => h[0] === 'Accept-Encoding' && h[1].indexOf('gzip') !== -1\n  );\n  if (compressed) {\n    result += ' \\\\\\n --compressed';\n  }\n\n  // sort headers\n  const headers =\n    data.headers?.sort(function (a, b) {\n      return a[0] === b[0] ? 0 : a[0] < b[0] ? -1 : 1;\n    }) ?? [];\n\n  for (const header of headers) {\n    result += ' \\\\\\n -H \"' + header[0] + ': ' + escapeQuotes(header[1] + '') + '\"';\n  }\n\n  if (defined(data.data)) {\n    switch (data.inferredContentType) {\n      case 'application/json':\n        result += ' \\\\\\n --data \"' + escapeQuotes(JSON.stringify(data.data)) + '\"';\n        break;\n      case 'application/x-www-form-urlencoded':\n        result +=\n          ' \\\\\\n --data \"' +\n          escapeQuotes(qs.stringify(data.data as {[key: string]: any})) +\n          '\"';\n        break;\n\n      default:\n        if (isString(data.data)) {\n          result += ' \\\\\\n --data \"' + escapeQuotes(data.data) + '\"';\n        } else if (Object.keys(data.data).length === 0) {\n          // Do nothing with empty object data.\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtra('data', data);\n            Sentry.captureException(new Error('Unknown event data'));\n          });\n        }\n    }\n  }\n\n  result += ' \\\\\\n \"' + getFullUrl(data) + '\"';\n  return result;\n}\n\nexport function stringifyQueryList(query: string | [key: string, value: string][]) {\n  if (isString(query)) {\n    return query;\n  }\n\n  const queryObj: Record<string, string[]> = {};\n  for (const kv of query) {\n    if (kv !== null && kv.length === 2) {\n      const [key, value] = kv;\n      if (value !== null) {\n        if (Array.isArray(queryObj[key])) {\n          queryObj[key].push(value);\n        } else {\n          queryObj[key] = [value];\n        }\n      }\n    }\n  }\n  return qs.stringify(queryObj);\n}\n\nexport function getFullUrl(data: EntryRequest['data']): string | undefined {\n  let fullUrl = data?.url;\n  if (!fullUrl) {\n    return fullUrl;\n  }\n\n  if (data?.query?.length) {\n    fullUrl += '?' + stringifyQueryList(data.query);\n  }\n\n  if (data.fragment) {\n    fullUrl += '#' + data.fragment;\n  }\n\n  return fullUrl;\n}\n\n/**\n * Converts an object of body/querystring key/value pairs\n * into a tuple of [key, value] pairs, and sorts them.\n *\n * This handles the case for query strings that were decoded like so:\n *\n *   ?foo=bar&foo=baz => { foo: ['bar', 'baz'] }\n *\n * By converting them to [['foo', 'bar'], ['foo', 'baz']]\n */\nexport function objectToSortedTupleArray(obj: Record<string, string | string[]>) {\n  return Object.keys(obj)\n    .reduce<[string, string][]>((out, k) => {\n      const val = obj[k];\n      return out.concat(\n        Array.isArray(val)\n          ? val.map(v => [k, v]) // key has multiple values (array)\n          : ([[k, val]] as [string, string][]) // key has single value\n      );\n    }, [])\n    .sort(function ([keyA, valA], [keyB, valB]) {\n      // if keys are identical, sort on value\n      if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n      }\n\n      return keyA < keyB ? -1 : 1;\n    });\n}\n\n// for context summaries and avatars\nexport function removeFilterMaskedEntries<T extends Record<string, any>>(rawData: T): T {\n  const cleanedData: Record<string, any> = {};\n  for (const key of Object.getOwnPropertyNames(rawData)) {\n    if (rawData[key] !== FILTER_MASK) {\n      cleanedData[key] = rawData[key];\n    }\n  }\n  return cleanedData as T;\n}\n\nexport function formatAddress(address: number, imageAddressLength: number | undefined) {\n  return `0x${address.toString(16).padStart(imageAddressLength ?? 0, '0')}`;\n}\n\nexport function parseAddress(address?: string | null) {\n  if (!address) {\n    return 0;\n  }\n\n  try {\n    return parseInt(address, 16) || 0;\n  } catch (_e) {\n    return 0;\n  }\n}\n\nexport function getImageRange(image: DebugImage) {\n  // The start address is normalized to a `0x` prefixed hex string. The event\n  // schema also allows ingesting plain numbers, but this is converted during\n  // ingestion.\n  const startAddress = parseAddress(image?.image_addr);\n\n  // The image size is normalized to a regular number. However, it can also be\n  // `null`, in which case we assume that it counts up to the next image.\n  const endAddress = startAddress + (image?.image_size || 0);\n\n  return [startAddress, endAddress];\n}\n\nexport function parseAssembly(assembly: string | null) {\n  let name: string | undefined;\n  let version: string | undefined;\n  let culture: string | undefined;\n  let publicKeyToken: string | undefined;\n\n  const pieces = assembly ? assembly.split(',') : [];\n\n  if (pieces.length === 4) {\n    name = pieces[0];\n    version = pieces[1].split('Version=')[1];\n    culture = pieces[2].split('Culture=')[1];\n    publicKeyToken = pieces[3].split('PublicKeyToken=')[1];\n  }\n\n  return {name, version, culture, publicKeyToken};\n}\n\nexport function stackTracePlatformIcon(platform: PlatformType, frames: Frame[]) {\n  const fileExtensions = uniq(\n    compact(frames.map(frame => getFileExtension(frame.filename ?? '')))\n  );\n\n  if (fileExtensions.length === 1) {\n    const newPlatform = fileExtensionToPlatform(fileExtensions[0]);\n\n    return newPlatform ?? platform;\n  }\n\n  return platform;\n}\n\nexport function isStacktraceNewestFirst() {\n  const user = ConfigStore.get('user');\n  // user may not be authenticated\n\n  if (!user) {\n    return true;\n  }\n\n  switch (user.options.stacktraceOrder) {\n    case 2:\n      return true;\n    case 1:\n      return false;\n    case -1:\n    default:\n      return true;\n  }\n}\n","import styled from '@emotion/styled';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  withoutBackground?: boolean;\n};\n\nconst Redaction = styled(({children, className}: Props) => (\n  <span className={className}>{children}</span>\n))`\n  cursor: default;\n  vertical-align: middle;\n  ${p => !p.withoutBackground && `background: rgba(255, 0, 0, 0.05);`}\n`;\nexport default Redaction;\n","import {t} from 'sentry/locale';\nimport {ChunkType} from 'sentry/types';\n\nconst REMARKS = {\n  a: 'Annotated',\n  x: 'Removed',\n  s: 'Replaced',\n  m: 'Masked',\n  p: 'Pseudonymized',\n  e: 'Encrypted',\n};\n\nconst KNOWN_RULES = {\n  '!limit': 'size limits',\n  '!raw': 'raw payload',\n  '!config': 'SDK configuration',\n};\n\nexport function getTooltipText({\n  remark = '',\n  rule_id: rule = '',\n}: Pick<ChunkType, 'remark' | 'rule_id'>) {\n  const remark_title = REMARKS[remark];\n  const rule_title = KNOWN_RULES[rule] || t('PII rule \"%s\"', rule);\n\n  if (remark_title) {\n    return t('%s because of %s', remark_title, rule_title);\n  }\n\n  return rule_title;\n}\n","import Tooltip from 'sentry/components/tooltip';\nimport {ChunkType} from 'sentry/types';\n\nimport Redaction from './redaction';\nimport {getTooltipText} from './utils';\n\ntype Props = {\n  chunk: ChunkType;\n};\n\nconst Chunk = ({chunk}: Props) => {\n  if (chunk.type === 'redaction') {\n    const title = getTooltipText({rule_id: chunk.rule_id, remark: chunk.remark});\n    return (\n      <Tooltip title={title}>\n        <Redaction>{chunk.text}</Redaction>\n      </Tooltip>\n    );\n  }\n\n  return <span>{chunk.text}</span>;\n};\n\nexport default Chunk;\n","import {cloneElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ChunkType} from 'sentry/types';\n\nimport Chunk from './chunk';\n\ntype Props = {\n  chunks: Array<ChunkType>;\n};\n\nconst Chunks = ({chunks}: Props) => (\n  <ChunksSpan>\n    {chunks.map((chunk, key) => cloneElement(<Chunk chunk={chunk} />, {key}))}\n  </ChunksSpan>\n);\n\nexport default Chunks;\n\nconst ChunksSpan = styled('span')`\n  span {\n    display: inline;\n  }\n`;\n","import {Fragment, isValidElement} from 'react';\n\nimport {t} from 'sentry/locale';\nimport {Meta} from 'sentry/types';\n\nimport Redaction from './redaction';\n\ntype Props = {\n  value: React.ReactNode;\n  meta?: Meta;\n};\n\n// If you find yourself modifying this component to fix some tooltip bug,\n// consider that `meta` is not properly passed into this component in the\n// first place. It's much more likely that `withMeta` is buggy or improperly\n// used than that this component has a bug.\nconst ValueElement = ({value, meta}: Props) => {\n  if (value && meta) {\n    return <Redaction>{value}</Redaction>;\n  }\n\n  if (meta?.err?.length) {\n    return (\n      <Redaction withoutBackground>\n        <i>{`<${t('invalid')}>`}</i>\n      </Redaction>\n    );\n  }\n\n  if (meta?.rem?.length) {\n    return (\n      <Redaction>\n        <i>{`<${t('redacted')}>`}</i>\n      </Redaction>\n    );\n  }\n\n  if (isValidElement(value)) {\n    return value;\n  }\n\n  return (\n    <Fragment>\n      {typeof value === 'object' || typeof value === 'boolean'\n        ? JSON.stringify(value)\n        : value}\n    </Fragment>\n  );\n};\n\nexport default ValueElement;\n","import styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta, MetaError} from 'sentry/types';\n\nimport Chunks from './chunks';\nimport {getTooltipText} from './utils';\nimport ValueElement from './valueElement';\n\ntype Props = {\n  value: React.ReactNode;\n  className?: string;\n  meta?: Meta;\n};\n\nconst AnnotatedText = ({value, meta, className, ...props}: Props) => {\n  const renderValue = () => {\n    if (meta?.chunks?.length && meta.chunks.length > 1) {\n      return <Chunks chunks={meta.chunks} />;\n    }\n\n    const element = <ValueElement value={value} meta={meta} />;\n\n    if (meta?.rem?.length) {\n      const title = getTooltipText({rule_id: meta.rem[0][0], remark: meta.rem[0][1]});\n      return <Tooltip title={title}>{element}</Tooltip>;\n    }\n\n    return element;\n  };\n\n  const formatErrorKind = (kind: string) => {\n    return capitalize(kind.replace(/_/g, ' '));\n  };\n\n  const getErrorMessage = (error: MetaError) => {\n    const errorMessage: string[] = [];\n\n    if (Array.isArray(error)) {\n      if (error[0]) {\n        errorMessage.push(formatErrorKind(error[0]));\n      }\n\n      if (error[1]?.reason) {\n        errorMessage.push(`(${error[1].reason})`);\n      }\n    } else {\n      errorMessage.push(formatErrorKind(error));\n    }\n\n    return errorMessage.join(' ');\n  };\n\n  const getTooltipTitle = (errors: Array<MetaError>) => {\n    if (errors.length === 1) {\n      return <TooltipTitle>{t('Error: %s', getErrorMessage(errors[0]))}</TooltipTitle>;\n    }\n    return (\n      <TooltipTitle>\n        <span>{t('Errors:')}</span>\n        <StyledList symbol=\"bullet\">\n          {errors.map((error, index) => (\n            <ListItem key={index}>{getErrorMessage(error)}</ListItem>\n          ))}\n        </StyledList>\n      </TooltipTitle>\n    );\n  };\n\n  const renderErrors = (errors: Array<MetaError>) => {\n    if (!errors.length) {\n      return null;\n    }\n\n    return (\n      <StyledTooltipError title={getTooltipTitle(errors)}>\n        <StyledIconWarning color=\"red300\" />\n      </StyledTooltipError>\n    );\n  };\n\n  return (\n    <span className={className} {...props}>\n      {renderValue()}\n      {meta?.err && renderErrors(meta.err)}\n    </span>\n  );\n};\n\nexport default AnnotatedText;\n\nconst StyledTooltipError = styled(Tooltip)`\n  margin-left: ${space(0.75)};\n  vertical-align: middle;\n`;\n\nconst StyledList = styled(List)`\n  li {\n    padding-left: ${space(3)};\n    word-break: break-all;\n    :before {\n      border-color: ${p => p.theme.white};\n      top: 6px;\n    }\n  }\n`;\n\nconst TooltipTitle = styled('div')`\n  text-align: left;\n`;\n\nconst StyledIconWarning = styled(IconWarning)`\n  vertical-align: middle;\n`;\n","import isEmpty from 'lodash/isEmpty';\nimport isNull from 'lodash/isNull';\n\nimport {Meta} from 'sentry/types';\n\nconst GET_META = Symbol('GET_META');\nconst IS_PROXY = Symbol('IS_PROXY');\n\ntype SymbolProp = typeof GET_META | typeof IS_PROXY;\n\nfunction isAnnotated(meta) {\n  if (isEmpty(meta)) {\n    return false;\n  }\n  return !isEmpty(meta.rem) || !isEmpty(meta.err);\n}\n\ntype Local = Record<string, any> | undefined;\n\nexport class MetaProxy {\n  private local: Local;\n\n  constructor(local: Local) {\n    this.local = local;\n  }\n\n  get<T extends {}>(\n    obj: T | Array<T>,\n    prop: Extract<keyof T, string> | SymbolProp,\n    receiver: T\n  ) {\n    // trap calls to `getMeta` to return meta object\n    if (prop === GET_META) {\n      return key => {\n        if (this.local && this.local[key] && this.local[key]['']) {\n          // TODO: Error checks\n          const meta = this.local[key][''];\n\n          return isAnnotated(meta) ? meta : undefined;\n        }\n        return undefined;\n      };\n    }\n\n    // this is how  we can determine if current `obj` is a proxy\n    if (prop === IS_PROXY) {\n      return true;\n    }\n\n    const value = Reflect.get(obj, prop, receiver);\n    if (!Reflect.has(obj, prop) || typeof value !== 'object' || isNull(value)) {\n      return value;\n    }\n\n    // This is so we don't create a new Proxy from an object that is\n    // already a proxy. Otherwise we can get into very deep recursive calls\n    if (Reflect.get(obj, IS_PROXY, receiver)) {\n      return value;\n    }\n\n    // Make sure we apply proxy to all children (objects and arrays)\n    // Do we need to check for annotated inside of objects?\n    return new Proxy(value, new MetaProxy(this.local && this.local[prop]));\n  }\n}\n\nexport function withMeta<T>(event: T): T {\n  if (!event) {\n    return event;\n  }\n\n  // Return unproxied `event` if browser does not support `Proxy`\n  if (typeof window.Proxy === 'undefined' || typeof window.Reflect === 'undefined') {\n    return event;\n  }\n\n  // withMeta returns a type that is supposed to be 100% compatible with its\n  // input type. Proxy typing on typescript is not really functional enough to\n  // make this work without casting.\n  //\n  // https://github.com/microsoft/TypeScript/issues/20846\n  return new Proxy(event, new MetaProxy((event as any)._meta)) as T;\n}\n\nexport function getMeta<T extends {}>(\n  obj: T | undefined,\n  prop: Extract<keyof T, string>\n): Meta | undefined {\n  if (!obj || typeof obj[GET_META] !== 'function') {\n    return undefined;\n  }\n\n  return obj[GET_META](prop);\n}\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\nexport const DataSection = styled('div')`\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  margin: 0;\n\n  /* Padding aligns with Layout.Body */\n  padding: ${space(3)} ${space(2)} ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(3)} ${space(4)} ${space(3)};\n  }\n`;\n\ntype BannerProps = {\n  priority: 'default' | 'danger' | 'success';\n};\n\nfunction getColors({priority, theme}: BannerProps & {theme: Theme}) {\n  const COLORS = {\n    default: {\n      background: theme.backgroundSecondary,\n      border: theme.border,\n    },\n    danger: {\n      background: theme.alert.error.backgroundLight,\n      border: theme.alert.error.border,\n    },\n    success: {\n      background: theme.alert.success.backgroundLight,\n      border: theme.alert.success.border,\n    },\n  } as const;\n\n  return COLORS[priority];\n}\n\nexport const BannerContainer = styled('div')<BannerProps>`\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  background: ${p => getColors(p).background};\n  border-top: 1px solid ${p => getColors(p).border};\n  border-bottom: 1px solid ${p => getColors(p).border};\n\n  /* Muted box & processing errors are in different parts of the DOM */\n  &\n    + ${/* sc-selector */ DataSection}:first-child,\n    &\n    + div\n    > ${/* sc-selector */ DataSection}:first-child {\n    border-top: 0;\n  }\n`;\n\nexport const BannerSummary = styled('p')`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 0;\n  padding: ${space(2)} ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    padding: ${space(2)} ${space(4)};\n  }\n\n  /* Get icons in top right of content box */\n  & > .icon,\n  & > svg {\n    flex-shrink: 0;\n    flex-grow: 0;\n    margin-right: ${space(1)};\n    margin-top: 2px;\n  }\n\n  & > span {\n    flex-grow: 1;\n  }\n\n  & > a {\n    align-self: flex-end;\n  }\n`;\n\nexport const CauseHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${space(3)};\n\n  & button,\n  & h3 {\n    color: ${p => p.theme.gray300};\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    text-transform: uppercase;\n  }\n\n  & h3 {\n    margin-bottom: 0;\n  }\n\n  & button {\n    background: none;\n    border: 0;\n    outline: none;\n    padding: 0;\n  }\n`;\n","import {createContext, Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport BooleanField from 'sentry/components/forms/booleanField';\nimport CompositeSelect from 'sentry/components/forms/compositeSelect';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconSliders} from 'sentry/icons';\nimport {IconAnchor} from 'sentry/icons/iconAnchor';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PlatformType, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE} from 'sentry/types/stacktrace';\nimport {isNativePlatform} from 'sentry/utils/platform';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport EventDataSection from './eventDataSection';\n\nconst sortByOptions = {\n  'recent-first': t('Recent first'),\n  'recent-last': t('Recent last'),\n};\n\nexport const displayOptions = {\n  'absolute-addresses': t('Absolute addresses'),\n  'absolute-file-paths': t('Absolute file paths'),\n  minified: t('Unsymbolicated'),\n  'raw-stack-trace': t('Raw stack trace'),\n  'verbose-function-names': t('Verbose function names'),\n};\n\ntype State = {\n  display: Array<keyof typeof displayOptions>;\n  fullStackTrace: boolean;\n  sortBy: keyof typeof sortByOptions;\n};\n\ntype ChildProps = Omit<State, 'sortBy'> & {recentFirst: boolean};\n\ntype Props = {\n  children: (childProps: ChildProps) => React.ReactNode;\n  eventId: Event['id'];\n  fullStackTrace: boolean;\n  hasAbsoluteAddresses: boolean;\n  hasAbsoluteFilePaths: boolean;\n  hasAppOnlyFrames: boolean;\n  hasMinified: boolean;\n  hasNewestFirst: boolean;\n  hasVerboseFunctionNames: boolean;\n  platform: PlatformType;\n  projectId: Project['id'];\n  recentFirst: boolean;\n  stackTraceNotFound: boolean;\n  stackType: STACK_TYPE;\n  title: React.ReactNode;\n  type: string;\n  showPermalink?: boolean;\n  wrapTitle?: boolean;\n};\n\nexport const TraceEventDataSectionContext = createContext<ChildProps | undefined>(\n  undefined\n);\n\nexport function TraceEventDataSection({\n  type,\n  title,\n  showPermalink,\n  wrapTitle,\n  stackTraceNotFound,\n  fullStackTrace,\n  recentFirst,\n  children,\n  platform,\n  stackType,\n  projectId,\n  eventId,\n  hasNewestFirst,\n  hasMinified,\n  hasVerboseFunctionNames,\n  hasAbsoluteFilePaths,\n  hasAbsoluteAddresses,\n  hasAppOnlyFrames,\n}: Props) {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [state, setState] = useState<State>({\n    sortBy: recentFirst ? 'recent-first' : 'recent-last',\n    fullStackTrace,\n    display: [],\n  });\n\n  function getDisplayOptions(): {\n    label: string;\n    value: keyof typeof displayOptions;\n    isDisabled?: boolean;\n    tooltip?: string;\n  }[] {\n    if (platform === 'objc' || platform === 'native' || platform === 'cocoa') {\n      return [\n        {\n          label: displayOptions['absolute-addresses'],\n          value: 'absolute-addresses',\n          isDisabled: state.display.includes('raw-stack-trace') || !hasAbsoluteAddresses,\n          tooltip: state.display.includes('raw-stack-trace')\n            ? t('Not available on raw stack trace')\n            : !hasAbsoluteAddresses\n            ? t('Absolute addresses not available')\n            : undefined,\n        },\n        {\n          label: displayOptions['absolute-file-paths'],\n          value: 'absolute-file-paths',\n          isDisabled: state.display.includes('raw-stack-trace') || !hasAbsoluteFilePaths,\n          tooltip: state.display.includes('raw-stack-trace')\n            ? t('Not available on raw stack trace')\n            : !hasAbsoluteFilePaths\n            ? t('Absolute file paths not available')\n            : undefined,\n        },\n        {\n          label: displayOptions.minified,\n          value: 'minified',\n          isDisabled: !hasMinified,\n          tooltip: !hasMinified ? t('Unsymbolicated version not available') : undefined,\n        },\n        {\n          label: displayOptions['raw-stack-trace'],\n          value: 'raw-stack-trace',\n        },\n        {\n          label: displayOptions['verbose-function-names'],\n          value: 'verbose-function-names',\n          isDisabled:\n            state.display.includes('raw-stack-trace') || !hasVerboseFunctionNames,\n          tooltip: state.display.includes('raw-stack-trace')\n            ? t('Not available on raw stack trace')\n            : !hasVerboseFunctionNames\n            ? t('Verbose function names not available')\n            : undefined,\n        },\n      ];\n    }\n\n    if (platform.startsWith('python')) {\n      return [\n        {\n          label: displayOptions['raw-stack-trace'],\n          value: 'raw-stack-trace',\n        },\n      ];\n    }\n\n    return [\n      {\n        label: displayOptions.minified,\n        value: 'minified',\n        isDisabled: !hasMinified,\n        tooltip: !hasMinified ? t('Minified version not available') : undefined,\n      },\n    ];\n  }\n\n  const nativePlatform = isNativePlatform(platform);\n  const minified = stackType === STACK_TYPE.MINIFIED;\n\n  // Apple crash report endpoint\n  const appleCrashEndpoint = `/projects/${organization.slug}/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;\n  const rawStackTraceDownloadLink = `${api.baseUrl}${appleCrashEndpoint}&download=1`;\n\n  const sortByTooltip = !hasNewestFirst\n    ? t('Not available on stack trace with single frame')\n    : state.display.includes('raw-stack-trace')\n    ? t('Not available on raw stack trace')\n    : undefined;\n\n  const childProps = {\n    recentFirst: state.sortBy === 'recent-first',\n    display: state.display,\n    fullStackTrace: state.fullStackTrace,\n  };\n\n  return (\n    <EventDataSection\n      type={type}\n      title={\n        <Header>\n          <Title>\n            {showPermalink ? (\n              <div>\n                <Permalink href={'#' + type} className=\"permalink\">\n                  <StyledIconAnchor />\n                  {title}\n                </Permalink>\n              </div>\n            ) : (\n              title\n            )}\n          </Title>\n          {!stackTraceNotFound && (\n            <Fragment>\n              {!state.display.includes('raw-stack-trace') && (\n                <Tooltip\n                  title={!hasAppOnlyFrames ? t('Only full version available') : undefined}\n                  disabled={hasAppOnlyFrames}\n                >\n                  <FullStackTraceToggler\n                    name=\"full-stack-trace-toggler\"\n                    label={t('Full stack trace')}\n                    hideControlState\n                    value={state.fullStackTrace}\n                    onChange={() =>\n                      setState({\n                        ...state,\n                        fullStackTrace: !state.fullStackTrace,\n                      })\n                    }\n                  />\n                </Tooltip>\n              )}\n              {state.display.includes('raw-stack-trace') && nativePlatform && (\n                <Button\n                  size=\"small\"\n                  href={rawStackTraceDownloadLink}\n                  title={t('Download raw stack trace file')}\n                >\n                  {t('Download')}\n                </Button>\n              )}\n              <CompositeSelect\n                triggerLabel={t('Options')}\n                triggerProps={{\n                  icon: <IconSliders />,\n                  size: 'small',\n                }}\n                placement=\"bottom right\"\n                sections={[\n                  {\n                    label: t('Sort By'),\n                    value: 'sort-by',\n                    defaultValue: state.sortBy,\n                    options: Object.entries(sortByOptions).map(([value, label]) => ({\n                      label,\n                      value,\n                      isDisabled: !!sortByTooltip,\n                      tooltip: sortByTooltip,\n                    })),\n                    onChange: sortBy => setState({...state, sortBy}),\n                  },\n                  {\n                    label: t('Display'),\n                    value: 'display',\n                    defaultValue: state.display,\n                    multiple: true,\n                    options: getDisplayOptions().map(option => ({\n                      ...option,\n                      value: String(option.value),\n                    })),\n                    onChange: display => setState({...state, display}),\n                  },\n                ]}\n              />\n            </Fragment>\n          )}\n        </Header>\n      }\n      showPermalink={false}\n      wrapTitle={wrapTitle}\n    >\n      <TraceEventDataSectionContext.Provider value={childProps}>\n        {children(childProps)}\n      </TraceEventDataSectionContext.Provider>\n    </EventDataSection>\n  );\n}\n\nconst StyledIconAnchor = styled(IconAnchor)`\n  display: none;\n  position: absolute;\n  top: 4px;\n  left: -22px;\n`;\n\nconst Permalink = styled('a')`\n  display: inline-flex;\n  justify-content: flex-start;\n  :hover ${StyledIconAnchor} {\n    display: block;\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst FullStackTraceToggler = styled(BooleanField)`\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  gap: ${space(1)};\n  border-bottom: none;\n  justify-content: flex-end;\n\n  && {\n    > * {\n      padding: 0;\n      width: auto;\n    }\n  }\n`;\n\nconst Header = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(1)};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled('div')`\n  flex: 1;\n  & > *:first-child {\n    width: auto;\n  }\n`;\n","import {useMemo, useState} from 'react';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {GeneralSelectValue} from 'sentry/components/forms/selectControl';\nimport {valueIsEqual} from 'sentry/utils';\n\n/**\n * CompositeSelect simulates independent selectors inside the same dropdown\n * menu. Each selector is called a \"section\". The selection value of one\n * section does not affect the value of the others.\n */\ntype Section<OptionType> = {\n  /**\n   * Text label that will be display on top of the section.\n   */\n  label: string;\n  /**\n   * Selectable options inside the section.\n   */\n  options: OptionType[];\n  /**\n   * Must be a unique indentifying key for the section. This value will be\n   * used in the onChange return value. For example, if there are two\n   * sections, \"section1\" and \"section2\", then the onChange callback will be\n   * invoked as onChange({section1: [selected option values], section2:\n   * [selected option values]}).\n   */\n  value: string;\n  defaultValue?: any;\n  /**\n   * Whether the section has multiple (versus) single selection.\n   */\n  multiple?: boolean;\n  onChange?: (value: any) => void;\n};\n\ntype ExtendedOptionType = GeneralSelectValue & {\n  selectionMode?: 'multiple' | 'single';\n};\n\ntype Props<OptionType> = Omit<\n  React.ComponentProps<typeof CompactSelect>,\n  'multiple' | 'defaultValue' | 'onChange'\n> & {\n  /**\n   * Array containing the independent selection sections. NOTE: This array\n   * should not change (i.e. we shouldn't add/remove sections) during the\n   * component's lifecycle. Updating the options array inside sech section is\n   * fine.\n   */\n  sections: Section<OptionType>[];\n};\n\n/**\n * Special version of CompactSelect that simulates independent selectors (here\n * implemented as \"sections\") within the same dropdown menu.\n */\nfunction CompositeSelect<OptionType extends GeneralSelectValue = GeneralSelectValue>({\n  sections,\n  ...props\n}: Props<OptionType>) {\n  const [values, setValues] = useState(sections.map(section => section.defaultValue));\n\n  /**\n   * Object that maps an option value (e.g. \"opt_one\") to its parent section's index,\n   * to be used in onChangeValueMap.\n   */\n  const optionsMap = useMemo(() => {\n    const allOptions = sections\n      .map((section, i) => section.options.map(opt => [opt.value, i]))\n      .flat();\n    return Object.fromEntries(allOptions);\n  }, [sections]);\n\n  /**\n   * Options with the \"selectionMode\" key attached. This key overrides the\n   * isMulti setting from SelectControl and forces SelectOption\n   * (./selectOption.tsx) to display either a chekmark or a checkbox based on\n   * the selection mode of its parent section, rather than the selection mode\n   * of the entire select menu.\n   */\n  const options = useMemo(() => {\n    return sections.map(section => ({\n      ...section,\n      options: section.options.map(\n        opt =>\n          ({\n            ...opt,\n            selectionMode: section.multiple ? 'multiple' : 'single',\n          } as ExtendedOptionType)\n      ),\n    }));\n  }, [sections]);\n\n  /**\n   * Intercepts the incoming set of selected values, and trims it so that\n   * single-selection sections will only have one selected value at a time.\n   */\n  function onChangeValueMap(selectedOptions: ExtendedOptionType[]) {\n    const newValues = new Array(sections.length).fill(undefined);\n\n    selectedOptions.forEach(option => {\n      const parentSectionIndex = optionsMap[option.value];\n      const parentSection = sections[parentSectionIndex];\n\n      // If the section allows multiple selection, then add the value to the\n      // list of selected values\n      if (parentSection.multiple) {\n        if (!newValues[parentSectionIndex]) {\n          newValues[parentSectionIndex] = [];\n        }\n        newValues[parentSectionIndex].push(option.value);\n        return;\n      }\n\n      // If the section allows only single selection, then replace whatever the\n      // old value is with the new one.\n      if (option.value) {\n        newValues[parentSectionIndex] = option.value;\n      }\n    });\n\n    sections.forEach((section, i) => {\n      // Prevent sections with single selection from losing their values. This might\n      // happen if the user clicks on an already-selected option.\n      if (!section.multiple && !newValues[i]) {\n        newValues[i] = values[i];\n        // Return an empty array for sections with multiple selection without any value.\n      } else if (!newValues[i]) {\n        newValues[i] = [];\n      }\n\n      // Trigger the onChange callback for sections whose values have changed.\n      if (!valueIsEqual(values[i], newValues[i])) {\n        sections[i].onChange?.(newValues[i]);\n      }\n    });\n\n    setValues(newValues);\n\n    // Return a flattened array of the selected values to be used inside\n    // CompactSelect and SelectControl.\n    return newValues.flat();\n  }\n\n  return (\n    <CompactSelect<ExtendedOptionType>\n      {...props}\n      multiple\n      options={options}\n      defaultValue={sections.map(section => section.defaultValue).flat()}\n      onChangeValueMap={onChangeValueMap}\n    />\n  );\n}\n\nexport default CompositeSelect;\n","import styled from '@emotion/styled';\n\nimport NavTabs from 'sentry/components/navTabs';\nimport space from 'sentry/styles/space';\n\n/**\n * Base container for 66/33 containers.\n */\nexport const Body = styled('div')<{noRowGap?: boolean}>`\n  padding: ${space(2)};\n  margin: 0;\n  background-color: ${p => p.theme.background};\n  flex-grow: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${p =>\n      !p.noRowGap ? `${space(3)} ${space(4)}` : `${space(2)} ${space(4)}`};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    display: grid;\n    grid-template-columns: minmax(100px, auto) 325px;\n    align-content: start;\n    gap: ${p => (!p.noRowGap ? `${space(3)}` : `0 ${space(3)}`)};\n  }\n`;\n\n/**\n * Use HeaderContent to create horizontal regions in the header\n * that contain a heading/breadcrumbs and a button group.\n */\nexport const HeaderContent = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: normal;\n  margin-bottom: ${space(2)};\n  overflow: hidden;\n  max-width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    margin-bottom: ${space(1)};\n  }\n`;\n\n/**\n * Container for action buttons and secondary information that\n * flows on the top right of the header.\n */\nexport const HeaderActions = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: normal;\n  min-width: max-content;\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    width: max-content;\n    margin-bottom: ${space(2)};\n  }\n`;\n\n/**\n * Heading container that includes margins.\n */\nexport const Title = styled('h1')`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  margin-top: ${space(2)};\n  /* TODO(bootstrap) Remove important when bootstrap headings are removed */\n  margin-bottom: 0 !important;\n  min-height: 30px;\n  align-self: center;\n  ${p => p.theme.overflowEllipsis};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    margin-top: ${space(1)};\n  }\n`;\n\n/**\n * Header container for header content and header actions.\n *\n * Uses a horizontal layout in wide viewports to put space between\n * the headings and the actions container. In narrow viewports these elements\n * are stacked vertically.\n *\n * Use `noActionWrap` to disable wrapping if there are minimal actions.\n */\nexport const Header = styled('div')<{noActionWrap?: boolean}>`\n  display: grid;\n  grid-template-columns: ${p =>\n    !p.noActionWrap ? 'minmax(0, 1fr)' : 'minmax(0, 1fr) auto'};\n\n  padding: ${space(2)} ${space(2)} 0 ${space(2)};\n  background-color: transparent;\n  border-bottom: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)} ${space(4)} 0 ${space(4)};\n    grid-template-columns: minmax(0, 1fr) auto;\n  }\n`;\n\n/**\n * Styled Nav Tabs for use inside a Layout.Header component\n */\nexport const HeaderNavTabs = styled(NavTabs)`\n  margin: 0;\n  border-bottom: 0 !important;\n\n  & > li {\n    margin-right: ${space(3)};\n  }\n  & > li > a {\n    display: flex;\n    align-items: center;\n    height: 1.25rem;\n    padding: ${space(1)} 0;\n    margin-bottom: 4px;\n    box-sizing: content-box;\n  }\n  & > li.active > a {\n    margin-bottom: 0;\n  }\n`;\n\n/**\n * Containers for two column 66/33 layout.\n */\nexport const Main = styled('section')<{fullWidth?: boolean}>`\n  grid-column: ${p => (p.fullWidth ? '1/3' : '1/2')};\n  max-width: 100%;\n`;\n\nexport const Side = styled('aside')`\n  grid-column: 2/3;\n`;\n","import styled from '@emotion/styled';\nimport classnames from 'classnames';\n\ninterface NavProps extends React.HTMLAttributes<HTMLUListElement> {\n  underlined?: boolean;\n}\n\nfunction NavTabs({underlined, className, ...tabProps}: NavProps) {\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n\n  return <Wrap className={mergedClassName} {...tabProps} />;\n}\n\nexport default NavTabs;\n\nconst Wrap = styled('ul')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Query} from 'history';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\n\n/**\n * @param cursor The string cursor value\n * @param path   The current page pathname\n * @param query  The current query object\n * @param delta  The delta in page number change triggered by the\n *               click. A negative delta would be a \"previous\" page.\n */\nexport type CursorHandler = (\n  cursor: string | undefined,\n  path: string,\n  query: Query,\n  delta: number\n) => void;\n\ntype Props = WithRouterProps & {\n  caption?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  onCursor?: CursorHandler;\n  pageLinks?: string | null;\n  paginationAnalyticsEvent?: (direction: string) => void;\n  size?: 'zero' | 'xsmall' | 'small';\n  to?: string;\n};\n\nconst defaultOnCursor: CursorHandler = (cursor, path, query, _direction) =>\n  browserHistory.push({\n    pathname: path,\n    query: {...query, cursor},\n  });\n\nconst Pagination = ({\n  to,\n  location,\n  className,\n  onCursor = defaultOnCursor,\n  paginationAnalyticsEvent,\n  pageLinks,\n  size = 'small',\n  caption,\n  disabled = false,\n}: Props) => {\n  if (!pageLinks) {\n    return null;\n  }\n\n  const path = to ?? location.pathname;\n  const query = location.query;\n  const links = parseLinkHeader(pageLinks);\n  const previousDisabled = disabled || links.previous?.results === false;\n  const nextDisabled = disabled || links.next?.results === false;\n\n  return (\n    <Wrapper className={className}>\n      {caption && <PaginationCaption>{caption}</PaginationCaption>}\n      <ButtonBar merged>\n        <Button\n          icon={<IconChevron direction=\"left\" size=\"sm\" />}\n          aria-label={t('Previous')}\n          size={size}\n          disabled={previousDisabled}\n          onClick={() => {\n            onCursor?.(links.previous?.cursor, path, query, -1);\n            paginationAnalyticsEvent?.('Previous');\n          }}\n        />\n        <Button\n          icon={<IconChevron direction=\"right\" size=\"sm\" />}\n          aria-label={t('Next')}\n          size={size}\n          disabled={nextDisabled}\n          onClick={() => {\n            onCursor?.(links.next?.cursor, path, query, 1);\n            paginationAnalyticsEvent?.('Next');\n          }}\n        />\n      </ButtonBar>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  margin: ${space(3)} 0 0 0;\n`;\n\nconst PaginationCaption = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(2)};\n`;\n\nexport default withRouter(Pagination);\n","import styled from '@emotion/styled';\n\nimport SentryAppAvatar from 'sentry/components/avatar/sentryAppAvatar';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {SentryAppComponent} from 'sentry/types';\n\ntype Props = {\n  sentryAppComponent: SentryAppComponent;\n};\n\n/**\n * Icon Renderer for SentryAppComponents with UI\n * (e.g. Issue Linking, Stacktrace Linking)\n */\nconst SentryAppComponentIcon = ({sentryAppComponent: {sentryApp}}: Props) => {\n  const selectedAvatar = sentryApp?.avatars?.find(({color}) => color === false);\n  const isDefault = selectedAvatar?.avatarType !== 'upload';\n  return (\n    <SentryAppAvatarWrapper\n      isDark={ConfigStore.get('theme') === 'dark'}\n      isDefault={isDefault}\n    >\n      <SentryAppAvatar sentryApp={sentryApp} size={20} isColor={false} />\n    </SentryAppAvatarWrapper>\n  );\n};\n\nexport default SentryAppComponentIcon;\n\nconst SentryAppAvatarWrapper = styled('span')<{isDark: boolean; isDefault: boolean}>`\n  color: ${({isDark}) => (isDark ? 'white' : 'black')};\n  filter: ${p => (p.isDark && !p.isDefault ? 'invert(1)' : 'invert(0)')};\n  line-height: 0;\n  flex-shrink: 0;\n`;\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport StackTraceContent from 'sentry/components/events/interfaces/crashContent/stackTrace/content';\nimport StackTraceContentV2 from 'sentry/components/events/interfaces/crashContent/stackTrace/contentV2';\nimport StackTraceContentV3 from 'sentry/components/events/interfaces/crashContent/stackTrace/contentV3';\nimport {isStacktraceNewestFirst} from 'sentry/components/events/interfaces/utils';\nimport {Body, Hovercard} from 'sentry/components/hovercard';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PlatformType} from 'sentry/types';\nimport {EntryType, Event} from 'sentry/types/event';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport {defined} from 'sentry/utils';\nimport {isNativePlatform} from 'sentry/utils/platform';\nimport useApi from 'sentry/utils/useApi';\n\nimport findBestThread from './events/interfaces/threads/threadSelector/findBestThread';\nimport getThreadStacktrace from './events/interfaces/threads/threadSelector/getThreadStacktrace';\n\nconst REQUEST_DELAY = 100;\nconst HOVERCARD_DELAY = 400;\n\nexport const STACKTRACE_PREVIEW_TOOLTIP_DELAY = 1000;\n\nfunction getStacktrace(event: Event): StacktraceType | null {\n  const exceptionsWithStacktrace =\n    event.entries\n      .find(e => e.type === EntryType.EXCEPTION)\n      ?.data?.values.filter(({stacktrace}) => defined(stacktrace)) ?? [];\n\n  const exceptionStacktrace: StacktraceType | undefined = isStacktraceNewestFirst()\n    ? exceptionsWithStacktrace[exceptionsWithStacktrace.length - 1]?.stacktrace\n    : exceptionsWithStacktrace[0]?.stacktrace;\n\n  if (exceptionStacktrace) {\n    return exceptionStacktrace;\n  }\n\n  const threads =\n    event.entries.find(e => e.type === EntryType.THREADS)?.data?.values ?? [];\n  const bestThread = findBestThread(threads);\n\n  if (!bestThread) {\n    return null;\n  }\n\n  const bestThreadStacktrace = getThreadStacktrace(false, bestThread);\n\n  if (bestThreadStacktrace) {\n    return bestThreadStacktrace;\n  }\n\n  return null;\n}\n\nfunction StackTracePreviewContent({\n  event,\n  stacktrace,\n  orgFeatures = [],\n  groupingCurrentLevel,\n}: {\n  event: Event;\n  stacktrace: StacktraceType;\n  groupingCurrentLevel?: number;\n  orgFeatures?: string[];\n}) {\n  const includeSystemFrames = useMemo(() => {\n    return stacktrace?.frames?.every(frame => !frame.inApp) ?? false;\n  }, [stacktrace]);\n\n  const framePlatform = stacktrace?.frames?.find(frame => !!frame.platform)?.platform;\n  const platform = (framePlatform ?? event.platform ?? 'other') as PlatformType;\n  const newestFirst = isStacktraceNewestFirst();\n\n  const commonProps = {\n    data: stacktrace,\n    expandFirstFrame: false,\n    includeSystemFrames,\n    platform,\n    newestFirst,\n    event,\n    isHoverPreviewed: true,\n  };\n\n  if (orgFeatures.includes('native-stack-trace-v2') && isNativePlatform(platform)) {\n    return (\n      <StackTraceContentV3 {...commonProps} groupingCurrentLevel={groupingCurrentLevel} />\n    );\n  }\n\n  if (orgFeatures.includes('grouping-stacktrace-ui')) {\n    return (\n      <StackTraceContentV2 {...commonProps} groupingCurrentLevel={groupingCurrentLevel} />\n    );\n  }\n\n  return <StackTraceContent {...commonProps} />;\n}\n\ntype StackTracePreviewProps = {\n  children: React.ReactNode;\n  issueId: string;\n  organization: Organization;\n  className?: string;\n  eventId?: string;\n  groupingCurrentLevel?: number;\n  projectSlug?: string;\n};\n\nfunction StackTracePreview(props: StackTracePreviewProps): React.ReactElement {\n  const theme = useTheme();\n  const api = useApi();\n\n  const [loadingVisible, setLoadingVisible] = useState<boolean>(false);\n  const [status, setStatus] = useState<'loading' | 'loaded' | 'error'>('loading');\n  const [event, setEvent] = useState<Event | null>(null);\n\n  const delayTimeoutRef = useRef<number | undefined>(undefined);\n  const loaderTimeoutRef = useRef<number | undefined>(undefined);\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(loaderTimeoutRef.current);\n      window.clearTimeout(delayTimeoutRef.current);\n    };\n  }, []);\n\n  const fetchData = useCallback(async () => {\n    // Data is already loaded\n    if (event) {\n      return;\n    }\n\n    // These are required props to load data\n    if (!props.issueId && !props.eventId && !props.projectSlug) {\n      return;\n    }\n\n    loaderTimeoutRef.current = window.setTimeout(() => {\n      setLoadingVisible(true);\n    }, HOVERCARD_DELAY);\n\n    try {\n      const evt = await api.requestPromise(\n        props.eventId && props.projectSlug\n          ? `/projects/${props.organization.slug}/${props.projectSlug}/events/${props.eventId}/`\n          : `/issues/${props.issueId}/events/latest/?collapse=stacktraceOnly`\n      );\n      window.clearTimeout(loaderTimeoutRef.current);\n      setEvent(evt);\n      setStatus('loaded');\n      setLoadingVisible(false);\n    } catch {\n      window.clearTimeout(loaderTimeoutRef.current);\n      setEvent(null);\n      setStatus('error');\n      setLoadingVisible(false);\n    }\n  }, [\n    event,\n    api,\n    props.organization.slug,\n    props.projectSlug,\n    props.eventId,\n    props.issueId,\n  ]);\n\n  const handleMouseEnter = useCallback(() => {\n    window.clearTimeout(delayTimeoutRef.current);\n    delayTimeoutRef.current = window.setTimeout(fetchData, REQUEST_DELAY);\n  }, [fetchData]);\n\n  const handleMouseLeave = useCallback(() => {\n    window.clearTimeout(delayTimeoutRef.current);\n    delayTimeoutRef.current = undefined;\n  }, []);\n\n  // Not sure why we need to stop propagation, maybe to to prevent the hovercard from closing?\n  // If we are doing this often, maybe it should be part of the hovercard component.\n  const handleStackTracePreviewClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n  }, []);\n\n  const stacktrace = useMemo(() => {\n    if (event) {\n      return getStacktrace(event);\n    }\n    return null;\n  }, [event]);\n\n  return (\n    <span\n      className={props.className}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <StyledHovercard\n        body={\n          status === 'loading' && !loadingVisible ? null : status === 'loading' ? (\n            <NoStackTraceWrapper onClick={handleStackTracePreviewClick}>\n              <LoadingIndicator hideMessage size={32} />\n            </NoStackTraceWrapper>\n          ) : status === 'error' ? (\n            <NoStackTraceWrapper onClick={handleStackTracePreviewClick}>\n              {t('Failed to load stack trace.')}\n            </NoStackTraceWrapper>\n          ) : !stacktrace ? (\n            <NoStackTraceWrapper onClick={handleStackTracePreviewClick}>\n              {t('There is no stack trace available for this issue.')}\n            </NoStackTraceWrapper>\n          ) : !event ? null : (\n            <div onClick={handleStackTracePreviewClick}>\n              <StackTracePreviewContent\n                event={event}\n                stacktrace={stacktrace}\n                groupingCurrentLevel={props.groupingCurrentLevel}\n                orgFeatures={props.organization.features}\n              />\n            </div>\n          )\n        }\n        position=\"right\"\n        state={\n          status === 'loading' && loadingVisible\n            ? 'loading'\n            : !stacktrace\n            ? 'empty'\n            : 'done'\n        }\n        tipBorderColor={theme.border}\n        tipColor={theme.background}\n      >\n        {props.children}\n      </StyledHovercard>\n    </span>\n  );\n}\n\nexport {StackTracePreview};\n\nconst StyledHovercard = styled(Hovercard)<{state: 'loading' | 'empty' | 'done'}>`\n  /* Lower z-index to match the modals (10000 vs 10002) to allow stackTraceLinkModal be on top of stack trace preview. */\n  z-index: ${p => p.theme.zIndex.modal};\n  width: ${p => {\n    if (p.state === 'loading') {\n      return 'auto';\n    }\n    if (p.state === 'empty') {\n      return '340px';\n    }\n    return '700px';\n  }};\n\n  ${Body} {\n    padding: 0;\n    max-height: 300px;\n    overflow-y: auto;\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n    border-bottom-right-radius: ${p => p.theme.borderRadius};\n  }\n\n  .traceback {\n    margin-bottom: 0;\n    border: 0;\n    box-shadow: none;\n  }\n\n  .loading {\n    margin: 0 auto;\n    .loading-indicator {\n      /**\n      * Overriding the .less file - for default 64px loader we have the width of border set to 6px\n      * For 32px we therefore need 3px to keep the same thickness ratio\n      */\n      border-width: 3px;\n    }\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    display: none;\n  }\n`;\n\nconst NoStackTraceWrapper = styled('div')`\n  color: ${p => p.theme.subText};\n  padding: ${space(1.5)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 56px;\n`;\n","import {cloneElement, PureComponent} from 'react';\n\ntype ClickProps<T> = {\n  onClick?: React.HTMLAttributes<T>['onClick'];\n};\n\ntype Props<T extends HTMLElement> = ClickProps<T> & {\n  children: React.ReactElement<T>;\n};\n\ntype State = {\n  startCoords?: [number, number];\n};\n\n/**\n * Does not fire the onlick event if the mouse has moved outside of the\n * original click location upon release.\n *\n * <StrictClick onClick={this.onClickHandler}>\n *   <button>Some button</button>\n * </StrictClick>\n */\nclass StrictClick<T extends HTMLElement> extends PureComponent<Props<T>, State> {\n  static MAX_DELTA_X = 10;\n  static MAX_DELTA_Y = 10;\n\n  handleMouseDown = ({screenX, screenY}: React.MouseEvent<T>) =>\n    this.setState({startCoords: [screenX, screenY]});\n\n  handleMouseClick = (evt: React.MouseEvent<T>) => {\n    if (!this.props.onClick) {\n      return;\n    }\n\n    // Click happens if mouse down/up in same element - click will not fire if\n    // either initial mouse down OR final mouse up occurs in different element\n    const [x, y] = this.state.startCoords!;\n    const deltaX = Math.abs(evt.screenX - x);\n    const deltaY = Math.abs(evt.screenY - y);\n\n    // If mouse hasn't moved more than 10 pixels in either Y or X direction,\n    // fire onClick\n    if (deltaX < StrictClick.MAX_DELTA_X && deltaY < StrictClick.MAX_DELTA_Y) {\n      this.props.onClick(evt);\n    }\n    this.setState({startCoords: undefined});\n  };\n\n  render() {\n    // Bail out early if there is no onClick handler\n    if (!this.props.onClick) {\n      return this.props.children;\n    }\n\n    return cloneElement(this.props.children, {\n      onMouseDown: this.handleMouseDown,\n      onClick: this.handleMouseClick,\n    });\n  }\n}\n\nexport default StrictClick;\n","import {PureComponent} from 'react';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\nimport moment from 'moment-timezone';\n\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ColorOrAlias} from 'sentry/utils/theme';\n\nimport Tooltip from './tooltip';\n\nconst ONE_MINUTE_IN_MS = 60000;\n\ntype RelaxedDateType = string | number | Date;\n\ninterface DefaultProps {\n  /**\n   * Suffix after elapsed time\n   * e.g. \"ago\" in \"5 minutes ago\"\n   */\n  suffix: string;\n}\n\ninterface Props extends DefaultProps, React.TimeHTMLAttributes<HTMLTimeElement> {\n  /**\n   * The date value, can be string, number (e.g. timestamp), or instance of Date\n   */\n  date: RelaxedDateType;\n\n  className?: string;\n\n  /**\n   * By default we show tooltip with absolute date on hover, this prop disables that\n   */\n  disabledAbsoluteTooltip?: boolean;\n  /**\n   * Shortens the shortened relative time\n   * min to m, hr to h\n   */\n  extraShort?: boolean;\n\n  /**\n   * For relative time shortens minutes to min, hour to hr etc.\n   */\n  shorten?: boolean;\n\n  tooltipTitle?: React.ReactNode;\n\n  tooltipUnderlineColor?: ColorOrAlias;\n}\n\ntype State = {\n  relative: string;\n};\n\nclass TimeSince extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    suffix: 'ago',\n  };\n\n  state: State = {\n    relative: '',\n  };\n\n  // TODO(ts) TODO(emotion): defining the props type breaks emotion's typings\n  // See: https://github.com/emotion-js/emotion/pull/1514\n  static getDerivedStateFromProps(props) {\n    return {\n      relative: getRelativeDate(\n        props.date,\n        props.suffix,\n        props.shorten,\n        props.extraShort\n      ),\n    };\n  }\n\n  componentDidMount() {\n    this.setRelativeDateTicker();\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.tickerTimeout);\n  }\n\n  tickerTimeout: number | undefined = undefined;\n\n  setRelativeDateTicker = () => {\n    window.clearTimeout(this.tickerTimeout);\n    this.tickerTimeout = window.setTimeout(() => {\n      this.setState({\n        relative: getRelativeDate(\n          this.props.date,\n          this.props.suffix,\n          this.props.shorten,\n          this.props.extraShort\n        ),\n      });\n      this.setRelativeDateTicker();\n    }, ONE_MINUTE_IN_MS);\n  };\n\n  render() {\n    const {\n      date,\n      suffix: _suffix,\n      disabledAbsoluteTooltip,\n      className,\n      tooltipTitle,\n      tooltipUnderlineColor,\n      shorten: _shorten,\n      extraShort: _extraShort,\n      ...props\n    } = this.props;\n    const dateObj = getDateObj(date);\n    const user = ConfigStore.get('user');\n    const options = user ? user.options : null;\n    const format = options?.clock24Hours ? 'MMMM D, YYYY HH:mm z' : 'LLL z';\n    const tooltip = getDynamicText({\n      fixed: options?.clock24Hours\n        ? 'November 3, 2020 08:57 UTC'\n        : 'November 3, 2020 8:58 AM UTC',\n      value: moment.tz(dateObj, options?.timezone ?? '').format(format),\n    });\n\n    return (\n      <Tooltip\n        disabled={disabledAbsoluteTooltip}\n        underlineColor={tooltipUnderlineColor}\n        showUnderline\n        title={\n          <div>\n            <div>{tooltipTitle}</div>\n            {tooltip}\n          </div>\n        }\n      >\n        <time dateTime={dateObj?.toISOString()} className={className} {...props}>\n          {this.state.relative}\n        </time>\n      </Tooltip>\n    );\n  }\n}\n\nexport default TimeSince;\n\nfunction getDateObj(date: RelaxedDateType): Date {\n  if (isString(date) || isNumber(date)) {\n    date = new Date(date);\n  }\n  return date;\n}\n\nexport function getRelativeDate(\n  currentDateTime: RelaxedDateType,\n  suffix?: string,\n  shorten?: boolean,\n  extraShort?: boolean\n): string {\n  const date = getDateObj(currentDateTime);\n\n  if ((shorten || extraShort) && suffix) {\n    return t('%(time)s %(suffix)s', {\n      time: getDuration(moment().diff(moment(date), 'seconds'), 0, shorten, extraShort),\n      suffix,\n    });\n  }\n  if ((shorten || extraShort) && !suffix) {\n    return getDuration(moment().diff(moment(date), 'seconds'), 0, shorten, extraShort);\n  }\n  if (!suffix) {\n    return moment(date).fromNow(true);\n  }\n  if (suffix === 'ago') {\n    return moment(date).fromNow();\n  }\n\n  return t('%(time)s %(suffix)s', {time: moment(date).fromNow(true), suffix});\n}\n","import {createActions, createStore, StoreDefinition} from 'reflux';\n\nimport {makeSafeRefluxStore, SafeStoreDefinition} from 'sentry/utils/makeSafeRefluxStore';\n\nconst DebugMetaActions = createActions(['updateFilter']);\n\ntype State = {\n  filter: string | null;\n};\n\ninterface DebugMetaStoreInterface extends StoreDefinition {\n  get(): State;\n  init(): void;\n  reset(): void;\n  updateFilter(word: string): void;\n}\n\ntype Internals = {\n  filter: string | null;\n};\n\nconst storeConfig: StoreDefinition &\n  DebugMetaStoreInterface &\n  Internals &\n  SafeStoreDefinition = {\n  filter: null,\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(DebugMetaActions.updateFilter, this.updateFilter)\n    );\n  },\n\n  reset() {\n    this.filter = null;\n    this.trigger(this.get());\n  },\n\n  updateFilter(word) {\n    this.filter = word;\n    this.trigger(this.get());\n  },\n\n  get() {\n    return {\n      filter: this.filter,\n    };\n  },\n};\n\nconst DebugMetaStore = createStore(makeSafeRefluxStore(storeConfig));\n\nexport {DebugMetaActions, DebugMetaStore};\nexport default DebugMetaStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport OrganizationsActions from 'sentry/actions/organizationsActions';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Organization, Project} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype OrgTypes = Organization | null;\n\ntype State = {\n  environment: string | string[] | null;\n  lastProject: Project | null;\n  organization: OrgTypes;\n  project: Project | null;\n};\n\ninterface LatestContextStoreDefinition extends StoreDefinition {\n  get(): State;\n  onSetActiveOrganization(organization: OrgTypes): void;\n  onSetActiveProject(project: Project | null): void;\n  onUpdateOrganization(organization: OrgTypes): void;\n  onUpdateProject(project: Project | null): void;\n  reset(): void;\n  state: State;\n}\n\n/**\n * Keeps track of last usable project/org this currently won't track when users\n * navigate out of a org/project completely, it tracks only if a user switches\n * into a new org/project.\n *\n * Only keep slug so that people don't get the idea to access org/project data\n * here Org/project data is currently in organizationsStore/projectsStore\n */\nconst storeConfig: LatestContextStoreDefinition = {\n  unsubscribeListeners: [],\n\n  state: {\n    project: null,\n    lastProject: null,\n    organization: null,\n    environment: null,\n  },\n\n  get() {\n    return this.state;\n  },\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.setActive, this.onSetActiveProject)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateSuccess, this.onUpdateProject)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationsActions.setActive, this.onSetActiveOrganization)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationsActions.update, this.onUpdateOrganization)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.onUpdateOrganization)\n    );\n  },\n\n  reset() {\n    this.state = {\n      project: null,\n      lastProject: null,\n      organization: null,\n      environment: null,\n    };\n    return this.state;\n  },\n\n  onUpdateOrganization(org) {\n    // Don't do anything if base/target orgs are falsey\n    if (!this.state.organization) {\n      return;\n    }\n    if (!org) {\n      return;\n    }\n    // Check to make sure current active org is what has been updated\n    if (org.slug !== this.state.organization.slug) {\n      return;\n    }\n\n    this.state = {\n      ...this.state,\n      organization: org,\n    };\n    this.trigger(this.state);\n  },\n\n  onSetActiveOrganization(org) {\n    if (!org) {\n      this.state = {\n        ...this.state,\n        organization: null,\n        project: null,\n      };\n    } else if (!this.state.organization || this.state.organization.slug !== org.slug) {\n      // Update only if different\n      this.state = {\n        ...this.state,\n        organization: org,\n        project: null,\n      };\n    }\n\n    this.trigger(this.state);\n  },\n\n  onSetActiveProject(project) {\n    if (!project) {\n      this.state = {\n        ...this.state,\n        lastProject: this.state.project,\n        project: null,\n      };\n    } else if (!this.state.project || this.state.project.slug !== project.slug) {\n      // Update only if different\n      this.state = {\n        ...this.state,\n        lastProject: this.state.project,\n        project,\n      };\n    }\n\n    this.trigger(this.state);\n  },\n\n  onUpdateProject(project) {\n    this.state = {\n      ...this.state,\n      project,\n    };\n    this.trigger(this.state);\n  },\n};\n\nconst LatestContextStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default LatestContextStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationsActions from 'sentry/actions/organizationsActions';\nimport {Organization} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface OrganizationsStoreDefinition extends StoreDefinition {\n  add(item: Organization): void;\n  get(slug: string): Organization | undefined;\n\n  getAll(): Organization[];\n  load(items: Organization[]): void;\n  loaded: boolean;\n  onChangeSlug(prev: Organization, next: Organization): void;\n  onRemoveSuccess(slug: string): void;\n  onUpdate(org: Organization): void;\n  remove(slug: string): void;\n  state: Organization[];\n}\n\nconst storeConfig: OrganizationsStoreDefinition = {\n  listenables: [OrganizationsActions],\n\n  state: [],\n  loaded: false,\n\n  // So we can use Reflux.connect in a component mixin\n  getInitialState() {\n    return this.state;\n  },\n\n  init() {\n    this.state = [];\n    this.loaded = false;\n  },\n\n  onUpdate(org: Organization) {\n    this.add(org);\n  },\n\n  onChangeSlug(prev: Organization, next: Organization) {\n    if (prev.slug === next.slug) {\n      return;\n    }\n\n    this.remove(prev.slug);\n    this.add(next);\n  },\n\n  onRemoveSuccess(slug: string) {\n    this.remove(slug);\n  },\n\n  get(slug: Organization['slug']) {\n    return this.state.find((item: Organization) => item.slug === slug);\n  },\n\n  getAll() {\n    return this.state;\n  },\n\n  remove(slug: Organization['slug']) {\n    this.state = this.state.filter(item => slug !== item.slug);\n    this.trigger(this.state);\n  },\n\n  add(item: Organization) {\n    let match = false;\n    this.state.forEach((existing, idx) => {\n      if (existing.id === item.id) {\n        item = {...existing, ...item};\n        this.state[idx] = item;\n        match = true;\n      }\n    });\n    if (!match) {\n      this.state = [...this.state, item];\n    }\n    this.trigger(this.state);\n  },\n\n  load(items: Organization[]) {\n    this.state = items;\n    this.loaded = true;\n    this.trigger(items);\n  },\n};\n\nconst OrganizationsStore = createStore(makeSafeRefluxStore(storeConfig));\n\nexport default OrganizationsStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {SentryAppComponent} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nexport interface SentryAppComponentsStoreDefinition extends StoreDefinition {\n  get: (uuid: string) => SentryAppComponent | undefined;\n  getAll: () => SentryAppComponent[];\n  getComponentByType: (type: string | undefined) => SentryAppComponent[];\n  getInitialState: () => SentryAppComponent[];\n  loadComponents: (items: SentryAppComponent[]) => void;\n}\n\nconst storeConfig: SentryAppComponentsStoreDefinition = {\n  unsubscribeListeners: [],\n  items: [],\n\n  init() {\n    this.items = [];\n  },\n\n  getInitialState() {\n    return this.items;\n  },\n\n  loadComponents(items: SentryAppComponent[]) {\n    this.items = items;\n    this.trigger(items);\n  },\n\n  get(uuid: string) {\n    const items: SentryAppComponent[] = this.items;\n    return items.find(item => item.uuid === uuid);\n  },\n\n  getAll() {\n    return this.items;\n  },\n\n  getComponentByType(type: string | undefined) {\n    if (!type) {\n      return this.getAll();\n    }\n    const items: SentryAppComponent[] = this.items;\n    return items.filter(item => item.type === type);\n  },\n};\n\nconst SentryAppComponentsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SentryAppComponentsStore;\n","const FILE_EXTENSION_TO_PLATFORM = {\n  jsx: 'react',\n  tsx: 'react',\n  js: 'javascript',\n  ts: 'javascript',\n  php: 'php',\n  py: 'python',\n  vue: 'vue',\n  go: 'go',\n  java: 'java',\n  perl: 'perl',\n  rb: 'ruby',\n  rs: 'rust',\n  rlib: 'rust',\n  swift: 'swift',\n  h: 'apple',\n  m: 'apple',\n  mm: 'apple',\n  M: 'apple',\n  ex: 'elixir',\n  exs: 'elixir',\n  cs: 'csharp',\n  fs: 'fsharp',\n  kt: 'kotlin',\n  dart: 'dart',\n  sc: 'scala',\n  scala: 'scala',\n  clj: 'clojure',\n};\n\n/**\n * Takes in path (/Users/test/sentry/something.jsx) and returns file extension (jsx)\n */\nexport function getFileExtension(fileName: string): string | undefined {\n  // this won't work for something like .spec.jsx\n  const segments = fileName.split('.');\n  if (segments.length > 1) {\n    return segments.pop();\n  }\n  return undefined;\n}\n\n/**\n * Takes in file extension and returns a platform string that can be passed into platformicons\n */\nexport function fileExtensionToPlatform(fileExtension: string): string | undefined {\n  return FILE_EXTENSION_TO_PLATFORM[fileExtension];\n}\n","import moment from 'moment';\n\n/**\n * Given a snoozed unix timestamp in seconds, returns the number of days since\n * the prompt was snoozed.\n *\n * @param snoozedTs Snoozed timestamp\n */\nexport function snoozedDays(snoozedTs: number) {\n  const now = moment.utc();\n  const snoozedOn = moment.unix(snoozedTs).utc();\n  return now.diff(snoozedOn, 'days');\n}\n","import {PromptData} from 'sentry/actionCreators/prompts';\n\nimport {snoozedDays} from './promptsActivity';\n\nexport const DEFAULT_SNOOZE_PROMPT_DAYS = 14;\nexport const promptIsDismissed = (\n  prompt: PromptData,\n  daysToSnooze: number = DEFAULT_SNOOZE_PROMPT_DAYS\n): boolean => {\n  if (typeof prompt?.dismissedTime === 'number') {\n    return true;\n  }\n\n  if (typeof prompt?.snoozedTime === 'number') {\n    return snoozedDays(prompt.snoozedTime) < daysToSnooze;\n  }\n\n  return false;\n};\n\nexport function promptCanShow(prompt: string, uuid: string): boolean {\n  /**\n   * This is to ensure that only one of suspect_commits\n   * or distributed_tracing is shown at a given time.\n   */\n  const x = (parseInt(uuid.charAt(0), 16) || 0) % 2;\n  if (prompt === 'suspect_commits') {\n    return x === 1;\n  }\n  if (prompt === 'distributed_tracing') {\n    return x === 0;\n  }\n  return true;\n}\n","import {Client} from 'sentry/api';\n\ntype TSDBField = 'sentry_app_viewed' | 'sentry_app_component_interacted';\n\nexport const recordInteraction = async (\n  sentryAppSlug: string,\n  field: TSDBField,\n  data?: object\n): Promise<void> => {\n  const api = new Client();\n  const endpoint = `/sentry-apps/${sentryAppSlug}/interaction/`;\n\n  return await api.requestPromise(endpoint, {\n    method: 'POST',\n    data: {\n      tsdbField: field,\n      ...data,\n    },\n  });\n};\n","/**\n * Given a route string, replace path parameters (e.g. `:id`) with value from `params`\n *\n * e.g. {id: 'test'}\n */\nexport default function replaceRouterParams(\n  route: string,\n  params: {[key: string]: string | undefined}\n): string {\n  // parse route params from route\n  const matches = route.match(/:\\w+/g);\n\n  if (!matches || !matches.length) {\n    return route;\n  }\n\n  // replace with current params\n  matches.forEach(param => {\n    const paramName = param.slice(1);\n    if (typeof params[paramName] === 'undefined') {\n      return;\n    }\n\n    route = route.replace(param, params[paramName] as string);\n  });\n\n  return route;\n}\n","import {useContext} from 'react';\n\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nfunction useOrganization() {\n  const organization = useContext(OrganizationContext);\n  if (!organization) {\n    throw new Error('useOrganization called but organization is not set.');\n  }\n  return organization;\n}\n\nexport default useOrganization;\n","import {Component} from 'react';\n\nimport OrganizationsStore from 'sentry/stores/organizationsStore';\nimport {OrganizationSummary} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedOrganizationsProps = {\n  organizations: OrganizationSummary[];\n  organizationsLoading?: boolean;\n};\n\ntype State = {\n  organizations: OrganizationSummary[];\n};\n\nfunction withOrganizations<P extends InjectedOrganizationsProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithOrganizations extends Component<\n    Omit<P, keyof InjectedOrganizationsProps> & Partial<InjectedOrganizationsProps>,\n    State\n  > {\n    static displayName = `withOrganizations(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {organizations: OrganizationsStore.getAll()};\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = OrganizationsStore.listen(\n      (organizations: OrganizationSummary[]) => this.setState({organizations}),\n      undefined\n    );\n\n    render() {\n      const {organizationsLoading, organizations, ...props} = this.props as P;\n      return (\n        <WrappedComponent\n          {...({\n            organizationsLoading: organizationsLoading ?? !OrganizationsStore.loaded,\n            organizations: organizations ?? this.state.organizations,\n            ...props,\n          } as P)}\n        />\n      );\n    }\n  }\n\n  return WithOrganizations;\n}\n\nexport default withOrganizations;\n","import {Component} from 'react';\n\nimport SentryAppComponentsStore from 'sentry/stores/sentryAppComponentsStore';\nimport {SentryAppComponent} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedAppComponentsProps = {\n  components: SentryAppComponent[];\n};\n\ntype State = {\n  components: SentryAppComponent[];\n};\n\ntype Options = {\n  componentType?: 'stacktrace-link';\n};\n\nfunction withSentryAppComponents<P extends InjectedAppComponentsProps>(\n  WrappedComponent: React.ComponentType<P>,\n  {componentType}: Options = {}\n) {\n  class WithSentryAppComponents extends Component<\n    Omit<P, keyof InjectedAppComponentsProps> & Partial<InjectedAppComponentsProps>,\n    State\n  > {\n    static displayName = `withSentryAppComponents(${getDisplayName(WrappedComponent)})`;\n\n    state = {components: SentryAppComponentsStore.getAll()};\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = SentryAppComponentsStore.listen(\n      () => this.setState({components: SentryAppComponentsStore.getAll()}),\n      undefined\n    );\n\n    render() {\n      const {components, ...props} = this.props as P;\n      return (\n        <WrappedComponent\n          {...({\n            components:\n              components ?? SentryAppComponentsStore.getComponentByType(componentType),\n            ...props,\n          } as P)}\n        />\n      );\n    }\n  }\n  return WithSentryAppComponents;\n}\n\nexport default withSentryAppComponents;\n","import styled from '@emotion/styled';\n\nimport Tag from 'sentry/components/tag';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nfunction UnhandledTag() {\n  return (\n    <TagWrapper>\n      <Tooltip title={t('An unhandled error was detected in this Issue.')}>\n        <Tag type=\"error\">{t('Unhandled')}</Tag>\n      </Tooltip>\n    </TagWrapper>\n  );\n}\n\nconst TagWrapper = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst TagAndMessageWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport default UnhandledTag;\nexport {TagAndMessageWrapper};\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport PluginIcon, {DEFAULT_ICON, ICON_PATHS} from 'sentry/plugins/components/pluginIcon';\nimport {Integration} from 'sentry/types';\n\ntype Props = {\n  integration: Integration;\n  size?: number;\n};\n\ntype State = {\n  imgSrc: Integration['icon'];\n};\n\ntype IconProps = Pick<Props, 'size'>;\n\nconst StyledIcon = styled('img')<IconProps>`\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  display: block;\n`;\n\nclass Icon extends Component<Props, State> {\n  state: State = {\n    imgSrc: this.props.integration.icon,\n  };\n\n  render() {\n    const {integration, size} = this.props;\n\n    return (\n      <StyledIcon\n        size={size}\n        src={this.state.imgSrc}\n        onError={() => {\n          this.setState({imgSrc: ICON_PATHS[integration.provider.key] || DEFAULT_ICON});\n        }}\n      />\n    );\n  }\n}\n\nconst IntegrationIcon = ({integration, size = 32}: Props) =>\n  integration.icon ? (\n    <Icon size={size} integration={integration} />\n  ) : (\n    <PluginIcon size={size} pluginId={integration.provider.key} />\n  );\n\nexport default IntegrationIcon;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport {tct} from 'sentry/locale';\n\ntype Props = {\n  className?: string;\n};\n\nconst FeedbackAlert = ({className}: Props) => (\n  <StyledAlert type=\"info\" showIcon className={className}>\n    {tct('Got feedback? Email [email:ecosystem-feedback@sentry.io].', {\n      email: <a href=\"mailto:ecosystem-feedback@sentry.io\" />,\n    })}\n  </StyledAlert>\n);\n\nconst StyledAlert = styled(Alert)`\n  margin: 20px 0px;\n`;\n\nexport default FeedbackAlert;\n"],"names":["navigateTo","to","router","configUrl","needOrg","includes","needProject","comingFromProjectId","location","query","project","needProjectId","Array","isArray","projectById","ProjectsStore","openModal","modalProps","nextPath","onFinish","path","closeModal","window","setTimeout","push","replaceRouterParams","projectId","slug","id","promptsUpdate","api","params","requestPromise","method","data","organization_id","organizationId","project_id","feature","status","async","promptsCheck","undefined","response","dismissedTime","dismissed_ts","snoozedTime","snoozed_ts","ClippedBox","PureComponent","isClipped","this","props","defaultClipped","isRevealed","renderedHeight","onReveal","setState","event","stopPropagation","reveal","componentDidMount","findDOMNode","offsetHeight","onSetRenderedHeight","calcHeight","componentDidUpdate","_prevProps","prevState","setRenderedHeight","state","clipHeight","render","title","children","btnText","className","clipFade","showMoreButton","onClick","priority","size","t","Wrapper","Title","ClipFade","shouldForwardProp","prop","p","theme","backgroundSecondary","space","css","color","background","alpha","string","Toggle","highUp","wrapClassName","isExpanded","setIsExpanded","useState","Children","wrappedChildren","IconWrapper","evt","preventDefault","gray300","gray400","blue300","blue200","padNumbersInString","replace","num","isNegative","realNum","parseInt","s","substr","length","naturalCaseInsensitiveSort","a","b","toLowerCase","getValueWithAnnotatedText","v","meta","value","walk","depth","maxDefaultDepth","maxDepth","preserveQuotes","withAnnotatedText","jsonConsts","i","isString","valueInfo","rv","repr","isMultiLine","isStripped","match","z","looksLikeObjectRepr","looksLikeMultiLineString","analyzeStringForRepr","valueToBeReturned","out","isUrl","href","StyledIconOpen","isNumber","isValidElement","keys","Object","sort","key","ContextData","IconOpen","selectStyles","menu","provided","position","boxShadow","marginBottom","option","opacity","isDisabled","cursor","pointerEvents","ContextPickerModal","Component","organizations","projects","latestOrg","organization","integrationConfigs","isSuperuser","ConfigStore","clearTimeout","onFinishTimeout","orgId","org","find","ref","loading","el","input","querySelector","focus","onSelectOrganization","navigateIfFinish","nonMemberProjects","memberProjects","forEach","isMember","listItems","valueKey","currentSelected","choices","select","menuOptions","focusable","toBeFocused","selectedIndex","findIndex","scrollToFocusedOptionOnUpdate","inputIsHiddenAfterUpdate","focusedValue","focusedOption","label","ProjectBadgeOption","avatarSize","displayName","avatarProps","consistentWidth","prevProps","JSON","stringify","componentWillUnmount","headerText","renderProjectSelectOrMessage","getMemberProjects","projectOptions","options","map","StyledSelectControl","projectSelect","doFocus","placeholder","name","onChange","handleSelectProject","onMenuOpen","components","Option","customOptionProject","DropdownIndicator","styles","menuIsOpen","tct","link","renderIntegrationConfigs","providerName","provider","config","StyledIntegrationItem","integration","domainName","configSelect","handleSelectConfiguration","Header","Body","shouldShowProjectSelector","shouldShowConfigSelector","orgChoices","filter","Fragment","closeButton","StyledLoadingIndicator","overlay","orgSelect","handleSelectOrganization","ContextPickerModalContainer","AsyncComponent","OrganizationsStore","organizationSlug","selectedOrganization","getDefaultState","storeState","OrganizationStore","super","getEndpoints","unlistener","renderModal","initiallyLoaded","projectSlugs","allProjects","slugs","SelectControl","IdBadge","LoadingIndicator","EventTitleError","ErrorMessage","alert","error","iconColor","backgroundLight","fontSizeMedium","borderRadius","EventOrGroupHeader","index","hideIcons","hideLevel","includeLink","grouping","hasGroupingTreeUI","features","getTitleChildren","level","isBookmarked","hasSeen","GroupLevel","capitalize","isSolid","customComponent","mini","StyledEventOrGroupTitle","withStackTracePreview","hasGuideAnchor","getLocation","message","getMessage","eventID","groupID","commonEleProps","style","textDecoration","pathname","_allp","getTitle","Location","StyledTagAndMessageWrapper","Message","truncateStyles","getMargin","subText","LocationWrapper","rest","TagAndMessageWrapper","default","withRouter","withOrganization","EventOrGroupTitle","EventTitleTreeLabel","treeLabel","firstFourParts","slice","remainingParts","FirstFourParts","part","getTreeLabelPartDetails","PriorityLabel","Divider","RemainingLabels","Label","overflowEllipsis","gray200","groupingCurrentLevel","metadata","current_level","hasGroupingStacktraceUI","projectID","subtitle","StyledStacktracePreview","issueId","eventId","projectSlug","Spacer","Subtitle","display","width","StackTracePreview","scrollToSection","element","hash","split","anchorElement","scrollIntoView","EventDataSection","type","toggleRaw","raw","wrapTitle","actions","isCentered","showPermalink","titleNode","SectionHeader","Permalink","PermalinkAnchor","StyledIconAnchor","merged","active","barId","callIfFunction","ActionContainer","SectionContents","IconAnchor","Anchor","textColor","breakpoints","large","small","Content","showingAbsoluteAddresses","showCompleteFunctionName","firstFrameOmitted","lastFrameOmitted","text","frame","nextFrame","includeSystemFrames","inApp","isFrameAfterLastNonApp","frames","lastFrame","findImageForAddress","address","addrMode","images","entries","entry","img","idx","startAddress","endAddress","getImageRange","getClassName","newestFirst","expandFirstFrame","platform","isHoverPreviewed","framesOmitted","lastFrameIdx","frameIdx","nRepeats","maxLengthOfAllRelativeAddresses","reduce","maxLengthUntilThisPoint","correspondingImage","instructionAddr","relativeAddress","parseAddress","image_addr","toString","prevFrame","repeatedFrame","lineNo","package","module","function","frameIsVisible","image","emptySourceNotation","isOnlyFrame","timesRepeated","showingAbsoluteAddress","onAddressToggle","handleToggleAddresses","maxLengthOfRelativeAddress","registers","onFunctionNameToggle","handleToggleFunctionName","isFirst","renderOmittedFrames","cloneElement","reverse","platformIcon","stackTracePlatformIcon","StyledPlatformIcon","StyledList","PlatformIcon","Expander","isExpandable","onToggleContext","StyledButton","isDotnet","tooltipProps","delay","STACKTRACE_PREVIEW_TOOLTIP_DELAY","direction","Button","LeadHint","leadsToApp","Default","isUsedForGrouping","onMouseDown","VertCenterWrapper","defined","RepeatedFrames","tn","RepeatedContent","StyledIconRefresh","pink200","pink300","IconRefresh","Native","trust","symbolicatorStatus","shouldShowLinkToImage","SymbolicatorStatus","isInlineFrame","getPlatform","isFoundByStackScanning","NativeLineContent","PackageInfo","withLeadHint","packagePath","addr","DebugMetaActions","debug_id","scrollToElement","isClickable","combineStatus","debug_status","unwind_status","packageStatus","tooltip","startingAddress","isAbsolute","onToggle","relativeAddressMaxlength","xlarge","traceEventDataSectionContext","useContext","TraceEventDataSectionContext","absoluteFilePaths","nativeStackTraceV2","Line","nativeV2","expandable","toggleContext","classNames","expanded","collapsed","errors","StyleListItem","renderLine","hasContextSource","hasContextVars","hasContextRegisters","hasAssembly","withSentryAppComponents","componentType","ListItem","PackageStatusIcon","AddressToggleIcon","FunctionNameToggleIcon","setShowingAbsoluteAddresses","setShowCompleteFunctionName","mouseEvent","lastFrameIndex","inAppFrameIndexes","frameIndex","getLastFrameIndex","convertedFrames","minGroupingLevel","isFrameUsedForGrouping","lineProps","renderConvertedFrames","List","NativeFrame","absolute","fullStackTrace","fullFunctionName","tooltipDelay","foundByStackScanning","packageClickable","inlineFrame","functionNameHiddenDetails","rawFunction","setExpanded","handleGoToImagesLoaded","e","searchTerm","formatAddress","addressTooltip","functionName","getMeta","getStatus","GridRow","StrictClickContent","StatusCell","PackageStatusButton","icon","borderless","PackageCell","disabled","containerDisplayMode","Package","trimPackage","AddressCell","GroupingCell","FunctionNameCell","FunctionName","filename","absPath","FileName","ExpandCell","ToggleButton","RegistersCell","Registers","Cell","familyMono","Context","border","headingColor","bodyBackground","frameProps","Panel","fontSizeSmall","gray500","getStatusWeight","debugStatus","unwindStatus","getFileName","directorySeparator","test","pop","Assembly","version","culture","publicKeyToken","filePath","AssemblyWrapper","AssemblyInfo","Caption","FilePathInfo","rtl","ContextLine","line","isActive","lineWs","lineCode","REGISTERS_X86","eax","ecx","edx","ebx","esp","ebp","esi","edi","eip","eflags","efl","unused1","st0","st1","st2","st3","st4","st5","st6","st7","unused2","unused3","xmm0","xmm1","xmm2","xmm3","xmm4","xmm5","xmm6","xmm7","mm0","mm1","mm2","mm3","mm4","mm5","mm6","mm7","fcw","fsw","mxcsr","es","cs","ss","ds","fs","gs","unused4","unused5","tr","ldtr","REGISTERS_X86_64","rax","rdx","rcx","rbx","rsi","rdi","rbp","rsp","r8","r9","r10","r11","r12","r13","r14","r15","rip","xmm8","xmm9","xmm10","xmm11","xmm12","xmm13","xmm14","xmm15","rflags","REGISTERS_ARM64","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","x16","ip0","x17","ip1","x18","x19","x20","x21","x22","x23","x24","x25","x26","x27","x28","x29","fp","x30","lr","sp","pc","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","v26","v27","v28","v29","v30","v31","REGISTERS_MIPS","zero","at","a0","a1","a2","a3","t0","t1","t2","t3","t4","t5","t6","t7","s0","s1","s2","s3","s4","s5","s6","s7","t8","t9","k0","k1","gp","ra","lo","hi","f0","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13","f14","f15","f16","f17","f18","f19","f20","f21","f22","f23","f24","f25","f26","f27","f28","f29","f30","f31","fcsr","fir","REGISTERS_PPC","r0","r1","r2","r3","r4","r5","r6","r7","r16","r17","r18","r19","r20","r21","r22","r23","r24","r25","r26","r27","r28","r29","r30","r31","f1","cr","fpsrc","msr","sr0","sr1","sr2","sr3","sr4","sr5","sr6","sr7","sr8","sr9","sr10","sr11","sr12","sr13","sr14","sr15","srr0","srr1","getRegisterIndex","register","registerMap","REGISTER_VIEWS","Value","view","InlinePre","parsed","isNaN","formatValue","StyledTooltip","Tooltip","IconSliders","FrameRegisters","deviceArch","setIsRevealed","handlePreventToggling","sortedRegisters","startsWith","getRegisterMap","getSortedRegisters","StyledClippedBox","Register","innerBorder","CLIPPED_HEIGHT","white","FrameVariables","transformedData","dataKeys","subject","getTransformedData","isContextData","OpenInContextLine","OpenInContainer","columnQuantity","component","url","addQueryParamsToExistingUrl","getUrl","schema","sentryApp","onClickRecordInteraction","recordInteraction","handleRecordInteraction","OpenInLink","onContextMenu","openInNewTab","sentryAppComponent","OpenInName","uuid","family","dropShadowLightest","ExternalLink","StacktraceLinkModal","sourceCodeInput","onSubmit","trackIntegrationAnalytics","setup_type","parsingEndpoint","configData","sourceUrl","stackPath","configEndpoint","integrationId","addSuccessMessage","err","responseJSON","values","apiErrors","join","addErrorMessage","onHandleChange","onManualSetup","integrations","baseUrl","ModalContainer","SourceCodeInput","StyledInputField","inline","flexibleControlStateSize","stacked","val","handleSubmit","ManualSetup","getIntegrationIcon","IntegrationName","StyledFeedbackAlert","FeedbackAlert","InputField","withApi","StacktraceLink","reloadData","errorText","prompt","isDismissed","promptIsDismissed","promptLoaded","dismissPrompt","Error","commitId","release","lastCommit","sdkName","sdk","file","onRequestError","resp","handleXhrErrorResponse","showModal","onOpenLink","StacktraceLinkEvents","startSession","onReconfigureMapping","error_reason","renderError","renderLoading","renderNoMatch","access","hasAccess","CodeMappingButtonContainer","deps","StyledIconClose","renderHovercard","attemptedUrl","StyledHovercard","header","body","HeaderContainer","HovercardLine","stackRoot","StyledIconInfo","renderMatchNoUrl","ErrorInformation","ErrorText","renderMatchWithUrl","StyledIconWrapper","renderBody","withProjects","IconClose","IconInfo","Hovercard","StyledIconFlag","contextLines","context","l","startLineNo","start","hasComponents","StyledContextLine","vars","contexts","device","arch","parseAssembly","IconFlag","OriginalSourceInfo","mapUrl","DefaultTitle","framePlatform","handleExternalLink","getModule","shouldPrioritizeModuleName","pathNameOrModule","getPathNameOrModule","enablePathTooltip","maxLength","leftTrim","StyledExternalLink","InFramePosition","colNo","origAbsPath","StyledGroupingIndicator","GroupingIndicator","hasHiddenDetails","valueOutput","makeFilter","renderExpander","ToggleContextButtonWrapper","ToggleContextButton","renderLeadHint","renderRepeats","renderDefaultLine","DefaultLine","renderNativeLine","leadHint","scrollToImage","StyledLi","PackageLink","handleClick","PackageName","PackageStatus","isCircled","getIcon","Symbol","hasFunctionNameHiddenDetails","hint","hintIcon","getFrameHint","functionNameTooltipTitle","getFunctionNameTooltipTitle","FunctionNameToggleTooltip","Data","StyledFunctionName","HintStatus","Filename","FileNameTooltip","purple300","IconFilter","TogglableAddress","canBeConverted","formattedAddress","tooltipTitle","AddressIconTooltip","Address","getAddresstextBorderBottom","red300","fontSizeExtraSmall","pkg","pieces","dataPlatform","func","warningIcon","errorIcon","objectIsEmpty","subjectIcon","dataValue","KeyValueList","isSorted","longKeys","keyValueData","sortBy","subjectDataTestId","actionButton","TableSubject","wide","ValueWithButtonContainer","ActionButtonWrapper","threads","thread","crashed","stacktrace","rawStacktrace","escapeQuotes","getCurlCommand","result","headers","h","indexOf","inferredContentType","qs","Sentry","scope","setExtra","getFullUrl","fullUrl","queryObj","kv","stringifyQueryList","fragment","removeFilterMaskedEntries","rawData","cleanedData","getOwnPropertyNames","FILTER_MASK","imageAddressLength","padStart","_e","image_size","assembly","fileExtensions","uniq","compact","getFileExtension","newPlatform","fileExtensionToPlatform","isStacktraceNewestFirst","user","stacktraceOrder","withoutBackground","REMARKS","x","m","KNOWN_RULES","getTooltipText","remark","rule_id","rule","remark_title","rule_title","Chunk","chunk","Chunks","chunks","ChunksSpan","ValueElement","rem","AnnotatedText","formatErrorKind","kind","getErrorMessage","errorMessage","reason","renderValue","StyledTooltipError","TooltipTitle","symbol","getTooltipTitle","StyledIconWarning","IconWarning","GET_META","IS_PROXY","MetaProxy","constructor","local","get","obj","receiver","isEmpty","isAnnotated","Reflect","has","isNull","Proxy","withMeta","_meta","DataSection","medium","getColors","danger","success","BannerContainer","BannerSummary","CauseHeader","sortByOptions","displayOptions","createContext","TraceEventDataSection","stackTraceNotFound","recentFirst","stackType","hasNewestFirst","hasMinified","hasVerboseFunctionNames","hasAbsoluteFilePaths","hasAbsoluteAddresses","hasAppOnlyFrames","useApi","useOrganization","nativePlatform","isNativePlatform","minified","STACK_TYPE","appleCrashEndpoint","rawStackTraceDownloadLink","sortByTooltip","childProps","FullStackTraceToggler","hideControlState","triggerLabel","triggerProps","placement","sections","defaultValue","multiple","String","Provider","BooleanField","CompositeSelect","setValues","section","optionsMap","useMemo","allOptions","opt","flat","fromEntries","selectionMode","onChangeValueMap","selectedOptions","newValues","fill","parentSectionIndex","valueIsEqual","noRowGap","HeaderContent","HeaderActions","pageTitle","noActionWrap","HeaderNavTabs","NavTabs","Main","fullWidth","Side","underlined","tabProps","mergedClassName","classnames","Wrap","defaultOnCursor","_direction","browserHistory","Pagination","onCursor","paginationAnalyticsEvent","pageLinks","caption","links","parseLinkHeader","previousDisabled","previous","results","nextDisabled","next","PaginationCaption","SentryAppComponentIcon","selectedAvatar","avatars","isDefault","avatarType","SentryAppAvatarWrapper","isDark","isColor","StackTracePreviewContent","orgFeatures","every","commonProps","useTheme","loadingVisible","setLoadingVisible","setStatus","setEvent","delayTimeoutRef","useRef","loaderTimeoutRef","useEffect","current","fetchData","useCallback","handleMouseEnter","handleMouseLeave","handleStackTracePreviewClick","exceptionsWithStacktrace","EntryType","exceptionStacktrace","bestThread","findBestThread","getThreadStacktrace","getStacktrace","onMouseEnter","onMouseLeave","NoStackTraceWrapper","hideMessage","tipBorderColor","tipColor","zIndex","modal","StrictClick","screenX","screenY","startCoords","y","deltaX","Math","abs","deltaY","MAX_DELTA_X","MAX_DELTA_Y","handleMouseDown","handleMouseClick","TimeSince","relative","tickerTimeout","getRelativeDate","date","suffix","shorten","extraShort","setRelativeDateTicker","_suffix","disabledAbsoluteTooltip","tooltipUnderlineColor","_shorten","_extraShort","dateObj","getDateObj","format","clock24Hours","getDynamicText","fixed","moment","timezone","underlineColor","showUnderline","dateTime","toISOString","Date","currentDateTime","time","getDuration","diff","fromNow","createActions","storeConfig","unsubscribeListeners","init","reset","listenTo","updateFilter","trigger","word","DebugMetaStore","createStore","makeSafeRefluxStore","lastProject","environment","ProjectActions","onSetActiveProject","onUpdateProject","OrganizationsActions","onSetActiveOrganization","onUpdateOrganization","OrganizationActions","listenables","loaded","getInitialState","onUpdate","add","onChangeSlug","prev","remove","onRemoveSuccess","item","getAll","existing","load","items","loadComponents","getComponentByType","FILE_EXTENSION_TO_PLATFORM","jsx","tsx","js","ts","php","py","vue","go","java","perl","rb","rs","rlib","swift","mm","M","ex","exs","kt","dart","sc","scala","clj","fileName","segments","fileExtension","snoozedDays","snoozedTs","now","snoozedOn","utc","daysToSnooze","promptCanShow","charAt","sentryAppSlug","field","Client","endpoint","tsdbField","route","matches","param","paramName","OrganizationContext","WrappedComponent","WithOrganizations","unsubscribe","organizationsLoading","getDisplayName","WithSentryAppComponents","SentryAppComponentsStore","UnhandledTag","TagWrapper","StyledIcon","Icon","imgSrc","src","onError","ICON_PATHS","DEFAULT_ICON","pluginId","StyledAlert","showIcon","email","Alert"],"sourceRoot":""}