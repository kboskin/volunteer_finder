{"version":3,"file":"chunks/app_actionCreators_projects_tsx-app_components_modals_inviteMembersModal_index_tsx-app_utils_-ec36ab.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/projects.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/actions/organizationActions.tsx","webpack:///./app/actions/organizationsActions.tsx","webpack:///./app/actions/projectActions.tsx","webpack:///./app/components/hookOrDefault.tsx","webpack:///./app/components/modals/inviteMembersModal/renderEmailValue.tsx","webpack:///./app/components/modals/inviteMembersModal/inviteRowControl.tsx","webpack:///./app/components/modals/inviteMembersModal/index.tsx","webpack:///./app/components/roleSelectControl.tsx","webpack:///./app/stores/latestContextStore.tsx","webpack:///./app/stores/organizationStore.tsx","webpack:///./app/stores/organizationsStore.tsx","webpack:///./app/stores/projectsStatsStore.tsx","webpack:///./app/utils/analytics/coreuiAnalyticsEvents.tsx","webpack:///./app/utils/analytics/dashboardsAnalyticsEvents.tsx","webpack:///./app/utils/analytics/discoverAnalyticsEvents.tsx","webpack:///./app/utils/analytics/growthAnalyticsEvents.tsx","webpack:///./app/utils/analytics/issueAnalyticsEvents.tsx","webpack:///./app/utils/analytics/performanceAnalyticsEvents.tsx","webpack:///./app/utils/analytics/samplingAnalyticsEvents.tsx","webpack:///./app/utils/analytics/searchAnalyticsEvents.tsx","webpack:///./app/utils/analytics/settingsAnalyticsEvents.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/analytics/workflowAnalyticsEvents.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/utils/parseLinkHeader.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/useTeams.tsx","webpack:///./app/utils/withLatestContext.tsx","webpack:///./app/utils/withOrganizations.tsx","webpack:///../node_modules/lodash/_arrayIncludes.js","webpack:///../node_modules/lodash/_arrayIncludesWith.js","webpack:///../node_modules/lodash/_baseIndexOf.js","webpack:///../node_modules/lodash/_baseIsNaN.js","webpack:///../node_modules/lodash/_baseUniq.js","webpack:///../node_modules/lodash/_createSet.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/_strictIndexOf.js","webpack:///../node_modules/lodash/chunk.js","webpack:///../node_modules/lodash/findLastIndex.js","webpack:///../node_modules/lodash/noop.js","webpack:///../node_modules/lodash/uniqBy.js","webpack:///../node_modules/react-document-title/index.js","webpack:///../node_modules/react-side-effect/lib/index.js","webpack:///../node_modules/shallowequal/index.js"],"sourcesContent":["import {Query} from 'history';\nimport chunk from 'lodash/chunk';\nimport debounce from 'lodash/debounce';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport ProjectsStatsStore from 'sentry/stores/projectsStatsStore';\nimport {Project, Team} from 'sentry/types';\n\ntype UpdateParams = {\n  orgId: string;\n  projectId: string;\n  data?: {[key: string]: any};\n  query?: Query;\n};\n\nexport function update(api: Client, params: UpdateParams) {\n  ProjectActions.update(params.projectId, params.data);\n\n  const endpoint = `/projects/${params.orgId}/${params.projectId}/`;\n  return api\n    .requestPromise(endpoint, {\n      method: 'PUT',\n      data: params.data,\n    })\n    .then(\n      data => {\n        ProjectActions.updateSuccess(data);\n        return data;\n      },\n      err => {\n        ProjectActions.updateError(err, params.projectId);\n        throw err;\n      }\n    );\n}\n\ntype StatsParams = Pick<UpdateParams, 'orgId' | 'data' | 'query'>;\n\nexport function loadStats(api: Client, params: StatsParams) {\n  ProjectActions.loadStats(params.orgId, params.data);\n\n  const endpoint = `/organizations/${params.orgId}/stats/`;\n  api.request(endpoint, {\n    query: params.query,\n    success: data => {\n      ProjectActions.loadStatsSuccess(data);\n    },\n    error: data => {\n      ProjectActions.loadStatsError(data);\n    },\n  });\n}\n\n// This is going to queue up a list of project ids we need to fetch stats for\n// Will be cleared when debounced function fires\nconst _projectStatsToFetch: Set<string> = new Set();\n\n// Max projects to query at a time, otherwise if we fetch too many in the same request\n// it can timeout\nconst MAX_PROJECTS_TO_FETCH = 10;\n\nconst _queryForStats = (\n  api: Client,\n  projects: string[],\n  orgId: string,\n  additionalQuery: Query | undefined\n) => {\n  const idQueryParams = projects.map(project => `id:${project}`).join(' ');\n  const endpoint = `/organizations/${orgId}/projects/`;\n\n  const query: Query = {\n    statsPeriod: '24h',\n    query: idQueryParams,\n    ...additionalQuery,\n  };\n\n  return api.requestPromise(endpoint, {\n    query,\n  });\n};\n\nexport const _debouncedLoadStats = debounce(\n  (api: Client, projectSet: Set<string>, params: UpdateParams) => {\n    const storedProjects: {[key: string]: Project} = ProjectsStatsStore.getAll();\n    const existingProjectStats = Object.values(storedProjects).map(({id}) => id);\n    const projects = Array.from(projectSet).filter(\n      project => !existingProjectStats.includes(project)\n    );\n\n    if (!projects.length) {\n      _projectStatsToFetch.clear();\n      return;\n    }\n\n    // Split projects into more manageable chunks to query, otherwise we can\n    // potentially face server timeouts\n    const queries = chunk(projects, MAX_PROJECTS_TO_FETCH).map(chunkedProjects =>\n      _queryForStats(api, chunkedProjects, params.orgId, params.query)\n    );\n\n    Promise.all(queries)\n      .then(results => {\n        ProjectActions.loadStatsForProjectSuccess(\n          results.reduce((acc, result) => acc.concat(result), [])\n        );\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to fetch all project stats'));\n      });\n\n    // Reset projects list\n    _projectStatsToFetch.clear();\n  },\n  50\n);\n\nexport function loadStatsForProject(api: Client, project: string, params: UpdateParams) {\n  // Queue up a list of projects that we need stats for\n  // and call a debounced function to fetch stats for list of projects\n  _projectStatsToFetch.add(project);\n  _debouncedLoadStats(api, _projectStatsToFetch, params);\n}\n\nexport function setActiveProject(project: Project | null) {\n  ProjectActions.setActive(project);\n}\n\nexport function removeProject(api: Client, orgId: string, project: Project) {\n  const endpoint = `/projects/${orgId}/${project.slug}/`;\n\n  ProjectActions.removeProject(project);\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      () => {\n        ProjectActions.removeProjectSuccess(project);\n        addSuccessMessage(\n          tct('[project] was successfully removed', {project: project.slug})\n        );\n      },\n      err => {\n        ProjectActions.removeProjectError(project);\n        addErrorMessage(tct('Error removing [project]', {project: project.slug}));\n        throw err;\n      }\n    );\n}\n\nexport function transferProject(\n  api: Client,\n  orgId: string,\n  project: Project,\n  email: string\n) {\n  const endpoint = `/projects/${orgId}/${project.slug}/transfer/`;\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n      data: {\n        email,\n      },\n    })\n    .then(\n      () => {\n        addSuccessMessage(\n          tct('A request was sent to move [project] to a different organization', {\n            project: project.slug,\n          })\n        );\n      },\n      err => {\n        let message = '';\n        // Handle errors with known failures\n        if (err.status >= 400 && err.status < 500 && err.responseJSON) {\n          message = err.responseJSON?.detail;\n        }\n\n        if (message) {\n          addErrorMessage(\n            tct('Error transferring [project]. [message]', {\n              project: project.slug,\n              message,\n            })\n          );\n        } else {\n          addErrorMessage(\n            tct('Error transferring [project]', {\n              project: project.slug,\n            })\n          );\n        }\n\n        throw err;\n      }\n    );\n}\n\n/**\n * Associate a team with a project\n */\n\n/**\n *  Adds a team to a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param team Team data object\n */\nexport function addTeamToProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  team: Team\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${team.slug}/`;\n\n  addLoadingMessage();\n  ProjectActions.addTeam(team);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been added to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamSuccess(team, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to add [team] to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamError();\n        throw err;\n      }\n    );\n}\n\n/**\n * Removes a team from a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param teamSlug Team Slug\n */\nexport function removeTeamFromProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  teamSlug: string\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${teamSlug}/`;\n\n  addLoadingMessage();\n  ProjectActions.removeTeam(teamSlug);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been removed from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamSuccess(teamSlug, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to remove [team] from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamError(err);\n        throw err;\n      }\n    );\n}\n\n/**\n * Change a project's slug\n *\n * @param prev Previous slug\n * @param next New slug\n */\nexport function changeProjectSlug(prev: string, next: string) {\n  ProjectActions.changeSlug(prev, next);\n}\n\n/**\n * Send a sample event\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n */\nexport function sendSampleEvent(api: Client, orgSlug: string, projectSlug: string) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/create-sample/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'POST',\n  });\n}\n\n/**\n * Creates a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param team The team slug to assign the project to\n * @param name Name of the project\n * @param platform The platform key of the project\n * @param options Additional options such as creating default alert rules\n */\nexport function createProject(\n  api: Client,\n  orgSlug: string,\n  team: string,\n  name: string,\n  platform: string,\n  options: {defaultRules?: boolean} = {}\n) {\n  return api.requestPromise(`/teams/${orgSlug}/${team}/projects/`, {\n    method: 'POST',\n    data: {name, platform, default_rules: options.defaultRules},\n  });\n}\n\n/**\n * Load platform documentation specific to the project. The DSN and various\n * other project specific secrets will be included in the documentation.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param platform Project platform.\n */\nexport function loadDocs(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  platform: PlatformKey\n) {\n  return api.requestPromise(`/projects/${orgSlug}/${projectSlug}/docs/${platform}/`);\n}\n\n/**\n * Load the counts of my projects and all projects for the current user\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n */\nexport function fetchProjectsCount(api: Client, orgSlug: string) {\n  return api.requestPromise(`/organizations/${orgSlug}/projects-count/`);\n}\n\n/**\n * Check if there are any releases in the last 90 days.\n * Used for checking if project is using releases.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectId Project Id\n */\nexport async function fetchAnyReleaseExistence(\n  api: Client,\n  orgSlug: string,\n  projectId: number | string\n) {\n  const data = await api.requestPromise(`/organizations/${orgSlug}/releases/stats/`, {\n    method: 'GET',\n    query: {\n      statsPeriod: '90d',\n      project: projectId,\n      per_page: 1,\n    },\n  });\n\n  return data.length > 0;\n}\n","import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport {tct} from 'sentry/locale';\nimport {Team} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {uniqueId} from 'sentry/utils/guid';\n\ntype CallbackOptions = {\n  error?: Function;\n  success?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\n// Fetch user teams for current org and place them in the team store\nexport async function fetchUserTeams(api: Client, params: OrgSlug) {\n  const teams = await api.requestPromise(`/organizations/${params.orgId}/user-teams/`);\n  TeamActions.loadUserTeams(teams);\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {createActions} from 'reflux';\n\nconst OrganizationActions = createActions(['reset', 'fetchOrgError', 'update']);\n\nexport default OrganizationActions;\n","import {createActions} from 'reflux';\n\nconst OrganizationsActions = createActions([\n  'update',\n  'setActive',\n  'changeSlug',\n  'remove',\n  'removeSuccess',\n  'removeError',\n]);\n\nexport default OrganizationsActions;\n","import {createActions} from 'reflux';\n\nconst ProjectActions = createActions([\n  'addTeam',\n  'addTeamError',\n  'addTeamSuccess',\n  'changeSlug',\n  'createSuccess',\n  'loadProjects',\n  'loadStats',\n  'loadStatsError',\n  'loadStatsForProjectSuccess',\n  'loadStatsSuccess',\n  'removeProject',\n  'removeProjectError',\n  'removeProjectSuccess',\n  'removeTeam',\n  'removeTeamError',\n  'removeTeamSuccess',\n  'reset',\n  'setActive',\n  'update',\n  'updateError',\n  'updateSuccess',\n]);\n\nexport default ProjectActions;\n","import {Component, lazy, Suspense} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Params<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  hookName: H;\n  /**\n   * Component that will be shown if no hook is available\n   */\n  defaultComponent?: ReturnType<Hooks[H]>;\n  /**\n   * This is a function that returns a promise (more specifically a function\n   * that returns the result of a dynamic import using `import()`. This will\n   * use React.Suspense and React.lazy to render the component.\n   */\n  defaultComponentPromise?: () => Promise<ReturnType<Hooks[H]>>;\n};\n\n/**\n * Use this instead of the usual ternery operator when using getsentry hooks.\n * So in lieu of:\n *\n *  HookStore.get('component:org-auth-view').length\n *   ? HookStore.get('component:org-auth-view')[0]()\n *   : OrganizationAuth\n *\n * do this instead:\n *\n *   const HookedOrganizationAuth = HookOrDefault({\n *     hookName:'component:org-auth-view',\n *     defaultComponent: OrganizationAuth,\n *   })\n *\n * Note, you will need to add the hookstore function in getsentry [0] first and\n * then register the types [2] and validHookName [1] in sentry.\n *\n * [0] /getsentry/static/getsentry/gsApp/registerHooks.jsx\n * [1] /sentry/app/stores/hookStore.tsx\n * [2] /sentry/app/types/hooks.ts\n */\nfunction HookOrDefault<H extends HookName>({\n  hookName,\n  defaultComponent,\n  defaultComponentPromise,\n}: Params<H>) {\n  type Props = React.ComponentProps<ReturnType<Hooks[H]>>;\n  type State = {hooks: Hooks[H][]};\n\n  class HookOrDefaultComponent extends Component<Props, State> {\n    static displayName = `HookOrDefaultComponent(${hookName})`;\n\n    state: State = {\n      hooks: HookStore.get(hookName),\n    };\n\n    componentWillUnmount() {\n      this.unlistener?.();\n    }\n\n    unlistener = HookStore.listen(\n      (name: string, hooks: Hooks[HookName][]) =>\n        name === hookName && this.setState({hooks}),\n      undefined\n    );\n\n    get defaultComponent() {\n      // If `defaultComponentPromise` is passed, then return a Suspended component\n      if (defaultComponentPromise) {\n        const DefaultComponent = lazy(defaultComponentPromise);\n\n        return (props: Props) => (\n          <Suspense fallback={null}>\n            <DefaultComponent {...props} />\n          </Suspense>\n        );\n      }\n\n      return defaultComponent;\n    }\n\n    render() {\n      const hookExists = this.state.hooks && this.state.hooks.length;\n      const componentFromHook = this.state.hooks[0]?.();\n      const HookComponent =\n        hookExists && componentFromHook ? componentFromHook : this.defaultComponent;\n\n      return HookComponent ? <HookComponent {...this.props} /> : null;\n    }\n  }\n\n  return HookOrDefaultComponent;\n}\n\nexport default HookOrDefault;\n","import {components as selectComponents, MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconWarning} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\nimport {InviteStatus} from './types';\n\nfunction renderEmailValue<Option>(\n  status: InviteStatus[string],\n  valueProps: MultiValueProps<Option>\n) {\n  const {children, ...props} = valueProps;\n  const error = status && status.error;\n\n  const emailLabel =\n    status === undefined ? (\n      children\n    ) : (\n      <Tooltip disabled={!error} title={error}>\n        <EmailLabel>\n          {children}\n          {!status.sent && !status.error && <SendingIndicator />}\n          {status.error && <IconWarning size=\"10px\" />}\n          {status.sent && <IconCheckmark size=\"10px\" color=\"success\" />}\n        </EmailLabel>\n      </Tooltip>\n    );\n\n  return (\n    <selectComponents.MultiValue {...props}>{emailLabel}</selectComponents.MultiValue>\n  );\n}\n\nconst EmailLabel = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(0.5)};\n  align-items: center;\n`;\n\nconst SendingIndicator = styled(LoadingIndicator)`\n  margin: 0;\n  .loading-indicator {\n    border-width: 2px;\n  }\n`;\n\nSendingIndicator.defaultProps = {\n  hideMessage: true,\n  size: 14,\n};\n\nexport default renderEmailValue;\n","import {Component} from 'react';\nimport {MultiValueProps, StylesConfig} from 'react-select';\nimport {withTheme} from '@emotion/react';\n\nimport Button from 'sentry/components/button';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport RoleSelectControl from 'sentry/components/roleSelectControl';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {MemberRole, SelectValue} from 'sentry/types';\nimport {Theme} from 'sentry/utils/theme';\n\nimport renderEmailValue from './renderEmailValue';\nimport {InviteStatus} from './types';\n\ntype SelectOption = SelectValue<string>;\n\ntype Props = {\n  disableRemove: boolean;\n  disabled: boolean;\n  emails: string[];\n  inviteStatus: InviteStatus;\n  onChangeEmails: (emails: null | SelectOption[]) => void;\n  onChangeRole: (role: SelectOption) => void;\n  onChangeTeams: (teams?: SelectOption[] | null) => void;\n  onRemove: () => void;\n  role: string;\n  roleDisabledUnallowed: boolean;\n  roleOptions: MemberRole[];\n\n  teams: string[];\n  theme: Theme;\n  className?: string;\n};\n\ntype State = {\n  inputValue: string;\n};\n\nfunction ValueComponent(\n  props: MultiValueProps<SelectOption>,\n  inviteStatus: Props['inviteStatus']\n) {\n  return renderEmailValue(inviteStatus[props.data.value], props);\n}\n\nfunction mapToOptions(values: string[]): SelectOption[] {\n  return values.map(value => ({value, label: value}));\n}\n\nclass InviteRowControl extends Component<Props, State> {\n  state: State = {inputValue: ''};\n\n  handleInputChange = (inputValue: string) => {\n    this.setState({inputValue});\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    const {onChangeEmails, emails} = this.props;\n    const {inputValue} = this.state;\n    switch (event.key) {\n      case 'Enter':\n      case ',':\n      case ' ':\n        onChangeEmails([...mapToOptions(emails), {label: inputValue, value: inputValue}]);\n        this.setState({inputValue: ''});\n        event.preventDefault();\n        break;\n      default:\n      // do nothing.\n    }\n  };\n\n  render() {\n    const {\n      className,\n      disabled,\n      emails,\n      role,\n      teams,\n      roleOptions,\n      roleDisabledUnallowed,\n      inviteStatus,\n      onRemove,\n      onChangeEmails,\n      onChangeRole,\n      onChangeTeams,\n      disableRemove,\n      theme,\n    } = this.props;\n\n    return (\n      <div className={className}>\n        <SelectControl\n          data-test-id=\"select-emails\"\n          disabled={disabled}\n          placeholder={t('Enter one or more emails')}\n          inputValue={this.state.inputValue}\n          value={emails}\n          components={{\n            MultiValue: props => ValueComponent(props, inviteStatus),\n            DropdownIndicator: () => null,\n          }}\n          options={mapToOptions(emails)}\n          onBlur={(e: React.ChangeEvent<HTMLInputElement>) =>\n            e.target.value &&\n            onChangeEmails([\n              ...mapToOptions(emails),\n              {label: e.target.value, value: e.target.value},\n            ])\n          }\n          styles={getStyles(theme, inviteStatus)}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          onChange={onChangeEmails}\n          multiple\n          creatable\n          clearable\n          menuIsOpen={false}\n        />\n        <RoleSelectControl\n          data-test-id=\"select-role\"\n          disabled={disabled}\n          value={role}\n          roles={roleOptions}\n          disableUnallowed={roleDisabledUnallowed}\n          onChange={onChangeRole}\n        />\n        <TeamSelector\n          data-test-id=\"select-teams\"\n          disabled={disabled}\n          placeholder={t('Add to teams\\u2026')}\n          value={teams}\n          onChange={onChangeTeams}\n          multiple\n          clearable\n        />\n        <Button\n          borderless\n          icon={<IconClose />}\n          size=\"zero\"\n          onClick={onRemove}\n          disabled={disableRemove}\n          aria-label={t('Remove')}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * The email select control has custom selected item states as items\n * show their delivery status after the form is submitted.\n */\nfunction getStyles(theme: Theme, inviteStatus: Props['inviteStatus']): StylesConfig {\n  return {\n    multiValue: (\n      provided: React.CSSProperties,\n      {data}: MultiValueProps<SelectOption>\n    ) => {\n      const status = inviteStatus[data.value];\n      return {\n        ...provided,\n        ...(status?.error\n          ? {\n              color: theme.red300,\n              border: `1px solid ${theme.red300}`,\n              backgroundColor: theme.red100,\n            }\n          : {}),\n      };\n    },\n    multiValueLabel: (\n      provided: React.CSSProperties,\n      {data}: MultiValueProps<SelectOption>\n    ) => {\n      const status = inviteStatus[data.value];\n      return {\n        ...provided,\n        pointerEvents: 'all',\n        ...(status?.error ? {color: theme.red300} : {}),\n      };\n    },\n    multiValueRemove: (\n      provided: React.CSSProperties,\n      {data}: MultiValueProps<SelectOption>\n    ) => {\n      const status = inviteStatus[data.value];\n      return {\n        ...provided,\n        ...(status?.error\n          ? {\n              borderLeft: `1px solid ${theme.red300}`,\n              ':hover': {backgroundColor: theme.red100, color: theme.red300},\n            }\n          : {}),\n      };\n    },\n  };\n}\n\nexport default withTheme(InviteRowControl);\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {MEMBER_ROLES} from 'sentry/constants';\nimport {IconAdd, IconCheckmark, IconWarning} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {uniqueId} from 'sentry/utils/guid';\nimport withLatestContext from 'sentry/utils/withLatestContext';\n\nimport InviteRowControl from './inviteRowControl';\nimport {InviteRow, InviteStatus, NormalizedInvite} from './types';\n\ntype Props = AsyncComponent['props'] &\n  ModalRenderProps & {\n    organization: Organization;\n    initialData?: Partial<InviteRow>[];\n    source?: string;\n  };\n\ntype State = AsyncComponent['state'] & {\n  complete: boolean;\n  inviteStatus: InviteStatus;\n  pendingInvites: InviteRow[];\n  sendingInvites: boolean;\n};\n\nconst DEFAULT_ROLE = 'member';\n\nconst InviteModalHook = HookOrDefault({\n  hookName: 'member-invite-modal:customization',\n  defaultComponent: ({onSendInvites, children}) =>\n    children({sendInvites: onSendInvites, canSend: true}),\n});\n\ntype InviteModalRenderFunc = React.ComponentProps<typeof InviteModalHook>['children'];\n\nclass InviteMembersModal extends AsyncComponent<Props, State> {\n  get inviteTemplate(): InviteRow {\n    return {\n      emails: new Set(),\n      teams: new Set(),\n      role: DEFAULT_ROLE,\n    };\n  }\n\n  /**\n   * Used for analytics tracking of the modals usage.\n   */\n  sessionId = '';\n\n  componentDidMount() {\n    this.sessionId = uniqueId();\n\n    const {organization, source} = this.props;\n    trackAdvancedAnalyticsEvent('invite_modal.opened', {\n      organization,\n      modal_session: this.sessionId,\n      can_invite: this.willInvite,\n      source,\n    });\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const orgId = this.props.organization.slug;\n\n    return [['member', `/organizations/${orgId}/members/me/`]];\n  }\n\n  getDefaultState() {\n    const state = super.getDefaultState();\n    const {initialData} = this.props;\n\n    const pendingInvites = initialData\n      ? initialData.map(initial => ({\n          ...this.inviteTemplate,\n          ...initial,\n        }))\n      : [this.inviteTemplate];\n\n    return {\n      ...state,\n      pendingInvites,\n      inviteStatus: {},\n      complete: false,\n      sendingInvites: false,\n    };\n  }\n\n  reset = () => {\n    this.setState({\n      pendingInvites: [this.inviteTemplate],\n      inviteStatus: {},\n      complete: false,\n      sendingInvites: false,\n    });\n    trackAdvancedAnalyticsEvent('invite_modal.add_more', {\n      organization: this.props.organization,\n      modal_session: this.sessionId,\n    });\n  };\n\n  sendInvite = async (invite: NormalizedInvite) => {\n    const {slug} = this.props.organization;\n    const data = {\n      email: invite.email,\n      teams: [...invite.teams],\n      role: invite.role,\n    };\n\n    this.setState(state => ({\n      inviteStatus: {...state.inviteStatus, [invite.email]: {sent: false}},\n    }));\n\n    const endpoint = this.willInvite\n      ? `/organizations/${slug}/members/`\n      : `/organizations/${slug}/invite-requests/`;\n\n    try {\n      await this.api.requestPromise(endpoint, {method: 'POST', data});\n    } catch (err) {\n      const errorResponse = err.responseJSON;\n\n      // Use the email error message if available. This inconsistently is\n      // returned as either a list of errors for the field, or a single error.\n      const emailError =\n        !errorResponse || !errorResponse.email\n          ? false\n          : Array.isArray(errorResponse.email)\n          ? errorResponse.email[0]\n          : errorResponse.email;\n\n      const error = emailError || t('Could not invite user');\n\n      this.setState(state => ({\n        inviteStatus: {...state.inviteStatus, [invite.email]: {sent: false, error}},\n      }));\n      return;\n    }\n\n    this.setState(state => ({\n      inviteStatus: {...state.inviteStatus, [invite.email]: {sent: true}},\n    }));\n  };\n\n  sendInvites = async () => {\n    this.setState({sendingInvites: true});\n    await Promise.all(this.invites.map(this.sendInvite));\n    this.setState({sendingInvites: false, complete: true});\n\n    trackAdvancedAnalyticsEvent(\n      this.willInvite ? 'invite_modal.invites_sent' : 'invite_modal.requests_sent',\n      {\n        organization: this.props.organization,\n        modal_session: this.sessionId,\n      }\n    );\n  };\n\n  addInviteRow = () =>\n    this.setState(state => ({\n      pendingInvites: [...state.pendingInvites, this.inviteTemplate],\n    }));\n\n  setEmails(emails: string[], index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], emails: new Set(emails)};\n\n      return {pendingInvites};\n    });\n  }\n\n  setTeams(teams: string[], index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], teams: new Set(teams)};\n\n      return {pendingInvites};\n    });\n  }\n\n  setRole(role: string, index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites[index] = {...pendingInvites[index], role};\n\n      return {pendingInvites};\n    });\n  }\n\n  removeInviteRow(index: number) {\n    this.setState(state => {\n      const pendingInvites = [...state.pendingInvites];\n      pendingInvites.splice(index, 1);\n      return {pendingInvites};\n    });\n  }\n\n  get invites(): NormalizedInvite[] {\n    return this.state.pendingInvites.reduce<NormalizedInvite[]>(\n      (acc, row) => [\n        ...acc,\n        ...[...row.emails].map(email => ({email, teams: row.teams, role: row.role})),\n      ],\n      []\n    );\n  }\n\n  get hasDuplicateEmails() {\n    const emails = this.invites.map(inv => inv.email);\n    return emails.length !== new Set(emails).size;\n  }\n\n  get isValidInvites() {\n    return this.invites.length > 0 && !this.hasDuplicateEmails;\n  }\n\n  get statusMessage() {\n    const {sendingInvites, complete, inviteStatus} = this.state;\n\n    if (sendingInvites) {\n      return (\n        <StatusMessage>\n          <LoadingIndicator mini relative hideMessage size={16} />\n          {this.willInvite\n            ? t('Sending organization invitations...')\n            : t('Sending invite requests...')}\n        </StatusMessage>\n      );\n    }\n\n    if (complete) {\n      const statuses = Object.values(inviteStatus);\n      const sentCount = statuses.filter(i => i.sent).length;\n      const errorCount = statuses.filter(i => i.error).length;\n\n      if (this.willInvite) {\n        const invites = <strong>{tn('%s invite', '%s invites', sentCount)}</strong>;\n        const tctComponents = {\n          invites,\n          failed: errorCount,\n        };\n\n        return (\n          <StatusMessage status=\"success\">\n            <IconCheckmark size=\"sm\" />\n            {errorCount > 0\n              ? tct('Sent [invites], [failed] failed to send.', tctComponents)\n              : tct('Sent [invites]', tctComponents)}\n          </StatusMessage>\n        );\n      }\n      const inviteRequests = (\n        <strong>{tn('%s invite request', '%s invite requests', sentCount)}</strong>\n      );\n      const tctComponents = {\n        inviteRequests,\n        failed: errorCount,\n      };\n      return (\n        <StatusMessage status=\"success\">\n          <IconCheckmark size=\"sm\" />\n          {errorCount > 0\n            ? tct(\n                '[inviteRequests] pending approval, [failed] failed to send.',\n                tctComponents\n              )\n            : tct('[inviteRequests] pending approval', tctComponents)}\n        </StatusMessage>\n      );\n    }\n\n    if (this.hasDuplicateEmails) {\n      return (\n        <StatusMessage status=\"error\">\n          <IconWarning size=\"sm\" />\n          {t('Duplicate emails between invite rows.')}\n        </StatusMessage>\n      );\n    }\n\n    return null;\n  }\n\n  get willInvite() {\n    return this.props.organization.access?.includes('member:write');\n  }\n\n  get inviteButtonLabel() {\n    if (this.invites.length > 0) {\n      const numberInvites = this.invites.length;\n\n      // Note we use `t()` here because `tn()` expects the same # of string formatters\n      const inviteText =\n        numberInvites === 1 ? t('Send invite') : t('Send invites (%s)', numberInvites);\n      const requestText =\n        numberInvites === 1\n          ? t('Send invite request')\n          : t('Send invite requests (%s)', numberInvites);\n\n      return this.willInvite ? inviteText : requestText;\n    }\n\n    return this.willInvite ? t('Send invite') : t('Send invite request');\n  }\n\n  render() {\n    const {Footer, closeModal, organization} = this.props;\n    const {pendingInvites, sendingInvites, complete, inviteStatus, member} = this.state;\n\n    const disableInputs = sendingInvites || complete;\n\n    // eslint-disable-next-line react/prop-types\n    const hookRenderer: InviteModalRenderFunc = ({sendInvites, canSend, headerInfo}) => (\n      <Fragment>\n        <Heading>\n          {t('Invite New Members')}\n          {!this.willInvite && (\n            <QuestionTooltip\n              title={t(\n                `You do not have permission to directly invite members. Email\n                 addresses entered here will be forwarded to organization\n                 managers and owners; they will be prompted to approve the\n                 invitation.`\n              )}\n              size=\"sm\"\n              position=\"bottom\"\n            />\n          )}\n        </Heading>\n        <Subtext>\n          {this.willInvite\n            ? t('Invite new members by email to join your organization.')\n            : t(\n                `You don’t have permission to directly invite users, but we'll send a request to your organization owner and manager for review.`\n              )}\n        </Subtext>\n\n        {headerInfo}\n\n        <InviteeHeadings>\n          <div>{t('Email addresses')}</div>\n          <div>{t('Role')}</div>\n          <div>{t('Add to team')}</div>\n        </InviteeHeadings>\n\n        {pendingInvites.map(({emails, role, teams}, i) => (\n          <StyledInviteRow\n            key={i}\n            disabled={disableInputs}\n            emails={[...emails]}\n            role={role}\n            teams={[...teams]}\n            roleOptions={member ? member.roles : MEMBER_ROLES}\n            roleDisabledUnallowed={this.willInvite}\n            inviteStatus={inviteStatus}\n            onRemove={() => this.removeInviteRow(i)}\n            onChangeEmails={opts => this.setEmails(opts?.map(v => v.value) ?? [], i)}\n            onChangeRole={value => this.setRole(value?.value, i)}\n            onChangeTeams={opts => this.setTeams(opts ? opts.map(v => v.value) : [], i)}\n            disableRemove={disableInputs || pendingInvites.length === 1}\n          />\n        ))}\n\n        <AddButton\n          disabled={disableInputs}\n          priority=\"link\"\n          onClick={this.addInviteRow}\n          icon={<IconAdd size=\"xs\" isCircled />}\n        >\n          {t('Add another')}\n        </AddButton>\n\n        <Footer>\n          <FooterContent>\n            <div>{this.statusMessage}</div>\n\n            {complete ? (\n              <Fragment>\n                <Button data-test-id=\"send-more\" size=\"small\" onClick={this.reset}>\n                  {t('Send more invites')}\n                </Button>\n                <Button\n                  data-test-id=\"close\"\n                  priority=\"primary\"\n                  size=\"small\"\n                  onClick={() => {\n                    trackAdvancedAnalyticsEvent('invite_modal.closed', {\n                      organization: this.props.organization,\n                      modal_session: this.sessionId,\n                    });\n                    closeModal();\n                  }}\n                >\n                  {t('Close')}\n                </Button>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Button\n                  data-test-id=\"cancel\"\n                  size=\"small\"\n                  onClick={closeModal}\n                  disabled={disableInputs}\n                >\n                  {t('Cancel')}\n                </Button>\n                <Button\n                  size=\"small\"\n                  data-test-id=\"send-invites\"\n                  priority=\"primary\"\n                  disabled={!canSend || !this.isValidInvites || disableInputs}\n                  onClick={sendInvites}\n                >\n                  {this.inviteButtonLabel}\n                </Button>\n              </Fragment>\n            )}\n          </FooterContent>\n        </Footer>\n      </Fragment>\n    );\n\n    return (\n      <InviteModalHook\n        organization={organization}\n        willInvite={this.willInvite}\n        onSendInvites={this.sendInvites}\n      >\n        {hookRenderer}\n      </InviteModalHook>\n    );\n  }\n}\n\nconst Heading = styled('h1')`\n  display: inline-grid;\n  gap: ${space(1.5)};\n  grid-auto-flow: column;\n  align-items: center;\n  font-weight: 400;\n  font-size: ${p => p.theme.headerFontSize};\n  margin-top: 0;\n  margin-bottom: ${space(0.75)};\n`;\n\nconst Subtext = styled('p')`\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(3)};\n`;\n\nconst inviteRowGrid = css`\n  display: grid;\n  gap: ${space(1.5)};\n  grid-template-columns: 3fr 180px 2fr max-content;\n`;\n\nconst InviteeHeadings = styled('div')`\n  ${inviteRowGrid};\n\n  margin-bottom: ${space(1)};\n  font-weight: 600;\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst StyledInviteRow = styled(InviteRowControl)`\n  ${inviteRowGrid};\n  margin-bottom: ${space(1.5)};\n`;\n\nconst AddButton = styled(Button)`\n  margin-top: ${space(3)};\n`;\n\nconst FooterContent = styled('div')`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr max-content max-content;\n  gap: ${space(1)};\n`;\n\nconst StatusMessage = styled('div')<{status?: 'success' | 'error'}>`\n  display: grid;\n  grid-template-columns: max-content max-content;\n  gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => (p.status === 'error' ? p.theme.red300 : p.theme.gray400)};\n\n  > :first-child {\n    ${p => p.status === 'success' && `color: ${p.theme.green300}`};\n  }\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 800px;\n  margin: 50px auto;\n`;\n\nexport default withLatestContext(InviteMembersModal);\n","import styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {MemberRole} from 'sentry/types';\n\ntype OptionType = {\n  details: React.ReactNode;\n  disabled: boolean;\n  label: string;\n  value: string;\n};\n\ntype Props = Omit<ControlProps<OptionType>, 'onChange' | 'value'> & {\n  disableUnallowed: boolean;\n  roles: MemberRole[];\n  /**\n   * Narrower type than SelectControl because there is no empty value\n   */\n  onChange?: (value: OptionType) => void;\n  value?: string;\n};\n\nfunction RoleSelectControl({roles, disableUnallowed, ...props}: Props) {\n  return (\n    <SelectControl\n      options={roles?.map(\n        (r: MemberRole) =>\n          ({\n            value: r.id,\n            label: r.name,\n            disabled: disableUnallowed && !r.allowed,\n            details: <Details>{r.desc}</Details>,\n          } as OptionType)\n      )}\n      showDividers\n      {...props}\n    />\n  );\n}\n\nexport default RoleSelectControl;\n\nconst Details = styled('span')`\n  display: inline-block;\n  width: 20rem;\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport OrganizationsActions from 'sentry/actions/organizationsActions';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Organization, Project} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype OrgTypes = Organization | null;\n\ntype State = {\n  environment: string | string[] | null;\n  lastProject: Project | null;\n  organization: OrgTypes;\n  project: Project | null;\n};\n\ninterface LatestContextStoreDefinition extends StoreDefinition {\n  get(): State;\n  onSetActiveOrganization(organization: OrgTypes): void;\n  onSetActiveProject(project: Project | null): void;\n  onUpdateOrganization(organization: OrgTypes): void;\n  onUpdateProject(project: Project | null): void;\n  reset(): void;\n  state: State;\n}\n\n/**\n * Keeps track of last usable project/org this currently won't track when users\n * navigate out of a org/project completely, it tracks only if a user switches\n * into a new org/project.\n *\n * Only keep slug so that people don't get the idea to access org/project data\n * here Org/project data is currently in organizationsStore/projectsStore\n */\nconst storeConfig: LatestContextStoreDefinition = {\n  unsubscribeListeners: [],\n\n  state: {\n    project: null,\n    lastProject: null,\n    organization: null,\n    environment: null,\n  },\n\n  get() {\n    return this.state;\n  },\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.setActive, this.onSetActiveProject)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateSuccess, this.onUpdateProject)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationsActions.setActive, this.onSetActiveOrganization)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationsActions.update, this.onUpdateOrganization)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.onUpdateOrganization)\n    );\n  },\n\n  reset() {\n    this.state = {\n      project: null,\n      lastProject: null,\n      organization: null,\n      environment: null,\n    };\n    return this.state;\n  },\n\n  onUpdateOrganization(org) {\n    // Don't do anything if base/target orgs are falsey\n    if (!this.state.organization) {\n      return;\n    }\n    if (!org) {\n      return;\n    }\n    // Check to make sure current active org is what has been updated\n    if (org.slug !== this.state.organization.slug) {\n      return;\n    }\n\n    this.state = {\n      ...this.state,\n      organization: org,\n    };\n    this.trigger(this.state);\n  },\n\n  onSetActiveOrganization(org) {\n    if (!org) {\n      this.state = {\n        ...this.state,\n        organization: null,\n        project: null,\n      };\n    } else if (!this.state.organization || this.state.organization.slug !== org.slug) {\n      // Update only if different\n      this.state = {\n        ...this.state,\n        organization: org,\n        project: null,\n      };\n    }\n\n    this.trigger(this.state);\n  },\n\n  onSetActiveProject(project) {\n    if (!project) {\n      this.state = {\n        ...this.state,\n        lastProject: this.state.project,\n        project: null,\n      };\n    } else if (!this.state.project || this.state.project.slug !== project.slug) {\n      // Update only if different\n      this.state = {\n        ...this.state,\n        lastProject: this.state.project,\n        project,\n      };\n    }\n\n    this.trigger(this.state);\n  },\n\n  onUpdateProject(project) {\n    this.state = {\n      ...this.state,\n      project,\n    };\n    this.trigger(this.state);\n  },\n};\n\nconst LatestContextStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default LatestContextStore;\n","import {createStore} from 'reflux';\n\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport {ORGANIZATION_FETCH_ERROR_TYPES} from 'sentry/constants';\nimport {Organization} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\nimport RequestError from 'sentry/utils/requestError/requestError';\n\nimport {CommonStoreDefinition} from './types';\n\ntype UpdateOptions = {\n  replace?: boolean;\n};\n\ntype State = {\n  dirty: boolean;\n  loading: boolean;\n  organization: Organization | null;\n  error?: RequestError | null;\n  errorType?: string | null;\n};\n\ninterface OrganizationStoreDefinition extends CommonStoreDefinition<State> {\n  get(): State;\n  init(): void;\n  onFetchOrgError(err: RequestError): void;\n  onUpdate(org: Organization, options: UpdateOptions): void;\n  reset(): void;\n}\n\nconst storeConfig: OrganizationStoreDefinition = {\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.update, this.onUpdate)\n    );\n    this.unsubscribeListeners.push(this.listenTo(OrganizationActions.reset, this.reset));\n    this.unsubscribeListeners.push(\n      this.listenTo(OrganizationActions.fetchOrgError, this.onFetchOrgError)\n    );\n  },\n\n  reset() {\n    this.loading = true;\n    this.error = null;\n    this.errorType = null;\n    this.organization = null;\n    this.dirty = false;\n    this.trigger(this.get());\n  },\n\n  onUpdate(updatedOrg: Organization, {replace = false}: UpdateOptions = {}) {\n    this.loading = false;\n    this.error = null;\n    this.errorType = null;\n    this.organization = replace ? updatedOrg : {...this.organization, ...updatedOrg};\n    this.dirty = false;\n    this.trigger(this.get());\n  },\n\n  onFetchOrgError(err: RequestError) {\n    this.organization = null;\n    this.errorType = null;\n\n    switch (err?.status) {\n      case 401:\n        this.errorType = ORGANIZATION_FETCH_ERROR_TYPES.ORG_NO_ACCESS;\n        break;\n      case 404:\n        this.errorType = ORGANIZATION_FETCH_ERROR_TYPES.ORG_NOT_FOUND;\n        break;\n      default:\n    }\n    this.loading = false;\n    this.error = err;\n    this.dirty = false;\n    this.trigger(this.get());\n  },\n\n  get() {\n    return {\n      organization: this.organization,\n      error: this.error,\n      loading: this.loading,\n      errorType: this.errorType,\n      dirty: this.dirty,\n    };\n  },\n\n  getState() {\n    return this.get();\n  },\n};\n\nconst OrganizationStore = createStore(makeSafeRefluxStore(storeConfig));\n\nexport default OrganizationStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport OrganizationsActions from 'sentry/actions/organizationsActions';\nimport {Organization} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface OrganizationsStoreDefinition extends StoreDefinition {\n  add(item: Organization): void;\n  get(slug: string): Organization | undefined;\n\n  getAll(): Organization[];\n  load(items: Organization[]): void;\n  loaded: boolean;\n  onChangeSlug(prev: Organization, next: Organization): void;\n  onRemoveSuccess(slug: string): void;\n  onUpdate(org: Organization): void;\n  remove(slug: string): void;\n  state: Organization[];\n}\n\nconst storeConfig: OrganizationsStoreDefinition = {\n  listenables: [OrganizationsActions],\n\n  state: [],\n  loaded: false,\n\n  // So we can use Reflux.connect in a component mixin\n  getInitialState() {\n    return this.state;\n  },\n\n  init() {\n    this.state = [];\n    this.loaded = false;\n  },\n\n  onUpdate(org: Organization) {\n    this.add(org);\n  },\n\n  onChangeSlug(prev: Organization, next: Organization) {\n    if (prev.slug === next.slug) {\n      return;\n    }\n\n    this.remove(prev.slug);\n    this.add(next);\n  },\n\n  onRemoveSuccess(slug: string) {\n    this.remove(slug);\n  },\n\n  get(slug: Organization['slug']) {\n    return this.state.find((item: Organization) => item.slug === slug);\n  },\n\n  getAll() {\n    return this.state;\n  },\n\n  remove(slug: Organization['slug']) {\n    this.state = this.state.filter(item => slug !== item.slug);\n    this.trigger(this.state);\n  },\n\n  add(item: Organization) {\n    let match = false;\n    this.state.forEach((existing, idx) => {\n      if (existing.id === item.id) {\n        item = {...existing, ...item};\n        this.state[idx] = item;\n        match = true;\n      }\n    });\n    if (!match) {\n      this.state = [...this.state, item];\n    }\n    this.trigger(this.state);\n  },\n\n  load(items: Organization[]) {\n    this.state = items;\n    this.loaded = true;\n    this.trigger(items);\n  },\n};\n\nconst OrganizationsStore = createStore(makeSafeRefluxStore(storeConfig));\n\nexport default OrganizationsStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Project} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface ProjectsStatsStoreDefinition extends StoreDefinition {\n  getAll(): ProjectsStatsStoreDefinition['itemsBySlug'];\n\n  getBySlug(slug: string): Project;\n  getInitialState(): ProjectsStatsStoreDefinition['itemsBySlug'];\n  itemsBySlug: Record<string, Project>;\n  reset(): void;\n}\n\n/**\n * This is a store specifically used by the dashboard, so that we can\n * clear the store when the Dashboard unmounts\n * (as to not disrupt ProjectsStore which a lot more components use)\n */\nconst storeConfig: ProjectsStatsStoreDefinition = {\n  itemsBySlug: {},\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadStatsForProjectSuccess, this.onStatsLoadSuccess)\n    );\n    this.unsubscribeListeners.push(this.listenTo(ProjectActions.update, this.onUpdate));\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateError, this.onUpdateError)\n    );\n  },\n\n  getInitialState() {\n    return this.itemsBySlug;\n  },\n\n  reset() {\n    this.itemsBySlug = {};\n    this.updatingItems = new Map();\n  },\n\n  onStatsLoadSuccess(projects: Project[]) {\n    projects.forEach(project => {\n      this.itemsBySlug[project.slug] = project;\n    });\n    this.trigger(this.itemsBySlug);\n  },\n\n  /**\n   * Optimistic updates\n   * @param projectSlug Project slug\n   * @param data Project data\n   */\n  onUpdate(projectSlug: string, data: Project) {\n    const project = this.getBySlug(projectSlug);\n    this.updatingItems.set(projectSlug, project);\n    if (!project) {\n      return;\n    }\n\n    const newProject: Project = {\n      ...project,\n      ...data,\n    };\n\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: newProject,\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  onUpdateSuccess(data: Project) {\n    // Remove project from updating map\n    this.updatingItems.delete(data.slug);\n  },\n\n  /**\n   * Revert project data when there was an error updating project details\n   * @param err Error object\n   * @param data Previous project data\n   */\n  onUpdateError(_err: Error, projectSlug: string) {\n    const project = this.updatingItems.get(projectSlug);\n    if (!project) {\n      return;\n    }\n\n    this.updatingItems.delete(projectSlug);\n    // Restore old project\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: {...project},\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  getAll() {\n    return this.itemsBySlug;\n  },\n\n  getBySlug(slug) {\n    return this.itemsBySlug[slug];\n  },\n};\n\nconst ProjectsStatsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ProjectsStatsStore;\n","import {PinnedPageFilter} from 'sentry/types';\n\nexport type CoreUIEventParameters = {\n  'page_filters.pin_click': {\n    filter: PinnedPageFilter;\n    pin: boolean;\n  };\n};\n\ntype CoreUIAnalyticsKey = keyof CoreUIEventParameters;\n\nexport const coreUIEventMap: Record<CoreUIAnalyticsKey, string> = {\n  'page_filters.pin_click': 'Page Filters: Pin Button Clicked',\n};\n","// The add/edit widget modal is currently being ported to the widget builder full-page and\n// this will be removed once that is done.\ntype DashboardsEventParametersAddWidgetModal = {\n  'dashboards_views.add_widget_modal.change': {\n    field: string;\n    from: string;\n    value: string;\n    widget_type: string;\n  };\n  'dashboards_views.add_widget_modal.confirm': {\n    data_set: string;\n  };\n  'dashboards_views.add_widget_modal.opened': {};\n  'dashboards_views.add_widget_modal.save': {\n    data_set: string;\n  };\n  'dashboards_views.edit_widget_modal.confirm': {};\n  'dashboards_views.edit_widget_modal.opened': {};\n};\n\nconst dashboardsEventMapAddWidgetModal: Record<\n  keyof DashboardsEventParametersAddWidgetModal,\n  string | null\n> = {\n  'dashboards_views.edit_widget_modal.confirm':\n    'Dashboards2: Edit Dashboard Widget modal form submitted',\n  'dashboards_views.edit_widget_modal.opened': 'Dashboards2: Edit Widget Modal Opened',\n  'dashboards_views.add_widget_modal.opened': 'Dashboards2: Add Widget Modal opened',\n  'dashboards_views.add_widget_modal.change':\n    'Dashboards2: Field changed in Add Widget Modal',\n  'dashboards_views.add_widget_modal.confirm':\n    'Dashboards2: Add Widget to Dashboard modal form submitted',\n  'dashboards_views.add_widget_modal.save':\n    'Dashboards2: Widget saved directly to Dashboard from Add Widget to Dashboard modal',\n};\n\n// Used in the full-page widget builder\ntype DashboardsEventParametersWidgetBuilder = {\n  'dashboards_views.widget_builder.change': {\n    field: string;\n    from: string;\n    new_widget: boolean;\n    value: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_builder.opened': {\n    new_widget: boolean;\n  };\n  'dashboards_views.widget_builder.save': {\n    data_set: string;\n    new_widget: boolean;\n  };\n};\n\nconst dashboardsEventMapWidgetBuilder: Record<\n  keyof DashboardsEventParametersWidgetBuilder,\n  string | null\n> = {\n  'dashboards_views.widget_builder.change': 'Widget Builder: Field changed',\n  'dashboards_views.widget_builder.save': 'Widget Builder: Form submitted',\n  'dashboards_views.widget_builder.opened': 'Widget Builder: Page opened',\n};\n\nexport type DashboardsEventParameters = {\n  'dashboards_manage.change_sort': {\n    sort: string;\n  };\n  'dashboards_manage.create.start': {};\n  'dashboards_manage.search': {};\n  'dashboards_manage.templates.add': {\n    dashboard_id: string;\n    dashboard_title: string;\n    was_previewed: boolean;\n  };\n  'dashboards_manage.templates.preview': {\n    dashboard_id: string;\n  };\n  'dashboards_manage.templates.toggle': {\n    show_templates: boolean;\n  };\n  'dashboards_views.open_in_discover.opened': {\n    widget_type: string;\n  };\n  'dashboards_views.query_selector.opened': {\n    widget_type: string;\n  };\n  'dashboards_views.query_selector.selected': {\n    widget_type: string;\n  };\n  'dashboards_views.widget_library.add': {\n    num_widgets: number;\n  };\n  'dashboards_views.widget_library.add_widget': {\n    title: string;\n  };\n  'dashboards_views.widget_library.opened': {};\n  'dashboards_views.widget_library.switch_tab': {\n    to: string;\n  };\n  'dashboards_views.widget_viewer.edit': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.open': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.open_source': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.paginate': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.select_query': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.sort': {\n    column: string;\n    display_type: string;\n    order: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.toggle_legend': {\n    display_type: string;\n    widget_type: string;\n  };\n  'dashboards_views.widget_viewer.zoom': {\n    display_type: string;\n    widget_type: string;\n  };\n} & DashboardsEventParametersAddWidgetModal &\n  DashboardsEventParametersWidgetBuilder;\n\nexport type DashboardsEventKey = keyof DashboardsEventParameters;\n\nexport const dashboardsEventMap: Record<DashboardsEventKey, string | null> = {\n  'dashboards_views.query_selector.opened':\n    'Dashboards2: Query Selector opened for Widget',\n  'dashboards_views.query_selector.selected':\n    'Dashboards2: Query selected in Query Selector',\n  'dashboards_views.open_in_discover.opened': 'Dashboards2: Widget Opened In Discover',\n  'dashboards_views.widget_library.add': 'Dashboards2: Number of prebuilt widgets added',\n  'dashboards_views.widget_library.add_widget':\n    'Dashboards2: Title of prebuilt widget added',\n  'dashboards_views.widget_library.switch_tab':\n    'Dashboards2: Widget Library tab switched',\n  'dashboards_views.widget_library.opened': 'Dashboards2: Add Widget Library opened',\n  'dashboards_manage.search': 'Dashboards Manager: Search',\n  'dashboards_manage.change_sort': 'Dashboards Manager: Sort By Changed',\n  'dashboards_manage.create.start': 'Dashboards Manager: Dashboard Create Started',\n  'dashboards_manage.templates.toggle': 'Dashboards Manager: Template Toggle Changed',\n  'dashboards_manage.templates.add': 'Dashboards Manager: Template Added',\n  'dashboards_manage.templates.preview': 'Dashboards Manager: Template Previewed',\n  'dashboards_views.widget_viewer.edit': 'Widget Viewer: Edit Widget Modal Opened',\n  'dashboards_views.widget_viewer.open': 'Widget Viewer: Opened',\n  'dashboards_views.widget_viewer.open_source':\n    'Widget Viewer: Opened in Discover/Issues',\n  'dashboards_views.widget_viewer.paginate': 'Widget Viewer: Paginate',\n  'dashboards_views.widget_viewer.select_query': 'Widget Viewer: Query Selected',\n  'dashboards_views.widget_viewer.sort': 'Widget Viewer: Table Sorted',\n  'dashboards_views.widget_viewer.toggle_legend': 'Widget Viewer: Legend Toggled',\n  'dashboards_views.widget_viewer.zoom': 'Widget Viewer: Chart zoomed',\n  ...dashboardsEventMapAddWidgetModal,\n  ...dashboardsEventMapWidgetBuilder,\n};\n","export type DiscoverEventParameters = {\n  'discover_views.add_to_dashboard.confirm': {};\n  'discover_views.add_to_dashboard.modal_open': {saved_query: boolean};\n};\n\nexport type DiscoverEventKey = keyof DiscoverEventParameters;\n\nexport const discoverEventMap: Record<DiscoverEventKey, string | null> = {\n  'discover_views.add_to_dashboard.modal_open':\n    'Discover2: Add to Dashboard modal opened',\n  'discover_views.add_to_dashboard.confirm':\n    'Discover2: Add to Dashboard modal form submitted',\n};\n","import {PlatformKey} from 'sentry/data/platformCategories';\n\ntype MobilePromptBannerParams = {\n  matchedUserAgentString: string;\n};\n\ntype PlatformParam = {\n  platform: PlatformKey;\n};\n\ntype PlatformCategory = {\n  category: string;\n  source?: string;\n};\n\ntype PlatformPickerParam = {\n  platform_id: string;\n  source?: string;\n};\n\ntype PlatformSearchParam = {\n  num_results: number;\n  search: string;\n  source?: string;\n};\n\ntype SampleEventParam = {\n  platform?: PlatformKey;\n};\n\ntype IntegrationParam = {\n  all_selected_integrations?: string;\n  integration?: string;\n};\n\ntype InviteRequestParam = {\n  invite_status: string;\n  member_id: number;\n};\n\ntype InviteModal = {\n  modal_session: string;\n};\n\ntype SampleEvent = {\n  duration: number;\n  interval: number;\n  platform: string;\n  project_id: string;\n  retries: number;\n  source: string;\n};\n\n// define the event key to payload mappings\nexport type GrowthEventParameters = {\n  'growth.clicked_enter_sandbox': {\n    scenario: string;\n    source?: string;\n  };\n  'growth.clicked_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'growth.clicked_mobile_prompt_setup_project': MobilePromptBannerParams;\n  'growth.clicked_sidebar': {\n    item: string;\n  };\n  'growth.demo_click_docs': {};\n  'growth.demo_click_get_started': {cta?: string};\n  'growth.demo_click_request_demo': {};\n  'growth.demo_modal_clicked_continue': {};\n  'growth.demo_modal_clicked_signup': {};\n  'growth.issue_open_in_discover_btn_clicked': {};\n  'growth.onboarding_clicked_instrument_app': {source?: string};\n  'growth.onboarding_clicked_integration_in_sidebar': {integration: string};\n  'growth.onboarding_clicked_project_in_sidebar': {platform: string};\n  'growth.onboarding_clicked_setup_integration_later': {\n    integration: string;\n    integration_index: number;\n  };\n  'growth.onboarding_clicked_setup_platform_later': PlatformParam & {\n    project_index: number;\n  };\n  'growth.onboarding_clicked_skip': {source?: string};\n  'growth.onboarding_load_choose_platform': {};\n  'growth.onboarding_quick_start_cta': SampleEventParam;\n  'growth.onboarding_quick_start_cta_integration': IntegrationParam;\n  'growth.onboarding_set_up_your_integrations': {\n    integration_count: number;\n    integrations: string;\n  };\n  'growth.onboarding_set_up_your_project': PlatformParam;\n  'growth.onboarding_set_up_your_projects': {platform_count: number; platforms: string};\n  'growth.onboarding_start_onboarding': {\n    source?: string;\n  };\n  'growth.onboarding_take_to_error': {};\n  'growth.onboarding_view_full_docs': {};\n  'growth.onboarding_view_sample_event': SampleEventParam;\n  'growth.platformpicker_category': PlatformCategory;\n  'growth.platformpicker_search': PlatformSearchParam;\n  'growth.sample_error_onboarding_link_clicked': {\n    platform?: string;\n    project_id?: string;\n  };\n  'growth.sample_transaction_docs_link_clicked': {\n    project_id: string;\n  };\n  'growth.select_platform': PlatformPickerParam;\n  'growth.submitted_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'invite_modal.add_more': InviteModal;\n  'invite_modal.closed': InviteModal;\n  'invite_modal.invites_sent': InviteModal;\n  'invite_modal.opened': InviteModal & {\n    can_invite: boolean;\n    source?: string;\n  };\n  'invite_modal.requests_sent': InviteModal;\n  'invite_request.approved': InviteRequestParam;\n  'invite_request.denied': InviteRequestParam;\n  'member_settings_page.loaded': {\n    num_invite_requests: number;\n    num_members: number;\n  };\n  'onboarding.wizard_clicked': {\n    action: string;\n    todo_id: string;\n    todo_title: string;\n  };\n  'onboarding.wizard_opened': {};\n  'sample_event.button_viewed': {\n    project_id: string;\n    source: string;\n  };\n  'sample_event.created': SampleEvent;\n  'sample_event.failed': SampleEvent;\n  'sdk_updates.clicked': {};\n  'sdk_updates.seen': {};\n  'sdk_updates.snoozed': {};\n};\n\ntype GrowthAnalyticsKey = keyof GrowthEventParameters;\n\nexport const growthEventMap: Record<GrowthAnalyticsKey, string | null> = {\n  'growth.clicked_mobile_prompt_setup_project':\n    'Growth: Clicked Mobile Prompt Setup Project',\n  'growth.clicked_mobile_prompt_ask_teammate':\n    'Growth: Clicked Mobile Prompt Ask Teammate',\n  'growth.submitted_mobile_prompt_ask_teammate':\n    'Growth: Submitted Mobile Prompt Ask Teammate',\n  'growth.demo_click_get_started': 'Growth: Demo Click Get Started',\n  'growth.demo_click_docs': 'Growth: Demo Click Docs',\n  'growth.demo_click_request_demo': 'Growth: Demo Click Request Demo',\n  'growth.clicked_sidebar': 'Growth: Clicked Sidebar',\n  'growth.onboarding_load_choose_platform':\n    'Growth: Onboarding Load Choose Platform Page',\n  'growth.onboarding_set_up_your_project': 'Growth: Onboarding Click Set Up Your Project',\n  'growth.onboarding_set_up_your_projects':\n    'Growth: Onboarding Click Set Up Your Projects',\n  'growth.onboarding_set_up_your_integrations':\n    'Growth: Onboarding Click Set Up Your Integrations',\n  'growth.select_platform': 'Growth: Onboarding Choose Platform',\n  'growth.platformpicker_category': 'Growth: Onboarding Platform Category',\n  'growth.platformpicker_search': 'Growth: Onboarding Platform Search',\n  'growth.onboarding_start_onboarding': 'Growth: Onboarding Start Onboarding',\n  'growth.onboarding_clicked_skip': 'Growth: Onboarding Clicked Skip',\n  'growth.onboarding_take_to_error': 'Growth: Onboarding Take to Error',\n  'growth.onboarding_view_full_docs': 'Growth: Onboarding View Full Docs',\n  'growth.onboarding_view_sample_event': 'Growth: Onboarding View Sample Event',\n  'growth.onboarding_clicked_instrument_app': 'Growth: Onboarding Clicked Instrument App',\n  'growth.onboarding_clicked_setup_platform_later':\n    'Growth: Onboarding Clicked Setup Platform Later',\n  'growth.onboarding_clicked_setup_integration_later':\n    'Growth: Onboarding Clicked Setup Integration Later',\n  'growth.onboarding_quick_start_cta': 'Growth: Quick Start Onboarding CTA',\n  'growth.onboarding_quick_start_cta_integration':\n    'Growth: Quick Start Onboarding Integration CTA',\n  'invite_request.approved': 'Invite Request Approved',\n  'invite_request.denied': 'Invite Request Denied',\n  'growth.demo_modal_clicked_signup': 'Growth: Demo Modal Clicked Signup',\n  'growth.demo_modal_clicked_continue': 'Growth: Demo Modal Clicked Continue',\n  'growth.clicked_enter_sandbox': 'Growth: Clicked Enter Sandbox',\n  'growth.onboarding_clicked_project_in_sidebar': 'Growth: Clicked Project Sidebar',\n  'growth.onboarding_clicked_integration_in_sidebar':\n    'Growth: Clicked Integration Sidebar',\n  'growth.sample_transaction_docs_link_clicked':\n    'Growth: Sample Transaction Docs Link Clicked',\n  'growth.sample_error_onboarding_link_clicked':\n    'Growth: Sample Error Onboarding Link Clicked',\n  'growth.issue_open_in_discover_btn_clicked':\n    'Growth: Open in Discover Button in Issue Details clicked',\n  'member_settings_page.loaded': 'Member Settings Page Loaded',\n  'invite_modal.opened': 'Invite Modal: Opened',\n  'invite_modal.closed': 'Invite Modal: Closed',\n  'invite_modal.add_more': 'Invite Modal: Add More',\n  'invite_modal.invites_sent': 'Invite Modal: Invites Sent',\n  'invite_modal.requests_sent': 'Invite Modal: Requests Sent',\n  'sdk_updates.seen': 'SDK Updates: Seen',\n  'sdk_updates.snoozed': 'SDK Updates: Snoozed',\n  'sdk_updates.clicked': 'SDK Updates: Clicked',\n  'onboarding.wizard_opened': 'Onboarding Wizard Opened',\n  'onboarding.wizard_clicked': 'Onboarding Wizard Clicked',\n  'sample_event.button_viewed': null, // high-volume event\n  'sample_event.created': 'Sample Event Created',\n  'sample_event.failed': 'Sample Event Failed',\n};\n","type IssueStream = {\n  group_id: string;\n  tab: string;\n  was_shown_suggestion: boolean;\n};\n\nexport type IssueEventParameters = {\n  'event_cause.dismissed': {};\n  'event_cause.docs_clicked': {};\n  'event_cause.snoozed': {};\n  'event_cause.viewed': {\n    platform?: string;\n    project_id?: string;\n  };\n  'inbox_tab.issue_clicked': {\n    group_id: string;\n  };\n  'issue.search_sidebar_clicked': {};\n  'issue.shared_publicly': {};\n  'issue_error_banner.viewed': {\n    error_message: string[];\n    error_type: string[];\n    group?: string;\n    platform?: string;\n  };\n  'issue_search.failed': {\n    error: string;\n    search_source: string;\n    search_type: string;\n  };\n  'issues_stream.issue_assigned': IssueStream & {\n    assigned_type: string;\n    did_assign_suggestion: boolean;\n    assigned_suggestion_reason?: string;\n  };\n  'issues_stream.issue_clicked': IssueStream;\n  'issues_tab.viewed': {\n    num_issues: number;\n    tab: string;\n  };\n  resolve_issue: {release: string};\n  'tag.clicked': {\n    is_clickable: boolean;\n  };\n};\n\nexport type IssueEventKey = keyof IssueEventParameters;\n\nexport const issueEventMap: Record<IssueEventKey, string | null> = {\n  'event_cause.viewed': null, // send to main event store only due to high event volume\n  'event_cause.docs_clicked': 'Event Cause Docs Clicked',\n  'event_cause.snoozed': 'Event Cause Snoozed',\n  'event_cause.dismissed': 'Event Cause Dismissed',\n  'issue_error_banner.viewed': 'Issue Error Banner Viewed',\n  'issues_tab.viewed': 'Viewed Issues Tab', // high volume but send to our secondary event store anyways\n  'issue_search.failed': 'Issue Search: Failed',\n  'issue.search_sidebar_clicked': 'Issue Search Sidebar Clicked',\n  'inbox_tab.issue_clicked': 'Clicked Issue from Inbox Tab',\n  'issues_stream.issue_clicked': 'Clicked Issue from Issues Stream',\n  'issues_stream.issue_assigned': 'Assigned Issue from Issues Stream',\n  'issue.shared_publicly': 'Issue Shared Publicly',\n  resolve_issue: 'Resolve Issue',\n  'tag.clicked': 'Tag: Clicked',\n};\n","import {PlatformKey} from 'sentry/data/platformCategories';\n\ntype SampleTransactionParam = {\n  platform?: PlatformKey;\n};\n\ntype PerformanceTourParams = {\n  duration: number;\n  step: number;\n};\n\nexport type PerformanceEventParameters = {\n  'performance_views.all_events.open_in_discover': {};\n  'performance_views.create_sample_transaction': SampleTransactionParam;\n  'performance_views.landingv2.transactions.sort': {\n    direction?: string;\n    field?: string;\n  };\n  'performance_views.landingv3.batch_queries': {\n    num_collected: number;\n    num_saved: number;\n    num_sent: number;\n  };\n  'performance_views.landingv3.display_change': {\n    change_to_display: string;\n    current_display: string;\n    default_display: string;\n    is_default: boolean;\n  };\n  'performance_views.landingv3.table_pagination': {\n    direction: string;\n  };\n  'performance_views.landingv3.widget.interaction': {\n    widget_type?: string;\n  };\n  'performance_views.landingv3.widget.switch': {\n    from_default?: boolean;\n    from_widget?: string;\n    to_widget?: string;\n  };\n  'performance_views.overview.cellaction': {action?: string};\n  'performance_views.overview.navigate.summary': {};\n  'performance_views.overview.search': {};\n  'performance_views.overview.view': {\n    show_onboarding: boolean;\n  };\n  'performance_views.span_summary.change_chart': {\n    change_to_display: string;\n  };\n  'performance_views.spans.change_op': {\n    operation_name?: string;\n  };\n  'performance_views.spans.change_sort': {\n    sort_column?: string;\n  };\n  'performance_views.tags.change_tag': {\n    from_tag: string;\n    is_other_tag: boolean;\n    to_tag: string;\n  };\n  'performance_views.tags.jump_to_release': {};\n  'performance_views.team_key_transaction.set': {\n    action: string;\n  };\n  'performance_views.tour.advance': PerformanceTourParams;\n  'performance_views.tour.close': PerformanceTourParams;\n  'performance_views.tour.start': {};\n  'performance_views.trace_view.view': {};\n  'performance_views.transaction_summary.change_chart_display': {\n    from_chart: string;\n    to_chart: string;\n  };\n  'performance_views.transaction_summary.status_breakdown_click': {\n    status: string;\n  };\n  'performance_views.trends.change_duration': {\n    value: string;\n    widget_type: string;\n  };\n  'performance_views.trends.widget_interaction': {\n    widget_type: string;\n  };\n  'performance_views.trends.widget_pagination': {\n    direction: string;\n    widget_type: string;\n  };\n  'performance_views.vital_detail.view': {};\n};\n\nexport type PerformanceEventKey = keyof PerformanceEventParameters;\n\nexport const performanceEventMap: Record<PerformanceEventKey, string | null> = {\n  'performance_views.create_sample_transaction': 'Growth: Performance Sample Transaction',\n  'performance_views.tour.start': 'Performance Views: Tour Start',\n  'performance_views.tour.advance': 'Performance Views: Tour Advance',\n  'performance_views.tour.close': 'Performance Views: Tour Close',\n  'performance_views.landingv2.transactions.sort':\n    'Performance Views: Landing Transactions Sorted',\n  'performance_views.overview.navigate.summary':\n    'Performance Views: Overview view summary',\n  'performance_views.overview.cellaction': 'Performance Views: Cell Action Clicked',\n  'performance_views.landingv3.widget.interaction':\n    'Performance Views: Landing Widget Interaction',\n  'performance_views.landingv3.widget.switch':\n    'Performance Views: Landing Widget Switched',\n  'performance_views.landingv3.batch_queries':\n    'Performance Views: Landing Query Batching',\n  'performance_views.landingv3.display_change': 'Performance Views: Switch Landing Tabs',\n  'performance_views.landingv3.table_pagination':\n    'Performance Views: Landing Page Transactions Table Page Changed',\n  'performance_views.span_summary.change_chart':\n    'Performance Views: Span Summary displayed chart changed',\n  'performance_views.spans.change_op': 'Performance Views: Change span operation name',\n  'performance_views.spans.change_sort': 'Performance Views: Change span sort column',\n  'performance_views.overview.view': 'Performance Views: Transaction overview view',\n  'performance_views.overview.search': 'Performance Views: Transaction overview search',\n  'performance_views.vital_detail.view': 'Performance Views: Vital Detail viewed',\n  'performance_views.trace_view.view': 'Performance Views: Trace View viewed',\n  'performance_views.transaction_summary.change_chart_display':\n    'Performance Views: Transaction Summary chart display changed',\n  'performance_views.transaction_summary.status_breakdown_click':\n    'Performance Views: Transaction Summary status breakdown option clicked',\n  'performance_views.all_events.open_in_discover':\n    'Performance Views: All Events page open in Discover button clicked',\n  'performance_views.tags.change_tag':\n    'Performance Views: Tags Page changed selected tag',\n  'performance_views.tags.jump_to_release':\n    'Performance Views: Tags Page link to release in table clicked',\n  'performance_views.team_key_transaction.set':\n    'Performance Views: Set Team Key Transaction',\n  'performance_views.trends.widget_interaction':\n    'Performance Views: Trends Widget Interaction',\n  'performance_views.trends.widget_pagination':\n    'Performance Views: Trends Widget Page Changed',\n  'performance_views.trends.change_duration':\n    'Performance Views: Trends Widget Duration Changed',\n};\n","import {SamplingInnerName} from 'sentry/types/sampling';\n\ntype Rule = {\n  conditions: SamplingInnerName[] | string[];\n  conditions_stringified: string;\n  project_id: string;\n  sampling_rate: number | null;\n};\n\nexport type SamplingEventParameters = {\n  'sampling.settings.condition.add': {\n    conditions: SamplingInnerName[] | string[];\n    project_id: string;\n  };\n  'sampling.settings.rule.create': Rule;\n  'sampling.settings.rule.delete': Rule;\n  'sampling.settings.rule.save': Rule;\n  'sampling.settings.rule.update': Rule & {\n    old_conditions: Rule['conditions'];\n    old_conditions_stringified: string;\n    old_sampling_rate: Rule['sampling_rate'];\n  };\n  'sampling.settings.view': {project_id: string};\n};\n\ntype SamplingAnalyticsKey = keyof SamplingEventParameters;\n\nexport const samplingEventMap: Record<SamplingAnalyticsKey, string> = {\n  'sampling.settings.view': 'View Sampling Settings',\n  'sampling.settings.condition.add': 'Add Sampling Condition',\n  'sampling.settings.rule.save': 'Save Sampling Rule', // fired for both create and update\n  'sampling.settings.rule.create': 'Create Sampling Rule',\n  'sampling.settings.rule.update': 'Update Sampling Rule',\n  'sampling.settings.rule.delete': 'Delete Sampling Rule',\n};\n","type SearchEventBase = {\n  query: string;\n  search_type: string;\n  search_source?: string;\n};\n\ntype OpenEvent = {};\ntype SelectEvent = {result_type: string; source_type: string; query?: string};\ntype QueryEvent = {query: string};\ntype ProjectSelectorEvent = {path: string};\n\nexport type SearchEventParameters = {\n  'command_palette.open': OpenEvent;\n  'command_palette.query': QueryEvent;\n  'command_palette.select': SelectEvent;\n  'organization_saved_search.selected': {\n    id: number;\n    search_type: string;\n  };\n  'projectselector.clear': ProjectSelectorEvent;\n  'projectselector.direct_selection': ProjectSelectorEvent;\n  'projectselector.multi_button_clicked': ProjectSelectorEvent & {\n    button_type: 'all' | 'my';\n  };\n  'projectselector.toggle': ProjectSelectorEvent & {\n    action: 'added' | 'removed';\n  };\n  'projectselector.update': ProjectSelectorEvent & {\n    count: number;\n    multi: boolean;\n  };\n  'search.operator_autocompleted': SearchEventBase & {search_operator: string};\n  'search.searched': SearchEventBase & {search_source?: string};\n  'settings_search.open': OpenEvent;\n  'settings_search.query': QueryEvent;\n  'settings_search.select': SelectEvent;\n  'sidebar_help.open': OpenEvent;\n  'sidebar_help.query': QueryEvent;\n  'sidebar_help.select': SelectEvent;\n};\n\nexport type SearchEventKey = keyof SearchEventParameters;\n\nexport const searchEventMap: Record<SearchEventKey, string | null> = {\n  'search.searched': 'Search: Performed search',\n  'search.operator_autocompleted': 'Search: Operator Autocompleted',\n  'organization_saved_search.selected':\n    'Organization Saved Search: Selected saved search',\n  'settings_search.open': 'settings_search Open',\n  'command_palette.open': 'command_palette Open',\n  'sidebar_help.open': 'sidebar_help Open',\n  'settings_search.select': 'settings_search Select',\n  'command_palette.select': 'command_palette Select',\n  'sidebar_help.select': 'sidebar_help Select',\n  'settings_search.query': 'settings_search Query',\n  'command_palette.query': 'command_palette Query',\n  'sidebar_help.query': 'sidebar_help Query',\n  'projectselector.direct_selection': 'Project Selector: Direct Selection',\n  'projectselector.update': 'Project Selector: Update',\n  'projectselector.clear': 'Project Selector: Clear',\n  'projectselector.toggle': 'Project Selector: Toggle',\n  'projectselector.multi_button_clicked': 'Project Selector: Multi Button Clicked',\n};\n","export type SettingsEventParameters = {\n  'notification_settings.index_page_viewed': {};\n  'notification_settings.tuning_page_viewed': {\n    notification_type: string;\n  };\n  'notification_settings.updated_tuning_setting': {\n    notification_type: string;\n    tuning_field_type: string;\n  };\n};\n\nexport type SettingsEventKey = keyof SettingsEventParameters;\n\nexport const settingsEventMap: Record<SettingsEventKey, string | null> = {\n  'notification_settings.index_page_viewed': 'Notification Settings: Index Page Viewed',\n  'notification_settings.tuning_page_viewed': 'Notification Settings: Tuning Page Viewed',\n  'notification_settings.updated_tuning_setting':\n    'Notification Settings: Updated Tuning Setting',\n};\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters &\n  SamplingEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n  ...samplingEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import type {ResolutionStatus} from 'sentry/types';\n\ntype RuleViewed = {\n  alert_type: 'issue' | 'metric';\n  project_id: string;\n};\n\ntype IssueDetailsWithAlert = {\n  group_id: number;\n  project_id: number;\n  /** The time that the alert was initially fired. */\n  alert_date?: string;\n  /** Id of the rule that triggered the alert */\n  alert_rule_id?: string;\n  /**  The type of alert notification - email/slack */\n  alert_type?: string;\n};\n\nexport type TeamInsightsEventParameters = {\n  'alert_builder.filter': {query: string; session_id?: string};\n  'alert_details.viewed': {alert_id: number};\n  'alert_rule_details.viewed': {alert: string; has_chartcuterie: string; rule_id: number};\n  'alert_rules.viewed': {sort: string};\n  'alert_stream.viewed': {};\n  'alert_wizard.option_selected': {alert_type: string};\n  'alert_wizard.option_viewed': {alert_type: string};\n  'edit_alert_rule.add_row': {\n    name: string;\n    project_id: string;\n    type: string;\n  };\n  'edit_alert_rule.viewed': RuleViewed;\n  'issue_alert_rule_details.edit_clicked': {rule_id: number};\n  'issue_alert_rule_details.viewed': {rule_id: number};\n  'issue_details.action_clicked': IssueDetailsWithAlert & {\n    action_type:\n      | 'deleted'\n      | 'mark_reviewed'\n      | 'bookmarked'\n      | 'subscribed'\n      | 'shared'\n      | 'discarded'\n      | 'open_in_discover'\n      | ResolutionStatus;\n  };\n  'issue_details.event_json_clicked': {group_id: number};\n  'issue_details.event_navigation_clicked': {button: string; project_id: number};\n  'issue_details.viewed': IssueDetailsWithAlert;\n  'new_alert_rule.viewed': RuleViewed & {\n    duplicate_rule: string;\n    session_id: string;\n    wizard_v3: string;\n  };\n  'team_insights.viewed': {};\n};\n\nexport type TeamInsightsEventKey = keyof TeamInsightsEventParameters;\n\nexport const workflowEventMap: Record<TeamInsightsEventKey, string | null> = {\n  'alert_builder.filter': 'Alert Builder: Filter',\n  'alert_details.viewed': 'Alert Details: Viewed',\n  'alert_rule_details.viewed': 'Alert Rule Details: Viewed',\n  'alert_rules.viewed': 'Alert Rules: Viewed',\n  'alert_stream.viewed': 'Alert Stream: Viewed',\n  'alert_wizard.option_selected': 'Alert Wizard: Option Selected',\n  'alert_wizard.option_viewed': 'Alert Wizard: Option Viewed',\n  'edit_alert_rule.add_row': 'Edit Alert Rule: Add Row',\n  'edit_alert_rule.viewed': 'Edit Alert Rule: Viewed',\n  'issue_alert_rule_details.edit_clicked': 'Issue Alert Rule Details: Edit Clicked',\n  'issue_alert_rule_details.viewed': 'Issue Alert Rule Details: Viewed',\n  'issue_details.action_clicked': 'Issue Details: Action Clicked',\n  'issue_details.event_json_clicked': 'Issue Details: Event JSON Clicked',\n  'issue_details.event_navigation_clicked': 'Issue Details: Event Navigation Clicked',\n  'issue_details.viewed': 'Issue Details: Viewed',\n  'new_alert_rule.viewed': 'New Alert Rule: Viewed',\n  'team_insights.viewed': 'Team Insights: Viewed',\n};\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'sentry/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","type Result = Record<string, {cursor: string; href: string; results: boolean | null}>;\n\nexport default function parseLinkHeader(header: string | null): Result {\n  if (header === null || header === '') {\n    return {};\n  }\n\n  const headerValues = header.split(',');\n  const links = {};\n\n  headerValues.forEach(val => {\n    const match =\n      /<([^>]+)>; rel=\"([^\"]+)\"(?:; results=\"([^\"]+)\")?(?:; cursor=\"([^\"]+)\")?/g.exec(\n        val\n      );\n    const hasResults = match![3] === 'true' ? true : match![3] === 'false' ? false : null;\n\n    links[match![2]] = {\n      href: match![1],\n      results: hasResults,\n      cursor: match![4],\n    };\n  });\n\n  return links;\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {useEffect, useMemo, useRef, useState} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {fetchUserTeams} from 'sentry/actionCreators/teams';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Team} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n  /**\n   * Indicates that Team results (from API) are paginated and there are more\n   * Teams that are not in the initial response.\n   */\n  hasMore: null | boolean;\n  /**\n   * Reflects whether or not the initial fetch for the requested teams was\n   * fulfilled\n   */\n  initiallyLoaded: boolean;\n  /**\n   * The last query we searched. Used to validate the cursor\n   */\n  lastSearch: null | string;\n  /**\n   * Pagination\n   */\n  nextCursor?: null | string;\n};\n\ntype Result = {\n  /**\n   * This is an action provided to consumers for them to request more teams\n   * to be loaded. Additional teams will be fetched and loaded into the store.\n   */\n  loadMore: (searchTerm?: string) => Promise<void>;\n  /**\n   * This is an action provided to consumers for them to update the current\n   * teams result set using a simple search query.\n   *\n   * Will always add new options into the store.\n   */\n  onSearch: (searchTerm: string) => Promise<void>;\n  /**\n   * The loaded teams list\n   */\n  teams: Team[];\n} & Pick<State, 'fetching' | 'hasMore' | 'fetchError' | 'initiallyLoaded'>;\n\ntype Options = {\n  /**\n   * When provided, fetches specified teams by id if necessary and only provides those teams.\n   */\n  ids?: string[];\n  /**\n   * Number of teams to return when not using `props.slugs`\n   */\n  limit?: number;\n  /**\n   * When true, fetches user's teams if necessary and only provides user's\n   * teams (isMember = true).\n   */\n  provideUserTeams?: boolean;\n  /**\n   * When provided, fetches specified teams by slug if necessary and only provides those teams.\n   */\n  slugs?: string[];\n};\n\ntype FetchTeamOptions = {\n  cursor?: State['nextCursor'];\n  ids?: string[];\n  lastSearch?: State['lastSearch'];\n  limit?: Options['limit'];\n  search?: State['lastSearch'];\n  slugs?: string[];\n};\n\n/**\n * Helper function to actually load teams\n */\nasync function fetchTeams(\n  api: Client,\n  orgId: string,\n  {slugs, ids, search, limit, lastSearch, cursor}: FetchTeamOptions = {}\n) {\n  const query: {\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {};\n\n  if (slugs !== undefined && slugs.length > 0) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (ids !== undefined && ids.length > 0) {\n    query.query = ids.map(id => `id:${id}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ?? ''} ${search}`.trim();\n  }\n\n  const isSameSearch = lastSearch === search || (!lastSearch && !search);\n\n  if (isSameSearch && cursor) {\n    query.cursor = cursor;\n  }\n\n  if (limit !== undefined) {\n    query.per_page = limit;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/teams/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore = paginationObject?.next?.results;\n    nextCursor = paginationObject?.next?.cursor;\n  }\n\n  return {results: data, hasMore, nextCursor};\n}\n\n// TODO: Paging for items which have already exist in the store is not\n// correctly implemented.\n\n/**\n * Provides teams from the TeamStore\n *\n * This hook also provides a way to select specific slugs to ensure they are\n * loaded, as well as search (type-ahead) for more slugs that may not be in the\n * TeamsStore.\n *\n * NOTE: It is NOT guaranteed that all teams for an organization will be\n * loaded, so you should use this hook with the intention of providing specific\n * slugs, or loading more through search.\n *\n */\nfunction useTeams({limit, slugs, ids, provideUserTeams}: Options = {}) {\n  const api = useApi();\n  const {organization} = useLegacyStore(OrganizationStore);\n  const store = useLegacyStore(TeamStore);\n\n  const orgId = organization?.slug;\n\n  const storeSlugs = new Set(store.teams.map(t => t.slug));\n  const slugsToLoad = slugs?.filter(slug => !storeSlugs.has(slug)) ?? [];\n  const storeIds = new Set(store.teams.map(t => t.id));\n  const idsToLoad = ids?.filter(id => !storeIds.has(id)) ?? [];\n  const shouldLoadSlugs = slugsToLoad.length > 0;\n  const shouldLoadIds = idsToLoad.length > 0;\n  const shouldLoadTeams = provideUserTeams && !store.loadedUserTeams;\n\n  // If we don't need to make a request either for slugs or user teams, set\n  // initiallyLoaded to true\n  const initiallyLoaded = !shouldLoadSlugs && !shouldLoadTeams && !shouldLoadIds;\n\n  const [state, setState] = useState<State>({\n    initiallyLoaded,\n    fetching: false,\n    hasMore: store.hasMore,\n    lastSearch: null,\n    nextCursor: store.cursor,\n    fetchError: null,\n  });\n\n  const slugOrIdRef = useRef<Set<string> | null>(null);\n\n  // Only initialize slugOrIdRef.current once and modify it when we receive new\n  // slugs or ids determined through set equality\n  if (slugs !== undefined || ids !== undefined) {\n    const slugsOrIds = (slugs || ids) ?? [];\n    if (slugOrIdRef.current === null) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n\n    if (\n      slugsOrIds.length !== slugOrIdRef.current.size ||\n      slugsOrIds.some(slugOrId => !slugOrIdRef.current?.has(slugOrId))\n    ) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n  }\n\n  async function loadUserTeams() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      await fetchUserTeams(api, {orgId});\n\n      setState({...state, fetching: false, initiallyLoaded: true});\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  async function loadTeamsBySlugOrId() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        slugs: slugsToLoad,\n        ids: idsToLoad,\n        limit,\n      });\n\n      // Unique by `id` to avoid duplicates due to renames and state store data\n      const fetchedTeams = uniqBy([...results, ...store.teams], ({id}) => id);\n      TeamActions.loadTeams(fetchedTeams);\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        initiallyLoaded: true,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  function handleSearch(search: string) {\n    if (search !== '') {\n      return handleFetchAdditionalTeams(search);\n    }\n\n    // Reset pagination state to match store if doing an empty search\n    if (state.hasMore !== store.hasMore || state.nextCursor !== store.cursor) {\n      setState({\n        ...state,\n        lastSearch: search,\n        hasMore: store.hasMore,\n        nextCursor: store.cursor,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  async function handleFetchAdditionalTeams(search?: string) {\n    const {lastSearch} = state;\n    // Use the store cursor if there is no search keyword provided\n    const cursor = search ? state.nextCursor : store.cursor;\n\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot fetch teams without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n\n    try {\n      api.clear();\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        search,\n        limit,\n        lastSearch,\n        cursor,\n      });\n\n      const fetchedTeams = uniqBy([...store.teams, ...results], ({slug}) => slug);\n\n      if (search) {\n        // Only update the store if we have more items\n        if (fetchedTeams.length > store.teams.length) {\n          TeamActions.loadTeams(fetchedTeams);\n        }\n      } else {\n        // If we fetched a page of teams without a search query, add cursor data to the store\n        TeamActions.loadTeams(fetchedTeams, hasMore, nextCursor);\n      }\n\n      setState({\n        ...state,\n        hasMore: hasMore && store.hasMore,\n        fetching: false,\n        lastSearch: search ?? null,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, fetchError: err});\n    }\n  }\n\n  useEffect(() => {\n    // Load specified team slugs\n    if (shouldLoadSlugs || shouldLoadIds) {\n      loadTeamsBySlugOrId();\n      return;\n    }\n\n    // Load user teams\n    if (shouldLoadTeams) {\n      loadUserTeams();\n    }\n  }, [slugOrIdRef.current, provideUserTeams]);\n\n  const isSuperuser = isActiveSuperuser();\n\n  const filteredTeams = useMemo(() => {\n    return slugs\n      ? store.teams.filter(t => slugs.includes(t.slug))\n      : ids\n      ? store.teams.filter(t => ids.includes(t.id))\n      : provideUserTeams && !isSuperuser\n      ? store.teams.filter(t => t.isMember)\n      : store.teams;\n  }, [store.teams, ids, slugs, provideUserTeams, isSuperuser]);\n\n  const result: Result = {\n    teams: filteredTeams,\n    fetching: state.fetching || store.loading,\n    initiallyLoaded: state.initiallyLoaded,\n    fetchError: state.fetchError,\n    hasMore: state.hasMore ?? store.hasMore,\n    onSearch: handleSearch,\n    loadMore: handleFetchAdditionalTeams,\n  };\n\n  return result;\n}\n\nexport default useTeams;\n","import {Component} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport LatestContextStore from 'sentry/stores/latestContextStore';\nimport {Organization, OrganizationSummary, Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport withOrganizations from 'sentry/utils/withOrganizations';\n\ntype InjectedLatestContextProps = {\n  organization?: Organization | null;\n  organizations?: OrganizationSummary[];\n  project?: Project | null;\n};\n\ntype HocProps = {\n  organizations: OrganizationSummary[];\n  organization?: Organization | null;\n};\n\ntype State = {\n  latestContext: Omit<InjectedLatestContextProps, 'organizations'>;\n};\n\nconst fallbackContext: State['latestContext'] = {\n  organization: null,\n  project: null,\n};\n\nfunction withLatestContext<P extends InjectedLatestContextProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithLatestContext extends Component<\n    Omit<P, keyof InjectedLatestContextProps> & HocProps,\n    State\n  > {\n    static displayName = `withLatestContext(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      latestContext: LatestContextStore.get(),\n    };\n\n    componentWillUmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = LatestContextStore.listen(\n      (latestContext: State['latestContext']) => this.setState({latestContext}),\n      undefined\n    );\n\n    render() {\n      const {organizations} = this.props;\n      const {latestContext} = this.state;\n      const {organization, project} = latestContext || fallbackContext;\n\n      // Even though org details exists in LatestContextStore,\n      // fetch organization from OrganizationsStore so that we can\n      // expect consistent data structure because OrganizationsStore has a list\n      // of orgs but not full org details\n      const latestOrganization =\n        organization ||\n        (organizations && organizations.length\n          ? organizations.find(\n              ({slug}) => slug === ConfigStore.get('lastOrganization')\n            ) || organizations[0]\n          : null);\n\n      // TODO(billy): Below is going to be wrong if component is passed project, it will override\n      // project from `latestContext`\n      return (\n        <WrappedComponent\n          project={project as Project}\n          {...(this.props as P)}\n          organization={(this.props.organization || latestOrganization) as Organization}\n        />\n      );\n    }\n  }\n  return withOrganizations(WithLatestContext);\n}\n\nexport default withLatestContext;\n","import {Component} from 'react';\n\nimport OrganizationsStore from 'sentry/stores/organizationsStore';\nimport {OrganizationSummary} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedOrganizationsProps = {\n  organizations: OrganizationSummary[];\n  organizationsLoading?: boolean;\n};\n\ntype State = {\n  organizations: OrganizationSummary[];\n};\n\nfunction withOrganizations<P extends InjectedOrganizationsProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithOrganizations extends Component<\n    Omit<P, keyof InjectedOrganizationsProps> & Partial<InjectedOrganizationsProps>,\n    State\n  > {\n    static displayName = `withOrganizations(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {organizations: OrganizationsStore.getAll()};\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = OrganizationsStore.listen(\n      (organizations: OrganizationSummary[]) => this.setState({organizations}),\n      undefined\n    );\n\n    render() {\n      const {organizationsLoading, organizations, ...props} = this.props as P;\n      return (\n        <WrappedComponent\n          {...({\n            organizationsLoading: organizationsLoading ?? !OrganizationsStore.loaded,\n            organizations: organizations ?? this.state.organizations,\n            ...props,\n          } as P)}\n        />\n      );\n    }\n  }\n\n  return WithOrganizations;\n}\n\nexport default withOrganizations;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","'use strict';\n\nvar React = require('react'),\n    PropTypes = require('prop-types'),\n    withSideEffect = require('react-side-effect');\n\nfunction reducePropsToState(propsList) {\n  var innermostProps = propsList[propsList.length - 1];\n  if (innermostProps) {\n    return innermostProps.title;\n  }\n}\n\nfunction handleStateChangeOnClient(title) {\n  var nextTitle = title || '';\n  if (nextTitle !== document.title) {\n    document.title = nextTitle;\n  }\n}\n\nfunction DocumentTitle() {}\nDocumentTitle.prototype = Object.create(React.Component.prototype);\n\nDocumentTitle.displayName = 'DocumentTitle';\nDocumentTitle.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nDocumentTitle.prototype.render = function() {\n  if (this.props.children) {\n    return React.Children.only(this.props.children);\n  } else {\n    return null;\n  }\n};\n\nmodule.exports = withSideEffect(\n  reducePropsToState,\n  handleStateChangeOnClient\n)(DocumentTitle);\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(SideEffect, _Component);\n\n      function SideEffect() {\n        return _Component.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      // Expose canUseDOM so tests can monkeypatch it\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      _proto.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    _defineProperty(SideEffect, \"canUseDOM\", canUseDOM);\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["update","api","params","ProjectActions","projectId","data","endpoint","orgId","requestPromise","method","then","err","loadStats","request","query","success","error","_projectStatsToFetch","Set","_debouncedLoadStats","debounce","projectSet","storedProjects","ProjectsStatsStore","existingProjectStats","Object","values","map","id","projects","Array","from","filter","project","includes","length","clear","queries","chunk","chunkedProjects","additionalQuery","statsPeriod","join","_queryForStats","Promise","all","results","reduce","acc","result","concat","catch","addErrorMessage","t","loadStatsForProject","add","setActiveProject","removeProject","slug","addSuccessMessage","tct","transferProject","email","message","status","responseJSON","detail","addTeamToProject","orgSlug","projectSlug","team","addLoadingMessage","removeTeamFromProject","teamSlug","changeProjectSlug","prev","next","createProject","name","platform","options","default_rules","defaultRules","loadDocs","fetchProjectsCount","async","fetchAnyReleaseExistence","per_page","doCallback","args","callIfFunction","fetchUserTeams","teams","TeamActions","updateTeamSuccess","teamId","joinTeam","memberId","uniqueId","leaveTeam","createTeam","organization","removeTeam","createActions","hookName","defaultComponent","defaultComponentPromise","HookOrDefaultComponent","Component","hooks","HookStore","this","setState","undefined","componentWillUnmount","unlistener","DefaultComponent","lazy","props","Suspense","fallback","render","hookExists","state","componentFromHook","HookComponent","renderEmailValue","valueProps","children","emailLabel","disabled","title","EmailLabel","sent","SendingIndicator","size","color","space","LoadingIndicator","defaultProps","hideMessage","mapToOptions","value","label","InviteRowControl","inputValue","event","onChangeEmails","emails","key","preventDefault","className","role","roleOptions","roleDisabledUnallowed","inviteStatus","onRemove","onChangeRole","onChangeTeams","disableRemove","theme","placeholder","components","MultiValue","ValueComponent","DropdownIndicator","onBlur","e","target","styles","getStyles","onInputChange","handleInputChange","onKeyDown","handleKeyDown","onChange","multiple","creatable","clearable","menuIsOpen","roles","disableUnallowed","borderless","icon","onClick","multiValue","provided","red300","border","backgroundColor","red100","multiValueLabel","pointerEvents","multiValueRemove","borderLeft","withTheme","InviteModalHook","HookOrDefault","onSendInvites","sendInvites","canSend","InviteMembersModal","AsyncComponent","pendingInvites","inviteTemplate","complete","sendingInvites","trackAdvancedAnalyticsEvent","modal_session","sessionId","invite","willInvite","errorResponse","isArray","invites","sendInvite","componentDidMount","source","can_invite","getEndpoints","getDefaultState","super","initialData","initial","setEmails","index","setTeams","setRole","removeInviteRow","splice","row","hasDuplicateEmails","inv","isValidInvites","statusMessage","StatusMessage","mini","relative","statuses","sentCount","i","errorCount","tctComponents","tn","failed","inviteRequests","access","inviteButtonLabel","numberInvites","inviteText","requestText","Footer","closeModal","member","disableInputs","headerInfo","Fragment","Heading","position","Subtext","InviteeHeadings","StyledInviteRow","MEMBER_ROLES","opts","v","AddButton","priority","addInviteRow","isCircled","FooterContent","reset","p","headerFontSize","subText","inviteRowGrid","css","fontSizeSmall","Button","fontSizeMedium","gray400","green300","modalCss","withLatestContext","RoleSelectControl","r","allowed","details","Details","desc","showDividers","storeConfig","unsubscribeListeners","lastProject","environment","get","init","push","listenTo","onSetActiveProject","onUpdateProject","OrganizationsActions","onSetActiveOrganization","onUpdateOrganization","OrganizationActions","org","trigger","createStore","makeSafeRefluxStore","onUpdate","onFetchOrgError","loading","errorType","dirty","updatedOrg","replace","ORGANIZATION_FETCH_ERROR_TYPES","getState","listenables","loaded","getInitialState","onChangeSlug","remove","onRemoveSuccess","find","item","getAll","match","forEach","existing","idx","load","items","itemsBySlug","onStatsLoadSuccess","onUpdateError","updatingItems","Map","getBySlug","set","newProject","onUpdateSuccess","delete","_err","coreUIEventMap","dashboardsEventMap","discoverEventMap","growthEventMap","issueEventMap","resolve_issue","performanceEventMap","samplingEventMap","searchEventMap","settingsEventMap","allEventMap","workflowEventMap","makeAnalyticsFunction","isActiveSuperuser","isSuperuser","ConfigStore","Cookies","parseLinkHeader","header","headerValues","split","links","val","exec","hasResults","href","cursor","persistInFlight","providedApi","localApi","useRef","current","Client","clearOnUnmount","useCallback","useEffect","fetchTeams","slugs","ids","search","limit","lastSearch","trim","isSameSearch","hasMore","nextCursor","resp","includeAllArgs","pageLinks","getResponseHeader","paginationObject","provideUserTeams","useApi","useLegacyStore","OrganizationStore","store","TeamStore","storeSlugs","slugsToLoad","has","storeIds","idsToLoad","shouldLoadSlugs","shouldLoadIds","shouldLoadTeams","loadedUserTeams","initiallyLoaded","useState","fetching","fetchError","slugOrIdRef","slugsOrIds","some","slugOrId","loadUserTeams","console","loadTeamsBySlugOrId","fetchedTeams","uniqBy","handleSearch","handleFetchAdditionalTeams","resolve","filteredTeams","useMemo","isMember","onSearch","loadMore","fallbackContext","WrappedComponent","WithLatestContext","latestContext","LatestContextStore","componentWillUmount","unsubscribe","organizations","latestOrganization","getDisplayName","withOrganizations","WithOrganizations","OrganizationsStore","organizationsLoading","baseIndexOf","module","exports","array","comparator","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","isCommon","seen","outer","computed","seenIndex","noop","eq","isArrayLike","isIndex","isObject","object","type","baseSlice","isIterateeCall","toInteger","nativeCeil","Math","ceil","nativeMax","max","guard","resIndex","baseIteratee","nativeMin","min","predicate","baseUniq","React","PropTypes","withSideEffect","DocumentTitle","prototype","create","displayName","propTypes","string","isRequired","Children","only","propsList","innermostProps","nextTitle","document","_interopDefault","ex","React__default","shallowEqual","_defineProperty","obj","defineProperty","enumerable","configurable","writable","canUseDOM","window","createElement","reducePropsToState","handleStateChangeOnClient","mapStateOnServer","Error","mountedInstances","emitChange","instance","SideEffect","_Component","subClass","superClass","apply","arguments","constructor","__proto__","peek","rewind","recordedState","_proto","shouldComponentUpdate","nextProps","componentWillMount","componentDidUpdate","indexOf","objA","objB","compare","compareContext","ret","call","keysA","keys","keysB","bHasOwnProperty","hasOwnProperty","bind","valueA","valueB"],"sourceRoot":""}