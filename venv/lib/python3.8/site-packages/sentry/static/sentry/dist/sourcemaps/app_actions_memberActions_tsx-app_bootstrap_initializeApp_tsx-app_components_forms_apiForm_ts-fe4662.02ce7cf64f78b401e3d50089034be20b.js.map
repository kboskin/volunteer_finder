{"version":3,"file":"chunks/app_actions_memberActions_tsx-app_bootstrap_initializeApp_tsx-app_components_forms_apiForm_ts-fe4662.xxxxxxxxxxxxxxxxxxxx.js","mappings":"oXAKOA,eAAeC,EACpBC,EACAC,GAEA,MAAMC,EAAM,IAAIC,EAAAA,GAEhB,UACQD,EAAIE,eACP,6BAA4BJ,EAASK,YAAYL,EAASM,MAC3D,CACEC,OAAQ,WAGZ,MAEA,YADAC,EAAAA,EAAAA,IAAgB,iCAIlBC,EAAAA,EAAAA,IAAmB,gBAAeT,EAASU,SAASC,QACpDV,IAGK,SAASW,EAAWC,GACJC,EAAAA,EAAAA,IAAgB,QAKtBC,QAAQC,QAAUH,EAAKE,QAAQC,OACrB,WAAvBH,EAAKE,QAAQC,OAEbF,EAAAA,EAAAA,IAAgB,QAASD,EAAKE,QAAQC,OAIxCF,EAAAA,EAAAA,IAAgB,OAAQD,GAGnB,SAASI,EAAOf,GACrB,OAAOA,EAAIE,eAAe,SAAU,CAACG,OAAQ,WAGxC,SAASW,EAAoBhB,EAAaiB,EAAgBC,GAC/D,OAAOlB,EAAIE,eAAgB,UAASe,oBAAyBC,KAAW,CACtEb,OAAQ,a,wNCzBL,SAASc,EACdnB,EACAoB,EACAC,GAEA,MAAMC,EAA+BtB,EAAIE,eACtC,kBAAiBkB,oBAAwBC,KAC1C,CACEhB,OAAQ,QAOZ,OAHAiB,EAAQC,OAAM,MACZjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,kCAEbF,EAGF,SAASG,EACdzB,EACAoB,EACAM,GAEA,MAAMJ,EAA+BtB,EAAIE,eACtC,kBAAiBkB,oBAClB,CACEf,OAAQ,OACRsB,KAAMD,IAOV,OAHAJ,EAAQC,OAAM,MACZjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,yCAEbF,EAGF,SAASM,EACd5B,EACAoB,EACAM,GAEA,MAAMJ,EAA+BtB,EAAIE,eACtC,kBAAiBkB,oBAAwBM,EAAMtB,MAChD,CACEC,OAAQ,MACRsB,KAAMD,IAOV,OAHAJ,EAAQC,OAAM,MACZjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,yCAEbF,EAGF,SAASO,EACdT,EACAC,GAWA,OARY,IAAIpB,EAAAA,IACIC,eACjB,kBAAiBkB,oBAAwBC,WAC1C,CACEhB,OAAQ,SAOP,SAASyB,EACd9B,EACAoB,EACAC,GAEA,MAAMC,EAAyBtB,EAAIE,eAChC,kBAAiBkB,oBAAwBC,KAC1C,CAAChB,OAAQ,WAMX,OAHAiB,EAAQC,OAAM,MACZjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,wCAEbF,I,mpBC5EF,SAASS,EAAgBC,GAC9BC,EAAAA,EAAAA,OAAwBD,GAInB,SAASE,IACdD,EAAAA,EAAAA,QAIK,SAASE,EACdC,EACAC,GAEM,IADNxB,EACM,uDADa,GAEnB,MAAOyB,SAAUC,EAAX,OAA4BC,KAAWC,GAAQ5B,OAK3B,KAAjBuB,MAAAA,OAAP,EAAOA,EAAKM,eAES,KAAdN,MAAAA,OAAP,EAAOA,EAAKO,YAEU,KAAfP,MAAAA,OAAP,EAAOA,EAAKQ,QAEZC,EAAAA,GAAwB,IAAIC,MAAM,0CAIpC,MAAMR,OACuB,IAApBC,EAAkCQ,EAAAA,GAAyBR,EAE9DS,EAASR,EAAS,SAAW,UAInCP,EAAAA,EAAiBe,GAAQZ,EAAKC,EAAM,IAAII,EAAMH,SAAAA,IAGhD,SAASW,EAAmBZ,GAC1B,MAAO,CAACD,EAAsBvB,IAAsBsB,EAAWC,EAAKC,EAAMxB,GAGrE,SAASqC,IAGd,IAFAd,EAEA,wDAFuBZ,EAAAA,EAAAA,GAAE,qBACzBX,EACA,uCACA,OAAOoC,EAAmB,UAAnBA,CAA8Bb,EAAKvB,GAGrC,SAASP,EAAgB8B,EAAsBvB,GACpD,MAAmB,iBAARuB,IAAoBe,EAAAA,EAAAA,gBAAef,GACrCa,EAAmB,QAAnBA,CAA4Bb,EAAKvB,GAMnCoC,EAAmB,QAAnBA,EACLzB,EAAAA,EAAAA,GACE,qHAEFX,GAIG,SAASN,EAAkB6B,EAAsBvB,GACtD,OAAOoC,EAAmB,UAAnBA,CAA8Bb,EAAKvB,GAG5C,MAAMuC,EAAsC,IAAIC,IAAI,CAClD,CAAC,GAAI,WACL,CAAC,KAAM,UACP,MAACC,EAAW,WAEZ,EAAC,EAAa,WACd,EAAC,EAAc,cAuCV,SAASC,EACdC,EACAC,EACAC,GAEA,IAAKD,EACH,OAGF,MAAME,EAAQF,EAAMG,cAAcF,EAAW,SAE7C,IAAKC,EACH,OAGF,MAAME,EAAiBC,GAjDA,EAACA,EAAkBL,EAAkBC,KAC5D,MAAMK,EAAaN,EAAMO,gBAAgBC,IAAIP,GAE7C,GAAIK,GAAuD,mBAAlCA,EAAWG,mBAAmC,CACrE,MAAMC,EAAcV,EAAMU,YAI1B,OAAOJ,EAAWG,mBAAmBJ,EAAK,IAAIC,EAAYI,YAAAA,IAG5D,OAAIf,EAAcgB,IAAIN,GACbV,EAAca,IAAIH,GAGL,iBAARA,EAAmBA,EAAMO,OAAOP,IAkCFQ,CAAiBR,EAAKL,EAAOC,GAGnEa,GAA0E,IAAzDd,EAAMG,cAAcF,EAAW,sBAEtDnD,GACEiE,EAAAA,EAAAA,IACED,EACI,oDACA,sBACJ,CACEE,MAAM,QAACC,EAAD,IACNhB,WAAW,QAACiB,EAAD,UAAYhB,IACvBiB,UAAU,QAACC,EAAD,UAAYhB,EAAcL,EAAOsB,OAC3CC,UAAU,QAACF,EAAD,UAAYhB,EAAcL,EAAOwB,SAG/C,CACEC,SAAU,CACRxB,MAAAA,EACArD,GAAIsD,EACJwB,KAAM,KACJ,IAAKzB,IAAUC,EACb,OAGF,MAAMkB,EAAWnB,EAAM0B,SAASzB,GAC1B0B,EAAU3B,EAAMyB,OAChBH,EAAWtB,EAAM0B,SAASzB,GAEhC,IAAK0B,EACH,OAEF,IAAKzB,EACH,OAIF,MAAM0B,EAAa5B,EAAM6B,UAAU5B,EAAWqB,GAEzCM,EAiBLA,EAAWE,MAAK,KACdpD,GACEqC,EAAAA,EAAAA,IACED,EACI,qDACA,uBACJ,CACEE,MAAM,QAACC,EAAD,IACNhB,WAAW,QAACiB,EAAD,UAAYhB,IACvBiB,UAAU,QAACC,EAAD,UAAYhB,EAAce,KACpCG,UAAU,QAACF,EAAD,UAAYhB,EAAckB,OAGxC,OACA,CACEzC,SAAUS,EAAAA,QA/BdzC,GACEkE,EAAAA,EAAAA,IACED,EACI,8DACA,gCACJ,CACEE,MAAM,QAACC,EAAD,IACNhB,WAAW,QAACiB,EAAD,UAAYhB,IACvBiB,UAAU,QAACC,EAAD,UAAYhB,EAAce,KACpCG,UAAU,QAACF,EAAD,UAAYhB,EAAckB,YAgCtD,MAAMF,GAAY,OAAO,OAAP,sBAAH,+BAEDW,EAAAA,EAAAA,GAAM,IAFL,KAITb,GAAY,OAAO,OAAP,sBAAH,8BAEDa,EAAAA,EAAAA,GAAM,IAFL,KAITd,GAAmB,OAAO,MAAP,sBAAH,2D,u7BCnOf,SAASe,EACdC,EACA7E,GAEA8E,EAAAA,EAAAA,UAAqBD,EAAU7E,MAAAA,EAAAA,EAAW,IAMrC,SAAS+E,IACdD,EAAAA,EAAAA,aAuBK/F,eAAeiG,IAAwD,IAA/C,QAACC,KAAYC,GAAkC,uDAAJ,GACxE,MAAMC,QAAY,2UACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUJ,KAAU,CAACD,QAAAA,IAG7ClG,eAAewG,IAGiB,IAHK,QAC1CN,KACGC,GACkC,uDAAJ,GACjC,MAAMC,QAAY,0YACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUJ,KAAU,CAACD,QAAAA,IAY7ClG,eAAeyG,EAAcxF,GAClC,MAAMmF,QAAY,oGACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACyF,SAAAA,IAehD1G,eAAe2G,EAAoB1F,GACxC,MAAMmF,QAAY,gHACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,MAsBlCjB,eAAe4G,EAAwB3F,GAC5C,MAAMmF,QAAY,ocACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACyF,SAAAA,IAGhD1G,eAAe6G,EAAuB5F,GAC3C,MAAMmF,QAAY,uWACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAe+G,IAA+C,IAA5B9F,EAA4B,uDAAJ,GAC/D,MAAMmF,QAAY,moCACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACyF,SAAAA,IAOhD1G,eAAegH,EAAoB/F,GACxC,MAAMmF,QAAY,wOACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,MASlCjB,eAAeiH,EAA2BhG,GAC/C,MAAMmF,QAAY,8HACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,MAGlCjB,eAAekH,EAAkBC,GACtC,MAAMf,QAAY,oHACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,EAAMa,KAAMD,KAAoB,IAQxDnH,eAAeqH,EAAoBpG,GACxC,MAAMmF,QAAY,4sCACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACyF,SAAAA,IAqBhD1G,eAAesH,EAAf,GAGyB,IAHe,QAC7CpB,KACGqB,GAC2B,EAC9B,MAAMnB,QAAY,gJAEXC,QAASC,EAAV,SAAiBI,GAAYN,EACnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUgB,KAAiB,CACtDb,SAAAA,EACAR,QAAAA,IAIGlG,eAAewH,IAGa,IAHU,QAC3CtB,KACGC,GAC8B,uDAAJ,GAC7B,MAAMC,QAAY,yRACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUJ,KAAU,CAACO,SAAAA,EAAUR,QAAAA,IAGvDlG,eAAeyH,EAA4BxG,GAChD,MAAMmF,QAAY,u8EACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAe0H,EACpBzG,GAEA,MAAMmF,QAAY,sJACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAe2H,EAAwB1G,GAC5C,MAAMmF,QAAY,w5EACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAe4H,EAAf,GAGiD,IAHV,QAC5C1B,KACGjF,GACmD,EACtD,MAAMmF,QAAY,wHAEXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACiF,QAAAA,IAGhDlG,eAAe6H,IAA4C,IAA5B5G,EAA4B,uDAAJ,GAC5D,MAAMmF,QAAY,sGACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAACyF,SAAAA,IAGhD1G,eAAe8H,EACpB7G,GAEA,MAAMmF,QAAY,wuBACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAe+H,EACpB9G,GAEA,MAAMmF,QAAY,29EACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAAC6F,SAAU,SAAUJ,SAAAA,IAGpE1G,eAAegI,EAAf,GAG+C,IAHV,QAC1C9B,KACGjF,GACiD,EACpD,MAAMmF,QAAY,yhDACXC,QAASC,EAAV,SAAiBI,GAAYN,EAEnCP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,KAAa,CAClD6F,SAAU,SACVJ,SAAAA,EACAR,QAAAA,IAIGlG,eAAeiI,EACpBhH,GAEA,MAAMmF,QAAY,oIACXC,QAASC,GAASF,EAEzBP,GAAUU,IAAQ,QAACD,EAAD,IAAWC,KAAUtF,Q,6OCjTlC,SAASiH,EACd9H,EACA+H,EACAC,GASY,OAARhI,GACFA,EAAIE,eAAgB,kBAAiB6H,EAAaf,yBAA0B,CAC1E3G,OAAQ,OACRsB,KAAMqG,IAIV,MAAMC,EAAkBF,EAAaG,gBAAgBC,MACnDC,GAAQA,EAAKA,OAASJ,EAAYI,OAG9BzH,EAAOC,EAAAA,EAAAA,IAAgB,QACvBsH,EAAkBD,EACpBF,EAAaG,gBAAgBG,KAAID,GAC/BA,EAAKA,OAASJ,EAAYI,KAAO,IAAIA,KAASJ,GAAeI,IAE/D,IAAIL,EAAaG,gBAAiB,IAAIF,EAAarH,KAAAA,IAEvD2H,EAAAA,EAAAA,OAA2B,CAACJ,gBAAAA,M,8jBCzCvBtI,eAAe2I,EACpB9H,EACAuG,EACAwB,EACAC,GAEA,IACE,MAAM9G,EAAQ+G,OAAeC,iBAC7B,KACGF,GACA9G,GACAA,EAAKiH,SACNjH,EAAKiH,QAAQC,gBAAkB7B,EAAK6B,eACnClH,EAAKlB,IACLkB,EAAKlB,GAAM8E,MAEZ,aAAaiD,IAEf,MAAMM,QAAenH,EAAKlB,GAAMc,MAAMiH,GACtC,OAAKM,QAGQA,QAFEN,IAGf,MAAOO,IAGT,aAAaP,I,2CCmBf5I,eAAeoJ,EACbhC,EACAyB,GAQA,MAAMQ,EAAkB,IAAIhJ,EAAAA,GAEtBiJ,EAAkBX,EACtB,WACAvB,GACA,IAGEiC,EAAgB/I,eAAgB,kBAAiB8G,cAAkB,CACjEmC,gBAAgB,EAChBzH,MAAO,CACL0H,aAAc,EACdC,SAAU,oBAGhBZ,GAGIa,EAAef,EACnB,QACAvB,GAGA,IACEiC,EAAgB/I,eAAgB,kBAAiB8G,WAAe,CAC9DmC,gBAAgB,KAEpBV,GAGF,IACE,aAAac,QAAQC,IAAI,CAACN,EAAiBI,IAC3C,MAAOG,GAMP,GAAmB,MAAfA,EAAIC,OACN,MAAMD,EAIV,MAAO,CACL,CAAC,QAAInG,OAAWA,GAChB,CAAC,QAAIA,OAAWA,IAYb,SAASqG,EACd3J,EACAgH,EACA4C,EACAnB,GAyDA,OAvDKmB,IACHtB,EAAAA,EAAAA,QACAuB,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,QACAC,EAAAA,EAAAA,SAmDKR,QAAQC,IAAI,CAhDM5J,WACvB,UA7GJA,eACEI,EACAgH,EACAyB,GAEA,MAAOuB,SAAazB,EAClB,eACAvB,GACA,IAGEhH,EAAIE,eAAgB,kBAAiB8G,KAAS,CAC5CmC,gBAAgB,EAChBzH,MAAO,CAACuI,SAAU,MAEtBxB,GAGF,IAAKuB,EACH,MAAM,IAAIlH,MAAM,oCAMlB,OAHAwF,EAAAA,EAAAA,OAA2B0B,EAAK,CAACE,SAAS,KAC1CC,EAAAA,EAAAA,IAAsBH,GAEfA,EAqFGI,CAASpK,EAAKgH,EAAMyB,GAC1B,MAAOgB,GACP,IAAKA,EACH,OAKF,GAFAnB,EAAAA,EAAAA,cAAkCmB,GAEf,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAAgB,eAC5C,MAAMW,EACgC,iBAApC,UAAOZ,EAAIa,oBAAX,aAAO,EAAkBC,QAAzB,UACId,EAAIa,oBADR,aACI,EAAkBC,OAC2B,iBAA7C,UAAOd,EAAIa,oBAAX,iBAAO,EAAkBC,cAAzB,aAAO,EAA0B7H,SAAjC,UACA+G,EAAIa,oBADJ,aACA,EAAkBC,OAAO7H,QACzB,KAMN,YAJI2H,IACF/J,EAAAA,EAAAA,IAAgB+J,IAMpBxH,EAAAA,GAAwB4G,KAuBRe,GAnBS5K,WAC3B,OAAQ6K,IAAYC,EAAD,CAAUC,UAAe3B,EAC1ChC,EACAyB,GAGFoB,EAAAA,EAAAA,aAA4BY,GAE5B,MAAMG,EAAgBD,MAAAA,OAAH,EAAGA,EAAME,kBAAkB,QAC9C,GAAID,EAAe,WACjB,MAAME,GAAmBC,EAAAA,EAAAA,GAAgBH,GACnCI,EAAO,UAAGF,MAAAA,GAAH,UAAGA,EAAkBG,YAArB,aAAG,EAAwBC,eAA3B,SACPC,EAAM,UAAGL,EAAiBG,YAApB,aAAG,EAAuBE,OACtCrB,EAAAA,EAAAA,UAAsBY,EAAOM,EAASG,QAEtCrB,EAAAA,EAAAA,UAAsBY,IAIcU,O,8fC/InC,SAASC,EAAT,GAGiC,IAHQ,MAC9CjK,EAD8C,UAE9CkK,GACsC,EAEtC,MAAMC,EAAUC,EAAAA,EAAAA,SAA4BC,QAC1CzB,GAAyB,WAAlBA,EAAIN,OAAOtJ,IAAmB4J,EAAIhD,OAAS5F,IAEpD,IAAKmK,EAAQG,OAEX,YADAC,EAAAA,eAAAA,KAAoB,uBAKtB,MAAMC,EAAoBL,EAAQ,GAClCI,EAAAA,eAAAA,KAAqB,IAAGC,EAAkB5E,SAGtCsE,GACFE,EAAAA,EAAAA,OAA0BpK,GA2CvB,SAASyK,KACdC,EAAAA,EAAAA,MAGK,SAASC,EACd/L,EACAgM,IA5BK,SAAgBhM,EAAhB,GAAkF,IAArD,eAACiM,EAAD,aAAiBC,EAAjB,MAA+B9K,GAAsB,EACvF,MAAM+K,EAAY,kBAAiB/K,KACnC,OAAOpB,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,WAETkF,MAAK,KACJ6G,EAAAA,EAAAA,cAAmChL,GAE/B6K,IACF1L,EAAAA,EAAAA,IAAkB0L,MAGrB1K,OAAM,KACL6K,EAAAA,EAAAA,cAEIF,IACF5L,EAAAA,EAAAA,IAAgB4L,OAatBG,CAAOrM,EAAKgM,GAAQzG,MAAK,IAAM8F,EAAgCW,KAM1D,SAAS7B,EAAsBH,GACpCoC,EAAAA,EAAAA,UAA+BpC,GAG1B,SAASsC,EACdC,EACAtB,GAEAmB,EAAAA,EAAAA,WAAgCG,EAAMtB,GAQjC,SAASuB,EAAmBxC,GACjCoC,EAAAA,EAAAA,OAA4BpC,GAC5B1B,EAAAA,EAAAA,OAA2B0B,GAQtBpK,eAAe6M,EACpBC,EADK,GAGL,IADA,OAACC,EAAD,gBAASC,GACT,EACA,MAAM5M,EAAM,IAAIC,EAAAA,GACV0B,QAAa3B,EAAIE,eAAgB,mCAAkCwM,KAEzE,IAAK/K,EAAK+J,OACR,OAAO,KAGT,MAAM1B,EAAMrI,EAAK,GAYjB,OAVIgL,GAEFnB,EAAAA,EAAAA,IAAuBxB,GAGrB4C,SAEIjD,EAAyBK,EAAIhD,KAAM,CAAC6F,WAAW,EAAMC,cAAc,IAGpE9C,EAmBFpK,eAAe+J,EACpBvI,EADK,GAGL,IADA,UAACyL,EAAD,aAAYC,EAAZ,SAA0BC,GAC1B,EACA,MAAM/M,EAAM,IAAIC,EAAAA,GACV0B,QAAa3B,EAAIE,eAAgB,kBAAiBkB,MAcxD,OAZIyL,GACF1C,EAAsBxI,GAGpBoL,GACFC,EAAAA,EAAAA,gBAA0BrL,EAAK+I,OAAO,EAAO,MAG3CoC,GACFG,EAAAA,EAAAA,gBAA8BtL,EAAK8I,UAAY,IAG1C9I,I,mMC7LT,MAAMuL,EAAqB,oBAIpB,SAASC,IACdC,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,IAAYH,EALS,KAQhB,SAASI,IACdF,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,IAAYH,EATU,KAYjB,SAASK,IAEdH,EAAAA,EAAAA,iBAAiC,CAC/BI,UAhBmB,MAgBRH,EAAAA,EAAAA,IAAYH,O,ojBCEpB,SAASO,EAAOzN,EAAagM,GAClCnC,EAAAA,EAAAA,OAAsBmC,EAAO0B,UAAW1B,EAAOrK,MAE/C,MAAMwK,EAAY,aAAYH,EAAO5K,SAAS4K,EAAO0B,aACrD,OAAO1N,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,MACRsB,KAAMqK,EAAOrK,OAEd4D,MACC5D,IACEkI,EAAAA,EAAAA,cAA6BlI,GACtBA,KAET8H,IAEE,MADAI,EAAAA,EAAAA,YAA2BJ,EAAKuC,EAAO0B,WACjCjE,KAOP,SAASkE,EAAU3N,EAAagM,GACrCnC,EAAAA,EAAAA,UAAyBmC,EAAO5K,MAAO4K,EAAOrK,MAE9C,MAAMwK,EAAY,kBAAiBH,EAAO5K,eAC1CpB,EAAI4N,QAAQzB,EAAU,CACpBzK,MAAOsK,EAAOtK,MACdmM,QAASlM,IACPkI,EAAAA,EAAAA,iBAAgClI,IAElCmM,MAAOnM,IACLkI,EAAAA,EAAAA,eAA8BlI,MAOpC,MAAMoM,EAAoC,IAAIC,IA0BjCC,EAAsBC,GAAAA,EACjC,CAAClO,EAAamO,EAAyBnC,KACrC,MAAMoC,EAA2CC,EAAAA,EAAAA,SAC3CC,EAAuBC,OAAOC,OAAOJ,GAAgB/F,KAAI,QAAC,GAACjI,GAAF,SAAUA,KACnEqK,EAAWgE,MAAMC,KAAKP,GAAY1C,QACtCkD,IAAYL,EAAqBM,SAASD,KAG5C,IAAKlE,EAASiB,OAEZ,YADAqC,EAAqBc,QAMvB,MAAMC,EAAUC,GAAAA,CAAMtE,EArCI,IAqC6BpC,KAAI2G,GAnCxC,EACrBhP,EACAyK,EACArJ,EACA6N,KAEA,MACM9C,EAAY,kBAAiB/K,cAE7BM,EAAe,CACnBwN,YAAa,MACbxN,MALoB+I,EAASpC,KAAIsG,GAAY,MAAKA,MAAWQ,KAAK,QAM/DF,GAGL,OAAOjP,EAAIE,eAAeiM,EAAU,CAClCzK,MAAAA,KAoBE0N,CAAepP,EAAKgP,EAAiBhD,EAAO5K,MAAO4K,EAAOtK,SAG5D6H,QAAQC,IAAIsF,GACTvJ,MAAK2F,IACJrB,EAAAA,EAAAA,2BACEqB,EAAQmE,QAAO,CAACC,EAAKxG,IAAWwG,EAAIC,OAAOzG,IAAS,QAGvDvH,OAAM,MACLjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,yCAItBuM,EAAqBc,UAEvB,IAGK,SAASW,EAAoBxP,EAAa2O,EAAiB3C,GAGhE+B,EAAqB0B,IAAId,GACzBV,EAAoBjO,EAAK+N,EAAsB/B,GAG1C,SAAS0D,EAAiBf,GAC/B9E,EAAAA,EAAAA,UAAyB8E,GAGpB,SAASgB,EAAc3P,EAAaoB,EAAeuN,GACxD,MAAMxC,EAAY,aAAY/K,KAASuN,EAAQ3H,QAG/C,OADA6C,EAAAA,EAAAA,cAA6B8E,GACtB3O,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,WAETkF,MACC,KACEsE,EAAAA,EAAAA,qBAAoC8E,IACpCpO,EAAAA,EAAAA,KACEiE,EAAAA,EAAAA,IAAI,qCAAsC,CAACmK,QAASA,EAAQ3H,WAGhEyC,IAGE,MAFAI,EAAAA,EAAAA,mBAAkC8E,IAClCrO,EAAAA,EAAAA,KAAgBkE,EAAAA,EAAAA,IAAI,2BAA4B,CAACmK,QAASA,EAAQ3H,QAC5DyC,KAKP,SAASmG,EACd5P,EACAoB,EACAuN,EACAkB,GAEA,MAAM1D,EAAY,aAAY/K,KAASuN,EAAQ3H,iBAE/C,OAAOhH,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,OACRsB,KAAM,CACJkO,MAAAA,KAGHtK,MACC,MACEhF,EAAAA,EAAAA,KACEiE,EAAAA,EAAAA,IAAI,mEAAoE,CACtEmK,QAASA,EAAQ3H,WAIvByC,IACE,IAAI/G,EAAU,GAEiD,MAmB/D,MAnBI+G,EAAIC,QAAU,KAAOD,EAAIC,OAAS,KAAOD,EAAIa,eAC/C5H,EAAO,UAAG+G,EAAIa,oBAAP,aAAG,EAAkBC,QAG1B7H,GACFpC,EAAAA,EAAAA,KACEkE,EAAAA,EAAAA,IAAI,0CAA2C,CAC7CmK,QAASA,EAAQ3H,KACjBtE,QAAAA,MAIJpC,EAAAA,EAAAA,KACEkE,EAAAA,EAAAA,IAAI,+BAAgC,CAClCmK,QAASA,EAAQ3H,QAKjByC,KAiBP,SAASqG,EACd9P,EACA4I,EACAmH,EACAC,GAEA,MAAM7D,EAAY,aAAYvD,KAAWmH,WAAqBC,EAAKhJ,QAKnE,OAHA9D,EAAAA,EAAAA,MACA2G,EAAAA,EAAAA,QAAuBmG,GAEhBhQ,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,SAETkF,MACCoJ,KACEpO,EAAAA,EAAAA,KACEiE,EAAAA,EAAAA,IAAI,iDAAkD,CACpDwL,KAAO,IAAGA,EAAKhJ,OACf2H,QAASoB,KAGblG,EAAAA,EAAAA,eAA8BmG,EAAMD,GACpClG,EAAAA,EAAAA,cAA6B8E,MAE/BlF,IAQE,MAPAnJ,EAAAA,EAAAA,KACEkE,EAAAA,EAAAA,IAAI,gDAAiD,CACnDwL,KAAO,IAAGA,EAAKhJ,OACf2H,QAASoB,KAGblG,EAAAA,EAAAA,eACMJ,KAaP,SAASwG,EACdjQ,EACA4I,EACAmH,EACAG,GAEA,MAAM/D,EAAY,aAAYvD,KAAWmH,WAAqBG,KAK9D,OAHAhN,EAAAA,EAAAA,MACA2G,EAAAA,EAAAA,WAA0BqG,GAEnBlQ,EACJE,eAAeiM,EAAU,CACxB9L,OAAQ,WAETkF,MACCoJ,KACEpO,EAAAA,EAAAA,KACEiE,EAAAA,EAAAA,IAAI,qDAAsD,CACxDwL,KAAO,IAAGE,IACVvB,QAASoB,KAGblG,EAAAA,EAAAA,kBAAiCqG,EAAUH,GAC3ClG,EAAAA,EAAAA,cAA6B8E,MAE/BlF,IAQE,MAPAnJ,EAAAA,EAAAA,KACEkE,EAAAA,EAAAA,IAAI,qDAAsD,CACxDwL,KAAO,IAAGE,IACVvB,QAASoB,KAGblG,EAAAA,EAAAA,gBAA+BJ,GACzBA,KAWP,SAAS0G,EAAkB5D,EAActB,GAC9CpB,EAAAA,EAAAA,WAA0B0C,EAAMtB,GA4B3B,SAASmF,EACdpQ,EACA4I,EACAoH,EACAvP,EACA4P,GAEA,IADAxP,EACA,uDADoC,GAEpC,OAAOb,EAAIE,eAAgB,UAAS0I,KAAWoH,cAAkB,CAC/D3P,OAAQ,OACRsB,KAAM,CAAClB,KAAAA,EAAM4P,SAAAA,EAAUC,cAAezP,EAAQ0P,gBAa3C,SAASC,EACdxQ,EACA4I,EACAmH,EACAM,GAEA,OAAOrQ,EAAIE,eAAgB,aAAY0I,KAAWmH,UAAoBM,MASjE,SAASI,EAAmBzQ,EAAa4I,GAC9C,OAAO5I,EAAIE,eAAgB,kBAAiB0I,qBAWvChJ,eAAe8Q,EACpB1Q,EACA4I,EACA8E,GAWA,aATmB1N,EAAIE,eAAgB,kBAAiB0I,oBAA2B,CACjFvI,OAAQ,MACRqB,MAAO,CACLwN,YAAa,MACbP,QAASjB,EACTiD,SAAU,MAIFjF,OAAS,I,0ECnZvB,MAUA,GAVsBkF,E,yCAAAA,eAAc,CAClC,gBACA,SACA,cACA,gBACA,qBACA,4BACA,6B,2+BCSK,MAAMC,EAeXC,YAAY5Q,EAAmC6Q,IAA2B,iGACxEC,KAAK9Q,eAAiBA,EACtB8Q,KAAKD,QAAUA,EACfC,KAAKC,OAAQ,EAGfC,SAAS,MACPF,KAAKC,OAAQ,EACb,UAAAD,KAAKD,eAAL,SAAcI,SACdC,EAAAA,EAAAA,IAAO,wBAAyB,IAwCpC,MAAMC,EAAqB,CACzB,cACA,aACA,mBACA,qBAMIC,EAA2D,GAEpDC,EAA6B,IACxCD,EAAoBE,MAAM7G,IAAuB,YAC/C,MAAM8G,EAAiBJ,EAAmBlJ,MAAKuJ,GAC7CA,EAAMC,KAAKjJ,OAAOkJ,SAASC,YAI7B,IAAKlH,GAAwB,MAAhBA,EAAKjB,QAAkB+H,EAClC,OAAO,EAGT,MAAM9O,EAAOgI,MAAAA,GAAH,UAAGA,EAAML,oBAAT,iBAAG,EAAoBC,cAAvB,aAAG,EAA4B5H,KACnCC,EAAQ+H,MAAAA,GAAH,UAAGA,EAAML,oBAAT,iBAAG,EAAoBC,cAAvB,aAAG,EAA4B3H,MAI1C,QACE,CACE,gBACA,SACA,eACA,oCACAgM,SAASjM,KAMA,iBAATA,GACF+F,OAAOkJ,SAASE,OAAOlP,EAAMmP,UACtB,GAGI,+BAATpP,GACFgJ,EAAAA,eAAAA,QAAuB/I,EAAMqI,MACtB,IAIToC,EAAAA,EAAAA,IAAY,kBAAmB,KAE3B2E,EAAAA,GACFrG,EAAAA,eAAAA,QAAuB,gBAEvBjD,OAAOkJ,SAASK,SAEX,QAmCJ,SAASC,EAAsBC,GAAwB,cAO5D,IANaA,MAAAA,GAAH,UAAGA,EAAU7H,oBAAb,iBAAG,EAAwBC,cAA3B,aAAG,EAAgC5H,QAMhCyP,EAAAA,GACX,OAAO,EAGT,MAAMpL,EAAOmL,MAAAA,GAAH,UAAGA,EAAU7H,oBAAb,iBAAG,EAAwBC,cAA3B,iBAAG,EAAgC3H,aAAnC,aAAG,EAAuCoE,KAGpD,OADAF,EAAAA,EAAAA,mBAAkBE,IACX,EA+DF,MAAM/G,EAIX6Q,cAAyC,UAA7BjQ,EAA6B,uDAAJ,IAAI,oEACvCmQ,KAAKqB,QAAL,UAAexR,EAAQwR,eAAvB,QAAkC,SAClCrB,KAAKsB,eAAiB,GAGxBC,aACEnS,EACAoS,GAEA,eADAC,EACA,wDACA,OAAO,WACL,MAAMC,EAAM,EAAKJ,eAAelS,GAMhC,IAJgB,IAAZqS,UACK,EAAKH,eAAelS,GAGxBsS,MAAAA,GAAAA,EAAKzB,MAAV,CAPqB,2BAAZlL,EAAY,yBAAZA,EAAY,gBAcrB,IAAImM,KAAyBnM,KAIzB4M,GAAAA,CAAYH,GAKhB,OAAOA,EAAKI,MAAMF,EAAK3M,KAO3B8I,QACEN,OAAOC,OAAOwC,KAAKsB,gBAAgBO,SAAQC,GAAKA,EAAE5B,WAGpD6B,mBAAmB,EAEjBZ,EACAa,EACAC,GACA,YAJA,GAAC7S,EAAD,KAAK8S,EAAL,eAAWC,GAIX,EACA,MAAMxQ,EAAOwP,MAAAA,GAAH,UAAGA,EAAU7H,oBAAb,iBAAG,EAAwBC,cAA3B,aAAG,EAAgC5H,KACvCyQ,EAAiBzQ,IAAS0Q,EAAAA,IAAiB1Q,IAAS2Q,EAAAA,GAE1D,IAAIC,GAAuB,EAE3B,GAAIH,EAiBF,YAhBAvN,EAAAA,EAAAA,UAAS,CACP2N,YAAa7Q,IAAS2Q,EAAAA,GACtBG,KAAM9Q,IAAS0Q,EAAAA,GACfK,aAAc9T,UACZ,IAAI,MACF,MAAM+B,QAAaqP,KAAK9Q,eAAegT,EAAMC,GAC7C,UAAAA,EAAetF,eAAf,cAAAsF,EAAyBxR,GACzB4R,GAAuB,EACvB,MAAO9J,GAAK,MACZ,UAAA0J,EAAerF,aAAf,cAAAqF,EAAuB1J,KAG3B3D,QAAS,kBAENyN,IAAD,UAAyBJ,EAAerF,aAAxC,aAAyB,OAAAqF,EAAuBhB,OAMtD,MAAMwB,EAAU3C,KAAKuB,aACnBnS,EACA+S,EAAerF,OAEjB6F,MAAAA,GAAAA,EAAUxB,EAAUa,EAAYC,GAQlCrF,QAAQsF,GAA+D,IAAjDrS,EAAiD,uDAAb,GACxD,MAAMR,EAASQ,EAAQR,SAAWQ,EAAQc,KAAO,OAAS,OAE1D,IAAIiS,EAzMR,SAAyBvB,EAAiBa,EAAcxR,GACtD,IAAIsK,EACJ,IACEA,EAAS6H,EAAAA,UAAanS,MAAAA,EAAAA,EAAS,IAC/B,MAAO+H,GAMP,MALA5G,EAAAA,IAAiBiR,IACfA,EAAMC,SAAS,OAAQb,GACvBY,EAAMC,SAAS,QAASrS,GACxBmB,EAAAA,GAAwB4G,MAEpBA,EAIR,IAAImK,EAAUV,EAAKtE,SAASyD,GAAWa,EAAOb,EAAUa,EAOxD,OAJIlH,IACF4H,GAAWA,EAAQhF,SAAS,KAAQ,IAAG5C,IAAY,IAAGA,KAGjD4H,EAoLSI,CAAgBhD,KAAKqB,QAASa,EAAMrS,EAAQa,OAEtDC,EAAOd,EAAQc,KASnB,GAPKgR,GAAAA,CAAYhR,IAAoB,QAAXtB,IACxBsB,EAAOsS,KAAKC,UAAUvS,IAMT,QAAXtB,GAAoBsB,EAAM,CAC5B,MAAMwS,EAA8B,iBAATxS,EAAoBA,EAAOkS,EAAAA,UAAalS,GAE/DwS,EAAYzI,OAAS,IACvBkI,EAAUA,IAAqC,IAA1BA,EAAQQ,QAAQ,KAAc,IAAM,KAAOD,GAIpE,MAAM/T,GAAKiU,EAAAA,EAAAA,KACLC,EAAe,qBAAoBlU,IAEzCgR,EAAAA,GAAAA,KAAY,CAAC3Q,KAAM6T,IAKnB,MAAMC,EAAiB,CACrB5J,EACAqI,EACAwB,KAEApD,EAAAA,GAAAA,QAAe,CACb3Q,KAAM,0BACNgU,MAAOH,EACP3S,KAAM,CAAC+H,OAAQiB,MAAAA,OAAF,EAAEA,EAAMjB,UAElBiJ,GAAAA,CAAY9R,EAAQgN,UACvBmD,KAAKuB,aAA0CnS,EAAIS,EAAQgN,QAA3DmD,CACEwD,EACAxB,EACArI,IAQA+J,EAAe,CACnB/J,EACAqI,EACAC,KAEA7B,EAAAA,GAAAA,QAAe,CACb3Q,KAAM,wBACNgU,MAAOH,EACP3S,KAAM,CAAC+H,OAAQiB,MAAAA,OAAF,EAAEA,EAAMjB,UAGvBsH,KAAK+B,mBACH,CAAC3S,GAAAA,EAAI8S,KAAAA,EAAMC,eAAgBtS,GAC3B8J,EACAqI,EACAC,IAOE0B,EAAkB,CAAChK,EAAoBqI,IAC3ChC,KAAKuB,aACHnS,EACAS,EAAQ+T,UACR,EAHF5D,CAIErG,EAAMqI,GAGJjC,EACuB,oBAApB8D,gBAAkC,IAAIA,qBAAoBvR,EAG7DwR,EAAkB,QAAXzU,EAAmBsB,OAAO2B,EAEjCyR,EAAU,IAAIC,QAAQ,CAC1BC,OAAQ,kCACR,eAAgB,qBAKZC,EAAc,IAAIC,IAAIvB,EAASlL,OAAOkJ,SAASwD,QAC/CC,EAAe3M,OAAOkJ,SAASwD,SAAWF,EAAYE,QA5WhE,SAAwB/U,GAEtB,MAAO,6BAA6BsR,KAAKtR,MAAAA,EAAAA,EAAU,IA4W5CiV,CAAejV,IAAWgV,GAC7BN,EAAQQ,IAAI,eAAeC,EAAAA,EAAAA,MAG7B,MAAMC,EAAeC,MAAM9B,EAAS,CAClCvT,OAAAA,EACAyU,KAAAA,EACAC,QAAAA,EACAY,YAAa,cACbC,OAAQ7E,MAAAA,OAAF,EAAEA,EAAS6E,SAKnBH,EACGlQ,MAAK3F,MAAAA,IAIJ,IAAI0K,EACAuL,EAEJ,MAAM,OAACnM,EAAD,WAASoM,GAAc3D,EAC7B,IAAI,GAAC4D,GAAM5D,EACP6D,EAAc,iBAGlB,IACEH,QAAqB1D,EAAS8D,QAAQC,OACtC,MAAOpI,GACPiI,GAAK,EAEHC,EADiB,eAAflI,EAAMrN,KACM,sBAEAqN,EAAMqI,WAIxB,MAAMC,EAAsBjE,EAAS8D,QAAQlB,QAAQ9Q,IAAI,gBACnDoS,EAAiBD,MAAAA,OAAH,EAAGA,EAAqBxH,SAAS,QAGrD,GAAe,MAAXlF,KADgBA,GAAU,KAAOA,EAAS,KAE5C,IACEY,QAAqB6H,EAAS8D,QAAQK,OACtC,MAAOxI,GACY,eAAfA,EAAMrN,MACRsV,GAAK,EACLC,EAAc,uBACLK,GAAkBvI,aAAiByI,cAG5CR,GAAK,EACLC,EAAc,oBAKpB,MAAMQ,EAA6B,CACjC9M,OAAAA,EACAoM,WAAAA,EACAxL,aAAAA,EACAuL,aAAAA,EACAhL,kBAAoB4L,GAAmBtE,EAAS4C,QAAQ9Q,IAAIwS,GAC5DC,YAAavE,EAAS8D,SAMpBF,EACFxB,EAAeiC,EAAcV,EAHVO,EAAiB/L,EAAeuL,GAMjDvE,EAAoBjJ,KAAIsO,GAAWA,EAAQH,KAAe/K,OAAOmL,SAC9DlL,OAAS,GAGZgJ,EAAa8B,EAAcV,EAAYE,GAI3CrB,EAAgB6B,EAAcV,MAE/BvU,OAAM,SAIT,MAAMqM,EAAU,IAAIiD,EAAQ4E,EAAc1E,GAG1C,OAFAC,KAAKsB,eAAelS,GAAMwN,EAEnBA,EAGT1N,eACEgT,GASA,IARA,eACE/J,KACGtI,GAML,uDALsE,GAYtE,MAAMgW,EAAiB,IAAI/T,MAE3B,OAAO,IAAIyG,SAAQ,CAACuN,EAASC,IAC3B/F,KAAKpD,QAAQsF,EAAM,IACdrS,EACHgW,eAAAA,EACAhJ,QAAS,CAAClM,EAAMqR,EAAYrI,KAExBmM,EADE3N,EACM,CAACxH,EAAMqR,EAAYrI,GAEnBhJ,IAGZmM,MAAQnD,IACN,MAAMqM,GAAmBC,EAAAA,EAAAA,GACvBtM,EACAkM,EAAeK,MACfrW,EAAQR,OACR6S,GAEF8D,EAAiBG,aAAa,GAI9BJ,EAAOC,W,2fCvjBjB,MAAMI,EAAU,CAGdC,UAHc,EAIdC,MAJc,EAKdC,OALc,EAMd1U,OANc,EAOd2U,OAPc,IAQdC,OAAQC,EACRC,SAAU,CAACC,YAAD,cAAcC,OAAMA,EAAAA,QAG9BC,UAAW,IAKPA,EAAY,CAEhBC,KAAMC,EAAAA,6CAAAA,EACNC,UAAWD,EAAAA,oCAAAA,EACXE,iBAAkBF,EAAAA,yCAAAA,EAClBG,QAAS,CACP1I,IAAK0I,EAAAA,GAAAA,IACLC,WAAYD,EAAAA,GAAAA,WACZE,WAAYF,EAAAA,GAAAA,WACZG,mBAAoBH,EAAAA,GAAAA,oBAKtBvX,YAAaoX,EAAAA,gCAAAA,EACbO,UAAWP,EAAAA,8BAAAA,EACXQ,mBAAoBR,EAAQ,mCAC5B9R,MAAO8R,EAAQ,kCACfS,eAAgBT,EAAAA,kCAAAA,EAChB/X,OAAQ+X,EAAAA,iBAAAA,IAGVZ,EAAQU,UAAYA,EACpBvJ,OAAOmK,KAAKtB,GAASvE,SAAQpS,GAASiI,OAAOjI,GAAQ2W,EAAQ3W,KAE7D,U,ieC3Ce,SAASiU,EAAgBiE,GACtC,MAAMC,UAAqBC,EAAAA,UAAoB,uDAS9B,CAGbC,UAAU,EACVhL,WAAOxK,IAZsB,gCAACwK,GAE9B,MAAO,CACLgL,UAAU,EACVhL,MAAAA,GAWJiL,kBAAkBC,EAAeC,GAE/BC,QAAQpL,MACN,oDACAmL,EAAKE,gBAITtB,SACE,OAAI7G,KAAKoI,MAAMN,UACN,QAAC,IAAD,CAAYhL,MAAOkD,KAAKoI,MAAMtL,SAGhC,QAAC6K,EAAD,IAAsB3H,KAAKqI,SAItC,OAjCMT,EAD0E,2BAkCzEA,E,ytBCpCT,MAAMU,GAAc,OAAO,SAAP,sBAAH,8CAEYC,GAAKA,EAAEzY,MAAM0Y,QAFzB,aAGJhU,EAAAA,EAAAA,GAAM,GAHF,KAGQA,EAAAA,EAAAA,GAAM,GAHd,aAIJA,EAAAA,EAAAA,GAAM,GAJF,MAISA,EAAAA,EAAAA,GAAM,GAJf,KAIqBA,EAAAA,EAAAA,GAAM,GAJ3B,MAIkCA,EAAAA,EAAAA,GAAM,GAJxC,uFAmBXiU,GAAc,QAAQF,IAC1B,QAAC,KAAD,CAAQG,KAAK,OAAOC,MAAM,QAAC,IAAD,CAAWD,KAAK,YAAeH,KADvC,sBAAH,sHASSA,GAAKA,EAAEzY,MAAM8Y,mBATtB,gBAUDL,GAAKA,EAAEzY,MAAM+Y,YAVZ,4BAeXC,GAAY,OAAO,UAAP,sBAAH,cACAP,GAAKA,EAAEzY,MAAMiZ,gBADb,uDAYTC,GAAc,OAAO,SAAP,sBAAH,yBACST,GAAKA,EAAEzY,MAAM0Y,QADtB,mDAIJhU,EAAAA,EAAAA,GAAM,GAJF,KAIQA,EAAAA,EAAAA,GAAM,GAJd,YAKLA,EAAAA,EAAAA,GAAM,GALD,MAKQA,EAAAA,EAAAA,GAAM,GALd,MAKqBA,EAAAA,EAAAA,GAAM,GAL3B,KAiBXyU,EAAsBrU,IAC1B,MAAMsU,EAAgD,QAAC,YACrDC,EADqD,SAErDC,KACGf,GAHiD,SAKpD,QAACC,EAAD,IAAiBD,EAAjB,UACGe,EACAD,GACC,QAACV,EAAD,CAAa,cAAYjY,EAAAA,EAAAA,GAAE,eAAgB6Y,QAASzU,IAClD,SAMR,OAFAsU,EAAeI,YAAc,SAEtBJ,GAMHK,EACH3U,GACDyT,IACE,QAACI,EAAD,IAAiBJ,EAAO,cAAY7X,EAAAA,EAAAA,GAAE,eAAgB6Y,QAASzU,ICKnE,SAAS4U,EAAT,GAAgF,YAA3D,QAACC,GAAU,EAAX,QAAkB5Z,EAAU,GAA5B,SAAgCuZ,EAAhC,QAA0CtU,GAAiB,EAC9E,MAAMF,GAAa8U,EAAAA,EAAAA,cAAY,KAAM,MAEnC,UAAA7Z,EAAQiF,eAAR,cAAAjF,IAGA8Z,EAAAA,EAAAA,cAGA7U,MAAAA,GAAAA,MACC,CAACjF,EAASiF,IAEP8U,GAAoBF,EAAAA,EAAAA,cACvBG,GAA+B,WAAVA,EAAEC,KAAoBlV,KAC5C,CAACA,IAGGmV,GAAStC,EAAAA,EAAAA,KACTuC,GAAYC,EAAAA,EAAAA,UAEdvS,OAAOoP,YACTpP,OAAOoP,UAAUoD,eAAiBF,IAGpCG,EAAAA,EAAAA,YAAU,KACRH,EAAUI,SAAUC,EAAAA,EAAAA,GAAgBN,EAAQ,CAC1CO,eAAe,EACfC,mBAAmB,EACnBC,cAAeT,MAEhB,CAACA,KAEJI,EAAAA,EAAAA,YAAU,KACR,MAAMrG,EAAO2G,SAASC,cAAc,QAC9BjX,EAAOgX,SAASE,eAAeC,EAAAA,IAErC,IAAK9G,IAASrQ,EACZ,MAAO,OAGT,MAAMoX,EAAQ,KAAM,MAClB/G,EAAKgH,MAAMC,eAAe,YAC1BtX,EAAKuX,gBAAgB,eACrB,UAAAhB,EAAUI,eAAV,SAAmBa,aACnBR,SAASS,oBAAoB,UAAWtB,IAG7B,MAUb,OAVIH,GACF3F,EAAKgH,MAAMK,SAAW,SACtB1X,EAAK2X,aAAa,cAAe,QACjC,UAAApB,EAAUI,eAAV,SAAmBiB,WAEnBZ,SAASa,iBAAiB,UAAW1B,IAErCiB,IAGKA,IACN,CAACd,EAAQH,EAAmBH,KAG/BU,EAAAA,EAAAA,YAAU,IAAMxP,EAAAA,eAAAA,QAAsB,KAAMgP,EAAAA,EAAAA,iBAAqB,IAEjE,MAAM4B,EAAgBnC,MAAAA,OAAH,EAAGA,EAAW,CAC/BX,YAAac,EAAgB3U,GAC7B4W,OAAQvC,EAAmBrU,GAC3B6W,KAAM3C,EACN4C,OAAQ1C,EACRpU,WAAAA,IAIIc,EAAQ,UAAG7F,EAAQ6F,gBAAX,SAGRiW,EAAe,UAAG9b,EAAQ8b,uBAAX,SAGfC,GAAe3B,EAAAA,EAAAA,QAAuB,MAI5C,OAAO4B,EAAAA,EAAAA,eACL,QAAC,EAAAC,SAAD,YACE,QAACC,EAAD,CACEjB,MAAOpV,GAAY+T,EAAU,CAACuC,QAAS,GAAKC,cAAe,QAAU,MAEvE,QAACC,EAAD,CACEC,IAAKP,EACLd,MAAO,CAACmB,cAAexC,EAAU,OAAS,QAC1CJ,SAAsB,IAAb3T,EAXKmU,GAClB+B,EAAaxB,UAAYP,EAAEuC,QAAUT,GAAmB/W,SAUVtC,EAH5C,UAKE,QAAC+Z,EAAA,EAAD,UACG5C,IACC,QAACvU,EAAD,CAAOoX,KAAK,SAASC,IAAK1c,EAAQyF,SAAlC,UACE,QAACkX,GAAD,CAASF,KAAK,WAAd,SAA0Bf,aAMpCxB,GAIJ,MAAM0C,EAAc,CAAH,qEAQXV,GAAW,OAAO,MAAP,sBACbU,EADU,aAEDlE,GAAKA,EAAEzY,MAAM4c,OAAOC,OAFnB,gBAGEpE,GAAKA,EAAEzY,MAAM8c,OAHf,gFAURV,GAAY,OAAO,MAAP,sBACdO,EADW,aAEFlE,GAAKA,EAAEzY,MAAM4c,OAAOC,OAFlB,gFASTzX,GAAQ,OAAO2X,EAAAA,EAAAA,IAAP,sBAAH,iDAGOrY,EAAAA,EAAAA,GAAM,GAHb,KAGmBA,EAAAA,EAAAA,GAAM,GAHzB,KAG+BA,EAAAA,EAAAA,GAAM,GAHrC,KAMXU,EAAM4X,aAAe,CACnBC,QAAS,CAACf,QAAS,EAAGgB,GAAI,IAC1BC,QAAS,CAACjB,QAAS,EAAGgB,EAAG,GACzBE,KAAM,CAAClB,QAAS,EAAGgB,EAAG,IACtBG,YAAYC,EAAAA,EAAAA,GAAmB,CAC7BpB,QAAS,CAAC1a,SAAU,IACpB0b,EAAG,CAAC1b,SAAU,QAIlB,MAAMkb,IAAU,OAAO,MAAP,sBAAH,YACAhY,EAAAA,EAAAA,GAAM,GADN,gBAEG+T,GAAKA,EAAEzY,MAAM+Y,YAFhB,4CAIaN,GAAKA,EAAEzY,MAAM8Y,mBAJ1B,KAIgDL,GAAKA,EAAEzY,MAAMud,iBAJ7D,uBAYb,MAAMC,WAA6BzF,EAAAA,UAAiC,uDACnD,CACb0F,WAAY5Y,EAAAA,EAAAA,SAFoD,yBASrDA,EAAAA,EAAAA,QACV4Y,GAAoCvN,KAAKwN,SAAS,CAACD,WAAAA,UACpDjb,IANFmb,uBAAuB,MACrB,UAAAzN,KAAK0N,kBAAL,cAAA1N,MAQF6G,SACE,MAAM,WAAC0G,GAAcvN,KAAKoI,MACpBqB,IAAY8D,GAA6C,mBAAxBA,EAAW7Y,SAElD,OACE,QAAC8U,EAAD,IAAiBxJ,KAAKqI,SAAWkF,EAAY9D,QAASA,EAAtD,SACGA,EAAU8D,EAAW7Y,SAAW,QApBnC4Y,GAAAA,YAAAA,uBA0BN,Y,6TCjQA,MAAMK,IAAgBC,EAAAA,EAAAA,OAAK,IAAM,+IAC3BC,IAAoBD,EAAAA,EAAAA,OAAK,IAAM,6FAKrC,SAASE,GAAT,GAAgC,cAAnB,SAAC1E,GAAkB,EAC9B,MAAMpa,GAAM+e,EAAAA,GAAAA,KACNC,GAASC,EAAAA,GAAAA,GAAere,GAAAA,IAG9Bse,EAAAA,GAAAA,GACE,CACE,CACEC,MAAO,CAAC,kBAAmB,YAAa,eAAgB,UACxDC,SAAUvE,KACRlU,EAAAA,EAAAA,sBACAkU,EAAEwE,oBAIR,KAIFH,EAAAA,GAAAA,GACE,CACE,CACEC,MAAO,CAAC,kBAAmB,gBAC3BC,SAAUvE,IACRja,GAAAA,EAAAA,IAAgB,QAA0B,UAAjBoe,EAAOle,MAAoB,OAAS,SAC7D+Z,EAAEwE,oBAIR,CAACL,EAAOle,QAMV,MAAMwe,GAAoB5E,EAAAA,EAAAA,cAAY9a,UACpC,IACE,MAAM+B,QAAa3B,EAAIE,eAAe,kBAAmB,CAACwB,MAAO,CAAC6d,OAAQ,OAC1E/T,GAAAA,EAAAA,KAAwB7J,GACxB,UAGD,CAAC3B,IAKEwf,GAAsB9E,EAAAA,EAAAA,cAAY9a,UAAY,UAClD,IAAI+B,EAAY,KAEhB,IACEA,QAAa3B,EAAIE,eAAe,qBAChC,OAIE,QAAJ,EAAAyB,SAAA,mBAAM8d,gBAAN,mBAAgB5M,eAAhB,iBAA2B6M,IACzB,MAAM,GAACtf,EAAD,QAAKsC,EAAL,IAAcid,GAAOD,EACrBrd,EAA4B,aAArBqd,EAAQE,SAA0B,QAAU,UAEzDC,EAAAA,EAAAA,SAAoB,CAACzf,GAAAA,EAAIsC,QAAAA,EAASL,KAAAA,EAAMsd,IAAAA,EAAKG,QAAQ,SAEtD,CAAC9f,KAEJmb,EAAAA,EAAAA,YAAU,KACRmE,IACAE,IAGAR,EAAOe,SAASlN,SAAQzQ,GACtByd,EAAAA,EAAAA,SAAoB,CAACnd,QAASN,EAAIM,QAASL,KAAMD,EAAI4d,MAAOC,aAAa,MAIvEC,EAAAA,ICxGD,WACL,IAAKA,EAAAA,GACH,OAGF,MAAM,OAACC,EAAD,UAASC,EAAT,UAAoBC,EAApB,WAA+BC,GAAcJ,EAAAA,GAC7CK,EAAW,sBAAqBF,KAAaC,IAE7CE,GACJ,QAAC,IAAD,CAAcC,KAAO,GAAEF,YAAkBH,IAAzC,UACG5e,EAAAA,EAAAA,GAAE,QAAU,GAAE6e,KAAaC,IAAcF,EAAUM,MAAM,EAAG,MAI3DC,GACJ,QAAC,IAAD,CAAcF,KAAO,GAAEF,UAAgBJ,IAAvC,SAAkDA,IAGpDN,EAAAA,EAAAA,SAAoB,CAClBzf,GAAI,iBACJsC,SAAS8B,EAAAA,EAAAA,IACP,2EACA,CAACgc,WAAAA,EAAYG,WAAAA,IAEfte,KAAM,UACN4d,aAAa,EACbW,cAAc,ID+EZC,IAIGX,EAAAA,IAAyBlO,EAAAA,IC9E3BA,EAAAA,IAIL6N,EAAAA,EAAAA,SAAoB,CAClBzf,GAAI,gBACJsC,SAASlB,EAAAA,EAAAA,GACP,qHAEFa,KAAM,UACNyd,QAAQ,EACRG,aAAa,EACbW,cAAc,IDuEV5B,EAAOre,MACT4X,EAAAA,EAAAA,IAAc,uBAAuBlQ,KAAIyY,GAAMA,EAAG9B,EAAOre,SAG3D4Q,EAAAA,EAAAA,OACAwP,EAAAA,EAAAA,eAGO,IAAMvV,GAAAA,EAAAA,KAAwB,MACpC,CAAC8T,EAAmBE,EAAqBR,EAAOe,SAAUf,EAAOre,OAWpE,MAAMqgB,GAAe,UAAAhC,EAAOre,YAAP,eAAa6S,cAAewL,EAAOgC,aAClDC,EAAuB,UAAGjC,EAAOre,YAAV,iBAAG,EAAaugB,aAAhB,aAAG,EAAoBC,0BAuB9CC,GAAmBnG,EAAAA,EAAAA,QAAuB,MAC1CoG,GAAmB3G,EAAAA,EAAAA,cAAY,8BAAM0G,EAAiBhG,eAAvB,iBAAM,EAA0BkG,aAAhC,aAAM,YAAqC,IAEhF,OACE,QAAC,EAAAC,SAAD,CAAUnhB,GAAG,MAAMohB,SAAUC,GAAAA,GAA7B,UACE,QAACC,GAAD,CAAeC,UAAW,EAAGxE,IAAKiE,EAAlC,WACE,QAAC,GAAD,CAAatb,QAASub,KACtB,QAAC,WAAD,CAAcO,UAAU,wBACxB,QAAC,WAAD,CAAYA,UAAU,0BACtB,QAAC,IAAD,UA7BAZ,GAEA,QAAC,EAAAa,SAAD,CAAUrZ,SAAU,KAApB,WACE,QAACmW,GAAD,CAAemD,aAhBvB,WACElhB,GAAAA,EAAAA,IAAgB,gBAAgB,MAc5B,OAMAqgB,GAEA,QAAC,EAAAY,SAAD,CAAUrZ,SAAU,KAApB,UACE,QAACqW,GAAD,CAAmBkD,gBApB3B,WACE,MAAMb,EAAQ,IAAIlC,EAAOre,KAAKugB,MAAOC,2BAA2B,GAChEvgB,GAAAA,EAAAA,IAAgB,OAAQ,IAAIoe,EAAOre,KAAMugB,MAAAA,SAuBlC9G,SA5HF0E,GAAAA,YAAAA,MA+IT,YAEM4C,IAAgB,OAAO,MAAP,sBAAH,iFAKFnI,GAAM3Y,GAAAA,EAAAA,IAAgB,YAAc2Y,EAAEzY,MAAMkhB,KAAKC,WAAa,GAL5D,K,gPExKnB,SAASC,GAAT,GAA+C,IAAnB,SAAC9H,GAAkB,EAC7C,MAAMrS,GAAeoa,EAAAA,GAAAA,KAErB,OACE,QAAC,KAAD,CAAqBC,OAAO5gB,EAAAA,EAAAA,GAAE,UAAWoH,QAASb,EAAaf,KAA/D,UACE,QAAC,KAAD,CAAsBqb,kBAAgB,EAAtC,UACE,QAAC,KAAD,CAAkBta,aAAcA,EAAhC,SAA+CqS,QAN9C8H,GAAAA,YAAAA,qBAYT,Y,+vCCPA,SAASI,GAAT,GAA4E,IAA/C,MAAClhB,EAAD,UAAQsM,EAAR,MAAmB6U,EAAnB,YAA0BC,GAAqB,EAC1E,MAAMC,EAAQ,aAAYrhB,cAAkBsM,uBAC5C,IAAIgV,GAAa,EACbxM,EAAO,GACPyM,EAA6B,KAC7BC,EAAwD,QAExDjU,EAA2B,KAS/B,GARI6T,IACF7T,GACE,QAAC,EAAAmO,SAAD,YACE,2BAASpP,IADX,KACuC,QAKvC6U,EAAMM,UAAY,EACpB3M,GAAO4M,EAAAA,EAAAA,IACL,8CACA,gDACAP,EAAMM,WAERF,GACE,QAAC,EAAA7F,SAAD,gBAEGtY,EAAAA,EAAAA,IAAI,wBAAyB,CAC5Bue,KAAK,QAAC,KAAD,CAAWC,KAAMT,EAAMU,aAHhC,OAQFL,EAAY,QACZF,GAAa,OACR,GAAIH,EAAMW,iBAAmB,EAClCN,EAAY,OACZ1M,GAAO4M,EAAAA,EAAAA,IACL,0BACA,2BACAP,EAAMW,sBAEH,MAAIX,EAAMY,kBAAoB,GAUnC,OAAO,KATPP,EAAY,UACZ1M,GAAO4M,EAAAA,EAAAA,IACL,0CACA,4CACAP,EAAMY,mBAERT,GAAa,EAMf,OACE,QAACU,GAAD,CACE/gB,KAAMugB,EACNS,UAAQ,EACRC,cACEZ,IACE,QAACa,GAAD,CAAc7J,KAAK,SAAS8J,GAAIf,EAAhC,UACGjhB,EAAAA,EAAAA,GAAE,kBANX,UAWGmN,EAXH,KAWY,2BAASuH,IAXrB,IAWqCyM,KAjEhCL,GAAAA,YAAAA,sBAsET,YAEMc,IAAc,OAAOK,GAAAA,EAAP,qBAAH,0DAIFlK,GAAKA,EAAEzY,MAAMiZ,gBAJX,KAOXwJ,IAAe,OAAOG,EAAAA,GAAP,qBAAH,mCAEDle,EAAAA,EAAAA,GAAM,GAFL,KC1ElB,MAAMme,WAA4B9K,EAAAA,UAAwB,uDAGzC,CACb+K,SAAS,EACTC,OAAQ,MAL8C,kBAsBlD,IAAI5jB,EAAAA,IAdV6jB,oBACE9S,KAAK+S,cAGPC,mBAAmBC,GACZC,IAAAA,CAAQD,EAAUE,WAAYnT,KAAKqI,MAAM8K,aAC5CnT,KAAK+S,cAITtF,uBACEzN,KAAKhR,IAAI6O,QAKXkV,cACE,MAAM,aAAChc,EAAD,WAAeoc,GAAcnT,KAAKqI,MAClC/X,EC9CH,SACLtB,EACAoB,GAEA,IADA+iB,EACA,uDAD8B,KAE9B,OAAOnkB,EAAIE,eAAgB,kBAAiBkB,sBAA2B,CACrEf,OAAQ,MACRqB,MAAOyiB,EAAa,CAACxV,QAASwV,GAAc,KDuC5BC,CAAsBpT,KAAKhR,IAAK+H,EAAaf,KAAMmd,GAEnE7iB,EAAQiE,MACL5D,IACC,MAAM0iB,EAAY1iB,MAAAA,OAAH,EAAGA,EAAM2iB,MACtB/K,GAAKA,EAAE8K,WAAa9K,EAAE4J,kBAAoB,GAAK5J,EAAE2J,iBAAmB,IAGlEvhB,GAAQ0iB,GACVrT,KAAKwN,SAAS,CAACqF,OAAQliB,OAG3B,SAMJkW,SACE,MAAM,OAACgM,GAAU7S,KAAKoI,OAChB,aAACrR,EAAD,YAAeya,GAAexR,KAAKqI,MAEzC,OACE,QAAC,EAAAyD,SAAD,UACG+G,EAAOxb,KAAI,CAACkR,EAAGgL,KACd,QAAC,GAAD,CAEEhC,MAAOhJ,EACP7L,UAAW6L,EAAE5K,QACbvN,MAAO2G,EAAaf,KACpBwb,YAAaA,GAJR+B,QApDXZ,GAAAA,YAAAA,uB,OAAAA,GAAAA,eAde,CACnBnB,aAAa,IA6Ef,Y,ksBEhEA,MAAMgC,GAA4C,CAChDC,qBAAsB,GAEtBrL,MAAO,CACLsL,cAAe,GACf5L,UAAU,EACV6L,WAAW,GAGbC,OACE,MAAM,wBACJC,EADI,0BAEJC,EAFI,wBAGJC,EAHI,yBAIJC,EAJI,yBAKJC,EALI,UAMJC,EANI,iBAOJC,EAPI,mBAQJC,EARI,YASJC,GACEC,GAAAA,EAEJtU,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAASV,EAAyB7T,KAAKwU,4BAE9CxU,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAAST,EAA2B9T,KAAKyU,8BAEhDzU,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAASR,EAAyB/T,KAAK0U,4BAE9C1U,KAAKyT,qBAAqBjT,KAAKR,KAAKuU,SAASH,EAAoBpU,KAAK2U,UACtE3U,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAASP,EAA0BhU,KAAK4U,6BAE/C5U,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAASN,EAA0BjU,KAAK6U,6BAE/C7U,KAAKyT,qBAAqBjT,KAAKR,KAAKuU,SAASL,EAAWlU,KAAK8U,cAC7D9U,KAAKyT,qBAAqBjT,KACxBR,KAAKuU,SAASJ,EAAkBnU,KAAK+U,qBAEvC/U,KAAKyT,qBAAqBjT,KAAKR,KAAKuU,SAASF,EAAarU,KAAKgV,gBAE/DhV,KAAK6K,SAGPA,QACE7K,KAAKoI,MAAQ,CACXsL,cAAe,GACf5L,UAAU,EACV6L,WAAW,IAIf1gB,MACE,OAAO+M,KAAKoI,OAOd6M,oBAAoB5jB,EAAM6jB,GACxB,OAAOlV,KAAKoI,MAAMsL,cACfjZ,QACE0a,KAEGA,EAAYC,UACZD,EAAY9jB,OAASA,IACpB8jB,EAAYE,cACZF,EAAYG,UACbH,EAAY/lB,KAAO8lB,KAGxB7d,KAAK8d,QAE0B,IAArBD,GACPA,IAAqBC,EAAY/lB,GAG1B+lB,EAGF,IAAIA,EAAaC,UAAU,MAIxCG,qBAAqBnmB,EAAIomB,GACvB,MAAMC,EAAQC,IAAAA,CACZ1V,KAAKoI,MAAMsL,eACVyB,GAA6BA,EAAY/lB,KAAOA,IAGnD,IAAe,IAAXqmB,EACF,OAAO,KAGT,MACME,EAAiB,IADK3V,KAAKoI,MAAMsL,cAAc+B,MAGhDD,GAGL,OADAxV,KAAKoI,MAAMsL,cAAc+B,GAASE,EAC3BA,GAMTC,YAAYllB,EAAOmlB,GACjB,OAAO7V,KAAKoI,MAAMsL,cAAcvc,MAC9Bge,GAAezkB,IAAUykB,EAAYzkB,OAASmlB,IAASV,EAAYU,QAOvElB,UACE3U,KAAK6K,QACL7K,KAAK8V,QAAQ9V,KAAKoI,QAGpBoM,4BACExU,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRuL,WAAW,GAEb3T,KAAK8V,QAAQ9V,KAAKoI,QAGpBqM,4BAA4B9jB,GACrB8M,MAAMsY,QAAQplB,KACjBA,EAAO,IAETqP,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRsL,cAAe/iB,EACfgjB,WAAW,GAEb3T,KAAK8V,QAAQ9V,KAAKoI,QAGpBsM,0BAA0BsB,GACxBhW,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRsL,cAAe,GACfC,WAAW,EACX7L,UAAU,GAEZ9H,KAAK8V,QAAQ9V,KAAKoI,QAGpBwM,2BAA2Bjb,GACzBqG,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRsL,cAAe,IAAI1T,KAAKoI,MAAMsL,cAAe/Z,IAG/CqG,KAAK8V,QAAQ9V,KAAKoI,QAGpByM,2BAA2BoB,GACzBjW,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRsL,cAAe1T,KAAKoI,MAAMsL,cAAcjZ,QAAOyb,GAAQA,EAAK9mB,KAAO6mB,EAAO7mB,MAG5E4Q,KAAK8V,QAAQ9V,KAAKoI,QAGpB0M,YAAYzjB,EAAMX,EAAOmlB,GACvB,MAAMM,EAAiBnW,KAAK4V,YAAYllB,EAAOmlB,GAE3CM,GACFnW,KAAKuV,qBAAqBY,EAAe/mB,GAAI,CAACgmB,UAAU,IAG1D,MAAMgB,EAAmBD,EAWrB,GAVA,CACE,CACE/mB,GAAI,KACJK,KAAM,mBACN4B,KAAAA,EACAX,MAAAA,EACAmlB,KAAAA,EACAT,UAAU,IAKlBpV,KAAKoI,MAAQ,IACRpI,KAAKoI,MACRsL,cAAe,IACV0C,KAIApW,KAAKiV,oBAAoB5jB,EAAM8kB,GAAkBA,EAAe/mB,MAGvE4Q,KAAK8V,QAAQ9V,KAAKoI,QAGpB2M,mBAAmBpb,GACjB,MAAMwc,EAAiBnW,KAAK4V,YAAYjc,EAAKjJ,MAAOiJ,EAAKkc,MAErDM,GACFnW,KAAKuV,qBAAqBY,EAAe/mB,GAAIuK,GAG/CqG,KAAK8V,QAAQ9V,KAAKoI,QAGpB4M,cAAc3jB,GACZ2O,KAAKoI,MAAQ,IACRpI,KAAKoI,MAERsL,cAAe1T,KAAKiV,oBAAoB5jB,IAE1C2O,KAAK8V,QAAQ9V,KAAKoI,SAKtB,IAD2BiO,EAAAA,EAAAA,cAAYC,EAAAA,GAAAA,GAAoB9C,K,qsBC7O3D,SAAS+C,GAAT,GAA2D,IAAjC,IAAC/d,EAAD,MAAM9H,EAAN,WAAa8lB,GAAoB,EACzD,OAAKhe,EAID9H,GAEA,0BACE,uBAAIF,EAAAA,EAAAA,GAAE,+CAAiD,OACvD,wBAAME,QAMV,aAAGkgB,UAAU,QAAb,UACE,2BACG4F,EAAaC,IACVjjB,EAAAA,EAAAA,IACE,4EACA,CACEkjB,WAAYC,MAGhBnjB,EAAAA,EAAAA,IAAI,sEAAuE,CACzEkjB,WAAYF,QAvBf,KAFFD,GAAAA,YAAAA,mBAgCT,YCnCaE,GAAa,IACbE,GAAiBF,GAAWG,iBAElC,IAAKC,GAUZ,SAASC,GAAsB9kB,EAAgBwkB,GAC7C,OAAIA,EAAaC,IACRjjB,EAAAA,EAAAA,IACL,yFACA,CACExB,OAAAA,EACA0kB,WAAYC,MAKXnjB,EAAAA,EAAAA,IACL,mFACA,CACExB,OAAAA,EACA0kB,WAAYF,ICtBlB,SAASO,GAAT,GAMU,IANuB,OAC/B/b,EAD+B,QAE/BpD,EAF+B,YAG/Bof,EAH+B,gBAI/BC,EAJ+B,SAK/BC,GACQ,EACR,MAAM,YACJC,EADI,cAEJC,EAFI,UAGJ1a,EAHI,QAIJ2a,EAJI,MAKJ1kB,EALI,gBAMJ2kB,EANI,kBAOJC,GACEvc,EAIEwc,EAAkB5R,SAASoR,GAAeO,GAC1CE,EAA0B7R,SAC7BoR,IAAgBta,GAAa4a,GAAmBC,GAGnD,OACE,QAAC,KAAD,CACEG,WAAYP,EACZC,cAAeA,EACfxf,QAASA,EACTmH,YAAarC,EACbwa,SAAUA,EACVS,cAAeV,EAAgBJ,GAAce,SAC7CC,eAAgBR,EAAQ,WAAW,GACnCS,aAAcnlB,EAAM,WACpBolB,SAAUP,EACVQ,gBAAiBP,EACjBF,kBAAmBA,K,SDvCbV,GAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAAA,EAAAA,OAAAA,SAAAA,EAAAA,SAAAA,WAAAA,EAAAA,WAAAA,aAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,S,CAAAA,KAAAA,GAAAA,KCGHE,GAAAA,YAAAA,0BAyCT,Y,8NC1CA,SAASkB,GAAenO,GACtB,OAAQA,GACN,KAAKoO,GAAAA,GAAAA,MACH,OAAO1nB,EAAAA,EAAAA,GAAE,0CACX,KAAK0nB,GAAAA,GAAAA,IACH,OAAO1nB,EAAAA,EAAAA,GAAE,8DACX,KAAK0nB,GAAAA,GAAAA,SACH,OAAO1nB,EAAAA,EAAAA,GAAE,oCACX,KAAK0nB,GAAAA,GAAAA,KACH,OAAO1nB,EAAAA,EAAAA,GAAE,0CACX,KAAK0nB,GAAAA,GAAAA,KACH,OAAO1nB,EAAAA,EAAAA,GAAE,kDACX,KAAK0nB,GAAAA,GAAAA,MACH,OAAO1nB,EAAAA,EAAAA,GAAE,mDACX,KAAK0nB,GAAAA,GAAAA,KACL,QACE,OAAO1nB,EAAAA,EAAAA,GAAE,8DAIf,SAAS2nB,GAAeC,GAAoD,IAAtBC,EAAsB,wDAC1E,MAAMC,EAAmB,IACpBF,KACCC,EAAe,CAACH,GAAAA,GAAAA,OAA0B,IAEhD,OAAOI,EAAiBjhB,KAAIyS,IAAO,CACjCyO,MAAOzO,EACPnX,OAAO6lB,EAAAA,GAAAA,IAAa1O,GACpB2O,QAASR,GAAenO,OAI5B,MAAM4O,GAAuB,IAAoC,IAAnC,SAACC,EAAD,KAAW9C,EAAX,MAAiBnlB,GAAkB,EAC/D,MAAMkoB,EAAU/C,GAAQqC,GAAAA,GAAAA,KAClBE,EAAW,IACX1nB,IAAUmoB,GAAAA,GAAAA,WAAmB,CAACX,GAAAA,GAAAA,OAA0B,GAC5DA,GAAAA,GAAAA,KACAA,GAAAA,GAAAA,IACAA,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,KACAA,GAAAA,GAAAA,MAGF,OACE,QAAC,KAAD,CAASY,SAAU,CAAC,yBAApB,SACG,QAAEC,WAAYV,GAAd,SACC,QAAC,KAAD,CACEW,SAAUC,GAAON,EAASM,EAAIV,OAC9B1oB,QAASsoB,GAAeC,EAAUC,GAClCE,MAAOK,EACPM,aAAc,CACZxQ,KAAM,SACNC,MAAM,QAAC,KAAD,CAAUD,KAAK,cApB3BgQ,GAAAA,YAAAA,uBA4BN,YClCA,SAASS,GAAT,GAeU,IAfS,QACjBvhB,EADiB,WAEjB4e,EAFiB,MAGjB9lB,EAHiB,mBAIjB0oB,EAJiB,YAKjBpC,EALiB,cAMjBqC,EANiB,OAOjBxG,EAPiB,SAQjBqE,EARiB,gBASjBD,EATiB,SAUjBqC,EAViB,QAWjBC,EAXiB,oBAYjBC,EAZiB,KAajB3D,EAbiB,aAcjB4D,GACQ,EACR,MAAM5H,EAAYgB,EAAOnK,KACnB2O,EHfD,SACLxF,EACAuH,EACA1oB,EACA8lB,GAEA,OAAO,SAAUxkB,EAAgC0nB,GAAmC,IAAbloB,EAAa,uDAAJ,GAC9E,MAAMmoB,EAAWP,EACbtC,GAAuB,GAAE9kB,IAASR,IAAUglB,IAC5C1E,EAAAA,EAAAA,IACG,4BAA2B9f,kBAAuBR,KAClD,4BAA2BQ,oBAAyBR,KACrDqgB,GAGN,IAAIngB,EACJ,OAAQM,GACN,KAAK6kB,GAAc+C,OACjBloB,GAAU8B,EAAAA,EAAAA,IACR,6IACA,CACEie,MACE,QAAC,IAAD,CAAchC,KAAK,0EAIzB,MACF,KAAKoH,GAAcgD,MACjBnoB,GAAUlB,EAAAA,EAAAA,GAAE,6DACZ,MACF,QACEkB,GAAUlB,EAAAA,EAAAA,GAAE,iCAGhB,OACE,0BACE,aAAGsa,MAAO,CAACgP,aAAc,QAAzB,UACE,2BAASH,OAEX,QAAC,GAAD,CACEnhB,IAAK4gB,EACL1oB,MAAOA,EACP8lB,WAAYA,KAEZkD,IAAe,sBAAIhoB,QG7BXqoB,CAAWlI,EAAWuH,EAAoB1oB,EAAO8lB,GAC3D7jB,EHkCD,SAAkBkf,EAAmBuH,GAC1C,OAAO,SAAUpnB,GAA6B,IAAbR,EAAa,uDAAJ,GACxC,MAAMwoB,EAAcC,IAAAA,CAAWjoB,GAS/B,OARaonB,GACT5oB,EAAAA,EAAAA,GAAG,QAAOwB,aACV8f,EAAAA,EAAAA,IACG,GAAEkI,sBACF,GAAEA,uBACHnI,IAGQrgB,GG7CF0oB,CAASrI,EAAWuH,GAI5Be,IAAkBd,GAAiBG,GAEnCY,EAAiB,IAAIvH,GAAQxb,IAAIgjB,GAAAA,EAAAA,KACjCC,EACJtD,IAAgBoC,GAAsBgB,EAAe9G,MAAK/B,KAAWA,MAAAA,IAAAA,EAAOgJ,UAGxEC,EACJpB,GAAsBgB,EAAe9G,MAAK/B,KAAUA,MAAAA,GAAAA,EAAOkJ,gBACvDC,EACJtB,GAAsBgB,EAAe9G,MAAK/B,GAASA,MAAAA,OAAJ,EAAIA,EAAOkJ,eACtDE,EACJvB,GAAsBgB,EAAe9G,MAAK/B,GAA2B,cAAlBA,MAAAA,OAAA,EAAAA,EAAO7Y,UAItD5I,GAAQ8qB,EAAAA,GAAAA,KACRC,GAAqBC,EAAAA,GAAAA,GAAU,eAAchrB,EAAMirB,YAAYC,WAE/DC,EAA6B,CACjC,CACEnR,IAAK,QACLnX,OAAOnC,EAAAA,EAAAA,GAAE,SACT0qB,QAASL,EACTM,SAAU,MACRC,EAAAA,GAAAA,GAAiB,CACfC,QAASpE,EAAgBJ,GAAcgD,OACvCyB,UAAW/B,EACX7nB,QAAS2lB,EAAQR,GAAcgD,OAAO,GACtC0B,YAAa5oB,EAAM,aAIzB,CACEmX,IAAK,gBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,iBACT0qB,QAASL,EACTM,SAAU,IAAMjE,EAAS,CAACqD,OAAO,KAEnC,CACEzQ,IAAK,WACLnX,OAAOnC,EAAAA,EAAAA,GAAE,oBACT0qB,QAASV,EACTW,SAAU,MACRC,EAAAA,GAAAA,GAAiB,CACfC,QAASpE,EAAgBJ,GAAc2E,UACvCF,UAAW,IAAMpE,EAAS,CAACuD,cAAc,IACzC/oB,QAAS2lB,EAAQR,GAAc2E,UAAU,GACzCD,YAAa5oB,EAAM,gBAIzB,CACEmX,IAAK,kBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,yBACT0qB,QAASR,EACTS,SAAU,MACRC,EAAAA,GAAAA,GAAiB,CACfC,QAASpE,EAAgBJ,GAAc4E,YACvCH,UAAW,IAAMpE,EAAS,CAACuD,cAAc,IACzC/oB,QAAS2lB,EAAQ,UAAU,EAAO,wBAClCkE,YAAa5oB,EAAM,SAAU,4BAInC,CACEmX,IAAK,YACLnX,OAAOnC,EAAAA,EAAAA,GAAE,6BACT0qB,QAASP,EACTQ,SAAU,MACRC,EAAAA,GAAAA,GAAiB,CACfC,QAASpE,EAAgBJ,GAAc6E,WACvCJ,UAAW,IAAMpE,EAAS,CAACxe,OAAQijB,GAAAA,GAAAA,aACnCjqB,QAAS2lB,EAAQR,GAAc6E,WAAW,GAC1CH,YAAa5oB,EAAM,iBAIzB,CACEmX,IAAK,SACLnX,OAAOnC,EAAAA,EAAAA,GAAE,UACTorB,SAAU,SACVT,SAAU,MACRC,EAAAA,GAAAA,GAAiB,CACfC,QAASpE,EAAgBJ,GAAc+C,QACvC0B,UAAWhC,EACXsC,SAAU,SACVlqB,QAAS2lB,EAAQR,GAAc+C,QAAQ,GACvC2B,YAAa5oB,EAAM,eAMrBkpB,EAAoB,IACpB1B,EAAgB,CAAC,SAAW,MAC5BG,EAAkB,GAAK,CAAC,kBAG9B,OACE,QAACwB,GAAD,WACGtC,GACC,QAAC,KAAD,CAAUppB,MAAOwH,EAASmkB,MAAO,CAACvC,GAAlC,SACG,IAA6C,IAA5C,SAAC/f,EAAD,gBAAWuiB,EAAX,WAA4BC,GAAgB,EAC5C,MAAMC,EAAkBziB,EAAS,GACjC,OACE,QAAC,GAAD,CACEwd,gBAAiBA,EACjBC,SAAUA,EACVF,YAAaA,EACbpf,QAASA,EACToD,OAAQ,CACNmc,cAAa+E,EAAgBC,eAAe,aACvCD,EAA4BpD,SAASlb,SAAS,YAEnDwZ,cAAe8E,EAAgBC,eAAe,iBACzCD,EAA4B9E,mBAC7B9kB,EACJoK,UAAWwf,EAAgBlmB,KAC3BqhB,QAAAA,EACA1kB,MAAAA,EACA2kB,iBAAkB0E,EAClBzE,oBAAqB0E,SAO/B,QAAC,GAAD,CACEhF,gBAAiBA,EACjBC,SAAUA,EACVF,YAAaA,EACbpf,QAASA,EACToD,OAAQ,CACNmc,aAAa,EACbC,cAAe,KACf1a,UAAW,KACX2a,QAAAA,EACA1kB,MAAAA,MAKN,QAAC,KAAD,CACEukB,SAAUA,EACVS,cAAeV,EAAgBJ,GAAcuF,QAC7CvE,eAAgBR,EAAQR,GAAcuF,QAAQ,GAC9CtE,aAAcnlB,EAAM,UACpBolB,UAAWf,KAEX6D,IACA,QAAC,KAAD,CAAc9C,UAAWuC,EAAiBpD,SAAUA,KAEpD2D,IACA,QAAC,KAAD,CACExpB,KAAK,SACL0mB,SAAUoC,EACVgB,SAAU5B,EACV5B,cAAeV,EAAgBJ,GAAcgD,OAC7CnoB,QAAS2lB,EAAQR,GAAcgD,OAAO,GACtC/B,aAAcnlB,EAAM,SACpBye,OAAO5gB,EAAAA,EAAAA,GAAE,yBAPX,UASGA,EAAAA,EAAAA,GAAE,YAGP,QAAC,KAAD,CACE6rB,MAAOpB,EACP/B,aAAc,CACZ,cAAc1oB,EAAAA,EAAAA,GAAE,sBAChBmY,MAAM,QAAC,MAAD,CAAcD,KAAK,OACzB4T,aAAa,EACb5T,KAAM,UAER6T,aAAcV,EACdW,YAAaxF,KAEf,QAAC,GAAD,CAAsBnB,KAAMA,EAAMnlB,MAAOA,EAAOioB,SAAUc,OAxMvDN,GAAAA,YAAAA,YA6MT,YAEM2C,IAAU,OAAO,MAAP,qBAAH,uBACUvT,GAAKA,EAAEzY,MAAMirB,YAAY0B,OADnC,uCAIUlU,GAAKA,EAAEzY,MAAMirB,YAAY2B,OAJnC,iCAQCloB,EAAAA,EAAAA,GAAM,GARP,sBAUJA,EAAAA,EAAAA,GAAM,IAVF,yE,+CCrOb,SAASwP,GAAT,GAKU,IALO,UACf2Y,EADe,YAEfze,EAFe,oBAGf0e,EAHe,oBAIfC,GACQ,EACR,OACE,QAAC,EAAA/Q,SAAD,UACG+Q,GACC,QAAC,EAAA/Q,SAAD,YACE,QAACgR,GAAD,WAAgBtsB,EAAAA,EAAAA,GAAE,cAClB,QAACusB,GAAD,WAA0BvsB,EAAAA,EAAAA,GAAE,yBAC5B,QAACwsB,GAAD,WAAiBxsB,EAAAA,EAAAA,GAAE,kBAGrB,QAAC,EAAAsb,SAAD,YACE,QAACmR,GAAD,CAAoBrM,UAAU,gCAA9B,UACE,QAACsM,GAAD,YACE,QAACC,GAAD,WAAsB3sB,EAAAA,EAAAA,GAAE,YACO,QAA9BmsB,EAAUS,SAASC,SAClB,QAACC,GAAD,CACEC,OAAwB,QAAhBrf,EACRmL,QAAS,IAAMuT,EAAoB,OAFrC,UAIGpsB,EAAAA,EAAAA,GAAE,UAGP,QAAC8sB,GAAD,CACEC,OAAwB,SAAhBrf,EACRmL,QAAS,IAAMuT,EAAoB,QAFrC,SAIGD,EAAUS,SAASC,SAAU7sB,EAAAA,EAAAA,GAAE,kBAItC,QAACgtB,GAAD,WAAqBhtB,EAAAA,EAAAA,GAAE,aACvB,QAACgtB,GAAD,WAAqBhtB,EAAAA,EAAAA,GAAE,YACvB,QAACitB,GAAD,CAAgB7M,UAAU,sBAA1B,UACE,QAAC,KAAD,WAAgBpgB,EAAAA,EAAAA,GAAE,qBAtCrBwT,GAAAA,YAAAA,UA8CT,YAEMiZ,IAAqB,OAAO,MAAP,qBAAH,4BAEPzoB,EAAAA,EAAAA,GAAM,GAFC,kBAGNA,EAAAA,EAAAA,GAAM,GAHA,6FAgBlB0oB,IAAc,OAAO,MAAP,qBAAH,sCAIXC,IAAsB,OAAOO,GAAAA,EAAP,qBAAH,iCAInBJ,IAAc,OAAO,IAAP,qBAAH,gCAEC9oB,EAAAA,EAAAA,GAAM,GAFP,sCAQJ+T,GAAMA,EAAEgV,OAAShV,EAAEzY,MAAM6tB,UAAYpV,EAAEzY,MAAMioB,UARzC,MAYXyF,IAAqB,OAAOE,GAAAA,EAAP,qBAAH,yGAMVlpB,EAAAA,EAAAA,GAAM,GANI,wBAQD+T,GAAKA,EAAEzY,MAAMirB,YAAYC,QARxB,kBAalByC,IAAiB,OAAO,MAAP,qBAAH,qEAIHjpB,EAAAA,EAAAA,GAAM,GAJH,kBAKFA,EAAAA,EAAAA,GAAM,GALJ,KASdsoB,IAAgB,OAAOY,GAAAA,EAAP,qBAAH,aACLlpB,EAAAA,EAAAA,GAAM,GADD,KAEf+T,GAAKA,EAAEzY,MAAM8tB,kBAFE,mCAKIrV,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAL7B,mBAUbM,IAA0B,OAAOW,GAAAA,EAAP,qBAAH,aACflpB,EAAAA,EAAAA,GAAM,GADS,KAEzB+T,GAAKA,EAAEzY,MAAM8tB,kBAFY,mCAKNrV,GAAKA,EAAEzY,MAAMirB,YAAY0B,OALnB,mBAUvBO,IAAiB,OAAOU,GAAAA,EAAP,qBAAH,aACNlpB,EAAAA,EAAAA,GAAM,GADA,qCAKG+T,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAL5B,iCC7FpB,MAAMoB,WAAyBhW,EAAAA,UAAwB,uDACtC,CACbmP,aAAa,EACbqC,eAAe,EACfyE,cAAc,EACd1E,oBAAoB,EACpB2E,YAAa,IAAI/gB,OANkC,uBAiB1CghB,GAAAA,EAAAA,QAA0B,IAAMhe,KAAKie,kCAA6B3rB,KAjBxB,uCAgE1B+qB,GAClBrd,KAAKqI,MAAMuU,oBAAoBS,MAjEa,gCAoElC,KACjBrd,KAAKwN,SAAS,CAAC4L,oBAAoB,QArEgB,4BAwErCzoB,IACd,MAAM,UAACgsB,EAAD,IAAY3tB,EAAZ,aAAiB+H,EAAjB,MAA+BrG,EAA/B,eAAsCwtB,EAAtC,cAAsDC,GAC1Dne,KAAKqI,MACDjY,EAAQ2G,EAAaf,KACrBooB,EAA4BrnB,EAAa+hB,SAASlb,SACtD,6BAGFoC,KAAKqe,sBAAqBC,IAEnBF,IACHlsB,EAAAA,GAAAA,KAAkB1B,EAAAA,EAAAA,GAAE,qBAGF,KAAhBG,MAAAA,OAAA,EAAAA,EAAM4pB,SACR2D,MAAAA,GAAAA,EAAiBI,MAAAA,EAAAA,EAAW,KAG9BH,MAAAA,GAAAA,EAAgBG,MAAAA,EAAAA,EAAW,IAQ3B,MAAMC,EAAqB,CAAC5gB,QAASgf,EAAUljB,WAE/C+kB,EAAAA,GAAAA,IACExvB,EACA,CACEoB,MAAAA,EACAkuB,QAAAA,EACA3tB,KAAAA,EACAD,MAAAA,EACA+tB,YAAa9B,EAAU+B,gBACpBH,KACA5B,EAAUS,UAEf,CACExZ,SAAU,KACHwa,IACHltB,EAAAA,GAAAA,gBAlHyC,4BA0HtC,KACb,MAAM,UAACyrB,EAAD,IAAY3tB,EAAZ,aAAiB+H,EAAjB,MAA+BrG,EAA/B,SAAsC4oB,GAAYtZ,KAAKqI,MACvDjY,EAAQ2G,EAAaf,KAE3BgK,KAAKqe,sBAAqBC,KACxBK,EAAAA,GAAAA,IACE3vB,EACA,CACEoB,MAAAA,EACAkuB,QAAAA,EACA5tB,MAAAA,EACAiN,QAASgf,EAAUljB,SACnBglB,YAAa9B,EAAU+B,gBACpB/B,EAAUS,UAEf,CACExZ,SAAU,KACR0V,cA3I2C,2BAkJvC,KACZ,MAAM,UAACqD,EAAD,IAAY3tB,EAAZ,aAAiB+H,EAAjB,MAA+BrG,GAASsP,KAAKqI,MAC7CjY,EAAQ2G,EAAaf,KAE3BgK,KAAKqe,sBAAqBC,KACxBM,EAAAA,GAAAA,IACE5vB,EACA,CACEoB,MAAAA,EACAkuB,QAAAA,EACA5tB,MAAAA,EACAiN,QAASgf,EAAUljB,SACnBglB,YAAa9B,EAAU+B,gBACpB/B,EAAUS,UAEf,WAjK+C,6BA0KpCprB,IACf,MAAM6sB,EAAgBb,GAAAA,EAAAA,iBAEtB,OAAQhsB,GACN,KAAK6kB,GAAce,QACnB,KAAKf,GAAc6E,UACnB,KAAK7E,GAAcuF,OACnB,KAAKvF,GAAc4E,WAAY,CAC7B,MAAM,aAACqC,GAAgB9d,KAAKoI,MAC5B,OAAO0V,GAAgBe,EAAcnW,KAAO,EAE9C,KAAKmO,GAAc2E,SACjB,OAAOqD,EAAcnW,KAAO,EAC9B,KAAKmO,GAAcgD,MACnB,KAAKhD,GAAc+C,OACnB,QACE,OAAO,MAjLb9G,oBACE9S,KAAKie,4BAGPxQ,wBACEqR,EAAAA,GAAAA,GAAe9e,KAAK+e,UAKtBV,qBAAqBjQ,GACnB,IAAI2P,EAEJ,GAAI/d,KAAKoI,MAAMgR,mBACb2E,OAAczrB,MACT,CACL,MAAM0sB,EAAYhB,GAAAA,EAAAA,iBAClBD,EAAc/d,KAAKqI,MAAM4W,SAASxkB,QAAOykB,GAAUF,EAAU5rB,IAAI8rB,KAGnE9Q,EAAS2P,GAET/d,KAAKmf,cAGPA,cACEnB,GAAAA,EAAAA,cACAhe,KAAKwN,SAAS,CAAC4L,oBAAoB,IAIrC6E,4BACE,MACMxkB,EAAW,IADAukB,GAAAA,EAAAA,kBAEd3mB,KAAIjI,GAAMirB,GAAAA,EAAAA,IAAejrB,KACzBqL,QAAQ2kB,MAA6BA,IAASA,EAAMzhB,WACpDtG,KAAI+nB,GAASA,EAAMzhB,QAAQ3H,OAExBqpB,EAAeC,IAAAA,CAAK7lB,GAKpB+f,EAA8C,IAAxB6F,EAAa3kB,OAAe2kB,EAAa,QAAK/sB,EAE1E0N,KAAKwN,SAAS,CACZsQ,aAAcE,GAAAA,EAAAA,cACd3E,cAAe2E,GAAAA,EAAAA,gBACfhH,YAAagH,GAAAA,EAAAA,cACb5E,oBAAoB,EACpB2E,YAAaC,GAAAA,EAAAA,iBACbxE,oBAAAA,IA0GJ+F,kBACEvB,GAAAA,EAAAA,kBAsBFnX,SACE,MAAM,kBACJ2Y,EADI,WAEJhJ,EAFI,MAGJ9lB,EAHI,YAIJwN,EAJI,UAKJye,EALI,aAMJ5lB,EANI,2BAOJ0oB,GACEzf,KAAKqI,OAEH,mBACJ+Q,EADI,YAEJpC,EAFI,aAGJ8G,EACAC,YAAalL,EAJT,cAKJwG,EALI,oBAMJG,GACExZ,KAAKoI,MAEHyJ,EAAYgB,EAAOnK,KAEzB,OACE,QAACgX,GAAD,YACE,QAACC,GAAD,YACE,QAACC,GAAD,CAAiB/C,oBAAqB4C,EAAtC,UACE,QAAC,KAAD,CACEzG,SAAUhZ,KAAKuf,gBACfM,QAAS/B,EACT/F,SAAU0H,OAGZA,IACA,QAAC,GAAD,CACE5J,KAAM7V,KAAKqI,MAAMwN,KACjB4D,aAAczZ,KAAKqI,MAAMoR,aACzB7hB,QAASb,EAAaf,KACtBwgB,WAAYA,EACZ9lB,MAAOA,EACPmiB,OAAQA,EACRuG,mBAAoBA,EACpBpC,YAAaA,EACbqC,cAAeA,EACfG,oBAAqBA,EACrBvC,gBAAiBjX,KAAK2X,cACtB2B,SAAUtZ,KAAK8f,aACfvG,QAASvZ,KAAK+f,YACd7I,SAAUlX,KAAKggB,gBAGnB,QAAC,GAAD,CACEpD,oBAAqB5c,KAAKigB,wBAC1BjJ,YAAaA,EACb2F,UAAWA,EACXze,YAAaA,EACb2e,oBAAqB4C,QAGvBD,GAAqB1B,IACrB,QAACoC,GAAD,UACG9G,EACC5C,GAAcC,IACZjjB,EAAAA,EAAAA,IACE,wEACA,CACE2sB,MAAOxJ,MAIXnjB,EAAAA,EAAAA,IAAI,4DAA6D,CAC/D2sB,MAAO3J,KAIX,QAAC,EAAA1K,SAAD,YACGgG,EAAAA,EAAAA,IACC,kCACA,mCACAD,IAEF,QAACuO,GAAD,CAAe/W,QAASrJ,KAAKqgB,iBAA7B,SACG7J,GAAcC,IACXjjB,EAAAA,EAAAA,IACE,gEACA,CACE2sB,MAAOxJ,MAGXnjB,EAAAA,EAAAA,IAAI,0DAA2D,CAC7D2sB,MAAO3J,eAtRzBqH,GAAAA,YAAAA,mBAkSN,MAAM6B,IAAS,OAAO,MAAP,qBAAH,4BAECnX,GAAKA,EAAEzY,MAAM4c,OAAO4T,WAAWC,cAFhC,cAMNZ,IAAa,OAAO,MAAP,qBAAH,mEAICnrB,EAAAA,EAAAA,GAAM,GAJP,oBAKIA,EAAAA,EAAAA,GAAM,GALV,mCAOA+T,GAAKA,EAAEzY,MAAM0wB,qBAPb,sBAQMjY,GAAKA,EAAEzY,MAAM0Y,QARnB,mCAUGD,GAAKA,EAAEzY,MAAM2wB,cAVhB,KAUgClY,GAAKA,EAAEzY,MAAM2wB,cAV7C,4BAcVb,IAAkB,OAAO,MAAP,qBAAH,iBACHprB,EAAAA,EAAAA,GAAM,GADH,wEAOjB+T,GAAKA,EAAEsU,qBAAuB,WAPb,KAUfqD,IAAkB,OAAO,MAAP,sBACpB3X,IAAKmY,EAAAA,GAAAA,GAAY,CAAC5wB,MAAOyY,EAAEzY,MAAOuB,KAAM,UAAWsvB,QAAQ,EAAM7R,QAAQ,KADxD,sEAKRta,EAAAA,EAAAA,GAAM,IALE,KAKMA,EAAAA,EAAAA,GAAM,KALZ,sDASN+T,GAAKA,EAAEzY,MAAMiZ,gBATP,kCAYRR,GAAKA,EAAEzY,MAAM8wB,WAZL,yBAiBfR,IAAgB,OAAO,IAAP,qBAAH,gBACF5rB,EAAAA,EAAAA,GAAM,GADJ,KAMnB,IAAeqsB,EAAAA,GAAAA,GAAQhD,I,uPC7WvB,SAASiD,GAAT,GAUU,IAVgB,aACxB/pB,EADwB,YAExBoe,EAFwB,MAGxBzkB,EAHwB,iBAIxBqwB,EAJwB,KAKxBlL,EALwB,gBAMxBmL,EANwB,SAOxBC,EAPwB,eAQxBC,EARwB,KASxBC,GACQ,EACR,OACE,QAAC,EAAArV,SAAD,WACE,QAACsV,GAAD,YACE,QAAC,KAAD,YACE,QAAC,KAAD,KACA,QAAC,KAAD,KACA,QAAC,KAAD,CAAgBC,cAAc,aAEhC,QAAC,KAAD,CACEtqB,aAAcA,EACdrG,MAAOA,GAAS,GAChBmlB,KAAMA,EACNoL,SAAUA,EACVlJ,SAAUgJ,EACVO,oBAAkB,EAClBC,cAAeJ,EACfD,eAAgBA,EAChB/L,YAAaA,EACb6L,gBAAiBA,SA7BlBF,GAAAA,YAAAA,mBAoCT,MAAMM,IAAkB,OAAO,MAAP,qBAAH,qBAEZ5sB,EAAAA,EAAAA,GAAM,GAFM,8BAIFA,EAAAA,EAAAA,GAAM,GAJJ,wFAOE+T,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAP3B,4CAYrB,M,+WC7CA,SAAS+E,GAAT,GASU,IATc,SACtBC,EADsB,aAEtB1qB,EAFsB,gBAGtB2qB,EAHsB,oBAItBC,EAJsB,oBAKtBC,EALsB,MAMtBlxB,EANsB,WAOtB8lB,EAPsB,KAQtBX,GACQ,EACR,MAAMV,EAAcuM,EAAgBvqB,MAClC8e,GAAUA,EAAOvlB,QAAUA,GAASulB,EAAOJ,OAASA,IAEhDgM,EAAmB1M,EACrBA,EAAYG,SACT,iBAAgBH,EAAY/lB,KAC5B,gBAAe+lB,EAAY/lB,KAC9B,GAEES,GAAmCiyB,EAAAA,EAAAA,UAAQ,KAC/C,MAAMpO,EAAgBgO,EAAgBjnB,QAAOwb,IAAWA,EAAOX,WACzDyM,EAAiBL,EAAgBjnB,QACrCwb,GAAUA,EAAOX,WAAaW,EAAOb,UAA6B,kBAAjBa,EAAOvlB,QAG1D,SAASsxB,EAAgB/L,EAAQgM,GAC/B,MAAO,CACL1J,MAAQ,GAAE0J,KAAahM,EAAO7mB,KAC9BuD,MAAOsjB,EAAOxmB,KACdyyB,SACE,QAACC,GAAD,WACGlM,EAAOvlB,MACN,OAAUF,EAAAA,EAAAA,GAAE,aAAYgoB,EAAAA,GAAAA,IAAavC,EAAOJ,WAGlD4C,SACE,QAAC,EAAA3M,SAAD,WACI,GAAEmK,EAAOxmB,WACX,QAAC2yB,GAAD,UAAqBnM,EAAOvlB,QAC1B,OACDF,EAAAA,EAAAA,GAAE,WACFgoB,EAAAA,GAAAA,IAAavC,EAAOJ,SAGzBwM,eAAgB,CAACC,MAAO,SACnBrM,EAAOb,WACTa,EAAOX,UAAY,CAClBhD,eACE,QAAC,KAAD,CACEvb,aAAcA,EACdwrB,OAAQ,CAAC,aACTC,uBAAuB,EAHzB,UAKE,QAAC,KAAD,CACElH,UAAW,IAAMsG,EAAoB3L,GACrCvkB,SAASlB,EAAAA,EAAAA,GAAE,sDACXiyB,iBAAe,EAHjB,UAKE,QAACC,GAAD,CACEC,YAAU,EACVha,MAAM,QAAC,MAAD,IACN,cAAYnY,EAAAA,EAAAA,GAAE,UACdkY,KAAK,cAMjBka,6BAA6B,GAIjC,MAAMC,EAAyC,GAkB/C,OAhBInP,EAAchZ,OAAS,GACzBmoB,EAAcriB,KAAK,CACjB+X,MAAO,iBACP5lB,OAAOnC,EAAAA,EAAAA,GAAE,kBACTX,QAAS6jB,EAAcrc,KAAI4e,GAAU+L,EAAgB/L,EAAQ,oBAI7D8L,EAAernB,OAAS,GAC1BmoB,EAAcriB,KAAK,CACjB+X,MAAO,kBACP5lB,OAAOnC,EAAAA,EAAAA,GAAE,wBACTX,QAASkyB,EAAe1qB,KAAI4e,GAAU+L,EAAgB/L,EAAQ,qBAI3D4M,IACN,IA0BG7J,GAAWtP,EAAAA,EAAAA,cACfoZ,IACE,MAAMC,EAAYrB,EAAgBvqB,MAAK6rB,GACrCA,EAAE1N,SACG,iBAAgB0N,EAAE5zB,OAAS0zB,EAAOvK,MAClC,gBAAeyK,EAAE5zB,OAAS0zB,EAAOvK,QAExCwK,GAAapB,EAAoBoB,KAEnC,CAACrB,EAAiBC,IAGpB,OACE,QAACsB,GAAD,CACEC,aAAa,KACbpN,QAvCY,QAAC,MAACzN,EAAD,IAAQ8D,GAAT,SACd,QAACgX,GAAD,CACEhX,IAAKA,KACD9D,EACJoZ,SAAUA,EACVkB,YAAU,EACV/G,SAAS,OACTlT,KAAK,OANP,SAQG+Y,GACC,QAAC,EAAA3V,SAAD,YACE,0BAAOqJ,EAAcA,EAAY1lB,MAAOe,EAAAA,EAAAA,GAAE,iBAA1C,QACC4yB,EAAAA,GAAAA,IAAQ5M,IAAeA,EAAa,IACnC,QAAC,KAAD,WACE,QAAC,KAAD,CAAY6M,YAAU,EAAClD,MAAO3J,EAAY8M,IAAK,YAKrD9yB,EAAAA,EAAAA,GAAE,qBAqBJX,QAASA,EACT0oB,MAAOsJ,EACPJ,SAAUA,EACVzI,SAAUA,EACVuK,QAAS,EACTC,cAAe,MA1IZhC,GAAAA,YAAAA,iBA+IT,YAEMyB,IAAsB,OAAOQ,GAAAA,EAAP,sBAAH,8FAMAlb,GAAMA,EAAEkZ,SAAWlZ,EAAEzY,MAAMytB,OAAS,eANpC,KASnB4F,IAAwB,OAAOO,GAAAA,EAAP,sBAAH,qEAIhBnb,GAAMA,EAAEkZ,SAAWlZ,EAAEzY,MAAM6tB,UAAYpV,EAAEzY,MAAM6zB,SAJ/B,oCAMdnvB,EAAAA,EAAAA,GAAM,GANQ,qBASd+T,GAAKA,EAAEzY,MAAM6tB,WATC,MAarBwE,IAAU,OAAO,OAAP,sBAAH,gBACI5Z,GAAKA,EAAEzY,MAAMoV,KAAK0e,YADtB,eAEErb,GAAKA,EAAEzY,MAAM+zB,oBAFf,qBAITtb,GAAKA,EAAEzY,MAAM8tB,kBAJJ,KAOPwE,IAAqB,OAAO,OAAP,sBAAH,UACb7Z,GAAKA,EAAEzY,MAAM6zB,SADA,oCAGPpb,GAAKA,EAAEzY,MAAMoV,KAAK0e,YAHX,KAMlBlB,IAAe,OAAOhQ,EAAAA,GAAP,sBAAH,UACPnK,GAAKA,EAAEzY,MAAM6zB,SADN,2BAGLnvB,EAAAA,EAAAA,GAAM,GAHD,oBAML+T,GAAKA,EAAEzY,MAAMgN,OANR,MChLlB,SAASgnB,GAAT,GAcU,YAde,aACvB/sB,EADuB,MAEvBrG,EAFuB,KAGvBmlB,EAHuB,WAIvBW,EAJuB,YAKvBuN,EALuB,eAMvBC,EANuB,iBAOvBC,EAPuB,oBAQvBtC,EARuB,oBASvBC,EATuB,gBAUvBF,EAVuB,OAWvBwC,EAXuB,uBAYvBC,EAZuB,mBAavBC,GACQ,EACR,MAAM,SAAC3qB,IAAY4qB,EAAAA,GAAAA,KACbC,GAAOC,EAAAA,GAAAA,IAAQxtB,GACfytB,EAAcL,EAChBG,EACAA,EAAK7pB,QAAO,QAAEgqB,GAAF,SAAWA,IAAQ5L,GAAAA,GAAAA,gBAC7B6L,GAAwBF,EAAYlR,MAAK,QAAEqR,GAAF,SAAgBA,IAAaj0B,MAErEyJ,OAAQpC,EAAG6sB,KAAMC,KAAOC,GAAzB,UAAuCZ,MAAAA,GAAvC,UAAuCA,EAAQtjB,gBAA/C,aAAuC,EAAkBlQ,aAAzD,QAAkE,GAClEq0B,EACJD,EAAWjP,OAASqC,GAAAA,GAAAA,WAAyB5lB,EAAYwyB,EAAWjP,KAahEmP,EAAmBvrB,EAASgB,QAAO,QAAC,GAACrL,GAAF,SACvCg1B,EAAmBxmB,SAASqnB,OAAO71B,OAGrC,OACE,QAAC,MAAD,CAAe81B,cAAY,EAA3B,WACE,QAAC,MAAD,WACE,QAACC,GAAD,WAAoB30B,EAAAA,EAAAA,GAAE,eAExB,QAAC,MAAD,WACE,QAAC,MAAD,CAAW40B,IAAK,EAAhB,UACE,QAAC,KAAD,CACE1c,KAAK,QACL,eAAa,YACb0I,MACE4S,GACIxzB,EAAAA,EAAAA,GAAE,4BACFA,EAAAA,EAAAA,GAAE,4BAERmY,KAAMqb,GAAiB,QAAC,MAAD,CAAWtb,KAAK,QAAU,QAAC,MAAD,CAAUA,KAAK,OAChEW,QAAS,IAAM4a,GAAkBD,GACjC,cAAYxzB,EAAAA,EAAAA,GAAE,mCAIpB,QAAC60B,GAAD,CAAkC5rB,SAAUurB,KAC5C,QAAC,MAAD,CAAsBM,YAAU,EAAhC,UACGd,EAAYntB,KACX,IAAmE,UAAjEstB,GAAWl1B,KAAM81B,EAAP,aAAkBC,EAAlB,iBAAgCC,IAAuB,EACjE,MAAMjT,EAAK,CACT9hB,MAAO,IACFo0B,EACHp0B,MAAOi0B,EACP9O,KAAM8O,IAAa9L,GAAAA,GAAAA,WAAmBX,GAAAA,GAAAA,MAAyB6M,GAEjElkB,SAAW,kBAAiB9J,EAAaf,gBAG3C,OACE,cAAmB4a,UAAWlgB,IAAUi0B,EAAW,SAAW,GAA9D,UACE,QAAC,KAAD,CAAMnS,GAAIA,EAAInJ,QAAS,IAnDrC,SAAuBsb,GAEjBA,IAAa9L,GAAAA,GAAAA,YAAoBnoB,IAAUmoB,GAAAA,GAAAA,aAC7C6M,EAAAA,GAAAA,IAAoB,CAClBC,SAAU,oBACVC,UAAW,oBACXC,gBAAiB9uB,EAAa3H,KA6CO02B,CAAcnB,GAA3C,UACE,QAAC,KAAD,CACEvT,MAAOoU,EACPO,SAAS,SACTC,YAAaP,EACbnD,MAAO,IAJT,UAMGiD,EAAW,KACX,UAAAxB,EAAYY,UAAZ,eAAuBxE,OAAQ,IAC9B,QAAC,KAAD,CACE9uB,KACEszB,IAAa9L,GAAAA,GAAAA,YACbkL,EAAYY,GAAWxE,MAAQ,EAC3B,SACA,UALR,UAQE,QAAC,KAAD,CACEkD,YAAU,EACVlD,MAAO4D,EAAYY,GAAUxE,MAC7BmD,IAAKS,EAAYY,GAAU3qB,QAAUisB,GAAAA,GAAgB,cArBxDtB,OA+Bf,QAAC,GAAD,CACE5tB,aAAcA,EACdrG,MAAOA,EACPmlB,KAAMA,EACN6L,gBAAiBA,EACjBC,oBAAqBA,EACrBC,oBAAqBA,EACrBH,SAAUiD,EACVlO,WAAYA,UAnHbsN,GAAAA,YAAAA,kBA0HT,YAEMqB,IAAoB,OAAOe,GAAAA,GAAP,sBAAH,eACP1xB,EAAAA,EAAAA,GAAM,IADC,KAIjB6wB,IAAmC,OAAOc,GAAAA,EAAP,sBAAH,gCAEtB3xB,EAAAA,EAAAA,GAAM,GAFgB,mBAGnBA,EAAAA,EAAAA,GAAM,GAHa,wBAKf+T,GAAKA,EAAEzY,MAAMirB,YAAYqL,QALV,iBAMpB5xB,EAAAA,EAAAA,GAAM,GANc,sB,iVCjItC,MAAM6xB,WAA2Bxe,EAAAA,UAAwB,uDAGxC,CACbnX,MAAO,GACPijB,WAAW,EACX4E,MAAOvY,KAAKqI,MAAMkQ,MAClB+N,UAAWtmB,KAAKqI,MAAMkQ,SAP+B,kBA0BjD,IAAItpB,EAAAA,KA1B6C,iCA4BnC,KAClB,MAAM,IAACs3B,EAAD,eAAMrF,GAAkBlhB,KAAKqI,OAC7B,UAACie,GAAatmB,KAAKoI,MAErBme,EAAIC,SAAWD,EAAIE,YAIlBzmB,KAAKhR,MAIVgR,KAAKwN,SAAS,CACZmG,WAAW,IAGbuN,EAAeqF,EAAIzc,IAAKwc,GACrB/xB,MAAKoF,IACJqG,KAAKwN,SAAS,CACZmG,WAAW,EACX9jB,QAAS0N,OAAOC,OAAO7D,GAAMtC,KAC3B,QAAC,MAACkhB,GAAF,QAAsC,CACpCA,MAAAA,EACA5lB,MAAO4lB,WAKdhoB,OAAM,MAILjB,EAAAA,GAAAA,KACEkE,EAAAA,EAAAA,IAAI,8CAA+C,CACjDkzB,QAASJ,aA9DoC,iCAoElCzc,IACnB,MAAM0O,EAAQ1O,EAAEuC,OAAOmM,MACvBvY,KAAKwN,SAAS,CACZ8Y,UAAW/N,IAEbvY,KAAK2mB,oBAAoBpO,OAzE4B,kCA4EjCrb,IAAAA,EAASgI,IAC7BlF,KAAK4mB,aAAa1hB,KACjB,OA9EoD,8BAgFtC,KACXlF,KAAKqI,MAAMke,IAAIE,YAInBzmB,KAAKwN,SACH,CACEmG,WAAW,GAEb3T,KAAK6mB,uBAzF8C,kCA6FjCC,IACpB,MAAMvO,EAAQuO,EAAWA,EAASvO,MAAQ,KAC1CvY,KAAK4mB,aAAarO,OA/FmC,uCAkG5BA,IACzBvY,KAAKwN,SACH,CACE8Y,UAAW/N,GAEbvY,KAAK6mB,uBAvG8C,4BA2GvCtO,IACd,MAAM,SAACI,EAAD,IAAW4N,GAAOvmB,KAAKqI,MAE7BrI,KAAKwN,SACH,CACE+K,MAAAA,IAEF,KACEI,GAAYA,EAAS4N,EAAKhO,SAzGhCwO,iCAAiCC,GAC3BA,EAAUzO,QAAUvY,KAAKoI,MAAMmQ,OACjCvY,KAAKwN,SAAS,CACZ+K,MAAOyO,EAAUzO,MACjB+N,UAAWU,EAAUzO,QAK3B9K,uBACOzN,KAAKhR,KAGVgR,KAAKhR,IAAI6O,QAiGXgJ,SACE,MAAM,IAAC0f,GAAOvmB,KAAKqI,OACb,QAACxY,EAAD,UAAU8jB,GAAa3T,KAAKoI,MAElC,OACE,QAAC,KAAD,CAAgBgJ,MAAOmV,EAAIzc,IAA3B,YACKyc,EAAIC,UACL,QAAC,KAAD,CAAOjO,MAAOvY,KAAKoI,MAAMke,UAAWtN,SAAUhZ,KAAKinB,qBAGnDV,EAAIC,UACJ,QAAC,KAAD,CACEU,WAAS,EACT,aAAYX,EAAIzc,IAChBqd,YAAY,KACZC,eAAgB,KAAM52B,EAAAA,EAAAA,GAAE,YACxB+nB,MAAOvY,KAAKoI,MAAMmQ,MAClBS,SAAUhZ,KAAKqnB,mBACf1T,UAAWA,EACX2T,cAAetnB,KAAKunB,wBACpBC,QAASxnB,KAAKynB,eACdC,cAAe/T,GAAYnjB,EAAAA,EAAAA,GAAE,aAAmBA,EAAAA,EAAAA,GAAE,oBAClDX,QACE02B,EAAIE,WACAF,EAAI/oB,QACJ+oB,EAAI/oB,OAAOnG,KAAIkhB,IAAS,CACtBA,MAAAA,EACA5lB,MAAO4lB,MAET1oB,QArJZw2B,GAAAA,YAAAA,sB,OAAAA,GAAAA,eApBe,CACnB9N,MAAO,KAiLT,YC9JA,MAAMoP,WAAyB9f,EAAAA,UAAwB,uDAOtC,CACb+f,UAAUC,EAAAA,GAAAA,GAAW7nB,KAAKqI,MAAM3X,OAChCo3B,YAAYD,EAAAA,GAAAA,GAAW7nB,KAAKqI,MAAM3X,OAAOq3B,UATU,2BA0BvC,CAACxB,EAAUhO,KACvB,MAAMyP,EAAW,IAAIhoB,KAAKoI,MAAMwf,UAC5BrP,EACFyP,EAASzB,EAAIzc,KAAOyO,SAEbyP,EAASzB,EAAIzc,KAGtB9J,KAAKwN,SACH,CACEoa,SAAUI,GAEZhoB,KAAKioB,mBAtC4C,4BA0CrCC,IACdloB,KAAKwN,SAAS,CAACsa,WAAYI,EAAI9b,OAAOmM,YA3Ca,kCA8C/B2P,IACpBA,GAAOA,EAAI7Z,iBAEX,MAAM8Z,EAAc,IACfnoB,KAAKoI,MAAMwf,SACdG,OAAQ/nB,KAAKoI,MAAM0f,YAGrB9nB,KAAKwN,SACH,CACEoa,SAAUO,GAEZnoB,KAAKioB,mBA1D4C,6BA8DrC,KACd,MAAMv3B,GAAQ03B,EAAAA,GAAAA,GAAWpoB,KAAKoI,MAAMwf,UACpC5nB,KAAKqI,MAAM4f,eAAiBjoB,KAAKqI,MAAM4f,cAAcv3B,OAhEF,6BAmErC,KACdsP,KAAKwN,SACH,CACEsa,WAAY,IAEd9nB,KAAKqoB,uBA5DTC,0BAA0BtB,GAGxB,MAAMt2B,GAAQ03B,EAAAA,GAAAA,GAAWpoB,KAAKoI,MAAMwf,UAEpC,IAAK1U,IAAAA,CAAQ8T,EAAUt2B,MAAOA,GAAQ,CACpC,MAAMk3B,GAAWC,EAAAA,GAAAA,GAAWb,EAAUt2B,OACtCsP,KAAKwN,SAAS,CACZoa,SAAAA,EACAE,WAAYF,EAASG,UAuD3BlhB,SACE,MAAM,QAAC+L,EAAD,eAAUsO,EAAV,KAA0BC,GAAQnhB,KAAKqI,MAC7C,OACE,QAACkgB,GAAD,UACG3V,GACC,QAAC,KAAD,KAEA,QAAC,EAAA9G,SAAD,YACE,QAAC,KAAD,CAAgBsF,OAAO5gB,EAAAA,EAAAA,GAAE,QAAzB,WACE,gBAAMg4B,SAAUxoB,KAAKqoB,mBAArB,WACE,QAAC,KAAD,CACElB,aAAa32B,EAAAA,EAAAA,GAAE,sCACfwoB,SAAUhZ,KAAKyoB,aACflQ,MAAOvY,KAAKoI,MAAM0f,aAEnB9nB,KAAKoI,MAAM0f,aACV,QAACY,GAAD,CAAiBhgB,KAAK,KAAKW,QAASrJ,KAAK2oB,oBAG7C,QAACC,GAAD,OAGDvxB,IAAAA,CAAI8pB,GAAMoF,IACT,QAAC,GAAD,CACEhO,MAAOvY,KAAKoI,MAAMwf,SAASrB,EAAIzc,KAE/Byc,IAAKA,EACL5N,SAAU3Y,KAAK6oB,YACf3H,eAAgBA,GAHXqF,EAAIzc,aArGnB6d,GAAAA,YAAAA,oB,OAAAA,GAAAA,eACgC,CAClCxG,KAAM,GACNzwB,MAAO,GACPu3B,cAAe,eA8GnB,YAEMM,IAAgB,OAAO,MAAP,qBAAH,wEAMbG,IAAkB,OAAOI,EAAAA,EAAP,qBAAH,+DAKVvgB,GAAKA,EAAEzY,MAAMi5B,SALH,mBAQRxgB,GAAKA,EAAEzY,MAAMk5B,SARL,MAYfJ,IAAW,OAAO,KAAP,qBAAH,WACFp0B,EAAAA,EAAAA,GAAM,GADJ,8BAEY+T,GAAKA,EAAEzY,MAAMm5B,aAFzB,KC1FRC,GAAehR,GAAAA,GAAAA,KAEfiR,GAA6B,MAE7BC,GAA+B,IAAIpsB,IAAI,CAAC,MAAO,MAAO,SAqE5D,MAAMqsB,WAA0BxhB,EAAAA,UAAwB,oEACvC7H,KAAKspB,oBADkC,wLAkI7B,IAAIC,GAAAA,EAAclP,GAAAA,KAlIW,iCAgLlC,KAClB,MAAM,UAACsC,GAAa3c,KAAKqI,MAEnBrN,EAAyB,CAC7B2C,QAASgf,EAAUljB,SACnBglB,YAAa9B,EAAU+B,aACvBhuB,MAAOsP,KAAKwpB,cACT7M,EAAUS,UAGXT,EAAUS,SAASC,gBACdriB,EAAOqiB,OACdriB,EAAOkD,YAAcye,EAAUS,SAASC,QAEtCriB,EAAOyuB,MACTzuB,EAAOyuB,KAAMC,EAAAA,GAAAA,IAAiB1uB,EAAOyuB,MAEnCzuB,EAAOyI,QACTzI,EAAOyI,OAAQimB,EAAAA,GAAAA,IAAiB1uB,EAAOyI,QAGzC,MAAMoS,EAAO7V,KAAK2pB,UACd9T,IAASqT,KACXluB,EAAO6a,KAAOA,GAGhB,MAAM+T,EAAmB5pB,KAAK6pB,sBAM9B,OALID,IAAqBT,KACvBnuB,EAAO4uB,iBAAmBA,GAIrBE,IAAAA,CAAO9uB,GAAQ+uB,IAAK3G,EAAAA,GAAAA,IAAQ2G,SAhNiB,yCAmN1B,IACnB/pB,KAAKqI,MAAMsU,UAAUljB,YApNwB,0BA2OxCuwB,IAEZ,IAAKA,EAAOtvB,OACV,OAEF,MAAMuvB,EAAoC,IACrCjqB,KAAKkqB,oBACRF,OAAAA,GAGGC,EAAc/rB,aAAgB+rB,EAAcxmB,QAC/CwmB,EAAc/rB,YAAcisB,EAAAA,IAG9BnqB,KAAKoqB,kBAAoBpqB,KAAKqI,MAAMrZ,IAAI4N,QAAQoD,KAAKqqB,wBAAyB,CAC5Eh7B,OAAQ,MACRsB,KAAMkS,GAAAA,UAAaonB,GACnBptB,QAASlM,IACFA,GAGL25B,GAAAA,EAAAA,cAA2BN,EAAQr5B,IAErCmM,MAAOrE,IACLuH,KAAKwN,SAAS,CACZ1Q,OAAOytB,EAAAA,GAAAA,GAAc9xB,MAGzBmL,SAAU,KAAM,MACd5D,KAAKoqB,kBAAoB,KAIzB,MAAMI,EAAkB,UAAG34B,GAAAA,KAAuB44B,kBAA1B,aAAG,EAAmCC,iBAC/B,gBAA3BF,MAAAA,OAAA,EAAAA,EAAoBG,KACtBH,EAAmBI,gBA9Q2B,2BAoRxC,CAACC,EAA2BC,KACxC,MAAM,aAAC/zB,GAAgBiJ,KAAKqI,OACrB0b,YAAagH,GAAgB/qB,KAAKoI,MACzC,IAAI2b,EAA2B,IAAIgH,GAEnC,MAAMC,EAAiBhrB,KAAKkqB,oBACtBe,GAAuBC,EAAAA,GAAAA,IAAkBn0B,GACzCo0B,EAAkBF,EAAqBrtB,SAASotB,EAAet6B,OACjEs6B,EAAet6B,MACf,KAGJ,GAAIy6B,EAAiB,OACnBpH,EAAYoH,GAAmB,CAC7BhL,MAAO0K,EACP7wB,SAAS,GAEX,MAAMyqB,EAAG,WAAGF,EAAAA,GAAAA,IAAQxtB,GAAcI,MAChC,QAAEwtB,GAAF,SAAgBwG,IAAoBxG,YAD7B,aAAG,EAER,GACAF,IAAQuG,EAAe7wB,SACzBixB,EAAAA,GAAAA,GAA4B,oBAAqB,CAC/Cr0B,aAAAA,EACA0tB,IAAKA,EAAI4G,cACTC,WAAYvH,EAAYoH,GAAiBhL,QAO/C,GAHAngB,KAAKwN,SAAS,CAACuW,YAAAA,IAIb+G,IACCG,EAAqBM,OAAM5G,QAAsCryB,IAA1ByxB,EAAYY,KACpD,CACA,MAAMsF,EAAsC,IACvCuB,IAAAA,CAAKR,EAAgB,SAExBt6B,MAAOu6B,EAAqBxwB,QAAOgxB,GAAUA,IAAWN,KAIrDlB,EAAc/rB,aAAgB+rB,EAAcxmB,QAC/CwmB,EAAc/rB,YAAcisB,EAAAA,IAG9BnqB,KAAK0rB,wBAA0B1rB,KAAKqI,MAAMrZ,IAAI4N,QAC5CoD,KAAK2rB,yBACL,CACEt8B,OAAQ,MACRsB,KAAMkS,GAAAA,UAAaonB,GAEnBptB,QAASlM,IACFA,IAILozB,EAAc,IACTA,KACA6H,IAAAA,CAAUj7B,GAAOwvB,IAAD,CACjBA,MAAAA,EACAnmB,QAASmmB,EAAQ8F,GAAAA,UAIvBnpB,MAAO,KACLkD,KAAKwN,SAAS,CAACuW,YAAa,MAE9BngB,SAAU,KACR5D,KAAK0rB,wBAA0B,KAE/B1rB,KAAKwN,SAAS,CAACuW,YAAAA,YA3V6B,yBAkW1C,WAA4B,IAA3B+G,EAA2B,wDACtC,MAAM,aAAC/zB,GAAgB,EAAKsR,MACtB3X,EAAQ,EAAK84B,WACbpL,EAA4BrnB,EAAa+hB,SAASlb,SACtD,6BAIEwgB,IAA8B,EAAKhW,MAAM4b,eACtC,EAAK5b,MAAMyjB,aAAgB,EAAKzjB,MAAMlU,OACzCmmB,GAAAA,EAAAA,gBAA2B,IAC3B,EAAKyR,eAAejhB,QAEpB,EAAK2C,SAAS,CACZue,eAAe,EACfvV,WAAY,EACZwV,aAAc,EACdlvB,MAAO,QAIN,EAAKsL,MAAM6jB,YAAYvxB,SAAWwxB,EAAAA,GAAAA,IAAiBx7B,KACtD2pB,GAAAA,EAAAA,gBAA2B,IAC3B,EAAKyR,eAAejhB,QAEpB,EAAK2C,SAAS,CACZue,eAAe,EACfvV,WAAY,EACZwV,aAAc,EACdC,YAAa,GACbnvB,MAAO,QAKb,MAAMqvB,GAAcC,EAAAA,GAAAA,KACpBD,MAAAA,GAAAA,EAAaE,OAAO,aAAc,EAAK1C,WAEvC,EAAKnc,SAAS,CACZgJ,WAAY,EACZwV,aAAc,EACdlvB,MAAO,OAGT,MAAMmtB,EAAqB,IACtB,EAAKC,oBACRoC,MA1dY,GA2dZC,cAAe,GAGXC,EAAe,EAAKnkB,MAAMzH,SAASlQ,OAAS,GAC9C,WAAY87B,IACdvC,EAAc9vB,OAASqyB,EAAaryB,QAIjC8vB,EAAc/rB,aAAgB+rB,EAAcxmB,QAC/CwmB,EAAc/rB,YAAcisB,EAAAA,IAG9BF,EAAcwC,OAAS,CAAC,SAAU,SAClCxC,EAAc5xB,SAAW,QAErB,EAAKq0B,cACP,EAAKA,aAAaxsB,SAEhB,EAAKkqB,mBACP,EAAKA,kBAAkBlqB,SAErB,EAAKwrB,yBACP,EAAKA,wBAAwBxrB,SAG/B,EAAKysB,QAAQC,UAEb,EAAKF,aAAe,EAAKrkB,MAAMrZ,IAAI4N,QAAQ,EAAKiwB,uBAAwB,CACtEx9B,OAAQ,MACRsB,KAAMkS,GAAAA,UAAaonB,GACnBptB,QAAS,CAAClM,EAAMoH,EAAG4B,KACjB,IAAKA,EACH,OAGF,MAAM,MAACvJ,GAAS,EAAKiY,MAAMrN,OAE3B,GAAsD,MAAlDrB,EAAKE,kBAAkB,uBAAgC,CACzD,IAAIizB,EACJ,GAAIn8B,EAAK,IAAMA,EAAK,GAAGo8B,gBAAiB,CACtC,MAAM,GAAC39B,EAAD,gBAAK29B,GAAmBp8B,EAAK,GACnCm8B,EAAY,kBAAiB18B,YAAgBhB,YAAa29B,SACrD,CACL,MAAM,GAAC39B,GAAMuB,EAAK,GAClBm8B,EAAY,kBAAiB18B,YAAgBhB,KAO/C,YAJAuL,EAAAA,eAAAA,QAAuB,CACrBkG,SAAUisB,EACVp8B,OAAOs8B,EAAAA,GAAAA,IAA2B,EAAK3kB,MAAMzH,SAASlQ,SAKtD,EAAK0X,MAAMlU,MACbmmB,GAAAA,EAAAA,gBAA2B1pB,GAE7B,EAAKm7B,eAAetrB,KAAK7P,GAGpBytB,IACC8N,EAAAA,GAAAA,IAAiBx7B,IACnB2pB,GAAAA,EAAAA,OAAkB,EAAKjS,MAAM6jB,aAIjC,EAAKgB,WAAWt8B,EAAK0G,KAAK+nB,GAAqBA,EAAMhwB,MAErD,MAAM89B,EAAOvzB,EAAKE,kBAAkB,UAC9B2c,OACY,IAAT0W,GAAwBA,GAAOC,SAASD,EAAM,KAAW,EAC5DE,EAAUzzB,EAAKE,kBAAkB,cACjCwzB,OACe,IAAZD,GAA2BA,GAAUD,SAASC,EAAS,KAAW,EACrEE,EAAY3zB,EAAKE,kBAAkB,QAGrCukB,IAA8B,EAAKhW,MAAM4b,eAC3C,EAAKuJ,YAAY/W,EAAYsU,GAExB,EAAK1iB,MAAMolB,WACd,EAAKD,YAAY/W,EAAYsU,GAIjC,EAAKtd,SAAS,CACZ1Q,MAAO,KACPivB,eAAe,EACfvV,WAAAA,EACA6W,cAAAA,EACAC,UAAyB,OAAdA,EAAqBA,EAAY,MAGhDxwB,MAAOrE,KACL2yB,EAAAA,GAAAA,GAA4B,sBAAuB,CACjDr0B,aAAc,EAAKsR,MAAMtR,aACzB02B,YAAa,SACbC,cAAe,cACf5wB,OAAOytB,EAAAA,GAAAA,GAAc9xB,KAGvB,EAAK+U,SAAS,CACZ1Q,OAAOytB,EAAAA,GAAAA,GAAc9xB,GACrBszB,eAAe,KAGnBnoB,SAAU,KACR,EAAK8oB,aAAe,KAEpB,EAAKiB,gBAGDvP,IAA8B,EAAKhW,MAAM4b,eAC3C,EAAKxW,SAAS,CAACqe,aAAa,EAAO33B,MAAM,IAEzC,EAAKsZ,SAAS,CAACggB,WAAW,WArgBoB,6BA2gBtC,KACd,IAAKxtB,KAAKoI,MAAMklB,UACd,OAIF,MAAMM,GAAQ7zB,EAAAA,GAAAA,GAAgBiG,KAAKoI,MAAMklB,WACzC,GAAIM,IAAUA,EAAMC,SAAS3zB,SAAW8F,KAAKoI,MAAM4b,eAAgB,CAEjE,MAAM8J,EAAgB,IAAI3pB,IAAIypB,EAAMC,SAASpe,KAAM/X,OAAOkJ,SAASwD,QACnE0pB,EAAcC,aAAaC,OAAO,YAClChuB,KAAK2sB,QAAQsB,YAAYC,mBAAmBJ,EAAcre,OAC1DzP,KAAK2sB,QAAQwB,cAvhBqC,gCA6iBlCC,IAClB/xB,GAAAA,EAAAA,IAAY,iBAAkB+xB,EAASjpB,YACvCnF,KAAKwN,SAAS,CAACwW,eAAgBoK,QA/iBqB,mCAkjB/B/Q,IACrB,MAAM,SAACzc,GAAYZ,KAAKqI,MACxB,GAAIgV,IAAWrd,KAAK6pB,sBAAuB,CACzC,MAAM1vB,EAASyG,EAASlQ,MAAMyJ,OACxBk0B,EAAelB,SAASvsB,EAASlQ,MAAMk0B,KAAM,IAC7CA,EAAO0J,MAAMD,KAAkBztB,EAASlQ,MAAMyJ,OAAS,EAAIk0B,EACjEruB,KAAKuuB,aAAa,CAACp0B,OAAAA,EAAQyqB,KAAAA,EAAMgF,iBAAkBvM,SAxjBD,8BA4jBrC,CAAC1sB,EAAW69B,KAG3BxuB,KAAK8rB,eAAe2C,QAAQ99B,OA/jBwB,uBAkkB3C0pB,GAAAA,EAAAA,QAAkB,IAAMra,KAAK0uB,sBAAiBp8B,KAlkBH,wCAmoB1B5B,KAC1B06B,EAAAA,GAAAA,GAA4B,kBAAmB,CAC7Cr0B,aAAciJ,KAAKqI,MAAMtR,aACzBrG,MAAAA,EACA+8B,YAAa,SACbC,cAAe,mBAGjB1tB,KAAKihB,SAASvwB,OA3oBsC,wBA8oB1CA,IACNA,IAAUsP,KAAKoI,MAAM1X,MAEvBsP,KAAK2uB,YAGL3uB,KAAKuuB,aAAa,CAAC79B,MAAAA,GAAQ,UAppBuB,4BAwpBtCmlB,IACd7V,KAAKuuB,aAAa,CAAC1Y,KAAAA,QAzpBiC,8BA4pBtB,CAAC+Y,EAAYC,EAAOpD,EAAQqD,KAC1D,MAAMT,EAAelB,SAASntB,KAAKqI,MAAMzH,SAASlQ,MAAMk0B,KAAM,IAC9D,IAAImK,EAA+BT,MAAMD,GAAgBS,EAAQT,EAAeS,EAE5E30B,EAA6By0B,EAK7BG,GAAY,IACd50B,OAAS7H,EACTy8B,OAAWz8B,GAGb0N,KAAKuuB,aAAa,CAACp0B,OAAAA,EAAQyqB,KAAMmK,QA1qBmB,+BA6qBpC,KAChB,MAAM,aAACh4B,GAAgBiJ,KAAKqI,MAC5BrI,KAAKwN,SAAS,CACZwhB,kBAAmBhvB,KAAKoI,MAAM4mB,oBAEhC5D,EAAAA,GAAAA,GAA4B,+BAAgC,CAC1Dr0B,aAAAA,QAnrBkD,4BAmsBvC,WAGV,IAFHk4B,EAEG,uDAFkC,GACrC9Z,EACG,uDADwD,EAAK9M,MAAM8M,YAEtE,MAAMzkB,EAAQ,IACT,EAAKw5B,uBACL+E,IAEC,aAACl4B,GAAgB,EAAKsR,MAC5B,IAAInG,EAEAiT,GAAeA,EAAY/lB,IAC7B8S,EAAQ,kBAAiBnL,EAAaf,wBAAwBmf,EAAY/lB,aAGnEsB,EAAMA,OAKRA,EAAMyJ,QAAUgb,EAAYzY,YAC/BhM,EAAMiN,QAAU,CAACwX,EAAYzY,YAE1BhM,EAAMyJ,QAAW80B,EAAUpZ,OAAQV,EAAYU,OAClDnlB,EAAMmlB,KAAOV,EAAYU,OAG3B3T,EAAQ,kBAAiBnL,EAAaf,eAIpCtF,EAAMmlB,OAASqC,GAAAA,GAAAA,OAA0BxnB,EAAMA,QAAUmoB,GAAAA,GAAAA,mBACpDnoB,EAAMmlB,KAIb3T,IAAS,EAAKmG,MAAMzH,SAASC,UAC5BqS,IAAAA,CAAQxiB,EAAO,EAAK2X,MAAMzH,SAASlQ,SAEpCiK,EAAAA,eAAAA,KAAoB,CAClBkG,SAAUqB,EACVxR,MAAAA,IAEF,EAAK8c,SAAS,CAACue,eAAe,SA9uBoB,gCAgwBnC,CAACmD,EAAetF,KACjC,MAAMuF,EAAWD,EAAI,IACf,WAACE,GAAcpvB,KAAKoI,MACpB1X,EAAQsP,KAAKwpB,WACb6F,EAAgBrvB,KAAK2pB,YAAczR,GAAAA,GAAAA,MAEzC,OAAOgX,EAAI73B,KAAI,CAACjI,EAAIqmB,KAClB,MAAM6Z,EAAiBlgC,IAAO+/B,EACxB/P,EAAQ/E,GAAAA,EAAAA,IAAejrB,GAC7B,IAAImgC,EACAnQ,MAAAA,GAAAA,EAAOzhB,UACT4xB,EAAUH,EAAWhQ,EAAMzhB,QAAQ3H,OAGrC,MAAMw5B,EAAsBxvB,KAAKmkB,yBAC3BsL,EAA4BzvB,KAAKyvB,0BACrCD,EACA9+B,GAGF,OACE,QAAC,KAAD,CACE+kB,MAAOA,EAEPrmB,GAAIA,EACJ8O,YAAa0rB,EACbl5B,MAAOA,EACP4+B,eAAgBA,EAChBF,WAAYG,EACZE,0BAA2BA,EAC3BC,kBAAgB,EAChBL,cAAeA,GARVjgC,UAvxByC,kCA60BjC,KACnB,MAAM,aAAC2H,EAAD,IAAe/H,GAAOgR,KAAKqI,OAEjCsnB,EAAAA,GAAAA,IAAmB3gC,EAAK+H,EAAaf,UAh1Be,mCAm1B/Bmf,KACrBiW,EAAAA,GAAAA,GAA4B,qCAAsC,CAChEr0B,aAAciJ,KAAKqI,MAAMtR,aACzB02B,YAAa,SACbr+B,GAAI+lB,EAAY/lB,GAAK+9B,SAAShY,EAAY/lB,GAAI,KAAO,IAEvD4Q,KAAKwN,SAAS,CAACue,eAAe,IAAO,IAAM/rB,KAAKuuB,kBAAaj8B,EAAW6iB,SAz1BpB,mCA41B/Bc,IACrB,MAAM,MAAC7lB,GAAS4P,KAAKqI,MAAMrN,QAE3B40B,EAAAA,GAAAA,IAAkB5vB,KAAKqI,MAAMrZ,IAAKoB,EAAO6lB,GAAQ1hB,MAAK,KACpDyL,KAAKwN,SACH,CACEue,eAAe,IAEjB,IAAM/rB,KAAKuuB,aAAa,GAAI,eAp2BoB,wBAy2B3C,KACTvuB,KAAKwN,SAAS,CAACqe,aAAa,IAC5B7rB,KAAK2uB,WAAU,OA32BqC,sBA82B7C,KAAM,MACb,MAAM,aAAC53B,EAAD,UAAe4lB,GAAa3c,KAAKqI,OACjC,qBAACwnB,GAAwB7vB,KAAKoI,MAC9B1X,EAAQsP,KAAKwpB,WAEbvK,EAAW4Q,EAAqBx4B,KAAI1G,GAAQA,EAAKvB,KACjD+jB,EAAawJ,MAAAA,GAAH,UAAGA,EAAWljB,gBAAd,aAAG,EAAqBpC,KAAIkR,GAAKA,EAAEpD,aAC7ChK,EAAY,kBAAiBpE,EAAaf,eAE5CgK,KAAK0sB,cACP1sB,KAAK0sB,aAAaxsB,SAEhBF,KAAKoqB,mBACPpqB,KAAKoqB,kBAAkBlqB,SAErBF,KAAK0rB,yBACP1rB,KAAK0rB,wBAAwBxrB,SAG/BF,KAAKqI,MAAMrZ,IAAI4N,QAAQzB,EAAU,CAC/B9L,OAAQ,MACRsB,KAAM,CACJ+H,OAAQ,cAEVhI,MAAO,CACLiN,QAASwV,EACT/jB,GAAI6vB,GAENpiB,QAASsE,IACFA,IAMAzQ,EAAMkN,SAAS,gBAAkBsuB,EAAAA,GAAAA,IAAiBx7B,IACrD2pB,GAAAA,EAAAA,IAAewV,GAEjB7vB,KAAKwN,SAAS,CAACtZ,MAAM,MAEvB4I,MAAOrE,IACLuH,KAAKwN,SAAS,CACZ1Q,OAAOytB,EAAAA,GAAAA,GAAc9xB,GACrBszB,eAAe,KAGnBnoB,SAAU,KACR5D,KAAKwN,SAAS,CAACqiB,qBAAsB,KACrC7vB,KAAK2uB,mBA95B2C,8BAm6BpCrQ,IAChB,MAAM,aAACvnB,GAAgBiJ,KAAKqI,MACtB3X,EAAQsP,KAAKwpB,WACbpL,EAA4BrnB,EAAa+hB,SAASlb,SACtD,6BAGF,KAAKsuB,EAAAA,GAAAA,IAAiBx7B,GAAQ,CAC5B,GAAI4tB,EAAQ5jB,OAAS,GACnBvJ,EAAAA,GAAAA,KAAWX,EAAAA,EAAAA,GAAG,YAAW8tB,EAAQ5jB,iBAAkB,UAAW,CAACpJ,SAAU,UACpE,CACL,MAAMw+B,EAAUxR,EAAQjnB,KAAI6e,IAAI,uBAAImE,GAAAA,EAAAA,IAAenE,UAAnB,aAAI,EAAsB4Z,WAAS3qB,YACnEhU,EAAAA,GAAAA,KAAWX,EAAAA,EAAAA,GAAG,YAAWs/B,KAAY,UAAW,CAACx+B,SAAU,MAE7D,OAGF,MAAM,YAACyyB,EAAD,aAAciI,GAAgBhsB,KAAKoI,MACnCyiB,EAAoB9G,EAAYrzB,GACtC,GAAI4tB,EAAQ5jB,QAAUmwB,EAAmB,CACvC,MAAMkF,EAAezR,EAAQ7jB,QAAOrL,IAAE,uBAAIirB,GAAAA,EAAAA,IAAejrB,UAAnB,aAAI,EAAoBmrB,SAAO7f,OACrEmwB,EAAkB1K,OAAS4P,EAEtB3R,GACHpe,KAAKwN,SAAS,CACZye,YAAa3N,EACbkP,WAAW,IAGfxtB,KAAKwN,SAAS,CACZuW,YAAa,IACRA,EACH,CAACrzB,GAAiBm6B,GAEpBmB,aAAcA,EAAe+D,SAr8BmB,6BA08BrCzR,IACf,MAAMuR,EAAuBvR,EAAQjnB,KAAIjI,GAAMirB,GAAAA,EAAAA,IAAejrB,KAC9D4Q,KAAKwN,SAAS,CACZqiB,qBAAAA,QA78BkD,6BAi9BtC,CAACvR,EAAmB0R,KAClC,GAAI1R,EAAQ5jB,OAAS,GACnBvJ,EAAAA,GAAAA,KAAWX,EAAAA,EAAAA,GAAG,GAAEw/B,KAAc1R,EAAQ5jB,iBAAkB,UAAW,CACjEpJ,SAAU,OACS,aAAf0+B,GAA6B,CAAC97B,KAAM8L,KAAKiwB,cAE1C,CACL,MAAMH,EAAUxR,EAAQjnB,KAAI6e,IAAI,uBAAImE,GAAAA,EAAAA,IAAenE,UAAnB,aAAI,EAAsB4Z,WAAS3qB,YACnEhU,EAAAA,GAAAA,KAAWX,EAAAA,EAAAA,GAAG,GAAEw/B,KAAcF,KAAY,UAAW,CACnDx+B,SAAU,OACS,aAAf0+B,GAA6B,CAAC97B,KAAM8L,KAAKiwB,UAIjD5V,GAAAA,EAAAA,OAAkBiE,GAClBte,KAAKwN,SAAS,CAACqe,aAAa,IAC5B7rB,KAAK2uB,WAAU,OAj+BqC,8BAo+BrC,CAAC7kB,EAAamM,KAC7B,MAAM,MAAC7lB,GAAS4P,KAAKqI,MAAMrN,OACrBmY,EAAanT,KAAKkwB,4BAA4B74B,KAAIjI,GAAMA,EAAG+V,aAC3D6lB,EAAiBhrB,KAAKkqB,oBAE5B,OAAOiG,EAAAA,GAAAA,IACLnwB,KAAKqI,MAAMrZ,IACXoB,EACA0Z,EACAmM,EACA9C,EACA6X,MA5+BJ1B,kBACE,MAAM8G,EAAuB/zB,GAAAA,EAAAA,IAAY,kBAMzC,MAAO,CACL4iB,SAAU,GAEVgN,YAAa,GACbJ,aAAa,EACbgE,qBAAsB,GACtBrC,WAAW,EACXt5B,MAAM,EACNm8B,iBAAiB,EACjBrM,oBAbgC,IAAzBoM,GAEsB,SAAzBA,EAYJ9C,UAAW,GACXtB,aAAc,EACdxV,WAAY,EACZuN,YAAa,GACbsJ,cAAe,EACfvwB,MAAO,KACPkyB,kBAAkB,EAClBjD,eAAe,EACfuE,aAAa,EACblB,WAAY,IAIhBtc,oBAAoB,MAClB,MAAM8a,GAAQ7zB,EAAAA,GAAAA,GAAgBiG,KAAKoI,MAAMklB,WACzCttB,KAAK2sB,QAAU,IC9KnB,MACE7sB,YAAYjQ,IAAkB,kBAKxB,IAAIZ,EAAAA,KALoB,8FAQH,OARG,0BASA,OATA,sBAUZ,IAVY,8BAYZ,GAXhB+Q,KAAKnQ,QAAUA,EACfmQ,KAAKuwB,gBAAkB1gC,EAAQsL,SAYjCq1B,WACE,MAAMlO,EAnBS,KAmBatiB,KAAKywB,gBAAkB,GACnD,OAAOC,KAAKC,IAAIrO,EAnBF,KAsBhB2L,YAAYtf,GACV3O,KAAKuwB,gBAAkB5hB,EAGzBwf,SACEnuB,KAAKud,QAAS,EAGVvd,KAAK4wB,WACPl5B,OAAOm5B,aAAa7wB,KAAK4wB,WAEvB5wB,KAAK8wB,aACP9wB,KAAK8wB,YAAY5wB,SAEnBF,KAAK4wB,UAAYl5B,OAAOq5B,WAAW/wB,KAAKgxB,KAAKC,KAAKjxB,MAAOA,KAAKwwB,YAGhE5D,UACE5sB,KAAKud,QAAS,EACVvd,KAAK4wB,YACPl5B,OAAOm5B,aAAa7wB,KAAK4wB,WACzB5wB,KAAK4wB,UAAY,MAGf5wB,KAAK8wB,aACP9wB,KAAK8wB,YAAY5wB,SAIrB8wB,OACEhxB,KAAK8wB,YAAc9wB,KAAKhR,IAAI4N,QAAQoD,KAAKuwB,gBAAiB,CACxD1zB,QAAS,CAAClM,EAAMoH,EAAG4B,KAAS,MAE1B,IAAKqG,KAAKud,OACR,OAIF,IAAK5sB,IAASA,EAAK+J,OAEjB,YADAsF,KAAKywB,iBAAmB,GAItBzwB,KAAKywB,gBAAkB,IACzBzwB,KAAKywB,iBAAmB,GAG1B,MAAMS,EAAW,UAAGv3B,MAAAA,OAAH,EAAGA,EAAME,kBAAkB,eAA3B,QAAsC,KACjD+zB,GAAQ7zB,EAAAA,GAAAA,GAAgBm3B,GAC9BlxB,KAAKuwB,gBAAkB3C,EAAMC,SAASpe,KAEtCzP,KAAKnQ,QAAQgN,QAAQlM,EAAMugC,IAE7Bp0B,MAAOnD,IACAA,IASe,MAAhBA,EAAKjB,QAAkC,MAAhBiB,EAAKjB,QAAkC,MAAhBiB,EAAKjB,QACrDsH,KAAK4sB,YAGThpB,SAAU,KACR5D,KAAK8wB,YAAc,KAEf9wB,KAAKud,SACPvd,KAAK4wB,UAAYl5B,OAAOq5B,WAAW/wB,KAAKgxB,KAAKC,KAAKjxB,MAAOA,KAAKwwB,kBDmFpC,CAC9Br1B,UAAU,UAAAyyB,EAAMC,gBAAN,eAAgBpe,OAAQ,GAClC5S,QAASmD,KAAKmxB,iBAKhBnxB,KAAK2vB,qBACL3vB,KAAKoxB,YACLpxB,KAAKqxB,kBAGPre,mBAAmBC,EAAkBqe,GAyBnC,GAxBIA,EAAUtN,iBAAmBhkB,KAAKoI,MAAM4b,iBAEtChkB,KAAKoI,MAAM4b,eACbhkB,KAAK2tB,gBAEL3tB,KAAK2sB,QAAQC,WAMZ1Z,IAAAA,CAAQD,EAAU0J,UAAUljB,SAAUuG,KAAKqI,MAAMsU,UAAUljB,YAC9DuG,KAAKqxB,kBACLrxB,KAAKoxB,aAIFpxB,KAAKqI,MAAMtR,aAAa+hB,SAASlb,SAAS,8BACzC0zB,EAAU9D,YAAcxtB,KAAKoI,MAAMolB,WACrCxtB,KAAK2uB,YAKL3uB,KAAKqI,MAAMkpB,mBACb,OAEF,GAAIte,EAAUse,mBAEZ,YADAvxB,KAAK2uB,YAIP,MAAM6C,EAAYve,EAAUrS,SAASlQ,MAC/Bs3B,EAAWhoB,KAAKqI,MAAMzH,SAASlQ,MAE/B+gC,GAAoBve,IAAAA,CAAQD,EAAU0J,UAAW3c,KAAKqI,MAAMsU,WAKhE8U,GACAD,EAAUr3B,SAAW6tB,EAAS7tB,QAC9Bq3B,EAAU3b,OAASmS,EAASnS,MAC5B2b,EAAU9gC,QAAUs3B,EAASt3B,OAC7B8gC,EAAUtzB,cAAgB8pB,EAAS9pB,aACnCszB,EAAU5H,mBAAqB5B,EAAS4B,kBACxC3W,EAAUkC,cAAgBnV,KAAKqI,MAAM8M,YAErCnV,KAAK2uB,UAAU8C,IAEdzxB,KAAK0sB,eACsB,IAA5B4E,EAAUvF,eACV/rB,KAAKoI,MAAM2jB,eAIX/rB,KAAK2uB,YAITlhB,uBACEzN,KAAK2sB,QAAQC,UACbvS,GAAAA,EAAAA,QACAra,KAAKqI,MAAMrZ,IAAI6O,SACfihB,EAAAA,GAAAA,GAAe9e,KAAK+e,WAWpB3K,EAAAA,GAAAA,MASFoV,WACE,MAAM,YAACrU,EAAD,SAAcvU,GAAYZ,KAAKqI,MACrC,GAAI8M,EACF,OAAOA,EAAYzkB,MAGrB,MAAM,MAACA,GAASkQ,EAASlQ,MAEzB,YAAc4B,IAAV5B,EACKA,EAGFghC,EAAAA,GAGT/H,UACE,MAAM,SAAC/oB,EAAD,YAAWuU,GAAenV,KAAKqI,MACrC,OAAKzH,EAASlQ,MAAMmlB,MAAhB,MAAwBV,GAAAA,EAAa/lB,GAChC+lB,EAAYU,KAGjBjV,EAASlQ,MAAMmlB,KACVjV,EAASlQ,MAAMmlB,KAGjBqT,GAGTW,sBAA8B,MAC5B,IAAI8H,EAUJ,OAREA,EADyD,iBAAvD,UAAO3xB,KAAKqI,MAAMzH,SAASlQ,aAA3B,aAAO,EAA2Bk5B,kBACpB5pB,KAAKqI,MAAMzH,SAASlQ,MAAMk5B,iBACjC5pB,KAAK2pB,YAAczR,GAAAA,GAAAA,MAEZ,OAEAiR,GAGXC,GAA6Bh2B,IAAIu+B,GACpCA,EACAxI,GA0CNkI,kBAAkB,MAChB,MAAMle,EAAU,UAAGnT,KAAKkwB,mCAAR,aAAG,EAAkC74B,KAAIqF,GACvDrJ,OAAOqJ,MAGTk1B,EAAAA,GAAAA,IAAgB5xB,KAAKqI,MAAMrZ,IAAKgR,KAAKqI,MAAMtR,aAAaf,KAAMmd,GAAY5e,MACxEg7B,IACEvvB,KAAKwN,SAAS,CAAC4hB,YAAYyC,EAAAA,GAAAA,IAAsBtC,QAKvD6B,YACE,MAAM,aAACr6B,EAAD,UAAe4lB,GAAa3c,KAAKqI,MACvCrI,KAAKwN,SAAS,CAAC8iB,aAAa,KAC5BwB,EAAAA,GAAAA,IAAqB9xB,KAAKqI,MAAMrZ,IAAK+H,EAAaf,KAAM2mB,GAAWpoB,MAAK,IACtEyL,KAAKwN,SAAS,CAAC8iB,aAAa,MAoThCzD,uBACE,MAAM,MAACz8B,GAAS4P,KAAKqI,MAAMrN,OAE3B,MAAQ,kBAAiB5K,YAG3Bu7B,yBACE,MAAM,MAACv7B,GAAS4P,KAAKqI,MAAMrN,OAE3B,MAAQ,kBAAiB5K,kBAG3Bi6B,wBACE,MAAM,MAACj6B,GAAS4P,KAAKqI,MAAMrN,OAE3B,MAAQ,kBAAiB5K,kBA0B3Bs+B,gBAAgB,MACd,MAAM,aAAC33B,GAAgBiJ,KAAKqI,OACtB,qBAACwnB,GAAwB7vB,KAAKoI,MAC9B1X,EAAQsP,KAAKwpB,WAMnB,GALkCzyB,EAAa+hB,SAASlb,SACtD,+BAMCoC,KAAKoI,MAAM4b,gBACZ6L,EAAqBn1B,OAAS,EAC9B,CACA,MAAMq3B,EAAgB/xB,KAAK8rB,eAAekG,cAAcv3B,QAAOyb,IACW,IAAjE2Z,EAAqBna,WAAU/kB,GAAQA,EAAKvB,KAAO8mB,EAAK9mB,OAG3D6iC,EAAcF,EACjBt3B,QAAOyb,GAAwB,aAAhBA,EAAKxd,SACpBrB,KAAIjI,GAAMA,EAAGA,KACV8iC,EAAaH,EAChBt3B,QAAOyb,GAAwB,YAAhBA,EAAKxd,SACpBrB,KAAI86B,GAAKA,EAAE/iC,KAGR68B,EAAc8F,EACjBt3B,QACCyb,IAASA,EAAKqE,OAAyB,aAAhBrE,EAAKxd,QAAyC,YAAhBwd,EAAKxd,SAE3DrB,KAAI86B,GAAKA,EAAE/iC,KAIZ6iC,EAAYv3B,OAAS,IACpBhK,EAAMkN,SAAS,kBACdlN,EAAMkN,SAAS,gBACfsuB,EAAAA,GAAAA,IAAiBx7B,KAEnBsP,KAAKoyB,cAAcH,GAAazhC,EAAAA,EAAAA,GAAE,aAGlC0hC,EAAWx3B,OAAS,IACnBhK,EAAMkN,SAAS,mBAAoBsuB,EAAAA,GAAAA,IAAiBx7B,KAErDsP,KAAKoyB,cAAcF,GAAY1hC,EAAAA,EAAAA,GAAE,YAKjCy7B,EAAYvxB,OAAS,KACpBwxB,EAAAA,GAAAA,IAAiBx7B,IAAUA,EAAMkN,SAAS,gBAE3CoC,KAAKoyB,cAAcnG,GAAaz7B,EAAAA,EAAAA,GAAE,aAItC,MAAMyuB,EAAQ,UAAGjf,KAAK8rB,eAAekG,cAAc36B,KAAI6e,GAAQA,EAAK9mB,YAAtD,QAA6D,GACtE8jB,IAAAA,CAAQ+L,EAAUjf,KAAKoI,MAAM6W,WAChCjf,KAAKwN,SAAS,CAACyR,SAAAA,IA2DnBO,oBACE,IAAKxf,KAAKoI,MAAMklB,UACd,OAAO,EAGT,MAAMM,GAAQ7zB,EAAAA,GAAAA,GAAgBiG,KAAKoI,MAAMklB,WACzC,OAAOM,IAAUA,EAAMC,SAAS3zB,UAAY0zB,EAAM3zB,KAAKC,QAkDzDiqB,yBAAyB,MACvB,MAAM,aAACptB,GAAgBiJ,KAAKqI,OACtB,YAAC0b,GAAe/jB,KAAKoI,MAE3B,OACErR,EAAa+hB,SAASlb,SAAS,sBAC7BmmB,MAAAA,GAAD,UAACA,EAAclL,GAAAA,GAAAA,qBAAf,QAAC,EAAmCsH,OAIzCsP,0BAA0BD,EAA8B9+B,GACtD,OAAO8+B,GAAuB9+B,IAAUmoB,GAAAA,GAAAA,aAwC1CwZ,gBACE,OACE,QAAC,MAAD,WACE,QAAC,KAAD,MAKNC,mBACE,MAAM,cAACvG,EAAD,MAAgBjvB,EAAhB,SAAuBmiB,GAAYjf,KAAKoI,MAE9C,GAAI2jB,EACF,OAAO,QAAC,KAAD,CAAkBwG,aAAW,IAGtC,GAAIz1B,EACF,OAAO,QAAC,KAAD,CAAcpL,QAASoL,EAAO01B,QAASxyB,KAAK2uB,YAGrD,GAAI1P,EAASvkB,OAAS,EACpB,OACE,QAAC,KAAD,UACGsF,KAAKyyB,iBAAiBxT,EAAUjf,KAAK6pB,yBAK5C,MAAM,IAAC76B,EAAD,aAAM+H,EAAN,UAAoB4lB,GAAa3c,KAAKqI,MAE5C,OACE,QAAC,KAAD,CACErZ,IAAKA,EACL+H,aAAcA,EACdrG,MAAOsP,KAAKwpB,WACZpF,mBAAoBzH,EAAUljB,SAC9BwlB,SAAUA,IA2KhBpY,SAAS,UACP,GAAI7G,KAAKqI,MAAMkpB,mBACb,OAAOvxB,KAAKqyB,gBAGd,MAAM,iBACJrD,EADI,YAEJsB,EAFI,UAGJhD,EAHI,WAIJ9W,EAJI,YAKJuN,EALI,eAMJC,EANI,SAOJ/E,EAPI,cAQJoO,EARI,aASJrB,GACEhsB,KAAKoI,OACH,aAACrR,EAAD,YAAeoe,EAAf,cAA4BzB,EAA5B,KAA2CyN,EAA3C,UAAiDxE,EAAjD,SAA4D/b,EAA5D,OAAsEsjB,GAC1ElkB,KAAKqI,MACDulB,GAAQ7zB,EAAAA,GAAAA,GAAgBuzB,GACxB58B,EAAQsP,KAAKwpB,WACb6E,EAAelB,SAASvsB,EAASlQ,MAAMk0B,KAAM,IAG7C8N,EAplCQ,IAmlCDpE,MAAMD,KAAkBztB,EAASlQ,MAAMyJ,OAAS,EAAIk0B,GACvBpP,EAASvkB,OAEnD,IAAIi4B,EAAYD,EAAiBlc,EAAaA,EAAakc,EACtD9E,MAAAA,GAAD,UAACA,EAAO3zB,YAAR,QAAC,EAAaC,SAAW8F,KAAKwf,oBAEhCmT,EAAYnc,EACFoX,MAAAA,GAAD,UAACA,EAAOC,gBAAR,OAAC,EAAiB3zB,UAE3By4B,EAAY1T,EAASvkB,QAIvBi4B,EAAYjC,KAAKpN,IAAIqP,EAAY3G,EAAc,GAC/C,MAAM4G,EAAqBlC,KAAKpN,IAAI9M,EAAawV,EAAc,GACzD6G,GAAer/B,EAAAA,EAAAA,IAAI,qBAAsB,CAC7C2sB,MAAOwS,EACPG,OACE,QAACC,GAAD,CACE1P,YAAU,EACV2P,aAAa,EACb7S,MAAOyS,EACPtP,IAAK+J,GAAiB,QAKtBla,EAAawJ,MAAAA,GAAH,UAAGA,EAAWljB,gBAAd,aAAG,EAAqBpC,KAAIkR,GAAKA,EAAEpD,aAE7CqqB,EAAsBxvB,KAAKmkB,yBAC3B1E,EAA6Bzf,KAAKyvB,0BACtCD,EACA9+B,GAGIuiC,EAAc,CAClBC,WAAYlE,GAGd,OACE,QAAC,EAAAljB,SAAD,WACE,QAACqnB,GAAD,YACE,QAAC,GAAD,CACEp8B,aAAcA,EACdrG,MAAOA,EACPmlB,KAAM7V,KAAK2pB,UACXnT,WAAYA,EACZuN,YAAaA,EACbC,eAAgBA,EAChBC,iBAAkBjkB,KAAKikB,iBACvBC,OAAQA,EACRxC,gBAAiBhO,EACjBiO,oBAAqB3hB,KAAK2hB,oBAC1BC,oBAAqB5hB,KAAK4hB,oBAC1BuC,uBAAwBqL,EACxBpL,mBAAoBzH,EAAUljB,YAEhC,QAAC,MAAD,IAAiBw5B,EAAjB,WACE,QAAC,MAAD,IAAiBA,EAAjB,WACE,QAAC,GAAD,CACEl8B,aAAcA,EACdrG,MAAOA,EACPykB,YAAaA,EACbU,KAAM7V,KAAK2pB,UACX1I,SAAUjhB,KAAKihB,SACfD,gBAAiBhhB,KAAKghB,gBACtBD,iBAAkBiO,EAClB9N,eAAgBlhB,KAAKkhB,eACrBC,KAAMA,KAGR,QAAC,MAAD,YACE,QAAC,GAAD,CACEpqB,aAAcA,EACd4lB,UAAWA,EACXjsB,MAAOA,EACP8lB,WAAYoc,EACZC,aAAcA,EACdjW,oBAAqB5c,KAAK4c,oBAC1BsB,eAAgBle,KAAKke,eACrBC,cAAene,KAAKme,cACpB7E,SAAUtZ,KAAKsZ,SACfpb,YAAa8B,KAAK6pB,sBAClB5K,SAAUA,EACVO,kBAAmBxf,KAAKwf,oBACxBC,2BAA4BA,EAC5B5J,KAAM7V,KAAK2pB,UACXlQ,aAAczZ,KAAKyZ,gBAErB,QAAC,KAAD,YACE,QAAC,GAAD,CACE1iB,aAAcA,EACdoc,WAAYA,EACZ3B,aAAW,KAEb,QAAC,MAAD,CACE4hB,QAASpzB,KAAKoI,MAAM6W,SAASvkB,OAAS,EACtCtL,GAAG,iBAFL,SAIG4Q,KAAKsyB,4BAIZ,QAACe,GAAD,CACEC,SAAS9/B,EAAAA,EAAAA,IAAI,gCAAiC,CAC5Cq/B,aAAAA,IAEFvF,UAAWA,EACXiG,SAAUvzB,KAAKwzB,oBAKlBxE,IACC,QAAC,MAAD,WACE,QAAC,GAAD,CACEpc,QAAS0d,EACTnP,KAAMA,EACNzwB,MAAOA,EACPu3B,cAAejoB,KAAKyzB,yBACpBvS,eAAgBlhB,KAAKkhB,4BAjoCjCmI,GAAAA,YAAAA,oBA4oCN,UAAexI,EAAAA,GAAAA,IACb6S,EAAAA,GAAAA,GE9wCF,SACE/rB,GAEA,MAAMgsB,UAA0B9rB,EAAAA,UAG9B,uDAGQ+rB,GAAAA,QAHR,0BAScA,GAAAA,QACXC,GAAyB7zB,KAAKkX,SAAS2c,SACxCvhC,IANFmb,uBACEzN,KAAK8zB,cAQP5c,SAAS6c,GACP/zB,KAAKwN,SAASumB,GAGhBltB,SACE,MAAM,OACJ7L,EADI,SAEJ4F,EAFI,mBAGJ2wB,EACApc,YAAa6e,EACbtgB,cAAeugB,GACbj0B,KAAKqI,OACH,SAAC6rB,GAAYl5B,GACb,cAAC0Y,EAAD,UAAgBC,GAAa3T,KAAKoI,MACxC,IAAI+M,EAAkC,KAGtC,IAAKxB,GAAaD,EAAe,CAC/B,GAAIwgB,EAAU,CAEZ/e,EADczB,EAAcvc,MAAK8e,GAAUA,EAAO7mB,KAAO8kC,KAC3B,KAOhC,IAAK/e,QAA+C,IAAzBvU,EAASlQ,MAAMA,MAAuB,CAE/DykB,EADYzB,EAAcvc,MAAK8e,GAAUA,EAAOb,YACtB,MAI9B,OACE,QAACzN,EAAD,IACO3H,KAAKqI,MACVqL,cAAeugB,MAAAA,EAAAA,EAAqBvgB,EACpC6d,mBAAoBA,MAAAA,EAAAA,EAAsB5d,EAC1CwB,YAAa6e,MAAAA,EAAAA,EAAmB7e,KAMxC,OA7DMwe,EADN,wCACMA,EADN,cAKwB,sBAAoBQ,EAAAA,GAAAA,GAAexsB,OAyDpDgsB,EF+sCLS,EAAkBC,EAAAA,GAAAA,IAAiBC,EAAAA,GAAAA,IAAcC,EAAAA,GAAAA,IAAalL,SAM5DgK,IAAmB,OAAOmB,GAAAA,EAAP,sBAAH,wCAIhBzB,IAAmB,OAAO0B,GAAAA,EAAP,sBAAH,yCAIhBtB,IAAoB,OAAOuB,GAAAA,GAAP,sBAAH,qC,8IGxyCvB,SAASC,GAAT,GAA4C,IAAnB,SAACvrB,GAAkB,EAC1C,OACE,QAACwrB,GAAD,CAAwB,eAAa,oBAArC,WACE,QAACC,GAAD,WACE,eAAKC,I,qyFAEN1rB,IAAY,wBAAMA,OANhBurB,GAAAA,YAAAA,kBAWT,MAAMC,IAAyB,OAAO,MAAP,qBAAH,6IASnBpgC,EAAAA,EAAAA,GAAM,GATa,KAYtBqgC,IAAmB,OAAO,MAAP,qBAAH,+FAMNtsB,GAAKA,EAAEzY,MAAMilC,OANP,uBAUtB,M,q1BCNA,MAAMC,GAAmB,QAAC,QACxBC,EADwB,MAExB7jB,EAFwB,QAGxB1f,EAHwB,KAIxB+f,EAJwB,IAKxByjB,EALwB,YAMxBC,EANwB,SAOxB/rB,GAPuB,SASvB,QAACgsB,GAAD,WACGhkB,IACC,QAACikB,GAAD,YACE,QAACC,GAAD,CAAOL,QAASA,EAAhB,SAA0B7jB,IACzB+jB,KAGJzjC,IAAW,QAAC6jC,GAAD,UAAU7jC,IAErB0X,EAEAqI,IACC,QAAC+jB,GAAD,WACE,QAAC,IAAD,CAAc/lB,KAAMgC,EAApB,SAA2ByjB,IAAO1kC,EAAAA,EAAAA,GAAE,qBAtBtCwkC,GAAAA,YAAAA,mBA4BN,YAEMI,IAAuB,OAAO,MAAP,qBAAH,yCAEA7sB,GAAKA,EAAEzY,MAAMm5B,aAFb,gBAGV1gB,GAAKA,EAAEzY,MAAM+Y,YAHH,eAIXN,GAAKA,EAAEzY,MAAMiZ,gBAJF,aAKbvU,EAAAA,EAAAA,GAAM,GALO,KAQpB6gC,IAAe,OAAO,MAAP,qBAAH,mDAGT7gC,EAAAA,EAAAA,GAAM,GAHG,KAMZ8gC,IAAQ,OAAO,MAAP,qBAAH,cACI/sB,GAAKA,EAAEzY,MAAM2lC,eADjB,mBAEQjhC,EAAAA,EAAAA,GAAM,GAFd,WAGA+T,GAAKA,EAAEzY,MAAM6tB,WAHb,KAIPpV,IAAMA,EAAE0sB,SAAW,qBAJZ,kCAWLO,IAAO,OAAO,MAAP,qBAAH,WACEhhC,EAAAA,EAAAA,GAAM,IADR,qCAQJ+gC,IAAU,OAAOC,GAAP,qBAAH,UACFjtB,GAAKA,EAAEzY,MAAM6zB,SADX,KC9Db,SAAS+R,GAAT,GAA0E,IAA7C,SAACj8B,EAAD,WAAWk8B,EAAX,aAAuB5+B,GAAsB,EACxE,IAAK4+B,EACH,OAAO,KAIT,IAZ0BC,CAAAA,GAC1BA,EAAKv3B,QACH,CAACw3B,EAAaC,IAAQ,IAAID,KAAgBC,EAAID,cAC9C,IASGE,CAAmBJ,GAAYj7B,OAClC,OAAO,KAGT,SAASs7B,EAAcC,GAIrB,OAFc14B,OAAO24B,QAAQC,IAAAA,CAAQF,EAAmB,cAGrD5+B,KAAI,IAA0B,IAAxBqF,EAAW05B,GAAa,EAC7B,MAAMz4B,EAAUlE,EAAStC,MAAKoR,GAAKA,EAAEnZ,KAAOsN,IAE5C,OAAKiB,IAMHA,EAAQ04B,UACRt/B,EAAa+hB,SAASlb,SAAS,oBAC/B7G,EAAawrB,OAAO3kB,SAAS,cAMxBw4B,EAAQ/+B,KAAI,IAAwC,IAAvC,QAACi/B,EAAD,WAAUC,EAAV,YAAsBV,GAAiB,EACzD,MAAMW,EAAeX,EAAYviB,MAC/BmjB,GAAkC,cAApBA,EAAWplC,OAE3B,OACE,0BACE,QAACma,GAAD,YACE,QAACkrB,GAAD,CAAiB/4B,QAASA,IACzB64B,IAAgB,QAAC,KAAD,CAAKnlC,KAAK,UAAV,UAAqBb,EAAAA,EAAAA,GAAE,oBAE1C,QAACmmC,GAAD,WACGnjC,EAAAA,EAAAA,IAAI,uCAAwC,CAC3C,mBACE,QAACojC,GAAD,UAAmB,GAAEN,MAAYC,WAIvC,QAACM,GAAD,UACGhB,EAAYx+B,KAAI,CAACo/B,EAAYtE,KAC5B,QAAC,KAAD,WACG2E,EAAAA,GAAAA,GAAuB,CACtBhB,IAAK,CACHrmC,KAAM6mC,EACNS,QAASR,GAEXE,WAAAA,EACAO,YAAY,EACZhd,aAAa,KARFmY,SAdXmE,MAlBL,QAiDV77B,QAAOyb,KAAUA,IAGtB,MAAO+gB,EAA2BC,GAAmBC,IAAAA,CACnDxB,GACAyB,GACEA,EAAUd,QAAQ14B,SAAS,UAC3Bw5B,EAAUvB,YAAYviB,MAAKmjB,GAAkC,cAApBA,EAAWplC,SAGxD,OACE,QAAC,GAAD,CACE4jC,SAAO,EACP7jB,OAAO5gB,EAAAA,EAAAA,GAAE,oBACTkB,SAASlB,EAAAA,EAAAA,GACP,+FAJJ,YAOKymC,EAA0Bv8B,SAC3B,QAAC,GAAD,CAAarJ,KAAK,UAAUghB,UAAQ,EAApC,UACG7e,EAAAA,EAAAA,IACE,sHACD,CACE,kBAAoBse,EAAAA,EAAAA,IAClB,sEACA,uEACAmlB,EAA0Bv8B,aAMpC,QAAC28B,GAAD,WACE,QAAC,KAAD,WACGrB,EAAciB,GACdjB,EAAckB,WAvGhBxB,GAAAA,YAAAA,sBA8GT,UAAe4B,EAAAA,GAAAA,IAAeC,EAAAA,GAAAA,IAAalD,EAAAA,GAAAA,GAAiBqB,MAEtD2B,IAAc,OAAO,MAAP,qBAAH,eACD7iC,EAAAA,EAAAA,GAAM,GADL,yCAIRA,EAAAA,EAAAA,GAAM,GAJE,KAOXgX,IAAS,OAAO,MAAP,qBAAH,oDAGHhX,EAAAA,EAAAA,GAAM,IAHH,mBAIOA,EAAAA,EAAAA,GAAM,KAJb,wBAQNmiC,IAAqB,OAAO,MAAP,qBAAH,6BAEMniC,EAAAA,EAAAA,GAAM,GAFZ,MAKlBoiC,IAAkB,OAAO,OAAP,qBAAH,UACVruB,GAAKA,EAAEzY,MAAM0nC,SADH,KAIfd,IAAkB,OAAOe,GAAAA,EAAP,qBAAH,cACNlvB,GAAKA,EAAEzY,MAAM4nC,oBADP,mBAKftlB,IAAc,OAAOK,GAAAA,EAAP,qBAAH,eACDje,EAAAA,EAAAA,GAAM,GADL,KAIXqiC,IAAa,OAAOc,GAAAA,EAAP,qBAAH,6BAGcnjC,EAAAA,EAAAA,GAAM,GAHpB,M,6HCtKhB,MAAMojC,IAAYC,EAAAA,GAAAA,GAAc,CAC9BC,SAAU,qBACVC,iBAAkB,QAAC,SAAC3uB,GAAF,SAAgB,QAAC,EAAA0C,SAAD,UAAW1C,OA6DzC4uB,GAAc,IAmBP,IAnBQ,OACnB9T,EADmB,GAEnB90B,EAFmB,KAGnBqgB,EAHmB,GAInB+C,EAJmB,KAKnB7J,EALmB,MAMnBhW,EANmB,MAOnBslC,EAPmB,OAQnB1a,EARmB,SASnB2a,EATmB,MAUnBC,EAVmB,OAWnBC,EAXmB,UAYnB57B,EAZmB,UAanBoU,EAbmB,YAcnBynB,EAdmB,mBAenBC,EAfmB,aAgBnBvhC,EAhBmB,QAiBnBsS,KACGhB,GACQ,EAEPkwB,EAAc5lC,EACS,SAAvBR,EAAAA,EAAAA,gBAAeQ,KACjB4lC,EAAW,UAAG5lC,MAAAA,GAAH,UAAGA,EAAO0V,aAAV,aAAG,EAAce,gBAAjB,QAA6BzW,GAG1C,MAAM6lC,GACFN,GAAYhU,GAAU1R,GAAM5R,SAASC,SAAS43B,WAAWjmB,IAC1C,aAAhB+lB,GAA8B33B,SAASC,SAASjD,SAAS,eACzC,eAAhB26B,IACE33B,SAASC,SAASjD,SAAS,iBAC1BgD,SAASC,SAASjD,SAAS,kBAC5BgD,SAASC,SAAS43B,WAAW,eAEf,aAAhBF,GAA8B33B,SAASC,SAAS43B,WAAW,eAC3C,WAAhBF,GACC33B,SAASC,SAASjD,SAAS,cAC1BgD,SAASC,SAAS43B,WAAW,cAE5BhX,EAAWlE,GAAUib,EACrBE,EAAwB,QAAhBL,EACRM,EAAYD,EAAQ,SAAW,QAG/BE,EAAgB,oBAAmBxpC,IADtBkpC,MAAAA,EAAAA,EAAsB,KAEnCO,EAAYV,IAAUW,GAAAA,EAAAA,QAAqBF,GAQjD,OACE,QAAC,KAAD,CAAS7gB,UAAWvb,EAAW4U,MAAOze,EAAOozB,SAAU4S,EAAvD,UACE,QAACI,GAAD,CACE,eAAc1wB,EAAM,gBACpBjZ,GAAK,gBAAeA,IACpBmuB,OAAQkE,EAAW,YAASnvB,EAC5BkgB,GAAKA,GAAU/C,GAAS,IACxBmB,UAAWA,EACXvH,QAAU2vB,KACNxmB,IAAM/C,GAASupB,EAAM3qB,kBAd7B+c,EAAAA,GAAAA,GAA4B,yBAA0B,CACpDlV,KAAM9mB,EACN2H,aAAcA,GAAgB,OAc1BsS,MAAAA,GAAAA,EAAUja,EAAI4pC,GACdH,GAAaC,GAAAA,EAAAA,QAAqBF,EAAc,SAVpD,UAaE,QAACK,GAAD,YACE,QAACC,GAAD,UAAkBvwB,KAChBnM,IAAck8B,IACd,QAACS,GAAD,WACE,QAACvB,GAAD,CAAWxoC,GAAIA,EAAf,WACE,QAAC,KAAD,UAAeuD,IACdkmC,IAAa,QAAC,KAAD,CAAcxnC,KAAK,MAAM+nC,WAAS,IAC/ChB,IAAU,QAAC,KAAD,CAAc/mC,KAAK,OAAO+nC,WAAS,SAInD58B,GAAaq8B,IAAa,QAACQ,GAAD,CAAuBhoC,KAAK,QACtDmL,GAAa47B,IAAU,QAACiB,GAAD,CAAuBhoC,KAAK,cACzCiB,IAAV2lC,GAAuBA,EAAQ,IAC9B,QAACqB,GAAD,CAAkB98B,UAAWA,EAA7B,SAAyCy7B,YAlF/CD,GAAAA,YAAAA,cA0FN,UAAeuB,EAAAA,EAAAA,YAAWvB,IAEpBwB,GAAiB,IAAuD,IAAtD,OAACjc,EAAD,MAASztB,GAA6C,EAC5E,OAAKytB,GAGEhR,EAAAA,GAAAA,IAAP,SACWzc,MAAAA,OADX,EACWA,EAAOilC,MADlB,mCAMajlC,MAAAA,OANb,EAMaA,EAAOilC,MANpB,+BAUwBjlC,MAAAA,OAVxB,EAUwBA,EAAOytB,OAV/B,SAFS,IAiBLwb,IAAoB,OAAOU,GAAAA,EAAP,sBAAH,wWAyBAlxB,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAzBzB,6IAyCV7d,GAAKA,EAAEzY,MAAMilC,OAzCH,qGAuDnByE,GAvDmB,KA0DjBP,IAAqB,OAAO,MAAP,sBAAH,sEAMlBC,IAAkB,OAAO,OAAP,sBAAH,kKAefC,IAAmB,OAAO,OAAP,sBAAH,6IAUhBO,GAAyB,IAAwB,IAAvB,UAACl9B,EAAD,MAAY1M,GAAW,EACrD,OAAK0M,GAIE+P,EAAAA,GAAAA,IAAP,qEAKgBzc,EAAM6pC,OALtB,UAMW7pC,EAAM8pC,QAAQC,eANzB,WAOY/pC,EAAM8pC,QAAQC,eAP1B,kBAQmB/pC,EAAM8pC,QAAQC,eARjC,gBASiB/pC,EAAM8pC,QAAQC,eAT/B,eAUgB/pC,EAAM8pC,QAAQE,UAV9B,QAHS,IAiBLR,IAAmB,QAAO,QAAE98B,UAAWzE,KAAMsQ,GAAnB,SAA8B,mBAAUA,MAA/C,sBAAH,0CAGXE,GAAKA,EAAEzY,MAAMilC,OAHF,+BAKNxsB,GAAKA,EAAEzY,MAAM6pC,QALP,WAMXpxB,GAAKA,EAAEzY,MAAM8pC,QAAQG,WANV,YAOVxxB,GAAKA,EAAEzY,MAAM8pC,QAAQG,WAPX,mBAQHxxB,GAAKA,EAAEzY,MAAM8pC,QAAQG,WARlB,iBASLxxB,GAAKA,EAAEzY,MAAM8pC,QAAQG,WAThB,IAWlBL,GAXkB,KAchBL,IAAwB,OAAOW,GAAAA,EAAP,sBAAH,2DAM3BX,GAAsBvsB,aAAe,CACnCmtB,QAAS,YACTb,WAAW,G,wCCpTb,MAAMc,IAAiB,OAAO,MAAP,sBAAH,0EAKJ3xB,GAAKA,EAAEzY,MAAM+Y,YALT,WAMTN,GAAKA,EAAEzY,MAAM6tB,WANJ,4BAOQpV,GAAKA,EAAEzY,MAAM0Y,QAPrB,6EAUC2xB,GAAAA,GAVD,aAWP5xB,GAAKA,EAAEzY,MAAM4c,OAAOktB,QAAU,GAXvB,KAahBrxB,GACkB,QAAlBA,EAAE8vB,aACE9rB,EAAAA,GAAAA,IADJ,OAEahE,EAAEzY,MAAM8pC,QAAQQ,aAF7B,wBAMI7tB,EAAAA,GAAAA,IANJ,0BASchE,EAAE/L,UACN+L,EAAEzY,MAAM8pC,QAAQS,eAChB9xB,EAAEzY,MAAM8pC,QAAQU,cAX1B,SAdgB,KAsGpB,GAtDA,YAO8B,IAPR,YACpBjC,EADoB,UAEpB77B,EAFoB,UAGpB+9B,EAHoB,MAIpBnpB,EAJoB,SAKpBhI,KACGf,GACyB,EAC5B,MAAMmyB,GAAWvwB,EAAAA,EAAAA,QApBM,MACvB,IAAIF,EAASU,SAASE,eAAe,yBAQrC,OANKZ,IACHA,EAASU,SAASgwB,cAAc,OAChC1wB,EAAOqB,aAAa,KAAM,yBAC1BX,SAAS3G,KAAK42B,YAAY3wB,IAGrBA,GAWiC4wB,IAElCC,GAAoBlxB,EAAAA,EAAAA,cACvBwe,IACOA,EAAI9b,kBAAkByuB,UAIxBL,EAASpwB,QAAQ0wB,SAAS5S,EAAI9b,SAIlCmuB,OAEF,CAACA,IAaH,OAVApwB,EAAAA,EAAAA,YAAU,KAGRzS,OAAOq5B,YAAW,IAAMtmB,SAASa,iBAAiB,QAASsvB,KAEpD,WACLljC,OAAOq5B,YAAW,IAAMtmB,SAASS,oBAAoB,QAAS0vB,QAE/D,CAACA,KAEG/uB,EAAAA,EAAAA,eACL,QAACquB,GAAD,CACE5tB,KAAK,SACL9P,UAAWA,EACX67B,YAAaA,KACThwB,EAJN,UAMG+I,GACC,QAAC2pB,GAAD,YACE,QAAC,GAAD,UAAQ3pB,KACR,QAAC4pB,GAAD,CAAY3xB,QAASkxB,OAErB,MACJ,QAACU,GAAD,CAAkBC,YAAa9pB,EAA/B,SAAuChI,OAEzCoxB,EAASpwB,UAMP2wB,IAAqB,OAAO,MAAP,sBAAH,4BACKxyB,GAAKA,EAAEzY,MAAM0Y,QADlB,aAEXhU,EAAAA,EAAAA,GAAM,GAFK,gBAGR+T,GAAKA,EAAEzY,MAAM+Y,YAHL,sIAYlBoyB,IAAmB,OAAO,MAAP,sBAAH,0GAQhBD,IAAa,OAAOlS,GAAAA,GAAP,sBAAH,UACLvgB,GAAKA,EAAEzY,MAAM6zB,SADR,8CAIHnvB,EAAAA,EAAAA,GAAM,KAJH,mBAOH+T,GAAKA,EAAEzY,MAAM6tB,WAPV,MAWhBqd,GAAWluB,aAAe,CACxBpE,KAAM,MAGR,MAAM4sB,IAAQ,OAAO,MAAP,sBAAH,cACI/sB,GAAKA,EAAEzY,MAAM4nC,oBADjB,cC5IX,IAV0B,OAAO,MAAP,qBAAH,iEAIZnvB,GAAKA,EAAEzY,MAAMk5B,SAJD,uD,+CC8BvB,MAAMmS,WAAmBtzB,EAAAA,UAAwB,uDAChC,CACbuzB,WAAY,GACZxoB,SAAS,EACT9V,OAAO,KAJsC,kCAmBVxK,IAnBU,mCAoBTA,IApBS,yBAkCnC1D,UACNoR,KAAKq7B,gBACPr7B,KAAKs7B,cAGP,IACE,MAAM3qC,QCtEqB3B,EDsESgR,KAAKqI,MAAMrZ,ICtEP4I,EDsEYoI,KAAKqI,MAAMtR,aAAaf,KCrEzEhH,EAAIE,eAAgB,kBAAiB0I,gBAAuB,CAACvI,OAAQ,SDsExE2Q,KAAKwN,SAAS,CAACoF,SAAS,EAAOwoB,WAAYzqC,GAAQ,KACnD,MACAqP,KAAKwN,SAAS,CAACoF,SAAS,EAAO9V,OAAO,ICzErC,IAA0B9N,EAAa4I,ED4E1CoI,KAAKu7B,mBA9CwC,sCAsDtB,IACvB9wB,SAASyQ,OAASlb,KAAKs7B,cAAgBt7B,KAAKu7B,kBAvDC,+BAyD7B,KAChB7jC,OAAOm5B,aAAa7wB,KAAKw7B,iBAEzBx7B,KAAKw7B,gBAAkB9jC,OAAOq5B,WAAW/wB,KAAKy7B,SA1E1B,KA2EpBz7B,KAAKqI,MAAMqzB,kBA7DkC,wBAgEpC9sC,UACT,MAAM+sC,EAAqB37B,KAAK47B,UC3F7B,IAA8B5sC,EAAa6sC,ED4FZ,IAA9BF,EAAmBjhC,eC5FU1L,EDgGNgR,KAAKqI,MAAMrZ,IChGQ6sC,EDgGHF,EC/FtC3sC,EAAIE,eAAe,eAAgB,CACxCG,OAAQ,MACRqB,MAAO,CAACtB,GAAIysC,GACZlrC,KAAM,CAACskC,QAAS,QD8FhBj1B,KAAKwN,UAASpF,IAAS,CACrBgzB,WAAYhzB,EAAMgzB,WAAW/jC,KAAI6e,IAAQ,IAAKA,EAAM+e,SAAS,cAlEjEniB,oBACE9S,KAAK2uB,YACLlkB,SAASa,iBAAiB,mBAAoBtL,KAAK87B,wBAGrDruB,uBACE/V,OAAOm5B,aAAa7wB,KAAKw7B,iBACzB9jC,OAAOm5B,aAAa7wB,KAAKq7B,gBAEzB5wB,SAASS,oBAAoB,mBAAoBlL,KAAK87B,wBAMxDP,eACMv7B,KAAKq7B,gBACPr7B,KAAKs7B,cAEPt7B,KAAKq7B,eAAiB3jC,OAAOq5B,WAAW/wB,KAAK2uB,UAvC5B,KA0CnB2M,cACE5jC,OAAOm5B,aAAa7wB,KAAKq7B,gBACzBr7B,KAAKq7B,oBAAiB/oC,EA8CpBspC,gBACF,OAAO57B,KAAKoI,MAAMgzB,WACdp7B,KAAKoI,MAAMgzB,WAAW3gC,QAAOyb,IAASA,EAAK+e,UAAS59B,KAAI6e,GAAQA,EAAK9mB,KACrE,GAGNyX,SACE,MAAM,YAACwxB,EAAD,UAAc77B,EAAd,aAAyBu/B,EAAzB,UAAuCxB,GAAav6B,KAAKqI,OACzD,WAAC+yB,EAAD,QAAaxoB,GAAW5S,KAAKoI,MAE7B4zB,EAAch8B,KAAK47B,UAEzB,OACE,QAAC,KAAD,WACE,QAAC,EAAA9vB,SAAD,YACE,QAAC,GAAD,CACE,eAAa,qBACbusB,YAAaA,EACb77B,UAAWA,EACX+gB,OAAQwe,IAAiBE,GAAAA,EAAAA,WACzBhE,MAAO+D,EAAYthC,OACnBiO,MAAM,QAAC,MAAD,CAAeD,KAAK,OAC1B/V,OAAOnC,EAAAA,EAAAA,GAAE,cACT6Y,QAASrJ,KAAKk8B,gBACd9sC,GAAG,eAGJ2sC,IAAiBE,GAAAA,EAAAA,aAChB,QAAC,GAAD,CACE,eAAa,2BACb5D,YAAaA,EACb77B,UAAWA,EACX4U,OAAO5gB,EAAAA,EAAAA,GAAE,wBACT+pC,UAAWA,EALb,UAOG3nB,GACC,QAAC,KAAD,IACwB,IAAtBwoB,EAAW1gC,QACb,QAAC,GAAD,WACGlK,EAAAA,EAAAA,GAAE,6CAGL4qC,EAAW/jC,KAAI6e,IACb,QAAC,GAAD,CAEE+e,QAAS/e,EAAK+e,QACd7jB,MAAO8E,EAAK9E,MACZ1f,QAASwkB,EAAKxkB,QACd+f,KAAMyE,EAAKzE,KACXyjB,IAAKhf,EAAKgf,KALLhf,EAAK9mB,OAShB,QAAC,GAAD,aAlIR+rC,GAAAA,YAAAA,aA2IN,UAAeta,EAAAA,GAAAA,GAAQsa,I,gFEvKvB,MAWA,GAX6B5yB,IAAsBgE,EAAAA,GAAAA,IAAtB,gCAEbhE,EAAEzY,MAAM+Y,WAFI,UAGjBN,EAAEzY,MAAM6tB,UAHS,0ICwBtBwe,GAAsB,IAAiC,IAAhC,GAAC3pB,EAAD,KAAK/C,KAASpH,GAAkB,EAC3D,OAAIoH,GACK,QAAC,IAAD,CAAcA,KAAMA,KAAUpH,IAGnCmK,GACK,QAAC,KAAD,CAAMA,GAAIA,KAAQnK,KAGpB,eAAKsI,SAAU,KAAOtI,KATzB8zB,GAAAA,YAAAA,sBAYN,Y,2DCvBA,MAAMC,IAAoB,QAAO,QAAC,aAACrlC,EAAD,aAAeslC,KAAiBh0B,GAAjC,SAC/B,kBAASA,EAAT,UAC8B,qBAA3BtR,EAAa2B,OAAOtJ,IACnB,QAACktC,GAAD,CAAuB,eAAa,2BAEpC,QAAC,KAAD,CAAoBvlC,aAAcA,EAAc2R,KAAM,MAExD,0BACE,QAAC6zB,GAAD,CAAMC,gBAA4C,qBAA3BzlC,EAAa2B,OAAOtJ,GAA3C,SACG2H,EAAatH,SAEb4sC,IACD,QAACI,GAAD,WAAe3qB,EAAAA,EAAAA,IAAG,aAAc,cAAeuqB,aAZ7B,sBAAH,sEAmBd7nC,EAAAA,EAAAA,GAAM,GAnBQ,gCAqBVA,EAAAA,EAAAA,GAAM,GArBI,KAqBE+T,GAAKA,EAAEzY,MAAM8pC,QAAQ8C,aArBvB,KAwBjBH,IAAO,OAAO,MAAP,sBAAH,UACCh0B,GAAMA,EAAEi0B,gBAAkBj0B,EAAEzY,MAAM6zB,QAAUpb,EAAEzY,MAAM6tB,WADrD,eAEKpV,GAAKA,EAAEzY,MAAM2lC,eAFlB,sCAKNltB,GAAKA,EAAEzY,MAAM8tB,kBALP,KAQJ6e,IAAe,OAAO,MAAP,sBAAH,UACPl0B,GAAKA,EAAEzY,MAAM6zB,SADN,eAEHpb,GAAKA,EAAEzY,MAAMiZ,gBAFV,8BAIFvU,EAAAA,EAAAA,GAAM,IAJJ,KAKd+T,GAAKA,EAAEzY,MAAM8tB,kBALC,KAQZ0e,IAAwB,OAAO,MAAP,sBAAH,oGAMJ/zB,GAAKA,EAAEzY,MAAMi5B,SANT,uBAU3BuT,GAAsBxvB,aAAe,CACnC1D,UAAU,QAAC,MAAD,CAAaV,KAAK,KAAKi0B,MAAM,aAGzC,YC3DMC,GAAkB,IAA2C,IAA1C,GAACpqB,EAAD,SAAKpJ,EAAL,KAAeqG,KAASpH,GAAkB,EACjE,MAAMw0B,GAAWrqB,IAAO/C,EACxB,OACE,QAACqtB,GAAD,CAA2BtqB,GAAIA,EAAI/C,KAAMA,KAAUpH,EAAnD,UACE,QAAC00B,GAAD,CAAeF,QAASA,EAAxB,SAAkCzzB,OAJlCwzB,GAAAA,YAAAA,kBASN,MAAMI,GACJz0B,IACGgE,EAAAA,GAAAA,IAFmB,SAGbhE,EAAEzY,MAAM6tB,UAHI,0CAMRpV,EAAEzY,MAAMiZ,eANA,+BAQRR,EAAEzY,MAAM8pC,QAAQ8C,YARR,oDAWhBn0B,EAAEiK,MAAQjK,EAAEkH,OAAS,mBAXL,gDAgBLlH,EAAEzY,MAAM0wB,oBAhBH,UAiBVjY,EAAEzY,MAAM6tB,UAjBE,kBAqBnBye,GArBmB,wC,gDA2BvB,MAAMW,IAAgB,OAAO,OAAP,qBAAH,WAEfx0B,GACAA,EAAEs0B,SACEtwB,EAAAA,GAAAA,IADJ,aAEmBhE,EAAEzY,MAAM8pC,QAAQ8C,YAFnC,cAGmBn0B,EAAEzY,MAAM8pC,QAAQ8C,YAHnC,YAHe,KAabI,IAA4B,OAAOX,GAAP,qBAC9Ba,GAD2B,KAK/B,MC/CMC,GAAc,QAAC,YAAC5E,EAAD,UAAc77B,EAAd,UAAyB+9B,EAAzB,aAAoCxjC,GAArC,SAClB,QAAC,KAAD,UACG,QAAC,OAACmmC,EAAD,cAASC,EAAT,aAAwBC,GAAzB,SACC,QAACC,GAAD,YACE,QAACC,GAAD,IAAeH,EAAc,CAAC9zB,QAASkxB,IAAvC,UACE,QAAC,GAAD,CACE,eAAa,eACblC,YAAaA,EACb77B,UAAWA,EACX07B,UAAU,EACVvvB,MAAM,QAAC,MAAD,CAAcD,KAAK,OACzB/V,OAAOnC,EAAAA,EAAAA,GAAE,QACTpB,GAAG,WAIN8tC,IACC,QAACK,GAAD,IAAcH,EAAa,IAAK/E,YAAaA,EAA7C,WACE,QAAC,GAAD,CACE,eAAa,uBACbhvB,QAAS,KAAMpT,EAAAA,EAAAA,qBAAoB,CAACc,aAAAA,IAFtC,UAIGvG,EAAAA,EAAAA,GAAE,oCAEL,QAAC,GAAD,CAAiBif,KAAK,0BAAtB,UACGjf,EAAAA,EAAAA,GAAE,wBAEL,QAAC,KAAD,CAAMf,KAAK,oBAAoBsH,aAAcA,cA3BnDkmC,GAAAA,YAAAA,cAmCN,YAEMI,IAAW,OAAO,MAAP,qBAAH,4CAORC,IAAY,OAAO,MAAP,qBAAH,IAETC,IAAW,OAAO,MAAP,CAAeC,kBAAmBj1B,GAAW,gBAANA,EAAvC,oBAGbk1B,GAHU,KAIVl1B,GAAwB,SAAlBA,EAAE8vB,YAAyB,eAAkB,SAAO7jC,EAAAA,EAAAA,GAAM,mBAJtD,K,kKCfd,MAAMghC,IAAO,OAAO,MAAP,qBAAH,0GAOCjtB,GAAKA,EAAEzY,MAAM4tC,YAPd,eAQKn1B,GAAKA,EAAEzY,MAAM+zB,oBARlB,4BAUNtb,GAAKA,EAAEo1B,SAAWp1B,EAAEo1B,QAAQp1B,IAVtB,KAaJq1B,IAAe/wB,EAAAA,EAAAA,GAAO2oB,IAE5BoI,GAAa9wB,aAAe,CAC1BC,QAAS,CAACf,QAAS,EAAGgB,GAAI,IAC1BC,QAAS,CAACjB,QAAS,EAAGgB,EAAG,GACzBE,KAAM,CAAClB,QAAS,EAAGgB,EAAG,IACtBG,YAAYC,EAAAA,EAAAA,MAGd,MAAMywB,GAAe,IAaR,IAbS,MACpBtlB,EADoB,SAEpBulB,EAAW,EAFS,SAGpBC,EAAW,IAHS,KAIpBr1B,EAAO,GAJa,SAKpBs1B,EAAW,EALS,KAMpB94B,EANoB,QAOpBy4B,EAPoB,YAQpBM,GAAc,EARM,cASpBC,EAAgBpuC,GAAAA,GAAAA,SATI,gBAUpBquC,EAAkBruC,GAAAA,GAAAA,QAVE,gBAWpBsuC,KACG71B,GACQ,EACX,MAAM81B,EAAS31B,EAAO,EAAIs1B,EAAW,EAC/BM,EAAgB,EAAI5N,KAAK6N,GAAKF,EAG9BG,GADe9N,KAAKC,IAAID,KAAKpN,IAAI/K,EAAOulB,GAAWC,GACxBD,IAAaC,EAAWD,GACnDW,EAAqB,IAAXD,EACVE,GAAkB,EAAIF,GAAYF,EAElCK,EAAgBV,EAAcL,GAAepI,GAEnD,IAAIoJ,GACF,QAACD,EAAD,CAA2ChB,QAAAA,EAASc,QAAAA,EAApD,SACGv5B,GADiBA,MAAAA,OAApB,EAAoBA,EAAMC,YAW5B,OANAy5B,EAAWX,GACT,QAAC5xB,EAAA,EAAD,CAAiBU,SAAS,EAA1B,SAAkC6xB,IAElCA,GAIA,QAACC,GAAD,CACEvyB,KAAK,MACLwyB,OAAiB,EAATT,EAAaL,EACrBe,MAAgB,EAATV,EAAaL,KAChBz1B,EAJN,WAME,QAACy2B,GAAD,CACEl9B,EAAGu8B,EACHL,SAAUA,EACViB,GAAIZ,EAASL,EAAW,EACxBkB,GAAIb,EAASL,EAAW,EACxBrB,MAAOwB,KAET,QAACgB,GAAD,CACEC,iBAAkBV,EAClBW,cAAejB,EACfE,cAAeA,EACfx8B,EAAGu8B,EACHL,SAAUA,EACViB,GAAIZ,EAASL,EAAW,EACxBkB,GAAIb,EAASL,EAAW,EACxBrB,MAAOuB,KAET,yBAAeY,OAAO,OAAOC,MAAM,OAAnC,cACYzsC,IAAT4S,GAAsB05B,QA7DzBf,GAAAA,YAAAA,eAmEN,MAAMgB,IAAU,OAAO,MAAP,qBAAH,4CAIPG,IAAiB,OAAO,SAAP,qBAAH,qBAERz2B,GAAKA,EAAEo0B,OAFC,kBAGFp0B,GAAKA,EAAEy1B,UAHL,+BAOdmB,IAAU,OAAO,SAAP,qBAAH,qBAMD52B,GAAKA,EAAEo0B,OANN,kBAOKp0B,GAAKA,EAAEy1B,UAPZ,wBAQSz1B,GAAKA,EAAE+1B,eARhB,KAQiC/1B,GAAKA,EAAE+1B,eARxC,uGAcb,MCvJA,SAASgB,GAAT,GAA2D,IAAnC,SAACC,EAAD,eAAWC,GAAwB,EACzD,MAAM1vC,GAAQ8qB,EAAAA,GAAAA,KAEd,OACE,QAAC,GAAD,YACE,QAAC6kB,GAAD,CACE/2B,KAAM,GACNs1B,SAAU,EACV94B,KAAMq6B,EAAS7kC,OAAS8kC,EAAe9kC,OACvCujC,aAAW,EACX1lB,MAAQinB,EAAe9kC,OAAS6kC,EAAS7kC,OAAU,IACnD0jC,gBAAgB,QAChBD,gBAAiBruC,EAAM4vC,QACvB/B,QAAS,KAAMpxB,EAAAA,GAAAA,IAAL,wBAECzc,EAAM6tB,UAFR,WAKX,QAACgiB,GAAD,WAAcnvC,EAAAA,EAAAA,GAAE,kBAChB,QAACovC,GAAD,WACGpvC,EAAAA,EAAAA,GAAE,0EApBF8uC,GAAAA,YAAAA,iBA0BT,YAEMpzB,IAAY,OAAO,MAAP,sBAAH,0GAIM1X,EAAAA,EAAAA,GAAM,GAJZ,iBAKEA,EAAAA,EAAAA,GAAM,GALR,OAKgBA,EAAAA,EAAAA,GAAM,GALtB,KAQTirC,IAAqB,OAAO5B,GAAP,sBAAH,uDAKlB8B,IAAc,OAAO,KAAP,sBAAH,iEAMXC,IAAc,OAAO,MAAP,sBAAH,UACNr3B,GAAKA,EAAEzY,MAAMk5B,SADP,kC,sKCzCjB,MAAM6W,WAAoBh4B,EAAAA,UAAwB,uDACjC,CACbi4B,kBAAkB,KAF4B,6BAK/Bj2B,IACfA,EAAE4Y,kBACFziB,KAAKwN,UAASpF,IAAS,CAAE03B,kBAAmB13B,EAAM03B,yBAPJ,0BAUlCj2B,IACZA,EAAE4Y,kBACFziB,KAAKqI,MAAM03B,YAGbl5B,SACE,MAAM,SAACuC,GAAYpJ,KAAKqI,MAExB,OACE,QAAC,EAAAyD,SAAD,WACG1C,EAAS,CAAC42B,KAAMhgC,KAAKigC,iBACtB,QAACC,GAAD,CACEz2B,QAASzJ,KAAKoI,MAAM03B,iBACpBC,OAAQ//B,KAAKmgC,WACbC,UAAWpgC,KAAKigC,oBAxBpBJ,GAAAA,YAAAA,cA+BN,YAEMQ,IAAWxI,EAAAA,GAAAA,GAAc,CAC7BC,SAAU,8BACVC,iBAAkB,KAChB,QAAC,KAAD,CAAQnc,SAAS,UAAUlT,KAAK,SAAS8J,GAAG,2BAA2B8tB,UAAQ,EAA/E,UACG9vC,EAAAA,EAAAA,GAAE,uBAWH0vC,IAAe,QAAO,QAAC,UAACE,EAAD,OAAYL,EAAQt2B,QAAS1R,KAAMsQ,GAApC,SAC1B,eAAKgB,QAAS+2B,KAAe/3B,EAA7B,WACE,uBAAI7X,EAAAA,EAAAA,GAAE,+CACN,QAAC,MAAD,CAAW40B,IAAK,EAAhB,WACE,QAACib,GAAD,KACA,QAAC,KAAD,CAAQ33B,KAAK,SAASW,QAAS02B,EAA/B,UACGvvC,EAAAA,EAAAA,GAAE,uBANU,sBAAH,YAWL+X,GAAMA,EAAEkB,QAAU,OAAS,QAXtB,+DAiBHjV,EAAAA,EAAAA,GAAM,GAjBH,mBAkBC+T,GAAKA,EAAEzY,MAAM2wB,cAlBd,kHAuBH8f,GAAAA,GAvBG,qCAwBHh4B,GAAKA,EAAEzY,MAAMiZ,gBAxBV,qBA2BGvU,EAAAA,EAAAA,GAAM,GA3BT,MCjELgsC,GAAcppC,GACzB,CAAC,WAAY,WAAWwG,SAASxG,EAAKsB,QAE3B+nC,GAAqBrpC,GAChCA,EAAKspC,gBAAkB,CAAC,WAAY,WAAW9iC,SAASxG,EAAKsB,QAElDioC,GAAmBvpC,GACC,IAA/BA,EAAKwpC,eAAelmC,SAAiB+lC,GAAkBrpC,GAE5CypC,GAAqBzpC,GAChCA,EAAKwpC,eAAelmC,OAAS,IAAM+lC,GAAkBrpC,GCWjD0pC,GAAkB,CACtB1pC,EACAL,EACA/E,KAEAo5B,EAAAA,GAAAA,GAA4B,4BAA6B,CACvDr0B,aAAAA,EACAgqC,QAAS3pC,EAAKA,KACd4pC,WAAY5pC,EAAKga,MACjBpf,OAAAA,IAsBJ,SAASivC,GAAT,GAAyF,IAA3E,OAAC/c,EAAD,KAAS9sB,EAAT,OAAe2oC,EAAf,eAAuBmB,EAAvB,aAAuCC,EAAvC,aAAqDpqC,GAAsB,EACvF,MAKMqqC,EAAev3B,IAYnB,GAXAi3B,GAAgB1pC,EAAML,EAAc,gBACpC8S,EAAE4Y,kBAEsB,aAApBrrB,EAAK44B,YACPt4B,OAAO2pC,KAAKjqC,EAAKwJ,SAAU,UAGL,WAApBxJ,EAAK44B,YACP54B,EAAKpF,SAGiB,QAApBoF,EAAK44B,WAAsB,CAC7B,MAAMrhB,EAAM,IAAIxK,IAAI/M,EAAKwJ,SAAUlJ,OAAOkJ,SAASwD,QACnDuK,EAAIof,aAAav8B,OAAO,WAAY,oBACpC8vC,EAAAA,GAAAA,GAAW3yB,EAAIxJ,WAAY+e,KAI/B,GAAIsc,GAAWppC,IAASA,EAAKspC,eAAgB,CAC3C,MAAMa,EAAc/6B,GAAAA,CAAOpP,EAAKoqC,eAEhC,OACE,QAACC,GAAD,CAAUt1B,IAAKg1B,EAAc93B,QAAS+3B,EAAtC,UACE,QAACM,GAAD,YACE,QAACC,GAAD,WACmB,aAAhBvqC,EAAKsB,SAAyB,QAACkpC,GAAD,IACd,YAAhBxqC,EAAKsB,SAAwB,QAACmpC,GAAD,OAE/BzqC,EAAKga,OACN,QAAC0wB,GAAD,CAAe1wB,MAAOmwB,EAAYp8B,WAAlC,SACGo8B,EAAYQ,YAEd3qC,EAAKzH,MACJ,QAACqyC,GAAD,CAAgBC,YAAU,EAACtyC,KAAMyH,EAAKzH,QAEtC,QAAC,KAAD,CACEuyC,qBAAqB,UACrB9wB,OAAO5gB,EAAAA,EAAAA,GAAE,oDAFX,UAIE,QAAC2xC,GAAD,CAAiBC,OAAK,WAQlC,MAAMC,EAAmBjrC,EAAKwpC,eAAelmC,OAAS,IACpD,QAAC,KAAD,CACEwnC,qBAAqB,QACrB9wB,OAAO5d,EAAAA,EAAAA,IAAI,0CAA2C,CACpD8uC,UAAWlrC,EAAKwpC,eAAe,GAAGxvB,QAHtC,UAME,QAAC,MAAD,CAAUurB,MAAM,UAAU4F,SAAO,OAI/B,oBAACC,GAAuBprC,EACxBqrC,EAAaD,IACjB,QAACA,EAAD,CAAqBprC,KAAMA,EAAMsrC,eAAgB,IAAMxB,EAAe9pC,EAAKA,QAGvEurC,EAAavrC,EAAKwrC,YACtB,QAAC,GAAD,CAAa7C,OAtEI,KACjBe,GAAgB1pC,EAAML,EAAc,WACpCgpC,EAAO3oC,EAAKA,OAoEZ,SACG,QAAC,KAAC4oC,GAAF,SACC,QAAC,GAAD,CACErd,YAAU,EACVja,KAAK,OACL,cAAYlY,EAAAA,EAAAA,GAAE,SACdmY,MAAM,QAAC,MAAD,CAAWD,KAAK,OACtBW,QAAS22B,OAMjB,OACE,QAACyB,GAAD,CACEoB,aAAW,EACX12B,IAAKg1B,EACL93B,QAAS+3B,EACT,eAAchqC,EAAKA,KAJrB,WAME,QAAC0rC,GAAD,WACGT,EACAjrC,EAAKga,UAER,QAAC,GAAD,UAAe,GAAEha,EAAK2rC,gBACU,IAA/B3rC,EAAKwpC,eAAelmC,SACnB,QAACsoC,GAAD,WACGL,EACAF,EACgB,YAAhBrrC,EAAKsB,QACJ,QAACuqC,GAAD,CAAqBtzC,KAAMyH,EAAKzH,QAEhC,QAAC,KAAD,CAAQisB,SAAS,UAAUlT,KAAK,QAAhC,UACGlY,EAAAA,EAAAA,GAAE,iBAxGRywC,GAAAA,YAAAA,OAiHT,MAAMQ,IAAW,OAAOyB,GAAAA,EAAP,sBAAH,8BAED1uC,EAAAA,EAAAA,GAAM,GAFL,KAEWA,EAAAA,EAAAA,GAAM,GAFjB,KAKRsuC,IAAkB,OAAO,MAAP,sBAAH,2DAGZtuC,EAAAA,EAAAA,GAAM,GAHM,wCAQfktC,IAAgB,OAAOoB,GAAP,qBAAH,wFAIblD,IAAc,OAAO,IAAP,qBAAH,cACFr3B,GAAKA,EAAEzY,MAAMqzC,eADX,WAEN56B,GAAKA,EAAEzY,MAAM6zB,SAFP,YAGLnvB,EAAAA,EAAAA,GAAM,IAHD,WAMXwuC,IAAY,OAAO,MAAP,qBAAH,0EAICxuC,EAAAA,EAAAA,GAAM,KAJP,KAWTyuC,IAAsB,QAAO,QAAC,KAACtzC,KAAS0Y,GAAX,SACjC,kBAASA,EAAT,WACE,QAAC,KAAD,CACE0P,UAAWpoB,EACXuyC,qBAAqB,OACrB9wB,OAAO5d,EAAAA,EAAAA,IAAI,uCAAwC,CACjD7D,KAAMA,MAAAA,OAAF,EAAEA,EAAMF,OAJhB,UAOE,QAAC,MAAD,OAEDe,EAAAA,EAAAA,GAAE,4BAXqB,qBAAH,cAcV+X,GAAKA,EAAEzY,MAAMiZ,gBAdH,4BAgBdR,GAAKA,EAAEzY,MAAMszC,SAhBC,uFAoBhB5uC,EAAAA,EAAAA,GAAM,GApBU,KAuBnBiU,IAAc,OAAOiK,EAAAA,GAAP,qBAAH,4BAENle,EAAAA,EAAAA,GAAM,KAFA,SAGRA,EAAAA,EAAAA,GAAM,KAHE,WAIN+T,GAAKA,EAAEzY,MAAMk5B,SAJP,KAOX7b,IAAaC,EAAAA,EAAAA,KAEbu0B,IAAkB,OAAO90B,EAAAA,EAAAA,IAAP,qBAAH,sCAGrB80B,GAAgB70B,aAAe,CAC7Bu2B,SAAU,CACRt2B,QAAS,CAACf,QAAS,EAAGs3B,EAAG,IACzBr2B,QAAS,CAACjB,QAAS,EAAGs3B,EAAG,IAE3Bn2B,WAAAA,IAGF,MAAMy0B,IAAoB,OAAO2B,GAAAA,GAAP,qBAAH,IACvB3B,GAAkB90B,aAAe,CAC/B02B,WAAW,EACX7G,MAAO,YAGT,MAAMkF,IAAmB,OAAO/Y,GAAAA,GAAP,qBAAH,IACtB+Y,GAAiB/0B,aAAe,CAC9B02B,WAAW,EACX7G,MAAO,WAGT,MAAM8G,GAAyB,CAC7B12B,QAAS,CAACf,QAAS,EAAGs3B,GAAI,IAC1Br2B,QAAS,CAACjB,QAAS,EAAGs3B,EAAG,IAGrBxB,IAAgB,OAAOj1B,EAAAA,EAAAA,IAAP,qBAAH,UACRtE,GAAKA,EAAEzY,MAAM6zB,SADL,eAEJpb,GAAKA,EAAEzY,MAAMqzC,eAFT,qBAMnBrB,GAAch1B,aAAe,CAC3Bu2B,SAAUI,GACVt2B,WAAAA,IAGF,MAAM60B,IAAiBn1B,EAAAA,EAAAA,GAAO62B,GAAAA,GAC9B1B,GAAel1B,aAAe,CAC5Bu2B,SAAUI,GACVt2B,WAAAA,IAGF,MAAMg1B,IAAkB,QAAOt1B,EAAAA,EAAAA,GAAO82B,GAAAA,GAAd,qBAAH,yCAIrBxB,GAAgBr1B,aAAe,CAC7Bu2B,SAAUI,GACVt2B,WAAAA,IAGF,MAAMy2B,IAAcvP,EAAAA,GAAAA,IAAiBkF,EAAAA,EAAAA,YAAW0H,KAEhD,IAAe4C,EAAAA,EAAAA,aAGb,CAACx7B,EAAO8D,KAAQ,QAACy3B,GAAD,CAAazC,aAAch1B,KAAS9D,M,+PCnRtD,MACMy7B,GAA2B,IAAIzxC,IAAI0xC,GAAAA,EAAAA,KAA2B5R,GAAK,CAACA,EAAEn8B,KAAMm8B,MAEnE,SAAS6R,GAAT,GAKoB,YALe,aAChDjtC,EADgD,KAEhDK,EAFgD,gBAGhD6sC,EAHgD,mBAIhDC,GACiC,EACjC,IAAKD,EACH,OAAO,KAGT,MAQME,EAAuB,IAAInnC,IAAJ,oBAAQ5F,EAAKzG,YAAb,aAAQ,EAAWyzC,iBAAnB,QAAgC,IACvDC,EAAsBJ,EAAgBK,qBAAqB7pC,QAC/D03B,IAAMgS,EAAqB/wC,IAAI++B,KAEjC,OAAmC,IAA/BkS,EAAoB3pC,OACf,MAGP,QAAC,GAAD,YACE,QAAC,GAAD,WAAQlK,EAAAA,EAAAA,GAAE,4BACV,QAAC+zC,GAAD,WACGF,EAAoB30B,MAAM,EAhCJ,GAgC+BrY,KAAIkR,IACxD,MAAMi8B,EAAcV,GAAyB7wC,IAAIsV,GACjD,OACE,QAACk8B,GAAD,CACEjyB,GAAK,eAAczb,EAAaf,gCAAgCuS,yBAChEc,QAAS,MACP+hB,EAAAA,GAAAA,GACE,gDACA,CACEoZ,YAAaj8B,EACbm8B,0BAA2BL,EAAoBlmC,KAAK,KACpDpH,aAAAA,KARR,UAcE,QAAC4tC,GAAD,YACE,QAAC,MAAD,CAAYC,SAAUr8B,IACrBi8B,GAAeA,EAAY/0C,MAC5B,QAACo1C,GAAD,CAAmBC,UAAU,cAL1Bv8B,MAUV87B,EAAoB3pC,OAzDE,IA0DrB,QAAC+pC,GAAD,CACEp7B,QAAS,MACP+hB,EAAAA,GAAAA,GACE,gDACA,CACEr0B,aAAAA,KAINyb,GAAK,eAAczb,EAAaf,wCATlC,UAYE,QAAC2uC,GAAD,YACE,QAACI,GAAD,KACCvxC,EAAAA,EAAAA,IAAI,iBAAkB,CACrBwxC,IAAKX,EAAoB3pC,OAzEV,QAoEf,YAWV,QAAC,GAAD,CAAaqlC,OAlEE,KACjBmE,GACEA,EAAmB,IACdD,EACHK,qBAAsB,MA8DxB,SACG,QAAC,KAACtE,GAAF,SACC,QAAC,GAAD,CACErd,YAAU,EACVja,KAAK,OACL,cAAYlY,EAAAA,EAAAA,GAAE,SACdmY,MAAM,QAAC,MAAD,CAAWD,KAAK,OACtBW,QAAS22B,SAzDH,wCA1BMgE,GAAAA,YAAAA,4BA2FxB,MAAM1O,IAAQ,OAAO,MAAP,sBAAH,2BAEC9gC,EAAAA,EAAAA,GAAM,GAFP,KAEaA,EAAAA,EAAAA,GAAM,GAFnB,OAKLitC,IAAW,QAAO50B,EAAAA,EAAAA,GAAOq2B,GAAAA,GAAd,sBAAH,yFAKM1uC,EAAAA,EAAAA,GAAM,GALZ,KAOditC,GAAS30B,aAAe,CACtBC,QAAS,UACTE,QAAS,UACTC,KAAM,OACN+3B,QAAQ,EACR5B,SAAU,CACRt2B,QAAS,CACPf,QAAS,EACTgB,EAAG,IAELC,QAAS,CACPjB,QAAS,EACTgB,EAAG,EACHG,YAAYC,EAAAA,EAAAA,GAAmB,CAC7BkV,MAAO,GACP4iB,KAAM,iBACNC,gBAAiB,MAGrBj4B,KAAM,CACJF,EAAG,GACHo4B,GAAI,GACJp5B,QAAS,EACTmB,WAAY,CAAC7b,SAAU,OAK7B,MAAMizC,IAA4B,OAAO,MAAP,sBAAH,8DAKzBM,IAAoB,OAAOQ,GAAAA,GAAP,sBAAH,IAEjBV,IAAqC,OAAO,MAAP,sBAAH,YAC3BnwC,EAAAA,EAAAA,GAAM,GADqB,sCAKpC8wC,GAAAA,GALoC,kBAMpB9wC,EAAAA,EAAAA,GAAM,GANc,KAQpCqwC,GARoC,uBAYlCJ,IAAgC,OAAOhL,GAAAA,EAAP,sBAAH,4BAEXlxB,GAAKA,EAAEzY,MAAMy1C,OAFF,gCAKpB/wC,EAAAA,EAAAA,GAAM,GALc,WAMxB+T,GAAKA,EAAEzY,MAAM6tB,WANW,sBAS7BgnB,GAT6B,6BAUFp8B,GAAKA,EAAEzY,MAAMm5B,aAVX,OAe7BxgB,IAAc,OAAOiK,EAAAA,GAAP,sBAAH,4BAENle,EAAAA,EAAAA,GAAM,KAFA,SAGRA,EAAAA,EAAAA,GAAM,KAHE,WAIN+T,GAAKA,EAAEzY,MAAMk5B,SAJP,KAMX+b,IAAoB,OAAOS,GAAAA,GAAP,sBAAH,iBACLhxC,EAAAA,EAAAA,GAAM,GADD,K,yDC7KR,SAASixC,GAAT,GAKoB,IAJjC1uC,aAAciC,EAD+B,gBAE7CirC,EAF6C,mBAG7CC,EACAzqC,SAAUisC,GACuB,EACjC,IAAKzB,EACH,OAAO,KAGT,MAOMxqC,EAAWwqC,EAAgB0B,kBAC9BtuC,KAAIgI,GAAY4kC,EAAgB2B,uBAAuBvmC,KACvDhI,KAAIqF,GAAagpC,EAAYvuC,MAAKoR,GAAKA,EAAEvS,OAAS0G,MAClDjC,QAAOkD,GAAWA,IAAYA,EAAQkoC,aACzC,OAAwB,IAApBpsC,EAASiB,OACJ,MAGP,QAAC,GAAD,YACE,QAAC,GAAD,WAAQlK,EAAAA,EAAAA,GAAE,uBACV,QAAC,GAAD,WACGiJ,EAASiW,MAAM,EA9BE,GA8BoBrY,KAAIkR,IACxC,QAAC,GAAD,CAEEiK,GAAK,eAAcxZ,EAAIhD,+BAA+BuS,EAAEnZ,KACxDia,QAAS,MACP+hB,EAAAA,GAAAA,GAA4B,oCAAqC,CAC/D/rB,SAAUkJ,EAAElJ,SACZtI,aAAciC,KANpB,UAUE,QAAC,GAAD,YACE,QAAC8sC,GAAD,CAAoBzmC,SAAUkJ,EAAElJ,UAAY,YAC3CkJ,EAAEvS,MACH,QAAC+vC,GAAD,KACA,QAACC,GAAD,WAAuBx1C,EAAAA,EAAAA,GAAE,wBACzB,QAAC,MAAD,CAAas0C,UAAU,cAdpBv8B,EAAEnZ,MAkBVqK,EAASiB,OAlDQ,IAmDhB,QAAC,GAAD,CACE8X,GAAK,eAAcxZ,EAAIhD,mBACvBqT,QAAS,MACP+hB,EAAAA,GAAAA,GAA4B,oCAAqC,CAC/Dr0B,aAAciC,KAJpB,UAQE,QAAC,GAAD,YACE,QAAC,GAAD,KACCxF,EAAAA,EAAAA,IAAI,iBAAkB,CAACwxC,IAAKvrC,EAASiB,OA7D1B,aAkEpB,QAAC,GAAD,CAAaqlC,OAtDE,KACjBmE,EAAmB,IACdD,EACH0B,kBAAmB,MAmDnB,SACG,QAAC,KAAC3F,GAAF,SACC,QAAC,GAAD,CACErd,YAAU,EACVja,KAAK,OACL,cAAYlY,EAAAA,EAAAA,GAAE,SACdmY,MAAM,QAAC,MAAD,CAAWD,KAAK,OACtBW,QAAS22B,SA9CH,4BAzBMyF,GAAAA,YAAAA,0BA+ER,OAAO54B,EAAAA,EAAAA,IAAP,sBAAH,uBAEFtE,GAAKA,EAAEzY,MAAMm2C,WAFX,eAGE19B,GAAKA,EAAEzY,MAAM+zB,oBAHf,uEAOGrvB,EAAAA,EAAAA,GAAM,GAPT,KASLsY,aAAe,CACrBI,KAAM,OACNm2B,SAAU,CACRn2B,KAAM,CACJ4xB,OAAQ,EACRoH,UAAW,EACXl6B,QAAS,EACTmB,WAAY,CAAC7b,SAAU,OAK7B,MAAMgkC,IAAQ,OAAO,MAAP,qBAAH,2BAEC9gC,EAAAA,EAAAA,GAAM,GAFP,KAEaA,EAAAA,EAAAA,GAAM,GAFnB,OAKLitC,IAAW,QAAO50B,EAAAA,EAAAA,GAAOq2B,GAAAA,GAAd,qBAAH,yFAKM1uC,EAAAA,EAAAA,GAAM,GALZ,KAOditC,GAAS30B,aAAe,CACtBI,KAAM,OACNm2B,SAAU,CACRn2B,KAAM,CACJ4xB,OAAQ,EACR3zB,SAAU,SACVgC,WAAY,CAAC7b,SAAU,OAK7B,MAAMizC,IAA4B,OAAO,MAAP,qBAAH,8DAKzBI,IAAqC,OAAO,MAAP,qBAAH,YAC3BnwC,EAAAA,EAAAA,GAAM,GADqB,uCAMlCiwC,IAAgC,OAAOhL,GAAAA,EAAP,qBAAH,4BAEXlxB,GAAKA,EAAEzY,MAAMy1C,OAFF,gCAKpB/wC,EAAAA,EAAAA,GAAM,GALc,WAMxB+T,GAAKA,EAAEzY,MAAM6tB,WANW,sBAS7BgnB,GAT6B,6BAUFp8B,GAAKA,EAAEzY,MAAMm5B,aAVX,OAe7B8c,IAAmB,OAAO,MAAP,qBACrBI,GAAAA,EADkB,sBAIhBH,IAAuB,OAAO,OAAP,qBAAH,UACfz9B,GAAKA,EAAEzY,MAAMszC,SADE,eAEX76B,GAAKA,EAAEzY,MAAMiZ,gBAFF,cAGZvU,EAAAA,EAAAA,GAAM,GAHM,KAKpBiU,IAAc,OAAOiK,EAAAA,GAAP,qBAAH,4BAENle,EAAAA,EAAAA,GAAM,KAFA,SAGRA,EAAAA,EAAAA,GAAM,KAHE,WAIN+T,GAAKA,EAAEzY,MAAMk5B,SAJP,KAOX8c,IAAqB,OAAOM,GAAAA,EAAP,qBAAH,iBACN5xC,EAAAA,EAAAA,GAAM,GADA,KAIlBuwC,IAAoB,OAAOS,GAAAA,GAAP,qBAAH,iBACLhxC,EAAAA,EAAAA,GAAM,GADD,KCnKvB,SAAS6xC,GAA0B5sC,GACjC,YAAoBnH,IAAbmH,GACHA,EAAS6Z,MAAK,QAAC,SAACjU,GAAF,SAAgBA,GAAYinC,GAAAA,EAAAA,SAAoBjnC,MAsBpE,SAASknC,GAAT,GAA6D,IAAnC,SAAC9sC,EAAD,aAAW1C,GAAwB,EAC3D,IAAK0C,IAAaA,EAASiB,OACzB,MAAQ,kBAAiB3D,EAAaf,qBAGxC,MAAMwwC,EAAyB/sC,EAAStC,MAAKwG,KAAaA,EAAQkoC,aAC5DloC,EAAU6oC,MAAAA,EAAAA,EAA0B/sC,EAAS,GACnD,MAAQ,kBAAiB1C,EAAaf,eAAe2H,EAAQ3H,eAG/D,SAASywC,GAAT,GAA8D,IAAnC,SAAChtC,EAAD,aAAW1C,GAAwB,EAC5D,IAAK0C,IAAaA,EAASiB,OACzB,MAAQ,kBAAiB3D,EAAaf,qBAGxC,MAAMwwC,EAAyB/sC,EAAStC,MACtCwG,KAAaA,EAAQ+oC,wBAEjB/oC,EAAU6oC,MAAAA,EAAAA,EAA0B/sC,EAAS,GACnD,MAAQ,kBAAiB1C,EAAaf,eAAe2H,EAAQ3H,2CA0NxD,SAAS2wC,GAAT,GAA4E,IAApD,aAAC5vC,EAAD,SAAe0C,EAAf,gBAAyBwqC,GAA2B,EACjF,MAAM2C,EAxND,YAIiC,cAJL,aACjC7vC,EADiC,SAEjC0C,EAFiC,gBAGjCwqC,GACsC,EACtC,MAAO,CACL,CACE7sC,KAAMyvC,GAAAA,GAAAA,cACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,oBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,oHAEFoyC,WAAW,EACXkE,WAAY,GACZ9W,WAAY,MACZpvB,SAAW,kBAAiB7J,EAAaf,qBACzC+wC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,YACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,4BACTuyC,aAAavyC,EAAAA,EAAAA,GACX,+HAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,eACb7W,WAAY,MACZpvB,SAAW,aAAY7J,EAAaf,oCACpC+wC,SAAS,EACTvE,qBAAqB3hB,EAAAA,GAAAA,IAAQ,QAAC,IAAC7xB,EAAD,KAAMoI,EAAN,eAAYsrC,GAAb,SACzBjpC,MAAAA,GAAAA,EAAUiB,QAAyC,IAA/BtD,EAAKwpC,eAAelmC,SAAiBtD,EAAKspC,gBAC9D,QAAC,KAAD,CACE1xC,IAAKA,EACL+H,aAAcA,EACd4G,QAASlE,EAAS,GAClButC,UAAU,QACVC,gBAAiB,KAAOzG,GAAWppC,IAASsrC,IAL9C,SAOG,KAAM,QAACwE,GAAD,MAEP,SAGR,CACE9vC,KAAMyvC,GAAAA,GAAAA,cACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,oBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,qHAEFoyC,WAAW,EACXkE,WAAY,GACZ9W,WAAY,SACZh+B,OAAQ,KAAMoE,EAAAA,EAAAA,wBAAuB,CAAC+wC,OAAQ,sBAC9CJ,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,kBACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,uCACTuyC,aAAavyC,EAAAA,EAAAA,GACX,iIAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,MACZpvB,SAAW,aAAY7J,EAAaf,qBACpC+wC,QAAiE,KAAxD,UAAC9C,MAAAA,OAAD,EAACA,EAAiBK,qBAAqB5pC,cAAvC,QAAiD,IAE5D,CACEtD,KAAMyvC,GAAAA,GAAAA,gBACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,0BACTuyC,aAAavyC,EAAAA,EAAAA,GACX,+IAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,MACZpvB,SAAW,kBAAiB7J,EAAaf,qBACzC+wC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,kBACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,qBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,4IAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,eACb7W,WAAY,WACZpvB,SAAU,8DACVmmC,SAAS,EACTvE,qBAAqB3hB,EAAAA,GAAAA,IAAQ,QAAC,IAAC7xB,EAAD,KAAMoI,EAAN,eAAYsrC,GAAb,SACzBjpC,MAAAA,GAAAA,EAAUiB,QAAyC,IAA/BtD,EAAKwpC,eAAelmC,SAAiBtD,EAAKspC,gBAC9D,QAAC,KAAD,CACE1xC,IAAKA,EACL+H,aAAcA,EACd4G,QAASlE,EAAS,GAClButC,UAAU,cACVC,gBAAiB,KAAOzG,GAAWppC,IAASsrC,IAL9C,SAOG,KAAM,QAACwE,GAAD,MAEP,SAGR,CACE9vC,KAAMyvC,GAAAA,GAAAA,aACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,yBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,kJAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,WACZpvB,SACE,kFACFmmC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,iBACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,kBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,mIAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,MACZpvB,SAAW,aAAY7J,EAAaf,6CACpC+wC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,WACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,sBACTuyC,aAAavyC,EAAAA,EAAAA,GACX,4IAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,WACZpvB,SAAU,0DACVmmC,QAASV,GAA0B5sC,IAErC,CACErC,KAAMyvC,GAAAA,GAAAA,aACNz1B,MAAO,qBACP2xB,aAAavyC,EAAAA,EAAAA,GAAE,uDACfoyC,WAAW,EACXkE,WAAY,CACVD,GAAAA,GAAAA,cACAA,GAAAA,GAAAA,YACAA,GAAAA,GAAAA,cAEF7W,WAAY,MACZpvB,SAAW,aAAY7J,EAAaf,yCACpC+wC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,cACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,yBACTuyC,aAAavyC,EAAAA,EAAAA,GAAE,mDACfoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,aAC9C7W,WAAY,MACZpvB,SAAW,aAAY7J,EAAaf,oCACpC+wC,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,WACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,4BACTuyC,aAAavyC,EAAAA,EAAAA,GACX,uHAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,eACb7W,WAAY,MACZpvB,SAAU2lC,GAAiB,CAAC9sC,SAAAA,EAAU1C,aAAAA,EAAcktC,gBAAAA,IACpD8C,SAAS,GAEX,CACE3vC,KAAMyvC,GAAAA,GAAAA,aACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,8BACTuyC,aAAavyC,EAAAA,EAAAA,GACX,0KAEFoyC,WAAW,EACXkE,WAAY,CAACD,GAAAA,GAAAA,cAAiCA,GAAAA,GAAAA,mBAC9C7W,WAAY,MACZpvB,SAAU6lC,GAAkB,CAAChtC,SAAAA,EAAU1C,aAAAA,EAAcktC,gBAAAA,IACrD8C,QAAO,UAAEhwC,EAAa+hB,gBAAf,aAAE,EAAuBlb,SAAS,cAE3C,CACExG,KAAMyvC,GAAAA,GAAAA,uBACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,qBACTuyC,YAAa,GACbH,WAAW,EACXkE,WAAY,GACZ9W,WAAY,SACZh+B,OAAQ,OACR+0C,SAAS,EACTK,WAAY3B,IAEd,CACEruC,KAAMyvC,GAAAA,GAAAA,aACNz1B,OAAO5gB,EAAAA,EAAAA,GAAE,yBACTuyC,YAAa,GACbH,WAAW,EACXkE,WAAY,GACZ9W,WAAY,SACZh+B,OAAQ,OACR+0C,UAAU,UAAChwC,EAAaswC,mBAAd,QAAC,EAA0BC,+CACrCC,WAAYV,GAAAA,GAAAA,kBACZO,WAAYI,KAMQC,CAAmB,CAAC1wC,aAAAA,EAAc0C,SAAAA,EAAUwqC,gBAAAA,IAC9DyD,EAAc3wC,EAAaG,gBAG3BqoC,EAAWqH,EAAgBvvC,KAC/BswC,IAAI,IAEGA,KACAD,EAAYvwC,MACbowC,GACEA,EAAWnwC,OAASuwC,EAAKvwC,MAAQmwC,EAAWnwC,OAASuwC,EAAKJ,aAE9D3G,eAAgB,OAKtB,OAAOrB,EAASloC,KAAID,IAAQ,IACvBA,EACHwpC,eAAgBxpC,EAAK0vC,WAClBzvC,KAAIyS,GAAOy1B,EAASpoC,MAAKywC,GAASA,EAAMxwC,OAAS0S,MACjDrP,QAAOotC,GAA8B,aAAnBA,EAAQnvC,aAIjC,MAAMqtC,IAAmB,OAAO,MAAP,qBACrBI,GAAAA,EADkB,kBAEJ3xC,EAAAA,EAAAA,GAAM,GAFF,KAKhB0yC,IAAwB,QAAQ3+B,IACpC,kBAASA,EAAT,WACE,QAAC,GAAD,KACC/X,EAAAA,EAAAA,GAAE,yBAHuB,qBAAH,0DASZ+X,GAAKA,EAAEzY,MAAMiZ,gBATD,WAUhBR,GAAKA,EAAEzY,MAAMszC,SAVG,KCpRrB0E,IAAU,OAAOj7B,EAAAA,EAAAA,IAAP,sBAAH,uBAEFtE,GAAKA,EAAEzY,MAAMm2C,WAFX,eAGE19B,GAAKA,EAAEzY,MAAM+zB,oBAHf,uEAOGrvB,EAAAA,EAAAA,GAAM,GAPT,KAUbszC,GAAQh7B,aAAe,CACrBm4B,QAAQ,EACR93B,YAAYC,EAAAA,EAAAA,MAGd,MAAM26B,IAAyB,QAAC,GAAD,WAA2Bv3C,EAAAA,EAAAA,GAAE,eAAhB,cACtCw3C,IAAqB,QAAC,GAAD,WAAoBx3C,EAAAA,EAAAA,GAAE,eAAT,OAClCy3C,IACJ,QAAC,GAAD,WACE,QAAC,KAAD,CACE/F,qBAAqB,QACrB9wB,OAAO5gB,EAAAA,EAAAA,GAAE,gEAFX,UAIGA,EAAAA,EAAAA,GAAE,eALM,YAST03C,IAAwB,QAAC,GAAD,WAAyB13C,EAAAA,EAAAA,GAAE,cAAd,YAE3C,SAAS23C,GAAT,GAMU,IANuB,aAC/BpxC,EAD+B,UAE/ByF,EAF+B,YAG/B67B,EAH+B,QAI/BvjC,EAJ+B,SAK/B2E,GACQ,EACR,MAAMzK,GAAM+e,EAAAA,GAAAA,MACLk2B,EAAiBC,IAAsBkE,EAAAA,GAAAA,KAExCC,GAAwBp+B,EAAAA,EAAAA,UACxBq+B,GAA4Br+B,EAAAA,EAAAA,UASlC,SAASs+B,EAAYC,GAEnB,OADA9wC,OAAOm5B,aAAayX,EAA0Bl+B,SACvC,IAAI7R,SAAQuN,IACjBwiC,EAA0Bl+B,QAAU1S,OAAOq5B,WAAWjrB,EAAS0iC,MAInE,MAAM,SAACjJ,EAAD,YAAWkJ,EAAX,OAAwBlrB,EAAxB,SAAgCmrB,EAAhC,SAA0C9kC,IAAYke,EAAAA,EAAAA,UAAQ,KAClE,MAAMtpB,EAAMmuC,GAAe,CACzB5vC,aAAAA,EACA0C,SAAAA,EACAwqC,gBAAiBA,QAAmB3xC,IACnCmI,QAAOrD,GAAQA,EAAK2vC,UACjB4B,EAAQnwC,EAAIiC,QAAOrD,IAASA,EAAKgwC,aACvC,MAAO,CACL7H,SAAU/mC,EACViwC,YAAajwC,EAAIiC,QAAOrD,GAAQA,EAAKgwC,aACrC7pB,OAAQorB,EAAMluC,OAAOkmC,IACrB+H,SAAUC,EAAMluC,OAAOomC,IACvBj9B,SAAU+kC,EAAMluC,OAAOgmC,OAExB,CAAC1pC,EAAc0C,EAAUwqC,IAEtB2E,GAAkBl/B,EAAAA,EAAAA,cACtB9a,iBACE,MAAMi6C,EAActJ,EACjB9kC,QAAOrD,GAAQopC,GAAWppC,KAAUA,EAAKspC,iBACzCrpC,KAAID,GAAQA,EAAKA,OAIpB,IAAK,MAAMA,KAAQyxC,QACXN,EAnFkB,MAoFxBzxC,EAAAA,GAAAA,GAAqB9H,EAAK+H,EAAc,CAACK,KAAAA,EAAMspC,gBAAgB,MAGnE,CAAC1xC,EAAK+H,EAAcwoC,IAGhBuJ,GAAiBp/B,EAAAA,EAAAA,cACrB9a,uBAhGkC,IAkDlC8I,OAAOm5B,aAAawX,EAAsBj+B,SACnC,IAAI7R,SAAQuN,IACjBuiC,EAAsBj+B,QAAU1S,OAAOq5B,WAAWjrB,EApDlB,SAoGhC8iC,MAEF,CAACA,IAYH,SAASG,EAAgBrwC,GACvB,OAAQtB,IACNN,EAAAA,GAAAA,GAAqB9H,EAAK+H,EAAc,CAACK,KAAAA,EAAMsB,OAAAA,EAAQgoC,gBAAgB,IAG3E,SAASsI,EAAW5xC,GAClB,OACE,QAAC6xC,GAAD,CACE7xC,KAAMA,EAEN2oC,OAAQgJ,EAAgB,WACxB7H,eAAgB6H,EAAgB,aAF1B,GAAE3xC,EAAKA,SAlBnB+S,EAAAA,EAAAA,YAAU,KACR2+B,IAEO,KACLpxC,OAAOm5B,aAAawX,EAAsBj+B,SAC1C1S,OAAOm5B,aAAayX,EAA0Bl+B,YAE/C,CAAC0+B,IAkBJ,MAAMI,GACJ,QAACC,GAAD,WACE,QAAC98B,EAAA,EAAD,CAAiBU,SAAS,EAA1B,SAAkCnJ,EAASvM,IAAI2xC,MAD/B,kBAKdI,EAAkBX,EACrBpxC,KAAID,IAAI,uBACPA,EAAKgwC,kBADE,aACP,OAAAhwC,EAAkB,CAChBL,aAAAA,EACAK,KAAAA,EACA6sC,gBAAAA,EACAC,mBAAAA,EACAzqC,SAAAA,OAGHgB,QAAO4uC,KAAUA,IAEdhtB,EAAQ,CACZ+sB,EAAgB1uC,OAAS,GAAKqtC,MAC3BqB,EACH7rB,EAAO7iB,OAAS,GAAKstC,MAClBzqB,EAAOlmB,IAAI2xC,GACdN,EAAShuC,OAAS,GAAKutC,MACpBS,EAASrxC,IAAI2xC,GAChBplC,EAASlJ,OAAS,GAAKwtC,GACvBgB,GAGF,OACE,QAACI,GAAD,CAAkB9sC,UAAWA,EAAW+9B,UAAWzlC,EAASujC,YAAaA,EAAzE,WACE,QAACkR,GAAD,CAAUzU,IAAK0U,MACf,QAAC,GAAD,CAAgBjK,SAAUA,EAAUC,eAAgB57B,KACpD,QAAC6lC,GAAD,WACE,QAACp9B,EAAA,EAAD,CAAiBU,SAAS,EAA1B,SAAkCsP,SAhIjC8rB,GAAAA,YAAAA,0BAsIT,MAAMmB,IAAmB,OAAOI,GAAP,sBAAH,uCAIhBT,IAAmBp8B,EAAAA,EAAAA,GAAOo0B,IAEhCgI,GAAiBn8B,aAAe,CAC9BC,QAAS,UACTE,QAAS,UACTC,KAAM,OACN+3B,QAAQ,EACR5B,SAAU,CACRt2B,QAAS,CACPf,QAAS,EACTgB,EAAG,IAELC,QAAS,CACPjB,QAAS,EACTgB,EAAG,EACHG,YAAYC,EAAAA,EAAAA,GAAmB,CAC7BkV,MAAO,GACP4iB,KAAM,iBACNC,gBAAiB,MAGrBj4B,KAAM,CACJF,EAAG,GACHo4B,GAAI,GACJp5B,QAAS,EACTmB,WAAY,CAAC7b,SAAU,OAK7B,MAAMm4C,IAAW,OAAO,MAAP,sBAAH,wCAGLj1C,EAAAA,EAAAA,GAAM,GAHD,YAIFA,EAAAA,EAAAA,GAAM,GAJJ,KAIUA,EAAAA,EAAAA,GAAM,GAJhB,KAIsBA,EAAAA,EAAAA,GAAM,GAJ5B,KAIkCA,EAAAA,EAAAA,GAAM,GAJxC,KAOR20C,IAAe,OAAO,MAAP,sBAAH,gRAoBZI,IAAW,OAAO,MAAP,sBAAH,oEAOd,IAAelV,EAAAA,GAAAA,IAAiBkD,EAAAA,GAAAA,GAAa4Q,KCrPvCwB,GAAUvyC,GACE,aAAhBA,EAAKsB,QAAyC,YAAhBtB,EAAKsB,OAE/BkxC,GAAkB,KAAMr9B,EAAAA,GAAAA,IAAL,aACVzc,GAAAA,GAAAA,eADS,yBAKxB,SAAS+5C,GAAT,GAQU,UARgB,UACxBrtC,EADwB,IAExBxD,EAFwB,SAGxBS,EAHwB,aAIxBsiC,EAJwB,YAKxB1D,EALwB,UAMxBkC,EANwB,YAOxBmB,GACQ,EACR,MAIOuI,IAAmBmE,EAAAA,GAAAA,KAE1B,GAAI,UAACpvC,EAAI8f,gBAAL,QAAC,EAAclb,SAAS,cAC1B,OAAO,KAGT,MAMMksC,EANQnD,GAAe,CAC3B5vC,aAAciC,EACdS,SAAAA,EACAwqC,gBAAiBA,QAAmB3xC,IAInCmI,QAAOrD,GAAQA,EAAK2vC,UACpBtsC,QAAOrD,IAASA,EAAKgwC,aAClB2C,EAAYD,EAAkBrvC,OAAOkvC,IACrCK,EAAkBF,EAAkBpvC,OAASqvC,EAAUrvC,OAEvDuvC,EAAwBF,EAAUz2B,MACtClc,GACE0yC,EAAkBx2B,MAAK42B,GAAiBA,EAAc9yC,OAASA,EAAKA,QACpD,aAAhBA,EAAKsB,SACJtB,EAAKspC,iBAGJjf,EAAWsa,IAAiBE,GAAAA,EAAAA,iBAElC,GAAI8N,EAAUrvC,QAAUovC,EAAkBpvC,SAAW+mB,EACnD,OAAO,KAGT,MAAM9uB,GAAQnC,EAAAA,EAAAA,GAAE,eAEhB,OACE,QAAC,EAAAsb,SAAD,YACE,QAAC,GAAD,CACEQ,KAAK,SACL,aAAY3Z,EACZ0W,QA1CkB,MACtB+hB,EAAAA,GAAAA,GAA4B,2BAA4B,CAACr0B,aAAciC,IACvE0iC,KAyCIja,SAAUA,EAJZ,WAME,QAAC,GAAD,CACEwc,aAAW,EACXN,QAASiM,GACT1kC,KAAM4kC,EAAkBpvC,OAASqvC,EAAUrvC,OAC3C6d,MAAQwxB,EAAUrvC,OAASovC,EAAkBpvC,OAAU,IACvDyjC,gBAAgB,4BAChBC,gBAAgB,QAChB11B,KAAM,GACNs1B,SAAU,KAEVxhC,IACA,0BACE,QAAC,GAAD,UAAU7J,KACV,QAACw3C,GAAD,YACG32C,EAAAA,EAAAA,IAAI,oCAAqC,CAACw2C,gBAAAA,IAC1CC,IAAyB,QAACG,GAAD,aAKjC3oB,IACC,QAAC,GAAD,CACE4W,YAAaA,EACb77B,UAAWA,EACX1H,QAASylC,OA9EVsP,GAAAA,YAAAA,mBAqFT,MAAM/B,IAAU,OAAO,MAAP,sBAAH,qCAEEv/B,GAAKA,EAAEzY,MAAM0wB,qBAFf,WAGFjY,GAAKA,EAAEzY,MAAMilC,OAHX,mBAIMvgC,EAAAA,EAAAA,GAAM,KAJZ,KAOP21C,IAAY,OAAO,MAAP,sBAAH,qCAEA5hC,GAAKA,EAAEzY,MAAMqzC,eAFb,WAGJ56B,GAAKA,EAAEzY,MAAMk5B,SAHT,oEAMNx0B,EAAAA,EAAAA,GAAM,KANA,wBAUT41C,IAAuB,OAAO,MAAP,sBAAH,eACV7hC,GAAKA,EAAEzY,MAAM6pC,QADH,4CAOpB0Q,GAAY9hC,IAAsBgE,EAAAA,GAAAA,IAAtB,wCAGdyyB,GAHa,qCAMbG,GANa,WAOH52B,EAAEzY,MAAMw6C,SAPL,KASbC,GATa,UAUJhiC,EAAEzY,MAAMilC,MAVJ,KAab+S,GAba,UAcJv/B,EAAEzY,MAAMilC,MAdJ,KAgBboV,GAhBa,UAiBJ5hC,EAAEzY,MAAMilC,MAjBJ,SAqBX7oB,IAAY,OAAO,MAAP,sBAAH,oGAKN1X,EAAAA,EAAAA,GAAM,KALA,oDASX+T,GAAKA,EAAEkZ,UAAY4oB,GAAS9hC,IATjB,YAYT8hC,GAZS,MAgBf,IAAe9S,EAAAA,GAAAA,GAAasS,I,kOC5I5B,MAAMW,GAAkC,CACtC,cACA,uBACA,iBACA,gBAGF,SAASC,GAAT,GAMU,IANgB,aACxB1O,EADwB,YAExBL,EAFwB,UAGxBnB,EAHwB,UAIxB/9B,EAJwB,YAKxB67B,GACQ,EACR,MAAOqS,EAAeC,IAAoBC,EAAAA,EAAAA,UAAqC,MAiB/E,IAHAzgC,EAAAA,EAAAA,YAAU,MAZVvb,iBACE,IACE+7C,QCEC/7C,iBACL,MAAMi8C,EAAMj7C,GAAAA,EAAAA,IAAgB,cAC5B,IAAIuR,EACJ,IAAK0pC,IAAQA,EAAIz7C,GACf,OAAO,KAGT,IACE+R,QAAiBuD,MACd,WAAUmmC,EAAIz7C,MAAMy7C,EAAIC,6CAE3B,MAAOryC,GAEP,OAAO,KAGT,IAAK0I,EAAS4D,GAEZ,OAAO,KAGT,MAAMpU,QAAawQ,EAASmE,QACtB,UAACylC,EAAD,UAAY/5C,GA7DpB,SAA0Cg6C,GAIxC,GAA4B,OAAxBA,GAA+D,IAA/BA,EAAoBtwC,OACtD,MAAO,CAACqwC,UAAW,GAAI/5C,UAAW,QAGpC,IAAIi6C,GAAU,EACd,MAAMF,EAAqC,GA2B3C,OAzBAC,EAAoBnpC,SAAQqU,IAAQ,YAC7B+0B,GAA2B,UAAhB/0B,EAAKg1B,SACnBD,GAAU,GAEZF,EAAUvqC,KAAK,CACbpR,GAAI8mB,EAAK9mB,GACTK,KAAMymB,EAAKzmB,KACX07C,UAAWj1B,EAAKk1B,WAChBhV,QAAO,oBACLlgB,EAAKm1B,wBADA,aACL,EAAuBh0C,KAAIoF,IAAU,CACnCqH,KAAMrH,EAAOqH,KACbpL,OAAQ+D,EAAO/D,OACf4yC,UAAW7uC,EAAO8uC,sBAJf,QAKE,GACTC,mBAAkB,oBAChBt1B,EAAKu1B,kBADW,aAChB,EAAiBp0C,KAAIq0C,IAAmB,CACtCj8C,KAAMi8C,EAAgBj8C,KACtBiJ,OAAQgzC,EAAgBhzC,OACxB4yC,UAAWI,EAAgBH,sBAJb,QAKT,GACT58B,IAAKuH,EAAKy1B,UACVjzC,OAAQwd,EAAKxd,YAIV,CAACqyC,UAAAA,EAAW/5C,UAAWi6C,EAAU,QAAU,SAyBnBW,CAAiCj7C,EAAKo6C,WAErE,MAAO,CACLA,UAAAA,EACA/5C,UAAAA,EACA2d,IAAKhe,EAAKi0B,KAAKjW,KD7BUk9B,IACvB,MAAOhiC,GACPhY,GAAAA,IAAiBiR,IACfA,EAAMgpC,SAAS,WACfhpC,EAAMipC,eAAe,CAAC,+BACtBl6C,GAAAA,GAAwBgY,OAKT8kB,KAAa,IAG9Bqd,EAAAA,GACF,OAAO,KAGT,IAAKtB,EACH,OAAO,KAGT,MAAMntB,EAASwe,IAAiBE,GAAAA,EAAAA,iBAC1BgQ,GAAWvB,EAAcK,WAAgD,IAAnCL,EAAcK,UAAUrwC,OAEpE,OAAIuxC,EACK,MAIP,QAAC,EAAAngC,SAAD,YACE,QAAC,GAAD,CACE1c,GAAG,eACHipC,YAAaA,EACb77B,UAAWA,EACX+gB,OAAQA,EACR5U,MAAM,QAAC,MAAD,CAAaD,KAAK,OACxB/V,OAAOnC,EAAAA,EAAAA,GAAE,kBACT6Y,QAASqyB,IAEVne,GAAUmtB,IACT,QAAC,GAAD,CACErS,YAAaA,EACbjnB,OAAO5gB,EAAAA,EAAAA,GAAE,0BACT+pC,UAAWA,EACX/9B,UAAWA,EAJb,UAMGyvC,IACC,QAAC,GAAD,WAAoBz7C,EAAAA,EAAAA,GAAE,sCAEvBk6C,EAAcK,UAAU1zC,KAAI60C,IAC3B,QAAC,GAAD,CACE96B,MAAO86B,EAASz8C,KAEhB0lC,aACE,QAAC,KAAD,CACEzsB,KAAK,SACLC,MAAM,QAAC,MAAD,CAAUD,KAAK,OACrBkT,SAAS,OACTnM,KAAMy8B,EAASv9B,IACf2xB,UAAQ,EALV,UAOG9vC,EAAAA,EAAAA,GAAE,2BAXT,WAeE,QAAC27C,GAAD,YACG34C,EAAAA,EAAAA,IACC,+FACA,CACE44C,SACE,4BACE,QAAC,KAAD,CAAWp6B,KAAMk6B,EAASf,iBAKlC,QAACkB,GAAD,UACGC,IAAAA,CAAOJ,EAASV,oBAAoBrZ,GACnCqY,GAAsBpnC,QAAQ+uB,EAAEz5B,UAChCrB,KAAI,CAAC,EAAgByS,KAAjB,IAAC,KAACra,EAAD,OAAOiJ,GAAR,SACJ,QAAC6zC,GAAD,CAEEC,QAAQ,OACRC,OAAQC,GAAgBh0C,GAH1B,SAKGjJ,GAJIqa,YAUb,QAAC,GAAD,UACGoiC,EAAS9V,QAAQ/+B,KAAI,CAAC,EAA2ByS,KAA5B,IAAC,OAACpR,EAAD,KAASoL,EAAT,UAAewnC,GAAhB,SACpB,QAAC,KAAD,YACE,QAACqB,GAAD,YACE,QAACC,GAAD,UAAcC,IAAAA,CAAUn0C,MACxB,QAACo0C,GAAD,WACGt5C,EAAAA,EAAAA,IAAI,WAAY,CAACg1C,MAAM,QAAC,KAAD,CAAWx2B,KAAMs5B,YAG7C,QAAC,KAAD,CAAMyB,wBAAyB,CAACC,QAAQC,EAAAA,GAAAA,GAAOnpC,QAPlCgG,UAzCdoiC,EAAS98C,YA4D5B,SAASs9C,GAAgBh0C,GACvB,OACE,QAAC,KAAD,CAASw0C,aAAW,EAAC97B,MAAOy7B,IAAAA,CAAUn0C,GAAtC,SACc,gBAAXA,GACC,QAAC,MAAD,CAAegQ,KAAK,KAAK86B,WAAS,EAAC7G,MAAM,aAC5B,iBAAXjkC,GACF,QAAC,MAAD,CAAWgQ,KAAK,KAAKi0B,MAAM,WACd,yBAAXjkC,GACF,QAAC,MAAD,CAAagQ,KAAK,KAAKi0B,MAAM,cAChB,mBAAXjkC,GACF,QAAC,MAAD,CAAUgQ,KAAK,KAAKi0B,MAAM,eAE1B,QAAC,MAAD,CAAUj0B,KAAK,KAAKi0B,MAAM,cAvIzB8N,GAAAA,YAAAA,mBA2HAiC,GAAAA,YAAAA,kBAkBT,MAAMP,IAAmB,OAAO,MAAP,sBAAH,WACV33C,EAAAA,EAAAA,GAAM,GADI,OAIhB6iC,IAAc,OAAOM,GAAAA,EAAP,sBAAH,QACRnjC,EAAAA,EAAAA,GAAM,GADE,iBAEAA,EAAAA,EAAAA,GAAM,KAFN,yGAWHA,EAAAA,EAAAA,GAAM,GAXH,OAWWA,EAAAA,EAAAA,GAAM,GAXjB,MAWwBA,EAAAA,EAAAA,GAAM,KAX9B,gBAYC+T,GAAKA,EAAEzY,MAAM4vC,SAZd,kEAmBFlrC,EAAAA,EAAAA,GAAM,GAnBJ,kBAoBGA,EAAAA,EAAAA,GAAM,KApBT,2EAyBT+T,GAAKA,EAAEzY,MAAM+Y,YAzBJ,aA0BTN,GAAKo0B,IAAAA,CAAMp0B,EAAEzY,MAAM+Y,YAAYskC,MAAM,GAAGC,UA1B/B,aA+BXT,IAAgB,OAAO,MAAP,sBAAH,kBACAn4C,EAAAA,EAAAA,GAAM,IADN,yCAIVA,EAAAA,EAAAA,GAAM,GAJI,gJAeD+T,GAAKA,EAAEzY,MAAMm2C,WAfZ,MAmBb2G,IAAc,OAAO,MAAP,sBAAH,UACNrkC,GAAKA,EAAEzY,MAAMu9C,cADP,sBAKXP,IAAa,OAAO,MAAP,sBAAH,UACLvkC,GAAKA,EAAEzY,MAAM6zB,SADR,eAEDpb,GAAKA,EAAEzY,MAAMw9C,uBAFZ,KAKVjB,IAAgB,OAAO1U,GAAAA,EAAP,sBAAH,eACHnjC,EAAAA,EAAAA,GAAM,GADH,kCAMb+3C,IAAkB,OAAOgB,GAAAA,EAAP,sBAAH,cACNhlC,GAAKA,EAAEzY,MAAMqzC,eADP,mBAKrB,M,wFErQA,MAKA,IALgB,OAAO,MAAP,sBAAH,qCAEgB56B,GAAKA,EAAEzY,MAAMm5B,aAF7B,kB,wFCqBb,MAAMukB,GAAqB,QAAC,cAACC,EAAD,sBAAgBC,GAAjB,SACzB,QAAC,KAAD,CAAcC,kBAAgB,EAA9B,SACG,QAAC,OAACzQ,EAAD,aAASE,EAAT,cAAuBD,GAAxB,SACC,QAAC,EAAArxB,SAAD,YACE,QAAC8hC,GAAD,CACE,eAAa,wBACTzQ,EAAc,IAClB9zB,QAASQ,IAOPA,EAAE4Y,mBAVN,WAaGjyB,EAAAA,EAAAA,GAAE,wBAEH,QAACq9C,GAAD,WACE,QAAC,MAAD,CAAanlC,KAAK,KAAKo8B,UAAU,eAIpC5H,IACC,QAAC4Q,GAAD,CACE,eAAa,6BACT1Q,EAAa,IAFnB,WAIE,QAAC2Q,GAAD,CAAkBzhC,KAAK,OAAvB,SACGggC,IAAAA,CAAOmB,EAAe,CAAC,cAAcp2C,KAAIN,IACxC,MAAM4X,EAAO,kBAAiB5X,EAAaf,QAE3C,OACE,QAAC,GAAD,CAAyCwc,GAAI7D,EAA7C,UACE,QAAC,GAAD,CAAmB5X,aAAcA,KADbA,EAAaf,WAMxCy3C,KAAmBA,EAAc/yC,QAAUgzC,IAC1C,QAAC,GAAD,CAASnhC,IAAG,KAEbmhC,IACC,QAAC,GAAD,CACE,eAAa,qBACbl7B,GAAG,sBACH1H,MAAO,CAACkjC,WAAY,UAHtB,UAKE,QAACC,GAAD,YACE,QAACC,GAAD,KACA,0BAAO19C,EAAAA,EAAAA,GAAE,8CAnDrBg9C,GAAAA,YAAAA,qBA8DN,MAGA,IAHoCW,EAAAA,GAAAA,GAAkBX,IAKhDU,IAAgB,OAAOE,GAAAA,GAAP,qBAAH,iBACD55C,EAAAA,EAAAA,GAAM,GADL,WAER+T,GAAKA,EAAEzY,MAAMk5B,SAFL,KAKbilB,IAAwB,OAAO,OAAP,qBAAH,0DAIdz5C,EAAAA,EAAAA,GAAM,GAJQ,OAOrBq5C,IAAe,OAAO,OAAP,qBAAH,UACPtlC,GAAKA,EAAEzY,MAAMk5B,SADN,yDAMLzgB,GAAKA,EAAEzY,MAAM6zB,SANR,MAWZiqB,IAA8B,OAAO,OAAP,qBAAH,4EAIlBrlC,GAAKA,EAAEzY,MAAM8pC,QAAQ8C,aAJH,eAKlBn0B,GAAKA,EAAEzY,MAAM8pC,QAAQ8C,aALH,KAQ3BoR,IAAyB,OAAO,MAAP,qBAC3BrQ,GADwB,sBAMtBsQ,IAAmB,OAAO,MAAP,qBAAH,4DCrFhBM,GAAkB,IASX,cATY,IACvBr/C,EADuB,IAEvBgK,EAFuB,SAGvBS,EAHuB,YAIvB4+B,EAJuB,UAKvB77B,EALuB,OAMvBwR,EANuB,KAOvBre,EAPuB,aAQvB2+C,GACW,EACX,MAAMC,EAAe3/C,gBACbmB,EAAAA,GAAAA,IAAOf,GACb0I,OAAOkJ,SAASE,OAAO,iBAGnB0tC,IAAoBx1C,EACpBy1C,IAAY9+C,EAIZ++C,EAAa11C,MAAAA,GAAH,UAAGA,EAAKupB,cAAR,aAAG,EAAa3kB,SAAS,YACnC+wC,EAAgB31C,MAAAA,GAAH,UAAGA,EAAKupB,cAAR,aAAG,EAAa3kB,SAAS,eACtCgxC,EAAc51C,MAAAA,GAAH,UAAGA,EAAKupB,cAAR,aAAG,EAAa3kB,SAAS,aACpCixC,EAAej/C,GAAAA,EAAAA,IAAgB,YAAYwD,IAAI,wBAG/C07C,EACJN,GAAmBC,GACjB,QAACM,GAAD,CACEvyC,UAAWA,EACXzF,aAAciC,EACdrJ,KAAOqJ,OAAa1G,EAAP3C,EACb+Y,KAAM,GACN05B,OAAO,KAGT,QAAC4M,GAAD,CAAYx8B,GAAG,IAAf,UACE,QAAC,MAAD,CAAY9J,KAAK,WAIvB,OACE,QAAC,KAAD,UACG,QAAC,OAACw0B,EAAD,aAAS+R,EAAT,cAAuB9R,EAAvB,aAAsCC,GAAvC,SACC,QAAC8R,GAAD,IAAyBD,IAAzB,WACE,QAACE,GAAD,CACE99C,KAAK,SACL,eAAa,sBACT8rC,EAAc,IAHpB,UAKG2R,GACCtyC,GAA6B,QAAhB67B,IACb,QAAC+W,GAAD,YACE,QAACC,GAAD,WACGb,EAAkBx1C,EAAIvJ,KAAOE,EAAKF,KAAM,KACzC,QAAC,GAAD,CAAmBktC,MAAM,QAAQj0B,KAAK,KAAKo8B,UAAU,aAEvD,QAACwK,GAAD,UACGd,EAAkB7+C,EAAKF,KAAOE,EAAKkP,cAM3Cq+B,IACC,QAACqS,GAAD,IAAoBnS,EAAa,IAAjC,UACGoR,IACC,QAAC,EAAA1iC,SAAD,YACE,QAAC,GAAD,CAAmB/U,aAAciC,EAAKqjC,aAAc5iC,EAASiB,UAC3D4zC,IACA,QAAC,EAAAxiC,SAAD,WACG4iC,IACC,QAAC,GAAD,CAAiBl8B,GAAK,aAAYxZ,EAAIhD,QAAtC,UACGxF,EAAAA,EAAAA,GAAE,2BAGNm+C,IACC,QAAC,GAAD,CAAiBn8B,GAAK,aAAYxZ,EAAIhD,gBAAtC,UACGxF,EAAAA,EAAAA,GAAE,aAINo+C,IACC,QAAC,GAAD,CAAiBp8B,GAAK,aAAYxZ,EAAIhD,cAAtC,UACGxF,EAAAA,EAAAA,GAAE,YAIP,QAAC,KAAD,CACEf,KAAK,qCACLsH,aAAciC,QAKlBgV,EAAOwhC,qBACP,QAAC,KAAD,WACE,QAAC,GAAD,WACE,QAAC,GAAD,CAAoB9B,sBAAuBmB,YAOrD,QAAC,KAAD,WACGL,GAAmB7+C,IAAQ,QAAC,GAAD,MACzBA,IACD,QAAC,EAAAmc,SAAD,YACE,QAAC2jC,GAAD,CAAaj9B,GAAG,6BAAhB,UACE,QAACk9B,GAAD,CAAqB//C,KAAMA,EAAMggD,WAAY,QAG/C,0BACE,QAAC,GAAD,CAAiBn9B,GAAG,qBAApB,UACGhiB,EAAAA,EAAAA,GAAE,oBAEL,QAAC,GAAD,CAAiBgiB,GAAG,yBAApB,UACGhiB,EAAAA,EAAAA,GAAE,cAEJg+C,IACC,QAAC,KAAD,CACE/+C,KAAK,4CACLsH,aAAciC,IAGjBrJ,EAAK6S,cACJ,QAAC,GAAD,CAAiBgQ,GAAG,WAApB,UAAgChiB,EAAAA,EAAAA,GAAE,YAEpC,QAAC,GAAD,CACE,eAAa,kBACb6Y,QAASklC,EAFX,UAIG/9C,EAAAA,EAAAA,GAAE,iCArIrB69C,GAAAA,YAAAA,kBAmJN,UAAextB,EAAAA,GAAAA,IAAQ0W,EAAAA,GAAAA,GAAa8W,KAE9BW,IAAa,OAAOvV,GAAAA,EAAP,uBAAH,UACLlxB,GAAKA,EAAEzY,MAAMilC,OADR,mBAGHxsB,GAAKA,EAAEzY,MAAMilC,OAHV,MAOV0a,IAAc,OAAOhW,GAAAA,EAAP,uBAGhBlxB,GAAKy0B,GAAez0B,IAHP,uBAOXmnC,IAAsB,OAAOE,GAAAA,EAAP,sBAAH,0CAInBV,IAAsB,OAAO,MAAP,sBAAH,4CAKnBE,IAAoB,OAAO,MAAP,sBAAH,6DAIjBC,IAAgB,OAAOQ,GAAAA,EAAP,sBAAH,cACJtnC,GAAKA,EAAEzY,MAAM2lC,eADT,4CAIRltB,GAAKA,EAAEzY,MAAMilC,OAJL,oFASbua,IAAkB,OAAOO,GAAAA,EAAP,sBAAH,cACNtnC,GAAKA,EAAEzY,MAAMiZ,gBADP,oDAMfomC,IAAuB,OAAO,SAAP,sBAAH,+GAUpBE,GAVoB,kDAapBC,GAboB,WAcX/mC,GAAKA,EAAEzY,MAAMilC,OAdF,OAmBpBga,IAAe,OAAOrL,GAAAA,EAAP,sBAAH,WACNlvC,EAAAA,EAAAA,GAAM,KADA,oBAEA+T,GAAMA,EAAE/L,UAAY,KAAMhI,EAAAA,EAAAA,GAAM,MAFhC,8DAOZ+6C,IAAiB,OAAO,MAAP,sBACnB9R,GADgB,sCAIPl1B,GAAKA,EAAEzY,MAAM4c,OAAOojC,gBAJb,KAOdjL,IAAoB,OAAOQ,GAAAA,GAAP,sBAAH,gBACN7wC,EAAAA,EAAAA,GAAM,KADA,KC5NjBu7C,IAAkBlY,EAAAA,GAAAA,GAAc,CACpCC,SAAU,wBACVC,iBAAkB,QAAC,SAAC3uB,GAAF,SAAgB,QAAC,EAAA0C,SAAD,UAAW1C,EAAS,SAQxD,SAAS4mC,GAAYC,GACnBC,GAAAA,EAAAA,YAA8BD,GAGhC,SAAS1V,KACP2V,GAAAA,EAAAA,YAGF,SAASC,GAAT,GAAkD,IAAjC,SAACvvC,EAAD,aAAW7J,GAAsB,EAChD,MAAMiX,GAASC,EAAAA,GAAAA,GAAere,GAAAA,GACxBwgD,GAAcniC,EAAAA,GAAAA,GAAeoiC,GAAAA,GAC7BC,GAAcriC,EAAAA,GAAAA,GAAeiiC,GAAAA,GAE7B1zC,IAAc4zC,EAAY5zC,UAC1B+zC,GAAaz1B,EAAAA,GAAAA,GAAU,eAAchrB,GAAAA,GAAAA,YAAAA,WAOrC0gD,EAAM/lC,SAAS3G,KAAK2sC,WAG1BtmC,EAAAA,EAAAA,YAAU,KAAWowB,OAAa,CAAC35B,MAAAA,OAAD,EAACA,EAAUC,YAG7CsJ,EAAAA,EAAAA,YAAU,KACRqmC,EAAI/xC,IAAI,gBACD,IAAM+xC,EAAIn1C,OAAO,kBACvB,CAACm1C,KAGJrmC,EAAAA,EAAAA,YAAU,KACJ3N,EACFg0C,EAAI/xC,IAAI,aAER+xC,EAAIn1C,OAAO,aAGN,IAAMm1C,EAAIn1C,OAAO,eACvB,CAACmB,EAAWg0C,KAGfrmC,EAAAA,EAAAA,YAAU,KACe,cAAnBvJ,MAAAA,OAAA,EAAAA,EAAU8vC,OACZV,GAAY/T,GAAAA,EAAAA,oBAEb,CAACr7B,MAAAA,OAAD,EAACA,EAAU8vC,OAEd,MAAMxY,IAAaoY,EACb9B,IAAoBz3C,EACpBshC,EAAkCkY,EAAa,MAAQ,OAEvDI,EAAmB,CACvBtY,YAAAA,EACA77B,UAAAA,EACA07B,SAAAA,EACAnhC,aAAAA,GAGI0C,EAAW+0C,IACf,QAAC,GAAD,IACMmC,EACJl7B,OAAK,EACL9M,MAAM,QAAC,MAAD,CAAaD,KAAK,OACxB/V,OAAO,QAAC,KAAD,CAAayZ,OAAO,WAApB,UAAgC5b,EAAAA,EAAAA,GAAE,cACzCgiB,GAAK,kBAAiBzb,EAAaf,iBACnC5G,GAAG,aAIDyjB,EAAS27B,IACb,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAYD,KAAK,OACvB/V,OAAO,QAAC,KAAD,CAAayZ,OAAO,SAApB,UAA8B5b,EAAAA,EAAAA,GAAE,YACvCgiB,GAAK,kBAAiBzb,EAAaf,eACnC5G,GAAG,WAIDwhD,EAAYpC,IAChB,QAAC,KAAD,CACE1W,SAAS,0CACThf,SAAU,CAAC,kBACX/hB,aAAcA,EAHhB,UAKE,QAAC,GAAD,IACM45C,EACJhoC,MAAM,QAAC,MAAD,CAAeD,KAAK,OAC1B/V,OAAO,QAAC,KAAD,CAAayZ,OAAO,WAApB,UAAgC5b,EAAAA,EAAAA,GAAE,cACzCgiB,IAAIq+B,EAAAA,GAAAA,IAAsB95C,GAC1B3H,GAAG,kBAKH0hD,EAActC,IAClB,QAAC,KAAD,CACE1W,SAAS,4CACThf,SAAU,CAAC,oBACX/hB,aAAcA,EAHhB,UAKE,QAACg5C,GAAD,CAAiB3gD,GAAG,uBAApB,SACI2hD,IACA,QAAC,GAAD,IACMJ,EACJhoC,MAAM,QAAC,MAAD,CAAeD,KAAK,OAC1B/V,OAAO,QAAC,KAAD,CAAayZ,OAAO,cAApB,UAAmC5b,EAAAA,EAAAA,GAAE,iBAC5CgiB,GAAK,kBAAiBzb,EAAaf,oBACnC5G,GAAG,iBACC2hD,QAORC,EAAWxC,IACf,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAcD,KAAK,OACzB/V,OAAO,QAAC,KAAD,CAAayZ,OAAO,WAApB,UAAgC5b,EAAAA,EAAAA,GAAE,cACzCgiB,GAAK,kBAAiBzb,EAAaf,iBACnC5G,GAAG,aAID6hD,EAAezC,IACnB,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAaD,KAAK,OACxB/V,OAAOnC,EAAAA,EAAAA,GAAE,iBACTgiB,GAAK,kBAAiBzb,EAAaf,sBACnC5G,GAAG,kBAID8hD,EAAS1C,IACb,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAWD,KAAK,OACtB/V,OAAOnC,EAAAA,EAAAA,GAAE,UACTgiB,GAAK,kBAAiBzb,EAAaf,qBACnC5G,GAAG,WAID+hD,EAAW3C,IACf,QAAC,KAAD,CAAS11B,SAAU,CAAC,YAAa/hB,aAAcA,EAA/C,UACE,QAAC,GAAD,IACM45C,EACJhoC,MAAM,QAAC,MAAD,CAASD,KAAK,OACpB/V,OAAOnC,EAAAA,EAAAA,GAAE,YACTgiB,GAAK,kBAAiBzb,EAAaf,iBACnC5G,GAAG,eAKHgiD,EAAU5C,IACd,QAAC,KAAD,CAAS11B,SAAU,CAAC,kBAAmB/hB,aAAcA,EAArD,UACE,QAAC,GAAD,IACM45C,EACJhoC,MAAM,QAAC,MAAD,CAAUD,KAAK,OACrB/V,OAAOnC,EAAAA,EAAAA,GAAE,WACTgiB,GAAK,kBAAiBzb,EAAaf,gBACnC5G,GAAG,cAKHiiD,EAAa7C,IACjB,QAAC,KAAD,CACE1W,SAAS,2CACThf,SAAU,CAAC,WAAY,iBAAkB,mBAAoB,mBAC7D/hB,aAAcA,EACdu6C,YAAY,EAJd,UAME,QAAC,GAAD,IACMX,EACJl7B,OAAK,EACL9M,MAAM,QAAC,MAAD,CAAeD,KAAK,OAC1B/V,OAAOnC,EAAAA,EAAAA,GAAE,cACTgiB,GAAK,kBAAiBzb,EAAaf,mBACnC5G,GAAG,8BAKHmiD,EAAY/C,IAChB,QAAC,KAAD,CACE1W,SAAS,0CACThf,SAAU,CAAC,aACX/hB,aAAcA,EACdu6C,YAAY,EAJd,UAME,QAAC,GAAD,IACMX,EACJl7B,OAAK,EACL9M,MAAM,QAAC,MAAD,CAAUD,KAAK,OACrB/V,OAAOnC,EAAAA,EAAAA,GAAE,aACTgiB,GAAK,kBAAiBzb,EAAaf,kBACnC5G,GAAG,gBAKHoiD,EAAWhD,IACf,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAUD,KAAK,OACrB/V,OAAOnC,EAAAA,EAAAA,GAAE,YACTgiB,GAAK,kBAAiBzb,EAAaf,iBACnC5G,GAAG,aAIDqiD,EAAQjD,IACZ,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAWD,KAAK,OACtB/V,OAAOnC,EAAAA,EAAAA,GAAE,SACTgiB,GAAK,kBAAiBzb,EAAaf,cACnC5G,GAAG,UAIDsiD,EAAWlD,IACf,QAAC,GAAD,IACMmC,EACJhoC,MAAM,QAAC,MAAD,CAAcD,KAAK,OACzB/V,OAAOnC,EAAAA,EAAAA,GAAE,YACTgiB,GAAK,aAAYzb,EAAaf,QAC9B5G,GAAG,aAIP,OACE,QAACuiD,GAAD,CAAgBn1C,UAAWA,EAA3B,WACE,QAACo1C,GAAD,YACE,QAACC,GAAD,WACE,QAAC,GAAD,CACExZ,YAAaA,EACb77B,UAAWA,EACXxD,IAAKjC,EACLpH,KAAMqe,EAAOre,KACbqe,OAAQA,OAIZ,QAAC8jC,GAAD,UACGtD,IACC,QAAC,EAAA1iC,SAAD,YACE,QAAC+lC,GAAD,WACGp4C,EACAoZ,EACAi+B,EACAE,EACAC,EACAC,EACAN,EACAS,EACAE,MAGH,QAACM,GAAD,WACGT,EACAD,MAGH,QAACU,GAAD,WACGL,EACAC,MAGH,QAACI,GAAD,UAAiBH,YAMxBlD,IACC,QAACuD,GAAD,YACE,QAACF,GAAD,CAAgBG,UAAQ,EAACC,WAAS,EAAlC,UACE,QAAC,GAAD,CACEj5C,IAAKjC,EACLglC,aAAcuU,EACd5U,YAAa,IAAMsU,GAAY/T,GAAAA,EAAAA,kBAC/B1B,UAAWA,MACPoW,OAIR,QAACkB,GAAD,WACGtqC,EAAAA,EAAAA,IAAc,wBAAwB7M,OAAS,GAC9C6M,EAAAA,EAAAA,IAAc,wBAAwB,GAAG,CACvC8wB,YAAAA,EACA77B,UAAAA,EACA07B,SAAAA,EACAnhC,aAAAA,KAEJ,QAAC,GAAD,CACEshC,YAAaA,EACb77B,UAAWA,EACX+9B,UAAWA,GACXxjC,aAAcA,KAEhB,QAAC,GAAD,CACEshC,YAAaA,EACb77B,UAAWA,EACXu/B,aAAcuU,EACd5U,YAAa,IAAMsU,GAAY/T,GAAAA,EAAAA,YAC/B1B,UAAWA,GACXxjC,aAAcA,KAEhB,QAAC,GAAD,CACEshC,YAAaA,EACb77B,UAAWA,EACXu/B,aAAcuU,EACd5U,YAAa,IAAMsU,GAAY/T,GAAAA,EAAAA,kBAC/B1B,UAAWA,SAIbgW,IACA,QAACsB,GAAD,WACE,QAACK,GAAD,CACE9iD,GAAG,WACH,eAAa,sBACTuhD,EACJhoC,MAAM,QAAC,GAAD,CAAmBnM,UAAWA,IACpC7J,MAAO6J,GAAYhM,EAAAA,EAAAA,GAAE,WAAYA,EAAAA,EAAAA,GAAE,YACnC6Y,QA9TS,MACN7M,EAAYF,GAAAA,GAAcH,GAAAA,iBATpCg0C,GAAAA,YAAAA,UAgVT,YAEMgC,IAAiB5lC,EAAAA,GAAAA,IAAH,yDAIGzc,GAAAA,GAAAA,YAAAA,OAJH,6BASP6hD,IAAiB,OAAO,MAAP,qBAAH,eACXppC,GAAKA,EAAEzY,MAAMsiD,iBADF,WAEhB7pC,GAAKA,EAAEzY,MAAM8pC,QAAQ+C,OAFL,4CAKhBp0B,GAAKA,EAAEzY,MAAM8pC,QAAQrxB,EAAE/L,UAAY,iBAAmB,kBALtC,wBAOlB+L,GAAM3Y,GAAAA,EAAAA,IAAgB,YAAc2Y,EAAEzY,MAAMkhB,KAAKC,WAAa,GAP5C,2DAWd1I,GAAKA,EAAEzY,MAAM4c,OAAOktB,SAXN,4BAYCrxB,GAAKA,EAAEzY,MAAMuiD,eAZd,IAavBF,GAbuB,wBAeJ5pC,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAfrB,kCAmBb7d,GAAKA,EAAEzY,MAAM8pC,QAAQQ,cAnBR,sCAsBV5lC,EAAAA,EAAAA,GAAM,GAtBI,kEAyBI+T,GAAKA,EAAEzY,MAAMuiD,eAzBjB,MA6BrBN,IAAsB,OAAO,MAAP,qBACxBI,GADqB,mBAKnBP,IAA6B,OAAO,MAAP,qBAC/BO,GAD4B,wDAOT5pC,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAPhB,sCAa1B0rB,IAAe,OAAO,MAAP,qBAAH,mJAM6BvpC,GAAKA,EAAEzY,MAAMirB,YAAYqL,QANtD,8BAOa7d,GAAKA,EAAEzY,MAAM0nC,SAP1B,oBAQIhjC,EAAAA,EAAAA,GAAM,GARV,4JAeE+T,GAAKA,EAAEzY,MAAM0nC,SAff,4CAmBKjvB,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAnB9B,kGAwBY7d,GAAKA,EAAEzY,MAAM0nC,SAxBzB,mBAyBGhjC,EAAAA,EAAAA,GAAM,GAzBT,kBA0BEA,EAAAA,EAAAA,GAAM,IA1BR,4FAkCZq9C,IAAiB,OAAOE,GAAP,sBAInBxpC,IAAMA,EAAEypC,UAAa,YAAUx9C,EAAAA,EAAAA,GAAM,QAJrB,KAKhB+T,IAAMA,EAAE0pC,WAAa,mBALL,wBAOG1pC,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAP5B,gDAiBd61B,GAAe,CAAH,iFAIZC,GAAgB,CAAH,gDAGb1N,IAAoB,QAAO,QAAC,UAACroC,KAAc6L,GAAhB,SAC/B,QAAC,MAAD,CACEy8B,UAAU,OACVp8B,KAAK,KACL86B,WAAS,EACTj3B,IAAG,CAAG+lC,GAAc91C,GAAa+1C,GAA9B,UACClqC,MANkB,qBAAH,IAUjB6pC,IAAsB,OAAOla,GAAP,qBAAH,uBACFzvB,GAAKA,EAAEzY,MAAMirB,YAAYqL,QADvB,oB,0KCxdzB,MAAMosB,WAAqC3qC,EAAAA,UACV,gCAACQ,EAAwBipB,GACtD,MAAM,UAACre,GAAaqe,EAEpB,GAAIkhB,GAA6BC,cAAcx/B,EAAW5K,GACxD,OAAOmqC,GAA6BE,gBAAgBrqC,GAGtD,MAAM,qBAACsqC,EAAD,SAAuB/xC,EAAvB,OAAiC5F,GAAUqN,GAC3C,MAACjY,GAAS4K,EAChB,MAAO,IACFs2B,EACHre,UAAW,CACT7iB,MAAAA,EACAuiD,qBAAAA,EACA/xC,SAAAA,IAKc,qBAACqS,EAA+B5K,GAClD,MAAMuqC,EACJ3/B,EAAU7iB,OAASiY,EAAMrN,OAAO5K,OAAS6iB,EAAU7iB,QAAUiY,EAAMrN,OAAO5K,MAEtEyiD,EACJxqC,EAAMrN,OAAO5K,OACZiY,EAAMyqC,qBAAuBljD,GAAAA,EAAAA,IAAgB,oBAQ1CmjD,EACJ9/B,EAAU0/B,uBAAyBtqC,EAAMsqC,uBACV,IAA/BtqC,EAAMsqC,qBAER,OACEC,IACEC,GAAYE,GACY,YAAzB1qC,EAAMzH,SAASwH,OAAoD,YAA7B6K,EAAUrS,SAASwH,MAIxC,uBAACC,GACrB,MAAM4K,EAAY,CAChB7iB,MAAOiY,EAAMrN,OAAO5K,MACpBuiD,qBAAsBtqC,EAAMsqC,qBAC5B/xC,SAAUyH,EAAMzH,UAGlB,OAAI4xC,GAA6BQ,6BAA6B3qC,GAErD,IACF4qC,GAAAA,EAAAA,MACHhgC,UAAAA,GAIG,CACLL,SAAS,EACT9V,MAAO,KACPo2C,UAAW,KACXn8C,aAAc,KACdkc,UAAAA,GAIsB,2BAAC5K,GAAc,QACvC,OACEA,EAAMrN,OAAO5K,OACXiY,EAAMyqC,sBACLljD,GAAAA,EAAAA,IAAgB,sBAAhB,UACCyY,EAAMolC,qBADP,iBACC,EAAsB,UADvB,aACC,EAA0Bz3C,OAId,qBAACqS,GACnB,MAAM,aAACtR,GAAgBk8C,GAAAA,EAAAA,MAEvB,QAAKl8C,GAIEA,EAAaf,OAASw8C,GAA6BW,oBAAoB9qC,GAG7C,oCAACA,GAClC,MAAM,aAACtR,EAAD,MAAeq8C,GAASH,GAAAA,EAAAA,MAE9B,OAAQG,GAASr8C,IAAiBy7C,GAA6Ba,cAAchrC,GAO/EvI,YAAYuI,GACVirC,MAAMjrC,IADkB,0BA+BZ,CACZxP,GAAAA,EAAAA,cAAAA,QAAoC,IAAMmH,KAAKuzC,0BAAqBjhD,GACpE2gD,GAAAA,EAAAA,QAAyBtiD,GAAQqP,KAAKxG,iBAAiB7I,SAAO2B,MAjCtC,gCAoCP,KACjB0N,KAAKwN,SACHglC,GAA6BE,gBAAgB1yC,KAAKqI,OAClDrI,KAAK2uB,cArCP3uB,KAAKoI,MAAQoqC,GAA6BE,gBAAgBrqC,GAG5DmrC,kBACE,MAAO,CACLz8C,aAAciJ,KAAKoI,MAAMrR,cAI7B+b,oBACE9S,KAAK2uB,WAAU,GAGjB3b,mBAAmBC,GACjB,MAAMwgC,EAAuC,CAC3CrjD,MAAO6iB,EAAUjY,OAAO5K,MACxBuiD,qBAAsB1/B,EAAU0/B,qBAChC/xC,SAAUqS,EAAUrS,UAGlB4xC,GAA6BC,cAAcgB,EAAkBzzC,KAAKqI,QACpErI,KAAK0zC,mBAITjmC,uBACEzN,KAAK2zC,YAAY9xC,QAAQid,GAAAA,GAe3By0B,qBAIE56C,EAAAA,GAAAA,GACEqH,KAAKqI,MAAMrZ,IACXwjD,GAA6BW,oBAAoBnzC,KAAKqI,QACtD,GACA,GAIJsL,YAGE,OAAK6+B,GAA6BW,oBAAoBnzC,KAAKqI,OAIpDrI,KAAKoI,MAAMwK,QAHT5S,KAAKqI,MAAMsqC,qBAMtBhkB,YAAkC,IAAxBl3B,EAAwB,wDAC3B+6C,GAA6BW,oBAAoBnzC,KAAKqI,SAIvDmqC,GAA6BQ,6BAA6BhzC,KAAKqI,SAInEjI,GAAAA,GAAAA,KAAY,CAAC3Q,KAAM,sCACnBkJ,EAAAA,GAAAA,GACEqH,KAAKqI,MAAMrZ,IACXwjD,GAA6BW,oBAAoBnzC,KAAKqI,QACrDmqC,GAA6Ba,cAAcrzC,KAAKqI,OACjD5Q,KAIJ+B,iBAAiBo6C,GACf,MAAM,aAAC78C,EAAD,MAAe+F,GAAS82C,EACxBC,EAA2B,GAEjC,GAAI98C,IAAiB+F,EACnByK,EAAAA,EAAAA,IAAc,uBAAuB1F,SAAQiO,IAC3C+jC,EAAMrzC,KAAKsP,EAAG/Y,OAIhBlF,GAAAA,GAAsBiR,IAEpBA,EAAMupB,OAAO,eAAgBt1B,EAAa3H,IAC1C0T,EAAMupB,OAAO,oBAAqBt1B,EAAaf,MAC/C8M,EAAMgxC,WAAW,eAAgB,CAAC1kD,GAAI2H,EAAa3H,GAAI4G,KAAMe,EAAaf,eAEvE,GAAI8G,EAAO,CAEhB,MAAMnN,EAAOC,GAAAA,EAAAA,IAAgB,QACxBD,GAASA,EAAK6S,aAAgC,MAAjB1F,EAAMpE,QAMtC7D,EAAAA,EAAAA,UAAS,CACP6N,aAAc,IAAMnK,QAAQuN,QAAQ9F,KAAK2uB,aACzCnsB,aAAa,EACbuxC,aAAa,IALf7rC,QAAQpL,MAAMA,GAUlBkD,KAAKwN,SAAS,IAAIomC,EAASC,MAAAA,IAAQ,KAE7B98C,GACFqJ,GAAAA,GAAAA,QAAe,CACb3Q,KAAM,qBACNgU,MAAO,mCACP9S,KAAM,CACJlB,KAAM,cACNukD,OAAOC,EAAAA,GAAAA,GAAyBj0C,KAAKqI,MAAM6rC,QAC3CruB,gBAAiBsH,SAASp2B,EAAa3H,GAAI,UAOrD+kD,iCACE,MAAQ,kBAAiB3B,GAA6BW,oBACpDnzC,KAAKqI,UAIT+rC,WAAW,QACT,2BAAOp0C,KAAKoI,MAAMrR,oBAAlB,aAAO,EAAyBtH,YAAhC,QAAwC,SAG1C4kD,gBACE,IAAKr0C,KAAKqI,MAAMisC,eACd,OAAO,KAGT,MAAOlrC,SAAUrR,KAAMsQ,GAASrI,KAAKqI,MACrC,OAAO,QAAC,GAAD,IAAaA,EAAOtR,aAAciJ,KAAKoI,MAAMrR,eAGtDw9C,cACE,IAAIC,EAEJ,OAAQx0C,KAAKoI,MAAM8qC,WACjB,KAAKuB,EAAAA,GAAAA,cAGH,OAAOz0C,KAAK00C,aACd,KAAKD,EAAAA,GAAAA,cACHD,GACE,QAAC,KAAD,CAAOnjD,KAAK,QAAZ,UACGb,EAAAA,EAAAA,GAAE,0DAGP,MACF,QACEgkD,GAAiB,QAAC,KAAD,CAAchiB,QAASxyB,KAAK0zC,mBAGjD,OAAO,QAACiB,GAAD,UAAeH,IAGxBE,aACE,OACE,QAAC,KAAD,CAAqBE,UAAQ,EAACxjC,MAAOpR,KAAKo0C,WAA1C,UACE,QAAC,cAAD,CAA8B77B,MAAOvY,KAAKoI,MAAMrR,aAAhD,UACE,eAAK6Z,UAAU,MAAf,UACG5Q,KAAKoI,MAAMyrC,MACX7zC,KAAKq0C,gBACLr0C,KAAKqI,MAAMe,gBAOtBvC,SACE,OAAI7G,KAAK2T,aAEL,QAAC,GAAD,WAAkBnjB,EAAAA,EAAAA,GAAE,yCAIpBwP,KAAKoI,MAAMtL,OAEX,QAAC,EAAAgP,SAAD,WACG9L,KAAKq0C,gBACLr0C,KAAKu0C,iBAKLv0C,KAAK00C,cA7SVlC,GAAAA,YAAAA,gC,OAAAA,GAAAA,oBA8FuB,CACzBz7C,aAAc89C,GAAAA,EAAAA,eAkNlB,UAAeh0B,EAAAA,GAAAA,IACbstB,EAAAA,GAAAA,GAAkBt8C,GAAAA,GAAoB2gD,MAKlCmC,IAAe,OAAO,MAAP,sBAAH,YACLngD,EAAAA,EAAAA,GAAM,GADD,K,uFC3VlB,SAASsgD,GAAT,GAAmD,IAAvB,aAAC/9C,GAAsB,EACjD,OACE,QAAC,MAAD,WACE,QAAC,MAAD,WACE,QAAC,KAAD,CAAO1F,KAAK,UAAUghB,UAAQ,EAA9B,UACG7e,EAAAA,EAAAA,IACC,4FACA,CACEuD,cAAc,2BAASA,EAAaf,eASlD,SAAS++C,GAAT,GAAgD,IAAvB,aAACh+C,GAAsB,EAC9C,MAAM/H,GAAM+e,EAAAA,GAAAA,MACLinC,EAAaC,IAAkBrK,EAAAA,EAAAA,WAAS,GAqB/C,OACE,QAAC,MAAD,WACE,QAAC,MAAD,YACE,wBAAKp6C,EAAAA,EAAAA,GAAE,yBACP,uBACGgD,EAAAA,EAAAA,IAAI,uEAAwE,CAC3EuD,cAAc,2BAASA,EAAaf,WAIvCe,EAAawrB,OAAO3kB,SAAS,cAC5B,0BACE,uBACGpN,EAAAA,EAAAA,GACC,qGAGJ,uBACE,QAAC,KAAD,CAAQorB,SAAS,UAAUvS,QArCrBza,UAChBqmD,GAAe,GAEf,UACQjmD,EAAIE,eAAgB,kBAAiB6H,EAAaf,QAAS,CAC/D3G,OAAQ,MACRsB,KAAM,CAACukD,gBAAgB,KAEzBx9C,OAAOkJ,SAASK,SAChB,MACAg0C,GAAe,GACfpmC,EAAAA,EAAAA,SAAoB,CAClBnd,QACE,oFACFL,KAAM,YAuB+C0mB,SAAUi9B,EAAzD,UACGxkD,EAAAA,EAAAA,GAAE,gCAKT,uBACGA,EAAAA,EAAAA,GACC,qGAIN,uBACE,2BACGA,EAAAA,EAAAA,GACC,yIASd,SAAS2kD,GAAT,GAAkE,UAAjC,SAAC/rC,EAAD,aAAWrS,GAAsB,EAChE,MAAM2B,EAAS3B,MAAAA,GAAH,UAAGA,EAAc2B,cAAjB,aAAG,EAAsBtJ,GAErC,MAAe,qBAAXsJ,GACK,QAACq8C,GAAD,CAAiBh+C,aAAcA,IAGzB,yBAAX2B,GACK,QAACo8C,GAAD,CAAoB/9C,aAAcA,KAIzC,QAAC,EAAA+U,SAAD,YACE,QAAC,IAAD,UAAgB1C,KAChB,QAAC,KAAD,OAhGG0rC,GAAAA,YAAAA,qBAiBAC,GAAAA,YAAAA,kBAiEAI,GAAAA,YAAAA,0BAmBT,UAAe9gB,EAAAA,GAAAA,GAAiB8gB,IC5GhC,SAASC,GAAT,GAA0D,IAA7B,SAAChsC,KAAaf,GAAe,EAExD,MAAMjY,GAAQ6Z,EAAAA,EAAAA,QAAO5B,EAAMrN,OAAO5K,OAclC,OAbA+Z,EAAAA,EAAAA,YAAU,KACJ9B,EAAMrN,OAAO5K,OAASA,EAAMga,UAAY/B,EAAMrN,OAAO5K,QAInDA,EAAMga,UACRvP,EAAAA,GAAAA,MAGFzK,EAAMga,QAAU/B,EAAMrN,OAAO5K,SAE9B,CAACiY,EAAMrN,OAAO5K,SAGf,QAAC,GAAD,CAA8BkkD,gBAAc,EAACxB,qBAAmB,KAAKzqC,EAArE,UACE,QAAC,GAAD,UAAOe,MAlBJgsC,GAAAA,YAAAA,sBAuBT,Y,qGCtBA,SAASC,GAAT,GAA6C,IAAnB,SAACjsC,GAAkB,EAG3C,OAFAe,EAAAA,EAAAA,YAAU,MAAWzL,EAAAA,GAAAA,IAAiB,QAAO,KAEtC,QAAC,EAAAoN,SAAD,UAAW1C,IAHXisC,GAAAA,YAAAA,mBAMT,Y,sDCgDA,SA/CA,YAA+C,IAAjB,OAACnxB,GAAgB,EAC7C,MAAOpnB,EAAOw4C,IAAY1K,EAAAA,EAAAA,UAAwB,MAuClD,OArCAzgC,EAAAA,EAAAA,YAAU,KAIR,MAAMhP,EAAW+oB,EAAOtjB,SAASC,SAO3B00C,EAAM,IAAIC,eAKhBD,EAAIlU,KAAK,OAAQlmC,GACjBo6C,EAAIE,OAEJF,EAAIG,OAAS,KACQ,MAAfH,EAAI78C,OAURwrB,EAAOhrB,QAAQq8C,EAAII,aATjBL,GAAS9kD,EAAAA,EAAAA,GAAE,uDAWf+kD,EAAIK,QAAU,KACZN,GAAS9kD,EAAAA,EAAAA,GAAE,2CAIRsM,GACL,QAAC,KAAD,CAAe+4C,SAASrlD,EAAAA,EAAAA,GAAE,aAAckB,QAASoL,EAAOg5C,kBAAgB,KAExE,QAAC,MAAD,K,2FC1BJ,MAAMC,WAA4BluC,EAAAA,UAAsC,uDAChD,CACpB+K,SAAS,EACT9V,MAAO,KACPa,QAAS,QAJ2D,yBAW1D/O,UACVoR,KAAKwN,SAAS,CACZoF,SAAS,EACT9V,MAAO,OAGT,MAAM,MAAC1M,EAAD,YAAQ2O,GAAeiB,KAAKqI,MAElC,IACE,MAAM1K,QAAgBqC,KAAKqI,MAAMrZ,IAAIE,eAClC,aAAYkB,KAAS2O,MAGxBiB,KAAKwN,SAAS,CACZoF,SAAS,EACT9V,MAAO,KACPa,QAAAA,IAEF,MAAOb,GACPkD,KAAKwN,SAAS,CACZoF,SAAS,EACT9V,MAAAA,EACAa,QAAS,WA1BfmV,oBACE9S,KAAK2uB,YA8BPqnB,eACE,OAAIh2C,KAAKoI,MAAMzK,QACNqC,KAAKoI,MAAMzK,QAAQvO,GAErB,KAGT6mD,eACE,MAAMC,EAAYl2C,KAAKg2C,eACvB,OAAOG,IAAAA,CAASD,IAAcA,EAAUx7C,OAAS,EAGnD07C,oBACE,OAAIp2C,KAAKoI,MAAMzK,QACNqC,KAAKoI,MAAMzK,QAAQ5G,aAAa3H,GAElC,KAGTyX,SACE,MAAMwvC,EAA4B,IAC7Br2C,KAAKoI,MACR1L,UAAWsD,KAAKg2C,eAChBC,aAAcj2C,KAAKi2C,eACnBK,eAAgBt2C,KAAKo2C,qBAGvB,OAAOp2C,KAAKqI,MAAMe,SAASitC,IAjEzBN,GAAAA,YAAAA,sBAqEN,MAAMQ,IAAiB11B,EAAAA,GAAAA,GAAQk1B,IA0E/B,GAzDGS,GACD,IAAqC,IAApC,OAACx7C,EAAD,OAASkpB,EAAT,OAAiBgwB,GAAmB,EAGnC,SAASuC,EAAcH,EAAwBI,GAC7C,MAAMC,EAAU,CACdC,QAAS,eACTjoC,KAAKslC,EAAAA,GAAAA,GAAyBC,GAC9B2C,OAAQ1pB,SAASmpB,EAAgB,KAMnC,OAFAQ,EAAAA,GAAAA,IAAU,2BAA4BH,GAE/BD,EAGT,MAAM,MAACtmD,GAAS4K,EAEhB,OACE,QAAC,GAAD,WACE,QAACu7C,GAAD,CAAgBnmD,MAAOA,EAAO2O,YAAa/D,EAAO0B,UAAlD,SACG,IAA+D,IAA9D,QAACkW,EAAD,MAAU9V,EAAV,aAAiBm5C,EAAjB,UAA+Bv5C,EAA/B,eAA0C45C,GAAoB,EAC9D,GAAI1jC,EACF,OAAO,QAAC,KAAD,IAGT,IAAKqjC,IAAiBK,EACpB,OAAIx5C,GAA0B,MAAjBA,EAAMpE,QAEf,QAAC,KAAD,CAAOrH,KAAK,QAAZ,UACGb,EAAAA,EAAAA,GAAE,sDAKF,QAAC,KAAD,IAGT,MAAMumD,EAA8B,CAClC3mD,MAAAA,EACAsM,UAAAA,EACAwnB,OAAQ,CAAClpB,OAAAA,IAGX,OACE,QAAC,KAAD,CACEkpB,OAAQA,EACR1R,GAAIikC,EAAcH,EAAgBE,EAAsBO,YAWlEj7B,IAAU,OAAO,MAAP,sBAAH,mBAEAtnB,EAAAA,EAAAA,GAAM,GAFN,K,wGCzKb,SAASwiD,GAAT,GAAkD,IAA3B,OAAC9yB,EAAD,SAAStjB,GAAkB,EAChD,MAAM,SAACC,EAAD,OAAWoV,EAAX,KAAmBy6B,GAAQ9vC,EAE3Bq2C,EAAmD,MAAlCp2C,EAASA,EAASnG,OAAS,GAelD,OAbAyP,EAAAA,EAAAA,YAAU,KAEJ8sC,EACF/yB,EAAOhrB,QAAS,GAAE2H,KAAYoV,IAASy6B,KAIzC7+C,GAAAA,IAAiBiR,IACfA,EAAMipC,eAAe,CAAC,kBACtBl6C,GAAAA,GAAwB,IAAIC,MAAM,yBAEnC,CAAC+O,EAAUoV,EAAQy6B,EAAMuG,EAAgB/yB,IAExC+yB,EACK,MAIP,QAAC,KAAD,CAAqB7lC,OAAO5gB,EAAAA,EAAAA,GAAE,kBAA9B,UACE,eAAKogB,UAAU,MAAf,WACE,QAAC,GAAD,CAAShQ,SAAUA,KACnB,eAAKgQ,UAAU,YAAf,UACE,eAAKA,UAAU,UAAf,UACE,mBAASA,UAAU,OAAnB,UACE,QAAC,KAAD,WAIN,QAAC,KAAD,SAjCComC,GAAAA,YAAAA,gBAuCT,Y,2CCzCA,SAASE,GAAcC,EAAuBC,GAC5C,OAAOD,EAAYt2C,WAAau2C,EAAav2C,SAG/C,SAASw2C,GAAT,GAAsD,IAA7B,SAACz2C,EAAD,SAAWwI,GAAkB,EAGpD,OAFAkuC,EAAAA,GAAAA,GAAe,CAAC12C,SAAAA,EAAUgsB,QAASsqB,MAE5B,QAACK,GAAD,UAAwBnuC,IAHxBiuC,GAAAA,YAAAA,kBAMT,YAEME,IAAwB,OAAO,MAAP,qBAAH,kCAGZhvC,GAAKA,EAAEzY,MAAMiZ,gBAHD,iBAIVR,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBAJR,WAKhBjvC,GAAKA,EAAEzY,MAAM6tB,WALG,mCCiBrB85B,GAAQC,EAAAA,MACRC,GAAaC,EAAAA,WAEbC,GAAQpoD,GAAmB8X,EAAAA,EAAAA,IAAc9X,GAAM4H,KAAIyY,GAAMA,MAEzDgoC,GAAep0C,EAAaq0C,EAAAA,GAwB5BC,GAZC,SACLlyC,GAOA,OAJyDuC,IAChD,QAACyvC,GAAD,IAAkBzvC,EAAO4vC,UAAWnyC,KAuwDlCouC,GAASgE,GAAAA,EA9vDtB,WA2EE,MAAMC,EAAwBn3C,EAAAA,IAC5B,QAACy2C,GAAD,CAAOv1C,KAAK,eAAe+1C,UAAWv0C,EAAa00C,GAAAA,GAAnD,UACE,QAACT,GAAD,CAAYM,UAAWD,IAAK,IAAM,mFAElC,KAEEK,GACJ,QAAC,EAAAvsC,SAAD,YACE,QAAC6rC,GAAD,CAAYM,UAAWD,IAAK,IAAM,8EAClC,QAACP,GAAD,CACEv1C,KAAK,4BACL+1C,UAAWD,IAAK,IAAM,yLAExB,QAACP,GAAD,CACEv1C,KAAK,oBACL+1C,UAAWD,IAAK,IAAM,mLAExB,QAACP,GAAD,CACEv1C,KAAK,gEACL+1C,UAAWD,IAAK,IAAM,oHAExB,QAACP,GAAD,CACEv1C,KAAK,qCACL+1C,UAAWD,IAAK,IAAM,oHAExB,QAACP,GAAD,CACEv1C,KAAK,gDACL+1C,UAAWD,IAAK,IAAM,wHAExB,QAAC,EAAAM,SAAD,CAAU56C,KAAK,YAAY8U,GAAG,gCAC9B,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,yBAAyB8U,GAAG,4BAC3C,QAACilC,GAAD,CACEv1C,KAAK,yBACL+1C,UAAWD,IAAK,IAAM,4xCAExB,QAACP,GAAD,CACEv1C,KAAK,sBACL+1C,UAAWD,IAAK,IAAM,kGAExB,QAACP,GAAD,CACEv1C,KAAK,kDACL+1C,UAAWD,IAAK,IAAM,4GAExB,QAACP,GAAD,CACEv1C,KAAK,yCACL+1C,UAAWD,IAAK,IAAM,sGAExB,QAACP,GAAD,CACEv1C,KAAK,wBACL+1C,UAAWD,IAAK,IAAM,4GAExB,QAACP,GAAD,CACEv1C,KAAK,sBACL+1C,UAAWv0C,EAAa8uC,IAF1B,WAIE,QAAC,EAAA+F,cAAD,CAAe/lC,GAAG,cAClB,QAACilC,GAAD,CACEv1C,KAAK,SACL+1C,UAAWD,IAAK,IAAM,mTAMxBQ,GACJ,QAACf,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,grBAJV,WAOE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,cAClB,QAACilC,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IAAK,IAAM,8TAExB,QAACP,GAAD,CAAOv1C,KAAK,iBAAiBzS,MAAMe,EAAAA,EAAAA,GAAE,iBAArC,WACE,QAACmnD,GAAD,CACEM,UAAWD,IACT,IACE,+XAGN,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,oBACRynD,UAAWD,IACT,IAAM,oVAIZ,QAACP,GAAD,CACEv1C,KAAK,UACLzS,MAAMe,EAAAA,EAAAA,GAAE,UACRynD,UAAWD,IAAK,IAAM,ySAExB,QAACP,GAAD,CACEv1C,KAAK,kBACL+1C,UAAWD,IACT,IAAM,qNAGV,QAACP,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,YAAa0R,KAAK,YAAjC,WACE,QAACu1C,GAAD,CACEQ,UAAWD,IACT,IACE,yKAHN,WAQE,QAACL,GAAD,CACEM,UAAWD,IACT,IAAM,qNAGV,QAACP,GAAD,CACEv1C,KAAK,mBACLzS,MAAMe,EAAAA,EAAAA,GAAE,mBACRynD,UAAWD,IACT,IAAM,mPAGV,QAACP,GAAD,CACEv1C,KAAK,eACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IACE,0PAMR,QAACP,GAAD,CACEv1C,KAAK,sBACLzS,MAAMe,EAAAA,EAAAA,GAAE,UACRynD,UAAWD,IACT,IACE,0gBAMR,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,iBACRynD,UAAWD,IACT,IAAM,mNAGV,QAACP,GAAD,CACEv1C,KAAK,cACLzS,MAAMe,EAAAA,EAAAA,GAAE,cACRynD,UAAWD,IAAK,IAAM,6MAExB,QAACP,GAAD,CAAOv1C,KAAK,OAAOzS,MAAMe,EAAAA,EAAAA,GAAE,OAA3B,WACE,QAAC,EAAA+nD,cAAD,CAAe/lC,GAAG,kBAClB,QAACilC,GAAD,CAAOv1C,KAAK,eAAezS,MAAMe,EAAAA,EAAAA,GAAE,eAAnC,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,iOAExB,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,oBACRynD,UAAWD,IAAK,IAAM,oMAG1B,QAACP,GAAD,CAAOv1C,KAAK,gBAAgBzS,MAAMe,EAAAA,EAAAA,GAAE,gBAApC,WACE,QAACmnD,GAAD,CACEM,UAAWD,IACT,IAAM,qNAGV,QAACP,GAAD,CACEv1C,KAAK,UACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,2NAIXH,GAAK,kBAER,QAACJ,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,iBACRynD,UAAWD,IAAK,IAAM,qMAKtBS,GACJ,QAAChB,GAAD,CACEv1C,KAAK,uBACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,4uBAJV,WAOE,QAACL,GAAD,CACEloD,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IAAK,IAAM,uMAExB,QAACP,GAAD,CACEv1C,KAAK,SACLzS,MAAMe,EAAAA,EAAAA,GAAE,SACRynD,UAAWD,IAAK,IAAM,+QAExB,QAACP,GAAD,CACEv1C,KAAK,UACLzS,MAAMe,EAAAA,EAAAA,GAAE,UACRynD,UAAWD,IAAK,IAAM,mHAHxB,WAKE,QAACL,GAAD,CACEM,UAAWD,IAAK,IAAM,iTAExB,QAAC,EAAAM,SAAD,CAAU56C,KAAK,OAAO8U,GAAG,kDACzB,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,SAAS8U,GAAG,yCAC3B,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,aAAa8U,GAAG,kDAC/B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,oBACL8U,GAAG,kDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,iBACL8U,GAAG,4DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,wBACL8U,GAAG,sEAGP,QAACilC,GAAD,CACEv1C,KAAK,gBACLzS,MAAMe,EAAAA,EAAAA,GAAE,gBACRynD,UAAWD,IACT,IAAM,8MAJV,WAOE,QAACL,GAAD,KACA,QAACF,GAAD,CAAOv1C,KAAK,gBAEd,QAACu1C,GAAD,CACEv1C,KAAK,QACLzS,MAAMe,EAAAA,EAAAA,GAAE,QACRynD,UAAWD,IAAK,IAAM,iLAExB,QAAC,EAAAM,SAAD,CAAU56C,KAAK,kBAAkB8U,GAAG,0CACpC,QAACilC,GAAD,CACEv1C,KAAK,oBACLzS,MAAMe,EAAAA,EAAAA,GAAE,oBACRynD,UAAWD,IACT,IAAM,6RAGV,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,gBACRynD,UAAWD,IAAK,IAAM,uNAExB,QAACP,GAAD,CACEv1C,KAAK,mBACLzS,MAAMe,EAAAA,EAAAA,GAAE,mBACRynD,UAAWD,IAAK,IAAM,2QAExB,QAACP,GAAD,CACEv1C,KAAK,wBACLzS,MAAMe,EAAAA,EAAAA,GAAE,sBACRynD,UAAWD,IAAK,IAAM,iTAExB,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,2BACRynD,UAAWD,IAAK,IAAM,6OAExB,QAACP,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,qBACRynD,UAAWD,IAAK,IAAM,yOAExB,QAACP,GAAD,CACEv1C,KAAK,eACLzS,MAAMe,EAAAA,EAAAA,GAAE,eACRynD,UAAWD,IAAK,IAAM,2MAExB,QAACP,GAAD,CACEv1C,KAAK,eACLzS,MAAMe,EAAAA,EAAAA,GAAE,eACRynD,UAAWD,IAAK,IAAM,2HAHxB,WAKE,QAACL,GAAD,CACEM,UAAWD,IAAK,IAAM,uPAExB,QAACP,GAAD,CACEv1C,KAAK,SACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IAAK,IAAM,8PAG1B,QAACP,GAAD,CACEv1C,KAAK,qBACLzS,MAAMe,EAAAA,EAAAA,GAAE,qBACRynD,UAAWD,IACT,IAAM,6PAGV,QAACP,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,mBACRynD,UAAWD,IAAK,IAAM,gNAHxB,WAKE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,mBAClB,QAACilC,GAAD,CAAOv1C,KAAK,qBAEd,QAACu1C,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,YACRynD,UAAWD,IAAK,IAAM,sQAHxB,WAKE,QAAC,EAAAO,cAAD,CAAe/lC,GAAK,GAAEkmC,EAAAA,GAAAA,YACtB,QAACjB,GAAD,CAAOv1C,KAAK,mBAEd,QAACu1C,GAAD,CACEv1C,KAAK,kBACLzS,MAAMe,EAAAA,EAAAA,GAAE,kBACRynD,UAAWD,IAAK,IAAM,kXAExB,QAACP,GAAD,CACEv1C,KAAK,SACLzS,MAAMe,EAAAA,EAAAA,GAAE,iBACRynD,UAAWD,IACT,IAAM,iNAGV,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,uBACRynD,UAAWD,IACT,IAAM,2NAGV,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,wBACRynD,UAAWD,IACT,IAAM,6NAGV,QAACP,GAAD,CAAOv1C,KAAK,QAAQzS,MAAMe,EAAAA,EAAAA,GAAE,eAA5B,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,uNAExB,QAACP,GAAD,CACEv1C,KAAK,UACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,gOAIZ,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,iBACRynD,UAAWD,IACT,IAAM,iNAGV,QAAC,EAAAM,SAAD,CAAU56C,KAAK,OAAO8U,GAAG,uBACzB,QAACilC,GAAD,CAAOv1C,KAAK,oBAAoBzS,MAAMe,EAAAA,EAAAA,GAAE,oBAAxC,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,mNAExB,QAACP,GAAD,CACEv1C,KAAK,OACLzS,MAAMe,EAAAA,EAAAA,GAAE,2BACRynD,UAAWD,IACT,IAAM,+MAGV,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,4BACRynD,UAAWD,IACT,IAAM,yNAGV,QAACP,GAAD,CACEv1C,KAAK,QACLzS,MAAMe,EAAAA,EAAAA,GAAE,QACRynD,UAAWD,IACT,IAAM,oNAIZ,QAACP,GAAD,CAAOv1C,KAAK,WAAWzS,MAAMe,EAAAA,EAAAA,GAAE,uBAA/B,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,mMAExB,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,uBACRynD,UAAWD,IAAK,IAAM,gRAG1B,QAACP,GAAD,CAAOv1C,KAAK,WAAWzS,MAAMe,EAAAA,EAAAA,GAAE,iBAA/B,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,gOAExB,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,QACRynD,UAAWD,IACT,IAAM,2IAOVW,GACJ,QAAClB,GAAD,CACEQ,UAAWD,IACT,IAAM,osBAFV,UAKGH,GAAK,wBACN,QAACF,GAAD,CACEloD,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,qQAGV,QAACP,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,YACRynD,UAAWD,IAAK,IAAM,+MAExB,QAACP,GAAD,CAAOv1C,KAAK,YAAYzS,MAAMe,EAAAA,EAAAA,GAAE,WAAhC,WACE,QAACmnD,GAAD,CACEM,UAAWD,IAAK,IAAM,iPAExB,QAACP,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IACE,wPAMR,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,aACRynD,UAAWD,IAAK,IAAM,+MAExB,QAACP,GAAD,CACEv1C,KAAK,QACLzS,MAAMe,EAAAA,EAAAA,GAAE,kBACRynD,UAAWD,IAAK,IAAM,uMAExB,QAAC,EAAAM,SAAD,CAAU56C,KAAK,mBAAmB8U,GAAG,cACrC,QAACilC,GAAD,CAAOv1C,KAAK,WAAWzS,MAAMe,EAAAA,EAAAA,GAAE,WAA/B,WACE,QAACinD,GAAD,CACEQ,UAAWD,IACT,IACE,oPAHN,UAQE,QAACL,GAAD,CACEM,UAAWD,IACT,IACE,oOAMR,QAACP,GAAD,CACEv1C,KAAK,aACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IACE,kUAIR,QAACP,GAAD,CACEv1C,KAAK,eACLzS,MAAMe,EAAAA,EAAAA,GAAE,eACRynD,UAAWD,IAAK,IAAM,mNAExB,QAACP,GAAD,CACEv1C,KAAK,SACLzS,MAAMe,EAAAA,EAAAA,GAAE,SACRynD,UAAWD,IAAK,IAAM,yMAExB,QAACP,GAAD,CACEv1C,KAAK,SACLzS,MAAMe,EAAAA,EAAAA,GAAE,gBACRynD,UAAWD,IAAK,IAAM,2TAExB,QAACP,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IACT,IAAM,qQAGV,QAACP,GAAD,CACEv1C,KAAK,wBACLzS,MAAMe,EAAAA,EAAAA,GAAE,sBACRynD,UAAWD,IACT,IAAM,2TAGV,QAACP,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,SAAU0R,KAAK,SAA9B,WACE,QAACy1C,GAAD,CACEM,UAAWD,IAAK,IAAM,6OAExB,QAACP,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,QACRynD,UAAWD,IACT,IAAM,uIAJV,WAOE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,cAClB,QAACilC,GAAD,CACEv1C,KAAK,WACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,0IAGV,QAACP,GAAD,CACEv1C,KAAK,iBACLzS,MAAMe,EAAAA,EAAAA,GAAE,iBACRynD,UAAWD,IACT,IAAM,sJAGV,QAACP,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,YACRynD,UAAWD,IACT,IAAM,4IAGV,QAACP,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,YACRynD,UAAWD,IACT,IAAM,8JAKd,QAAC,EAAAM,SAAD,CAAU56C,KAAK,WAAW8U,GAAG,mBAC7B,QAACilC,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,gBAAiB0R,KAAK,WAArC,UACE,QAACu1C,GAAD,CACEv1C,KAAK,oBACLzS,MAAMe,EAAAA,EAAAA,GAAE,uBACRynD,UAAWD,IACT,IAAM,mPAIZ,QAAC,EAAAM,SAAD,CAAU56C,KAAK,eAAe8U,GAAG,mBACjC,QAACilC,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,gBAAiB0R,KAAK,eAArC,UACE,QAACu1C,GAAD,CACEv1C,KAAK,mBACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IAAM,yPAIZ,QAAC,EAAAM,SAAD,CAAU56C,KAAK,yBAAyB8U,GAAG,mBAC3C,QAACilC,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,gBAAiB0R,KAAK,yBAArC,UACE,QAACu1C,GAAD,CACEv1C,KAAK,mBACLzS,MAAMe,EAAAA,EAAAA,GAAE,WACRynD,UAAWD,IACT,IACE,mQAIR,QAACP,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,gBAAiB0R,KAAK,gBAArC,WACE,QAACy1C,GAAD,CACEM,UAAWD,IACT,IAAM,+QAGV,QAACP,GAAD,CACEv1C,KAAK,mBACLzS,MAAMe,EAAAA,EAAAA,GAAE,uBACRynD,UAAWD,IACT,IAAM,2PAGV,QAACP,GAAD,CACEv1C,KAAK,+BACLzS,MAAMe,EAAAA,EAAAA,GAAE,yBACRynD,UAAWD,IACT,IACE,wTAMR,QAACP,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,sBAAuB0R,KAAK,sBAA3C,WACE,QAACy1C,GAAD,CACEM,UAAWD,IACT,IAAM,iOAGV,QAACP,GAAD,CACEv1C,KAAK,cACLzS,MAAMe,EAAAA,EAAAA,GAAE,sBACRynD,UAAWD,IACT,IACE,+SAKN,QAACP,GAAD,CACEv1C,KAAK,gBACLzS,MAAMe,EAAAA,EAAAA,GAAE,sBACRynD,UAAWD,IACT,IACE,+SAKN,QAACP,GAAD,CACEv1C,KAAK,YACLzS,MAAMe,EAAAA,EAAAA,GAAE,oBACRynD,UAAWD,IACT,IACE,+SAKN,QAACP,GAAD,CACEv1C,KAAK,sBACLzS,MAAMe,EAAAA,EAAAA,GAAE,yBACRynD,UAAWD,IACT,IACE,sUASNY,GACJ,QAAC,EAAA9sC,SAAD,YACE,QAAC,EAAAwsC,SAAD,CAAU56C,KAAK,cAAc8U,GAAG,0BAChC,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,qBAAqB8U,GAAG,iCACvC,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,2BAA2B8U,GAAG,uCAC7C,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,mCACL8U,GAAG,iDAKHqmC,GACJ,QAACpB,GAAD,CAAOv1C,KAAK,aAAazS,MAAMe,EAAAA,EAAAA,GAAE,YAAaynD,UAAWZ,GAAzD,WACE,QAACM,GAAD,CAAYM,UAAWD,IAAK,IAAM,slBACjCQ,GACD,QAACf,GAAD,CAAOhoD,MAAMe,EAAAA,EAAAA,GAAE,gBAAiB0R,KAAK,UAArC,UACGy2C,EACAF,EACAG,QAKDE,GACJ,QAACrB,GAAD,CAAOv1C,KAAK,kCAAZ,WACE,QAACy1C,GAAD,CAAYM,UAAWD,IAAK,IAAM,4XAClC,QAACP,GAAD,CACEv1C,KAAK,OACL+1C,UAAWD,IAAK,IAAM,2QAExB,QAACP,GAAD,CACEv1C,KAAK,8BACL+1C,UAAWD,IAAK,IAAM,qHAFxB,WAIE,QAACL,GAAD,CACEM,UAAWD,IAAK,IAAM,gOAExB,QAACP,GAAD,CACEv1C,KAAK,aACL+1C,UAAWD,IACT,IAAM,yIAIZ,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,6nCAExB,QAACP,GAAD,CACEv1C,KAAK,8BACL+1C,UAAWv0C,EAAaq1C,SAKxBC,GACJ,QAAC,EAAAltC,SAAD,YACE,QAAC2rC,GAAD,CACEv1C,KAAK,oCACL+1C,UAAWD,IAAK,IAAM,01CAFxB,UAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,2xCAEpC,QAACP,GAAD,CACEv1C,KAAK,wCACL+1C,UAAWD,IAAK,IAAM,41CAFxB,WAIE,QAACP,GAAD,CACEv1C,KAAK,4BACL+1C,UAAWD,IAAK,IAAM,g1CAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,m1CAG1B,QAACP,GAAD,CACEv1C,KAAK,mDACL+1C,UAAWD,IAAK,IAAM,41CAFxB,UAIE,QAACP,GAAD,CACEv1C,KAAK,oBACL+1C,UAAWD,IAAK,IAAM,i2CAG1B,QAAC,EAAAM,SAAD,CACE56C,KAAK,iDACL8U,GAAG,mDAEL,QAACilC,GAAD,CACEv1C,KAAK,gDACL+1C,UAAWD,IAAK,IAAM,w1CAFxB,WAIE,QAACP,GAAD,CACEv1C,KAAK,4BACL+1C,UAAWD,IAAK,IAAM,g1CAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,g1CAExB,QAACP,GAAD,CACEv1C,KAAK,oBACL+1C,UAAWD,IAAK,IAAM,g2CAMxBiB,GACJ,QAACxB,GAAD,CACEv1C,KAAK,gCACL+1C,UAAWD,IAAK,IAAM,mFAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,kWAClC,QAACP,GAAD,CAAOv1C,KAAK,SAAZ,WACE,QAACy1C,GAAD,CAAYM,UAAWD,IAAK,IAAM,uTAClC,QAACP,GAAD,CACEv1C,KAAK,mBACL+1C,UAAWD,IAAK,IAAM,8wBAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,uHAFxB,WAIE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,yCAClB,QAACilC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,olBAG1B,QAACP,GAAD,CACEv1C,KAAK,8BACL+1C,UAAWD,IAAK,IAAM,2HAFxB,UAIE,QAACL,GAAD,CACEM,UAAWD,IACT,IAAM,oXAKd,QAACP,GAAD,CAAOv1C,KAAK,gBAAZ,WACE,QAAC,EAAAq2C,cAAD,CAAe/lC,GAAG,yCAClB,QAACilC,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,uHAFxB,WAIE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,yCAClB,QAACilC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,ulBAI5B,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,uHAFxB,UAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,0QAEpC,QAACP,GAAD,CACEv1C,KAAK,OACL+1C,UAAWD,IAAK,IAAM,uHAFxB,WAIE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,0CAClB,QAACilC,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,wlBAG1B,QAACP,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,4GAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,uHAFxB,WAIE,QAACP,GAAD,CAAOv1C,KAAK,OAAO+1C,UAAWD,IAAK,IAAM,qlBACzC,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,6QAMxBkB,GACJ,QAACzB,GAAD,CACEv1C,KAAK,kCACL+1C,UAAWD,IAAK,IAAM,uFAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,mJAClC,QAACP,GAAD,CACEv1C,KAAK,yCACL+1C,UAAWD,IAAK,IAAM,4FAExB,QAACP,GAAD,CACEv1C,KAAK,6CACL+1C,UAAWD,IAAK,IAAM,mLAExB,QAACP,GAAD,CACEv1C,KAAK,kDACL+1C,UAAWD,IAAK,IAAM,0FAKtBmB,GACJ,QAAC1B,GAAD,CACEv1C,KAAK,iCACL+1C,UAAWD,IAAK,IAAM,qFAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,uNAClC,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,47BAKtBoB,GACJ,QAAC3B,GAAD,CAAOv1C,KAAK,kCAAZ,WACE,QAACy1C,GAAD,CAAYM,UAAWD,IAAK,IAAM,ycAClC,QAACP,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,6LAFxB,WAIE,QAACL,GAAD,CACEM,UAAWD,IAAK,IAAM,2sCAExB,QAACP,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IACT,IAAM,saAGV,QAACP,GAAD,CACEv1C,KAAK,iBACL+1C,UAAWD,IACT,IAAM,4YAGV,QAAC,EAAAM,SAAD,CAAU56C,KAAK,cAAc8U,GAAG,8CAChC,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,cAAc8U,GAAG,mDAKhC6mC,GACJ,QAAC5B,GAAD,CACEv1C,KAAK,kCACL+1C,UAAWD,IAAK,IAAM,2KAIpBsB,GACJ,QAAC7B,GAAD,CAAOv1C,KAAK,+BAAZ,WACE,QAACy1C,GAAD,CAAYM,UAAWD,IAAK,IAAM,iPAClC,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,mIAFxB,UAIE,QAACL,GAAD,CACEM,UAAWD,IACT,IAAM,kTAIZ,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,mIAFxB,UAIE,QAACL,GAAD,CACEM,UAAWD,IACT,IAAM,wcAKZ,QAAC,EAAAM,SAAD,CAAU56C,KAAK,QAAQ8U,GAAG,2CAQxB+mC,GACJ,QAAC9B,GAAD,CACEv1C,KAAK,kCACL+1C,UAAWD,IAAK,IAAM,uFAFxB,WAIE,QAAC,EAAAO,cAAD,CAAe/lC,GAAG,cAClB,QAACilC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,8iBAExB,QAACP,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,uwCAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,k+CAKtBwB,GACJ,QAAC/B,GAAD,CACEv1C,KAAK,qCACL+1C,UAAWD,IAAK,IAAM,6FAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,0jDAClC,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,mvCAExB,QAACP,GAAD,CAAOv1C,KAAK,6CAAZ,WACE,QAACy1C,GAAD,CACEM,UAAWD,IACT,IACE,giDAGN,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,u3BAGV,QAACP,GAAD,CACEv1C,KAAK,QACL+1C,UAAWD,IACT,IAAM,0gCAGV,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,osBAGV,QAACP,GAAD,CACEv1C,KAAK,aACL+1C,UAAWD,IACT,IACE,m7BAGN,QAACP,GAAD,CAAOv1C,KAAK,SAAZ,WACE,QAACy1C,GAAD,CACEM,UAAWD,IACT,IAAM,6iBAGV,QAACP,GAAD,CACEv1C,KAAK,aACL+1C,UAAWD,IACT,IACE,+uBAOV,QAACP,GAAD,CACEv1C,KAAK,eACL+1C,UAAWD,IAAK,IAAM,uyCAExB,QAACP,GAAD,CACEv1C,KAAK,oBACL+1C,UAAWD,IAAK,IAAM,0mBAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,o/CAKtByB,GACJ,QAAChC,GAAD,CACEv1C,KAAK,uCACL+1C,UAAWD,IAAK,IAAM,kWAIpB0B,GACJ,QAACjC,GAAD,CACEv1C,KAAK,gCACL+1C,UAAWv0C,EAAawN,IAF1B,WAIE,QAAC,EAAAonC,SAAD,CAAU56C,KAAK,yBAAyB8U,GAAG,mCAC3C,QAACmlC,GAAD,CAAYM,UAAWv0C,EAAa2lB,OACpC,QAACouB,GAAD,CAAOv1C,KAAK,sBAAsB+1C,UAAWv0C,EAAa2lB,SAMxDswB,GACJ,QAAClC,GAAD,CACEv1C,KAAK,yCACL+1C,UAAWD,IAAK,IAAM,wOAFxB,WAIE,QAACL,GAAD,CACEM,UAAWD,IACT,IAAM,08CAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,QACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IACT,IAAM,4QAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,QACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IACT,IAAM,4UAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,SACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,sLAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,OACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,QACL+1C,UAAWD,IAAK,IAAM,+HACtB3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,KACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,gBACL+1C,UAAWD,IACT,IAAM,yIAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,KACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IACT,IAAM,0UAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,cACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,eACL+1C,UAAWD,IACT,IAAM,mKAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,YACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IACT,IAAM,6JAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,eACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,+IAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,OACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,wNACtB3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,SACZC,cAAc,MAGlB,QAACrC,GAAD,CAAOv1C,KAAK,mBAAZ,WACE,QAACy1C,GAAD,CACEM,UAAWD,IACT,IAAM,08CAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,QACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IACT,IAAM,4UAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,SACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,sLAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,OACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IACT,IAAM,6JAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,eACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,QACL+1C,UAAWD,IACT,IAAM,+HAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,KACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,gBACL+1C,UAAWD,IACT,IAAM,yIAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,KACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IACT,IAAM,0UAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,cACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,eACL+1C,UAAWD,IACT,IAAM,mKAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,YACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IACT,IAAM,+IAER3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,OACZC,cAAc,MAGlB,QAACrC,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,wNACtB3vC,MAAO,CACLuxC,WAAYC,GAAAA,EAAAA,SACZC,cAAc,WASlBC,GACJ,QAACtC,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,soBAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,gHAClC,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,gGAExB,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,gGAExB,QAACP,GAAD,CACEv1C,KAAK,iBACL+1C,UAAWD,IAAK,IAAM,8GAExB,QAACP,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,oGAExB,QAACP,GAAD,CACEv1C,KAAK,SACL+1C,UAAWD,IAAK,IAAM,8FAExB,QAACP,GAAD,CACEv1C,KAAK,UACL+1C,UAAWD,IAAK,IAAM,gGAExB,QAACP,GAAD,CACEv1C,KAAK,YACL+1C,UAAWD,IAAK,IAAM,oGAExB,QAACP,GAAD,CAAOv1C,KAAK,SAAZ,WACE,QAACy1C,GAAD,CAAYM,UAAWD,IAAK,IAAM,8FAClC,QAACP,GAAD,CACEv1C,KAAK,MACL+1C,UAAWD,IAAK,IAAM,uGAG1B,QAACP,GAAD,CACEv1C,KAAK,eACL+1C,UAAWD,IAAK,IAAM,4FAExB,QAACP,GAAD,CACEv1C,KAAK,sBACL+1C,UAAWD,IAAK,IAAM,0GAExB,QAACP,GAAD,CACEv1C,KAAK,mBACL+1C,UAAWD,IAAK,IAAM,oGAExB,QAACP,GAAD,CACEv1C,KAAK,mBACL+1C,UAAWD,IAAK,IAAM,mGAEvBH,GAAK,mBAMJmC,GACJ,QAACvC,GAAD,CAAOQ,UAAWv0C,EAAa2xC,IAA/B,WACE,QAACoC,GAAD,CACEv1C,KAAK,mCACL+1C,UAAWD,IAAK,IAAM,kFAExB,QAACP,GAAD,CAAOv1C,KAAK,yBAAZ,UACG21C,GAAK,wBACN,QAAC,EAAAS,SAAD,CAAU56C,KAAK,+BAA+B8U,GAAG,6BACjD,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,0CACL8U,GAAG,6BAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,yCACL8U,GAAG,6BAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,uCACL8U,GAAG,qCAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,+CACL8U,GAAG,6CAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,gDACL8U,GAAG,8CAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,gDACL8U,GAAG,8CAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,kCAAkC8U,GAAG,uBACpD,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,kCACL8U,GAAG,gCAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,0CACL8U,GAAG,wCAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,iCAAiC8U,GAAG,+BACnD,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,2CACL8U,GAAG,yCAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qCACL8U,GAAG,mCAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,+BAA+B8U,GAAG,kCAOjDynC,GACJ,QAACxC,GAAD,CACEv1C,KAAK,sCACL+1C,UAAWD,IAAK,IAAM,qHAFxB,WAIE,QAACL,GAAD,CACEM,UAAWD,IAAK,IAAM,gOAExB,QAACP,GAAD,CACEv1C,KAAK,aACL+1C,UAAWD,IACT,IAAM,wIAWRkC,GACJ,QAACzC,GAAD,CAAOv1C,KAAK,sBAAZ,WACE,QAACy1C,GAAD,CACEM,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,GAAT,QAAyB,kBAAiBtM,qBAAyBsM,WAIzE,QAAC+6C,GAAD,CACEv1C,KAAK,UACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,GAAT,QAAyB,kBAAiBtM,qBAAyBsM,WAIzE,QAAC+6C,GAAD,CACEv1C,KAAK,aACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,GAAT,QACG,kBAAiBtM,yBAA6BsM,WAIvD,QAAC+6C,GAAD,CACEv1C,KAAK,iBACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,GAAT,QACG,kBAAiBtM,4BAAgCsM,WAI1D,QAAC+6C,GAAD,CACEv1C,KAAK,YACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,GAAT,QACG,kBAAiBtM,uBAA2BsM,WAIrD,QAAC+6C,GAAD,CACEv1C,KAAK,qBACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,EAAR,OAAmBwnB,GAApB,QACG,kBAAiB9zB,cAAkB8zB,EAAOlpB,OAAO+7B,oBAAoBr6B,WAI9E,QAAC+6C,GAAD,CACEv1C,KAAK,gCACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,EAAR,OAAmBwnB,GAApB,QACG,kBAAiB9zB,cAAkB8zB,EAAOlpB,OAAO+7B,+BAA+Br6B,WAIzF,QAAC+6C,GAAD,CACEv1C,KAAK,gCACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,EAAR,OAAmBwnB,GAApB,QACG,kBAAiB9zB,cAAkB8zB,EAAOlpB,OAAO+7B,+BAA+Br6B,WAIzF,QAAC+6C,GAAD,CACEv1C,KAAK,6BACL+1C,UAAWv0C,EACTy2C,IACE,QAAC,MAAC/pD,EAAD,UAAQsM,EAAR,OAAmBwnB,GAApB,QACG,kBAAiB9zB,cAAkB8zB,EAAOlpB,OAAO+7B,4BAA4Br6B,aAOpF09C,GACJ,QAAC3C,GAAD,CACEv1C,KAAK,mCACL+1C,UAAWD,IAAK,IAAM,yFAFxB,WAIE,QAACL,GAAD,CAAYM,UAAWD,IAAK,IAAM,wVAClC,QAACP,GAAD,CACEv1C,KAAK,sBACL+1C,UAAWD,IAAK,IAAM,uNAExB,QAACP,GAAD,CACEv1C,KAAK,8BACL+1C,UAAWD,IAAK,IAAM,wRAFxB,WAIE,QAACP,GAAD,CACEv1C,KAAK,WACL+1C,UAAWD,IAAK,IAAM,8WAExB,QAACP,GAAD,CACEv1C,KAAK,cACL+1C,UAAWD,IAAK,IAAM,mhBAMxBqC,GACJ,QAAC5C,GAAD,CAAOQ,UAAWv0C,EAAa0xC,IAA/B,UACGyD,EACAC,EACAE,EACAS,EACAC,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAY,EACAL,EACAC,EACAC,EACAC,KAICI,GACJ,QAAC7C,GAAD,CAAOv1C,KAAK,WAAZ,WACE,QAAC,EAAAq2C,cAAD,CAAe/lC,GAAG,4BAClB,QAACilC,GAAD,CAAOv1C,KAAK,uBAAZ,WACE,QAAC,EAAAo2C,SAAD,CAAU56C,KAAK,SAAS8U,GAAG,iDAC3B,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,UAAU8U,GAAG,kDAC5B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,gBACL8U,GAAG,wDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,oBACL8U,GAAG,4DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,wBACL8U,GAAG,gEAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,gBACL8U,GAAG,wDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,uBACL8U,GAAG,+DAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,QAAQ8U,GAAG,yDAC1B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,kBACL8U,GAAG,0DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,oBACL8U,GAAG,4DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,aACL8U,GAAG,qDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,mBACL8U,GAAG,2DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,iBACL8U,GAAG,yDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qBACL8U,GAAG,6DAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,WAAW8U,GAAG,mDAC7B,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,SAAS8U,GAAG,iDAC3B,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,QAAQ8U,GAAG,gDAC1B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,eACL8U,GAAG,uDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,iBACL8U,GAAG,yDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,oBACL8U,GAAG,4DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,wBACL8U,GAAG,gEAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,8BACL8U,GAAG,sEAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,yBACL8U,GAAG,iEAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,WAAW8U,GAAG,mDAC7B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qBACL8U,GAAG,6DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,6BACL8U,GAAG,qEAEL,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,WAAW8U,GAAG,mDAC7B,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qBACL8U,GAAG,gEAGP,QAAC,EAAA8lC,SAAD,CAAU56C,KAAK,6BAA6B8U,GAAG,sBAC/C,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,8BACL8U,GAAG,4CAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qCACL8U,GAAG,mDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,8CACL8U,GAAG,4DAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,mCACL8U,GAAG,iDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,2CACL8U,GAAG,yDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,uCACL8U,GAAG,qDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,sCACL8U,GAAG,oDAEL,QAAC,EAAA8lC,SAAD,CACE56C,KAAK,qCACL8U,GAAG,mDAEL,QAACilC,GAAD,CACEv1C,KAAK,8BACL+1C,UAAWv0C,EAAaq1C,SAkB9B,OAZE,QAACtB,GAAD,WACGU,GACD,QAACV,GAAD,CAAOv1C,KAAK,IAAI+1C,UAAWv0C,EAAaoK,IAAxC,UACGuqC,EACAgC,EACAC,EACAzC,GAAK,WACN,QAACJ,GAAD,CAAOv1C,KAAK,IAAI+1C,UAAWv0C,EAAaszC,e,+FCxzDzC,SAASuD,GACd1yC,EACA2yC,GAEA,IADAnyC,EACA,uDAD6B,GAE7B,MAAMoyC,EAAShwC,SAASC,cAAc8vC,GAIjCC,IAIL5zC,EAAAA,EAAAA,SAAO,QAACgB,EAAD,IAAeQ,IAAWoyC,G,iDCTnC,MAAMC,GAAgB,CACpB,CAACC,GAAAA,GAAAA,YAA4C,IAC3C,oEACF,CAACA,GAAAA,GAAAA,eAA+C,IAC9C,qEACF,CAACA,GAAAA,GAAAA,cAA8C,IAC7C,uEACF,CAACA,GAAAA,GAAAA,UAA0C,IACzC,ySACF,CAACA,GAAAA,GAAAA,gBAAgD,IAC/C,uFAKJ/rD,eAAegsD,GAAYC,GAOzB,GAAwB,qBAApBA,EAAWprD,KAAf,CAsBA,GAAwB,gBAApBorD,EAAWprD,KAAwB,CACrC,IAAKirD,GAAcv+B,eAAe0+B,EAAW5C,WAC3C,OAEF,MAAOhjD,QAAS4S,SAAmB6yC,GAAcG,EAAW5C,cAE5D6C,EAAAA,GAAAA,IAAiB,IAEfP,GAAU1yC,EAAkBgzC,EAAWL,UAAWK,EAAWxyC,SAQzC,YAApBwyC,EAAWprD,MAAoD,mBAAvBorD,EAAWE,SACrDF,EAAWE,QAAQC,OAvCrB,CACE,MAAM,MAACC,EAAD,QAAQC,GAAWL,EACzB,IAAKI,IAAUC,EACb,cAG6B,+KAIdC,SAAS,CACxBF,MAAOxwC,SAASC,cAAcuwC,GAC9BC,QAASzwC,SAASC,cAAcwwC,M,6ECxBvB,SAASE,KAAa,QACnC,MAAMC,EAAc3jD,OAAO4jD,YAErBC,GAAoBC,EAAAA,GAAAA,MAEpBh/C,KAAcyR,EAAAA,GAAAA,GAAeoiC,GAAAA,GAAkB7zC,UAErD,OACE,QAAC,GAAD,CAASA,UAAWA,EAApB,WACE,QAACi/C,GAAD,KACA,QAACC,GAAD,CACEryC,QAAS,KACP+hB,EAAAA,GAAAA,GAA4B,yBAA0B,CAACr0B,aAAc,OAEvE0Y,MAAMksC,EAAAA,GAAAA,IAAqB,0BAA2BJ,GACtDK,cAAY,EALd,UAOGprD,EAAAA,EAAAA,GAAE,oBAEL,QAACqrD,GAAD,CACEjgC,SAAS,OACTvS,QAAS,KACP+hB,EAAAA,GAAAA,GAA4B,iCAAkC,CAC5Dr0B,aAAc,OAGlB0Y,MAAMksC,EAAAA,GAAAA,IAAqB,4BAA6BJ,GACxDnvC,OAAO,SACP0vC,IAAI,sBATN,UAWGtrD,EAAAA,EAAAA,GAAE,qBAEL,QAACurD,GAAD,CACE1yC,QAAS,KAAM,QACb,MAAMsF,GACJ0sC,MAAAA,GAAA,UAAAA,EAAanmB,WAAb,eAAkBvmB,OAClBgtC,EAAAA,GAAAA,IACE,6BACAK,EAAAA,GAAAA,OAKJtkD,OAAO2pC,KAAK1yB,EAAK,WAEjByc,EAAAA,GAAAA,GAA4B,gCAAiC,CAC3D8J,IAAKmmB,MAAAA,GAAF,UAAEA,EAAanmB,WAAf,aAAE,EAAkB9lC,GACvB2H,aAAc,QAGlBqV,OAAO,SACP0vC,IAAI,sBAnBN,WAqBE,QAACG,GAAD,WACGZ,MAAAA,GAAA,UAAAA,EAAanmB,WAAb,eAAkB9jB,SAAS5gB,EAAAA,EAAAA,GAAE,uBAEhC,QAAC0rD,GAAD,WACGb,MAAAA,GAAA,UAAAA,EAAanmB,WAAb,eAAkBinB,cAAc3rD,EAAAA,EAAAA,GAAE,mBAzDrB4qD,GAAAA,YAAAA,aAiExB,MAAMt/B,IAAU,OAAO,MAAP,sBAAH,kBACMtnB,EAAAA,EAAAA,GAAM,GADZ,sBAES+T,GAAKA,EAAEzY,MAAMilC,OAFtB,YAGDxsB,GAAKA,EAAEzY,MAAMkhB,KAAKC,YAHjB,mHASJzc,EAAAA,EAAAA,GAAM,GATF,iCAYF+T,GAAMA,EAAE/L,UAAY+L,EAAEzY,MAAM8pC,QAAQS,eAAiB9xB,EAAEzY,MAAM8pC,QAAQU,eAZnE,4DAiBgB/xB,GAAKA,EAAEzY,MAAM0Y,QAjB7B,aAkBAD,GAAKA,EAAEzY,MAAM4c,OAAO0vC,oBAlBpB,wBAoBU7zC,GAAKA,EAAEzY,MAAMirB,YAAYqL,QApBnC,aAqBC7d,GAAKA,EAAEzY,MAAM8pC,QAAQQ,cArBtB,oBA0BPqhB,IAAmB,OAAOY,GAAAA,EAAP,sBAAH,wGAOX9zC,GAAKA,EAAEzY,MAAM6tB,WAPF,KAUhB2+B,IAAa,OAAO5pC,EAAAA,GAAP,sBAAH,uEAKVmpC,IAAiB,OAAOS,GAAP,sBAAH,uBACG/zC,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAD5B,oBAMdy/B,IAAsB,OAAO,OAAP,sBAAH,uCAInBD,IAAqB,OAAO,OAAP,sBAAH,IAGlBF,IAAa,OAAOO,GAAP,sBAAH,2JASVL,GATU,kBAYVC,GAZU,sBAkBVR,IAAqB,OAAOa,EAAAA,EAAP,sBAAH,kF,oIC/IxB,SAASC,KACP,OACE,QAAC,KAAD,WACE,QAAC,MAAD,WACG5sD,GAAAA,EAAAA,IAAgB,cAAe,QAACwrD,GAAD,KAChC,QAAC,EAAA30C,OAAD,CACEg2C,QAAS9hD,EAAAA,eACTkM,OAAQwB,IACN,QAAC,cAAD,CAAuBkQ,MAAOlQ,EAA9B,UACE,QAAC,EAAAq0C,cAAD,IAAmBr0C,MAJzB,SAQG6rC,YAbFsI,GAAAA,YAAAA,OAoBT,YCzBO,SAASG,KACd,IACEpC,GAAUiC,GAAO,IAAG5xC,EAAAA,MACpB,MAAOnS,GACa,kBAAhBA,EAAI/G,UAENwW,QAAQpL,MACN,IAAIhL,MACF,oHAGJ4F,OAAOkJ,SAASE,OAAOpJ,OAAOkJ,SAASC,YCHtC,SAAS+7C,GAAc5uC,IAC5B6uC,EAAAA,GAAAA,GAAqB7uC,IACrB8uC,EAAAA,GAAAA,GAAc9uC,EAAQ,CAACkmC,OAAMA,KAI7B9zC,GAAAA,GAAAA,KAAY,CAAC3Q,KAAM,qBACnBqrD,EAAAA,GAAAA,GAAiB6B,IJ0DZ/tD,iBAML,QACmC,IAA1B8I,OAAOqlD,iBACbt/C,MAAMsY,QAAQre,OAAOqlD,gBAEtB,OAGF,MAAMC,EAAStlD,OAAOqlD,eAMtBrlD,OAAOqlD,eAAiB,CACtBv8C,KAAMo6C,IAGJn9C,MAAMsY,QAAQinC,UAGVzkD,QAAQC,IAAIwkD,EAAO3lD,IAAIujD,KInF/BqC,K,kDCXF,MAAMC,EAA2B,CAC/B7rD,EACA8rD,EACAp+B,IAEAtU,SAASa,iBAAiBja,GAAM2nC,IAC9B,MAAM,OAAC5sB,GAAU4sB,EAEF,OAAX5sB,GAIEA,aAAkBgxC,aAInBhxC,EAAOixC,QAAQF,IAIpBp+B,EAASia,MAQbkkB,EAAyB,QAAS,uBAAuBlkB,IAAS,cAChEA,EAAM3qB,iBAEN,MAAMivC,EAAiBtkB,EAAM5sB,OACvBmxC,EAAiBD,EAAeE,aAAa,QAEnD,GAAuB,OAAnBD,EACF,OAGF,MAAME,EAAchzC,SAASC,cAA2B6yC,GAExD,GAAoB,OAAhBE,EACF,OAGF,MAAMjD,EAAYiD,EAAYC,cACxBp5B,EAAOg5B,EAAeK,QAAQ,MAE9BC,EAAYN,EAAeK,QAAQ,MACnCE,EAAgBv5B,MAAAA,OAAH,EAAGA,EAAM5Z,cAAc,oBAG1CmzC,MAAAA,GAAA,UAAAA,EAAepN,iBAAf,SAA0Bp1C,OAAO,UACjCwiD,MAAAA,GAAA,UAAAA,EAAenzC,cAAc,qBAA7B,SAA4CU,aAAa,gBAAiB,SAE1E,UAAAovC,EAAU9vC,cAA2B,2BAArC,mBAA0D+lC,iBAA1D,SAAqEp1C,OAAO,UAG5EuiD,MAAAA,GAAAA,EAAWnN,UAAUhyC,IAAI,UACzBm/C,MAAAA,GAAA,UAAAA,EAAWlzC,cAAc,qBAAzB,SAAwCU,aAAa,gBAAiB,QAEtEqyC,EAAYhN,UAAUhyC,IAAI,aAQ5By+C,EAAyB,QAAS,0BAA0BlkB,IAAS,MACnE,QAAC,EAAAA,EAAM5sB,OAAuBuxC,QAAQ,iBAAtC,SAAiDtiD,a,wHC5CnD,SAAeg5B,E,sCAAAA,IAZf,SAAsBhsB,GACpB,MAAM,aAACtR,EAAD,SAAeqS,EAAf,cAAyB00C,EAAgB,MAAQz1C,EAEvD,MAA2B,YAAvBtR,MAAAA,OAAA,EAAAA,EAAcuV,OAAqB1c,EAAAA,EAAAA,IAAgB,YACxB,mBAAlBkuD,EACFA,EAAc,CAAC10C,SAAAA,IAEjB00C,EAEF10C,M,wqBCnBT,MAAM20C,EAAc,CAACjlC,EAAoBklC,IACtC,MAAIxtD,EAAAA,EAAAA,GAAE,yBAA0BwtD,OAAiBllC,EAC/CzhB,KAAI4mD,GAAM,oBAAmBA,eAC7B9/C,KAAK,QAsCV,SAAS+/C,EAAT,GAMU,IANe,SACvBplC,EADuB,YAEvBklC,EAFuB,MAGvBG,EAHuB,eAIvBC,EAJuB,QAKvB1sD,GAAUlB,EAAAA,EAAAA,GAAE,6DACJ,EACR,MAAO6tD,EAAUC,IAAe1T,EAAAA,EAAAA,WAAS,GAEzC,SAAS2T,IACP,OACE,QAAC,EAAAzyC,SAAD,YACE,QAAC0yC,EAAD,WACGhrD,EAAAA,EAAAA,IACE,+OAID,CACEirD,YAAY,mBACZC,YAAY,QAAC,IAAD,CAAcjvC,KAAMkvC,EAAAA,UAItC,QAAC,IAAD,CAAWC,iBAAe,EAACrmC,MAAOwlC,EAAYjlC,EAAUklC,GAAxD,UACE,QAACa,EAAD,CAAYl8B,YAAU,EAACja,KAAK,SAASC,MAAM,QAAC,KAAD,CAAUD,KAAK,OAA1D,UACGlY,EAAAA,EAAAA,GAAE,0BAGP,QAACsuD,EAAD,CAAKz1C,QAASQ,IAAKk1C,EAAAA,EAAAA,GAAWl1C,EAAEuC,QAAhC,UACE,yBAAO2xC,EAAYjlC,EAAUklC,UAMrC,IAAKG,EAAO,CACV,MAAMa,EAAkBZ,GAAkBC,EAC1C,OACE,QAAC,EAAAvyC,SAAD,YACE,QAACmzC,EAAD,WACGvtD,GACC0sD,IACA,QAACc,EAAD,CACEtjC,SAAS,OACTlT,KAAK,SACLW,QAAS,IAAMi1C,GAAaD,GAH9B,WAKG7tD,EAAAA,EAAAA,GAAE,SACH,QAAC,KAAD,CAAas0C,UAAWka,EAAkB,KAAO,eAItDA,IAAmB,QAACG,EAAD,UAAkBZ,SAK5C,MAAMa,EAAkC,kBAAVjB,EAAsB1rC,EAAAA,EAAQ0rC,EAC5D,OACE,QAACiB,EAAD,CAAgB/tD,KAAK,UAAUghB,UAAQ,EAACoa,OAAQ8xB,IAAhD,SACG7sD,IA7DEwsD,EAAAA,YAAAA,kBAkET,MAAMe,GAAyB,OAAO,MAAP,qBAAH,2DAGX12C,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBAHP,KAMtB2H,GAAkB,OAAO,MAAP,qBAAH,eACL3qD,EAAAA,EAAAA,GAAM,GADD,oEAUAA,EAAAA,EAAAA,GAAM,IAVN,MAcfgqD,GAAW,OAAO,IAAP,qBAAH,kBACKhqD,EAAAA,EAAAA,GAAM,GADX,KAIR0qD,GAAe,OAAOxsC,EAAAA,GAAP,qBAAH,UACPnK,GAAKA,EAAEzY,MAAMytB,QADN,YAENhV,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBAFZ,kBAGFjvC,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBAHhB,qBAMLjvC,GAAKA,EAAEzY,MAAMuvD,aANR,KASdC,EAAAA,GATc,4CAYP9qD,EAAAA,EAAAA,GAAM,GAZC,MAgBZqqD,GAAa,OAAOnsC,EAAAA,GAAP,qBAAH,2CAIVosC,GAAM,OAAO,MAAP,qBAAH,2CAIT,K,2cC3Je,SAASS,EAAT,GAAuE,IAA5C,cAAC5nC,EAAD,SAAgBvO,KAAaf,GAAe,EACpF,OAAIsP,GACK,QAAC,IAAD,IAAatP,EAAb,SAAqBe,KAGvB,QAAC,EAAA0C,SAAD,UAAW1C,IALIm2C,EAAAA,YAAAA,oBCLxB,MAAMC,GAAe,OAAO,IAAP,sBAAH,oCAGdj3C,GAAKA,EAAEwP,UAAY,wBAHL,KAMZ0nC,GAAqB,OAAOC,EAAAA,EAAP,sBAAH,mDAMJn3C,GAAMA,EAAEwP,SAAW,OAAS,QANxB,KAQpBxP,GAAKA,EAAEwP,UAAY,wBARC,KASpBxP,GAAKA,EAAEo3C,aAAgB,kBAAiBp3C,EAAEzY,MAAM8vD,oBAT5B,KAiCT,SAASC,EAAT,GAaL,IAbyB,QACjCnuD,EADiC,UAEjCkf,EAFiC,MAGjCQ,EAHiC,SAIjC+J,EAJiC,KAKjC9pB,EALiC,aAMjCymB,EANiC,SAOjCC,EAPiC,SAQjC3O,EARiC,cASjCuO,EATiC,gBAUjCmoC,EAViC,OAWjCr6C,KACG4C,GACK,EACR,MAAM03C,EAAoB,CACxB,aAAiC,iBAAV3uC,EAAqBA,GAAQ5gB,EAAAA,EAAAA,GAAE,WACtDogB,UAAWovC,GAAAA,CAAWpvC,EAAW,CAACmH,SAAAA,IAClC1O,QAAS0O,OAAWzlB,EAAY6oB,EAChCpD,SAAAA,EACA3O,SAAAA,KACGf,GAGCrW,EACK,WAATX,GACE,QAACouD,EAAD,IAAwBM,KAExB,QAACP,EAAD,IAAkBO,IAGtB,OAAIpoC,GAAiBwD,GAEjB,QAACokC,EAAD,CACE5nC,cAAeA,EACfiE,SAAUkkC,EACV/nC,SAAUA,EACVrmB,QAASA,EACT+T,OAAQA,EACR8V,YAAazD,EACbwD,UAAWH,EACXsH,gBAAiB1K,EARnB,SAUG/lB,IAKAA,I,6rBCnET,MAAMiuD,UAA+Bp4C,EAAAA,UAAwB,uDAC5C,CACbsY,MAAO,IACPzoB,OAAQ,QAHiD,4BAM5C,KACb,MAAM,MAACyoB,EAAD,OAAQzoB,GAAUsI,KAAKoI,OACvB,UAAC83C,EAAD,WAAYC,GAAcngD,KAAKqI,MAE/B+3C,EAAyC,CAAC,CAACF,GAAY//B,GACzDzoB,IACF0oD,EAAcD,GAAczoD,GAE9BsI,KAAKqI,MAAMg4C,WAAWD,GACtBpgD,KAAKqI,MAAMzT,iBAf8C,4BAkB5C,CAACnF,EAAmB8oB,KACjCvY,KAAKwN,SAAS,CAAC,CAAC/d,GAAO8oB,OAGzB1R,SACE,MAAM,OAAC2E,EAAD,OAASE,EAAT,KAAiBD,EAAjB,WAAuB60C,EAAvB,MAAmC3tD,EAAnC,WAA0CiC,EAA1C,cAAsD2rD,GAC1DvgD,KAAKqI,OACD,MAAC8X,EAAD,OAAQzoB,GAAUsI,KAAKoI,MAC7B,OACE,QAAC,EAAA0D,SAAD,YACE,QAACN,EAAD,WACE,uBAAK7Y,OAEP,QAAC8Y,EAAD,YACE,QAAC,IAAD,CACE+0C,QAAQ,EACRC,0BAAwB,EACxBC,SAAO,EACP/tD,MAAO2tD,EACP7wD,KAAK,QACL4B,KAAK,SACLknB,MAAO4H,EACPnH,SAAUlmB,GAAOkN,KAAK4mB,aAAa,QAAoB3B,OAAOnyB,IAC9D6tD,UAAQ,EACRx5B,aAAa32B,EAAAA,EAAAA,GAAE,eAEjB,QAAC,IAAD,CACEgwD,QAAQ,EACRC,0BAAwB,EACxBC,SAAO,EACP/tD,OAAOnC,EAAAA,EAAAA,GAAE,eACT+nB,MAAO7gB,EACPjI,KAAK,SACLupB,SAAUlmB,GAAOkN,KAAK4mB,aAAa,SAAmB9zB,GACtDjD,QAAS0wD,EACTp5B,aAAa32B,EAAAA,EAAAA,GAAE,iBACfowD,YAAU,EACVC,MAAMrwD,EAAAA,EAAAA,GAAE,2EAGZ,QAACkb,EAAD,WACE,QAAC,KAAD,CAAW0Z,IAAK,EAAhB,WACE,QAAC,KAAD,CAAQ/zB,KAAK,SAASgY,QAASzU,EAA/B,UACGpE,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAD,CAAQa,KAAK,SAASuqB,SAAS,UAAUvS,QAASrJ,KAAK8gD,aAAvD,UACGtwD,EAAAA,EAAAA,GAAE,qBAhEXyvD,EAAAA,YAAAA,yBAyEN,U,wICzFA,MAAMnzC,EAAe,CACnBna,OAAOnC,EAAAA,EAAAA,GAAE,8BAWI,MAAMuwD,UAAkCl5C,EAAAA,UAAwB,uDAG9D,CACbm5C,aAAa,KAJ8D,kCAOxDC,EAAAA,EAAAA,eAPwD,kCASxDA,EAAAA,EAAAA,eATwD,qCAWrD,KAAM,QAC5B,MAAMC,EAAO,UAAGlhD,KAAKmhD,mBAAmB/2C,eAA3B,aAAG,EAAiCmO,MAC3C6oC,EAAO,UAAGphD,KAAKqhD,mBAAmBj3C,eAA3B,aAAG,EAAiCmO,MACjD,GAAI2oC,GAAWE,EAAS,CACtB,MAAME,EAAe96C,IAAAA,IAAW06C,EAAU,IAAME,GAChD,GAAIE,EAAaC,UAAW,CAC1B,MAAMC,EAAMh7C,IAAAA,MACZ,OAAO86C,EAAaG,KAAKD,EAAK,YAGlC,OAAO,MArBoE,6BAwB7D,KACd,MAAME,EAAU1hD,KAAK2hD,wBAErB3hD,KAAKwN,SAAS,CACZwzC,YAAaU,GAAW,IAGtBA,EAAU,GACZ1hD,KAAKqI,MAAMg4C,WAAW,CAACuB,eAAgBF,IAEzC1hD,KAAKqI,MAAMzT,gBAGbiS,SAGE,MAAMg7C,EAAc,IAAIC,KACxBD,EAAYE,QAAQF,EAAYG,UAAY,IAC5CH,EAAYI,WAAW,GACvBJ,EAAYK,gBAAgB,GAE5B,MAAMC,GAAiBC,EAAAA,EAAAA,SACrB,eACAP,EAAYQ,iBACZR,EAAYS,cAAgB,EAC5BT,EAAYU,cAGRC,GAAiBJ,EAAAA,EAAAA,SAAQ,UAAWP,EAAYY,gBAChD,OAACj3C,EAAD,KAASC,EAAT,OAAeC,EAAf,MAAuB/Y,GAASqN,KAAKqI,MAE3C,OACE,QAAC,EAAAyD,SAAD,YACE,QAACN,EAAD,UAAS7Y,KACT,QAAC8Y,EAAD,WACE,gBAAMmF,UAAU,kBAAhB,WACE,eAAKA,UAAU,gBAAf,WACE,cAAIA,UAAU,aAAd,UAA4BpgB,EAAAA,EAAAA,GAAE,WAC9B,iBACEogB,UAAU,eACVvf,KAAK,OACLjC,GAAG,oBACHszD,aAAcP,EACdh2C,IAAKnM,KAAKmhD,mBACVR,UAAQ,EACR71C,MAAO,CAAC0hC,QAAS,gBAGrB,eAAK57B,UAAU,sBAAf,WACE,cAAIA,UAAU,aAAd,UAA4BpgB,EAAAA,EAAAA,GAAE,iBAC9B,iBACEogB,UAAU,eACVvf,KAAK,OACLjC,GAAG,oBACHszD,aAAcF,EACdr2C,IAAKnM,KAAKqhD,mBACVv2C,MAAO,CAAC0hC,QAAS,UACjBmU,UAAQ,YAKf3gD,KAAKoI,MAAM44C,cACV,QAAC,IAAD,CAAO3vD,KAAK,QAAQghB,UAAQ,EAA5B,UACG7hB,EAAAA,EAAAA,GAAE,8CAGP,QAACkb,EAAD,WACE,QAAC,KAAD,CAAW0Z,IAAK,EAAhB,WACE,QAAC,KAAD,CAAQ/zB,KAAK,SAASuqB,SAAS,UAAUvS,QAASrJ,KAAKqI,MAAMzT,WAA7D,UACGpE,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAD,CAAQa,KAAK,SAASuqB,SAAS,UAAUvS,QAASrJ,KAAK2iD,cAAvD,UACGnyD,EAAAA,EAAAA,GAAE,qBAjGIuwD,EAAAA,YAAAA,6B,OAAAA,EAAAA,eACGj0C,G,yLCJxB,MAAM81C,EAAmB,CAAC,GAAI,IAAK,IAAK,KAAS,OAC3CC,EAAgB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,KAC1CC,EAAwC,CAC5C,CAACvqC,MAAO,GAAI5lB,OAAOnC,EAAAA,EAAAA,GAAE,aACrB,CAAC+nB,MAAO,KAAS5lB,OAAOnC,EAAAA,EAAAA,GAAE,YAC1B,CAAC+nB,MAAO,MAAa5lB,OAAOnC,EAAAA,EAAAA,GAAE,cAY1BuyD,EAAgB,IAOT,IAPU,SACrB7rC,EADqB,SAErBa,EAFqB,cAGrBJ,EAHqB,eAIrBE,EAJqB,aAKrBC,GAAetnB,EAAAA,EAAAA,GAAE,UALI,UAMrBwyD,GAAY,GACD,EACX,MAAMC,EAAY7C,KAChBhlC,EAAAA,EAAAA,GAAiB,CACfC,QAAS1D,EACT2D,UAAW,IACTpE,EAAS,CACPxe,OAAQijB,EAAAA,GAAAA,QACRykC,cAAAA,IAEJ1uD,QAASmmB,EACT0D,YAAazD,KAIXorC,EAAkB9C,IACtB6C,EAAS7C,IAGX,GAAI4C,EACF,OACE,QAAC,IAAD,CAAS5xC,OAAO5gB,EAAAA,EAAAA,GAAE,+BAAlB,UACE,QAAC,KAAD,CACEorB,SAAS,UACTlT,KAAK,SACLW,QAAS,IAAM6N,EAAS,CAACxe,OAAQijB,EAAAA,GAAAA,aACjC,cAAYnrB,EAAAA,EAAAA,GAAE,YACdmY,MAAM,QAAC,KAAD,CAAUD,KAAK,WAM7B,MAkCMy6C,EAAgB,CACpB,CACEr5C,IAAK,MACLnX,OAAOnC,EAAAA,EAAAA,GAAE,QACT4yD,WAAW,EACXh6C,SAAU,IACLw5C,EAAiBvrD,KAAI/F,IAAY,CAClCwY,IAAM,OAAMxY,IACZqB,OAAO,QAAC,IAAD,CAAU0wD,QAAoB,GAAX/xD,IAC1B6pB,SAAU,IAAM8nC,EAAS,CAACrB,eAAgBtwD,QAE5C,CACEwY,IAAK,aACLnX,OAAOnC,EAAAA,EAAAA,GAAE,UACT2qB,SAAU,KA/ChB1mB,EAAAA,EAAAA,YAAUU,IACR,QAAC4rD,EAAD,IACM5rD,EACJkrD,WAAYn+B,GAAWghC,EAAehhC,UAgD1C,CACEpY,IAAK,gBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,4BACT4yD,WAAW,EACXh6C,SAAU,IACLy5C,EAAcxrD,KAAI8oB,IAAS,CAC5BrW,IAAM,iBAAgBqW,UACtBxtB,MACY,IAAVwtB,GACI3vB,EAAAA,EAAAA,GAAE,cACFshB,EAAAA,EAAAA,IAAG,WAAiB,YAAkBqO,GAC5CijC,WAAW,EACXh6C,SAAU,CACR,CACEU,IAAM,iBAAgBqW,mBACtBxtB,OAAOnC,EAAAA,EAAAA,GAAE,YACT2qB,SAAU,IAAM8nC,EAAS,CAACK,YAAanjC,QAEtC2iC,EAAezrD,KAAI,QAAC,MAACkhB,EAAD,MAAQ5lB,GAAT,QAAqB,CACzCmX,IAAM,iBAAgBqW,gBAAoBxtB,IAC1CA,MAAAA,EACAwoB,SAAU,IACR8nC,EAAS,CACPK,YAAanjC,EACbojC,aAAchrC,aAKxB,CACEzO,IAAK,uBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,UACT2qB,SAAU,KA3EhB1mB,EAAAA,EAAAA,YAAUU,IACR,QAAC,EAAD,IACMA,EACJkrD,WAAYn+B,GAAWghC,EAAehhC,GACtCvvB,OAAOnC,EAAAA,EAAAA,GAAE,4CACT8vD,YAAY9vD,EAAAA,EAAAA,GAAE,mBACd0vD,UAAU,cACVC,WAAW,eACXI,cAAeuC,SAuEnB,CACEh5C,IAAK,eACLnX,OAAOnC,EAAAA,EAAAA,GAAE,qCACT4yD,WAAW,EACXh6C,SAAU,IACLy5C,EAAcxrD,KAAI8oB,IAAS,CAC5BrW,IAAM,gBAAeqW,UACrBxtB,MACY,IAAVwtB,GACI3vB,EAAAA,EAAAA,GAAE,cACFshB,EAAAA,EAAAA,IAAG,WAAiB,YAAkBqO,GAC5CijC,WAAW,EACXh6C,SAAU,CACR,CACEU,IAAM,gBAAeqW,mBACrBxtB,OAAOnC,EAAAA,EAAAA,GAAE,YACT2qB,SAAU,IAAM8nC,EAAS,CAACO,gBAAiBrjC,QAE1C2iC,EAAezrD,KAAI,QAAC,MAACkhB,EAAD,MAAQ5lB,GAAT,QAAqB,CACzCmX,IAAM,gBAAeqW,gBAAoBxtB,IACzCA,MAAAA,EACAwoB,SAAU,IACR8nC,EAAS,CACPO,gBAAiBrjC,EACjBsjC,iBAAkBlrC,aAK5B,CACEzO,IAAK,sBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,UACT2qB,SAAU,KAlGhB1mB,EAAAA,EAAAA,YAAUU,IACR,QAAC,EAAD,IACMA,EACJkrD,WAAYn+B,GAAWghC,EAAehhC,GACtCvvB,OAAOnC,EAAAA,EAAAA,GAAE,qDACT8vD,YAAY9vD,EAAAA,EAAAA,GAAE,mBACd0vD,UAAU,kBACVC,WAAW,mBACXI,cAAeuC,UAgGrB,OACE,QAAC,KAAD,CAAWY,QAAM,EAAjB,WACE,QAACC,EAAD,CACEj7C,KAAK,SACLk7C,aAAc,CAACthC,MAAO,IAAKvK,SAAAA,GAC3B3G,OAAO5gB,EAAAA,EAAAA,GACL,mFAEFmY,MAAM,QAAC,KAAD,CAAUD,KAAK,OACrBW,QAAS,IAAM45C,IACflrC,SAAUA,EARZ,UAUGvnB,EAAAA,EAAAA,GAAE,aAEL,QAAC,IAAD,CACEslB,QAAS,QAAEzN,MAAO6Q,EAAc/M,IAAK03C,GAA5B,SACP,QAACC,EAAD,CACE33C,IAAK03C,KACD3qC,EACJ,cAAY1oB,EAAAA,EAAAA,GAAE,kBACdkY,KAAK,SACLC,MAAM,QAAC,KAAD,CAAam8B,UAAU,OAAOp8B,KAAK,OACzCqP,SAAUA,KAGdgsC,WAAWvzD,EAAAA,EAAAA,GAAE,UACb6rB,MAAO8mC,EACP3mC,WAAYzE,QAhMdgrC,EAAAA,YAAAA,gBAsMN,UAEMY,GAAe,OAAOjxC,EAAAA,GAAP,qBAAH,kCAECnK,GAAKA,EAAEzY,MAAM8vD,kBAFd,KAKZkE,GAAkB,OAAOpxC,EAAAA,GAAP,qBAAH,kCAEFnK,GAAKA,EAAEzY,MAAMk0D,mBAFX,uB,q0BC7NrB,MAAMC,UAA8Bp8C,EAAAA,UAAwB,uDAC3C,CACbkvB,QAAS,MAF+C,wBAK9Cxe,IACVvY,KAAKwN,SAAS,CAACupB,QAASxe,QANgC,mCASnCre,GACrBA,EAAQ7C,KAAI6sD,IAAW,CACrB3rC,MAAO2rC,EAAQntB,QACfpkC,OAAO,QAAC,IAAD,CAASokC,QAASmtB,EAAQntB,QAASotB,QAAQ,IAClDjiC,SACE,2BACG1xB,EAAAA,EAAAA,GAAE,WADL,KACiB,QAAC,IAAD,CAAWwhB,KAAMkyC,EAAQE,iBAG5CF,QAAAA,QAGJr9C,SACE,MAAM,QAACjP,EAAD,YAAUmH,EAAV,WAAuBnK,EAAvB,WAAmCyrD,EAAnC,OAA+C70C,EAA/C,KAAuDC,EAAvD,OAA6DC,GACjE1L,KAAKqI,MACDsG,EAAM5P,EACP,aAAYnH,KAAWmH,cACvB,kBAAiBnH,cAQtB,OACE,gBAAM4wB,SAPU3e,IAChBA,EAAEwE,iBACFgyC,EAAW,CAACgE,UAAWrkD,KAAKoI,MAAM2uB,UAClCniC,KAIA,WACE,QAAC4W,EAAD,WAAShb,EAAAA,EAAAA,GAAE,kBACX,QAACib,EAAD,WACE,QAAC,KAAD,CACE9Y,OAAOnC,EAAAA,EAAAA,GAAE,WACTpB,GAAG,UACHK,KAAK,UACLupB,SAAUhZ,KAAKgZ,SACfmO,aAAa32B,EAAAA,EAAAA,GAAE,cACfme,IAAKA,EACL21C,UAAWtkD,KAAKukD,oBAChBC,QAAS9zD,IAAS,CAAEA,MAAAA,SAGxB,QAACgb,EAAD,YACE,QAAC,KAAD,CAAQra,KAAK,SAASkb,KAAG,QAAE,CAACk4C,aAAajwD,EAAAA,EAAAA,GAAM,MAAtB,OAA6B6U,QAASzU,EAA/D,UACGpE,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAD,CAAQa,KAAK,SAASuqB,SAAS,UAA/B,UACGprB,EAAAA,EAAAA,GAAE,yBAtDTyzD,EAAAA,YAAAA,wBA8DN,U,2RC5DA,MAAMn3C,EAAe,CACnB43C,YAAY,EACZC,gBAAgB,EAChB7sC,cAActnB,EAAAA,EAAAA,GAAE,YAiBlB,MAAMo0D,UAAuB/8C,EAAAA,UAAiB,iFAeX,KAC/B,MAAM,SAACqP,EAAD,aAAWngB,EAAX,WAAyB2gB,EAAzB,cAAqCN,GAAiBpX,KAAKqI,MACjEqP,GACER,EAAS,CACPxe,OAAQijB,EAAAA,GAAAA,SACRykC,cAAe,CACbiE,UAAWjtC,EAAgBA,EAAc2f,QAAU,aAGzD3L,EAAAA,EAAAA,GAA4B,gBAAiB,CAC3Cr0B,aAAAA,EACAmtD,QAAS,gBA1B+B,2CA8Bd,KAC5B,MAAM,SAAChtC,EAAD,aAAWngB,EAAX,WAAyB2gB,GAAc1X,KAAKqI,MAClDqP,GACER,EAAS,CACPxe,OAAQijB,EAAAA,GAAAA,SACRykC,cAAe,CACbyE,eAAe,MAGrBz5B,EAAAA,EAAAA,GAA4B,gBAAiB,CAC3Cr0B,aAAAA,EACAmtD,QAAS,YAtCbY,uCAAuC1E,GACrC,MAAM,aAACrpD,EAAD,SAAemgB,GAAYlX,KAAKqI,MACtC6O,EAAS,CACPxe,OAAQijB,EAAAA,GAAAA,SACRykC,cAAAA,KAEFh1B,EAAAA,EAAAA,GAA4B,gBAAiB,CAC3Cr0B,aAAAA,EACAmtD,QAAS,oBAkCba,iBACE,MAAM,eAACJ,EAAD,SAAiBztC,GAAYlX,KAAKqI,MAExC,OACE,QAAC,IAAD,CACE+I,MACEuzC,GACIn0D,EAAAA,EAAAA,GACE,kFAEFA,EAAAA,EAAAA,GAAE,aANV,UASE,QAAC,KAAD,CACEorB,SAAS,UACTlT,KAAK,SACLC,MAAM,QAAC,KAAD,CAAeD,KAAK,OAC1B,cAAYlY,EAAAA,EAAAA,GAAE,aACdunB,SAAU4sC,EACVt7C,QAAS,IAAM6N,EAAS,CAACxe,OAAQijB,EAAAA,GAAAA,iBAMzCqpC,qBACE,MAAM,YACJjmD,EADI,WAEJ2lD,EAFI,WAGJhtC,EAHI,cAIJN,EAJI,eAKJS,EALI,cAMJF,EANI,SAOJI,EAPI,aAQJD,EARI,gBASJE,GACEhY,KAAKqI,MAET,GAAIq8C,EACF,OAAO1kD,KAAK+kD,iBAGd,MAAME,EAAevtC,EAEjB,IADAlnB,EAAAA,EAAAA,GAAE,yDAGA00D,EAAoB/pC,KACxBC,EAAAA,EAAAA,GAAiB,CACfC,QAAS1D,EACT2D,UAAWH,EACXzpB,QAASmmB,EACT0D,YAAazD,KAIXuE,EAAQ,CACZ,CACEvS,IAAK,eACLnX,OAAOnC,EAAAA,EAAAA,GAAE,oBACT0xB,QAAS+iC,EACT9pC,SAAU,IAAM+pC,EAAkBllD,KAAKmlD,6BACvCC,cAAe1tC,GAEjB,CACE5N,IAAK,kBACLnX,MAAOykB,GACH5mB,EAAAA,EAAAA,GAAE,4BAA4B60D,EAAAA,EAAAA,IAAcjuC,EAAc2f,WAC1DvmC,EAAAA,EAAAA,GAAE,uBACN0xB,QAAS+iC,EACT9pC,SAAU,IAAM+pC,EAAkBllD,KAAKslD,gCACvCF,cAAe1tC,GAEjB,CACE5N,IAAK,kBACLnX,OAAOnC,EAAAA,EAAAA,GAAE,6BACT2qB,SAAU,IAAMnb,KAAKulD,2BAInB/oC,EAAczd,EAAyBiZ,EAAXD,EAElC,OACE,QAAC,IAAD,CACEsE,MAAOA,EACPvG,QAAS,QAAEzN,MAAO6Q,EAAc/M,IAAK03C,GAA5B,SACP,QAACC,EAAD,CACE33C,IAAK03C,KACD3qC,EACJ,cAAY1oB,EAAAA,EAAAA,GAAE,wBACdkY,KAAK,SACLC,MAAM,QAAC,KAAD,CAAam8B,UAAU,OAAOp8B,KAAK,OACzCqP,SAAUyE,KAGdD,aACExE,IAAaL,EACT,CAAC,eAAgB,kBAAmB,mBACpC,GAENqsC,WAAWvzD,EAAAA,EAAAA,GAAE,eACbgsB,WAAYA,IAKlB+oC,yBACE,MAAM,QAAC3tD,EAAD,YAAUmH,GAAeiB,KAAKqI,OAEpC5T,EAAAA,EAAAA,YAAUU,IACR,QAAC,EAAD,IACMA,EACJkrD,WAAaD,GACXpgD,KAAK8kD,uCAAuC1E,GAE9CxoD,QAASA,EACTmH,YAAaA,MAKnB8H,SACE,MAAM,WACJ69C,EADI,SAEJxtC,EAFI,eAGJW,EAHI,cAIJF,EAJI,SAKJI,EALI,aAMJD,EANI,kBAOJP,GACEvX,KAAKqI,MAET,OAAIq8C,EACK1kD,KAAK+kD,kBAYZ,QAAC,IAAD,CAAShtC,UAAWR,EAAmBnG,OAAO5gB,EAAAA,EAAAA,GAAE,0BAAhD,UACE,QAAC,KAAD,CAAWkzD,QAAM,EAAjB,WACE,QAAC8B,EAAD,CACE98C,KAAK,SACL0I,OAAO5gB,EAAAA,EAAAA,GACL,0EAEFozD,aAAc,CAACthC,MAAO,IAAKvK,SAAAA,GAC3BpP,MAAM,QAAC,KAAD,CAAeD,KAAK,OAC1BW,QAlBU,KAChB+R,EAAAA,EAAAA,GAAiB,CACfC,QAAS1D,EACT2D,UAAW,IAAMpE,EAAS,CAACxe,OAAQijB,EAAAA,GAAAA,WACnCjqB,QAASmmB,EACT0D,YAAazD,IAcTC,SAAUA,EARZ,UAUGvnB,EAAAA,EAAAA,GAAE,aAEJwP,KAAKglD,2BA3MVJ,EAAAA,YAAAA,kB,OAAAA,EAAAA,eACkB93C,GAiNxB,SAAeunB,EAAAA,EAAAA,GAAiBuwB,GAE1BY,GAAgB,OAAO9yC,EAAAA,GAAP,sBAAH,kCAEAnK,GAAKA,EAAEzY,MAAM8vD,kBAFb,KAKbkE,GAAkB,OAAOpxC,EAAAA,GAAP,sBAAH,kCAEFnK,GAAKA,EAAEzY,MAAMk0D,mBAFX,uB,+nBChPrB,MAAMyB,EAAe,OAErB,SAAShzC,EAAT,GAUe,IAVA,KACbphB,EAAOo0D,EADM,SAEbpzC,GAAW,EAFE,OAGbvD,EAHa,OAIb6R,EAJa,OAKb8L,EALa,cAMbna,EANa,UAOb1B,EAPa,SAQbxH,KACGf,GACU,EACb,MAAOq9C,EAAYC,IAAiB/a,EAAAA,EAAAA,WAAS,GACvCgb,GAAaxiC,EAAAA,EAAAA,IAAQqJ,GACrBo5B,GAAoBziC,EAAAA,EAAAA,IAAQ9Q,IAI3BwzC,WAAYC,EAAgBC,UAAWC,IAAiBC,EAAAA,EAAAA,IAAS,CACtE1pC,YAAaopC,KAERE,WAAYK,EAAmBH,UAAWI,IAAoBF,EAAAA,EAAAA,IAAS,CAC5E1pC,YAAaopC,IAiBf,SAASxkB,IACPwkB,GAAcD,GAAeD,GAG/B,OACE,QAACW,EAAD,CACEh1D,KAAMA,EACNsvB,OAAQA,EACR7R,OAAQA,EACR2d,OAAQA,EACR65B,QAASL,GAAiBG,EAC1Bx1C,UAAWovC,GAAAA,CAAW3uD,EAAQ,OAAMA,IAAS,GAAIuf,MAC7CvI,EAPN,UASGgK,IACC,QAACk0C,EAAD,CAAal9C,QAAS+3B,KAAiB2kB,EAAvC,SA7BN,WACE,OAAQ10D,GACN,IAAK,UACH,OAAO,QAAC,KAAD,IACT,IAAK,UACH,OAAO,QAAC,KAAD,IACT,IAAK,QACH,OAAO,QAAC,KAAD,IAET,QACE,OAAO,QAAC,KAAD,KAoBJm1D,MAGL,QAACC,EAAD,YACE,QAAC/yD,EAAD,CACE2V,QAAS+3B,EACT/uB,SAAUA,EACVwzC,kBAAmBA,KACfM,EAJN,WAME,QAAC5wB,EAAD,UAAUnsB,KACRw8C,GAAcC,KACd,QAACa,EAAD,YACE,QAACC,EAAD,CAAet9C,QAASQ,GAAKA,EAAE4Y,kBAA/B,SACGnQ,IAEFszC,IACC,QAACgB,EAAD,WACE,QAAC,KAAD,CAAa9hB,UAAW4gB,EAAa,KAAO,iBAMrDA,IACC,QAACmB,EAAD,UACGppD,MAAMsY,QAAQ0W,GAAUA,EAAOp1B,KAAI6e,GAAQA,IAAQuW,UAhFvDha,EAAAA,YAAAA,QAwFT,MAAMiO,EAAc,IAOkC,IAPjC,KACnBrvB,EAAOo0D,EADY,OAEnB9kC,EAFmB,OAGnB7R,EAHmB,OAInB2d,EAJmB,QAKnB65B,EALmB,MAMnBx2D,GACoD,EACpD,MAAMg3D,EAAch3D,EAAMquD,MAAM9sD,GAC1Bu0D,GAAaxiC,EAAAA,EAAAA,IAAQqJ,GAE3B,OAAOlgB,EAAAA,EAAAA,IAAP,4BAEgB/X,EAAAA,EAAAA,GAAM,GAFtB,cAGe1E,EAAMiZ,eAHrB,kBAImBjZ,EAAM2wB,aAJzB,qBAKsBqmC,EAAYt+C,OALlC,eAMgBsG,EACT,mBAAkBg4C,EAAYC,oBAAoBD,EAAYC,qCAAqCj3D,EAAM+Y,eAAe/Y,EAAM+Y,cAC9H,GAAEi+C,EAAYC,kBARrB,iCAWaj3D,EAAM6tB,UAXnB,0BAY6B7tB,EAAM8Y,kBAZnC,iLAmB6B9Y,EAAM6zB,QAnBnC,gDAwBkBmjC,EAAYC,gBAxB9B,YAyBcvyD,EAAAA,EAAAA,GAAM,IAzBpB,SA4BI+xD,EA5BJ,IA4BoBK,EA5BpB,UA6BaE,EAAYE,UA7BzB,KAgCIV,GACD,yBACiBQ,EAAYG,uBAC1BV,MAAgBlhB,EAAAA,wBACPyhB,EAAYI,iCApC3B,IAwCItB,GACD,GAAEW,MAAgB7yD,iDAGfizD,2CA5CN,IAiDIhmC,GACD,kEAlDH,SAyDI0lC,GAAO,OAAO,MAAP,qBACT3lC,EADM,KAIJ6lC,GAAc,OAAO,MAAP,qBAAH,6BAEAh+C,GAAKA,EAAEzY,MAAMiZ,gBAFb,OAEiCR,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBAFnD,cAGJhjD,EAAAA,EAAAA,GAAM,KAHF,KAGUA,EAAAA,EAAAA,GAAM,GAHhB,KAGsBA,EAAAA,EAAAA,GAAM,KAH5B,KAGoCA,EAAAA,EAAAA,GAAM,GAH1C,+CAQXiyD,GAAiB,OAAO,MAAP,qBAAH,sCAId/yD,GAAmB,OAAO,MAAP,qBAAH,wCAMLc,EAAAA,EAAAA,GAAM,KAND,oBAOFA,EAAAA,EAAAA,GAAM,KAPJ,kBAQJ+T,GAAMA,EAAE8J,SAAW,KAAM7d,EAAAA,EAAAA,GAAM,IAR3B,mBASH+T,GAAMA,EAAEs9C,mBAAoBrxD,EAAAA,EAAAA,GAAM,MAAOA,EAAAA,EAAAA,GAAM,IAT5C,KAYhB+gC,GAAU,OAAO,OAAP,qBAAH,gBACIhtB,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBADtB,8BAMPmP,GAAgB,OAAO,MAAP,qBAAH,gBACFp+C,GAAKA,EAAEzY,MAAMiZ,gBADX,OAC+BR,GAAKA,EAAEzY,MAAMoV,KAAKsyC,gBADjD,wFAMVhjD,EAAAA,EAAAA,GAAM,GANI,KASbkyD,GAAoB,OAAOC,EAAP,qBAAH,gBACNnyD,EAAAA,EAAAA,GAAM,GADA,KAIjBoyD,GAAiB,OAAO,MAAP,qBAAH,sEAMdC,GAAkB,OAAO,MAAP,qBAAH,+BAEFryD,EAAAA,EAAAA,GAAM,KAFJ,oBAGDA,EAAAA,EAAAA,GAAM,KAHL,KAQrB,K,8eC/NA,SAAS2yD,EAAT,GAMmB,IANA,SACjB/9C,EADiB,UAEjBwH,EAFiB,OAGjB2M,EAHiB,OAIjBmmC,GAAS,EAJQ,IAKjBt+B,EAAM,GACW,EACjB,MAAMgiC,OAAsC,IAAX7pC,EACjC,OACE,QAAC8pC,EAAD,CAAY3D,OAAQA,EAAQt+B,IAAKA,EAAKxU,UAAWA,EAAjD,SACIw2C,EAEEE,EAAAA,SAAAA,IAAal+C,GAAUm+C,IACrB,KAAKp1D,EAAAA,EAAAA,gBAAeo1D,GAClB,OAAOA,EAGT,MAAOl/C,MAAOm/C,KAAeC,GAAqBF,GAG5C,MAACG,KAAUr/C,GAASm/C,EACpB/lC,EAAWlE,IAAWmqC,EAItB9rC,EAAW6F,EAAW,UAAY+lC,EAAW5rC,UAAY,UAE/D,OAAO+rC,EAAAA,EAAAA,cAAaF,EAAyC,IACxDp/C,EACHuI,UAAWovC,GAAAA,CAAWpvC,EAAW,CAAC2M,OAAQkE,IAC1C7F,SAAAA,OAnBJxS,IAXD+9C,EAAAA,YAAAA,YAqCT,MAAMS,EAAe,KAAMr7C,EAAAA,EAAAA,IAAL,mLAiBQgG,EAAAA,GAjBT,oIA2BSA,EAAAA,GA3BT,4WA2DSA,EAAAA,GA3DT,iFAoEf80C,GAAa,OAAO,MAAP,sBAAH,uDAGK9+C,IAAK/T,EAAAA,EAAAA,GAAM+T,EAAE6c,MAHlB,wBAMZ7c,GAAKA,EAAEm7C,QAAUkE,GANL,KAUhB,K,4JCzHA,MAAMC,EAAa,CAAH,4LAiChB,GAhBa,OAAO,MAAP,sBAAH,iCAEMt/C,GAAKA,EAAEzY,MAAM+Y,YAFnB,sBAGYN,GAAKA,EAAEzY,MAAM0Y,QAHzB,mBAISD,GAAKA,EAAEzY,MAAM2wB,cAJtB,sHAYNlY,GAAKA,EAAEs6B,aAAe,mBAZhB,KAaNt6B,GAAKA,EAAEs6B,aAAeglB,GAbhB,M,0EClBK,SAASC,EACtBz/C,GAEA,MAAO,IACFA,G,4kBCqEP,SAAS0/C,EAAT,GAYU,IAZY,QACpBC,EADoB,eAEpBC,EAFoB,OAGpBC,EAHoB,UAIpBC,EAJoB,iBAKpBC,EALoB,OAMpBC,EANoB,QAOpB3H,GAAU,EAPU,kBAQpB4H,GAAoB,EARA,kBASpBC,GAAoB,EATA,OAUpBzpB,KACGz2B,GACK,EACR,MAAO8D,IAAKq8C,KAASC,GAAiBpgD,EAChCvY,GAAQ8qB,EAAAA,EAAAA,KACR8tC,EAAYjrD,MAAMsY,QAAQsyC,GAC5BA,EACA,CAACv4D,EAAMi5B,QAASj5B,EAAMm2C,UAAWn2C,EAAMm2C,WAE3C,IAAI0iB,EAAgC,GA6BpC,GA1BMT,MAAAA,GAAAA,EAAQxtD,SACZiuD,EAAcT,EAAO7wD,KAAI,CAACuxD,EAAUz2B,KAAc,MAChD,MAAM02B,EAA0B,IAC3BD,EACHzuD,OAAQ,SACR9I,KAAM,OAiBR,OAdU,IAAN8gC,IACF02B,EAAQC,aAAe,GACP,IAAZpI,IACFmI,EAAQE,OAAS,UAGjBrI,IACFmI,EAAQ3iD,MAAQ,UAElB3B,GAAAA,CAAIskD,EAAS,kBAAmBH,EAAUv2B,IAC1C5tB,GAAAA,CAAIskD,EAAS,oBAAqB,IAClCtkD,GAAAA,CAAIskD,EAAS,6BAA8B,GAC3CtkD,GAAAA,CAAIskD,EAAS,2BAAV,UAAsCZ,MAAAA,OAAtC,EAAsCA,EAAiB91B,UAAvD,QAA6Du2B,EAAUv2B,IAEnE02B,MAIPb,EAAS,CACX,MAAMgB,EAAgB,CACpBC,MAAM,EACNnzC,QAAS,OACTozC,UAAW,IAAY,UAAX,KAACv4D,GAAU,EACrB,MAAM63C,GAAO2gB,EAAAA,EAAAA,IAAiBx4D,EAAKy4D,MAAM,GAAI,iBAAkB,CAC7DC,OAAQhhD,EAAMihD,MAGhB,MAAO,CACL,+BACC,6CAHUC,EAAAA,EAAAA,IAAoB54D,EAAKlB,KAAM4Y,MAAAA,GAAZ,UAAYA,EAAOmhD,aAAnB,aAAY,EAAcC,kCAIxD,SACA,6BACAjhB,EACA,SACA,SACA,qCACArqC,KAAK,MAILurD,EAAY,CAChB/4D,KAAMq3D,EAAQ3wD,KAAKsyD,IAAD,YAAqB,CACrCl6D,KAAMk6D,EAAOl6D,KACb25D,MAAO,CAACO,EAAOpxC,MAAO,GACtBE,QAASuwC,EACTvc,OAAQ,SACRmd,WAAU,UAAED,EAAOC,kBAAT,QAAuB,EACjCC,UAAW,CACTltB,MAAOgtB,EAAOhtB,MACdmtB,YAAah6D,EAAM+Y,iBAIzB8/C,EAAY,GAAGe,UAAYA,EAG7B,MAAMK,EAAezB,EACjB,CACE0B,cAAc,EACdC,cAAc,EACdC,SAAUC,EAAAA,EACVC,UAAW,CACTlB,UAAU3wC,GACJ6vC,EACKA,EAAiB7vC,IAEnB8xC,EAAAA,EAAAA,IAAwB9xC,KAIrC,CACE6xC,UAAW,CACTnB,MAAM,IAIRqB,EAA8C,CAClD7xC,QAAS,CACP3C,QAAS,OACTqyC,UAAAA,EACAoC,eAAgBnC,EACX7vC,GAAkB6vC,EAAiB7vC,QACpCjmB,GAENk4D,MAAO,CACLlnC,IAAI/K,GAGEA,EAAM+K,IAAM,GACP,GAID/K,EAAM+K,KAAOwb,EAAS,IAAOA,EAEvC2rB,UAAW,CACTxB,MAAM,MAELc,GAELW,KAAM,CAGJC,IAAKrC,GAAqBC,EAAoB,EAAI,EAClDqC,OAAQ5C,GAAWM,GAAqBC,EAAoB,EAAI,EAChEsC,KAAM7C,EAAU,EAAIO,EAAoB,GAAK,EAC7CuC,MAAO9C,EAAU,EAAI,GAEvBwB,MAAO,CACLuB,SAAU,CACR9B,MAAM,GAER+B,SAAU,CACR/B,MAAM,EACNgC,gBAAgB,GAElBb,UAAW,CACTnB,MAAM,GAERiC,YAAa,CACX75D,KAAM,OACNsB,MAAO,CACLs2D,MAAM,GAERkC,UAAW,CACTpsB,MAAO,KAIblvC,QAAS,CACPu7D,WAAW,IAIf,OACE,QAAC,IAAD,CAAUlD,OAAQS,EAAa7pB,OAAQA,KAAYwrB,KAAkB7B,IArKhEV,EAAAA,YAAAA,eAyKT,W,qVCpOA,MAAMsD,EAA+B,IAK/B,IALgC,eACpCC,EADoC,aAEpCC,EAFoC,gBAGpCC,EAAkB,EAHkB,SAIpCpiD,GACI,EACJ,MAAOqiD,EAAaC,IAAgB9gB,EAAAA,EAAAA,WAAS,GACvC+gB,EAAuB,IAAMD,GAAcD,GAE3CpvC,EAAQirC,EAAAA,SAAAA,QAAiBl+C,GAG/B,KAFoBiT,EAAM3hB,OAAS8wD,GAGjC,OAAO,QAAC,EAAA1/C,SAAD,UAAW1C,IAGpB,MAAMwiD,EAAeH,EAAcpvC,EAAM3M,MAAM,EAAG87C,GAAmBnvC,EAC/DwvC,EAAsBxvC,EAAM3hB,OAASkxD,EAAalxD,OAElDoxD,EACHD,EAAsB,IAAMN,GACJ,IAAxBM,IAA8BP,EAEjC,OACE,QAAC,EAAAx/C,SAAD,WACG8/C,EAEAE,IACC,QAAC,KAAD,CAAQlwC,SAAS,OAAOvS,QAASsiD,EAAjC,SACGF,GACG35C,EAAAA,EAAAA,IAAG,sBAAuB,uBAAwB+5C,IAClDr7D,EAAAA,EAAAA,GAAE,cAITq7D,EAAsB,IACrBN,MAAAA,OADD,EACCA,EAAe,CAACQ,SAAUJ,EAAsBE,oBAAAA,KACzB,IAAxBA,IAA6BP,MAAAA,OAA7B,EAA6BA,EAAiB,CAACU,WAAYL,SArC5DN,EAAAA,YAAAA,cA0CN,W,quBCnCA,SAASY,EAAT,GAAwE,IAAhD,OAAC/nC,EAAD,oBAASgoC,KAAwB7jD,GAAe,EACtE,MAAM,UAACsU,EAAD,gBAAYwvC,IAAmBC,EAAAA,EAAAA,KAC/Br1D,GAAeoa,EAAAA,EAAAA,MACf,MAAC1N,EAAD,IAAQgmB,EAAR,OAAapM,EAAb,IAAqBisC,GAAO3sC,EAAUS,SAkD5C,OACE,QAAC,IAAD,CACErmB,aAAcA,EACd0M,MAAOA,EACPgmB,IAAKA,EACL4iC,SAAUhvC,EACVisC,IAAKA,EACLpyC,SAvDkBo1C,IACpB,MAAM,SAACD,KAAaE,GAAeD,EAC7BE,EAAgB,CACpBnvC,OAAQgvC,KACLE,IAGLE,EAAAA,EAAAA,IAAeD,EAAetoC,EAAQ,CAACwoC,MAAM,EAAMC,YAAaT,KAiD9DU,qBA9CyB,IAA6B,IACpDj6D,GADwB,cAACwqC,EAAD,OAAgBD,GAAY,EAExD,GAAIz5B,GAASgmB,EAAK,CAChB,MAAMojC,GAAqB1D,EAAAA,EAAAA,IAAiB1lD,EAAO,WAAY,CAAC4lD,OAAO,IACjEyD,GAAmB3D,EAAAA,EAAAA,IAAiB1/B,EAAK,WAAY,CAAC4/B,OAAO,IAK7D0D,EAFJF,IAAuBG,EAAAA,IACvBF,IAAqBG,EAAAA,GACU,eAAiB,QAKlDt6D,EAAS,IAHWw2D,EAAAA,EAAAA,IAAiB1lD,EAAOspD,EAAQ,CAAC1D,OAAO,UAC1CF,EAAAA,EAAAA,IAAiB1/B,EAAKsjC,EAAQ,CAAC1D,OAAO,WAIxD12D,EAAQ0qB,MAAAA,OAAH,EAAGA,EAAQ6vC,cAGlB,OACE,QAAC,IAAD,CACEC,UAAQ,EACRC,kBAAkB,EAClBlwB,OAAQA,EACRmwB,YAAalB,EAAgB/4D,IAAI,YACjC,eAAa,oCACT+pC,IANN,UAQE,QAACmwB,EAAD,YACE,QAAC,IAAD,CAAwB7yD,OAAO,WAA/B,UACE,QAAC,KAAD,OAEF,QAAC8yD,EAAD,UAAiB56D,UAerB66D,SAAO,EACPL,UAAQ,KACJ9kD,IAhED4jD,EAAAA,YAAAA,iBAqET,MAAMsB,GAAiB,OAAO,MAAP,sBAAH,sFAKH/4D,EAAAA,EAAAA,GAAM,GALH,qBASd84D,GAAgB,OAAO,MAAP,sBAAH,4EAOnB,GAAe/zB,EAAAA,EAAAA,YAAW0yB,I,ooBCxE1B,MAAMllD,UAGIc,EAAAA,UAeR/H,YAAYuI,EAAcolD,GACxBna,MAAMjrC,EAAOolD,IAD6B,wBAqBhC5jD,IAEV,GADAA,EAAEwE,kBACGrO,KAAKqI,MAAMmgB,SACd,MAAM,IAAI12B,MAAM,+BAElBkO,KAAKqI,MAAMmgB,SAASxoB,KAAKoI,MAAMzX,KAAMqP,KAAK+Q,gBAAiB/Q,KAAK0tD,mBA1BtB,+BA6BzB/8D,IACjBqP,KAAKwN,SAAS,CACZpF,MAAOnB,EAAAA,EAAAA,MACP0mD,OAAQ,GACRx6D,YAAa,IAAI6M,KAAKoI,MAAMzX,QAAUA,GAAQ,MAEhDqP,KAAKqI,MAAM0I,iBAAmB/Q,KAAKqI,MAAM0I,gBAAgBpgB,OAnCf,6BAsC5BmM,IACdkD,KAAKwN,SAAS,CACZpF,MAAOnB,EAAAA,EAAAA,MACP0mD,OAAQ7wD,EAAMxD,eAGZ0G,KAAKqI,MAAMulD,cACb5tD,KAAKwN,SAAS,CACZra,YAAa,KAIjB6M,KAAKqI,MAAMqlD,eAAiB1tD,KAAKqI,MAAMqlD,cAAc5wD,OAlDX,6BAqD5B,CAACrN,EAAc8oB,KAC7BvY,KAAKwN,UAASpF,IAAS,CACrBzX,KAAM,IACDyX,EAAMzX,KACT,CAAClB,GAAO8oB,UAvDZvY,KAAKoI,MAAQ,CACXzX,KAAM,IAAIqP,KAAKqI,MAAMlV,aACrBw6D,OAAQ,GACRx6D,YAAa,IAAI6M,KAAKqI,MAAMlV,aAC5BiV,MAAOnB,EAAAA,EAAAA,OAIX4mD,aACE,MAAM,KAACl9D,EAAD,OAAOg9D,GAAU3tD,KAAKoI,MAC5B,MAAO,CACL0lD,KAAM,CACJn9D,KAAAA,EACAg9D,OAAAA,EACAI,cAAe/tD,KAAK+tD,gBA8C1BlnD,SAAS,QACP,MAAMmnD,EAAWhuD,KAAKoI,MAAMA,QAAUnB,EAAAA,EAAAA,QAChC,YAAC9T,EAAD,KAAcxC,GAAQqP,KAAKoI,OAC3B,aAAClN,EAAD,WAAe+yD,EAAf,eAA2BC,GAAkBluD,KAAKqI,MAClD8lD,GAAaD,GACf3wD,OAAOmK,KAAK/W,GAAM+J,SAAWwY,GAAAA,CAAQviB,EAAMwC,GAEzCi7D,EAAUpuD,KAAKoI,MAAMA,QAAUnB,EAAAA,EAAAA,MAC/BonD,EAAiBruD,KAAKoI,MAAMulD,QAAU3tD,KAAKoI,MAAMulD,OAAOW,iBAE9D,OACE,QAAC,aAAD,CAAsB/1C,MAAOvY,KAAK6tD,aAAlC,UACE,QAACU,EAAD,CAAY/lC,SAAUxoB,KAAKwoB,SAAU5X,UAAW5Q,KAAKqI,MAAMuI,UAA3D,UACGw9C,IAAYH,IACX,eAAKr9C,UAAU,gCAAf,SACGy9C,GACC,0BACE,uBACG79D,EAAAA,EAAAA,GACC,kFAGJ,uBACG69D,EAAeh3D,KAAI,CAACwS,EAAGsoB,KACtB,uBAAatoB,GAAJsoB,UAKfj3B,IAIL8E,KAAKqI,MAAMe,UACZ,eAAKwH,UAAW5Q,KAAKqI,MAAMmmD,YAAa1jD,MAAO,CAACo7B,UAAW,IAA3D,WACE,QAAC,KAAD,CACEtqB,SAAS,UACT7D,SAAUi2C,GAAYhuD,KAAKqI,MAAMomD,iBAAmBN,EACpD98D,KAAK,SACL,uBAAY2O,KAAKqI,MAAMqmD,mBAAvB,SAAsCl+D,EAAAA,EAAAA,GAAE,UAJ1C,SAMGwP,KAAKqI,MAAMqmD,cAEb1uD,KAAKqI,MAAMsmD,WACV,QAAC,KAAD,CACEt9D,KAAK,SACL0mB,SAAUi2C,EACV3kD,QAASrJ,KAAKqI,MAAMsmD,SACpB7jD,MAAO,CAAC8jD,WAAY,GACpB,uBAAY5uD,KAAKqI,MAAMwmD,mBAAvB,SAAsCr+D,EAAAA,EAAAA,GAAE,UAL1C,SAOGwP,KAAKqI,MAAMwmD,cAGf7uD,KAAKqI,MAAMymD,qBAtIlB/nD,EAAAA,YAAAA,Q,OAAAA,EAAAA,eAIkB,CACpB8nD,aAAar+D,EAAAA,EAAAA,GAAE,UACfk+D,aAAal+D,EAAAA,EAAAA,GAAE,gBACfi+D,gBAAgB,EAChBD,YAAa,2BACb59C,UAAW,eACXs9C,gBAAgB,EAChBD,YAAY,EACZL,cAAc,EACd1yD,cAAc1K,EAAAA,EAAAA,GACZ,oFAkIC,MAAM+9D,GAAa,OAAO,OAAP,sBAAH,IAEvB,K,2FCxKA,MAEA,GAFoBQ,E,oCAAAA,eAA+B,K,mmBCiBpC,MAAMC,UAGXC,EAAAA,cAORnvD,YAAYuI,EAAcolD,GACxBna,MAAMjrC,EAAOolD,IAD0B,wBAwD7B5jD,IACV,MAAM0O,EAAQ1O,EAAEuC,OAAOmM,MACvBvY,KAAKkvD,SAAS32C,OA1DyB,wBA6D7BA,IACV,MAAMu1C,GAAQ9tD,KAAKytD,SAAW,IAAIK,KAClC9tD,KAAKwN,SACH,CACE+K,MAAAA,IAEF,KAAM,QACJ,MAAM42C,EAAanvD,KAAKovD,YAAYpvD,KAAKoI,MAAMmQ,OAC/C,aAAAvY,KAAKqI,OAAM2Q,gBAAX,gBAAsBm2C,GACtBrB,MAAAA,GAAAA,EAAMC,cAAc/tD,KAAKqI,MAAM5Y,KAAM0/D,SApEzCnvD,KAAKoI,MAAQ,CACXtL,MAAO,KACPyb,MAAOvY,KAAK7L,SAASkU,EAAOolD,IAIhC36C,qBAEAiU,iCAAiCC,EAAkBqoC,GACjD,MAAMC,EAAWtvD,KAAKuvD,SAASvoC,EAAWqoC,GAI1C,GAHIC,IAAatvD,KAAKoI,MAAMtL,OAC1BkD,KAAKwN,SAAS,CAAC1Q,MAAOwyD,IAEpBtvD,KAAKqI,MAAMkQ,QAAUyO,EAAUzO,QAAS6K,EAAAA,EAAAA,IAAQisC,EAAYvB,MAAO,CACrE,MAAM/5D,EAAWiM,KAAK7L,SAAS6yB,EAAWqoC,GACtCt7D,IAAaiM,KAAKoI,MAAMmQ,OAC1BvY,KAAKkvD,SAASn7D,IAKpB0Z,wBAIAtZ,SAASkU,EAAcolD,GACrB,MAAMK,GAAQL,GAAWztD,KAAKytD,SAAW,IAAIK,KAE7C,OADAzlD,EAAQA,GAASrI,KAAKqI,OAClB+a,EAAAA,EAAAA,IAAQ/a,EAAMkQ,OACTlQ,EAAMkQ,MAEXu1C,GAAQA,EAAKn9D,KAAKwrB,eAAe9T,EAAM5Y,OAClC2zB,EAAAA,EAAAA,IAAQ0qC,EAAKn9D,KAAK0X,EAAM5Y,OAASq+D,EAAKn9D,KAAK0X,EAAM5Y,MAAQ,IAE3D2zB,EAAAA,EAAAA,IAAQ/a,EAAMq6C,cAAgBr6C,EAAMq6C,aAAe,GAG5D6M,SAASlnD,EAAcolD,GACrB,MAAMK,GAAQL,GAAWztD,KAAKytD,SAAW,IAAIK,KAE7C,OADAzlD,EAAQA,GAASrI,KAAKqI,OAClB+a,EAAAA,EAAAA,IAAQ/a,EAAMvL,OACTuL,EAAMvL,MAEPgxD,GAAQA,EAAKH,OAAOtlD,EAAM5Y,OAAU,KAG9C+/D,QACE,MAAQ,MAAKxvD,KAAKqI,MAAM5Y,OAG1B2/D,YAAY72C,GACV,OAAOA,EAsBTk3C,WACE,MAAM,IAAI39D,MAAM,iCAGlB49D,eACE,MAAM,IAAI59D,MAAM,iCAGlB69D,qBACE,MAAM,UAAC/+C,EAAD,SAAY+vC,GAAY3gD,KAAKqI,OAC7B,MAACvL,GAASkD,KAAKoI,MACrB,OAAO43C,GAAAA,CAAWpvC,EAAW5Q,KAAK0vD,eAAgB,CAChD,cAAe5yD,EACf6jD,SAAAA,IAIJiP,uBACE,MAAM,SAAC73C,EAAD,eAAW83C,GAAkB7vD,KAAKqI,MACxC,OAAK0P,GAGA83C,GAGE,QAAC,IAAD,CAAiBz+C,MAAOy+C,EAAgB9pC,SAAS,MAAMrd,KAAK,OAL1D,KAQX7B,SACE,MAAM,MAAClU,EAAD,iBAAQm9D,EAAR,KAA0BjP,EAA1B,MAAgC/1C,GAAS9K,KAAKqI,OAC9C,MAACvL,GAASkD,KAAKoI,MACf62B,EAAKj/B,KAAK2vD,qBACVI,EAAyBjzD,IAAUgzD,EAEzC,OACE,eAAKhlD,MAAOA,EAAO8F,UAAWquB,EAA9B,UACE,eAAKruB,UAAU,WAAf,UACGje,IACC,iBAAOq9D,QAAShwD,KAAKwvD,QAAS5+C,UAAU,gBAAxC,SACGje,IAGJqN,KAAKyvD,WACLzvD,KAAK4vD,wBACLxsC,EAAAA,EAAAA,IAAQy9B,KAAS,aAAGjwC,UAAU,aAAb,SAA2BiwC,IAC5CkP,IAA0B,QAACE,EAAD,UAAenzD,UAlI/BkyD,EAAAA,YAAAA,a,OAAAA,EAAAA,eAIiB,CAClCc,kBAAkB,EAClB/3C,UAAU,EACV4oC,UAAU,K,OAPOqO,EAAAA,cAmCEkB,EAAAA,GAsGvB,MAAMD,GAAe,OAAO,IAAP,sBAAH,cACH1nD,GAAKA,EAAEzY,MAAMiZ,gBADV,WAEPR,GAAKA,EAAEzY,MAAM6pC,QAFN,M,siBCzJH,MAAMw2B,UAAgBppD,EAAAA,EAAY,qDACzC,IAAI9X,EAAAA,KADqC,wBAoCnC4a,IAGV,GAFAA,EAAEwE,iBAEErO,KAAKoI,MAAMA,QAAUnB,EAAAA,EAAAA,OACvB,OAQF,MAAMtW,EAAOqP,KAAKqI,MAAM+nD,aAAepwD,KAAKqwD,iBAAmBrwD,KAAKoI,MAAMzX,KAE1EqP,KAAKqI,MAAMmgB,UAAYxoB,KAAKqI,MAAMmgB,SAAS73B,GAC3CqP,KAAKwN,SACH,CACEpF,MAAOnB,EAAAA,EAAAA,SAET,MACE/U,EAAAA,EAAAA,IAAkB8N,KAAKqI,MAAMioD,sBAC7BtwD,KAAKhR,IAAI4N,QAAQoD,KAAKqI,MAAMkoD,YAAa,CACvClhE,OAAQ2Q,KAAKqI,MAAMmoD,UACnB7/D,KAAAA,EACAkM,QAAS/E,KACP5G,EAAAA,EAAAA,MACA8O,KAAK+Q,gBAAgBjZ,IAEvBgF,MAAOA,KACLxN,EAAAA,EAAAA,IAAgB0Q,KAAKqI,MAAMooD,oBAC3BzwD,KAAK0tD,cAAc5wD,YAxD7B2Q,uBACEzN,KAAKhR,IAAI6O,QAGXwyD,iBAUE,MAAM1/D,EAAO,IAAIqP,KAAKoI,MAAMzX,MAS5B,OARA22D,EAAAA,SAAAA,QAAiBtnD,KAAKqI,MAAMe,UAAWm+C,IAAe,MAC/CyH,EAAAA,EAAAA,cAAwBzH,EAAMl2D,OAG/Bk2D,EAAMz9C,KAAN,UAAay9C,EAAMl/C,aAAnB,OAAa,EAAa0P,iBACrBpnB,EAAK42D,EAAMz9C,QAGfnZ,I,OAjCUw/D,EAAAA,eAGG,IACjBppD,EAAAA,EAAAA,aACHqpD,cAAc,EACdK,oBAAoBjgE,EAAAA,EAAAA,GAAE,2CACtB8/D,sBAAsB9/D,EAAAA,EAAAA,GAAE,qB,mPClBb,MAAMkgE,UAAqBC,EAAAA,EAAyB,2DAMrD9mD,IACV,MAAM0O,EAAQ1O,EAAEuC,OAAOyT,QACvB7f,KAAKkvD,SAAS32C,MAPhB62C,YAAYwB,GAEV,QADctd,MAAM8b,YAAYwB,GASlCnB,WACE,OACE,iBACErgE,GAAI4Q,KAAKwvD,QACTn+D,KAAM2O,KAAK6wD,UACXhxC,QAAS7f,KAAKoI,MAAMmQ,MACpBS,SAAUhZ,KAAKgZ,SAASiY,KAAKjxB,MAC7B+X,SAAU/X,KAAKqI,MAAM0P,WAK3BlR,SACE,MAAM,MAAC/J,GAASkD,KAAKoI,MACrB,IAAIwI,EAAY5Q,KAAK0vD,eAIrB,OAHI5yD,IACF8T,GAAa,eAGb,eAAKA,UAAWA,EAAhB,UACE,eAAKA,UAAU,WAAf,WACE,iBAAOA,UAAU,gBAAjB,UACG5Q,KAAKyvD,WACLzvD,KAAKqI,MAAM1V,MACXqN,KAAKqI,MAAM0P,UAAY/X,KAAKqI,MAAMwnD,iBACjC,QAAC,IAAD,CAASz+C,MAAOpR,KAAKqI,MAAMwnD,eAA3B,UACE,QAAC,KAAD,CAAcnnD,KAAK,aAIxB0a,EAAAA,EAAAA,IAAQpjB,KAAKqI,MAAMw4C,QAAS,aAAGjwC,UAAU,aAAb,SAA2B5Q,KAAKqI,MAAMw4C,OAClE/jD,IAAS,aAAG8T,UAAU,QAAb,SAAsB9T,SAMxC4yD,eACE,MAAO,yBAGTmB,UACE,MAAO,YArDUH,EAAAA,YAAAA,eCTN,MAAMI,UAAmBH,EAAAA,EACtCE,UACE,MAAO,SCGI,MAAME,UAAoBJ,EAAAA,EACvCvB,YAAY72C,GACV,MAAMy4C,EAAW7jC,SAAS5U,EAAO,IAKjC,OAFwB+V,MAAM0iC,GAMvB,GAHEA,EAMXH,UACE,MAAO,SAGTI,gBACE,MAAO,CACLtgC,IAAK3wB,KAAKqI,MAAMsoB,UAAOr+B,EACvBgxB,IAAKtjB,KAAKqI,MAAMib,UAAOhxB,I,2KCzB7B,MAAM4+D,UAAyBC,EAAAA,EAAY,4DAM7BxgE,IACV,MAAM,KAAClB,GAAQuQ,KAAKqI,MACdnO,EAAUvJ,GAAQA,EAAKlB,GAE7B,OAAQyK,GAAWA,EAAQ7C,KAAI,QAAC,GAACjI,EAAD,KAAK8V,GAAN,QAAiB,CAACqT,MAAOnpB,EAAIuD,MAAOuS,OAAY,OAVxC,uBAa/BxU,IAAK,CAEX0gE,mBAAoB1gE,EAAO2gE,mBAAoBrxD,KAAKqI,MAAM5Y,SAE9DggE,WAGE,OACE,QAAC,IAAD,CACErgE,GAAI4Q,KAAKwvD,QACTlL,UAAWtkD,KAAKskD,UAChBE,QAASxkD,KAAKwkD,WACVxkD,KAAKqI,MACTkQ,MAAOvY,KAAKoI,MAAMmQ,MAClBS,SAAUhZ,KAAKgZ,a,OA3BjBk4C,EAAAA,eACkB,IACjBC,EAAAA,EAAAA,aACHhqC,YAAa,wCA8BjB,U,yLCtBe,MAAMmqC,UAA6BH,EAAAA,EAGhDrxD,YAAYuI,EAAOolD,GACjBna,MAAMjrC,EAAOolD,IADa,8BAO1BztD,KAAKnQ,QAAUmQ,KAAKuxD,WAAWlpD,GAGjC0e,iCAAiCC,EAAWqoC,GAC1C,MAAMC,EAAWtvD,KAAKuvD,SAASvoC,EAAWqoC,GAI1C,GAHIC,IAAatvD,KAAKoI,MAAMtL,OAC1BkD,KAAKwN,SAAS,CAAC1Q,MAAOwyD,IAEpBtvD,KAAKqI,MAAMkQ,QAAUyO,EAAUzO,QAAS6K,EAAAA,EAAAA,IAAQisC,EAAYvB,MAAO,CACrE,MAAM/5D,EAAWiM,KAAK7L,SAAS6yB,EAAWqoC,GAKpCmC,EAAexxD,KAAKovD,YAAYpvD,KAAKoI,MAAMmQ,OAQ/CxkB,IAAay9D,KACXz9D,KAAey9D,GACjBz9D,IAAaiM,KAAKoI,MAAMmQ,OAExBvY,KAAKkvD,SAASn7D,IAKpBw9D,WAAWlpD,GACT,OAAOopD,EAAAA,EAAAA,GAA0BppD,EAAMqpD,UAAYrpD,EAAMxY,QAG3D4/D,WACE,MAAM,YAACtoC,EAAD,SAAcpP,EAAd,UAAwBmP,EAAxB,KAAmCz3B,GAAQuQ,KAAKqI,MAEtD,OACE,QAACspD,EAAD,CACEC,WAAS,EACTxiE,GAAI4Q,KAAKwvD,QACT3/D,QAASmQ,KAAKnQ,QACds3B,YAAaA,EACbpP,SAAUA,EACVQ,MAAOvY,KAAKoI,MAAMmQ,MAClBS,SAAUhZ,KAAKgZ,SACfkO,UAAWA,EACX2qC,SAAU7xD,KAAK8xD,aACfriE,KAAMA,KAOd,MAAMkiE,GAAsB,OAAOI,EAAAA,EAAP,sBACxBxD,EAAAA,EADqB,6EC1EV,MAAMyD,UAAsBrB,EAAAA,EACzClB,WACE,OACE,oBACErgE,GAAI4Q,KAAKwvD,QACT5+C,UAAU,eACV2H,MAAOvY,KAAKoI,MAAMmQ,MAClBR,SAAU/X,KAAKqI,MAAM0P,SACrB4oC,SAAU3gD,KAAKqI,MAAMs4C,SACrBx5B,YAAannB,KAAKqI,MAAM8e,YACxBnO,SAAUhZ,KAAKgZ,SAASiY,KAAKjxB,S,0DC4CrC,MAiEA,EAjEqB,IAMR,IANS,OACpBgO,EADoB,SAEpBikD,EAAW,GAFS,WAGpBC,EAAa,GAHO,UAIpBC,EAJoB,SAKpBn5C,GACW,EACX,MAAM2nC,IAAWv9B,EAAAA,EAAAA,IAAQpV,EAAO2yC,WAAY3yC,EAAO2yC,SAC7CyR,EAAa,IACdpkD,EACHuK,MAAO05C,EAASjkD,EAAOve,MACvBupB,SAAAA,EACArmB,MAAOqb,EAAOrb,OAASguD,EAAW,IAAM,IACxCx5B,YAAanZ,EAAOmZ,YACpBw5B,SAAAA,EACAlxD,KAAMue,EAAOve,KACbqN,OAAQo1D,GAAc,IAAIlkD,EAAOve,MACjCizD,aAAc10C,EAAO/Y,QACrB8iB,SAAU/J,EAAOqkD,SACjBvoD,IAAKkE,EAAOve,KACZ0iE,UAAAA,EACAtR,MACEz9B,EAAAA,EAAAA,IAAQpV,EAAO6yC,OAAyB,KAAhB7yC,EAAO6yC,MAC7B,gBAAM9T,wBAAyB,CAACC,OAAQh/B,EAAO6yC,QAC7C,MAGR,OAAQ7yC,EAAO3c,MACb,IAAK,SACH,OAAO,QAAC,IAAD,IAAmB+gE,IAC5B,IAAK,OACH,OAAO,QAAC1B,EAAD,IAAkB0B,IAC3B,IAAK,QACH,OAAO,QAACtB,EAAD,IAAgBsB,IACzB,IAAK,SACL,IAAK,OACL,IAAK,MACH,OAAIA,EAAWV,SACN,QAACJ,EAAD,IAA0Bc,KAE5B,QAAC,IAAD,IAAeA,IACxB,IAAK,SACH,OAAO,QAACrB,EAAD,IAAiBqB,IAC1B,IAAK,WACH,OAAO,QAACJ,EAAD,IAAmBI,IAC5B,IAAK,SACL,IAAK,SAIH,MAAOzR,SAAU5oD,KAAMu6D,GAAeF,EACtC,GAAIpkD,EAAOukD,iBAAkB,CAE3B,MAAMC,EAAmB,IACpBxkD,KACAskD,GAEL,OAAO,QAAC,EAAD,IAAsBE,IAE/B,OAAO,QAAC,IAAD,IAAiBF,IAC1B,QACE,OAAO,O,wDCtGE,MAAMG,UAA8BzD,EAAAA,EAAwB,2DAC9D,CAACnlD,EAAwC6oD,KAClD,MAAMn6C,EAAQm6C,EACd,IAAIC,EAAY3yD,KAAKoI,MAAM5K,OAIvBm1D,EAFA9oD,EAAEuC,OAAOyT,QACP8yC,EACU,IAAIA,EAAWp6C,GAEf,CAACA,GAGHo6C,EAAUl4D,QAAOsvB,GAAKA,IAAMxR,IAE1CvY,KAAK4yD,UAAUD,MAGjBC,UAAUp1D,GACR,MAAMswD,GAAQ9tD,KAAKytD,SAAW,IAAIK,KAClC9tD,KAAKwN,SACH,CACEhQ,OAAAA,IAEF,KACE,MAAM2xD,EAAanvD,KAAKovD,YAAYpvD,KAAKoI,MAAM5K,QAC/CwC,KAAKqI,MAAM2Q,UAAYhZ,KAAKqI,MAAM2Q,SAASm2C,GAC3CrB,GAAQA,EAAKC,cAAc/tD,KAAKqI,MAAM5Y,KAAM0/D,MAKlDtoD,SACE,MAAM,SACJ85C,EADI,UAEJ/vC,EAFI,SAGJmH,EAHI,eAIJ83C,EAJI,MAKJl9D,EALI,KAMJkuD,EANI,QAOJ6Q,EAPI,iBAQJmB,EARI,MASJ/nD,GACE9K,KAAKqI,OACH,MAACvL,GAASkD,KAAKoI,MACf62B,EAAK+gB,GAAAA,CAAWpvC,EAAW,gBAAiB,CAChD,YAAa9T,IAITg2D,EAAU9S,GAAAA,CAAW,CACzBW,SAAAA,IAEIoS,EAA2Bh7C,GAAY83C,EAE7C,OACE,eAAK/kD,MAAOA,EAAO8F,UAAWquB,EAA9B,WACE,eAAKruB,UAAWkiD,EAAhB,UACE,eAAKliD,UAAU,WAAf,WACE,iBACEA,UAAU,gBACV9F,MAAO,CACLi8B,QAAS,QACTjtB,aAAe+4C,OAAwBvgE,EAAL,GAClC0gE,aAAeH,OAAyCvgE,EAAtB,qBALtC,UAQGK,EACAogE,IACC,QAAC,IAAD,CAAS3hD,MAAOy+C,EAAhB,UACE,gBAAMj/C,UAAU,qBAAhB,UACE,QAAC,KAAD,CAAclI,KAAK,cAK1Bm4C,IAAQ,aAAGjwC,UAAU,aAAb,SAA2BiwC,IACnC/jD,IAAS,aAAG8T,UAAU,QAAb,SAAsB9T,UAIpC,eAAK8T,UAAU,eAAf,SACG8gD,EAAQr6D,KAAI,QAAEkhB,EAAO06C,GAAT,SACX,iBAAOriD,UAAU,WAAjB,WACE,iBACEvf,KAAK,WACLknB,MAAOA,EACPS,SAAUnP,GAAK7J,KAAKgZ,SAASnP,EAAG0O,GAChCR,SAAUA,EACV8H,SACEuD,EAAAA,EAAAA,IAAQpjB,KAAKoI,MAAM5K,UAAiD,IAAtCwC,KAAKoI,MAAM5K,OAAO4F,QAAQmV,KAG3D06C,IAV8B16C,YAlFxBk6C,EAAAA,YAAAA,wB,wWCLrB,MAAM9B,UAGI3B,EAAAA,EACRS,WACE,OACE,iBACErgE,GAAI4Q,KAAKwvD,QACTn+D,KAAM2O,KAAK6wD,UACXjgD,UAAU,eACVsiD,aAAclzD,KAAKqI,MAAM6qD,aACzB/rC,YAAannB,KAAKqI,MAAM8e,YACxBnO,SAAUhZ,KAAKgZ,SACfjB,SAAU/X,KAAKqI,MAAM0P,SACrBtoB,KAAMuQ,KAAKqI,MAAM5Y,KACjBkxD,SAAU3gD,KAAKqI,MAAMs4C,SACrBpoC,MAAOvY,KAAKoI,MAAMmQ,MAClBzN,MAAO9K,KAAKqI,MAAM8qD,WAClBC,OAAQpzD,KAAKqI,MAAM+qD,OACnB5rC,QAASxnB,KAAKqI,MAAMmf,QACpB6rC,WAAYrzD,KAAKqI,MAAMgrD,WACvBC,UAAWtzD,KAAKqI,MAAMirD,UACtB3iC,IAAK3wB,KAAKqI,MAAMsoB,IAChB4iC,KAAMvzD,KAAKqI,MAAMkrD,OAKvB7D,eACE,MAAO,gBAGTmB,UACE,MAAM,IAAI/+D,MAAM,kCAIpB,W,oWCnCe,MAAM0hE,UAAsB7C,EAAAA,EAOzC7wD,YAAYuI,EAAcolD,GACxBna,MAAMjrC,EAAOolD,IAD6B,0BAwB9B5jD,IACZA,EAAEwE,iBACFrO,KAAKwN,SACH,CACEimD,SAAS,IAEX,KACEzzD,KAAKkvD,SAAS,WA/BwB,yBAoC/BrlD,IACXA,EAAEwE,iBACFrO,KAAKwN,SAAS,CACZimD,SAAS,OApCXzzD,KAAKoI,MAAQ,IAAIpI,KAAKoI,MAAOqrD,SAAS,GAGxC1sC,iCAAiCC,GAI7BhnB,KAAKqI,MAAM8pD,WACXnyD,KAAKqI,MAAM8pD,YAAclrD,EAAAA,EAAAA,QACzB+f,EAAUmrC,YAAclrD,EAAAA,EAAAA,OAExBjH,KAAKwN,SAAS,CACZimD,SAAS,IAKf5C,UACE,MAAO,WAsBTpB,WACE,OAAKzvD,KAAKqI,MAAMqrD,cAIZ1zD,KAAKoI,MAAMqrD,SAEX,eAAK7iD,UAAU,wBAAf,WACE,wBAAM0iC,MAAMmc,cACZ,yBACE,aAAGpmD,QAASrJ,KAAK2zD,WAAjB,0BAMN,eAAK/iD,UAAU,sBAAf,WACE,yBACG5Q,KAAKqI,MAAMurD,OAAS,IAAIn2D,MAAM,GAAKuC,KAAKqI,MAAMurD,OAAOl5D,QAAQyD,KAAK,QAEnE6B,KAAKqI,MAAM0P,WAAY,aAAG1O,QAASrJ,KAAK6zD,UAAjB,qBAlBpBvgB,MAAMmc,a,OApDE+D,EAAAA,eACG,IACjB7C,EAAAA,EAAAA,aACH+C,eAAe,EACfE,OAAQ,M,ocCTG,MAAME,UAA0BnD,EAAAA,EAAkB,2DAapD9mD,IACT,MAAM0O,EAA2B,SAAnB1O,EAAEuC,OAAOmM,MACvBvY,KAAKkvD,SAAS32C,MAPhB62C,YAAY/mD,GAEV,QADcirC,MAAM8b,YAAY/mD,GASlCwoD,UACE,MAAO,QAGTpB,WACE,MAAMsE,GACJ,eAAKnjD,UAAU,QAAf,UACE,iBAAO9F,MAAO,CAACkpD,WAAY,UAA3B,WACE,iBACE3iE,KAAK,QACLknB,MAAM,OACN9oB,KAAMuQ,KAAKqI,MAAM5Y,KACjBowB,SAA8B,IAArB7f,KAAKoI,MAAMmQ,MACpBS,SAAUhZ,KAAKgZ,SAASiY,KAAKjxB,MAC7B+X,SAAU/X,KAAKqI,MAAM0P,WACpB,IACF/X,KAAKqI,MAAM4rD,aAVW,OAcvBC,GACJ,eAAKtjD,UAAU,QAAf,UACE,iBAAO9F,MAAO,CAACkpD,WAAY,UAA3B,WACE,iBACE3iE,KAAK,QACL5B,KAAMuQ,KAAKqI,MAAM5Y,KACjB8oB,MAAM,QACNsH,SAA8B,IAArB7f,KAAKoI,MAAMmQ,MACpBS,SAAUhZ,KAAKgZ,SAASiY,KAAKjxB,MAC7B+X,SAAU/X,KAAKqI,MAAM0P,WACpB,IACF/X,KAAKqI,MAAM8rD,YAVW,MAc7B,OACE,eAAKvjD,UAAU,8BAAf,SACG5Q,KAAKqI,MAAM+rD,UACV,QAAC,EAAAtoD,SAAD,WACGioD,EACAG,MAGH,QAAC,EAAApoD,SAAD,WACGooD,EACAH,OAOXltD,SACE,MAAM,MAAClU,EAAD,iBAAQm9D,EAAR,KAA0BjP,EAA1B,MAAgC/1C,GAAS9K,KAAKqI,OAC9C,MAACvL,GAASkD,KAAKoI,MACf62B,EAAKj/B,KAAK2vD,qBACVI,EAAyBjzD,IAAUgzD,EAEzC,OACE,eAAKhlD,MAAOA,EAAO8F,UAAWquB,EAA9B,UACE,eAAKruB,UAAU,WAAf,UACGje,IACC,iBAAOq9D,QAAShwD,KAAKwvD,QAAS5+C,UAAU,gBAAxC,SACGje,KAGJywB,EAAAA,EAAAA,IAAQy9B,KAAS,aAAGjwC,UAAU,aAAb,SAA2BiwC,IAC5C7gD,KAAKyvD,WACLzvD,KAAK4vD,uBACLG,IAA0B,aAAGn/C,UAAU,QAAb,SAAsB9T,UAvFtCg3D,EAAAA,YAAAA,qB,OAAAA,EAAAA,eACG,IACjBnD,EAAAA,EAAAA,aACHsD,SAAU,MACVE,QAAS,KACTC,UAAU,K,4kBCHC,MAAMjD,UAAoBnC,EAAAA,EAAiB,2DA+E7C/1C,IAGTjZ,KAAKkvD,SAASj2C,MA3EhB8N,iCAAiCC,EAAWqoC,GAC1C,MAAMC,EAAWtvD,KAAKuvD,SAASvoC,EAAWqoC,GAI1C,GAHIC,IAAatvD,KAAKoI,MAAMtL,OAC1BkD,KAAKwN,SAAS,CAAC1Q,MAAOwyD,IAEpBtvD,KAAKqI,MAAMkQ,QAAUyO,EAAUzO,QAAS6K,EAAAA,EAAAA,IAAQisC,EAAYvB,MAAO,CACrE,MAAM/5D,EAAWiM,KAAK7L,SAAS6yB,EAAWqoC,GAKpCmC,EAAexxD,KAAKovD,YAAYpvD,KAAKoI,MAAMmQ,OAO7CxkB,IAAay9D,KAAkBz9D,KAAey9D,GAChDxxD,KAAKkvD,SAASn7D,IAMpBI,SAASkU,EAAOolD,GACd,MAAMK,GAAQL,GAAWztD,KAAKytD,SAAW,IAAIK,KAC7CzlD,EAAQA,GAASrI,KAAKqI,MAGtB,MAAMq6C,EAAe1iD,KAAK8xD,WAAWzpD,GAAS,GAAK,GAEnD,OAAI+a,EAAAA,EAAAA,IAAQ/a,EAAMkQ,OACTlQ,EAAMkQ,MAEXu1C,GAAQA,EAAKn9D,KAAKwrB,eAAe9T,EAAM5Y,OAClC2zB,EAAAA,EAAAA,IAAQ0qC,EAAKn9D,KAAK0X,EAAM5Y,OAASq+D,EAAKn9D,KAAK0X,EAAM5Y,MAAQizD,GAE3Dt/B,EAAAA,EAAAA,IAAQ/a,EAAMq6C,cAAgBr6C,EAAMq6C,aAAeA,EAS5D0M,YAAY72C,GACV,OAAKA,EAIDvY,KAAK8xD,aACAv5C,EAAMlhB,KAAI0yB,GAAKA,EAAExR,QAEtBA,EAAM4D,eAAe,SAChB5D,EAAMA,MAGRA,EAVE,GAaXu5C,WAAWzpD,GAGT,OAFAA,EAAQA,GAASrI,KAAKqI,OAETgsD,OAAShsD,EAAMwpD,SAG9BnC,eACE,MAAO,GASTD,WACE,MAAM,QACJ5/D,EADI,UAEJq3B,EAFI,UAGJ0qC,EAHI,QAIJF,EAJI,YAKJvqC,EALI,SAMJpP,EANI,KAOJtoB,EAPI,UAQJkkB,GACE3T,KAAKqI,MAET,OACE,QAACspD,EAAD,CACEC,UAAWA,EACXxiE,GAAI4Q,KAAKwvD,QACTkC,QAASA,EACT7hE,QAASA,EACTs3B,YAAaA,EACbpP,SAAUA,EACVQ,MAAOvY,KAAKoI,MAAMmQ,MAClBS,SAAUhZ,KAAKgZ,SACfkO,UAAWA,EACX2qC,SAAU7xD,KAAK8xD,aACfriE,KAAMA,EACNkkB,UAAWA,M,OA9GEw9C,EAAAA,eACG,IACjBnC,EAAAA,EAAAA,aACH9nC,WAAW,EACX2qC,UAAU,IAiHd,MAAMF,GAAsB,OAAOI,EAAAA,EAAP,sBACxBxD,EAAAA,EADqB,8E,oJC5HV,MAAM+F,UAAkB3D,EAAAA,EACrCM,gBACE,MAAO,CACLsD,WAAYv0D,KAAKqI,MAAMksD,YAI3B1D,UACE,MAAO,U,mtBCkLX,SAAS2D,EAAT,GAuCU,IAvCI,UACZC,EAAY,IADA,aAEZC,GAAelkE,EAAAA,EAAAA,GAAE,YAFL,kBAGZmkE,GAAoBnkE,EAAAA,EAAAA,GAAE,iBAHV,YAIZokE,GAAc,EAJF,SAKZzH,GAAW,EALC,UAMZ0H,EAAY,OANA,SAOZC,EAAW,IAPC,UAQZC,GAAY,EARA,oBASZC,GAAsB,EATV,KAUZC,GAAO,EAVK,sBAWZC,GAAwB,EAXZ,SAYZn9C,GAAW,EAZC,SAaZo9C,EAAW,KAbC,SAcZC,EAdY,kBAeZC,EAfY,uBAgBZC,EAhBY,UAiBZC,EAjBY,iBAkBZC,EAlBY,WAmBZC,EAnBY,SAoBZrsD,EApBY,cAqBZssD,EArBY,UAsBZ9kD,EAtBY,gBAuBZ+kD,EAvBY,WAwBZC,EAxBY,YAyBZC,EAzBY,MA0BZx5C,EA1BY,WA2BZy5C,EA3BY,MA4BZhrD,EA5BY,SA6BZirD,EA7BY,aA8BZC,EA9BY,SA+BZh9C,EA/BY,SAgCZL,EAhCY,OAiCZs9C,EAjCY,QAkCZnhE,EAlCY,IAmCZyX,EAnCY,cAoCZ2pD,GACA,eAAgBC,MACb9tD,IACK,EAER,MAAM+tD,KAAa/5C,MAAAA,IAAAA,EAAO3hB,QAGpB27D,GAAyB,OAAVh6C,EAIfi6C,IAAavB,IAAcqB,KAAaT,GAIxCY,IAAmB7sD,EAAAA,EAAAA,cACtB8sD,IAA+BC,EAAAA,EAAAA,GAAmBp6C,EAAOm6C,IAC1D,CAACn6C,IAKGq6C,GAAmBxe,GAAAA,CAAQqe,IAEjC,OACE,QAAC,IAAD,CACE59C,SAAUA,EACVg+C,cAAc,EACdV,OAAQA,EACRnhE,QAASA,EACTijB,SAAUA,EACVm+C,cAAeA,GACfU,mBAAiB,KACbvuD,GARN,SAUG,IAaK,IAbJ,cACA80B,EADA,aAEA8R,EAFA,cAGA4nB,EAHA,aAIAz5B,EAJA,aAKA05B,EALA,kBAMAC,EANA,oBAOAC,EAPA,WAQAC,EARA,aASAC,EATA,iBAUAC,EAVA,OAWAj6B,GAXA,QAYAk6B,IACI,EAEJ,MAAMZ,GAAqBX,MAAAA,EAAAA,EAAeoB,EAIpCI,GACJn6B,IAAUk5B,GAAWM,GAAiBF,IAAsB,GAGxDc,KAAeD,GAAoB38D,OAGnC68D,IAAetC,IAASuB,KAAuBJ,GAG/CoB,IACHvC,IAASC,GAAyBsB,KAAuBc,GAItDG,GAAYpC,EACdgC,GAAoB58D,QAAO03B,IAAMA,EAAEulC,aAAYh9D,YAC/CpI,EAEEqlE,GACkB,mBAAf7B,EAA4BA,EAAW,CAACsB,QAAAA,KAAYtB,EAM7D,OAFAiB,EAAkBU,KAGhB,QAACG,EAAD,IACM3oB,IACJr+B,UAAW8kD,EACX39C,SAAUA,EACV,eAAcmlB,GACd,eAAci5B,GALhB,UAOG/sD,EAAS,CACRytD,cAAAA,EACA15B,cAAAA,EACAi6B,QAAAA,GACAl6B,OAAAA,GACAg6B,aAAAA,IAEDh6B,KACC,QAAC26B,EAAD,CACEjnD,UAAWA,KACPwsB,EAAam4B,GACZzqD,MAAAA,EAAOyB,IAAAA,EAAKqoD,YAAAA,EAAazH,SAAAA,EAAU0H,UAAAA,EAAWC,SAAAA,EAHrD,WAKE,QAACgD,EAAD,CAAqBhD,SAAUA,EAA/B,UACGuB,KAAgB,QAAC,IAAD,CAAkB0B,MAAI,IACtCzB,KACC,QAAC0B,EAAD,YACE,QAACC,EAAD,CACEC,WAAS,EACT/wC,YAAawtC,KACTkC,EAAc,IAAIpB,EAAYz8C,SAAAA,OAEpC,QAACm/C,EAAD,WACIlD,GAAQC,KACR,QAAC,IAAD,CAAkBxsD,KAAM,GAAIqvD,MAAI,MAGnC/B,MAGL,yBACGJ,IACC,QAACwC,EAAD,CAAkBpD,oBAAqBA,EAAvC,SACGY,KAGL,QAACyC,EAAD,CAAU,eAAa,oBAAoB5D,UAAWA,EAAtD,UACG8C,KAAe,QAACe,EAAD,UAAe5D,IAC9B8C,KACC,QAACc,EAAD,UACG9C,MAAAA,EAAAA,EAAqB,GAAEd,MAAgBlkE,EAAAA,EAAAA,GAAE,aAG7CykE,IACC,QAACsD,EAAD,WACE,QAACD,EAAD,WAAe9nE,EAAAA,EAAAA,GAAE,mBAGnBykE,IACA,QAAC,IAAD,CACE54C,MAAOg7C,GAEL5C,UAAAA,EACA0C,iBAAAA,EACAF,WAAAA,EACAlB,SAAAA,EACAe,aAAAA,EACAE,oBAAAA,EACA1B,uBAAAA,EACAD,kBAAAA,EACAD,SAAAA,OAKPuC,KACC,QAACS,EAAD,CAAkBpD,oBAAqBA,EAAvC,SACG2C,WAKRxC,WArMRX,EAAAA,YAAAA,OA+MT,UAEMyD,GAAc,OAAOO,EAAAA,EAAP,qBAAH,mHAUFhkE,EAAAA,EAAAA,GAAM,GAVJ,8BAYJ+T,GAAKA,EAAEzY,MAAMk5B,SAZT,MAgBXmvC,GAAsB,OAAO,MAAP,qBAAH,4BAET5vD,GAAKA,EAAEzY,MAAM+Y,YAFJ,qFAYnByvD,GAAe,OAAO,MAAP,qBAAH,UACP/vD,GAAKA,EAAEzY,MAAMi5B,SADN,aAELv0B,EAAAA,EAAAA,GAAM,GAFD,2CAOLojE,GAAmB,OAAO,MAAP,qBAAH,2CAGzBrvD,GAAKA,EAAEwP,UAAY,yBAHM,KAMvB8/C,GAAuB,OAAOY,EAAAA,EAAP,qBAAH,2BAEXlwD,GAAKA,EAAEusD,UAFI,OAItBvsD,GAAKA,EAAE4kD,UAA4B,SAAhB5kD,EAAEssD,WAAwB,gBAJvB,KAKtBtsD,GAAKA,EAAE4kD,UAA4B,UAAhB5kD,EAAEssD,WAAyB,eALxB,KAQpBiD,GAAsB,OAAO,MAAP,qBAAH,yBAEVvvD,GAAKA,EAAEusD,UAFG,OAKnBkD,GAAe,OAAO,MAAP,qBAAH,yCAEWzvD,GAAKA,EAAEzY,MAAMm5B,aAFxB,mBAGC1gB,GAAM,GAAEA,EAAEzY,MAAM2wB,gBAAgBlY,EAAEzY,MAAM2wB,oBAHzC,wBAOZ23C,GAAmB,OAAO,MAAP,qBAAH,qBACA7vD,GAAKA,EAAEzY,MAAM0wB,qBADb,6BAEOjY,GAAKA,EAAEzY,MAAMm5B,aAFpB,8BAIX1gB,GAAKA,EAAEzY,MAAM6zB,SAJF,eAKPpb,GAAKA,EAAEzY,MAAMiZ,gBALN,6EAYTR,IAAMA,EAAEysD,qBAAwB,IAAExgE,EAAAA,EAAAA,GAAM,SAASA,EAAAA,EAAAA,GAAM,MAZ9C,KAehB6jE,GAAW,OAAO,MAAP,qBAAH,eACE9vD,GAAM,GAAEA,EAAEksD,eADZ,qBAKR8D,GAAc,OAAO,MAAP,qBAAH,gDAGJ/jE,EAAAA,EAAAA,GAAM,GAHF,M,w0BClcjB,SAASkkE,EAAT,GAKU,IALqB,OAC7Bx0C,EAD6B,oBAE7BgoC,EAAsB,GAFO,cAG7B7qC,EAH6B,eAI7Bs3C,EAAiB,IACT,EACR,MAAM,SAACl/D,EAAUuiB,gBAAiB48C,IAAkBv0C,EAAAA,EAAAA,KAC9CttB,GAAeoa,EAAAA,EAAAA,MACf,UAACwL,EAAD,QAAYk8C,EAAZ,gBAAqB1M,IAAmBC,EAAAA,EAAAA,KA4CxC0M,GACJ,QAAC,IAAD,CACEx8C,aAAa,EACbvE,UAAQ,EACR,eAAa,mCAHf,UAKE,QAACu1C,EAAD,YACE,QAAC,KAAD,KACA,QAACC,EAAD,WAAiB/8D,EAAAA,EAAAA,GAAE,mBAKzB,OACE,QAAC,IAAD,CACEuG,aAAcA,EACd0C,SAAUA,EACV6d,iBAAkBshD,IAAmBC,EACrC7zC,iBAAkBrI,EAAUljB,SAC5B8e,MAAOoE,EAAU+B,aACjBxH,SA9D8BwH,KAChCq6C,EAAAA,EAAAA,GAAmBr6C,EAAcwF,EAAQ,CACvCwoC,MAAM,EACNC,YAAaT,KA4DbU,qBAxD2E,IAGzE,YAH0E,OAC9E1vB,EAD8E,MAE9E3kB,GACI,EACJ,MAAMygD,GACJ,UAAAzgD,EAAM,UAAN,eAAU7d,SAAV,UAAmB6d,EAAM,UAAzB,aAAmB,EAAU7d,SAAUi+D,EAAiB,EACpDpgD,EAAM7I,MAAM,EAAG,GACf6I,EAAM7I,MAAM,EAAG,GACfupD,EAAU1gD,EAAM7d,OAClBs+D,EAAmB3hE,KAAI6hE,IAAOC,EAAAA,EAAAA,GAASD,EAAKP,KAAiBx6D,KAAK,OAClE3N,EAAAA,EAAAA,GAAE,WAEN,OACE,QAAC,IAAD,CACE28D,UAAQ,EACRC,kBAAkB,EAClBlwB,OAAQA,EACRmwB,YAAalB,EAAgB/4D,IAAI,gBACjC,eAAa,mCALf,UAOE,QAACk6D,EAAD,YACE,QAAC,IAAD,CAAwB7yD,OAAO,eAA/B,UACE,QAAC,KAAD,OAEF,QAAC8yD,EAAD,WACG0L,IACE1gD,EAAM7d,QAAU6d,EAAM7d,OAASs+D,EAAmBt+D,SACnD,QAAC,IAAD,CAAOwK,KAAO,KAAGqT,EAAM7d,OAASs+D,EAAmBt+D,mBA8B3Do+D,uBAAwBA,EACxBz3C,cAAeA,EACf8rC,UAAQ,EACRK,SAAO,IA7EJkL,EAAAA,YAAAA,wBAkFT,MAAMnL,GAAiB,OAAO,MAAP,sBAAH,uFAKH/4D,EAAAA,EAAAA,GAAM,GALH,+DAWd84D,GAAgB,OAAO,MAAP,sBAAH,iEAMnB,GAAe/zB,EAAAA,EAAAA,YAAkBm/B,I,qbC3HjC,MAAMU,EAAW,KACf,QAACC,EAAD,CAAehoE,KAAK,QAAQghB,UAAQ,EAApC,WACE,QAACy1B,EAAD,WAAUt3C,EAAAA,EAAAA,GAAE,qBACZ,uBAAIA,EAAAA,EAAAA,GAAE,kDACN,uBAAIA,EAAAA,EAAAA,GAAE,yCACN,yBACE,wBACGA,EAAAA,EAAAA,GACE,+GAIL,wBACGA,EAAAA,EAAAA,GACE,iJAIL,wBACGgD,EAAAA,EAAAA,IAAI,yDAA0D,CAC7Die,MACE,QAAC,IAAD,CAAchC,KAAK,kEAK3B,uBACGjc,EAAAA,EAAAA,IAAI,sDAAuD,CAC1Die,MAAM,QAAC,IAAD,CAAMe,GAAG,aA5BjB4mD,EAAAA,YAAAA,WAkCN,MAAMC,GAAgB,OAAO5mD,EAAAA,EAAP,qBAAH,WACPje,EAAAA,EAAAA,GAAM,GADC,OAIbszC,GAAU,OAAO,KAAP,qBAAH,cACEv/B,GAAKA,EAAEzY,MAAM2lC,eADf,mCAGMjhC,EAAAA,EAAAA,GAAM,GAHZ,KAMb,K,6dCxCA,MAAM8kE,EAAU,QAAC,QAACxpC,EAAD,OAAUgf,GAAX,SACd,QAAChzB,EAAD,YACE,QAACy9C,EAAD,UAAgBzqB,KAChB,QAAC0qB,EAAD,UAAY1pC,QAHVwpC,EAAAA,YAAAA,UAON,UAEMx9C,GAAU,OAAO,MAAP,qBAAH,wFAKEvT,GAAKA,EAAEzY,MAAM+zB,oBALf,KAOP01C,GAAgB,OAAO,MAAP,qBAAH,yDAKbC,GAAY,OAAO,MAAP,qBAAH,mG,mKCdf,MAAMC,EAAW,IAAkC,IAAjC,SAACxnD,EAAD,UAAWynD,GAAsB,EACjD,OACE,QAAC,EAAD,YACE,QAACC,EAAD,CAAiBjxD,KAAK,KAAKi0B,MAAM,YAChC1qB,IACC2nD,EAAAA,EAAAA,GAAe,CACbrhD,OACE,QAAC,IAAD,CACEiN,cAAch1B,EAAAA,EAAAA,GAAE,aAChBwhB,KAAMC,EACN4nD,QAAQrpE,EAAAA,EAAAA,GAAE,OACVspE,SAAO,IAGXC,MAAO,YAEVL,GAAaznD,IACZ,QAAC+nD,EAAD,CAAWppD,UAAU,sBAArB,iBAED8oD,IACCE,EAAAA,EAAAA,GAAe,CACbrhD,OACE,QAAC,IAAD,CACEiN,cAAch1B,EAAAA,EAAAA,GAAE,cAChBwhB,KAAM0nD,EACNG,QAAQrpE,EAAAA,EAAAA,GAAE,OACVogB,UAAU,sBACVkpD,SAAO,IAGXC,MAAO,gBA9BXN,EAAAA,YAAAA,WAoCN,MAAM39C,GAAU,OAAO,MAAP,sBAAH,8CAGEvT,GAAKA,EAAEzY,MAAMqzC,eAHf,KAMP62B,GAAY,OAAO,OAAP,sBAAH,UACJzxD,GAAKA,EAAEzY,MAAM6zB,SADT,KAITg2C,GAAkB,OAAOM,EAAAA,GAAP,sBAAH,iBACHzlE,EAAAA,EAAAA,GAAM,IADH,KAIrB,I,+LC7CA,SAAS0lE,EAAT,GAAsF,IAApD,KAACvpE,EAAD,aAAOwpE,EAAP,OAAqBn/D,EAArB,cAA6Bq0B,GAAuB,EACpF,MAAM,GACJjgC,EADI,SAEJ6iB,EAFI,UAGJynD,EAHI,oBAIJU,EAJI,YAKJC,EALI,OAMJC,EANI,WAOJC,EAPI,YAQJC,EARI,QASJ1qC,EATI,QAUJnyB,EAVI,SAWJ88D,EAXI,YAYJC,EAZI,MAaJngD,GACE5pB,EAEEgqE,EAAc,kBAAiB3/D,EAAO5K,gBAE5C,OACE,QAACwqE,EAAD,WACGrgD,IAAS,QAAC,IAAD,CAAaA,MAAOA,EAAOsgD,cAAexrC,IACnDS,IACC,QAAC,EAAD,CACEA,QAASA,EACTgf,OACEnxC,IACE,QAACm9D,EAAD,CAAwBn9D,QAASA,EAASgyC,WAAY,GAAIorB,UAAQ,MAKzEL,IAAe,QAAC,IAAD,IACdD,GAAaf,GAAcznD,GAG3B,QAAC,EAAD,CACEA,UAAUwoD,MAAAA,OAAA,EAAAA,EAAUxoD,WAAYA,EAChCynD,WAAWe,MAAAA,OAAA,EAAAA,EAAUf,YAAaA,KAJpC,QAAC,IAAD,CAAa56B,OAAO,OAAOC,MAAM,UAQlCs7B,EAAc,IACb,QAACW,EAAD,CAAcxoD,GAAK,GAAEmoD,IAAavrE,cAAgBwhB,UAAU,WAA5D,WACE,QAAC,KAAD,CACElI,KAAK,KACLi0B,MAAuC,eAAhCy9B,MAAAA,OAAA,EAAAA,EAAqBa,QAAyB,gBAAa3oE,KAEpE,yBAAO+nE,OAGVC,IACC,QAACY,EAAD,WACE,QAAC,IAAD,CACE1oD,GAAI,CACF3R,SAAU85D,EACVjqE,MAAO,CACLA,MAAQ,UAAS4pE,MAJvB,SAQGA,MAINE,MAAAA,OA7CH,EA6CGA,EAAanjE,KAAI,CAAC8jE,EAAYrxD,KAC7B,QAACsxD,EAAD,CACEruB,wBAAyB,CACvBC,OAAQmuB,IAELrxD,KAIRqwD,GAAgBI,IACf,yBAAM/mE,EAAAA,EAAAA,IAAI,qBAAsB,CAAC/D,KAAM8qE,EAAW9qE,YA3EjDyqE,EAAAA,YAAAA,2BAiFT,MAAMU,GAAa,OAAO,MAAP,sBAAH,wDAGPpmE,EAAAA,EAAAA,GAAM,KAHC,oDAML+T,GAAKA,EAAEzY,MAAM6tB,WANR,eAODpV,GAAKA,EAAEzY,MAAMqzC,eAPZ,8GAiBO56B,GAAKA,EAAEzY,MAAMirB,YAAYC,QAjBhC,qBAsBV8/C,GAAyB,OAAOrjC,EAAAA,EAAP,sBAAH,mDAMtBujC,GAAe,OAAOvhC,EAAAA,EAAP,sBAAH,4BAETjlC,EAAAA,EAAAA,GAAM,IAFG,oDAKP+T,GAAKA,EAAEzY,MAAM6tB,WALN,KAQZy9C,GAAqB,OAAOC,EAAAA,EAAP,sBAAH,4DAKX9yD,GAAKA,EAAEzY,MAAM6tB,WALF,MASlBu9C,GAAmB,OAAOE,EAAP,sBAAH,UACX7yD,GAAKA,EAAEzY,MAAM6tB,WADF,KAItB,GAAe4b,EAAAA,EAAAA,YAAW2gC,I,4MCtJ1B,MAeA,GAfwB,OAAO,OAAP,sBAAH,cACN3xD,GAAKA,EAAEzY,MAAMqzC,eADP,2BAEM56B,GAAKA,EAAEzY,MAAMm5B,aAFnB,kBAGHz0B,EAAAA,EAAAA,GAAM,GAHH,WAIV+T,GAAKA,EAAEzY,MAAMk5B,SAJH,aAORzgB,GAAKA,EAAEzY,MAAMk5B,SAPL,mBAUNzgB,GAAKA,EAAEzY,MAAM6zB,SAVP,Q,ihBCWrB,SAAS23C,EAAT,GAAwC,IAApB,UAAC1qD,GAAmB,EACtC,MAAM5C,EAASpe,EAAAA,EAAAA,YACf,OACE,kBAAQghB,UAAWA,EAAnB,WACE,QAAC2qD,EAAD,WACGvtD,EAAOwtD,eACN,QAAC,EAAA1vD,SAAD,WACG,WACA8tD,EAAAA,EAAAA,GAAe,CACdG,MAAO,kBACPxhD,MAAOvK,EAAO+oB,QAAQ3sB,WAExB,QAACqxD,EAAD,WACG7B,EAAAA,EAAAA,GAAe,CACdG,MAAO,OACPxhD,MAAOvK,EAAO+oB,QAAQ2kC,MAAMC,UAAU,EAAG,UAKhD3tD,EAAO4tD,aACN,QAACC,EAAD,CAAYpsD,KAAMzB,EAAO4tD,WAAzB,UAAsCprE,EAAAA,EAAAA,GAAE,oBAEzCwd,EAAO8tD,WACN,QAACD,EAAD,CAAYpsD,KAAMzB,EAAO8tD,SAAzB,UAAoCtrE,EAAAA,EAAAA,GAAE,sBAG1C,QAACurE,EAAD,KACA,QAACC,EAAD,YACIhuD,EAAOwtD,eACP,QAACK,EAAD,CAAYpsD,KAAK,4BAAjB,UAA8Cjf,EAAAA,EAAAA,GAAE,qBAElD,QAACqrE,EAAD,CAAYpsD,KAAK,QAAjB,UAA0Bjf,EAAAA,EAAAA,GAAE,UAC5B,QAACqrE,EAAD,CAAYpsD,KAAK,SAAjB,UAA2Bjf,EAAAA,EAAAA,GAAE,WAC7B,QAACqrE,EAAD,CAAYpsD,KAAK,sCAAjB,UACGjf,EAAAA,EAAAA,GAAE,gBAEJwd,EAAOwtD,eAAiBxtD,EAAOiuD,WAC9B,QAACJ,EAAD,CAAYpsD,KAAK,QAAjB,UAA0Bjf,EAAAA,EAAAA,GAAE,yBAGhC,QAAC,IAAD,CAAMf,KAAK,cAzCR6rE,EAAAA,YAAAA,aA8CT,MAAMC,GAAY,OAAO,MAAP,qBAAH,oHAMN/mE,EAAAA,EAAAA,GAAM,GANA,KASTwnE,GAAa,OAAO,MAAP,qBAAH,kHAMPxnE,EAAAA,EAAAA,GAAM,GANC,KASVqnE,GAAa,OAAOtf,EAAAA,EAAP,qBAAH,UACLh0C,GAAKA,EAAEzY,MAAM6zB,SADR,6CAIEpb,GAAKA,EAAEzY,MAAMosE,SAJf,cAQVH,GAAW,QAAO1zD,IACtB,QAAC,IAAD,CAAcoH,KAAK,6BAA6BkB,UAAW,KAAOtI,EAAlE,UACE,QAAC,KAAD,CAAYK,KAAK,UAFJ,qBAAH,wDAQHH,GAAKA,EAAEzY,MAAM6zB,SARV,KAWR83C,GAAQ,OAAO,OAAP,qBAAH,cACIlzD,GAAKA,EAAEzY,MAAMw9C,uBADjB,WAEA/kC,GAAKA,EAAEzY,MAAM6zB,SAFb,kCAIMnvB,EAAAA,EAAAA,GAAM,GAJZ,KA0BX,GAnBe,OAAO8mE,EAAP,qBAAH,yDAGD/yD,GAAKA,EAAEzY,MAAM6zB,SAHZ,eAIGpb,GAAKA,EAAEzY,MAAMiZ,gBAJhB,0BAKcR,GAAKA,EAAEzY,MAAM0Y,QAL3B,kCAOChU,EAAAA,EAAAA,GAAM,GAPP,KAOaA,EAAAA,EAAAA,GAAM,GAPnB,wCAUW+T,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAVpC,cAWG5xB,EAAAA,EAAAA,GAAM,GAXT,yBAcW+T,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAdpC,qB,geC5FG,MAAM0zC,UAAgBtoD,EAAAA,UAAiB,qDAKtC,IAAI5Y,EAAAA,KALkC,wBAOzC,CACT0B,EACA5B,EACAotE,KAEAn8D,KAAKqI,MAAMmgB,UAAYxoB,KAAKqI,MAAMmgB,SAAS73B,IAC3CuB,EAAAA,EAAAA,KAAkB1B,EAAAA,EAAAA,GAAE,oBACpBwP,KAAKhR,IAAI4N,QAAQoD,KAAKqI,MAAMkoD,YAAa,CACvClhE,OAAQ2Q,KAAKqI,MAAMmoD,UACnB7/D,KAAAA,EACAkM,QAASsE,KACPjQ,EAAAA,EAAAA,MACAnC,EAAUoS,IAEZrE,MAAOA,KACL5L,EAAAA,EAAAA,MACAirE,EAAQr/D,SAtBd2Q,uBACEzN,KAAKhR,IAAI6O,QA0BXgJ,SACE,MACE2hB,SAAU4zC,EACV5L,UAAW6L,EACX9L,YAAa+L,KACVC,GACDv8D,KAAKqI,MAET,OAAO,QAAC,IAAD,CAAMmgB,SAAUxoB,KAAKwoB,YAAc+zC,KApCzBpM,EAAAA,YAAAA,W,ylBC6BrB,SAASqM,EAAcn0D,GACrB,MAAM,KAAC5Y,EAAD,SAAOsoB,EAAP,QAAiB2oC,EAAjB,GAA0BtxD,EAA1B,SAA8BuxD,EAA9B,MAAwChuD,EAAxC,KAA+CkuD,GAAQx4C,EAEvDo0D,EAA8B,mBAAT5b,EAAsBA,EAAKx4C,GAASw4C,EAE/D,OACE,QAAC,IAAD,CAAWpxD,KAAMA,EAAM+wD,QAAQ,EAAOE,QAASA,EAA/C,SACG,IAAuB,IAAtB,SAAC1nC,EAAD,MAAWT,GAAW,EAMtB,OACE,QAACmkD,EAAD,YACE,QAACC,EAAD,WACE,QAAC,IAAD,CACEvtE,GAAIA,EACJK,KAAMA,EACNsoB,SAAUA,EACV8H,SAAmB,IAAVtH,EACTS,SAbR,SAAsBnP,GACpB,MAAM9V,EAAW8V,EAAEuC,OAAOyT,QAC1B7G,MAAAA,GAAAA,EAAWjlB,EAAU8V,SAcnB,QAAC,IAAD,CAAkBmmD,QAAS5gE,EAA3B,UACGuD,IACC,QAAC,IAAD,CAAYolB,SAAUA,EAAtB,UACE,0BACGplB,EACAguD,IAAY,QAAC,IAAD,SAIlB8b,IACC,QAAC,IAAD,CAAW/b,QAASA,EAASF,QAAM,EAAnC,SACGic,aAnCVD,EAAAA,YAAAA,gBA8CT,MAAMG,GAAiB,OAAO,OAAP,qBAAH,oDAGFnoE,EAAAA,EAAAA,GAAM,GAHJ,uBAUdkoE,GAAc,OAAO,MAAP,qBAAH,0DAKjB,K,4oBC1FA,MAAMxwD,GAAY,OAAO,MAAP,qBAAH,qBAEN3D,IAAK/T,EAAAA,EAAAA,GAAM+T,EAAEq0D,aAAe,EAAI,IAF1B,oBAGKr0D,GAAMA,EAAEq0D,aAAe,SAAW,OAHvC,8DA+BTC,EAAa,QAAmB,MACpCtkD,EACAR,SAAU+kD,EAF0B,gBAGpCC,EAAkB,GAHkB,QAIpCrL,EAAU,GAJ0B,MAKpC/+D,EALoC,SAMpCqmB,EANoC,aAOpC4jD,KACGv0D,GARc,SAUjB,QAAC6D,EAAD,CACE0wD,aAAcA,KACVv0D,EACJiE,KAAK,aACL,kBAAiB3Z,EAJnB,SAMG++D,EAAQr6D,KAAI,CAAC,EAAyBoe,KAAU,IAAlCrmB,EAAIK,EAAMszC,GAAwB,EAC/C,MAAMi6B,EAAiBD,EAAgB5lE,MAAK,QAAE8lE,GAAF,SAAgBA,IAAa7tE,KACnE8tE,EAAuBF,MAAAA,OAAH,EAAGA,EAAiB,GACxCjlD,IAAailD,GAAkBF,EAC/BK,GACJ,QAAC,EAAArxD,SAAD,WACE,QAACsxD,EAAD,CACE9wD,KAAK,QACLmJ,MAAOA,EACP,eAAc8C,IAAUnpB,EACxB2oB,SAAUA,EAJZ,WAME,QAAC,IAAD,CACE,cAAYvnB,EAAAA,EAAAA,GAAE,YAAaf,GAC3BsoB,SAAUA,EACV8H,QAAStH,IAAUnpB,EACnB4pB,SAAWnP,IACRkO,GAAYiB,EAAS5pB,EAAIya,MAG9B,QAACwzD,EAAD,CAAetlD,SAAUA,EAAzB,SAAoCtoB,IACnCszC,IACC,QAAC,EAAAj3B,SAAD,YAEE,mBACA,QAAC8zB,EAAD,UAAcmD,YAOxB,OAAMm6B,GAEF,QAAC,IAAD,CAAqB9rD,MAAO8rD,EAA5B,SACGC,GADW1nD,IAMX,QAAC,EAAA3J,SAAD,UAAuBqxD,GAAR1nD,SAxDtBonD,EAAAA,YAAAA,aA6DN,MAAMr/B,EAAqBj1B,GACZ,iBAANA,IAAmB,CAAC,WAAY,WAAW3K,SAAS2K,KAAM+0D,EAAAA,EAAAA,GAAY/0D,GAElE60D,GAAgB,OAAO,QAAP,CAAiB5/B,kBAAAA,EAAjB,oBAAH,mGAQdj1B,GAAMA,EAAEwP,SAAW,UAAY,WARjB,8CAcpBslD,GAAgB,OAAO,MAAP,CAAe7/B,kBAAAA,EAAf,oBAAH,YACNj1B,GAAMA,EAAEwP,SAAW,GAAM,MADnB,KAIb6nB,GAAc,OAAO,MAAP,qBAAH,UACNr3B,GAAKA,EAAEzY,MAAMk5B,SADP,eAEFzgB,GAAKA,EAAEzY,MAAMw9C,uBAFX,uBAMjB,K,2pBC5Ce,MAAMvmC,UAAac,EAAAA,UAChC/H,YAAYuI,EAAcolD,GACxBna,MAAMjrC,EAAOolD,IADqC,oBA+BjCztD,KAAKqI,MAAM5V,OAAS,IAAI8qE,EAAAA,IA/BS,wBAwCzC1zD,IAAK,SACb7J,KAAKqI,MAAMm1D,oBAAsB3zD,EAAEwE,iBAChCrO,KAAKvN,MAAMu7D,WAIf,aAAAhuD,KAAKqI,OAAMo1D,mBAAX,iBAEIz9D,KAAKqI,MAAMmgB,SACbxoB,KAAKqI,MAAMmgB,SACTxoB,KAAKvN,MAAMirE,UACX19D,KAAK+Q,gBACL/Q,KAAK0tD,cACL7jD,EACA7J,KAAKvN,OAGPuN,KAAKvN,MAAMkrE,gBAzDqC,+BA6DlChtE,IAChB,MAAM,gBAACogB,GAAmB/Q,KAAKqI,MAC/BrI,KAAKvN,MAAMmrE,cAAcjtE,GAErBogB,GACFA,EAAgBpgB,EAAMqP,KAAKvN,WAlEqB,6BAsEpCqK,IACd,MAAM,cAAC4wD,GAAiB1tD,KAAKqI,MAC7BrI,KAAKvN,MAAMorE,YAAY/gE,GAEnB4wD,GACFA,EAAc5wD,EAAOkD,KAAKvN,UAzE5B,MAAM,WACJqrE,EADI,YAEJvN,EAFI,UAGJC,EAHI,aAIJ5C,EACA78C,gBAAAA,EACA28C,cAAAA,EANI,cAOJK,EAPI,YAQJ56D,EARI,UASJ4qE,GACE11D,EAEJrI,KAAKvN,MAAMurE,eAAe7qE,GAC1B6M,KAAKvN,MAAMwrE,eAAe,CACxBrQ,aAAAA,EACAmQ,UAAAA,EACAhQ,cAAAA,EACAh9C,gBAAAA,EACA28C,cAAAA,EACAoQ,WAAAA,EACAvN,YAAAA,EACAC,UAAAA,IAIJ/iD,wBACGzN,KAAKqI,MAAM61D,2BAA6Bl+D,KAAKvN,MAAMoY,QAKtDszD,cACE,MAAO,CACLL,WAAY99D,KAAKqI,MAAMy1D,WACvBhQ,KAAM9tD,KAAKvN,OA2CfoU,SACE,MAAM,UACJ+J,EADI,SAEJxH,EAFI,YAGJolD,EAHI,YAIJ4P,EAJI,eAKJ3P,EALI,YAMJC,EANI,eAOJ2P,EAPI,YAQJxP,EARI,SASJF,EATI,YAUJG,EAVI,eAWJZ,EAXI,WAYJ4P,EAZI,WAaJQ,GACEt+D,KAAKqI,MACHk2D,OACkB,IAAfD,GAA8BA,GAAcR,EAErD,OACE,QAAC,aAAD,CAAsBvlD,MAAOvY,KAAKm+D,cAAlC,UACE,gBACE31C,SAAUxoB,KAAKwoB,SACf5X,UAAWA,MAAAA,EAAAA,EAAa,eACxB,eAAc5Q,KAAKqI,MAAM,gBAH3B,WAKE,yBACGm2D,EAAAA,EAAAA,GAAyBp1D,GACtBA,EAAS,CAAC3W,MAAOuN,KAAKvN,QACtB2W,IAGLm1D,IACC,QAACE,EAAD,CACE7tD,UAAW49C,EACX1jD,MAAOszD,EACPN,WAAYA,EAHd,UAKGhP,GACD,QAAC4P,EAAD,WACG/P,IACC,QAAC,KAAD,UACG,KACC,QAAC,KAAD,CACEt9D,KAAK,SACL0mB,SAAU/X,KAAKvN,MAAMu7D,SACrB3kD,QAASslD,EACT7jD,MAAO,CAAC8jD,WAAY,GAJtB,SAMGC,MAAAA,EAAAA,GAAer+D,EAAAA,EAAAA,GAAE,eAM1B,QAAC,KAAD,UACG,KACC,QAAC,KAAD,CACE,eAAa,cACborB,SAAUyiD,MAAAA,EAAAA,EAAkB,UAC5BtmD,SACE/X,KAAKvN,MAAM27D,SACXpuD,KAAKvN,MAAMu7D,UACXS,KACCP,IAAkBluD,KAAKvN,MAAMksE,YAEhCttE,KAAK,SATP,SAWGq9D,MAAAA,EAAAA,GAAel+D,EAAAA,EAAAA,GAAE,gCApJnBuW,EAAAA,YAAAA,OAiKrB,MAAM03D,GAAe,OAAO,MAAP,qBAAH,+EAIQl2D,GAAKA,EAAEzY,MAAMm5B,aAJrB,yDASd1gB,IACCA,EAAEu1D,YACF,OACDc,EAAAA,8SAZc,KA6BZF,GAAiB,OAAO,MAAP,qBAAH,qBAEXlqE,EAAAA,EAAAA,GAAM,GAFK,4D,uRC5PpB,SAASqqE,EAAT,GASG,IATmB,SACpB7lD,EADoB,OAEpBo6C,EAFoB,UAGpBE,KACG7hE,GAKF,EACD,OACE,QAAC,IAAD,CACE2hE,OAAQvpD,GAAKupD,EAAOvpD,EAAEuC,OAAOmM,MAAO1O,GACpCypD,UAAWzpD,GAAKypD,EAAWzpD,EAAEuC,OAAemM,MAAO1O,GACnDmP,SAAUnP,GAAKmP,EAASnP,EAAEuC,OAAOmM,MAAO1O,MACpCpY,IAKV,SAASk/D,EAAWtoD,GAClB,OACE,QAAC,IAAD,CAAWuI,UAAWvI,EAAMuI,aAAevI,EAA3C,SACGy2D,IACC,MAAO11D,SAAU21D,KAAcC,GAAmBF,EAClD,OAAOz2D,EAAM42D,MAAQ52D,EAAM42D,MAAMD,GAAmBH,EAAaG,MAzBhEH,EAAAA,YAAAA,eAoBAlO,EAAAA,YAAAA,aAWT,W,27BCtBA,MAAMuO,EACJ72D,IAEA,QAAC,mBAAD,IAAqCA,EAArC,UACE,QAAC,KAAD,CAAWK,KAAK,WAJdw2D,EAAAA,YAAAA,iBAQN,MAAMC,EACJ92D,IAEA,QAAC,sBAAD,IAAwCA,EAAxC,UACE,QAAC,KAAD,CAAay8B,UAAU,OAAOp8B,KAAK,WAJjCy2D,EAAAA,YAAAA,oBAQN,MAAMC,EACJ/2D,IAEA,QAAC,qBAAD,IAAuCA,EAAvC,UACE,QAAC,KAAD,CAAWK,KAAK,UAJd02D,EAAAA,YAAAA,mBAQN,MAAMC,EAAyB,KAC7B,QAAC,IAAD,CAAkBtH,MAAI,EAACrvD,KAAM,GAAIoC,MAAO,CAACg0B,OAAQ,GAAIC,MAAO,MA+D9D,SAASgzB,EACP1pD,GAEA,MAAMvY,GAAQ8qB,EAAAA,EAAAA,MACR,UAAC0kD,EAAD,aAAYC,EAAZ,aAA0BC,GAAgBn3D,EAO1Co3D,GAAkB/1D,EAAAA,EAAAA,cACtB,QAAE8iC,QAASkzB,KAAaC,GAAxB,QAA4D,IACvDA,EACHnzB,QAAS,MACTwB,WAAY,SACZ7zC,OAAQ,UACRwiC,MAAO7sC,EAAM6zB,WAEf,CAAC7zB,IAGG8vE,GAAgB99C,EAAAA,EAAAA,UACpB,KAAM,CACJ+9C,QAAS,CAAC9nE,EAAGqQ,KAAJ,CACP02B,OAAQ,OACRghC,WAAYhwE,EAAMoV,KAAKsyC,eACvBzQ,QAAS,OAIPpK,MAAO7sC,EAAMiwE,SACbl3D,WAAY/Y,EAAM+Y,WAClBL,OAAS,aAAY1Y,EAAM0Y,SAC3BsxB,UAAWhqC,EAAMkwE,gBAEnBv/C,aAAc3wB,EAAM2wB,aACpBtT,WAAY,+BACZ6gC,WAAY,SACZiyB,UAAW,UACP73D,EAAM83D,WAAa,CACrBpW,YAAah6D,EAAMqwE,YACnBrmC,UAAY,GAAEhqC,EAAMqwE,4BAElB/3D,EAAMoU,YAAc,CACtBstC,YAAah6D,EAAM0Y,OACnBK,WAAY/Y,EAAM0wB,oBAClBmc,MAAO7sC,EAAMioB,SACb5d,OAAQ,mBAELiO,EAAMm3D,cAAgB,CACzBplE,OAAQ,cAENmlE,GAAa,CACf9yB,QAAU,IAAEh4C,EAAAA,EAAAA,GAAM,QAAQA,EAAAA,EAAAA,GAAM,MAChCisB,aAAc,EACdjY,OAAQ,OACRsxB,UAAW,OACX3/B,OAAQ,UACR8lE,UAAW,UACPV,EACA,CAACr5B,UAAW,GACZ,CACEpH,OAAQ,EACR0N,QAAS,EACTrhC,SAAU,aAKpBi1D,KAAOT,IAAD,IACDA,EACHU,SAAUvwE,EAAMiZ,eAChB2D,OAAQ5c,EAAM4c,OAAO4zD,SACrBz3D,WAAY/Y,EAAMywE,mBAClB/3D,OAAS,aAAY1Y,EAAM0Y,SAC3BiY,aAAc3wB,EAAM2wB,aACpBqZ,UAAWhqC,EAAMud,gBACjB0xB,MAAO,OACP+1B,SAAU,OACV0L,SAAUhB,MAAAA,EAAAA,EAAgB,UACtBF,GAAa,CACfv5C,SAAU,WACV06C,OAAQ,EACRhgD,aAAc,EACdjY,OAAQ,OACRsxB,UAAW,OACXptB,OAAQ,aACJ6yD,GAAgB,CAACmB,WAAY,MAIrCC,SAAWhB,IAAD,IACLA,KACCL,GACFC,GAAgB,CACdmB,WAAY,KAIlBE,WAAY,KAAM,CAChBJ,SAAUhB,MAAAA,EAAAA,EAAgB,QAC1B9yD,OAAQ5c,EAAM4c,OAAO4zD,SACrBvhC,MAAO,MACPhZ,SAAU,QACV8kC,KAAM,MACNF,IAAK,MACLkW,UAAW,wBACXh4D,WAAY/Y,EAAMywE,mBAClB/3D,OAAS,aAAY1Y,EAAM0Y,SAC3BiY,aAAc3wB,EAAM2wB,aACpBqZ,UAAWhqC,EAAMud,gBACjBlC,SAAU,WAGZ2X,OAAS68C,IAAD,IACHA,EACHxlE,OAAQ,UACRwiC,MAAO7sC,EAAM6tB,UACb9U,WAAY,cACZ2jC,QAAS,EACT,UAAW,CACT3jC,WAAY,iBAGhBi4D,eAAiBnB,IAAD,IACXA,EACH3xB,WAAY,YACRsxB,GAAa,CACfe,SAAUvwE,EAAMiZ,eAChByjC,QAAU,IAAEh4C,EAAAA,EAAAA,GAAM,QAAQA,EAAAA,EAAAA,GAAM,KAChCgU,OAAS,aAAY1Y,EAAMm5B,cAC3BxI,aAAc3wB,EAAM2wB,aACpBtmB,OAAQ,OACR0O,WAAY/Y,EAAM0wB,uBAGtBy6B,MAAQ0kB,IAAD,IACFA,EACHhjC,MAAO7sC,EAAMiwE,YACTT,GAAa,CACf9yB,QAAS,EACTi0B,OAAQ,KAGZM,YAAcpB,IAAD,IACRA,EACHhjC,MAAO7sC,EAAMiwE,WAEf54C,YAAcw4C,IAAD,IACRA,EACHhjC,MAAO7sC,EAAMkxE,mBACT1B,GAAa,CACf9yB,QAAS,EACTi0B,OAAQ,KAGZQ,WAAatB,IAAD,IACPA,EACHhjC,MAAO,UACPwB,gBAAiB,UACjB1d,aAAc,MACdjY,OAAQ,oBACRu+B,QAAS,SAEXm6B,gBAAkBvB,IAAD,IACZA,EACHhjC,MAAO,UACP6P,QAAS,IACT20B,YAAa,MACbrB,WAAY,QAEdsB,iBAAkB,KAAM,CACtBjnE,OAAQ,UACR6zC,WAAY,SACZqzB,WAAY,oBACZ5gD,aAAc,cACdsmB,QAAS,OACTyF,QAAS,QACToiB,WAAY,MAEZ,UAAW,CACTjyB,MAAO,UACP9zB,WAAY,aAGhBy4D,oBAAqB,KAAM,CACzBv6B,QAAS,OACTw6B,aAAc,SACdC,QAAS,MACT/c,YAAa,SACT6a,GAAa,CAACv4B,QAAS,UAE7B06B,eAAgBhC,EAChBiC,kBAAmBjC,EACnBkC,iBAAkBlC,EAClBmC,aAAejC,IAAD,IACTA,EACHG,WAAY,MACZ9L,WAAY,IACZr3B,MAAO7sC,EAAM6zB,QACb7J,aAAc,EACd0yB,QAAU,IAAEh4C,EAAAA,EAAAA,GAAM,QAAQA,EAAAA,EAAAA,GAAM,SAElC4qB,MAAQugD,IAAD,IACFA,EACHe,WAAY,EACZ,gBAAiB,CACfmB,cAAe,QAIrB,CAAC/xE,EAAO0vE,EAAcC,EAAiBF,EAAcD,IAGjDwC,EAAsBnvE,IAAD,CACzB,UAAW,CACTwqE,QAAU,IAAGxqE,KACbgqC,MAAO7sC,EAAMk5B,QACbgrC,WAAY,QAIV,MACJplE,EADI,UAEJgjE,EAFI,QAGJ/hE,EAHI,QAIJ6hE,EAJI,UAKJxqC,EALI,WAMJukB,EANI,OAOJs2B,EAPI,MAQJxpD,EARI,aASJypD,KACGvwE,GACD4W,EAGE45D,GACJxQ,EAAAA,EAAAA,GAA6C,mBAAZC,EAAyBA,EAAQrpD,GAASqpD,IAC3E7hE,EAGF,IAAIqyE,EAAc3pD,EAElB,GAAI0pD,EAAkB,CAOpB,IAAIE,EAAqB,GAEvBA,GAjWJC,EAgWmCH,IA1VJ,IAAjBG,EAAM1nE,aAG4CpI,IAAxD8vE,EAAyC,GAAGvyE,QAwVlCoyE,EAAiBI,SAAQv/C,GAAUA,EAAOjzB,UAK1CoyE,EAAiBI,SAAQv/C,GAAUA,IAEnDo/C,EACE75D,EAAMwpD,UAAYp0D,MAAMsY,QAAQwC,GAC5BA,EAAMlhB,KAAIvE,GAAOqvE,EAAYhrE,MAAK2rB,GAAUA,EAAOvK,QAAUzlB,MAC7DqvE,EAAYhrE,MAAK8hB,GAAOA,EAAIV,QAAUA,KAAUA,EA5W1D,IACE6pD,EA+WA,MAAME,EAAqB,CACzBvB,YAAcwB,IAAD,IACRA,KACAT,EAAmBE,KAExB76C,YAAco7C,IAAD,IACRA,KACAT,EAAmBE,MAGpBQ,EAAuBR,GACzBS,EAAAA,EAAAA,GAAY7C,EAAe0C,GAC3B1C,EAKE8C,EAAeX,GACjBU,EAAAA,EAAAA,GAAYD,EAAsBT,GAClCS,EAEEG,EAAqB,CACzBzD,eAAAA,EACAC,kBAAAA,EACAC,iBAAAA,EACAl4D,iBAAkBm4D,EAClBuD,mBAAoB,KACpBC,OAAMA,EAAAA,GAGR,OACE,QAACC,EAAD,CACEf,OAAQW,EACRj3B,WAAY,IAAIk3B,KAAuBl3B,GACvC78C,MAAOA,EACPgjE,UAAWA,EACXmR,YAAa77C,EACb87C,sBAAuB97C,EACvB3O,MAAO2pD,EACPe,QAAS56D,EAAMwpD,UAAYxpD,EAAMgsD,MACjC73C,WAAYnU,EAAMmU,YAAcnU,EAAM0P,SACtCqtC,aAAc/8C,EAAM+8C,aACpBv1D,QAASA,GAAYoyE,EACrBiB,gBAAiB76D,EAAM66D,gBACvBC,mBAAoB96D,EAAMwpD,WAAaxpD,EAAMgsD,MAC7C+O,oBAAqB/6D,EAAMwpD,UAAYxpD,EAAMgsD,OAC7CgP,qBAAqB,EACrBC,iBAAiB,KACb7xE,IAoBV,SAASqxE,EAAT,GAK4B,IAGtBj7D,GAR4B,MAChCjZ,EADgC,UAEhCgjE,EAFgC,aAGhCzwB,KACG94B,GACuB,EAc1B,OATER,EADEjZ,GAASgjE,EACC2R,EAAAA,EACH30E,IAAUgjE,EACP4R,EAAAA,GACH5R,EACG6R,EAAAA,GAEAC,EAAAA,IAGP,QAAC77D,EAAD,CAAWsE,IAAKg1B,KAAkB94B,IAlarCg3D,EAAAA,YAAAA,yBAgEGtN,EAAAA,YAAAA,gBA+UA+Q,EAAAA,YAAAA,eAuBT,MAOA,GAPkCj/B,EAAAA,EAAAA,aAGhC,SAAmCx7B,EAAO8D,GAC1C,OAAO,QAAC4lD,EAAD,CAAe5wB,aAAch1B,KAAgB9D,Q,+fChbtD,SAAS0N,EAAWqsD,GAClB,OAAO3kE,MAAMsY,QAAQqsD,GAGR,MAAMjR,UAAyDtpD,EAAAA,UAE5E,+DAYe,CACburD,EACAp6C,EACA2qD,KAEA,IAAIprD,EAGCorD,EAEM3jE,KAAKqI,MAAMwpD,UAAY97C,EAAQ4tD,GAExCprD,EAAQorD,EAAUtsE,KAAI,QAAEkhB,MAAOzlB,GAAT,SAAkBA,KAC9BijB,EAAQ4tD,KAClBprD,EAAQorD,EAAUprD,OALlBA,EAAQorD,EAQV3qD,MAAAA,GAAAA,EAAWT,EAAO,IAClB66C,MAAAA,GAAAA,EAAS76C,EAAO,OAGlB1R,SACE,MAAM,WAAC+5C,EAAD,QAAavpC,EAAb,SAAsBw6C,EAAtB,MAAgCp1C,KAAU8/C,GAAcv8D,KAAKqI,MACnE,OACE,QAAC,IAAD,IACMk0D,EACJqH,WAAYnnD,EACZwiD,MAAO,QAAC,SAACjmD,EAAD,OAAWo6C,EAAQzS,SAAUkjB,KAAcx7D,GAA5C,SACL,QAAC,IAAD,IACMA,EACJ6e,UAAW05B,EACXiR,SAAUA,EACV74C,SAAUlmB,IAAO,UACf,IAAKukB,EAEH,YADArX,KAAK4mB,aAAawsC,EAAQp6C,EAAUlmB,GAMtC,MAAMgxE,EAAa,UAAGz7D,EAAMkQ,aAAT,aAAG,EAAapT,WAE7BpR,EAAWjB,MAAAA,GAAH,UAAGA,EAAKylB,aAAR,aAAG,EAAYpT,WAGxBkS,EAAQtjB,IAAa+vE,IAAkB/vE,GAK5CqnB,EAAAA,EAAAA,GAAiB,CACfE,UAAW,IAAMtb,KAAK4mB,aAAawsC,EAAQp6C,EAAUlmB,GACrDpB,QAAO,UAAE2lB,EAAQvkB,MAAAA,OAAD,EAACA,EAAKylB,cAAf,SAAyB/nB,EAAAA,EAAAA,GAAE,kCANlCwP,KAAK4mB,aAAawsC,EAAQp6C,EAAUlmB,UA5D/Bq+D,EAAAA,YAAAA,e,OAAAA,EAAAA,eAGG,CACpBvQ,YAAY,EACZmjB,YAAY,EACZ58C,YAAa,KACb68C,cAAc,EACdnS,UAAU,EACVp1C,OAAO,EACPvpB,mBAAoB,CAACqlB,EAAOlQ,KA7BhC,SAAuBA,GACrB,MAAMqpD,EAAUrpD,EAAMqpD,QACtB,MAAuB,mBAAZA,EACFA,EAAQrpD,QAED/V,IAAZo/D,EACK,GAGFA,EAqBFuS,CAAW57D,GAAOlR,MAAK+sE,GAAUA,EAAO,KAAO3rD,KAAU,CAAC,KAAMA,IAAQ,M,8DCpE1EtR,E,0BAAAA,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,SAAAA,WAAAA,EAAAA,QAAAA,UAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,Q,CAAAA,IAAAA,EAAAA,KASL,W,6UCFA,MAAMk9D,EAAuB,4BAQ7B,SAASh+C,EAAT,GAAkE,IAA9B,UAACvV,EAAD,SAAYnX,GAAkB,EAChE,MAAM2qE,EAAgC3qE,EAASgB,QAC7CkD,GAAWA,EAAQ0mE,gBAAgBC,wBAGrC,OAAKF,EAA8B1pE,QAKjC,QAAC,IAAD,CAAOkW,UAAWA,EAAWvf,KAAK,OAAOghB,UAAQ,EAAjD,SAC4C,IAAzC+xD,EAA8B1pE,QAC3BlH,EAAAA,EAAAA,IACE,uLACA,CACEie,MAAM,QAAC,IAAD,CAAchC,KAAM00D,OAG9B3wE,EAAAA,EAAAA,IACE,sMACA,CACE+wE,aAAcH,EAA8B/sE,KAAI,CAAC,EAAQoe,KAAT,IAAC,KAACzf,GAAF,SAC9C,QAAC,EAAA8V,SAAD,YACE,2BAAS9V,IACRyf,IAAU2uD,EAA8B1pE,OAAS,GAAK,OAF1C1E,MAKjByb,MAAM,QAAC,IAAD,CAAchC,KAAM00D,QArB7B,KANFh+C,EAAAA,YAAAA,6BAkCT,W,sgBCpBA,SAASq+C,EAAT,GAAqE,IAAhD,MAACjqD,EAAD,SAAQ8lD,EAAW,KAAnB,cAAyBxF,GAAuB,EACnE,MAAM,OAACI,EAAQwJ,eAAgBC,EAAeC,WAAYC,GAAarqD,EACjEsqD,GAAoBjL,EAAAA,EAAAA,GAAe,CACvCrhD,MAAOqsD,IAAaE,EAAAA,EAAAA,GAAgBF,EAAW,OAAO,GACtD7K,MAAO,WAGHgL,EAAgB5kD,GACpBA,EAVsB,IAWjB,aAAYuQ,KAAK0R,MAAMjiB,EAXN,QAYjB,GAAEA,IAET,SAAS6kD,IACP,MAAM,MACJC,EADI,MAEJ9kD,EAFI,OAGJzoB,EACAwtE,WAAYC,EACZC,YAAaC,GACXX,EACJ,OAAIO,GAGKzxE,EAAAA,EAAAA,IAAI,6BAA8B,CACvCkE,QAAQ,QAAC,IAAD,CAAUsa,KAAMizD,EAAOK,UAAQ,MAIvCnlD,EAIEzoB,GACKlE,EAAAA,EAAAA,IAAI,yCAA0C,CACnD2sB,MAAO4kD,EAAa5kD,GACpB7uB,UAAUi0E,EAAAA,EAAAA,IAAqB,GAAT7tE,EAAa,GAAG,MAInClE,EAAAA,EAAAA,IAAI,2BAA4B,CACrC2sB,MAAO4kD,EAAa5kD,KAIpBglD,EAIEE,GACK7xE,EAAAA,EAAAA,IAAI,yCAA0C,CACnD2sB,MAAO4kD,EAAaI,GACpB7zE,UAAUi0E,EAAAA,EAAAA,IAAyB,GAAbF,EAAiB,GAAG,MAGvC7xE,EAAAA,EAAAA,IAAI,2BAA4B,CACrC2sB,MAAO4kD,EAAaI,UAXxB,EAkFF,MAAM,YAACK,EAAD,mBAAcC,EAAd,gBAAkCC,EAAlC,QAAmDC,GAhEzD,WAME,OAAQ1K,GACN,KApFO,EAqFL,MAAO,CACL0K,QAAS,UACTD,iBAAiBl1E,EAAAA,EAAAA,GAAE,aACnBg1E,YACEZ,IACAp0E,EAAAA,EAAAA,GAAE,yBAA0B,CAC1B67D,SAAUwY,IAEdY,mBAAoBT,KAExB,KA9FQ,EA+FN,MAAO,CACLW,QAAS,QACTD,iBAAiBl1E,EAAAA,EAAAA,GAAE,cACnBg1E,YACEZ,IACAp0E,EAAAA,EAAAA,GAAE,yBAA0B,CAC1B67D,SAAUwY,KAMlB,KA1GI,EA2GF,MAAO,CACLc,QAAS,YACTD,iBAAiBl1E,EAAAA,EAAAA,GAAE,UACnBg1E,YACEZ,IAAap0E,EAAAA,EAAAA,GAAE,qBAAsB,CAAC67D,SAAUwY,KAItD,KAlHS,EAmHP,MAAO,CACLc,QAAS,OACTD,iBAAiBl1E,EAAAA,EAAAA,GAAE,eACnBg1E,YACEZ,IACAp0E,EAAAA,EAAAA,GAAE,2BAA4B,CAC5B67D,SAAUwY,KAIlB,QACE,MAAO,CACLc,QAAS,UACTD,iBAAiBl1E,EAAAA,EAAAA,GAAE,aACnBg1E,YACEZ,IACAp0E,EAAAA,EAAAA,GAAE,uBAAwB,CACxB67D,SAAUwY,MAM8Ce,GAE9DntD,GAAW+sD,GAAeC,KAC9B,QAACI,EAAD,WACGL,IAAe,wBAAMA,IACrBC,IACC,QAACK,EAAD,UAAqBL,KAEvB,QAACK,EAAD,oDAIJ,OACE,QAACC,EAAD,CAAW10E,KAAMs0E,EAASH,YAAa/sD,EAAS4nD,SAAUA,EAA1D,UACGqF,EACA7K,GAAiB+J,IAChB,QAAC,EAAA94D,SAAD,YACE,QAACkuD,EAAD,CAAW3oE,KAAMs0E,MAAAA,EAAAA,EAAW,UAA5B,SAAwC,SACxC,QAAC,IAAD,CAAW3zD,KAAM4yD,EAAW/K,OAAO,GAAGmM,YAAU,EAACC,yBAAuB,UAhJzEzB,EAAAA,YAAAA,cAuJT,UAEMqB,GAAiB,OAAO,MAAP,qBAAH,2CAIdC,GAAqB,OAAO,MAAP,qBAAH,UACbv9D,GAAKA,EAAEzY,MAAM6zB,SADA,KAIlBq2C,GAAY,OAAO,OAAP,qBAAH,UACJzxD,GAAKA,EAAEzY,MAAMy2B,IAAIhe,EAAElX,MAAMmX,QADrB,iBAKTu9D,GAAY,OAAOG,EAAAA,EAAP,CAChB1oC,kBAAmBj1B,GAAW,aAANA,EADR,oBAAH,cAGAA,GACI,OAAfA,EAAE83D,SAAoB93D,EAAEzY,MAAMqzC,cAAgB56B,EAAEzY,MAAMiZ,gBAJ3C,M,+WC7Lf,MAAMo9D,EAAe,KACnB,QAAC,IAAD,CAASj5B,aAAW,EAAC97B,OAAO5gB,EAAAA,EAAAA,GAAE,kDAA9B,UACE,QAAC41E,EAAD,YACE,QAACC,EAAD,CAAiB39D,KAAK,KAAKi0B,MAAM,YAChCnsC,EAAAA,EAAAA,GAAE,kBAJH21E,EAAAA,YAAAA,eASN,UAEMC,GAAsB,OAAO,MAAP,qBAAH,6DAId79D,GAAKA,EAAEzY,MAAM6pC,QAJC,KAOnB0sC,GAAkB,OAAOC,EAAAA,GAAP,qBAAH,6D,2XCWrB,SAASC,EAAT,GAA8D,IAA5B,KAAC92E,KAAS4Y,GAAkB,EAC5D,MAAMm+D,UAAsB3+D,EAAAA,UAA4B,uDAG9C,CACNgsC,MAAOtsC,EAAAA,EAAAA,IAAc9X,GAAM4H,KAAIyY,GAAMA,EAAGzH,QAJY,0BAoBxCd,EAAAA,EAAAA,QACZ,CAACuwB,EAAoB+b,IAA2B7zC,KAAKymE,YAAY3uC,EAAU+b,SAC3EvhD,IAfFmb,uBACEzN,KAAK8zB,cAGP2yC,YAAY3uC,EAAoB+b,GAE1B/b,IAAaroC,GAIjBuQ,KAAKwN,SAAS,CAACqmC,MAAOA,EAAMx8C,KAAIyY,GAAMA,EAAGzH,OAQ3CxB,SACE,MAAM,SAACuC,GAAYf,EAEnB,OAAKrI,KAAKoI,MAAMyrC,OAAU7zC,KAAKoI,MAAMyrC,MAAMn5C,OAInB,mBAAb0O,EACFA,EAAS,CAACyqC,MAAO7zC,KAAKoI,MAAMyrC,QAG9B7zC,KAAKoI,MAAMyrC,MAPT,MAWb,OAxCM2yB,EADsD,oCACtDA,EADsD,cAEpC,QAAO/2E,OAuCxB,QAAC+2E,EAAD,IAzCAD,EAAAA,YAAAA,OA4CT,W,oYCkBA,QArDA,YAIc,IAJ6B,SACzCzuC,EADyC,iBAEzCC,EAFyC,wBAGzC2uC,GACY,EAIZ,MAAMC,UAA+B9+D,EAAAA,UAAwB,uDAG5C,CACbgsC,MAAOtsC,EAAAA,EAAAA,IAAcuwB,MAJoC,yBAW9CvwB,EAAAA,EAAAA,QACX,CAAC9X,EAAcokD,IACbpkD,IAASqoC,GAAY93B,KAAKwN,SAAS,CAACqmC,MAAAA,UACtCvhD,IAPFmb,uBAAuB,MACrB,UAAAzN,KAAK0N,kBAAL,cAAA1N,MASE+3B,uBAEF,GAAI2uC,EAAyB,CAC3B,MAAME,GAAmBh5D,EAAAA,EAAAA,MAAK84D,GAE9B,OAAQr+D,IACN,QAAC,EAAAwI,SAAD,CAAUrZ,SAAU,KAApB,UACE,QAACovE,EAAD,IAAsBv+D,MAK5B,OAAO0vB,EAGTlxB,SAAS,QACP,MAAMggE,EAAa7mE,KAAKoI,MAAMyrC,OAAS7zC,KAAKoI,MAAMyrC,MAAMn5C,OAClDosE,EAAiB,WAAG,EAAA9mE,KAAKoI,MAAMyrC,OAAM,UAApB,aAAG,UACpB2yB,EACJK,GAAcC,EAAoBA,EAAoB9mE,KAAK+3B,iBAE7D,OAAOyuC,GAAgB,QAACA,EAAD,IAAmBxmE,KAAKqI,QAAY,MAI/D,OA1CMs+D,EAJM,6CAINA,EAJM,cAKY,0BAAyB7uC,MAyC1C6uC,I,6VC/ET,MAAMI,EAAY,IAOL,IAPM,WACjBp3B,EAAa,GADI,UAEjBq3B,GAAY,EAFK,YAGjB19D,EAHiB,aAIjB29D,EAJiB,KAKjBt3E,EALiB,UAMjBihB,GACW,EACX,MAAMQ,EACJ9H,GACC3Z,IACEA,EAAKF,MACJE,EAAKkP,OACLlP,EAAKu3E,UACLv3E,EAAKw3E,WAGLx3E,EAAKy3E,YACLz3E,EAAKP,IAEX,OACE,QAACi4E,EAAD,CAAiBz2D,UAAWA,EAA5B,WACE,QAACm+B,EAAD,CAAcp/C,KAAMA,EAAM+Y,KAAMinC,KAChC,QAAC23B,EAAD,YACE,QAACC,EAAD,CAAYP,YAAaA,EAAzB,SAAqC51D,KACnC41D,IAAa,QAACQ,EAAD,UAAcP,GAAiBt3E,GAAQA,EAAKkP,eAzB7DkoE,EAAAA,YAAAA,YA+BN,MAAMM,GAAkB,OAAO,MAAP,qBAAH,0DAKfC,GAAqB,OAAO,MAAP,qBAAH,wEAMlBE,GAAc,OAAO,MAAP,qBAAH,iCAEDhzE,EAAAA,EAAAA,GAAM,KAFL,WAGN+T,GAAKA,EAAEzY,MAAMk5B,SAHP,KAIbzgB,GAAKA,EAAEzY,MAAM8tB,kBAJA,KAOJ2pD,GAAa,OAAO,OAAP,qBAAH,gBACNh/D,GAAMA,EAAEy+D,UAAY,UAAY,QAD1B,wBAGnBz+D,GAAKA,EAAEzY,MAAM8tB,kBAHM,KAMjBmxB,GAAe,OAAO04B,EAAAA,EAAP,qBAAH,cACHjzE,EAAAA,EAAAA,GAAM,GADH,gBAEFA,EAAAA,EAAAA,GAAM,GAFJ,kBAGAA,EAAAA,EAAAA,GAAM,GAHN,KAMlB,K,2gBCpEA,MAAMkzE,GAAS,OAAO,MAAP,qBAAH,kDAICn/D,GAAKA,EAAEzY,MAAM4c,OAAOi7D,OAJrB,KAWZ,SAASC,EAAWv/D,GAClB,MAAMgU,GAAQpO,EAAAA,EAAAA,GAAe45D,EAAAA,GAE7B,OACE,QAACH,EAAD,IAAYr/D,EAAZ,UACE,QAAC,IAAD,UACGgU,EAAMhlB,KAAI,CAACrG,EAAWmhC,KAKrB,QAAC,IAAD,CAAgBiO,UAAWrvC,EAAAA,GAAiBC,UAAWA,GAAgBmhC,SAXxEy1C,EAAAA,YAAAA,aAkBT,W,wmBCVA,SAAS7vB,EAAT,GAA4E,IAAjC,UAACE,KAAc5vC,GAAkB,EAC1E,MAAMy/D,GAAgBhmD,EAAAA,EAAAA,UACpB,KAAMlU,EAAAA,EAAAA,OAAK,ICzBA,SACbm6D,GAEA,IAAIC,EAAU,EACd,MAAMC,EAAUr5E,UACd,IACE,aAAam5E,IACb,MAAOtvE,GACP,IAAIyvE,EAAAA,EAAAA,IAA2BzvE,IAAQuvE,EAVzB,EAYZ,OADAA,IACOC,IAGT,MAAMxvE,IAIV,OAAOwvE,IDQYE,CAAgBlwB,MACjC,CAACA,IAGH,OACE,QAACmwB,EAAD,WACE,QAAC,EAAAv3D,SAAD,CACErZ,UACE,QAAC6wE,EAAD,WACE,QAAC,IAAD,MAHN,UAOE,QAACP,EAAD,IAAoBz/D,QAfnB0vC,EAAAA,YAAAA,WA2BT,MAAMqwB,UAAsBvgE,EAAAA,UAAkC,uDAQpD,CAACC,UAAU,EAAOhL,MAAO,QAR2B,2BAwB9C,IAAMkD,KAAKwN,SAAS,CAAC1F,UAAU,MAvBd,gCAAChL,GAC9B,MAAO,CACLgL,UAAU,EACVhL,MAAAA,GAMJiL,kBAAkBjL,EAAcwrE,GAC9Bz2E,EAAAA,IAAiBiR,KACXolE,EAAAA,EAAAA,IAA2BprE,IAC7BgG,EAAMipC,eAAe,CAAC,UAAW,wBAEnCjpC,EAAMC,SAAS,YAAaulE,GAC5Bz2E,EAAAA,GAAwBiL,MAI1BoL,QAAQpL,MAAMA,GAMhB+J,SACE,OAAI7G,KAAKoI,MAAMN,UAEX,QAACygE,EAAD,WACE,QAAC,IAAD,CACE/1C,QAASxyB,KAAKwoE,YACd92E,SAASlB,EAAAA,EAAAA,GAAE,+CAKZwP,KAAKqI,MAAMe,UArChBg/D,EAAAA,YAAAA,gBAyCN,MAAMC,GAAmB,OAAO,MAAP,qBAAH,iEAMhBE,GAAwB,OAAO,MAAP,qBAAH,iCAI3B,K,qQE/FA,MAUA,GAVqB1kC,EAAAA,EAAAA,aACnB,CAAC,EAAiC13B,KAAQ,IAAzC,aAACyvC,GAAe,KAASvzC,GAAgB,EACxC,MAAMogE,EAAc7sB,EAChB,CAACxvC,OAAQ,SAAU0vC,IAAK,uBACxB,CAACrsC,KAAMpH,EAAMoH,MAEjB,OAAO,QAAC,IAAD,CAAQtD,IAAKA,KAASs8D,KAAiBpgE,Q,upBCKlD,SAASqgE,EAAT,GAIU,IAJgB,SACxBt/D,EADwB,aAExBrS,EAFwB,gCAGxB4xE,GACQ,EACR,MAAM,SAAClvE,EAAUuiB,gBAAiB48C,IAAkBv0C,EAAAA,EAAAA,KAE9CzsB,EAAUb,EAAaf,KACvB4yE,EAAmB7xE,EAAawrB,OAAO3kB,SAAS,iBAChDirE,EAAc9xE,EAAawrB,OAAO3kB,SAAS,cAE3C,YAAC4E,GAAe5S,EAAAA,EAAAA,IAAgB,QAEhCk5E,IAAmBrvE,MAAAA,IAAAA,EAAUiB,QAMnC,IAJE8H,IAAgBmmE,EACVlvE,MAAAA,GAAAA,EAAU6Z,MAAK/K,GAAKA,EAAEwgE,YACtBtvE,MAAAA,GAAAA,EAAU6Z,MAAK/K,GAAKA,EAAE8tB,UAAY9tB,EAAEwgE,eAEnBnQ,EACvB,OAAO,QAAC,EAAA9sD,SAAD,UAAW1C,IAOpB,MAAM4/D,GACJ,QAAC,KAAD,CACE53D,MAAOy3D,OAAcv2E,GAAY9B,EAAAA,EAAAA,GAAE,8CACnCunB,UAAW8wD,EACXjtD,SAAUktD,EAAiB,UAAY,UACvCt2D,GAAK,aAAY5a,WAJnB,UAMGpH,EAAAA,EAAAA,GAAE,iBAIDy4E,GACJ,QAAC,KAAD,CACE73D,MACEw3D,OACIt2E,GACA9B,EAAAA,EAAAA,GAAE,mDAERunB,UAAW6wD,EACXhtD,SAAUktD,EAAiB,UAAY,UACvCt2D,GAAK,kBAAiB5a,kBARxB,UAUGpH,EAAAA,EAAAA,GAAE,oBAIP,OACE,QAACsrB,EAAD,WACE,QAACotD,EAAD,YACE,eAAKp0C,IAAKq0C,EAAKrqC,OAAQ,IAAKsqC,KAAK54E,EAAAA,EAAAA,GAAE,qBACnC,QAACgc,EAAD,YACE,QAAC68D,EAAD,WAAoB74E,EAAAA,EAAAA,GAAE,kBACtB,QAAC84E,EAAD,WAAc94E,EAAAA,EAAAA,GAAE,qDAChB,QAAC+4E,EAAD,CAASnkD,IAAK,EAAd,SACI0jD,GAGA,QAAC,EAAAh9D,SAAD,WACGk9D,EACAC,KAJHA,YA9DLP,EAAAA,YAAAA,mBA4ET,MAAMW,GAAoB,OAAOG,EAAAA,EAAP,sBAAH,iCAEJh1E,EAAAA,EAAAA,GAAM,KAFF,KAKjB80E,GAAc,OAAO,MAAP,sBAAH,kBACE90E,EAAAA,EAAAA,GAAM,GADR,KAIXsnB,GAAU,OAAO,MAAP,sBAAH,yFAOPotD,GAAgB,OAAO,MAAP,sBAAH,oDAKb18D,GAAU,OAAO,MAAP,sBAAH,sGAOP+8D,GAAU,OAAOpiB,EAAAA,GAAP,sBAAH,6CAIb,K,+vCCnEA,SAASsiB,EAAT,GAcU,IAdmB,gBAC3BnyD,EAD2B,SAE3BJ,EAF2B,aAG3BngB,EAH2B,SAI3B0C,EAJ2B,iBAK3BurB,EAL2B,MAM3BzM,EAN2B,cAO3B8I,EAP2B,qBAQ3BurC,EAR2B,uBAS3BkM,EAT2B,SAU3B3L,EAV2B,iBAW3Buc,EAX2B,OAY3BxlD,EAZ2B,QAa3BspC,GACQ,EACR,MAAOmc,EAAcC,IAAmBh/B,EAAAA,EAAAA,UAASryB,GAC3C41C,GAAcj7C,GAAAA,CAAQy2D,EAAcpxD,IAG1CpO,EAAAA,EAAAA,YAAU,KACRy/D,EAAgBrxD,GAChBsxD,EAAiBz/D,QAAUu/D,IAC1B,CAACpxD,IAKJ,MAAMsxD,GAAmB5/D,EAAAA,EAAAA,QAAOsO,GAG1BuxD,GAAiB7/D,EAAAA,EAAAA,SAAO,GA0BxB8/D,EAAkB,KAEjB5b,IAAc2b,EAAe1/D,UAKlC0sC,EAAAA,EAAAA,IAAU,6BAA8B,CACtC32B,MAAOwpD,EAAajvE,OACpBwH,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpC8nB,EAASyyD,IAVPG,EAAe1/D,SAAU,GAgBvB4/D,EAAc,MAClBlzB,EAAAA,EAAAA,IAAU,4BAA6B,CACrC50C,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpCw6E,EAAgB,IAChB1yD,EAAS,KAGL+yD,EAAqB/zD,KACzB4gC,EAAAA,EAAAA,IAAU,uCAAwC,CAChD50C,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpC,MAAM86E,EAAuB,CAACh0D,EAAKqC,OAEnCqxD,EAAgBM,GAChBhzD,EAASgzD,GAITJ,EAAe1/D,SAAU,GAGrB4D,EAASpe,EAAAA,EAAAA,YAETu6E,EAAuB1wE,EAAS4oE,SAAQ1kE,IAC5C,MAAMjB,EAAYywB,SAASxvB,EAAQvO,GAAI,IAMvC,OAC+B,IAA5B41B,EAAiBtqB,QAChBsqB,EAAiB,KAAOolD,EAAAA,IACxBzsE,EAAQorE,WACmB,IAA5B/jD,EAAiBtqB,SAAiBiD,EAAQ04B,UAAYroB,EAAOre,KAAK6S,cACnEwiB,EAAiBpnB,SAASlB,GAEnBiB,EAAQ+gB,aAGV,MAGH2rD,EAAqB5sE,MAAMC,KAAK,IAAIV,IAAImtE,IAGxCzrD,EAAe4tB,GAAAA,CAAO+9B,GAAoBnR,GAAO,EACpD2Q,EAAiBz/D,QAAQjT,MAAK0S,GAAKA,IAAMqvD,IAC1CA,KAGIoR,EAAiB/xD,EAAM9d,QAAOy+D,GAAOx6C,EAAa9gB,SAASs7D,KAC3DD,EAAUqR,EAAe5vE,OAC1B,GAAE4vE,EAAensE,KAAK,SACvB3N,EAAAA,EAAAA,GAAE,oBAEN,YAAyB8B,IAArBo3E,GAEA,QAACa,EAAD,CACE,eAAa,mCACb5hE,MAAM,QAAC,KAAD,IACNu0B,QAAQ,EACRstC,QAAM,EAJR,SAMGd,IAAsCl5E,EAAAA,EAAAA,GAAE,sBAK3C8mB,GAAmBwhD,GACd,QAAC,EAAAhtD,SAAD,UAAWgtD,IAGhBxhD,GAEA,QAACizD,EAAD,CACE,eAAa,mCACb5hE,MAAM,QAAC,KAAD,IACNiK,QAAS0E,EACT62C,YAAY,EACZsc,aAAa,EACbvtC,QAAQ,EACRstC,QAAQ,EAPV,UASGh6E,EAAAA,EAAAA,GAAE,eAMP,QAAC,KAAD,UACG,QAAC,IAAC+b,GAAF,SACC,QAACm+D,EAAD,CACE7V,UAAWxzC,EACXspD,kBAAgB,EAChBzU,eAAa,EACbtB,aAAa,EACbzH,SAAUA,EACVwH,mBAAmBnkE,EAAAA,EAAAA,GAAE,uBACrBmoB,SAAUsxD,EACVn1E,QAASi1E,EACTtV,UAAW,IACXiB,cAAenpD,CAAI;;;YAInBkpD,WAAY,CAAC3qD,MAAO,CAAC0hC,QAAS,EAAG20B,YAAa,KAC9CzM,cAAclkE,EAAAA,EAAAA,GAAE,4BAChBglE,kBAAkBhlE,EAAAA,EAAAA,GAAE,yBACpB6kE,kBAAmBvlE,EAAAA,GAAAA,wBACnB6lE,iBAAe,EACfK,aACExI,GAAU,QAACod,EAAD,CAAiBliE,KAAK,SAASjO,OAAO,sBAAoBnI,EAEtEwjE,WAAY,QAAC,QAACsB,GAAF,SACVjJ,GACE,QAAC,IAAD,CAA2B3lC,SAAU,IAjJ7B4uC,CAAAA,IAClBA,EAAQyT,QACR3zD,EAASyyD,IA+I4CmB,CAAW1T,KACpD,MAEN/6C,MAAOqC,EAAarnB,KAAI6hE,IAAO,CAC7B3gD,MAAO2gD,EACP6R,UAAW7R,EACXvmE,MAAO,QAAC,WAACskE,GAAF,SACL,QAAC,IAAD,CACE,eAAe,eAAciC,IAC7Br5C,QAAS8pD,EAAa/rE,SAASs7D,GAC/B8R,aAAcnhE,IACZA,EAAE4Y,kBA5KMhE,CAAAA,IACtB,MAAMwsD,EAAatB,EAAa/rE,SAAS6gB,GAEnCysD,EAAsBD,EACxBtB,EAAalvE,QAAOy+D,GAAOA,IAAQz6C,IACnC,IAAIkrD,EAAclrD,IAEtBq4B,EAAAA,EAAAA,IAAU,6BAA8B,CACtC9kD,OAAQi5E,EAAa,UAAY,QACjC/oE,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpCw6E,EAAgBsB,IAgKFC,CAAejS,IALnB,UAQE,QAAC,IAAD,CAAWh0D,KAAM+xD,EAAjB,SAA8BiC,WAvCtC,SA4CG,QAAC,OAACh8B,EAAD,QAASk6B,GAAV,SACCxK,EACEA,EAAqB,CAAC1vB,OAAAA,EAAQk6B,QAAAA,EAAS7+C,MAAO+xD,KAE9C,QAACC,EAAD,CACE,eAAa,mCACb5hE,MAAM,QAAC,KAAD,IACNu0B,OAAQA,EACRutC,YAAalyD,KAAWA,EAAM7d,OAC9B0wE,QAASpB,EACT7b,YAAY,EACZqc,QAAQ,EACR53D,SAAS,EARX,SAUGqmD,UAtORwQ,EAAAA,YAAAA,sBAgPT,SAAelwC,EAAAA,EAAAA,YAAWkwC,GAEpBc,GAAmB,OAAOc,EAAAA,EAAP,oBAAH,kDAKhBX,GAA6B,OAAOY,EAAAA,EAAP,oBAAH,eAChB/iE,GAAKA,EAAEzY,MAAM+Y,YADG,sBAEVN,GAAKA,EAAEzY,MAAM0Y,QAFH,gCAM5BD,IACCA,EAAE4kD,UACF,4CAEgB5kD,EAAEzY,MAAMy7E,2BAVG,KAc1BX,GAAkB,OAAOY,EAAAA,EAAP,oBAAH,aACPh3E,EAAAA,EAAAA,GAAM,GADC,M,2lBCpSrB,SAAS62E,EAAT,GAcU,IAdU,SAClBjiE,EADkB,OAElB8zB,EAFkB,YAGlButC,EAHkB,KAIlB9hE,EAJkB,OAKlB6hE,EALkB,cAMlBiB,EANkB,aAOlBC,EAPkB,KAQlBC,EARkB,QASlB/4D,EATkB,aAUlBuuB,EAVkB,QAWlBiqC,EAXkB,WAYlBxqB,GAAa,KACVv4C,GACK,EACR,MAKMujE,EAAiB,CACrBpB,OAAAA,EACAttC,OAAAA,EACAutC,YAAAA,GAGF,OACE,QAACF,EAAD,CACEp+D,IAAKg1B,EACLvuB,UAAWA,KACP4Y,GAAAA,CAAKnjB,EAAO,cACZujE,EAJN,WAME,QAACC,EAAD,IAAmBD,EAAnB,SAAoCjjE,KACpC,QAAC6D,EAAD,YACE,QAACs/D,EAAD,UAAgB1iE,IAEfsiE,IACC,QAACK,EAAD,CAAkBv5D,GAAIk5D,EAAtB,UACE,QAAC,KAAD,SAILC,IACC,QAACK,EAAD,WACE,QAAC,IAAD,CAAS56D,MAAOu6D,EAAM5lD,SAAS,SAA/B,UACE,QAAC,KAAD,CAAUrd,KAAK,WAIpB+hE,IAAgBD,GAAU5pB,IACzB,QAACqrB,EAAD,IAAiBL,EAAgBviE,QApClBQ,IACnBA,EAAE4Y,kBACF2oD,MAAAA,GAAAA,QAoCIZ,IAAW53D,IACX,QAACs5D,EAAD,WACE,QAACC,EAAD,CAAejvC,SAAUA,EAAQ4H,UAAW5H,EAAS,KAAO,OAAQx0B,KAAK,SAG5E8hE,IACC,QAAC,IAAD,CAASp5D,MAAOq6D,IAAiBj7E,EAAAA,EAAAA,GAAE,4BAA6Bu1B,SAAS,SAAzE,UACE,QAACqmD,EAAD,CAAYzvC,MAAM,UAAU4F,SAAO,SA5DpC8oC,EAAAA,YAAAA,aAoET,MAAMgB,EAAY9jE,GACZA,EAAEiiE,OACGjiE,EAAEzY,MAAMk5B,QAEVzgB,EAAE20B,QAAU30B,EAAEkiE,YAAcliE,EAAEzY,MAAM6tB,UAAYpV,EAAEzY,MAAMk5B,QAS3DuhD,GAAmB,OAAO,MAAP,CACvB/sC,kBAAmBj1B,GAAkB,iBAANA,IAAkB+0D,EAAAA,EAAAA,GAAY/0D,IAAY,YAANA,EAD5C,oBAAH,2BAQP/T,EAAAA,EAAAA,GAAM,GARC,+BAUV+T,GAAMA,EAAEqK,QAAU,WAAarK,EAAEiiE,OAAS,OAAS,WAVzC,UAWX6B,EAXW,4CAgBhB7/D,GAAU,OAAO,MAAP,qBAAH,wEAKKhY,EAAAA,EAAAA,GAAM,KALX,KAQPs3E,GAAgB,OAAO,MAAP,qBAAH,kEAKbD,GAAgB,OAAO,OAAP,CAAgBruC,kBAAmB8/B,EAAAA,EAAnC,oBAAH,SACR+O,EADQ,kBAED73E,EAAAA,EAAAA,GAAM,KAFL,4BAIJ+T,GAAKA,EAAEzY,MAAMiZ,gBAJT,KAObijE,GAAO,OAAO,MAAP,qBAAH,0BAEDx3E,EAAAA,EAAAA,GAAM,KAFL,kBAGQA,EAAAA,EAAAA,GAAM,GAHd,KAMJy3E,GAAc,OAAOnjD,EAAAA,GAAP,CAAmB0U,kBAAmB8/B,EAAAA,EAAtC,oBAAH,SACN+O,EADM,YAEL73E,EAAAA,EAAAA,GAAM,KAFD,WAGNA,EAAAA,EAAAA,GAAM,KAHA,8BAKJA,EAAAA,EAAAA,GAAM,GALF,oCAOJA,EAAAA,EAAAA,GAAM,GAPF,UAOaA,EAAAA,EAAAA,GAAM,GAPnB,MAO0BA,EAAAA,EAAAA,GAAM,GAPhC,KAUX03E,GAAiB,OAAO,MAAP,qBAAH,UACT13E,EAAAA,EAAAA,GAAM,GADG,YAERA,EAAAA,EAAAA,GAAM,GAFE,4DAQd23E,GAAgB,OAAO9mC,EAAAA,GAAP,CAAqB7H,kBAAmB8/B,EAAAA,EAAxC,oBAAH,SAGR+O,EAHQ,KAMNN,GAAmB,OAAOtyC,EAAAA,EAAP,qBAAH,UAClBlxB,GAAKA,EAAEzY,MAAMk5B,SADK,uFAKXx0B,EAAAA,EAAAA,GAAM,KALK,iBAMZA,EAAAA,EAAAA,GAAM,GANM,oDAUhB+T,GAAKA,EAAEzY,MAAM6tB,WAVG,MAcvByuD,GAAa,OAAOE,EAAAA,GAAP,qBAAH,eACA93E,EAAAA,EAAAA,GAAM,KADN,sBAKhB,GAAeqvC,EAAAA,EAAAA,aAAkC,CAACx7B,EAAO8D,KACvD,QAACk/D,EAAD,CAAYlqC,aAAch1B,KAAS9D,O,2ZC1LrC,MAAMkkE,EAA4B,QAAC,SAAC/jD,EAAD,SAAWzQ,GAAW,GAAvB,SAChC,QAACy0D,EAAD,WACE,QAACC,EAAD,CAAc10D,SAAUA,EAAU1O,QAASmf,EAAU9f,KAAK,SAASkT,SAAS,UAA5E,UACGprB,EAAAA,EAAAA,GAAE,cAHH+7E,EAAAA,YAAAA,4BAQN,MAAMC,GAAwB,OAAO,MAAP,sBAAH,gEAKrBC,GAAe,OAAO/5D,EAAAA,GAAP,sBAAH,kBACEg6D,EAAAA,GADF,oBAENl4E,EAAAA,EAAAA,GAAM,IAFA,OAKlB,K,2FC5BA,MA8DA,GA9DsB,E,kFAAA,GAAO,MAAP,qBAAH,iDAGA+T,GAAKA,EAAEzY,MAAM2wB,cAHb,YAIPlY,GAAKA,EAAEzY,MAAMg+D,KAAK74D,QAAQ6pC,QAJnB,OAKfv2B,GACAA,EAAEokE,WACD,uDAPc,wHAoBepkE,GAAKA,EAAEzY,MAAM0Y,QApB5B,mBAqBED,GAAKA,EAAEzY,MAAM2wB,cArBf,oUAgDKlY,GAAKA,EAAEzY,MAAMm5B,aAhDlB,yM,4aCKnB,MAAM2jD,EAAwB,QAAC,SAACC,GAAF,SAAgBA,GAoB9C,SAASC,EAAT,GAOU,IAPa,QACrBjtD,EADqB,aAErBmrD,EAFqB,SAGrB5hE,EAHqB,MAIrBirD,GAAQ,EAJa,eAKrB0Y,EAAiBH,KACdvkE,GACK,EACR,MAAM2kE,GAAQlrD,EAAAA,EAAAA,UAAQ,KAAMmrD,EAAAA,EAAAA,GAAM,oBAAoB,IAEhDJ,GACJ,QAACK,EAAD,CACE1wD,YAAa63C,EACb8Y,UAAWttD,EACXxW,QAASgrD,EAAQ2W,OAAe14E,EAChC,kBAAiB06E,IAIrB,OACE,QAAC9gE,EAAD,CAAW,eAAc2T,EAASstD,UAAWttD,KAAaxX,EAA1D,WACE,QAAC+kE,EAAD,CAAOh+E,GAAI49E,EAAO3Y,MAAOA,EAAzB,SACGjrD,IAEF2jE,EAAe,CAACF,SAAAA,EAAUhtD,QAAAA,OAxBxBitD,EAAAA,YAAAA,gBA6BT,MAAMI,GAAsB,OAAOG,EAAAA,EAAP,sBAAH,+BAEX74E,EAAAA,EAAAA,GAAM,GAFK,kBAGPA,EAAAA,EAAAA,GAAM,KAHC,+CASbA,EAAAA,EAAAA,GAAM,GATO,YAUXA,EAAAA,EAAAA,GAAM,KAVK,aAWVA,EAAAA,EAAAA,GAAM,GAXI,WAYZA,EAAAA,EAAAA,GAAM,GAZM,MAgBnB0X,GAAY,OAAO,MAAP,sBAAH,oFAIA3D,GAAKA,EAAEzY,MAAMiZ,gBAJb,kCAMGvU,EAAAA,EAAAA,GAAM,IANT,IAQX04E,EARW,aASA3kE,GAAMA,EAAE4kE,UAAY,EAAI,KATxB,aAYHD,EAZG,gBAiBTE,GAAQ,OAAO,MAAP,sBAAH,sJAWY7kE,GAAMA,EAAE8rD,MAAQ,YAAc,MAX1C,WAYE9rD,GAAMA,EAAE8rD,MAAQ9rD,EAAEzY,MAAMosE,QAAU,MAZpC,MAgBX,K,y5BCxFe,SAASoR,EAAT,GAA8C,IAAjB,OAACppD,GAAgB,EAC3D,MAAM,gBAACioC,IAAmBC,EAAAA,EAAAA,KACpBr1D,GAAeoa,EAAAA,EAAAA,MACdo8D,EAAWC,IAAgB5iC,EAAAA,EAAAA,WAAS,GAM3C,OAA6B,IAAzBuhB,EAAgBzjD,MAAc6kE,EACzB,MAIP,QAAC,IAAD,CACEl8E,KAAK,OACLghB,UAAQ,EACRsO,QAAM,EACNrO,eACE,QAAC,EAAAxG,SAAD,YACE,QAAC2hE,EAAD,CAAc7xD,SAAS,OAAOlT,KAAK,OAAOW,QAf5B,MACpBqkE,EAAAA,EAAAA,IAAsB32E,EAAaf,KAAMkuB,IAc+BvB,YAAU,EAA5E,UACGnyB,EAAAA,EAAAA,GAAE,aAEL,QAAC,KAAD,CACEorB,SAAS,OACTlT,KAAK,OACLC,MAAM,QAAC,KAAD,CAAWg0B,MAAM,cACvB,cAAYnsC,EAAAA,EAAAA,GAAE,eACd6Y,QAAS,IAAMmkE,GAAa,QAdpC,UAmBGh9E,EAAAA,EAAAA,GACC,mHAlCgB88E,EAAAA,YAAAA,sBAwCxB,MAAMG,GAAe,OAAO/6D,EAAAA,GAAP,sBAAH,4CAGHnK,GAAKA,EAAEzY,MAAMiZ,gBAHV,WAIPR,GAAKA,EAAEzY,MAAMm2C,WAJN,qCAQCzxC,EAAAA,EAAAA,GAAM,GARP,WASL+T,GAAKA,EAAEzY,MAAM69E,WATR,M,uVCpDlB,MAuBA,GAvBqB,OAAOl0C,EAAAA,EAAP,sBAAH,uBAEPjlC,EAAAA,EAAAA,GAAM,KAFC,YAGNA,EAAAA,EAAAA,GAAM,KAHA,8EAQLA,EAAAA,EAAAA,GAAM,GARD,6BAWP+T,GAAKA,EAAEzY,MAAM6tB,WAXN,gBAYFpV,GAAKA,EAAEzY,MAAM0wB,qBAZX,8FAkBAjY,GAAKA,EAAEzY,MAAM+Y,YAlBb,6B,kQCMlB,SAAS+kE,EAAuBrlE,GAC9B,OAAOA,EAAEslE,UACLthE,EAAAA,EAAAA,IADG,sBAEoBhE,EAAEzY,MAAMirB,YAAYqL,OAFxC,uBAMH,GAGN,MAcA,GAd2B,OAAO,MAAP,qBAAH,+CAMpBwnD,EANoB,IAQpBhW,EAAAA,EARoB,IAQCkW,EAAAA,EARD,yBCXxB,GANwB,OAAO,MAAP,sBAAH,+BAECvlE,GAAKA,EAAEzY,MAAM0Y,QAFd,YAGThU,EAAAA,EAAAA,GAAM,GAHG,O,qNCuKrB,MAAMu5E,UAA8BlmE,EAAAA,UAAwB,oEAG3C,CACbpO,SAAU,KACVu0E,YAAa,MAL2C,gCASvC,KAAM,CACvBthB,MAAM,EACNC,YAAa3sD,KAAKqI,MAAM6jD,yBAXgC,gCAcvC,IAAqD,IAApD,MAACzoD,EAAD,IAAQgmB,EAAK4iC,SAAUhvC,EAAvB,IAA+BisC,GAAqB,GACtExqC,EAAAA,EAAAA,GAAe9e,KAAKqI,MAAM4lE,aAAc,CAACxqE,MAAAA,EAAOgmB,IAAAA,EAAKpM,OAAAA,EAAQisC,IAAAA,QAfL,gCAkBvC,WAKyB,IAJ1C+C,SAAUhvC,EADQ,MAElB5Z,EAFkB,IAGlBgmB,EAHkB,IAIlB6/B,GAC0C,uDAAP,GACnC,MAAM4kB,EAAc,CAClB7wD,OAAAA,EACA5Z,MAAAA,EACAgmB,IAAAA,EACA6/B,IAAAA,IAGFmD,EAAAA,EAAAA,IAAeyhB,EAAa,EAAK7lE,MAAM6b,OAAQ,EAAKiqD,qBACpDrvD,EAAAA,EAAAA,GAAe,EAAKzW,MAAM+lE,aAAcF,OAhCgB,wCAmC9BxvD,KAC1Bq6C,EAAAA,EAAAA,GAAmBr6C,EAAc1e,KAAKqI,MAAM6b,OAAQlkB,KAAKmuE,qBACzDrvD,EAAAA,EAAAA,GAAe9e,KAAKqI,MAAMgmE,qBAAsB3vD,OArCQ,oCAwClCjlB,IACtBuG,KAAKwN,SAAS,CAAC/T,SAAAA,KACfqlB,EAAAA,EAAAA,GAAe9e,KAAKqI,MAAMimE,iBAAkB70E,OA1CY,oCA6ClCA,KAEtB80E,EAAAA,EAAAA,IAAe90E,GAAY,GAAIuG,KAAKqI,MAAM6b,OAAQ,IAC7ClkB,KAAKmuE,mBACRzvD,aAAc,KAEhB1e,KAAKwN,SAAS,CAAC/T,SAAU,QACzBqlB,EAAAA,EAAAA,GAAe9e,KAAKqI,MAAMmmE,iBAAkB/0E,OApDY,6BAuD1C,KACd,MAAM,aAAC1C,EAAD,SAAe6J,GAAYZ,KAAKqI,MACtC,OACE,QAAComE,EAAD,WACE,QAAC,IAAD,CAASr9D,OAAO5gB,EAAAA,EAAAA,GAAE,yBAA0Bu1B,SAAS,SAArD,UACE,QAAC,EAAD,CACE,eAAa,iBACbvT,GAAK,kBAAiBzb,EAAaf,eAAe4K,EAASqV,SAF7D,UAIE,QAAC,KAAD,CAAW6uB,UAAU,OAAOp8B,KAAK,iBAhEe,oCAuElCxL,GAAAA,EACtB,CAAC+jB,EAAUpxB,KACToxB,EAASjhB,KAAKoI,MAAM4lE,YAAan+E,KAEnC,IACA,CAAC6+E,SAAS,EAAMC,UAAU,MA5E8B,+BA+EvCzxE,GAAAA,EAAS,CAAC+jB,EAAU+sD,EAAan+E,KAK9CmQ,KAAKoI,MAAM4lE,cAAgBA,IAC7Bn+E,EAAQ2B,QAAS,GAEnByvB,EAAS+sD,EAAan+E,GACtBmQ,KAAKwN,SAAS,CACZwgE,YAAAA,MAED,MAEHnnE,SAAS,MACP,MAAM,UACJ+J,EADI,mBAEJg+D,EAFI,iBAGJlF,EAHI,aAIJmF,EAJI,uBAKJC,EALI,gBAMJx3D,EANI,aAOJvgB,EAPI,aAQJg4E,EARI,aASJC,EATI,iBAUJC,EAVI,wBAWJC,EAXI,eAYJC,EAZI,kBAaJC,EAbI,oBAcJC,EAdI,wBAeJC,EAfI,qBAgBJC,EAhBI,cAiBJC,EAjBI,qBAkBJC,EAlBI,gCAmBJC,EAnBI,sBAoBJC,EApBI,iBAqBJC,EArBI,oBAsBJC,EAtBI,gBAuBJC,GACE9vE,KAAKqI,OAEH,OAACgV,EAAD,MAAS5Z,EAAT,IAAgBgmB,EAAhB,IAAqB6/B,GAAOtpD,KAAKqI,MAAMsU,UAAUS,UAAY,GAC7D2yD,GAAgBH,MAAAA,GAAA,UAAAA,EAAkBxyD,gBAAlB,eAA4BC,SAAU8M,EAAAA,GAEtDnF,EAAmB6pD,EACrB,CAAC1hD,SAAS0hD,EAAaz/E,GAAI,KAC3B4Q,KAAKqI,MAAMsU,UAAUljB,SAEzB,OACE,QAAC+R,EAAD,CAAQoF,UAAWA,EAAnB,WACE,QAAC,EAAD,WACGy+D,GAAuBrvE,KAAKgwE,iBAC7B,QAAC,IAAD,CACE5/E,MAAO2G,EAAaf,KACpBs2B,MApRc,GAqRdvQ,MAAO0zD,EAHT,SAKG,IAA6C,IAA5C,SAACh2E,EAAD,QAAWO,EAAX,SAAoBinB,EAApB,SAA8BgvD,GAAc,EAC5C,MAAMC,EAAoC,CACxCna,SAAU,IAA6C,IAA5C,aAACoa,EAAD,aAAeC,EAAf,UAA6BC,GAAe,GAIlDJ,GACDI,EAAYF,GAAgBC,EAAeD,GAC3Cn2E,GAEAgG,KAAKswE,sBAAsBrvD,EAAU,CAACzvB,QAAQ,KAGlD++E,eAAgBv3C,IACdh5B,KAAKwwE,iBAAiBvvD,EAAU+X,EAAM5sB,OAAOmM,MAAO,CAClD/mB,QAAQ,KAGZi/E,UAAWR,EACXS,WAAW,GAEb,OACE,QAAC,IAAD,CACE35E,aAAcA,EACd63E,mBAAoBA,EACpBC,aAAcA,EACdM,eACE73D,EAAmB7d,EAAyB01E,EAE9CL,uBAAwBA,EACxBM,kBAAmBA,EACnB72D,MAAOvY,KAAKoI,MAAM3O,UAAYuG,KAAKqI,MAAMsU,UAAUljB,SACnDuf,SAAUhZ,KAAK2wE,qBACfC,cAAe5wE,KAAK6wE,qBACpBnB,gCAAiCA,KAC5Bp4D,EAAkB44D,EAAoC,GAC3Db,oBAAqBA,EACrBC,wBAAyBA,EACzBC,qBAAsBA,EACtBuB,cAAenB,UAOxBT,IACC,QAAC,EAAApjE,SAAD,YACE,QAAC,EAAD,KACA,QAAC,EAAD,WACE,QAAC,IAAD,CACE/U,aAAcA,EACd0C,SAAUuG,KAAKqI,MAAM5O,SACrB6d,gBAAiBA,EACjB0N,iBAAkBA,EAClB0kD,iBAAkBA,EAClBnxD,MAAOvY,KAAKqI,MAAMsU,UAAU+B,aAC5BxH,SAAUlX,KAAK+wE,gCAMtB9B,IACC,QAAC,EAAAnjE,SAAD,YACE,QAAC,EAAD,KACA,QAAC,EAAD,WACE,QAAC,IAAD,CAEEijE,aAAcA,EACdC,aAAcA,EACd3iB,SAAUhvC,EACV5Z,MAAOA,EACPgmB,IAAKA,EACL6/B,IAAKA,EACLtwC,SAAUhZ,KAAKgxE,iBACf95D,SAAUlX,KAAKixE,iBACfl6E,aAAcA,EACdg5E,cAAeA,EACfpE,KAAM6D,EACN0B,gBAAiBrB,EACjBC,gBAAiBA,GAbX,UAASzyD,WAAgB5Z,SAAagmB,SAAW6/B,mBAAqBymB,WAmBlFb,IAA2B,QAAC,EAAD,CAAoBrB,UAAQ,KACvDoB,IAAoB,QAAC,EAAD,CAAoBpB,UAAQ,QAhOpDE,EAAAA,YAAAA,yB,OAAAA,EAAAA,eA7Ie,CAInBmB,yBAAyB,EAKzBD,kBAAkB,EAMlB/iB,oBAAqB,GAKrBwjB,iCAAiC,IA+VnC,SAAeh8C,EAAAA,EAAAA,GAAgBq6C,GAEzBU,GAAoB,OAAO,MAAP,qBAAH,uEAKbj6E,EAAAA,EAAAA,GAAM,GALO,KAQjBgX,GAAS,OAAO,MAAP,qBAAH,kFAMiBjD,GAAKA,EAAEzY,MAAM0Y,QAN9B,gBAOID,GAAKA,EAAEzY,MAAMkwE,iBAPjB,aAQCz3D,GAAKA,EAAEzY,MAAM4c,OAAOykE,uBARrB,gBAUI5oE,GAAKA,EAAEzY,MAAMshF,kBAVjB,eAWG7oE,GAAKA,EAAEzY,MAAM4nC,oBAXhB,wBAYWnvB,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAZpC,oBAY4DlU,GAClEA,EAAEzY,MAAMirB,YAAYqL,QAbd,+CAgBgB7d,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAhBzC,2B,4HC7VZ,SAASvQ,EAAT,GAAkE,IAA/C,iBAACmlE,EAAD,SAAmBjoE,KAAaf,GAAe,EAChE,MAAM,SACJzH,EADI,OAEJsjB,EAFI,aAGJ2qD,EAHI,aAIJ93E,EAJI,iBAKJ64E,EALI,aAMJb,EANI,mBAOJH,EAPI,qBAQJa,EARI,iBASJp+D,EATI,wBAUJigE,GACEjpE,GAEE,QAACwwD,IAAWzM,EAAAA,EAAAA,MAEZ,SAAC3yD,EAAUuiB,gBAAiB48C,IAAkBv0C,EAAAA,EAAAA,MAE9C,YAAC7hB,GAAe5S,EAAAA,EAAAA,IAAgB,QAChC2hF,EAAax6E,EAAawrB,OAAO3kB,SAAS,aAC1C4zE,GAAwBz6E,EAAa+hB,SAASlb,SAAS,gBAEvD6zE,EAAoBhC,EACtBh2E,EAASgB,QAAOkD,GAAW8xE,EAAqB7xE,SAASD,EAAQ3H,QACjEyD,GAEG01E,EAAgBuC,GAAiBv6C,GAAAA,CACtCs6C,GACA9zE,GAAWA,EAAQ04B,WAKfs7C,EAAkB,CACtBr6D,iBAAkBshD,EAClBn/D,SAAAA,EACA01E,eAAAA,EACAC,kBANwB5sE,GAAe+uE,EAAaG,EAAgB,IAShEE,EAAmB,KACvBC,EAAAA,EAAAA,IAAmB,CACjB96E,aAAAA,EACA+6E,YAAalxE,EAASlQ,MACtBwzB,OAAAA,EACAmtD,iBAAAA,EACAlC,eAAAA,EACAS,iBAAAA,EACAf,aAAAA,EACAD,mBAAAA,EACAmD,2BAA4BP,EAC5BzC,aAAAA,EACAuC,wBAAAA,KASJnnE,EAAAA,EAAAA,YAAU,MAGHyuD,IAAmBgW,IAAsB4C,IAI9CI,MACC,CAAChZ,EAAgBgW,EAAoB4C,IAExC,MAAMQ,GAAY/nE,EAAAA,EAAAA,QAAOrJ,EAASlQ,OA6DlC,OAzDAyZ,EAAAA,EAAAA,YAAU,KAAM,QACd,GAAIvJ,EAASlQ,QAAUshF,EAAU5nE,QAC/B,OAMF,MAAM6nE,GAAoBjlD,EAAAA,EAAAA,IAA2BglD,EAAU5nE,SACzD8nE,GAAoBllD,EAAAA,EAAAA,IAA2BpsB,EAASlQ,OAK9D,GAAIu7C,GAAAA,CAAQimC,KAAuBh/D,GAAAA,CAAQ++D,EAAmBC,GAG5D,OAFAN,SACAI,EAAU5nE,QAAUxJ,EAASlQ,OAI/B,MAAMyhF,GAAWC,EAAAA,EAAAA,IAAkBJ,EAAU5nE,QAAS,CACpDioE,kBAAkB,EAClBC,uBAAuB,IAEnBv+C,GAAWq+C,EAAAA,EAAAA,IAAkBxxE,EAASlQ,MAAO,CACjD4hF,uBAAuB,EACvBC,mBAAkB,UAAE3C,MAAAA,GAAF,UAAEA,EAAkBxyD,gBAApB,aAAE,EAA4BC,cAA9B,QAAwC8M,EAAAA,KAGtDqoD,EAAkBz+C,EAAStV,aAAe,GAC1Cg0D,GAAeC,EAAAA,EAAAA,IAAqB3+C,GACpC4+C,GAAeD,EAAAA,EAAAA,IAAqBP,GAEpCS,EAAkB1/D,GAAAA,CAAQi/D,EAASx0E,QAASo2B,EAASp2B,SACrDk1E,EAAsB3/D,GAAAA,CAAQi/D,EAAS1zD,YAAasV,EAAStV,aAC7Dq0D,EAAmB5/D,GAAAA,CAAQy/D,EAAcF,GAI1CG,IACHrE,EAAAA,EAAAA,IAAex6C,EAASp2B,SAAW,GAAI,KAAM,CAAC+gB,aAAc8zD,IAK1DI,IAAoBC,IACtB9Z,EAAAA,EAAAA,GAAmByZ,GAGhBM,IACHrmB,EAAAA,EAAAA,IAAegmB,GAGjBT,EAAU5nE,QAAUxJ,EAASlQ,QAC5B,CAACkQ,EAASlQ,QAGRmoE,GAKH,QAAC,EAAA/sD,SAAD,YACIuF,IAAoB,QAAC,EAAD,IAA2BhJ,KAAWspE,IAC3DtgE,IAAoB,QAACi8D,EAAD,CAAqBppD,OAAQA,IACjD9a,MAPI,QAAC,KAAD,IArIF8C,EAAAA,YAAAA,YAiJT,MAEA,GAF6BmoB,EAAAA,EAAAA,IAAiBkF,EAAAA,EAAAA,YAAWrtB,K,qPCnMzD,SAAe,OAAO6mE,EAAAA,EAAP,qBAAf,mDAIIxqE,GACAA,EAAE8kD,aACD,iFAKqB9kD,EAAEzY,MAAMkjF,mCACZzqE,EAAEzY,MAAM69E,yBAZ9B,M,mjBCKA,SAASnC,EAAT,GAA+D,IAAlC,OAAC/wE,EAAD,KAASiO,EAAT,UAAekI,GAAmB,EAC7D,MAAM7Z,GAAeoa,EAAAA,EAAAA,MACf,cAAC8hE,IAAiB7mB,EAAAA,EAAAA,KAClB8mB,EAASD,EAAc7/E,IAAIqH,GAWjC,OACE,QAAC04E,EAAD,CACEviE,UAAWA,EACX,eAAcsiE,EACd,cAAY1iF,EAAAA,EAAAA,GAAE,eACd6Y,QAdU,MACZ+hB,EAAAA,EAAAA,GAA4B,yBAA0B,CACpDr0B,aAAAA,EACA0D,OAAAA,EACA24E,KAAMF,KAERG,EAAAA,EAAAA,IAAU54E,GAASy4E,IASjBxqE,KAAMA,EACNwqE,OAAQA,EACRvwD,WAAqB,SAATja,EACZC,MAAM,QAAC,KAAD,CAAU45B,QAAS2wC,EAAQxqE,KAAK,OACtC0I,OAAO5gB,EAAAA,EAAAA,GAAE,uEACTozD,aAAc,CAACthC,MAAO,KAVxB,SAYG4wD,GAAS1iF,EAAAA,EAAAA,GAAE,WAAYA,EAAAA,EAAAA,GAAE,UA3BvBg7E,EAAAA,YAAAA,sBAgCT,MAAM2H,GAAY,OAAOzgE,EAAAA,GAAP,qBAAH,wBAEJnK,GAAKA,EAAEzY,MAAM6tB,WAFT,kBAKFpV,GAAKA,EAAEzY,MAAMu9C,cALX,MAOX9kC,GAAgB,SAAXA,EAAEG,MAAmB,2BAPf,KAUf,K,yYC/CA,SAAS4qE,EAAT,GAA2D,IAA3B,SAAClqE,EAAD,OAAW3O,GAAgB,EACzD,MAAM,cAACw4E,IAAiB7mB,EAAAA,EAAAA,KAClB8mB,EAASD,EAAc7/E,IAAIqH,GAEjC,OACE,QAAC4rD,EAAD,WACGj9C,EACA8pE,IACC,QAACK,EAAD,CAAe,aAAW,8BAA1B,UACE,QAACC,EAAD,CAAgB9qE,KAAK,KAAK65B,SAAO,SATlC+wC,EAAAA,YAAAA,yBAgBT,UAEMjtB,GAAO,OAAO,MAAP,qBAAH,4EAIiB7xD,EAAAA,EAAAA,GAAM,KAJvB,MAOJ++E,GAAgB,OAAO,MAAP,qBAAH,wGAMGhrE,GAAKA,EAAEzY,MAAM+Y,YANhB,aAQNrU,EAAAA,EAAAA,GAAM,KARA,4DAebg/E,GAAiB,OAAOlH,EAAAA,GAAP,qBAAH,qCAGT/jE,GAAKA,EAAEzY,MAAM6tB,WAHJ,M,mYCvCb,SAAS81D,IAQd,MAAO,CACLh6E,SAAU,GACVilB,aAAc,GACdtB,SAVe,CACf3Z,MAAO,KACPgmB,IAAK,KACLpM,OAAQ8M,EAAAA,GACRm/B,IAAK,OAeF,SAASt8B,EAA2Bt8B,GACzC,OAAOo5B,GAAAA,CAAO4pD,GAAAA,CAAKhjF,EAAO6M,OAAOC,OAAOm2E,EAAAA,KAAa7kF,KAkBhD,SAAS8kF,EAAiBj3D,EAAwBk3D,GAA6B,YACpF,SACG3gE,GAAAA,CAAQyJ,EAAUljB,SAAUo6E,EAAMp6E,YAClCyZ,GAAAA,CAAQyJ,EAAU+B,aAAcm1D,EAAMn1D,gBAOvC/B,EAAUS,SAASC,SAAWw2D,EAAMz2D,SAASC,SAC7C,UAAAV,EAAUS,SAAS3Z,aAAnB,eAA0B0B,eAA1B,UAAyC0uE,EAAMz2D,SAAS3Z,aAAxD,aAAyC,EAAsB0B,cAC/D,UAAAwX,EAAUS,SAASqM,WAAnB,eAAwBtkB,eAAxB,UAAuC0uE,EAAMz2D,SAASqM,WAAtD,aAAuC,EAAoBtkB,c,yzCChC/D,MAAM2uE,EAAwB,IASjB,IATkB,SAC7BC,EAD6B,gCAE7BrE,EAF6B,WAG7BvhB,EAH6B,QAI7B6lB,EAJ6B,kBAK7BC,EAL6B,iBAM7BC,EAN6B,aAO7Bn9E,EAP6B,QAQ7BrF,GACW,EAEX,GAAIg+E,IAAoCvhB,IAAez8D,EACrD,OAAO,KAIT,MAAMyiF,EAAsC,UAAtBp9E,EAAauV,MAA0C,YAAtBvV,EAAauV,KAC9D8nE,EAAoBr9E,EAAa+hB,SAASlb,SAAS,mBACnDy2E,EAAcN,GAAYA,EAAS3gF,IAAIg3E,EAAAA,IAEvCkK,GAAsBH,GAAiBC,KAAuBC,EAC9DE,EAAiBD,EAAqBL,EAAoBC,EAC1DM,EAAaF,GACf9jF,EAAAA,EAAAA,GAAE,wBACFA,EAAAA,EAAAA,GAAE,sBAEAikF,EAAkB19E,EAAawrB,OAAO3kB,SAAS,iBAC/C82E,EAAiB,kBAAiB39E,EAAaf,qBAErD,OACE,QAAC2+E,EAAD,CAAiBC,aAAcljF,EAA/B,UACGA,IAAW,QAACmjF,EAAD,UAAgBnjF,KAC5B,QAACojF,EAAD,YACE,QAAC,KAAD,CACE,cAAYtkF,EAAAA,EAAAA,GAAE,eACdunB,UAAW08D,EACXjiE,GAAIkiE,EACJhsE,KAAK,SACLC,MAAM,QAAC,KAAD,CAASD,KAAK,KAAK86B,WAAS,IAClCpyB,MACGqjE,OAAoEniF,GAAlD9B,EAAAA,EAAAA,GAAE,8CAPzB,UAUGA,EAAAA,EAAAA,GAAE,cAEHk/E,IACA,QAAC,IAAD,CACE52D,SAAU,CAAC,8BACX/hB,aAAcA,EACd+gC,SAAS,iDACTi9C,gBAAgB,EAJlB,SAMG,IAA2D,IAA1D,oBAACC,EAAD,WAAsBj8D,GAAoC,EAE1D,OAAIi8D,EACKA,EAAoB,CACzBC,cAAeV,EACfD,mBAAAA,IAICv7D,GAKH,QAAC,KAAD,CAAQ6C,SAAS,UAAUlT,KAAK,SAASW,QAASkrE,EAAlD,SACGC,IALI,QAWdrmB,IACC,QAACse,EAAD,CAAcpjE,QAAS2qE,EAAStrE,KAAK,SAASkT,SAAS,UAAvD,UACGprB,EAAAA,EAAAA,GAAE,yBA3ETsjF,EAAAA,YAAAA,wBAmFN,UAEMa,GAAkB,OAAO,MAAP,sBAAH,iCAEApsE,GAAMA,EAAEqsE,WAAa,gBAAkB,YAFvC,KAKfE,GAAgB,OAAO,MAAP,sBAAH,uEAINtgF,EAAAA,EAAAA,GAAM,GAJA,WAKVA,EAAAA,EAAAA,GAAM,GALI,qBAQAA,EAAAA,EAAAA,GAAM,IARN,4BAebi4E,GAAe,OAAO/5D,EAAAA,GAAP,sBAAH,kBACEg6D,EAAAA,GADF,aAIZmI,GAAgB,OAAO,MAAP,sBAAH,cACJtsE,GAAKA,EAAEzY,MAAMqzC,eADT,aAEN3uC,EAAAA,EAAAA,GAAM,GAFA,KAEMA,EAAAA,EAAAA,GAAM,IAFZ,K,qTCpHnB,SAAS0gF,EAAT,GAOU,IAPmB,QAC3Bv3E,EAD2B,aAE3B5G,EAF2B,cAG3Bo+E,EAH2B,MAI3B9gB,GAAQ,EAJmB,WAK3B4C,EAAa,GALc,UAM3BkW,GAAY,GACJ,EACR,MAYMiI,EAAyB,IAMzB,IAN0B,SAC9BhsE,EAD8B,SAE9B0P,GAII,EACJ,OACE,QAAC,KAAD,CACEhV,MACE,QAAC,IAAD,CACEgV,SAAUA,EACVslC,gBAAc,EACdJ,aAAaxtD,EAAAA,EAAAA,GAAE,gCALrB,SASG4Y,KAKP,OACE,QAACisE,EAAD,CACEx1D,QAASstD,EACTnC,aArCiBhyC,IACnBA,EAAMvW,kBACN0yD,MAAAA,GAAAA,EAAgBx3E,EAASq7B,IAoCvBq7B,MAAOA,EACP0Y,eAAgB,QAAC,SAACF,GAAF,SACd,QAAC,IAAD,CACE/zD,SAAU,CAAC,8BACXgf,SAAS,6CACTi9C,eAAgBK,EAHlB,SAKGvI,KAVP,WAcE,QAACyI,EAAD,WACE,QAAC,IAAD,CACE33E,QAASA,EACTgyC,WAAY,GACZrmC,aAAa,QAAC,IAAD,CAAWpE,KAAM+xD,EAAjB,SAA8Bt5D,EAAQ3H,OACnDu/E,YAAa,CAACC,iBAAiB,GAC/BC,aAAW,OAGf,QAACC,EAAD,CACE/3E,QAASA,EACT5G,aAAcA,EACd4+E,SAxDwBl7D,KAC5Bq8B,EAAAA,EAAAA,IAAU,kCAAmC,CAC3CD,OAAQ1pB,SAASp2B,EAAa3H,GAAI,IAClCwmF,WAAYn7D,QAuDZ,QAACilC,EAAD,CACEltC,GAAK,kBAAiBzb,EAAaf,iBAAiB2H,EAAQ3H,iBAAiB2H,EAAQvO,KACrFsZ,KAAK,OACLkT,SAAS,OACT,aAAW,kBACXjT,MAAM,QAAC,KAAD,OAER,QAAC+2C,EAAD,CACEltC,GAAK,aAAYzb,EAAaf,iBAAiB2H,EAAQ3H,QACvD0S,KAAK,OACLkT,SAAS,OACT,aAAW,mBACXjT,MAAM,QAAC,KAAD,SAnFLusE,EAAAA,YAAAA,sBAyFT,UAEMI,GAAe,OAAO,MAAP,qBAAH,iFAOZ51B,GAAe,OAAOhtC,EAAAA,GAAP,qBAAH,UACPnK,GAAKA,EAAEzY,MAAM6zB,SADN,aAELnvB,EAAAA,EAAAA,GAAM,GAFD,KAEOA,EAAAA,EAAAA,GAAM,KAFb,KAEsBA,EAAAA,EAAAA,GAAM,GAF5B,KAEkCA,EAAAA,EAAAA,GAAM,GAFxC,+BAKL+T,GAAKA,EAAEzY,MAAM6tB,WALR,MASZ+3D,GAAiB,OAAOG,EAAAA,EAAP,sBACnBttE,IAAMA,EAAE5K,QAAQ8c,cAAgB,iBADhB,KAId46D,GAAmB,OAAOvI,EAAAA,EAAP,qBAAH,UACXptB,EADW,WACag2B,EADb,gBC7BtB,SAASI,EAAT,GAqBU,IArBe,qBACvBlpB,EADuB,uBAEvBkM,EAFuB,gCAGvB4W,EAHuB,cAIvBoB,EAJuB,aAKvBjC,EALuB,uBAMvBC,EANuB,SAOvBluE,EAPuB,qBAQvB2uE,GAAuB/+E,EAAAA,EAAAA,GAAE,QARF,eASvB2+E,EATuB,kBAUvBC,EAAoB,GAVG,cAWvBwB,EAXuB,SAYvB53D,EAZuB,aAavBjiB,EAbuB,OAcvBmtB,EAduB,mBAevB0qD,EAfuB,oBAgBvBS,EAhBuB,QAiBvB7hB,EAjBuB,wBAkBvB8hB,EAlBuB,MAmBvB/2D,KACGw9D,GACK,EAER,MAAO5nB,EAAY6nB,IAAiBprC,EAAAA,EAAAA,WAAS,GAIvCqrC,GAAehsE,EAAAA,EAAAA,QAAOsO,GAEtB0qD,GACHyM,GAAmC34E,EAAa+hB,SAASlb,SAAS,gBAO/Ds4E,EAAiBniF,IACrBiiF,GAAc,GACdpF,EAAc78E,IAmBVk2E,EAAqB8J,KACzB3oD,EAAAA,EAAAA,GAA4B,mCAAoC,CAC9DlpB,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,IAGF,MAAMhD,EAA2B,OAAhBggF,EAAS3kF,GAAc,GAAK,CAAC+9B,SAAS4mD,EAAS3kF,GAAI,KACpE4pB,EAASjlB,GACTmiF,EAAcniF,IAQVoiF,EAAc,KAEbhoB,KAIL/iC,EAAAA,EAAAA,GAA4B,yBAA0B,CACpDjL,MAAO5H,EAAM7d,OACbwH,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,EACAs9D,MAAO4O,IAGTiT,EAAc39D,GACd09D,EAAa7rE,QAAUmO,IAQnByxD,EAAc,MAClB5+C,EAAAA,EAAAA,GAA4B,wBAAyB,CACnDlpB,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,IAGFiiB,EAAS,IACTk9D,EAAc,KAGVxwC,EAAc,IAAIypC,KAAmBC,GACrChrD,GAAqBtC,EAAAA,EAAAA,UAAQ,IAAM,IAAI9kB,IAAIub,IAAQ,CAACA,IAEpDw7D,EAAWruC,EAAYjrC,QAAOkD,GAClCymB,EAAmBhxB,IAAI+5B,SAASxvB,EAAQvO,GAAI,OAK9C,GAAIw/E,EAAoB,CACtB,MAAMwH,EACJvH,GAAgBQ,GAAuBpM,GACrC,QAAC,IAAD,CAAS7xD,OAAO5gB,EAAAA,EAAAA,GAAE,iBAAkBu1B,SAAS,SAA7C,UACE,QAACswD,EAAD,CACE7jE,GAAI,CACF3R,SAAW,kBAAiB9J,EAAaf,eACzCtF,MAAO,IAAIkQ,EAASlQ,MAAOiN,QAASkxE,EAAaz/E,KAHrD,SAMGy/E,EAAa74E,SAGhB64E,EACFA,EAAa74E,KAEb,GAGEy1E,EAAgBoD,GAClBr7E,EAAAA,EAAAA,IAAI,wDAAyD,CAC3D8iF,QAAS/G,EACTxwE,YAAa8vE,EAAa74E,QAE5BxC,EAAAA,EAAAA,IAAI,wCAAyC,CAAC8iF,QAAS/G,IAE3D,OACE,QAAChF,EAAD,CACE,eAAa,+BACb5hE,KACEkmE,IACE,QAAC,IAAD,CACE0H,UAAW1H,EAAaxvE,SAAW,CAACwvE,EAAaxvE,UAAY,GAC7DikB,IAAK,IAIXknD,QAAM,EACNiB,cAAeA,EACfC,aACGmD,GACCS,GACC,aAAYv4E,EAAaf,iBAAiB64E,EAAa74E,cAC1D1D,EAhBJ,SAmBG8jF,IAKsB,MAA7B,IAAKtH,EACH,eAAQ,GACN,QAAC,EAAAhjE,SAAD,UAAWgtD,WADb,SAEI,QAACyR,EAAD,CACE,eAAa,uCACb5hE,MAAM,QAAC,KAAD,IACNiK,SAAO,EAHT,UAKGpiB,EAAAA,EAAAA,GAAE,cAMX,MAAMgmF,GAAY74E,GAAqB,EACpCs4E,EAAa7rE,QAAQxM,SAASuvB,SAASxvB,EAAQvO,GAAI,MACnDuO,EAAQ8c,aACT9c,EAAQ3H,MAGJyD,GAAW6yC,GAAAA,CAAO6iC,EAAgBqH,IAClC9E,GAAgBplC,GAAAA,CAAO8iC,EAAmBoH,IAE1CC,GAAqB94E,IACzB,MAAM+4E,EAAsB,IAAIrkF,IAAI0hF,EAAS18E,KAAIkR,GAAK,CAACA,EAAEvS,KAAMuS,MAE3DmuE,EAAoBtjF,IAAIuK,EAAQ3H,MAElC0gF,EAAoB1oD,OAAOrwB,EAAQ3H,MAEnC0gF,EAAoBnyE,IAAI5G,EAAQ3H,KAAM2H,IAGxCytB,EAAAA,EAAAA,GAA4B,yBAA0B,CACpDp5B,OAAQ+hF,EAASr5E,OAAS6d,EAAM7d,OAAS,QAAU,UACnDwH,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,IAGF,MAAM4/E,EAAe,IAAID,EAAoBl5E,UAC1CnG,KAAI,QAAC,GAACjI,GAAF,SAAU+9B,SAAS/9B,EAAI,OAC3BqL,QAAO03B,GAAKA,IAEfnZ,EAAS29D,GACTX,GAAc,IAGVY,GAAkBj5E,IAAD,CACrBuY,KAAMvY,EACNotE,UAAWptE,EAAQ3H,KACnBrD,MAAO,QAAC,WAACskE,GAAF,SACL,QAAC,EAAD,CACEt5D,QAASA,EACT5G,aAAcA,EACds9D,MAAO4O,EACPhM,WAAYA,EACZkW,YAAa4G,EAAS58E,MAAK,QAAC,KAACnB,GAAF,SAAYA,IAAS2H,EAAQ3H,QACxDm/E,cAAesB,QAOfp6D,GAFgB5iB,MAAAA,IAAAA,GAAUiB,QAAYg3E,MAAAA,IAAAA,GAAeh3E,OAIvD,CACE,CACEm8E,gBAAgB,EAChBx6D,MAAO5iB,GAASpC,IAAIu/E,KAEtB,CACEC,eAAyC,IAAzBnF,GAAch3E,OAC9B06D,SAAU,QACVhmE,GAAI,uBACJuD,OAAO,QAACy6E,EAAD,WAAQ58E,EAAAA,EAAAA,GAAE,gCACjB6rB,MAAOq1D,GAAcr6E,IAAIu/E,MAX7B,GAeJ,OACE,QAAC,KAAD,UACG,QAAC,IAACrqE,GAAF,SACC,QAACuqE,EAAD,IACMf,EACJnhB,aAAa,EACbD,mBAAmBnkE,EAAAA,EAAAA,GAAE,mBACrBmoB,SAAUwZ,GAAK83C,EAAkB93C,EAAEjc,MACnCphB,QAASqhF,EACT1hB,UAAW,IACXK,SAAU,IACVW,WAAY,CAAC3qD,MAAO,CAAC0hC,QAAS,EAAG20B,YAAa,KAC9CzL,cAAenpD,CAAI;;YAGnBmoD,cAAclkE,EAAAA,EAAAA,GAAE,wBAChBglE,kBAAkBhlE,EAAAA,EAAAA,GAAE,qBACpB6kE,kBAAmBvlE,EAAAA,GAAAA,wBACnBwlE,uBAAwBxlE,EAAAA,GAAAA,0BACxBkmE,cACE,QAAC+gB,EAAD,UACGvpB,IACC,QAAC,IAAD,CAAaphD,OAAO,sBAAsB2Z,SAAS,SAAnD,UACE,QAAC,IAAD,CAAqBrd,KAAK,SAASjO,OAAO,iBAKlDq7D,WAAY,QAAC,QAACsB,GAAF,SACV,QAAC,EAAD,CACE2c,SAAU3vD,EACVsrD,gCAAiCA,EACjC34E,aAAcA,EACdo3D,WAAYA,EACZ6lB,QAAS,IAxOC5c,CAAAA,IACpBA,EAAQyT,QACRqL,EAAc39D,IAsOWyH,CAAao3C,GAC5B6c,kBAAmB,KACjBhK,EAAkB,CAAC76E,GAAIg7E,EAAAA,GAAAA,aACvBhT,EAAQyT,SACRz/C,EAAAA,EAAAA,GAA4B,uCAAwC,CAClE4rD,YAAa,MACb90E,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,KAGJm9E,iBAAkB,KAChBlK,IACA5S,EAAQyT,SACRz/C,EAAAA,EAAAA,GAA4B,uCAAwC,CAClE4rD,YAAa,KACb90E,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtCn9C,aAAAA,KAGJrF,QAASo/E,KAGbz0D,MAAOA,GACPsuD,kBAAgB,EAChBzU,eAAa,EAvDf,SAyDG,IAAuB,UAAtB,QAACkB,EAAD,OAAUl6B,GAAY,EACtB,GAAI0vB,EACF,OAAOA,EAAqB,CAC1BwK,QAAAA,EACApyC,iBAAkB+uD,EAClB72C,OAAAA,IAGJ,MAAMutC,IAAgBsJ,EAASr5E,OACzB0W,EAAQq5D,EACVsJ,EAAS18E,KAAI,QAAC,KAACrB,GAAF,SAAYA,KAAMmI,KAAK,MACpCimB,EAAmBhxB,IAAIg3E,EAAAA,KACvB55E,EAAAA,EAAAA,GAAE,iBACFA,EAAAA,EAAAA,GAAE,eACAmY,EAAO8hE,GACX,QAAC,IAAD,CACE8L,UAAWxC,EAAS18E,KAAIkR,IAAC,uBAAIA,EAAElJ,gBAAN,QAAkB,WAAS43E,UACpD3zD,IAAK,KAGP,QAAC,KAAD,IAGF,OACE,QAACinD,EAAD,CACE,eAAa,+BACb5hE,KAAMA,EACN8hE,YAAaA,EACbtc,WAAYA,EACZjxB,OAAQA,EACRkuC,QAASpB,EACTppB,WAAYqiB,EACZyI,aACsB,IAApBqI,EAASr5E,OACJ,aAAY3D,EAAaf,iBAA1B,UAA2C+9E,EAAS,UAApD,aAA2C,EAAa/9E,QACxD,GAXR,SAcGob,UAxVR0kE,EAAAA,YAAAA,kBAkWT,SAAev8C,EAAAA,EAAAA,YAAWu8C,GAEpBgB,GAA6B,OAAOxL,EAAAA,EAAP,sBAAH,qBACV/iE,GAAKA,EAAEzY,MAAM+Y,YADH,WAErBN,GAAKA,EAAEzY,MAAM6tB,WAFQ,KAI5BpV,IACCA,EAAE4kD,UACF,qEAGgB5kD,EAAEzY,MAAMy7E,2BATG,KAa1BhB,GAAmB,OAAOc,EAAAA,EAAP,sBAAH,2BAGlB9iE,GAAKA,EAAEiiE,QAAU,mBAHC,KAMhB6L,GAAa,OAAO58C,EAAAA,EAAP,sBAAH,UACLlxB,GAAKA,EAAEzY,MAAM6zB,SADR,mBAIHpb,GAAKA,EAAEzY,MAAM6zB,SAJV,MAQVypD,GAAQ,OAAO,MAAP,sBAAH,cACI7kE,GAAKA,EAAEzY,MAAMqzC,eADjB,WAEA56B,GAAKA,EAAEzY,MAAMk5B,SAFb,KAKL+tD,GAAe,OAAO,MAAP,sBAAH,0BAEJviF,EAAAA,EAAAA,GAAM,GAFF,SAGTA,EAAAA,EAAAA,GAAM,GAHG,mD,+xBC3dlB,MAAM0iF,GAAa,OACjB,cAAyBrvE,EAAAA,UAAwB,uDAChC,CACbsvE,SAAS,KAFoC,2BAiBjC,KACZn3E,KAAKwN,SAAS,CAAC2pE,SAAS,QAlBqB,0BAqBlC,KACXn3E,KAAKwN,SAAS,CAAC2pE,SAAS,OAjB1BC,wBASE,OAAQp3E,KAAKoI,MAAM+uE,QAWrBtwE,SACE,MAAM,UAAC+J,EAAD,MAAYnN,EAAZ,IAAmBgmB,EAAnB,SAAwB1R,EAAxB,cAAkCs/D,EAAlC,YAAiDC,GAAet3E,KAAKqI,MAC3E,OACE,eAAKuI,UAAWovC,GAAAA,CAAWpvC,EAAW,kBAAtC,WACE,yBACE,QAAC4nD,EAAD,CACEnnE,KAAK,OAELqxD,aAAcj/C,EACdmN,UAAU,qBACV,eAAa,YACbmH,SAAUA,EACVyP,QAASxnB,KAAKu3E,YACdnkB,OAAQpzD,KAAKw3E,WACbx+D,SAAUq+D,GAPL5zE,MAWT,yBACE,QAAC+0D,EAAD,CACEnnE,KAAK,OACLqxD,aAAcj5B,EAEd7Y,UAAU,qBACV,eAAa,UACbmH,SAAUA,EACVyP,QAASxnB,KAAKu3E,YACdnkB,OAAQpzD,KAAKw3E,WACbx+D,SAAUs+D,GANL7tD,UAhDA,qBAAH,qJAqEHlhB,GAAKA,EAAEzY,MAAM6zB,SArEV,0BA2EV60C,GAAQ,OAAO,QAAP,qBAAH,+DAIOjwD,GAAKA,EAAEzY,MAAM0wB,qBAJpB,sBAKajY,GAAKA,EAAEzY,MAAM0Y,QAL1B,WAMED,GAAKA,EAAEzY,MAAMk5B,SANf,sBAWX,I,iPCjFA,MAAMyuD,GAAkB7pE,EAAAA,EAAAA,OAAK,IAAM,oTAE7B8pE,EAAyB1lE,GAAexL,GAAAA,CAAOwL,GAAMq3C,QAAQ0D,OAAO,SAWpEjgD,EAAe,CACnBiiE,cAAc,EACdC,cAAc,EAIdc,gBAAiB6H,EAAAA,IAgDnB,MAAMC,UAAsB/vE,EAAAA,UAAwB,uDAGnC,CACbgwE,gBAAgB,EAChBC,cAAc,KALkC,qCAQzBC,IACvB,QApE6CzlF,IAoEvBylF,EApESp7D,UAqE7B,OAEF,MAAM,UAACA,GAAao7D,GACd,SAAC/+D,GAAYhZ,KAAKqI,OAClB,UAAC2vE,EAAD,QAAYC,GAAWt7D,EAI7B3D,EAAS,CACPvV,MAAOu0E,EACPvuD,IAJUwuD,GAAUC,EAAAA,EAAAA,IAAYD,GAAWA,QAhBG,iCAwB7BpuE,IAA2C,QAK9D,MAAMpG,EAAK,UAAGzD,KAAKqI,MAAM5E,aAAd,QAAuB,GAC5BgmB,EAAG,UAAGzpB,KAAKqI,MAAMohB,WAAd,aAAqBn3B,GACxB,SAAC0mB,EAAD,aAAWjiB,EAAX,OAAyBmtB,GAAUlkB,KAAKqI,MACxC8vE,EAAYtuE,EAAEuC,OAAOmM,MAE3B,IAAK4/D,KAAcC,EAAAA,EAAAA,IAAYD,GAG7B,OAFAn4E,KAAKwN,SAAS,CAACqqE,gBAAgB,SAC/B7+D,EAAS,CAACq/D,oBAAoB,IAGhC,MAAMC,GAAUC,EAAAA,EAAAA,IAAc90E,EAAO00E,EAAW,CAAC9uB,OAAO,KAExDvS,EAAAA,EAAAA,IAAU,4BAA6B,CACrC0hC,cAAe,QACfhwC,KAAM2vC,EACNj2E,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpC4pB,EAAS,CACPvV,MAAO60E,EACP7uD,IAAAA,EACA4uD,mBAAoBr4E,KAAKoI,MAAM0vE,eAGjC93E,KAAKwN,SAAS,CAACqqE,gBAAgB,QAtDiB,+BAyD/BhuE,IAA2C,QAC5D,MAAMpG,EAAK,UAAGzD,KAAKqI,MAAM5E,aAAd,aAAuBnR,EAC5Bm3B,EAAG,UAAGzpB,KAAKqI,MAAMohB,WAAd,QAAqB,IACxB,aAAC1yB,EAAD,SAAeiiB,EAAf,OAAyBkL,GAAUlkB,KAAKqI,MACxCowE,EAAU5uE,EAAEuC,OAAOmM,MAEzB,IAAKkgE,KAAYL,EAAAA,EAAAA,IAAYK,GAG3B,OAFAz4E,KAAKwN,SAAS,CAACsqE,cAAc,SAC7B9+D,EAAS,CAACq/D,oBAAoB,IAIhC,MAAMC,GAAUC,EAAAA,EAAAA,IAAc9uD,EAAKgvD,EAAS,CAACpvB,OAAO,KAEpDvS,EAAAA,EAAAA,IAAU,4BAA6B,CACrC0hC,cAAe,MACfhwC,KAAMiwC,EACNv2E,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASp2B,EAAa3H,GAAI,MAGpC4pB,EAAS,CACPvV,MAAAA,EACAgmB,IAAK6uD,EACLD,mBAAoBr4E,KAAKoI,MAAMyvE,iBAGjC73E,KAAKwN,SAAS,CAACsqE,cAAc,OAG/BjxE,SAAS,QACP,MAAM,UAAC+J,EAAD,gBAAYk/D,EAAZ,IAA6BxmB,EAA7B,eAAkCovB,EAAlC,YAAkDC,EAAlD,MAA+D7oF,GACnEkQ,KAAKqI,MACD5E,EAAK,UAAGzD,KAAKqI,MAAM5E,aAAd,QAAuB,GAC5BgmB,EAAG,UAAGzpB,KAAKqI,MAAMohB,WAAd,QAAqB,GAExB0uD,EAAYT,EAAsB,IAAI51B,KAAKr+C,IAC3Cg1E,EAAUf,EAAsB,IAAI51B,KAAKr4B,IASzCmvD,GAAUC,EAAAA,EAAAA,IACd,QACC/I,MAAAA,EAAAA,EAAmB6H,EAAAA,IAAqB,GAErCmB,EAAU,IAAIh3B,KAEpB,OACE,eAAKlxC,UAAWA,EAAW,eAAa,aAAxC,WACE,QAAC,EAAAC,SAAD,CACErZ,UACE,QAAC,IAAD,CAAaunC,MAAM,QAAQD,OAAO,QAAlC,UACE,QAAC,IAAD,MAHN,UAOE,QAAC24C,EAAD,CACEsB,YAAa,CAACjpF,EAAMm2C,WACpB+yC,OAAQ,CACN,CACEhB,UAAWxxE,GAAAA,CAAO/C,GAAO4lD,QAAQ4vB,SACjChB,QAASzxE,GAAAA,CAAOijB,GAAK4/B,QAAQ4vB,SAC7BnvE,IAAK,cAGT8uE,QAASA,EACTE,QAASA,EACT9/D,SAAUhZ,KAAKk5E,0BAGlBR,IACC,QAACS,EAAD,YACE,QAAC,EAAD,CACE11E,MAAO00E,EACP1uD,IAAKgvD,EACLpB,cAAer3E,KAAKo5E,kBACpB9B,YAAat3E,KAAKq5E,mBAEpB,QAACC,EAAD,YACG9oF,EAAAA,EAAAA,GAAE,YACH,QAAC,IAAD,CACEwoB,SAAU2/D,EACV94D,QAASypC,IAAO,EAChBx+C,MAAO,CACL21D,OAAQ,2BAlJpBmX,EAAAA,YAAAA,iB,OAAAA,EAAAA,eACkB9qE,GA4JxB,MAAMysE,GAAY,QAAOC,EAAAA,EAAAA,IAAUjgD,EAAAA,EAAAA,YAAWq+C,IAA5B,sBAAH,6DAGYrvE,GAAKA,EAAEzY,MAAM0Y,QAHzB,KAMT2wE,GAAmB,OAAO,MAAP,sBAAH,4CAGT3kF,EAAAA,EAAAA,GAAM,KAHG,KAGMA,EAAAA,EAAAA,GAAM,GAHZ,0BAII+T,GAAKA,EAAEzY,MAAMm5B,aAJjB,KAOhBqwD,GAAY,OAAO,MAAP,sBAAH,UACJ/wE,GAAKA,EAAEzY,MAAMk5B,SADT,wFASf,K,kkCC/PA,SAASywD,EAAT,GAA0C,IAArB,MAACh2E,EAAD,IAAQgmB,GAAa,EACxC,SAAS0/B,EAAiBn3C,EAA0B+6C,GAClD,OAAOvmD,GAAAA,CAAOwL,GAAMq3C,QAAQ0D,OAAOA,GAGrC,SAAS2sB,EAAW1nE,GAClB,OAAOm3C,EAAiBn3C,EAAM,MAGhC,SAAS2nE,EAAW3nE,GAA+C,IAArB4nE,EAAqB,wDACjE,OAAOzwB,EAAiBn3C,EAAO,SAAO4nE,EAAc,MAAQ,KAG9D,MAAM/sB,EAAqB8sB,EAAWl2E,GAAO,GACvCqpD,EAAmB6sB,EAAWlwD,GAAK,GAGnCowD,EACJhtB,IAAuBG,EAAAA,IACvBF,IAAqBG,EAAAA,GAEvB,OACE,QAAC6sB,EAAD,CAAkBC,QAASF,EAA3B,WACE,QAACG,EAAD,WACE,QAAC,EAAD,CAAMD,QAASF,EAAf,UACGH,EAAWj2E,GACXo2E,IAAmB,QAACI,EAAD,UAAON,EAAWl2E,WAG1C,QAAC,EAAAqI,SAAD,YACE,QAACouE,EAAD,WAAmB1pF,EAAAA,EAAAA,GAAE,SAErB,QAACwpF,EAAD,WACE,QAAC,EAAD,CAAMD,QAASF,EAAf,UACGH,EAAWjwD,GACXowD,IAAmB,QAACI,EAAD,UAAON,EAAWlwD,gBAnCzCgwD,EAAAA,YAAAA,cA2CT,MAAMK,GAAmB,OAAO,MAAP,qBAAH,yDAGIvxE,GAAMA,EAAEwxE,QAAU,OAAS,KAH/B,MAMhBC,GAAY,OAAO,MAAP,qBAAH,gGAOTl4B,GAAO,OAAO,MAAP,sBACTv5C,GAAKA,EAAEwxE,SAAW,mBADZ,6DAOJE,GAAO,OAAO,MAAP,qBAAH,wEAMJC,GAAmB,OAAO,OAAP,qBAAH,aACR1lF,EAAAA,EAAAA,GAAM,IADE,KAItB,I,kRC1EA,MAkCM44E,GAAQ,OAAO,MAAP,sBAAH,gBACM54E,EAAAA,EAAAA,GAAM,IADZ,gBAEKA,EAAAA,EAAAA,GAAM,KAFX,mBAGQA,EAAAA,EAAAA,GAAM,KAHd,KCbL2lF,GAAgBtiD,EAAAA,EAAAA,GAAc,CAClCC,SAAU,8BACVC,iBAAkBwhD,EAAAA,UAGda,GAAoBviD,EAAAA,EAAAA,GAAc,CACtCC,SAAU,kCACVC,iBD5BoB,IAKT,IALU,SACrB3uB,EADqB,gBAErBixE,EAFqB,mBAGrBC,EAHqB,mBAIrBC,GACW,EACX,MAAMC,EAAcj9E,OAAO24B,QAAQmkD,MAAAA,EAAAA,EAAmBI,EAAAA,IAyBtD,OAAOrxE,EAvBe,IAChBkxE,EACAE,EAAYnjF,KAAI,CAAC,EAAoBoe,KAArB,IAAE8C,EAAOmiE,GAAT,QAAgC,CAC9CjlE,MAAAA,EACA8C,MAAAA,EACAwyD,UAAgC,iBAAd2P,EAAyBA,EAAYniE,EACvD5lB,OAAO,QAACy6E,EAAD,UAAQsN,IACf,eAAgBniE,MAElB,MACAgiE,EACA,CACE,CACE9kE,MAAO+kE,EAAY9/E,OACnB6d,MAAO,WACPwyD,UAAW,WACXp4E,OAAO,QAACy6E,EAAD,WAAQ58E,EAAAA,EAAAA,GAAE,mBACjB,eAAgB,aAGpB,QCcFsc,EAAe,CAInBiiE,cAAc,EAIdC,cAAc,EAKde,cAAe5lD,EAAAA,GAIfnR,SAAW,QAmGb,MAAM2hE,UAA0B1rB,EAAAA,cAG9BnvD,YAAYuI,GAGV,IAAI5E,EACAgmB,EAHJ6pB,MAAMjrC,IADkB,4BAiCX,CAAC+F,EAA6BgP,KACnB,mBAAbhP,IAINgP,EAAS3Z,OAAU2Z,EAASqM,IAMjCrb,EAAS,IACJgP,EACH3Z,OAAOm3E,EAAAA,EAAAA,IAAyBx9D,EAAS3Z,MAAOzD,KAAKoI,MAAMkhD,KAC3D7/B,KAAKmxD,EAAAA,EAAAA,IAAyBx9D,EAASqM,IAAKzpB,KAAKoI,MAAMkhD,OARvDl7C,EAASgP,QAvCa,+BAmDR,KAChB,MAAM,SAACivC,EAAD,MAAW5oD,EAAX,IAAkBgmB,EAAlB,IAAuB6/B,GAAOtpD,KAAKoI,MAErCpI,KAAKoI,MAAM+lD,WAEbnuD,KAAKggB,aAAa,CAACqsC,SAAAA,EAAU5oD,MAAAA,EAAOgmB,IAAAA,EAAK6/B,IAAAA,IAEzCtpD,KAAKwN,SAAS,CAAC0vB,QAAQ,QA1DD,4BA8DV9f,IACd,MAAM,SAAClG,GAAYlX,KAAKqI,MAExBrI,KAAKwN,SACH,CACE0vB,QAAQ,EACRixB,YAAY,IAEd,KACEnuD,KAAK66E,aAAa3jE,EAAUkG,UAvER,4BA4EVlH,IACK,aAAfA,EAAKqC,MAITvY,KAAK86E,qBAAqB5kE,EAAKqC,OAH7BvY,KAAK+6E,0BA9EiB,mCAoFJ,KACpB,MAAM,SAAC1uB,EAAD,SAAWrzC,EAAX,cAAqB+2D,EAArB,gBAAoCiL,EAApC,MAAqDv3E,EAArD,IAA4DgmB,GAAOzpB,KAAKqI,MAG9E,GAAI5E,GAASgmB,EACX,OAKF,MAAMwxD,EAA0B,CAC9B5uB,SAAU,KACV5oD,MAAOu3E,MAAAA,GAAAA,EAAiBv3E,MACpBu3E,EAAgBv3E,OAChBy3E,EAAAA,EAAAA,IACE,SACAC,EAAAA,EAAAA,IAAmB9uB,GAAY0jB,GAAiB5lD,EAAAA,KAChD8uD,SACNxvD,IAAKuxD,MAAAA,GAAAA,EAAiBvxD,IAAMuxD,EAAgBvxD,IAAM,IAAIq4B,OAGpD1+B,EAAAA,EAAAA,IAAQpjB,KAAKqI,MAAMihD,OACrB2xB,EAAY3xB,IAAMtpD,KAAKoI,MAAMkhD,KAG/BtpD,KAAKwN,SAAS,CACZ2gD,YAAY,KACT8sB,EACHx3E,MAAOw3E,EAAYx3E,MACnBgmB,IAAKwxD,EAAYxxD,MAEnBzpB,KAAK66E,aAAa7hE,EAAUiiE,OAnHJ,oCAsHF1iE,IACtB,MAAM,SAACS,GAAYhZ,KAAKqI,MAClB4yE,EAA0B,CAC9B5uB,SAAU9zC,EACV9U,WAAOnR,EACPm3B,SAAKn3B,GAEP0N,KAAKwN,SAASytE,GACdj7E,KAAK66E,aAAa7hE,EAAUiiE,GAC5Bj7E,KAAKggB,aAAai7D,OA/HM,2BAkIZ,KACZ,MAAM,SAACjiE,EAAD,cAAW+2D,GAAiB/vE,KAAKqI,MAEjC4yE,EAA0B,CAC9B5uB,SAAU0jB,GAAiB5lD,EAAAA,GAC3B1mB,WAAOnR,EACPm3B,SAAKn3B,EACLg3D,IAAK,MAEPtpD,KAAKwN,SAASytE,GACdj7E,KAAK66E,aAAa7hE,EAAUiiE,GAC5Bj7E,KAAKggB,aAAai7D,OA7IM,qCAgJF,IAIG,IAJF,MACvBx3E,EADuB,IAEvBgmB,EAFuB,mBAGvB4uD,GAAqB,GACI,EACzB,GAAIA,EAEF,YADAr4E,KAAKwN,SAAS,CAAC6qE,mBAAAA,IAIjB,MAAM,SAACr/D,GAAYhZ,KAAKqI,MAElB4yE,EAA0B,CAC9B5uB,SAAU,KACV5oD,MAAAA,EACAgmB,IAAAA,IAGErG,EAAAA,EAAAA,IAAQpjB,KAAKqI,MAAMihD,OACrB2xB,EAAY3xB,IAAMtpD,KAAKoI,MAAMkhD,KAG/BtpD,KAAKwN,SAAS,CAAC2gD,YAAY,EAAMkqB,mBAAAA,KAAuB4C,IACxDj7E,KAAK66E,aAAa7hE,EAAUiiE,OAvKJ,4BA0KX,KACb,MAAM,SAACjiE,EAAD,OAAWkL,GAAUlkB,KAAKqI,MAChC,IAAI,MAAC5E,EAAD,IAAQgmB,GAAOzpB,KAAKqI,MAExBrI,KAAKwN,UAASpF,IACZ,MAAMkhD,GAAOlhD,EAAMkhD,IAEd7lD,IACHA,GAAQm3E,EAAAA,EAAAA,IAAyBxyE,EAAM3E,MAAO2E,EAAMkhD,MAGjD7/B,IACHA,GAAMmxD,EAAAA,EAAAA,IAAyBxyE,EAAMqhB,IAAKrhB,EAAMkhD,OAGlDxS,EAAAA,EAAAA,IAAU,2BAA4B,CACpCwS,IAAAA,EACApnD,MAAM+xC,EAAAA,EAAAA,GAAyB/vB,EAAOgwB,QACtC2C,OAAQ1pB,SAASntB,KAAKqI,MAAMtR,aAAa3H,GAAI,MAG/C,MAAM6rF,EAAc,CAClB5uB,SAAU,KACV5oD,MAAO6lD,GAAM8xB,EAAAA,EAAAA,IAAiB33E,IAAS43E,EAAAA,EAAAA,IAAe53E,GACtDgmB,IAAK6/B,GAAM8xB,EAAAA,EAAAA,IAAiB3xD,IAAO4xD,EAAAA,EAAAA,IAAe5xD,GAClD6/B,IAAAA,GAIF,OAFAtpD,KAAK66E,aAAa7hE,EAAUiiE,GAErB,CACL9sB,YAAY,KACT8sB,UAzMiB,0BA8Mb,KACXj7E,KAAKwN,SAAS,CAAC0vB,QAAQ,IAEvB,4GA3MI70B,EAAM5E,OAAS4E,EAAMohB,MACvBhmB,GAAQ63E,EAAAA,EAAAA,IAAgBjzE,EAAM5E,MAAO4E,EAAMihD,KAC3C7/B,GAAM6xD,EAAAA,EAAAA,IAAgBjzE,EAAMohB,IAAKphB,EAAMihD,MAGzCtpD,KAAKoI,MAAQ,CAGXkhD,KAAKlmC,EAAAA,EAAAA,IAAQ/a,EAAMihD,KAAOjhD,EAAMihD,IAA4B,SAAtBiyB,EAAAA,EAAAA,MACtCr+C,QAAQ,EACRixB,YAAY,EACZkqB,oBAAoB,EACpB50E,MAAAA,EACAgmB,IAAAA,EACA4iC,SAAUhkD,EAAMgkD,UAIpBr5C,mBAAmBwoE,EAAYlqD,GAC7B,MAAM,iBAACmqD,GAAoBz7E,KAAKqI,MAC1BqzE,EAAY17E,KAAKoI,MAEnBqzE,GAAoBnqD,EAAU4L,SAAWw+C,EAAUx+C,QACrDu+C,EAAiBC,EAAUx+C,QAuL/Br2B,SACE,MAAM,cACJkpE,EADI,aAEJhB,EAFI,aAGJC,EAHI,aAIJj4E,EAJI,KAKJ40E,EALI,MAMJh5E,EANI,gBAOJu+E,EAPI,gBAQJpB,EARI,qBASJljB,EATI,SAUJO,EAVI,cAWJ9rC,EAXI,QAYJmsC,GACExtD,KAAKqI,OACH,MAAC5E,EAAD,IAAQgmB,EAAR,SAAa4iC,GAAYrsD,KAAKoI,MAE9BmyE,EAAqBxL,EACrBuL,EAAqBtL,EACrB2M,IAAuBl4E,KAAWgmB,EAElCwvC,EACJ0iB,GAAsBl4E,GAASgmB,GAC7B,QAAC,EAAD,CAAahmB,MAAOA,EAAOgmB,IAAKA,KAEhCmyD,EAAAA,EAAAA,GACEvvB,GAAY0jB,GAAiB5lD,EAAAA,GAC7B+mD,GAIN,OACE,QAACkJ,EAAD,CACEG,mBAAoBA,EACpBD,mBAAoBA,EACpBD,gBAAiBnJ,EACjB4J,qBAAsB96E,KAAK86E,qBAJ7B,SAMGz+D,IACC,QAAC,KAAD,UACG,QAAC,IAAC9P,GAAF,SACC,QAACm+D,EAAD,CACEC,kBAAgB,EAChB9V,UAAWxzC,MAAAA,EAAAA,EAAkBs6D,EAAqB,QAAU,OAC5Dz+C,OAAQl9B,KAAKoI,MAAM80B,OACnB+4B,OAAQj2D,KAAK67E,WACb/mF,QAASkL,KAAK87E,gBACd/mB,WAAYulB,EACZpkB,eAAe,EACftB,aAAa,EACbH,UAAW,IACXtH,SAAUA,EACV9wC,MAAOA,EACPs4C,mBAAmBnkE,EAAAA,EAAAA,GAAE,qBACrBklE,cAAenpD,CAAI;;;;kBAKnBypD,aACExI,GACE,QAACod,EAAD,CAAiBliE,KAAK,SAASjO,OAAO,kBACpCnI,EAENqmB,SAAU3Y,KAAK+7E,aACf5mB,SACEwmB,IACE,QAACK,EAAD,YACE,QAAC7B,EAAD,CACE12E,MAAOA,MAAAA,EAAAA,EAAS,KAChBgmB,IAAKA,MAAAA,EAAAA,EAAO,KACZ1yB,aAAcA,EACd2hF,gBAAc,EACdpvB,IAAKtpD,KAAKoI,MAAMkhD,IAChBtwC,SAAUhZ,KAAKk5E,sBACfP,YAAa34E,KAAKi8E,aAClBnM,gBAAiBA,KAEnB,QAACoM,EAAD,WACE,QAAC,IAAD,CACE1zD,SAAUxoB,KAAK87E,gBACf/jE,UACG/X,KAAKoI,MAAM+lD,YAAcnuD,KAAKoI,MAAMiwE,0BAzCnD,SAiDG,QAAC,OAACn7C,EAAD,cAASC,GAAV,SACCyvB,EACEA,EAAqB,CAACzvB,cAAAA,EAAeD,OAAAA,KAErC,QAACqtC,EAAD,CACE,eAAa,iCACb5hE,KAAMhW,MAAAA,EAAAA,GAAS,QAAC,KAAD,IACfuqC,OAAQA,EACRutC,cACKzqE,KAAKqI,MAAMgkD,UACZrsD,KAAKqI,MAAMgkD,WAAa0jB,GAC1B4L,EAEFxtB,WAAYnuD,KAAKoI,MAAM+lD,WACvBid,QAASprE,KAAKgqE,YACdppB,YAAU,EACV+qB,KAAMA,KACFxuC,IAbN,UAeGy8B,EAAAA,EAAAA,GAAe,CACdrhD,MAAO0gD,EACPc,MAAO,4BAtUzB4gB,EAAAA,YAAAA,qB,OAAAA,EAAAA,eACkB7tE,GAmVxB,MAAMghE,GAAgB,OAAO,MAAP,qBAAH,4CAIbpD,GAA6B,OAAOY,EAAAA,EAAP,qBAAH,cACjB/iE,GAAKA,EAAEzY,MAAMiZ,gBADI,gCAK5BR,IACCA,EAAE4kD,UACF,4CAEgB5kD,EAAEzY,MAAMy7E,2BATG,KAa1BhB,GAAmB,OAAOc,EAAAA,EAAP,qBAAH,uCAIhB2Q,GAAoB,OAAO,MAAP,qBAAH,8DAKjBE,GAAY,OAAO,MAAP,qBAAH,wBAEF1nF,EAAAA,EAAAA,GAAM,IAFJ,KAEYA,EAAAA,EAAAA,GAAM,GAFlB,0BAGW+T,GAAKA,EAAEzY,MAAMm5B,aAHxB,2BAIY1gB,GAAKA,EAAEzY,MAAM0Y,QAJzB,KAOToiE,GAAkB,OAAOY,EAAAA,EAAP,qBAAH,aACPh3E,EAAAA,EAAAA,GAAM,GADC,KAIrB,GAAe+kC,EAAAA,EAAAA,YAAWohD,I,iMCliB1B,MAQA,GARoB,OAAO,KAAP,uBAChBpyE,GAAKA,EAAEzY,MAAMoV,KAAKi3E,WADL,WAEN5zE,GAAKA,EAAEzY,MAAMu9C,cAFP,4BAIE9kC,GAAKA,EAAE6zE,cAAe5nF,EAAAA,EAAAA,GAAM,IAJ9B,gBAKD+T,GAAKA,EAAE6zE,cAAe5nF,EAAAA,EAAAA,GAAM,IAL3B,M,sXCKjB,MAKA,GALkB,OAAO,MAAP,sBACd+T,GAAKA,EAAE8zE,aAAgB,aAAW7nF,EAAAA,EAAAA,GAAM,MAD7B,IAEX8nF,EAAAA,EAFW,KCDf,GANoB,OAAO,MAAP,oBAAH,yBACS/zE,GAAKA,EAAEzY,MAAM0Y,QADtB,WAEND,GAAKA,EAAEzY,MAAM6zB,SAFP,oB,0bCKjB,MAYA,GAZmB,QAAO,WAAKtb,GAAL,SAAuB,QAAC,IAAD,IAAWA,EAAOgK,UAAQ,EAACsO,QAAM,MAA/D,qBAAH,iJ,2hBCkEhB,MAAM47D,EAAa,IAYI,IAZH,QAClBx4E,EADkB,SAElBqF,EAFkB,UAGlBuK,EAHkB,QAIlBs4B,EAJkB,eAKlBuwC,EALkB,UAMlB5rE,EANkB,aAOlB8jD,GAAelkE,EAAAA,EAAAA,GAAE,iCAPC,YAQlBisF,EARkB,OASlBC,EATkB,cAUlBC,GAAgB,KACbt0E,GACkB,EACrB,MAAMu0E,GAAkC,IAAdjpE,EACpBkpE,GAA0BD,GAAqB3wC,EAC/C6wC,GAAqBF,IAAsBC,EAEjD,OACE,QAAC/gE,EAAD,CACEihE,QAASh5E,EAAQrJ,OACjB8hF,eAAgBA,EAChB5rE,UAAWA,EACXosE,QAASF,KACLz0E,EALN,UAOGtE,EAAQ1M,KAAI,CAACoO,EAAQ0sB,KACpB,QAAC8qD,EAAD,CAA0BC,OAAQP,EAAlC,SACGl3E,GADoB0sB,KAKxByqD,IACC,QAACO,EAAD,UAAiBT,IAAU,QAAC,IAAD,MAG5BG,IACC,QAACO,EAAD,YACE,sBAAI1oB,IACH+nB,KAIJK,GAAqBO,EAAWj0E,OAKvC,SAASi0E,EAAWj0E,GAClB,MAAwB,mBAAbA,EACFA,IAGFA,EApDHmzE,EAAAA,YAAAA,aAgEN,MAAMY,GAAiB,OAAO,MAAP,qBAAH,IAEdC,GAAyB,OAAOE,EAAAA,EAAP,qBAAH,IAEtBxhE,GAAU,OAAO8iD,EAAAA,EAAP,CACdphC,kBAAmBj1B,GAAkB,iBAANA,IAAkB+0D,EAAAA,EAAAA,GAAY/0D,IAAY,YAANA,EADrD,oBAAH,8CAIqBA,GAAKA,EAAEw0E,SAJ5B,eAOPx0E,GAAMA,EAAEi0E,eAAiB,GAAM,aAAWhoF,EAAAA,EAAAA,GAAM,OAPzC,0BASc+T,GAAMA,EAAEy0E,QAAUz0E,EAAEw0E,QAAU,EAAI,GAThD,8BAUoBx0E,GAAKA,EAAEzY,MAAM0Y,QAVjC,OAcW40E,EAdX,KAc0DD,EAd1D,uCAgBkB50E,GAAKA,EAAEw0E,SAhBzB,oBAuBAE,GAAmB,OAAO,MAAP,qBAAH,UAClB10E,GAAKA,EAAEzY,MAAM6zB,SADK,eAEdpb,GAAKA,EAAEzY,MAAMqzC,eAFC,4DAKV56B,GAAKA,EAAEzY,MAAM2wB,cALH,KAKmBlY,GAAKA,EAAEzY,MAAM2wB,cALhC,oBAMblY,GAAKA,EAAEzY,MAAM0wB,qBANA,6FAazBjY,GACAA,EAAE20E,QACD,sDAGU30E,EAAEzY,MAAM4c,OAAOK,gBAlBD,KAsB7B,K,mQCrKA,MAAMwwE,EAAkB,IAGuB,IAHtB,QACvBtjD,EAAU,QADa,MAEvBnqC,GAC6C,EAC7C,MAAgB,UAAZmqC,EACM,8EAGcnqC,EAAM0Y,2QAatB,kEAGQ1Y,EAAM0tF,qGA+BxB,GAtBoB,QAAO,QAAC,UAAC5sE,EAAD,MAAY2H,GAAb,SACzB,eACEjM,KAAK,cACL,gBAAeiM,EACf,gBAAe,EACf,gBAAe,IACf3H,UAAWA,MANK,qBAAH,2EAcJrI,GAAKA,EAAEgQ,OAdH,uBAeOhQ,GAAKA,EAAEzY,MAAM2tF,aAfpB,uBAmBbF,EAnBa,M,yvCCyBjB,SAASG,EAAT,GAMU,IANiB,OACzBx5D,EADyB,qBAEzBurD,EAFyB,eAGzB9W,EAAiB,GAHQ,oBAIzBzM,EAAsB,MACnBqQ,GACK,EACR,MAAOohB,EAAyBC,IAA8BhzC,EAAAA,EAAAA,UAC5D,OAEI,SAACnxC,EAAUuiB,gBAAiB48C,IAAkBv0C,EAAAA,EAAAA,KAC9CttB,GAAeoa,EAAAA,EAAAA,MACf,UAACwL,EAAD,QAAYk8C,EAAZ,gBAAqB1M,IAAmBC,EAAAA,EAAAA,MAE9CjiD,EAAAA,EAAAA,YACE,KACO+I,GAAAA,CAAQyJ,EAAUljB,SAAUkkF,IAC/BC,EAA2BjhE,EAAUljB,YAMzC,CAACkjB,EAAUljB,WAGb,MAYMg4E,EAAoBhC,EACtBh2E,EAASgB,QAAOkD,GAAW8xE,EAAqB7xE,SAASD,EAAQ3H,QACjEyD,GAEG01E,EAAgBuC,GAAiBv6C,GAAAA,CACtCs6C,GACA9zE,GAAWA,EAAQ04B,YAGf,YAAC7zB,GAAe5S,EAAAA,EAAAA,IAAgB,QAChC2hF,EAAax6E,EAAawrB,OAAO3kB,SAAS,aAC1CwxE,EAAoB5sE,GAAe+uE,EAAaG,EAAgB,GAyDhE5Y,GACJ,QAAC,IAAD,CACEx8C,aAAa,EACbvE,UAAQ,EACR,eAAa,uCAHf,UAKE,QAACu1C,EAAD,YACE,QAAC,KAAD,KACA,QAACC,EAAD,WAAiB/8D,EAAAA,EAAAA,GAAE,mBAKzB,OACE,QAAC,IAAD,CACEuG,aAAcA,EACdo4E,eAAgBA,EAChBL,uBAAwBlW,GAAkBC,EAC1CuW,kBAAmBA,EACnB72D,MAAOolE,GAA2BhhE,EAAUljB,SAC5Cuf,SApG0B6kE,IAC5BD,EAA2BC,IAoGzBjN,cAjGuBiN,KACzBtP,EAAAA,EAAAA,IAAesP,EAAa35D,EAAQ,CAClCwoC,MAAM,EACNC,YAAaT,EACbxtC,aAAc,MA8FdkuC,qBA7EwE,IAItE,gBAJuE,QAC3EwK,EAD2E,iBAE3EpyC,EAF2E,OAG3EkY,GACI,EACJ,MAAM9Y,EAAqB,IAAIpnB,IAAI2f,EAAUljB,UACvCgxE,IAAgBzlD,EAAiBtqB,OAIjCojF,GACJ,UAAA94D,EAAiB,UAAjB,mBAAqBhvB,YAArB,eAA2B0E,SAA3B,UAAoCsqB,EAAiB,UAArD,iBAAoC,EAAqBhvB,YAAzD,aAAoC,EAA2B0E,SAC/Di+D,EAAiB,EACb3zC,EAAiBtV,MAAM,EAAG,GAC1BsV,EAAiBtV,MAAM,EAAG,GAE1B0B,EAAQq5D,EACVqT,EAAezmF,KAAI0mF,IAAQ5kB,EAAAA,EAAAA,GAAS4kB,EAAK/nF,KAAM2iE,KAAiBx6D,KAAK,MACrEimB,EAAmBhxB,IAAIg3E,EAAAA,KACvB55E,EAAAA,EAAAA,GAAE,iBACFA,EAAAA,EAAAA,GAAE,eAEAmY,EAAO8hE,GACX,QAAC,IAAD,CACE8L,UAAWuH,EAAezmF,KAAIkR,IAAC,uBAAIA,EAAElJ,gBAAN,QAAkB,WAAS43E,aAG5D,QAAC,KAAD,IAGF,OACE,QAAC,IAAD,CACE7qE,OAAO,yBACP2Z,SAAS,SACTi4D,eAAgB5mB,EAAQ/1B,KAH1B,UAKE,QAAC,IAAD,CACE8rB,UAAQ,EACRC,kBAAkB,EAClBlwB,OAAQA,EACRmwB,YAAalB,EAAgB/4D,IAAI,YACjC,eAAa,+BALf,UAOE,QAACk6D,EAAD,YACE,QAAC,IAAD,CAAwB7yD,OAAO,WAA/B,SAA2CkO,KAC3C,QAAC4kD,EAAD,UAAiBn8C,IAChB4T,EAAiBtqB,OAASojF,EAAepjF,SACxC,QAACujF,EAAD,CAAa/4E,KAAO,KAAG8f,EAAiBtqB,OAASojF,EAAepjF,kBA+BxEo+D,uBAAwBA,EACxB3L,UAAQ,EACRK,SAAO,KACH+O,IApIDmhB,EAAAA,YAAAA,oBAyIT,MAAMnwB,GAAiB,OAAO,MAAP,qBAAH,sFAKH/4D,EAAAA,EAAAA,GAAM,GALH,qBASd84D,GAAgB,OAAO,MAAP,qBAAH,oFAOb2wB,GAAc,OAAOC,EAAAA,EAAP,qBAAH,wCAIjB,GAAe3kD,EAAAA,EAAAA,YAAWmkD,I,6eCrN1B,MAqDA,GArDqB,QACnB,IAMa,IALXjjE,aAAc0jE,EADf,UAECvtE,EAFD,aAGC7Z,EAHD,QAIC4G,EAJD,SAKCg4E,GACW,EACX,MAAM3mF,GAAM+e,EAAAA,EAAAA,KAEN0M,GAAe2I,EAAAA,EAAAA,IAAQ+6D,GACzBA,EACAxgF,EAAQ8c,aAiBZ,OACE,QAAC,KAAD,CACE,aAAW,mBACX,eAAcA,EACdpR,QAnB2B2vB,KAC7Bv8B,EAAAA,EAAAA,IAAOzN,EAAK,CACVoB,MAAO2G,EAAaf,KACpB0G,UAAWiB,EAAQ3H,KACnBrF,KAAM,CAAC8pB,cAAeA,KACrBlqB,OAAM,KACPjB,EAAAA,EAAAA,KAAgBkB,EAAAA,EAAAA,GAAE,mCAAoCmN,EAAQ3H,SAIhEgjC,EAAMvW,kBAENkzD,MAAAA,GAAAA,GAAYl7D,IAQV/R,KAAK,OACLkT,SAAS,OACThL,UAAWA,EACXjI,MACE,QAAC,KAAD,CACEg0B,MAAOliB,EAAe,YAAc,UACpC8nB,QAAS9nB,QAxCA,sBAAH,qBAgDNlS,GACNA,EAAE5K,QAAQ8c,cAAgBlS,EAAEkS,aAAelS,EAAEzY,MAAMsuF,UAAY71E,EAAEzY,MAAM6tB,WAjD3D,O,qMCPlB,MAAM8W,EAAa,IAAiE,IAAhE,MAACtU,EAAD,IAAQmD,EAAR,YAAa0P,GAAc,EAA3B,WAAiC3P,GAAa,GAAkB,EAClF,MAAMg7D,GAAaj7D,EAAAA,EAAAA,IAAQjD,KAAUiD,EAAAA,EAAAA,IAAQE,IAAQnD,GAASmD,EAAO,GAAEA,KAASnD,EAEhF,OAAI6S,IAAgB7S,EACX,MAIP,2BACIkD,IAAc,gCAChB,yBAAOg7D,KACLh7D,IAAc,mCAXhBoR,EAAAA,YAAAA,aAgBN,W,4DC9BO,IAAKwH,E,0BAAAA,GAAAA,EAAAA,WAAAA,aAAAA,EAAAA,iBAAAA,QAAAA,EAAAA,iBAAAA,e,CAAAA,IAAAA,EAAAA,M,oSCWZ,SAAS4V,EAAT,GAAkE,IAA1C,MAACzgC,EAAD,SAAQhI,EAAR,KAAkBT,KAASN,GAAe,EAChE,OACE,QAACyT,EAAD,YACE,QAACgsB,EAAD,IAAaz/B,EAAb,UACG+I,EACAzI,IAAQ,QAAC49C,EAAD,UAAc59C,QAEzB,QAAC21E,EAAD,UAAiBl1E,OAPdyoC,EAAAA,YAAAA,iBAYT,MAAM/1B,GAAU,OAAO,MAAP,qBAAH,kBACMtnB,EAAAA,EAAAA,GAAM,GADZ,KAIPszC,GAAU,OAAO,KAAP,qBAAH,UACFv/B,GAAKA,EAAEzY,MAAM6zB,SADX,4BAGEpb,GAAKA,EAAEzY,MAAMiZ,gBAHf,YAIDvU,EAAAA,EAAAA,GAAM,GAJL,OAOP+xD,GAAc,OAAO,MAAP,qBAAH,UACNh+C,GAAKA,EAAEzY,MAAM6zB,SADP,iBAEAnvB,EAAAA,EAAAA,GAAM,IAFN,KAKX8pF,GAAiB,OAAO,MAAP,qBAAH,UACT/1E,GAAKA,EAAEzY,MAAM6zB,SADJ,KAIpB,K,8xCC9BA,MAAM46D,UAAsB12E,EAAAA,UAAwB,uDACnC,CACb22E,WAAYxgE,EAAAA,EAAAA,WAA8Bhe,KAAKqI,MAAMjZ,OAFL,0BAqBpC4uB,EAAAA,EAAAA,QAA0B,KACtChe,KAAKy+E,+BACJnsF,KAvB+C,4BAkCnC,KACb,MAAMlD,EAAK4Q,KAAKqI,MAAMjZ,GACtB4uB,EAAAA,EAAAA,aAAgC5uB,MA/BlCk5B,0BAA0BtB,GACpBA,EAAU53B,KAAO4Q,KAAKqI,MAAMjZ,IAC9B4Q,KAAKwN,SAAS,CACZgxE,WAAYxgE,EAAAA,EAAAA,WAA8BgJ,EAAU53B,MAK1DgoF,sBAAsBsH,EAAYC,GAChC,OAAOA,EAAUH,aAAex+E,KAAKoI,MAAMo2E,WAG7C/wE,uBACEzN,KAAK8zB,cAOP2qD,wBACE,MAAMD,EAAaxgE,EAAAA,EAAAA,WAA8Bhe,KAAKqI,MAAMjZ,IACxDovF,IAAex+E,KAAKoI,MAAMo2E,YAC5Bx+E,KAAKwN,SAAS,CACZgxE,WAAAA,IAUN33E,SACE,MAAM,SAACkR,EAAD,GAAW3oB,GAAM4Q,KAAKqI,OACtB,WAACm2E,GAAcx+E,KAAKoI,MAE1B,OACE,QAAC,IAAD,CACE,cAAY5X,EAAAA,EAAAA,GAAE,gBACd+nB,MAAOnpB,EACPywB,QAAS2+D,EACTxlE,SAAUhZ,KAAK+7E,aACfhkE,SAAUA,KAjDZwmE,EAAAA,YAAAA,gBAuDN,U,ocCpBO,MAAMK,EAAoC,MAE3C9xE,EAAe,CACnB5O,YAAa0gF,EACbC,WAAW,EACXC,WAAW,EACXpvD,kBAAkB,EAClBqvD,YAAY,EACZC,cAAc,GAwBhB,MAAMC,UAAoBp3E,EAAAA,UAAwB,uDAGjC7H,KAAKspB,oBAH4B,uBAkDrCjP,EAAAA,EAAAA,QAAkBiE,GAAWte,KAAK0uB,cAAcpQ,SAAUhsB,KAlDrB,0BAqFnC,KACX,MAAM,MAAC5B,EAAD,aAAQqG,GAAgBiJ,KAAKqI,OAC7B,KAAC1X,GAAQqP,KAAKoI,MAChB1X,IAAUmoB,EAAAA,GAAAA,aACZuS,EAAAA,EAAAA,GAA4B,0BAA2B,CACrDr0B,aAAAA,EACAmoF,SAAUvuF,EAAKvB,UAILkD,IAAV5B,IACF06B,EAAAA,EAAAA,GAA4B,8BAA+BprB,KAAKm/E,uBAhGpB,2BAoGyB,CACvE9tF,EACA+tF,EACAC,KAEA,MAAM,MAAC3uF,GAASsP,KAAKqI,WACP/V,IAAV5B,IACF06B,EAAAA,EAAAA,GAA4B,+BAAgC,IACvDprB,KAAKm/E,kBACRG,wBAAyBD,EACzBE,2BAA4BF,MAAAA,OAAF,EAAEA,EAAmBG,gBAC/CC,cAAepuF,QA/G2B,4BAoHhC62B,IAA0C,QACxD,MAAMw3D,EAAgBx3D,EAAI9b,OAE1B,GAA8C,OAA1CszE,MAAAA,GAAA,UAAAA,EAAeh5D,eAAf,eAAwB7uB,eAC1B,OAGF,GAA8C,WAA1C6nF,MAAAA,GAAA,UAAAA,EAAeh5D,eAAf,eAAwB7uB,eAC1B,OAGF,IAAIgS,EAAI61E,EACR,KAAO71E,EAAE6zC,eAAe,SACtB,GAAkC,OAA7B,QAAD,EAAA7zC,SAAA,mBAAG6c,eAAH,eAAY7uB,eACd,OAEFgS,EAAIA,EAAE6zC,cAGR1/B,EAAAA,EAAAA,aAAgChe,KAAKoI,MAAMzX,KAAKvB,OAlIlDk6B,kBACE,MAAM,GAACl6B,EAAD,iBAAKsgC,GAAoB1vB,KAAKqI,MAE9B1X,EAAO0pB,EAAAA,EAAAA,IAAejrB,GAE5B,MAAO,CACLuB,KAAM,IACDA,EACHgvF,SAAUjwD,EAAmB/+B,EAAKgvF,SAAW,MAE/CC,UAAU,EACV/zD,aAAa,GAIjBvD,0BAA0BtB,GACxB,GACEA,EAAU53B,KAAO4Q,KAAKqI,MAAMjZ,IAC5B43B,EAAU0I,mBAAqB1vB,KAAKqI,MAAMqnB,iBAC1C,CACA,MAAM/+B,EAAO0pB,EAAAA,EAAAA,IAAera,KAAKqI,MAAMjZ,IAEvC4Q,KAAKwN,SAAS,CACZ7c,KAAM,IACDA,EACHgvF,SAAU34D,EAAU0I,iBAAmB/+B,EAAKgvF,SAAW,SAM/DvI,sBAAsBpwD,EAAkB23D,GACtC,OAAI33D,EAAU9oB,cAAgB8B,KAAKqI,MAAMnK,eAGpC2hF,EAAAA,EAAAA,IAAa7/E,KAAKoI,MAAMzX,KAAMguF,EAAUhuF,MAM/C8c,wBACEqR,EAAAA,EAAAA,GAAe9e,KAAK+e,UAKtB2P,cAAcpQ,GACZ,MAAM,GAAClvB,EAAD,MAAKsB,GAASsP,KAAKqI,MACzB,IAAKiW,EAAQlrB,IAAIhE,GACf,OAGF,MAAMy8B,EAAyC,eAA3B7rB,KAAKoI,MAAMzX,KAAK+H,OAC9B/H,EAAO0pB,EAAAA,EAAAA,IAAejrB,GAC5B4Q,KAAKwN,UAASpF,IAAS,MAErB,MAAMw3E,EACJx3E,EAAMw3E,WACL1zD,EAAAA,EAAAA,IAAiBx7B,SAC+B4B,KAA/C,UAAC8V,EAAMzX,KAAK4pB,aAAZ,eAAoC0gD,UACrB,IAAftqE,EAAK4pB,MACT,MAAO,CAAC5pB,KAAAA,EAAMivF,SAAAA,EAAU/zD,YAAAA,MAK5BszD,kBAAkB,MAChB,MAAM,MAACzuF,EAAD,aAAQqG,GAAgBiJ,KAAKqI,OAC7B,KAAC1X,GAAQqP,KAAKoI,MACdqc,EAAG,WAAGF,EAAAA,EAAAA,IAAQxtB,GAAcI,MAAK,QAAEwtB,GAAF,SAAgBA,IAAaj0B,YAA3D,aAAG,EAAiE,GACvEovF,GAASnvF,MAAAA,OAAA,EAAAA,EAAMmvF,SAAU,GAC/B,MAAO,CACL/oF,aAAAA,EACAmoF,SAAUvuF,EAAKvB,GACfq1B,KAAKA,MAAAA,OAAA,EAAAA,EAAK4G,gBAAiB,QAC3B00D,qBAAsBD,EAAOplF,OAAS,GAyD1CslF,eAAeC,GACb,MAAM,aAAClpF,EAAD,MAAerG,EAAf,UAAsBisB,EAAtB,kBAAiCujE,GAAqBlgF,KAAKqI,OAC3D,KAAC1X,GAAQqP,KAAKoI,MAGd+3E,EAAmBppF,EAAa+hB,SAASlb,SAAS,kBAElDwiF,EAAuB,GAE7B,GAAIH,GAA+B,iBAAVvvF,EAAoB,CAC3C,MAAMk3B,GAAWC,EAAAA,EAAAA,GAAWn3B,GAC5B,IAAK,MAAM2vF,KAAYz4D,EACrB,IAAK04D,EAAAA,GAAAA,SAAmCD,GAAW,CACjD,MAAME,EAAW34D,EAASy4D,GAAUziF,SAAS,KACxC,IAAGgqB,EAASy4D,MACbz4D,EAASy4D,GACbD,EAAW5/E,KAAM,GAAE6/E,KAAYE,KAI/B34D,EAASG,QACXq4D,EAAW5/E,KAAKonB,EAASG,QAI7B,MAAMy4D,EAAc,CAAC/mF,SAAU,CAACwrB,OAAOt0B,EAAKgN,QAAQvO,MAE9C4+E,GAAeoS,EAAW1lF,OAAS,IAAM,IAAM0lF,EAAWjiF,KAAK,KAErE,GAAIgiF,EAAkB,CACpB,MAAM,OAAC9iE,EAAD,MAAS5Z,EAAT,IAAgBgmB,EAAhB,IAAqB6/B,GAAO42B,MAAAA,EAAAA,EAAsBvjE,EAAUS,UAAY,GAExEqjE,EAA0B,IAC3BD,EACHpxF,QAAIkD,EACJ7C,KAAMkB,EAAKygB,OAASzgB,EAAKU,KACzBqvF,OAAQ,CAAC,QAAS,UAAW,cAAe,OAAQ,aACpDC,QAAS,aACTjwF,MAAQ,YAAWC,EAAKvB,KAAK4+E,IAC7Bj3C,QAAS,GAcX,OAXMtzB,GAAWgmB,GACfg3D,EAAch9E,MAAQ,IAAIq+C,KAAKr+C,GAAOm9E,cACtCH,EAAch3D,IAAM,IAAIq4B,KAAKr4B,GAAKm3D,cAC9Bt3B,IACFm3B,EAAcn3B,KAAM,IAGtBm3B,EAAcI,MAAQxjE,GAAU8M,EAAAA,GAGb22D,EAAAA,GAAAA,eAAyBL,GAC1BM,wBAAwBhqF,EAAaf,MAG3D,MAAO,CACL6K,SAAW,kBAAiB9J,EAAaf,eAAerF,EAAKvB,aAC7DsB,MAAO,IACF8vF,EACH9vF,MAAOs9E,IAKbgT,4BACE,MAAM,KAACrwF,GAAQqP,KAAKoI,OACd,cAACg4C,EAAD,MAAgBjgC,GAASxvB,GACzB,KAACsX,EAAD,cAAOg5E,GAAiB7gC,EAE9B,IAAKn4C,EACH,OAAO,KAGT,MAAM,YAACi5E,EAAD,YAAc98B,GAAen8C,EAE7Bk5E,EAA6BD,EAAcD,EAC3CG,GAAoC3iD,EAAAA,EAAAA,IACxC0iD,EACAD,GAGF,OACE,QAAC,EAAAp1E,SAAD,YACE,QAACgR,GAAD,WACE,QAAC,IAAD,CAAW9K,KAAMoyC,OAEnB,QAACrnC,GAAD,WACIqG,EAAAA,EAAAA,IAAQjD,IAGR,QAAC,EAAArU,SAAD,YACE,QAAC,IAAD,CAAOyM,MAAO4oE,IACb,KACD,QAAC,IAAD,CAAO5oE,MAAO2oE,QALhB,QAAC,IAAD,CAAapiD,OAAO,YASxB,QAAC9hB,GAAD,WACE,QAAC,IAAD,CAAazE,MAAO6oE,SAM5Bv6E,SAAS,QACP,MAAM,KAAClW,EAAD,SAAOivF,EAAP,YAAiB/zD,GAAe7rB,KAAKoI,OACrC,MACJqN,EADI,MAEJ/kB,EAFI,eAGJ4+B,EAHI,UAIJuvD,EAJI,WAKJzvD,EALI,UAMJ0vD,EANI,YAOJ5gF,EAPI,UAQJye,EARI,aASJ5lB,EATI,0BAUJ04B,EAVI,cAWJJ,EAXI,iBAYJK,EAZI,WAaJqvD,EAbI,kBAcJmB,EAdI,uBAeJmB,EAfI,aAgBJrC,GACEh/E,KAAKqI,OAEH,OAACgV,EAAD,MAAS5Z,EAAT,IAAgBgmB,GAAO9M,EAAUS,UAAY,GAC7C67C,EAAO,UACXinB,MAAAA,OADW,EACXA,EAAmBvtF,MAAMkF,qBADd,QAER4L,GAAWgmB,EACV,cACAmyD,EAAAA,EAAAA,GAAmBv+D,GAAU8M,EAAAA,IAAsBtyB,cAKnDypF,EAAe3wF,EAAKgvF,SAAWhvF,EAAKgvF,SAASx/D,MAAQxvB,EAAKwvB,MAC1DohE,EAAiB5wF,EAAKgvF,SAAWhvF,EAAKwvB,WAAQ7tB,EAC9CkvF,EAAmB7wF,EAAKgvF,SAAWhvF,EAAKgvF,SAASxa,UAAYx0E,EAAKw0E,UAClEsc,EAAqB9wF,EAAKgvF,SAAWhvF,EAAKw0E,eAAY7yE,EAEtDovF,GAAsB97E,QAC1Bk5E,GAAanuF,GAAQA,EAAKgvF,UAAYzhF,GAAewxB,GAGvD,OACE,QAAC5T,EAAD,CACE,eAAa,QACbzS,QAASomB,OAA4Bn9B,EAAY0N,KAAK2hF,aACtD/B,SAAUA,EACVgC,WAA4B,eAAhBjxF,EAAK+H,OACjBmzB,YAAaA,EACbkzD,WAAYA,MAAAA,GAAAA,EANd,UAQGF,IACC,QAACgD,EAAD,WACE,QAAC,EAAD,CAAezyF,GAAIuB,EAAKvB,GAAI2oB,WAAY0X,OAG5C,QAACqyD,EAAD,CAAcjD,YAAaA,EAA3B,WACE,QAAC,IAAD,CACEppE,MAAOA,EACP1e,aAAcA,EACdgrF,aAAW,EACXpxF,KAAMA,EACND,MAAOA,EACPgY,KAAK,SACLW,QAASrJ,KAAKgiF,cAEhB,QAAC,IAAD,CAA0BrxF,KAAMA,EAAM0+B,cAAeA,OAEtDC,IAAkB,QAAC,IAAD,CAAaljB,OAAO,iBACtC0yE,IAAcrvD,IACb,QAACwyD,GAAD,CACErxE,UAAY,wBAAsBouE,EAAe,YAAc,IADjE,SAGG,UAACruF,EAAKgvF,gBAAN,OAAC,EAAeluC,OAAU9gD,EAAK8gD,OAG9B,QAAC,IAAD,CACEvzC,YAAaA,EACbvN,KAAMA,EACN+wF,oBAAqBA,GACrBQ,cAAY,KANd,QAAC,IAAD,CAAapjD,OAAO,WAWzBrP,EACCzvB,KAAKghF,6BAEL,QAAC,EAAAl1E,SAAD,YACE,QAACq2E,GAAD,WACI/+D,EAAAA,EAAAA,IAAQk+D,IAGR,QAAC,IAAD,CAAc3zC,kBAAgB,EAA9B,SACG,IAAyD,IAAxD,OAACzQ,EAAD,aAAS+R,EAAT,cAAuB9R,EAAvB,aAAsCC,GAAkB,EACxD,MAAMglD,EAAapiC,GAAAA,CAAW,WAAY,CACxC,iBAAiB,EACjB3e,KAAMnE,IAGR,OACE,QAAC,IAAD,CAAa9wB,OAAO,iBAAiB2L,UAAWuX,EAAhD,UACE,mBACM2f,EAAa,CACfr+B,UAAWwxE,IAFf,WAKE,mBAAUjlD,EAAc,IAAxB,UACE,eAAKvsB,UAAU,uBAAf,WACE,QAACyxE,EAAD,CAAc9pE,MAAO+oE,SACDhvF,IAAnBivF,GAAgC7xD,IAC/B,QAAC4yD,EAAD,CAAgB/pE,MAAOgpE,SAI5B7xD,IACC,QAAC6yD,EAAD,IACMnlD,EAAa,CAACxsB,UAAW,2BAD/B,UAGGjgB,EAAKgvF,WACJ,QAAC,EAAA7zE,SAAD,YACE,QAAC02E,EAAD,CAAgBhwE,GAAIxS,KAAKggF,gBAAe,GAAxC,WACE,QAACyC,EAAD,UACGpB,MAAAA,EAAAA,GACC7wF,EAAAA,EAAAA,GAAE,8BAEN,QAACkyF,EAAD,CAAenqE,MAAO5nB,EAAKgvF,SAASx/D,YAEtC,QAAC,IAAD,CAAUwiE,SAAO,QAIrB,QAACH,EAAD,CAAgBhwE,GAAIxS,KAAKggF,iBAAzB,WACE,QAACyC,EAAD,WAAejyF,EAAAA,EAAAA,GAAG,YAAWyoE,QAC7B,QAACypB,EAAD,CAAenqE,MAAO5nB,EAAKwvB,WAG5BxvB,EAAK8pE,WACJ,QAAC,EAAA3uD,SAAD,YACE,QAAC,IAAD,CAAU62E,SAAO,KACjB,QAACH,EAAD,YACE,QAACC,EAAD,WAAejyF,EAAAA,EAAAA,GAAE,wBACjB,QAACkyF,EAAD,CAAenqE,MAAO5nB,EAAK8pE,SAASt6C,0BAnDxD,QAAC,IAAD,CAAa2e,OAAO,YAgExB,QAACqjD,GAAD,WACI/+D,EAAAA,EAAAA,IAAQo+D,IAGR,QAAC,IAAD,CAAc7zC,kBAAgB,EAA9B,SACG,IAAyD,IAAxD,OAACzQ,EAAD,aAAS+R,EAAT,cAAuB9R,EAAvB,aAAsCC,GAAkB,EACxD,MAAMglD,EAAapiC,GAAAA,CAAW,WAAY,CACxC,iBAAiB,EACjB3e,KAAMnE,IAGR,OACE,mBACM+R,EAAa,CACfr+B,UAAWwxE,IAFf,WAKE,mBAAUjlD,EAAc,IAAxB,UACE,eAAKvsB,UAAU,uBAAf,WACE,QAACyxE,EAAD,CAAc9pE,MAAOipE,SACGlvF,IAAvBmvF,GAAoC/xD,IACnC,QAAC4yD,EAAD,CAAgBM,MAAI,EAACrqE,MAAOkpE,SAIjC/xD,IACC,QAAC6yD,EAAD,IACMnlD,EAAa,CAACxsB,UAAW,2BAD/B,UAGGjgB,EAAKgvF,WACJ,QAAC,EAAA7zE,SAAD,YACE,QAAC02E,EAAD,CAAgBhwE,GAAIxS,KAAKggF,gBAAe,GAAxC,WACE,QAACyC,EAAD,UACGpB,MAAAA,EAAAA,GACC7wF,EAAAA,EAAAA,GAAE,8BAEN,QAACkyF,EAAD,CAAenqE,MAAO5nB,EAAKgvF,SAASxa,gBAEtC,QAAC,IAAD,CAAUwd,SAAO,QAIrB,QAACH,EAAD,CAAgBhwE,GAAIxS,KAAKggF,iBAAzB,WACE,QAACyC,EAAD,WAAejyF,EAAAA,EAAAA,GAAG,YAAWyoE,QAC7B,QAACypB,EAAD,CAAenqE,MAAO5nB,EAAKw0E,eAG5Bx0E,EAAK8pE,WACJ,QAAC,EAAA3uD,SAAD,YACE,QAAC,IAAD,CAAU62E,SAAO,KACjB,QAACH,EAAD,YACE,QAACC,EAAD,WAAejyF,EAAAA,EAAAA,GAAE,wBACjB,QAACkyF,EAAD,CAAenqE,MAAO5nB,EAAK8pE,SAAS0K,4BAlDtD,QAAC,IAAD,CAAarmC,OAAO,YA8DxB,QAAC+jD,GAAD,CAAiBjyE,UAAU,sBAA3B,UACE,QAAC,IAAD,CACExhB,GAAIuB,EAAKvB,GACTggC,WAAYA,EACZ0zD,SAAU9iF,KAAK+iF,uBAhdzB9D,EAAAA,YAAAA,e,OAAAA,EAAAA,eACkBnyE,GAydxB,SAAe4mB,EAAAA,EAAAA,IAAgBW,EAAAA,EAAAA,GAAiB4qD,IAG1CnjE,GAAU,OAAOknE,EAAAA,GAAP,sBAAH,8BAOAxuF,EAAAA,EAAAA,GAAM,KAPN,uBAUT+T,GACAA,EAAEw2E,aACDx2E,EAAEq3E,WAAar3E,EAAEq5E,cACjBr5E,EAAEsjB,cACHtf,EAAAA,EAAAA,IAHA,2LAqBwBhE,EAAEzY,MAAMmzF,eArBhC,wDA2B0B16E,EAAEzY,MAAMmzF,eA3BlC,2BA8B0B16E,EAAEzY,MAAM0wB,oBA9BlC,WAXS,KA+CPshE,GAAe,OAAO,MAAP,sBAAH,gCAEDv5E,IAAK/T,EAAAA,EAAAA,GAAM+T,EAAEs2E,UAAY,EAAI,IAF5B,kBAGArqF,EAAAA,EAAAA,GAAM,GAHN,4CAOK+T,GAAKA,EAAEzY,MAAMirB,YAAYqL,QAP9B,iBAYZy7D,GAAuB,OAAO,MAAP,sBAAH,gBACTrtF,EAAAA,EAAAA,GAAM,GADG,wHAkBpB6tF,GAAe,OAAOa,EAAAA,EAAP,uBACjB36E,IAAK46E,OANiBrzF,EAMAyY,EAAEzY,OANeyc,EAAAA,EAAAA,IAAjB,aACXzc,EAAM2lC,cADI,0CAAC3lC,IAAAA,IAKR,KAgBZwyF,GAAiB,QAAO,QAAC,MAAC/pE,KAAUhQ,GAAZ,SAAmB,QAAC,IAAD,IAAWA,EAAGgQ,MAAOA,MAA/C,uBACnBhQ,IAAK66E,OAbmBtzF,EAaAyY,EAAEzY,OAbeyc,EAAAA,EAAAA,IAAjB,aACbzc,EAAM2lC,cADM,wEAMPjhC,EAAAA,EAAAA,GAAM,KANC,4BAQd1E,EAAMk5B,QARQ,SAACl5B,IAAAA,IAYR,KAIdyyF,GAAqB,OAAO,KAAP,qBAAH,YACXh6E,GAAKA,EAAEzY,MAAM4c,OAAO22E,WADT,KAQlBb,GAAiB,QAAO,QAAC,GAAChwE,EAAD,SAAKpJ,KAAab,GAAnB,SAC5B,QAAC,IAAD,CAAU+6E,UAAQ,EAAlB,SACG9wE,GAEC,QAAC,IAAD,CAAMA,GAAIA,EAAIpG,OAAO,SAArB,UACE,kBAAS7D,EAAT,SAAaa,OAGf,eAAKwH,UAAU,kBAAf,UACE,kBAASrI,EAAT,SAAaa,UATE,qBAAH,kGAoBdm6E,GAAqBh3E,EAAAA,EAAAA,IAAH,qFAIN/X,EAAAA,EAAAA,GAAM,GAJA,QAOlBkuF,GAAgB,QAAO,QAAC,MAACnqE,KAAUhQ,GAAZ,SAC3B,kBAASA,EAAT,UACE,QAAC,IAAD,CAAOgQ,MAAOA,QAFI,qBAKlBgrE,EALe,WAMRh7E,GAAKA,EAAEzY,MAAM6zB,SANL,KASb8+D,GAAe,OAAO,MAAP,qBAAH,wEAICjuF,EAAAA,EAAAA,GAAM,GAJP,WAKP+T,GAAKA,EAAEzY,MAAM6tB,WALN,KAQZskE,IAAe,OAAO,MAAP,qBAAH,yBAEJztF,EAAAA,EAAAA,GAAM,GAFF,uBAMZ2tF,IAAmB,OAAO,MAAP,qBAAH,gFAKR3tF,EAAAA,EAAAA,GAAM,GALE,wBAOC+T,GAAKA,EAAEzY,MAAMirB,YAAYC,QAP1B,kBAYhB6nE,IAAkB,OAAO,MAAP,qBAAH,wBAEPruF,EAAAA,EAAAA,GAAM,GAFC,uBAOfsoB,IAAgB,OAAO,MAAP,qBAAH,+BAELtoB,EAAAA,EAAAA,GAAM,GAFD,WAGR+T,GAAKA,EAAEzY,MAAM0zF,SAHL,KAIfj7E,GAAKA,EAAEzY,MAAM8tB,kBAJE,mCAOIrV,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAP7B,iCAabM,IAA0B,OAAO,MAAP,qBAAH,+BAEfvoB,EAAAA,EAAAA,GAAM,GAFS,WAGlB+T,GAAKA,EAAEzY,MAAM0zF,SAHK,KAIzBj7E,GAAKA,EAAEzY,MAAM8tB,kBAJY,mCAONrV,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAPnB,mBAYvBO,IAAiB,OAAO,MAAP,qBAAH,aACNxoB,EAAAA,EAAAA,GAAM,GADA,uDAKG+T,GAAKA,EAAEzY,MAAMirB,YAAY0B,OAL5B,kC,2eCpuBpB,SAASgnE,EAAT,GAMU,IANU,KAClB9yF,EADkB,YAElBuN,EAFkB,oBAGlBwjF,GAAsB,EAHJ,OAIlB5iD,EAAS,GAJS,aAKlBojD,GAAe,GACP,EACR,MAAMzwC,EAA2BvzC,EAC7BvN,EAAKgvF,SACHhvF,EAAKgvF,SAASluC,MAAMvzC,GACpBvN,EAAK8gD,MAAMvzC,GACb,GAEEwlF,EACJxlF,GAAevN,EAAKgvF,SAAWhvF,EAAK8gD,MAAMvzC,GAAe,KAE3D,IAAKuzC,IAAUA,EAAM/2C,OACnB,OAAO,KAGT,MAAMipF,EAAgBlyC,EAAMp6C,KAAIusF,GAASA,EAAM,KACzCC,GAAoBx5B,EAAAA,EAAAA,IAAwB35B,KAAKpN,OAAOqgE,IAE9D,IAAIt7B,EACAJ,EAEJ,MAAMC,EAAmB,GAyCzB,OAxCIw5B,GAAuBgC,GAAkBA,EAAehpF,QAC1DwtD,EAAO1nD,KAAK,CACVsjF,YAAYtzF,EAAAA,EAAAA,GAAE,gBACdG,KAAM+yF,EAAersF,KAAIusF,IAAS,CAAEn0F,KAAiB,IAAXm0F,EAAM,GAAWrrE,MAAOqrE,EAAM,SAE1E17B,EAAO1nD,KAAK,CACVsjF,YAAYtzF,EAAAA,EAAAA,GAAE,mBACdG,KAAM8gD,EAAMp6C,KAAIusF,IAAS,CAAEn0F,KAAiB,IAAXm0F,EAAM,GAAWrrE,MAAOqrE,EAAM,WAKjEv7B,EAAS,CAACv4D,EAAAA,GAAAA,SACVm4D,EAAiB,CAACn4D,EAAAA,GAAAA,WAClBo4D,EAAO1nD,KAAK,CACVsjF,YAAYtzF,EAAAA,EAAAA,GAAE,UACdG,KAAM8gD,EAAMp6C,KAAIusF,IAAS,CAAEn0F,KAAiB,IAAXm0F,EAAM,GAAWrrE,MAAOqrE,EAAM,OAC/DG,SACE7B,GAAgBxxD,KAAKpN,OAAOqgE,GAAiB,GACzCK,EAAAA,EAAAA,GAAS,CACPprF,QAAQ,EACRuyD,UAAW,CAACxuB,MAAO7sC,EAAAA,GAAAA,QAAeuB,KAAM,SAAU0tC,MAAO,GACzDpuC,KAAM,CACJ,CACEU,KAAM,QAGVsB,MAAO,CACLs2D,MAAM,EACNljC,SAAU,QACV4W,MAAQ,GAAE7sC,EAAAA,GAAAA,UACVm0F,WAAY,QACZ5jB,SAAU,GACVnX,UAAY,GAAE26B,YAGlBvxF,MAKR,QAAC,KAAD,CAAU4K,SAAU,GAAI4hC,OAAQojD,EAAe,GAAKpjD,EAApD,UACE,QAAC,IAAD,CACEA,OAAQojD,EAAe,GAAKpjD,EAC5BolD,iBAAe,EACfC,mBAAiB,EACjBj8B,OAAQA,EACRG,OAAQA,EACRJ,eAAgBA,EAChBE,UAAW,GACXI,kBAAmB25B,MA7ElBuB,EAAAA,YAAAA,aAmFT,W,gQC/FA,MAaA,GAba,OAAO,MAAP,qBACTnH,EAAAA,EADM,IAGY1d,EAAAA,EAHZ,oBAIUpqE,EAAAA,EAAAA,GAAM,GAJhB,mBAKWA,EAAAA,EAAAA,GAAM,GALjB,+BAQWA,EAAAA,EAAAA,GAAM,GARjB,Q,6ECJV,MAOA,GAPsB,E,kFAAA,GAAO,MAAP,sBAAH,mEAIR+T,GAAKA,EAAEzY,MAAM6zB,SAJL,M,8aCQZ,MAAM/Y,EAAe,aAMfw5E,EAAoB,kCAEpBC,EAAoB,CAC/B,eACA,gBACA,gBACA,mBACA,YACA,aACA,aACA,aACA,cACA,cACA,WACA,YACA,YACA,mBACA,cACA,eACA,eACA,cACA,gBAIWC,EAA4B,CACvC,aACA,cACA,eACA,mBACA,WACA,YACA,eAMWC,EAAe,CAC1B,CACEn1F,GAAI,SACJK,KAAM,SACN+0F,SAAS,EACT78C,KAAM,gGAER,CACEv4C,GAAI,QACJK,KAAM,QACN+0F,SAAS,EACT78C,KAAM,2VAER,CACEv4C,GAAI,UACJK,KAAM,UACN+0F,SAAS,EACT78C,KAAM,qFAER,CACEv4C,GAAI,QACJK,KAAM,qBACN+0F,SAAS,EACT78C,KAAM,qKAqBG88C,EAA0B,CAAC,eAAgB,UAAW,YAKtDC,EAA0C,CACrD,CACEC,SAAU,UACV9jC,KAAM,4CACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CC,KAAM,CAAClyF,MAAO,OAAQiyF,OAAQ,CAAC,iBAC/BE,MAAO,CAACnyF,MAAO,eAAgBiyF,OAAQ,CAAC,eAAgB,kBACxDG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,eAAgB,gBAAiB,oBAGtE,CACED,SAAU,OACV9jC,KAAM,mBACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CC,KAAM,CAAClyF,MAAO,OAAQiyF,OAAQ,CAAC,cAC/BE,MAAO,CAACnyF,MAAO,eAAgBiyF,OAAQ,CAAC,YAAa,eACrDG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,YAAa,aAAc,iBAGhE,CACED,SAAU,UACV9jC,KAAM,uCACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,uBAGrC,CACED,SAAU,QACVhyF,MAAO,gBACPkuD,KAAM,wCACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CC,KAAM,CAAClyF,MAAO,OAAQiyF,OAAQ,CAAC,eAC/BE,MAAO,CAACnyF,MAAO,eAAgBiyF,OAAQ,CAAC,aAAc,gBACtDG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,aAAc,cAAe,kBAGlE,CACED,SAAU,eACV9jC,KAAM,uEACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CC,KAAM,CAAClyF,MAAO,OAAQiyF,OAAQ,CAAC,aAC/BE,MAAO,CAACnyF,MAAO,eAAgBiyF,OAAQ,CAAC,WAAY,cACpDG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,WAAY,YAAa,gBAG9D,CACED,SAAU,SACV9jC,KAAM,8BACN6Q,QAAS,CACP,YAAa,CAAC/+D,MAAO,YAAaiyF,OAAQ,IAC1CC,KAAM,CAAClyF,MAAO,OAAQiyF,OAAQ,CAAC,gBAC/BE,MAAO,CAACnyF,MAAO,eAAgBiyF,OAAQ,CAAC,cAAe,iBACvDG,MAAO,CAACpyF,MAAO,QAASiyF,OAAQ,CAAC,cAAe,eAAgB,oBAKzD7yF,EAAyB,IACzBizF,EAA4B,IAE5BC,EAAuB,uBAGvBC,EAAiB,CAC5BlmF,KAAM,cACNjI,aAAc,sBACd4G,QAAS,iBACThO,KAAM,SACNw1F,eAAgB,oBAChBC,gBAAiB,oBACjBC,eAAgB,0BAGLC,EAAmB,IAEnB3N,EAAoB,GAEpBxtD,EAAuB,MAEvBuH,EAAgB,gBAIhB+oD,EAA2B,CACtC,MAAMjqF,EAAAA,EAAAA,GAAE,aACR,OAAOA,EAAAA,EAAAA,GAAE,iBACT,MAAMA,EAAAA,EAAAA,GAAE,eACR,OAAOA,EAAAA,EAAAA,GAAE,gBACT,OAAOA,EAAAA,EAAAA,GAAE,gBACT,OAAOA,EAAAA,EAAAA,GAAE,iBAWE+0F,IAPL/0F,EAAAA,EAAAA,GAAE,OACDA,EAAAA,EAAAA,GAAE,QACHA,EAAAA,EAAAA,GAAE,OACDA,EAAAA,EAAAA,GAAE,QACFA,EAAAA,EAAAA,GAAE,OAGwB,CACjC,CAACg1F,EAAAA,GAAAA,SAAsBh1F,EAAAA,EAAAA,GAAE,UACzB,CAACg1F,EAAAA,GAAAA,eAA4Bh1F,EAAAA,EAAAA,GAAE,gBAC/B,CAACg1F,EAAAA,GAAAA,cAA2Bh1F,EAAAA,EAAAA,GAAE,iBAInBi1F,EAAoB,IACpBC,EAAkB,IAGlBC,EAAmC,EACnCC,EAA4B,EAE5BC,EAAmB,GAInBC,EAAmB,IAGnB52E,GAAwB62E,EAUxB/kF,GAAmB+kF,EAOnBC,EAAc,aAGdvxC,EAAiC,CAC5CwxC,cAAe,gBACfC,cAAe,iBAGJvnC,EAAkB,qCAClBwnC,EAAqB,mDAErBn6C,GAAqB,EACrBo6C,EAAWL,aACXM,IAAmBN,CAAAA,SAAAA,aAAAA,oBAAAA,EAAAA,uBAAAA,EAAAA,kBAAAA,EAAAA,aAAAA,EAAAA,4BAAAA,GAAYM,eAC/BC,OAAUP,EACVQ,OAAyBR,EAEzBS,EAAqB,CAChCjtF,QAAQ/I,EAAAA,EAAAA,GAAE,sC,gRCtQL,MAAMi2F,EAA4B,CACvC,aACA,mBACA,oBACA,gBACA,SACA,eACA,aACA,eACA,cACA,OACA,mBACA,SACA,oBACA,SACA,KACA,MACA,OACA,OACA,eACA,qBACA,iBACA,UACA,YACA,UACA,eACA,SAGWC,EAAW,CACtB,OACA,aACA,mBACA,qBACA,uBACA,sBACA,mBACA,oBACA,iBACA,oBACA,SAGWC,EAAS,CACpB,UACA,YACA,UACA,YACA,qBACA,uBACA,QACA,eACA,UACA,eACA,QACA,iBACA,SAEA,eACA,aACA,eAGWC,EAAU,CACrB,SACA,oBACA,gBACA,SACA,KACA,UACA,OACA,iBACA,aACA,cACA,eACA,eACA,cACA,mBACA,SACA,OACA,eACA,WACA,eACA,OACA,MACA,cACA,cACA,eACA,SACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,OACA,aACA,YACA,OACA,UAGWC,EAAa,CACxB,mBACA,wBACA,sBACA,iBACA,sBACA,oBACA,mBACA,uBAGWC,EAAU,CACrB,cACA,SACA,kBACA,aACA,OACA,WACA,sBACA,SACA,kBACA,kBACA,kBACA,YACA,WACA,QACA,UACA,SACA,UAGIC,EAAe,CACnB,CAAC33F,GAAI,UAAWK,MAAMe,EAAAA,EAAAA,GAAE,WAAY+lF,UAAWkQ,GAC/C,CAACr3F,GAAI,UAAWK,MAAMe,EAAAA,EAAAA,GAAE,WAAY+lF,UAAWmQ,GAC/C,CAACt3F,GAAI,SAAUK,MAAMe,EAAAA,EAAAA,GAAE,UAAW+lF,UAAWqQ,GAC7C,CAACx3F,GAAI,SAAUK,MAAMe,EAAAA,EAAAA,GAAE,UAAW+lF,UAAWoQ,GAC7C,CAACv3F,GAAI,UAAWK,MAAMe,EAAAA,EAAAA,GAAE,WAAY+lF,UAAWuQ,GAC/C,CAAC13F,GAAI,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","sources":["webpack:///./app/actionCreators/account.tsx","webpack:///./app/actionCreators/discoverSavedQueries.tsx","webpack:///./app/actionCreators/indicator.tsx","webpack:///./app/actionCreators/modal.tsx","webpack:///./app/actionCreators/onboardingTasks.tsx","webpack:///./app/utils/getPreloadedData.ts","webpack:///./app/actionCreators/organization.tsx","webpack:///./app/actionCreators/organizations.tsx","webpack:///./app/actionCreators/preferences.tsx","webpack:///./app/actionCreators/projects.tsx","webpack:///./app/actions/memberActions.tsx","webpack:///./app/api.tsx","webpack:///./app/bootstrap/exportGlobals.tsx","webpack:///./app/utils/errorHandler.tsx","webpack:///./app/components/globalModal/components.tsx","webpack:///./app/components/globalModal/index.tsx","webpack:///./app/views/app/index.tsx","webpack:///./app/actionCreators/developmentAlerts.tsx","webpack:///./app/views/issueList/container.tsx","webpack:///./app/components/stream/processingIssueHint.tsx","webpack:///./app/components/stream/processingIssueList.tsx","webpack:///./app/actionCreators/processingIssues.tsx","webpack:///./app/stores/savedSearchesStore.tsx","webpack:///./app/views/issueList/actions/extraDescription.tsx","webpack:///./app/views/issueList/actions/utils.tsx","webpack:///./app/views/issueList/actions/resolveActions.tsx","webpack:///./app/views/issueList/actions/sortOptions.tsx","webpack:///./app/views/issueList/actions/actionSet.tsx","webpack:///./app/views/issueList/actions/headers.tsx","webpack:///./app/views/issueList/actions/index.tsx","webpack:///./app/views/issueList/filters.tsx","webpack:///./app/views/issueList/savedSearchTab.tsx","webpack:///./app/views/issueList/header.tsx","webpack:///./app/views/issueList/tagFilter.tsx","webpack:///./app/views/issueList/sidebar.tsx","webpack:///./app/views/issueList/overview.tsx","webpack:///./app/utils/cursorPoller.tsx","webpack:///./app/utils/withSavedSearches.tsx","webpack:///./app/components/loadingTriangle.tsx","webpack:///./app/components/sidebar/sidebarPanelItem.tsx","webpack:///./app/components/sidebar/broadcastSdkUpdates.tsx","webpack:///./app/components/sidebar/sidebarItem.tsx","webpack:///./app/components/sidebar/sidebarPanel.tsx","webpack:///./app/components/sidebar/sidebarPanelEmpty.tsx","webpack:///./app/components/sidebar/broadcasts.tsx","webpack:///./app/actionCreators/broadcasts.tsx","webpack:///./app/components/sidebar/sidebarDropdownMenu.styled.tsx","webpack:///./app/components/sidebar/sidebarMenuItemLink.tsx","webpack:///./app/components/sidebar/sidebarOrgSummary.tsx","webpack:///./app/components/sidebar/sidebarMenuItem.tsx","webpack:///./app/components/sidebar/help.tsx","webpack:///./app/components/progressRing.tsx","webpack:///./app/components/onboardingWizard/progressHeader.tsx","webpack:///./app/components/onboardingWizard/skipConfirm.tsx","webpack:///./app/components/onboardingWizard/utils.tsx","webpack:///./app/components/onboardingWizard/task.tsx","webpack:///./app/components/onboardingWizard/integrationCard.tsx","webpack:///./app/components/onboardingWizard/onboardingCard.tsx","webpack:///./app/components/onboardingWizard/taskConfig.tsx","webpack:///./app/components/onboardingWizard/sidebar.tsx","webpack:///./app/components/sidebar/onboardingStatus.tsx","webpack:///./app/components/sidebar/serviceIncidents.tsx","webpack:///./app/actionCreators/serviceIncidents.tsx","webpack:///./app/components/sidebar/sidebarDropdown/divider.styled.tsx","webpack:///./app/components/sidebar/sidebarDropdown/switchOrganization.tsx","webpack:///./app/components/sidebar/sidebarDropdown/index.tsx","webpack:///./app/components/sidebar/index.tsx","webpack:///./app/views/organizationContextContainer.tsx","webpack:///./app/views/organizationDetails/body.tsx","webpack:///./app/views/organizationDetails/index.tsx","webpack:///./app/views/organizationRoot.tsx","webpack:///./app/views/projectEventRedirect.tsx","webpack:///./app/views/projects/redirectDeprecatedProjectRoute.tsx","webpack:///./app/views/routeNotFound.tsx","webpack:///./app/views/settings/components/settingsWrapper.tsx","webpack:///./app/routes.tsx","webpack:///./app/bootstrap/renderDom.tsx","webpack:///./app/bootstrap/processInitQueue.tsx","webpack:///./app/components/demo/demoHeader.tsx","webpack:///./app/main.tsx","webpack:///./app/bootstrap/renderMain.tsx","webpack:///./app/bootstrap/initializeApp.tsx","webpack:///./app/bootstrap/legacyTwitterBootstrap.tsx","webpack:///./app/components/acl/demoModeGate.tsx","webpack:///./app/components/acl/featureDisabled.tsx","webpack:///./app/components/actions/confirmableAction.tsx","webpack:///./app/components/actions/actionLink.tsx","webpack:///./app/components/customIgnoreCountModal.tsx","webpack:///./app/components/customIgnoreDurationModal.tsx","webpack:///./app/components/actions/ignore.tsx","webpack:///./app/components/customResolutionModal.tsx","webpack:///./app/components/actions/resolve.tsx","webpack:///./app/components/alert.tsx","webpack:///./app/components/buttonBar.tsx","webpack:///./app/components/card.tsx","webpack:///./app/components/charts/components/markPoint.tsx","webpack:///./app/components/charts/miniBarChart.tsx","webpack:///./app/components/collapsible.tsx","webpack:///./app/components/datePageFilter.tsx","webpack:///./app/components/deprecatedforms/form.tsx","webpack:///./app/components/deprecatedforms/formContext.tsx","webpack:///./app/components/deprecatedforms/formField.tsx","webpack:///./app/components/deprecatedforms/apiForm.tsx","webpack:///./app/components/deprecatedforms/booleanField.tsx","webpack:///./app/components/deprecatedforms/emailField.tsx","webpack:///./app/components/deprecatedforms/numberField.tsx","webpack:///./app/components/deprecatedforms/selectAsyncField.tsx","webpack:///./app/components/deprecatedforms/selectCreatableField.tsx","webpack:///./app/components/deprecatedforms/textareaField.tsx","webpack:///./app/components/deprecatedforms/genericField.tsx","webpack:///./app/components/deprecatedforms/multipleCheckboxField.tsx","webpack:///./app/components/deprecatedforms/inputField.tsx","webpack:///./app/components/deprecatedforms/passwordField.tsx","webpack:///./app/components/deprecatedforms/radioBooleanField.tsx","webpack:///./app/components/deprecatedforms/selectField.tsx","webpack:///./app/components/deprecatedforms/textField.tsx","webpack:///./app/components/dropdownAutoComplete/menu.tsx","webpack:///./app/components/environmentPageFilter.tsx","webpack:///./app/components/errors/notFound.tsx","webpack:///./app/components/group/inboxBadges/shortId.tsx","webpack:///./app/components/group/inboxBadges/timesTag.tsx","webpack:///./app/components/eventOrGroupExtraDetails.tsx","webpack:///./app/components/events/eventAnnotation.tsx","webpack:///./app/components/footer.tsx","webpack:///./app/components/forms/apiForm.tsx","webpack:///./app/components/forms/checkboxField.tsx","webpack:///./app/components/forms/controls/radioGroup.tsx","webpack:///./app/components/forms/form.tsx","webpack:///./app/components/forms/inputField.tsx","webpack:///./app/components/forms/selectControl.tsx","webpack:///./app/components/forms/selectField.tsx","webpack:///./app/components/forms/state.tsx","webpack:///./app/components/globalEventProcessingAlert.tsx","webpack:///./app/components/group/inboxBadges/inboxReason.tsx","webpack:///./app/components/group/inboxBadges/unhandledTag.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/components/hookOrDefault.tsx","webpack:///./app/components/idBadge/userBadge.tsx","webpack:///./app/components/indicators.tsx","webpack:///./app/components/lazyLoad.tsx","webpack:///./app/utils/retryableImport.tsx","webpack:///./app/components/links/externalLink.tsx","webpack:///./app/components/noProjectMessage.tsx","webpack:///./app/components/organizations/environmentSelector.tsx","webpack:///./app/components/organizations/headerItem.tsx","webpack:///./app/components/organizations/multipleSelectorSubmitRow.tsx","webpack:///./app/components/organizations/pageFilterBar.tsx","webpack:///./app/components/organizations/pageFilterRow.tsx","webpack:///./app/components/organizations/pageFilters/desyncedFiltersAlert.tsx","webpack:///./app/components/organizations/backToIssues.tsx","webpack:///./app/components/organizations/headerItemPosition.tsx","webpack:///./app/components/organizations/headerSeparator.tsx","webpack:///./app/components/organizations/pageFilters/globalSelectionHeader.tsx","webpack:///./app/components/organizations/pageFilters/container.tsx","webpack:///./app/components/organizations/pageFilters/pageFilterDropdownButton.tsx","webpack:///./app/components/organizations/pageFilters/pageFilterPinButton.tsx","webpack:///./app/components/organizations/pageFilters/pageFilterPinIndicator.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/components/organizations/projectSelector/footer.tsx","webpack:///./app/components/organizations/projectSelector/selectorItem.tsx","webpack:///./app/components/organizations/projectSelector/index.tsx","webpack:///./app/components/organizations/timeRangeSelector/timePicker.tsx","webpack:///./app/components/organizations/timeRangeSelector/dateRange/index.tsx","webpack:///./app/components/organizations/timeRangeSelector/dateSummary.tsx","webpack:///./app/components/organizations/timeRangeSelector/selectorItems.tsx","webpack:///./app/components/organizations/timeRangeSelector/index.tsx","webpack:///./app/components/pageHeading.tsx","webpack:///./app/components/panels/panelBody.tsx","webpack:///./app/components/panels/panelFooter.tsx","webpack:///./app/components/panels/panelAlert.tsx","webpack:///./app/components/panels/panelTable.tsx","webpack:///./app/components/progressBar.tsx","webpack:///./app/components/projectPageFilter.tsx","webpack:///./app/components/projects/bookmarkStar.tsx","webpack:///./app/components/queryCount.tsx","webpack:///./app/components/sidebar/types.tsx","webpack:///./app/components/sidebarSection.tsx","webpack:///./app/components/stream/groupCheckBox.tsx","webpack:///./app/components/stream/group.tsx","webpack:///./app/components/stream/groupChart.tsx","webpack:///./app/components/text.tsx","webpack:///./app/components/toolbarHeader.tsx","webpack:///./app/constants/index.tsx","webpack:///./app/data/platformCategories.tsx","webpack:///./app/icons/iconAdd.tsx","webpack:///./app/icons/iconChevron.tsx","webpack:///./app/icons/iconDelete.tsx","webpack:///./app/icons/iconDownload.tsx","webpack:///./app/icons/iconEdit.tsx","webpack:///./app/icons/iconEllipsis.tsx","webpack:///./app/icons/iconInfo.tsx","webpack:///./app/icons/iconQuestion.tsx","webpack:///./app/icons/iconSearch.tsx","webpack:///./app/icons/iconSort.tsx","webpack:///./app/icons/iconUser.tsx","webpack:///./app/icons/iconArrow.tsx","webpack:///./app/icons/iconBell.tsx","webpack:///./app/icons/iconBroadcast.tsx","webpack:///./app/icons/iconChat.tsx","webpack:///./app/icons/iconCommit.tsx","webpack:///./app/icons/iconDashboard.tsx","webpack:///./app/icons/iconDocs.tsx","webpack:///./app/icons/iconExclamation.tsx","webpack:///./app/icons/iconFatal.tsx","webpack:///./app/icons/iconFile.tsx","webpack:///./app/icons/iconFire.tsx","webpack:///./app/icons/iconFix.tsx","webpack:///./app/icons/iconFlag.tsx","webpack:///./app/icons/iconGoogle.tsx","webpack:///./app/icons/iconHappy.tsx","webpack:///./app/icons/iconIssues.tsx","webpack:///./app/icons/iconLab.tsx","webpack:///./app/icons/iconLightning.tsx","webpack:///./app/icons/iconList.tsx","webpack:///./app/icons/iconLocation.tsx","webpack:///./app/icons/iconLock.tsx","webpack:///./app/icons/iconMail.tsx","webpack:///./app/icons/iconMarkdown.tsx","webpack:///./app/icons/iconMegaphone.tsx","webpack:///./app/icons/iconMeh.tsx","webpack:///./app/icons/iconMobile.tsx","webpack:///./app/icons/iconNext.tsx","webpack:///./app/icons/iconOpen.tsx","webpack:///./app/icons/iconPause.tsx","webpack:///./app/icons/iconPlay.tsx","webpack:///./app/icons/iconPrevious.tsx","webpack:///./app/icons/iconPrint.tsx","webpack:///./app/icons/iconProject.tsx","webpack:///./app/icons/iconDiamond.tsx","webpack:///./app/icons/iconReleases.tsx","webpack:///./app/icons/iconSad.tsx","webpack:///./app/icons/iconSentry.tsx","webpack:///./app/icons/iconShow.tsx","webpack:///./app/icons/iconSiren.tsx","webpack:///./app/icons/iconSliders.tsx","webpack:///./app/icons/iconSpan.tsx","webpack:///./app/icons/iconStack.tsx","webpack:///./app/icons/iconStats.tsx","webpack:///./app/icons/iconSubtract.tsx","webpack:///./app/icons/iconSupport.tsx","webpack:///./app/icons/iconSync.tsx","webpack:///./app/icons/iconTelescope.tsx","webpack:///./app/icons/iconTerminal.tsx","webpack:///./app/icons/iconToggle.tsx","webpack:///./app/icons/iconUpgrade.tsx","webpack:///./app/icons/svgIcon.tsx","webpack:///./app/components/bases/pluginComponentBase.tsx","webpack:///./app/plugins/components/settings.tsx","webpack:///./app/plugins/basePlugin.tsx","webpack:///./app/plugins/components/issueActions.tsx","webpack:///./app/plugins/defaultIssuePlugin.tsx","webpack:///./app/plugins/defaultPlugin.tsx","webpack:///./app/plugins/sessionstack/contexts/sessionstack.tsx","webpack:///./app/plugins/jira/components/issueActions.tsx","webpack:///./app/plugins/jira/components/settings.tsx","webpack:///./app/plugins/sessionstack/components/settings.tsx","webpack:///./app/plugins/index.tsx","webpack:///./app/plugins/registry.tsx","webpack:///./app/plugins/sessionstack/index.tsx","webpack:///./app/plugins/jira/index.tsx","webpack:///./app/stores/groupStore.tsx","webpack:///./app/stores/hookStore.tsx","webpack:///./app/stores/persistedStore.tsx","webpack:///./app/stores/projectsStatsStore.tsx","webpack:///./app/stores/selectedGroupStore.tsx","webpack:///./app/stores/sidebarPanelStore.tsx","webpack:///./app/styles/animations.tsx","webpack:///./app/styles/pulsingIndicator.tsx","webpack:///./app/styles/text.tsx","webpack:///./app/types/auth.tsx","webpack:///./app/types/group.tsx","webpack:///./app/types/integrations.tsx","webpack:///./app/types/onboarding.tsx","webpack:///./app/types/organization.tsx","webpack:///./app/types/release.tsx","webpack:///./app/types/system.tsx","webpack:///./app/types/sampling.tsx","webpack:///./app/types/stacktrace.tsx","webpack:///./app/utils.tsx","webpack:///./app/utils/analytics.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/callIfFunction.tsx","webpack:///./app/utils/demoMode.tsx","webpack:///./app/utils/discover/eventView.tsx","webpack:///./app/utils/discover/types.tsx","webpack:///./app/utils/eventWaiter.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/formatters.tsx","webpack:///./app/utils/getDynamicText.tsx","webpack:///./app/utils/getModalPortal.tsx","webpack:///./app/utils/getSdkUpdateSuggestion.tsx","webpack:///./app/utils/integrationUtil.tsx","webpack:///./app/utils/parseApiError.tsx","webpack:///./app/utils/performanceForSentry.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/utils/queryString.tsx","webpack:///./app/utils/redirect.tsx","webpack:///./app/utils/useNavigate.tsx","webpack:///./app/utils/streamManager.tsx","webpack:///./app/utils/trimSlug.tsx","webpack:///./app/utils/useMedia.tsx","webpack:///./app/utils/useRouteContext.tsx","webpack:///./app/utils/useScrollToTop.tsx","webpack:///./app/utils/withIssueTags.tsx","webpack:///./app/stores/sdkUpdatesStore.tsx","webpack:///./app/utils/withSdkUpdates.tsx","webpack:///./app/actionCreators/sdkUpdates.tsx","webpack:///./app/views/app/alertMessage.tsx","webpack:///./app/views/app/systemAlerts.tsx","webpack:///./app/views/auth/layout.tsx","webpack:///./app/views/dashboardsV2/types.tsx","webpack:///./app/views/eventsV2/data.tsx","webpack:///./app/views/eventsV2/savedQuery/utils.tsx","webpack:///./app/views/issueList/actions/reviewAction.tsx","webpack:///./app/views/issueList/noGroupsHandler/noUnresolvedIssues.tsx","webpack:///./app/views/issueList/noGroupsHandler/index.tsx","webpack:///./app/views/issueList/searchBar.tsx","webpack:///./app/views/onboarding/targetedOnboarding/components/integrationSelect.tsx","webpack:///./app/views/onboarding/targetedOnboarding/utils.tsx","webpack:///./app/views/organizationGroupDetails/types.tsx","webpack:///./app/views/routeContext.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {User, UserIdentityConfig} from 'sentry/types';\n\nexport async function disconnectIdentity(\n  identity: UserIdentityConfig,\n  onSuccess: {(): void}\n) {\n  const api = new Client();\n\n  try {\n    await api.requestPromise(\n      `/users/me/user-identities/${identity.category}/${identity.id}/`,\n      {\n        method: 'DELETE',\n      }\n    );\n  } catch {\n    addErrorMessage('Error disconnecting identity');\n    return;\n  }\n\n  addSuccessMessage(`Disconnected ${identity.provider.name}`);\n  onSuccess();\n}\n\nexport function updateUser(user: User) {\n  const previousUser = ConfigStore.get('user');\n\n  // If the user changed their theme preferences, we should also update\n  // the config store\n  if (\n    previousUser.options.theme !== user.options.theme &&\n    user.options.theme !== 'system'\n  ) {\n    ConfigStore.set('theme', user.options.theme);\n  }\n\n  // Ideally we'd fire an action but this is gonna get refactored soon anyway\n  ConfigStore.set('user', user);\n}\n\nexport function logout(api: Client) {\n  return api.requestPromise('/auth/', {method: 'DELETE'});\n}\n\nexport function removeAuthenticator(api: Client, userId: string, authId: string) {\n  return api.requestPromise(`/users/${userId}/authenticators/${authId}/`, {\n    method: 'DELETE',\n  });\n}\n","import {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {NewQuery, SavedQuery} from 'sentry/types';\n\nexport function fetchSavedQueries(\n  api: Client,\n  orgId: string,\n  query: string = ''\n): Promise<SavedQuery[]> {\n  const promise: Promise<SavedQuery[]> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/`,\n    {\n      method: 'GET',\n      query: {query: `version:2 ${query}`.trim()},\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to load saved queries'));\n  });\n  return promise;\n}\n\nexport function fetchSavedQuery(\n  api: Client,\n  orgId: string,\n  queryId: string\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${queryId}/`,\n    {\n      method: 'GET',\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to load saved query'));\n  });\n  return promise;\n}\n\nexport function createSavedQuery(\n  api: Client,\n  orgId: string,\n  query: NewQuery\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/`,\n    {\n      method: 'POST',\n      data: query,\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to create your saved query'));\n  });\n  return promise;\n}\n\nexport function updateSavedQuery(\n  api: Client,\n  orgId: string,\n  query: NewQuery\n): Promise<SavedQuery> {\n  const promise: Promise<SavedQuery> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${query.id}/`,\n    {\n      method: 'PUT',\n      data: query,\n    }\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to update your saved query'));\n  });\n  return promise;\n}\n\nexport function updateSavedQueryVisit(\n  orgId: string,\n  queryId: string | string[]\n): Promise<void> {\n  // Create a new client so the request is not cancelled\n  const api = new Client();\n  const promise = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${queryId}/visit/`,\n    {\n      method: 'POST',\n    }\n  );\n\n  return promise;\n}\n\nexport function deleteSavedQuery(\n  api: Client,\n  orgId: string,\n  queryId: string\n): Promise<void> {\n  const promise: Promise<void> = api.requestPromise(\n    `/organizations/${orgId}/discover/saved/${queryId}/`,\n    {method: 'DELETE'}\n  );\n\n  promise.catch(() => {\n    addErrorMessage(t('Unable to delete the saved query'));\n  });\n  return promise;\n}\n","import {isValidElement} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport IndicatorActions from 'sentry/actions/indicatorActions';\nimport FormModel, {FieldValue} from 'sentry/components/forms/model';\nimport {DEFAULT_TOAST_DURATION} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype IndicatorType = 'loading' | 'error' | 'success' | 'undo' | '';\n\ntype Options = {\n  append?: boolean;\n  disableDismiss?: boolean;\n  duration?: number;\n  modelArg?: {\n    id: string;\n    model: FormModel;\n    undo: () => void;\n  };\n  undo?: () => void;\n};\n\nexport type Indicator = {\n  id: string | number;\n  message: React.ReactNode;\n  options: Options;\n  type: IndicatorType;\n  clearId?: null | number;\n};\n\n// Removes a single indicator\nexport function removeIndicator(indicator: Indicator) {\n  IndicatorActions.remove(indicator);\n}\n\n// Clears all indicators\nexport function clearIndicators() {\n  IndicatorActions.clear();\n}\n\n// Note previous IndicatorStore.add behavior was to default to \"loading\" if no type was supplied\nexport function addMessage(\n  msg: React.ReactNode,\n  type: IndicatorType,\n  options: Options = {}\n): void {\n  const {duration: optionsDuration, append, ...rest} = options;\n\n  // XXX: Debug for https://sentry.io/organizations/sentry/issues/1595204979/\n  if (\n    // @ts-expect-error\n    typeof msg?.message !== 'undefined' &&\n    // @ts-expect-error\n    typeof msg?.code !== 'undefined' &&\n    // @ts-expect-error\n    typeof msg?.extra !== 'undefined'\n  ) {\n    Sentry.captureException(new Error('Attempt to XHR response to Indicators'));\n  }\n\n  // use default only if undefined, as 0 is a valid duration\n  const duration =\n    typeof optionsDuration === 'undefined' ? DEFAULT_TOAST_DURATION : optionsDuration;\n\n  const action = append ? 'append' : 'replace';\n  // XXX: This differs from `IndicatorStore.add` since it won't return the indicator that is created\n  // because we are firing an action. You can just add a new message and it will, by default,\n  // replace active indicator\n  IndicatorActions[action](msg, type, {...rest, duration});\n}\n\nfunction addMessageWithType(type: IndicatorType) {\n  return (msg: React.ReactNode, options?: Options) => addMessage(msg, type, options);\n}\n\nexport function addLoadingMessage(\n  msg: React.ReactNode = t('Saving changes...'),\n  options?: Options\n) {\n  return addMessageWithType('loading')(msg, options);\n}\n\nexport function addErrorMessage(msg: React.ReactNode, options?: Options) {\n  if (typeof msg === 'string' || isValidElement(msg)) {\n    return addMessageWithType('error')(msg, options);\n  }\n  // When non string, non-react element responses are passed, addErrorMessage\n  // crashes the entire page because it falls outside any error\n  // boundaries defined for the components on the page. Adding a fallback\n  // to prevent page crashes.\n  return addMessageWithType('error')(\n    t(\n      \"You've hit an issue, fortunately we use Sentry to monitor Sentry. So it's likely we're already looking into this!\"\n    ),\n    options\n  );\n}\n\nexport function addSuccessMessage(msg: React.ReactNode, options?: Options) {\n  return addMessageWithType('success')(msg, options);\n}\n\nconst PRETTY_VALUES: Map<unknown, string> = new Map([\n  ['', '<empty>'],\n  [null, '<none>'],\n  [undefined, '<unset>'],\n  // if we don't cast as any, then typescript complains because booleans are not valid keys\n  [true as any, 'enabled'],\n  [false as any, 'disabled'],\n]);\n\n// Transform form values into a string\n// Otherwise bool values will not get rendered and empty strings look like a bug\nconst prettyFormString = (val: ChangeValue, model: FormModel, fieldName: string) => {\n  const descriptor = model.fieldDescriptor.get(fieldName);\n\n  if (descriptor && typeof descriptor.formatMessageValue === 'function') {\n    const initialData = model.initialData;\n    // XXX(epurkhiser): We pass the \"props\" as the descriptor and initialData.\n    // This isn't necessarily all of the props of the form field, but should\n    // make up a good portion needed for formatting.\n    return descriptor.formatMessageValue(val, {...descriptor, initialData});\n  }\n\n  if (PRETTY_VALUES.has(val)) {\n    return PRETTY_VALUES.get(val);\n  }\n\n  return typeof val === 'object' ? val : String(val);\n};\n\n// Some fields have objects in them.\n// For example project key rate limits.\ntype ChangeValue = FieldValue | Record<string, any>;\n\ntype Change = {\n  new: ChangeValue;\n  old: ChangeValue;\n};\n\n/**\n * This will call an action creator to generate a \"Toast\" message that\n * notifies user the field that changed with its previous and current values.\n *\n * Also allows for undo\n */\n\nexport function saveOnBlurUndoMessage(\n  change: Change,\n  model: FormModel,\n  fieldName: string\n) {\n  if (!model) {\n    return;\n  }\n\n  const label = model.getDescriptor(fieldName, 'label');\n\n  if (!label) {\n    return;\n  }\n\n  const prettifyValue = (val: ChangeValue) => prettyFormString(val, model, fieldName);\n\n  // Hide the change text when formatMessageValue is explicitly set to false\n  const showChangeText = model.getDescriptor(fieldName, 'formatMessageValue') !== false;\n\n  addSuccessMessage(\n    tct(\n      showChangeText\n        ? 'Changed [fieldName] from [oldValue] to [newValue]'\n        : 'Changed [fieldName]',\n      {\n        root: <MessageContainer />,\n        fieldName: <FieldName>{label}</FieldName>,\n        oldValue: <FormValue>{prettifyValue(change.old)}</FormValue>,\n        newValue: <FormValue>{prettifyValue(change.new)}</FormValue>,\n      }\n    ),\n    {\n      modelArg: {\n        model,\n        id: fieldName,\n        undo: () => {\n          if (!model || !fieldName) {\n            return;\n          }\n\n          const oldValue = model.getValue(fieldName);\n          const didUndo = model.undo();\n          const newValue = model.getValue(fieldName);\n\n          if (!didUndo) {\n            return;\n          }\n          if (!label) {\n            return;\n          }\n\n          // `saveField` can return null if it can't save\n          const saveResult = model.saveField(fieldName, newValue);\n\n          if (!saveResult) {\n            addErrorMessage(\n              tct(\n                showChangeText\n                  ? 'Unable to restore [fieldName] from [oldValue] to [newValue]'\n                  : 'Unable to restore [fieldName]',\n                {\n                  root: <MessageContainer />,\n                  fieldName: <FieldName>{label}</FieldName>,\n                  oldValue: <FormValue>{prettifyValue(oldValue)}</FormValue>,\n                  newValue: <FormValue>{prettifyValue(newValue)}</FormValue>,\n                }\n              )\n            );\n            return;\n          }\n\n          saveResult.then(() => {\n            addMessage(\n              tct(\n                showChangeText\n                  ? 'Restored [fieldName] from [oldValue] to [newValue]'\n                  : 'Restored [fieldName]',\n                {\n                  root: <MessageContainer />,\n                  fieldName: <FieldName>{label}</FieldName>,\n                  oldValue: <FormValue>{prettifyValue(oldValue)}</FormValue>,\n                  newValue: <FormValue>{prettifyValue(newValue)}</FormValue>,\n                }\n              ),\n              'undo',\n              {\n                duration: DEFAULT_TOAST_DURATION,\n              }\n            );\n          });\n        },\n      },\n    }\n  );\n}\n\nconst FormValue = styled('span')`\n  font-style: italic;\n  margin: 0 ${space(0.5)};\n`;\nconst FieldName = styled('span')`\n  font-weight: bold;\n  margin: 0 ${space(0.5)};\n`;\nconst MessageContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n","import type {ModalTypes} from 'sentry/components/globalModal';\nimport type {DashboardWidgetModalOptions} from 'sentry/components/modals/addDashboardWidgetModal';\nimport type {CreateNewIntegrationModalOptions} from 'sentry/components/modals/createNewIntegrationModal';\nimport {DashboardWidgetLibraryModalOptions} from 'sentry/components/modals/dashboardWidgetLibraryModal';\nimport type {DashboardWidgetQuerySelectorModalOptions} from 'sentry/components/modals/dashboardWidgetQuerySelectorModal';\nimport {InviteRow} from 'sentry/components/modals/inviteMembersModal/types';\nimport type {ReprocessEventModalOptions} from 'sentry/components/modals/reprocessEventModal';\nimport {OverwriteWidgetModalProps} from 'sentry/components/modals/widgetBuilder/overwriteWidgetModal';\nimport type {WidgetViewerModalOptions} from 'sentry/components/modals/widgetViewerModal';\nimport ModalStore from 'sentry/stores/modalStore';\nimport {\n  Group,\n  IssueOwnership,\n  Organization,\n  Project,\n  SentryApp,\n  Team,\n} from 'sentry/types';\nimport {AppStoreConnectStatusData, CustomRepoType} from 'sentry/types/debugFiles';\nimport {Event} from 'sentry/types/event';\n\nexport type ModalOptions = ModalTypes['options'];\nexport type ModalRenderProps = ModalTypes['renderProps'];\n\n/**\n * Show a modal\n */\nexport function openModal(\n  renderer: (renderProps: ModalRenderProps) => React.ReactNode,\n  options?: ModalOptions\n) {\n  ModalStore.openModal(renderer, options ?? {});\n}\n\n/**\n * Close modal\n */\nexport function closeModal() {\n  ModalStore.closeModal();\n}\n\ntype OpenSudoModalOptions = {\n  isSuperuser?: boolean;\n  needsReload?: boolean;\n  onClose?: () => void;\n  retryRequest?: () => Promise<any>;\n  sudo?: boolean;\n};\n\ntype emailVerificationModalOptions = {\n  actionMessage?: string;\n  emailVerified?: boolean;\n  onClose?: () => void;\n};\n\ntype inviteMembersModalOptions = {\n  initialData?: Partial<InviteRow>[];\n  onClose?: () => void;\n  source?: string;\n};\n\nexport async function openSudo({onClose, ...args}: OpenSudoModalOptions = {}) {\n  const mod = await import('sentry/components/modals/sudoModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...args} />, {onClose});\n}\n\nexport async function openEmailVerification({\n  onClose,\n  ...args\n}: emailVerificationModalOptions = {}) {\n  const mod = await import('sentry/components/modals/emailVerificationModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...args} />, {onClose});\n}\n\ntype OpenDiffModalOptions = {\n  baseIssueId: Group['id'];\n  orgId: Organization['id'];\n  project: Project;\n  targetIssueId: string;\n  baseEventId?: Event['id'];\n  targetEventId?: string;\n};\n\nexport async function openDiffModal(options: OpenDiffModalOptions) {\n  const mod = await import('sentry/components/modals/diffModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {modalCss});\n}\n\ntype CreateTeamModalOptions = {\n  /**\n   * The organization to create a team for\n   */\n  organization: Organization;\n  onClose?: (team: Team) => void;\n  /**\n   * An initial project to add the team to. This may be deprecated soon as we may add a project selection inside of the modal flow\n   */\n  project?: Project;\n};\n\nexport async function openCreateTeamModal(options: CreateTeamModalOptions) {\n  const mod = await import('sentry/components/modals/createTeamModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />);\n}\n\ntype CreateOwnershipRuleModalOptions = {\n  issueId: string;\n  /**\n   * The organization to create a rules for\n   */\n  organization: Organization;\n  /**\n   * The project to create a rules for\n   */\n  project: Project;\n};\n\nexport type EditOwnershipRulesModalOptions = {\n  onSave: (text: string | null) => void;\n  organization: Organization;\n  ownership: IssueOwnership;\n  project: Project;\n};\n\nexport async function openCreateOwnershipRule(options: CreateOwnershipRuleModalOptions) {\n  const mod = await import('sentry/components/modals/createOwnershipRuleModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {modalCss});\n}\n\nexport async function openEditOwnershipRules(options: EditOwnershipRulesModalOptions) {\n  const mod = await import('sentry/components/modals/editOwnershipRulesModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openCommandPalette(options: ModalOptions = {}) {\n  const mod = await import('sentry/components/modals/commandPalette');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {modalCss});\n}\n\ntype RecoveryModalOptions = {\n  authenticatorName: string;\n};\n\nexport async function openRecoveryOptions(options: RecoveryModalOptions) {\n  const mod = await import('sentry/components/modals/recoveryOptionsModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />);\n}\n\nexport type TeamAccessRequestModalOptions = {\n  memberId: string;\n  orgId: string;\n  teamId: string;\n};\n\nexport async function openTeamAccessRequestModal(options: TeamAccessRequestModalOptions) {\n  const mod = await import('sentry/components/modals/teamAccessRequestModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />);\n}\n\nexport async function redirectToProject(newProjectSlug: string) {\n  const mod = await import('sentry/components/modals/redirectToProject');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} slug={newProjectSlug} />, {});\n}\n\ntype HelpSearchModalOptions = {\n  organization?: Organization;\n  placeholder?: string;\n};\n\nexport async function openHelpSearchModal(options?: HelpSearchModalOptions) {\n  const mod = await import('sentry/components/modals/helpSearchModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {modalCss});\n}\n\nexport type SentryAppDetailsModalOptions = {\n  isInstalled: boolean;\n  onInstall: () => Promise<void>;\n  organization: Organization;\n  sentryApp: SentryApp;\n  onCloseModal?: () => void; // used for analytics\n};\n\ntype DebugFileSourceModalOptions = {\n  appStoreConnectSourcesQuantity: number;\n  onSave: (data: Record<string, any>) => Promise<void>;\n  organization: Organization;\n  sourceType: CustomRepoType;\n  appStoreConnectStatusData?: AppStoreConnectStatusData;\n  onClose?: () => void;\n  sourceConfig?: Record<string, any>;\n};\n\nexport async function openDebugFileSourceModal({\n  onClose,\n  ...restOptions\n}: DebugFileSourceModalOptions) {\n  const mod = await import('sentry/components/modals/debugFileCustomRepository');\n\n  const {default: Modal, modalCss} = mod;\n  openModal(deps => <Modal {...deps} {...restOptions} />, {\n    modalCss,\n    onClose,\n  });\n}\n\nexport async function openInviteMembersModal({\n  onClose,\n  ...args\n}: inviteMembersModalOptions = {}) {\n  const mod = await import('sentry/components/modals/inviteMembersModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...args} />, {modalCss, onClose});\n}\n\nexport async function openAddDashboardWidgetModal(options: DashboardWidgetModalOptions) {\n  const mod = await import('sentry/components/modals/addDashboardWidgetModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openWidgetBuilderOverwriteModal(\n  options: OverwriteWidgetModalProps\n) {\n  const mod = await import('sentry/components/modals/widgetBuilder/overwriteWidgetModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openAddToDashboardModal(options) {\n  const mod = await import('sentry/components/modals/widgetBuilder/addToDashboardModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openReprocessEventModal({\n  onClose,\n  ...options\n}: ReprocessEventModalOptions & {onClose?: () => void}) {\n  const mod = await import('sentry/components/modals/reprocessEventModal');\n\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {onClose});\n}\n\nexport async function demoSignupModal(options: ModalOptions = {}) {\n  const mod = await import('sentry/components/modals/demoSignUp');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {modalCss});\n}\n\nexport async function openDashboardWidgetQuerySelectorModal(\n  options: DashboardWidgetQuerySelectorModalOptions\n) {\n  const mod = await import('sentry/components/modals/dashboardWidgetQuerySelectorModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openDashboardWidgetLibraryModal(\n  options: DashboardWidgetLibraryModalOptions\n) {\n  const mod = await import('sentry/components/modals/dashboardWidgetLibraryModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {backdrop: 'static', modalCss});\n}\n\nexport async function openWidgetViewerModal({\n  onClose,\n  ...options\n}: WidgetViewerModalOptions & {onClose?: () => void}) {\n  const mod = await import('sentry/components/modals/widgetViewerModal');\n  const {default: Modal, modalCss} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />, {\n    backdrop: 'static',\n    modalCss,\n    onClose,\n  });\n}\n\nexport async function openCreateNewIntegrationModal(\n  options: CreateNewIntegrationModalOptions\n) {\n  const mod = await import('sentry/components/modals/createNewIntegrationModal');\n  const {default: Modal} = mod;\n\n  openModal(deps => <Modal {...deps} {...options} />);\n}\n","import OrganizationActions from 'sentry/actions/organizationActions';\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {OnboardingTask, Organization} from 'sentry/types';\n\n/**\n * Update an onboarding task.\n *\n * If no API client is provided the task will not be updated on the server side\n * and will only update in the organization store.\n */\nexport function updateOnboardingTask(\n  api: Client | null,\n  organization: Organization,\n  updatedTask: Partial<Pick<OnboardingTask, 'status' | 'data'>> & {\n    task: OnboardingTask['task'];\n    /**\n     * Marks completion seen. This differs from the OnboardingTask\n     * completionSeen type as that returns the date completion was seen.\n     */\n    completionSeen?: boolean;\n  }\n) {\n  if (api !== null) {\n    api.requestPromise(`/organizations/${organization.slug}/onboarding-tasks/`, {\n      method: 'POST',\n      data: updatedTask,\n    });\n  }\n\n  const hasExistingTask = organization.onboardingTasks.find(\n    task => task.task === updatedTask.task\n  );\n\n  const user = ConfigStore.get('user');\n  const onboardingTasks = hasExistingTask\n    ? organization.onboardingTasks.map(task =>\n        task.task === updatedTask.task ? {...task, ...updatedTask} : task\n      )\n    : [...organization.onboardingTasks, {...updatedTask, user}];\n\n  OrganizationActions.update({onboardingTasks});\n}\n","export async function getPreloadedDataPromise(\n  name: string,\n  slug: string,\n  fallback: () => Promise<any>,\n  isInitialFetch?: boolean\n) {\n  try {\n    const data = (window as any).__sentry_preload;\n    if (\n      !isInitialFetch ||\n      !data ||\n      !data.orgSlug ||\n      data.orgSlug.toLowerCase() !== slug.toLowerCase() ||\n      !data[name] ||\n      !data[name].then\n    ) {\n      return await fallback();\n    }\n    const result = await data[name].catch(fallback);\n    if (!result) {\n      return await fallback();\n    }\n    return await result;\n  } catch (_) {\n    //\n  }\n  return await fallback();\n}\n","// XXX(epurkhiser): Ensure the LatestContextStore is initialized before we set\n// the active org. Otherwise we will trigger an action that does nothing\nimport 'sentry/stores/latestContextStore';\n\nimport * as Sentry from '@sentry/react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {setActiveOrganization} from 'sentry/actionCreators/organizations';\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport PageFiltersActions from 'sentry/actions/pageFiltersActions';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {Organization, Project, Team} from 'sentry/types';\nimport {getPreloadedDataPromise} from 'sentry/utils/getPreloadedData';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\n\nasync function fetchOrg(\n  api: Client,\n  slug: string,\n  isInitialFetch?: boolean\n): Promise<Organization> {\n  const [org] = await getPreloadedDataPromise(\n    'organization',\n    slug,\n    () =>\n      // This data should get preloaded in static/sentry/index.ejs\n      // If this url changes make sure to update the preload\n      api.requestPromise(`/organizations/${slug}/`, {\n        includeAllArgs: true,\n        query: {detailed: 0},\n      }),\n    isInitialFetch\n  );\n\n  if (!org) {\n    throw new Error('retrieved organization is falsey');\n  }\n\n  OrganizationActions.update(org, {replace: true});\n  setActiveOrganization(org);\n\n  return org;\n}\n\nasync function fetchProjectsAndTeams(\n  slug: string,\n  isInitialFetch?: boolean\n): Promise<\n  [\n    [Project[], string | undefined, XMLHttpRequest | ResponseMeta | undefined],\n    [Team[], string | undefined, XMLHttpRequest | ResponseMeta | undefined]\n  ]\n> {\n  // Create a new client so the request is not cancelled\n  const uncancelableApi = new Client();\n\n  const projectsPromise = getPreloadedDataPromise(\n    'projects',\n    slug,\n    () =>\n      // This data should get preloaded in static/sentry/index.ejs\n      // If this url changes make sure to update the preload\n      uncancelableApi.requestPromise(`/organizations/${slug}/projects/`, {\n        includeAllArgs: true,\n        query: {\n          all_projects: 1,\n          collapse: 'latestDeploys',\n        },\n      }),\n    isInitialFetch\n  );\n\n  const teamsPromise = getPreloadedDataPromise(\n    'teams',\n    slug,\n    // This data should get preloaded in static/sentry/index.ejs\n    // If this url changes make sure to update the preload\n    () =>\n      uncancelableApi.requestPromise(`/organizations/${slug}/teams/`, {\n        includeAllArgs: true,\n      }),\n    isInitialFetch\n  );\n\n  try {\n    return await Promise.all([projectsPromise, teamsPromise]);\n  } catch (err) {\n    // It's possible these requests fail with a 403 if the user has a role with\n    // insufficient access to projects and teams, but *can* access org details\n    // (e.g. billing). An example of this is in org settings.\n    //\n    // Ignore 403s and bubble up other API errors\n    if (err.status !== 403) {\n      throw err;\n    }\n  }\n\n  return [\n    [[], undefined, undefined],\n    [[], undefined, undefined],\n  ];\n}\n\n/**\n * Fetches an organization's details\n *\n * @param api A reference to the api client\n * @param slug The organization slug\n * @param silent Should we silently update the organization (do not clear the\n *               current organization in the store)\n */\nexport function fetchOrganizationDetails(\n  api: Client,\n  slug: string,\n  silent: boolean,\n  isInitialFetch?: boolean\n) {\n  if (!silent) {\n    OrganizationActions.reset();\n    ProjectActions.reset();\n    TeamActions.reset();\n    PageFiltersActions.reset();\n  }\n\n  const loadOrganization = async () => {\n    try {\n      await fetchOrg(api, slug, isInitialFetch);\n    } catch (err) {\n      if (!err) {\n        return;\n      }\n\n      OrganizationActions.fetchOrgError(err);\n\n      if (err.status === 403 || err.status === 401) {\n        const errMessage =\n          typeof err.responseJSON?.detail === 'string'\n            ? err.responseJSON?.detail\n            : typeof err.responseJSON?.detail?.message === 'string'\n            ? err.responseJSON?.detail.message\n            : null;\n\n        if (errMessage) {\n          addErrorMessage(errMessage);\n        }\n\n        return;\n      }\n\n      Sentry.captureException(err);\n    }\n  };\n\n  const loadTeamsAndProjects = async () => {\n    const [[projects], [teams, , resp]] = await fetchProjectsAndTeams(\n      slug,\n      isInitialFetch\n    );\n\n    ProjectActions.loadProjects(projects);\n\n    const teamPageLinks = resp?.getResponseHeader('Link');\n    if (teamPageLinks) {\n      const paginationObject = parseLinkHeader(teamPageLinks);\n      const hasMore = paginationObject?.next?.results ?? false;\n      const cursor = paginationObject.next?.cursor;\n      TeamActions.loadTeams(teams, hasMore, cursor);\n    } else {\n      TeamActions.loadTeams(teams);\n    }\n  };\n\n  return Promise.all([loadOrganization(), loadTeamsAndProjects()]);\n}\n","import {browserHistory} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {resetPageFilters} from 'sentry/actionCreators/pageFilters';\nimport OrganizationActions from 'sentry/actions/organizationActions';\nimport OrganizationsActions from 'sentry/actions/organizationsActions';\nimport {Client} from 'sentry/api';\nimport OrganizationsStore from 'sentry/stores/organizationsStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {Organization} from 'sentry/types';\n\ntype RedirectRemainingOrganizationParams = {\n  /**\n   * The organization slug\n   */\n  orgId: string;\n\n  /**\n   * Should remove org?\n   */\n  removeOrg?: boolean;\n};\n\n/**\n * After removing an organization, this will redirect to a remaining active organization or\n * the screen to create a new organization.\n *\n * Can optionally remove organization from organizations store.\n */\nexport function redirectToRemainingOrganization({\n  orgId,\n  removeOrg,\n}: RedirectRemainingOrganizationParams) {\n  // Remove queued, should redirect\n  const allOrgs = OrganizationsStore.getAll().filter(\n    org => org.status.id === 'active' && org.slug !== orgId\n  );\n  if (!allOrgs.length) {\n    browserHistory.push('/organizations/new/');\n    return;\n  }\n\n  // Let's be smart and select the best org to redirect to\n  const firstRemainingOrg = allOrgs[0];\n  browserHistory.push(`/${firstRemainingOrg.slug}/`);\n\n  // Remove org from SidebarDropdown\n  if (removeOrg) {\n    OrganizationsStore.remove(orgId);\n  }\n}\n\ntype RemoveParams = {\n  /**\n   * The organization slug\n   */\n  orgId: string;\n\n  /**\n   * An optional error message to be used in a toast, if remove fails\n   */\n  errorMessage?: string;\n\n  /**\n   * An optional success message to be used in a toast, if remove succeeds\n   */\n  successMessage?: string;\n};\n\nexport function remove(api: Client, {successMessage, errorMessage, orgId}: RemoveParams) {\n  const endpoint = `/organizations/${orgId}/`;\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(() => {\n      OrganizationsActions.removeSuccess(orgId);\n\n      if (successMessage) {\n        addSuccessMessage(successMessage);\n      }\n    })\n    .catch(() => {\n      OrganizationsActions.removeError();\n\n      if (errorMessage) {\n        addErrorMessage(errorMessage);\n      }\n    });\n}\n\nexport function switchOrganization() {\n  resetPageFilters();\n}\n\nexport function removeAndRedirectToRemainingOrganization(\n  api: Client,\n  params: RedirectRemainingOrganizationParams & RemoveParams\n) {\n  remove(api, params).then(() => redirectToRemainingOrganization(params));\n}\n\n/**\n * Set active organization\n */\nexport function setActiveOrganization(org: Organization) {\n  OrganizationsActions.setActive(org);\n}\n\nexport function changeOrganizationSlug(\n  prev: Organization,\n  next: Partial<Organization> & Pick<Organization, 'slug'>\n) {\n  OrganizationsActions.changeSlug(prev, next);\n}\n\n/**\n * Updates an organization for the store\n *\n * Accepts a partial organization as it will merge will existing organization\n */\nexport function updateOrganization(org: Partial<Organization>) {\n  OrganizationsActions.update(org);\n  OrganizationActions.update(org);\n}\n\ntype FetchOrganizationByMemberParams = {\n  addOrg?: boolean;\n  fetchOrgDetails?: boolean;\n};\n\nexport async function fetchOrganizationByMember(\n  memberId: string,\n  {addOrg, fetchOrgDetails}: FetchOrganizationByMemberParams\n) {\n  const api = new Client();\n  const data = await api.requestPromise(`/organizations/?query=member_id:${memberId}`);\n\n  if (!data.length) {\n    return null;\n  }\n\n  const org = data[0];\n\n  if (addOrg) {\n    // add org to SwitchOrganization dropdown\n    OrganizationsStore.add(org);\n  }\n\n  if (fetchOrgDetails) {\n    // load SidebarDropdown with org details including `access`\n    await fetchOrganizationDetails(org.slug, {setActive: true, loadProjects: true});\n  }\n\n  return org;\n}\n\ntype FetchOrganizationDetailsParams = {\n  /**\n   * Should load projects in ProjectsStore\n   */\n  loadProjects?: boolean;\n\n  /**\n   * Should load teams in TeamStore?\n   */\n  loadTeam?: boolean;\n\n  /**\n   * Should set as active organization?\n   */\n  setActive?: boolean;\n};\nexport async function fetchOrganizationDetails(\n  orgId: string,\n  {setActive, loadProjects, loadTeam}: FetchOrganizationDetailsParams\n) {\n  const api = new Client();\n  const data = await api.requestPromise(`/organizations/${orgId}/`);\n\n  if (setActive) {\n    setActiveOrganization(data);\n  }\n\n  if (loadTeam) {\n    TeamStore.loadInitialData(data.teams, false, null);\n  }\n\n  if (loadProjects) {\n    ProjectsStore.loadInitialData(data.projects || []);\n  }\n\n  return data;\n}\n","import Cookies from 'js-cookie';\n\nimport PreferenceStore from 'sentry/stores/preferencesStore';\n\nconst SIDEBAR_COOKIE_KEY = 'sidebar_collapsed';\nconst COOKIE_ENABLED = '1';\nconst COOKIE_DISABLED = '0';\n\nexport function hideSidebar() {\n  PreferenceStore.hideSidebar();\n  Cookies.set(SIDEBAR_COOKIE_KEY, COOKIE_ENABLED);\n}\n\nexport function showSidebar() {\n  PreferenceStore.showSidebar();\n  Cookies.set(SIDEBAR_COOKIE_KEY, COOKIE_DISABLED);\n}\n\nexport function loadPreferencesState() {\n  // Set initial \"collapsed\" state to true or false\n  PreferenceStore.loadInitialState({\n    collapsed: Cookies.get(SIDEBAR_COOKIE_KEY) === COOKIE_ENABLED,\n  });\n}\n","import {Query} from 'history';\nimport chunk from 'lodash/chunk';\nimport debounce from 'lodash/debounce';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport ProjectsStatsStore from 'sentry/stores/projectsStatsStore';\nimport {Project, Team} from 'sentry/types';\n\ntype UpdateParams = {\n  orgId: string;\n  projectId: string;\n  data?: {[key: string]: any};\n  query?: Query;\n};\n\nexport function update(api: Client, params: UpdateParams) {\n  ProjectActions.update(params.projectId, params.data);\n\n  const endpoint = `/projects/${params.orgId}/${params.projectId}/`;\n  return api\n    .requestPromise(endpoint, {\n      method: 'PUT',\n      data: params.data,\n    })\n    .then(\n      data => {\n        ProjectActions.updateSuccess(data);\n        return data;\n      },\n      err => {\n        ProjectActions.updateError(err, params.projectId);\n        throw err;\n      }\n    );\n}\n\ntype StatsParams = Pick<UpdateParams, 'orgId' | 'data' | 'query'>;\n\nexport function loadStats(api: Client, params: StatsParams) {\n  ProjectActions.loadStats(params.orgId, params.data);\n\n  const endpoint = `/organizations/${params.orgId}/stats/`;\n  api.request(endpoint, {\n    query: params.query,\n    success: data => {\n      ProjectActions.loadStatsSuccess(data);\n    },\n    error: data => {\n      ProjectActions.loadStatsError(data);\n    },\n  });\n}\n\n// This is going to queue up a list of project ids we need to fetch stats for\n// Will be cleared when debounced function fires\nconst _projectStatsToFetch: Set<string> = new Set();\n\n// Max projects to query at a time, otherwise if we fetch too many in the same request\n// it can timeout\nconst MAX_PROJECTS_TO_FETCH = 10;\n\nconst _queryForStats = (\n  api: Client,\n  projects: string[],\n  orgId: string,\n  additionalQuery: Query | undefined\n) => {\n  const idQueryParams = projects.map(project => `id:${project}`).join(' ');\n  const endpoint = `/organizations/${orgId}/projects/`;\n\n  const query: Query = {\n    statsPeriod: '24h',\n    query: idQueryParams,\n    ...additionalQuery,\n  };\n\n  return api.requestPromise(endpoint, {\n    query,\n  });\n};\n\nexport const _debouncedLoadStats = debounce(\n  (api: Client, projectSet: Set<string>, params: UpdateParams) => {\n    const storedProjects: {[key: string]: Project} = ProjectsStatsStore.getAll();\n    const existingProjectStats = Object.values(storedProjects).map(({id}) => id);\n    const projects = Array.from(projectSet).filter(\n      project => !existingProjectStats.includes(project)\n    );\n\n    if (!projects.length) {\n      _projectStatsToFetch.clear();\n      return;\n    }\n\n    // Split projects into more manageable chunks to query, otherwise we can\n    // potentially face server timeouts\n    const queries = chunk(projects, MAX_PROJECTS_TO_FETCH).map(chunkedProjects =>\n      _queryForStats(api, chunkedProjects, params.orgId, params.query)\n    );\n\n    Promise.all(queries)\n      .then(results => {\n        ProjectActions.loadStatsForProjectSuccess(\n          results.reduce((acc, result) => acc.concat(result), [])\n        );\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to fetch all project stats'));\n      });\n\n    // Reset projects list\n    _projectStatsToFetch.clear();\n  },\n  50\n);\n\nexport function loadStatsForProject(api: Client, project: string, params: UpdateParams) {\n  // Queue up a list of projects that we need stats for\n  // and call a debounced function to fetch stats for list of projects\n  _projectStatsToFetch.add(project);\n  _debouncedLoadStats(api, _projectStatsToFetch, params);\n}\n\nexport function setActiveProject(project: Project | null) {\n  ProjectActions.setActive(project);\n}\n\nexport function removeProject(api: Client, orgId: string, project: Project) {\n  const endpoint = `/projects/${orgId}/${project.slug}/`;\n\n  ProjectActions.removeProject(project);\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      () => {\n        ProjectActions.removeProjectSuccess(project);\n        addSuccessMessage(\n          tct('[project] was successfully removed', {project: project.slug})\n        );\n      },\n      err => {\n        ProjectActions.removeProjectError(project);\n        addErrorMessage(tct('Error removing [project]', {project: project.slug}));\n        throw err;\n      }\n    );\n}\n\nexport function transferProject(\n  api: Client,\n  orgId: string,\n  project: Project,\n  email: string\n) {\n  const endpoint = `/projects/${orgId}/${project.slug}/transfer/`;\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n      data: {\n        email,\n      },\n    })\n    .then(\n      () => {\n        addSuccessMessage(\n          tct('A request was sent to move [project] to a different organization', {\n            project: project.slug,\n          })\n        );\n      },\n      err => {\n        let message = '';\n        // Handle errors with known failures\n        if (err.status >= 400 && err.status < 500 && err.responseJSON) {\n          message = err.responseJSON?.detail;\n        }\n\n        if (message) {\n          addErrorMessage(\n            tct('Error transferring [project]. [message]', {\n              project: project.slug,\n              message,\n            })\n          );\n        } else {\n          addErrorMessage(\n            tct('Error transferring [project]', {\n              project: project.slug,\n            })\n          );\n        }\n\n        throw err;\n      }\n    );\n}\n\n/**\n * Associate a team with a project\n */\n\n/**\n *  Adds a team to a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param team Team data object\n */\nexport function addTeamToProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  team: Team\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${team.slug}/`;\n\n  addLoadingMessage();\n  ProjectActions.addTeam(team);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been added to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamSuccess(team, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to add [team] to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamError();\n        throw err;\n      }\n    );\n}\n\n/**\n * Removes a team from a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param teamSlug Team Slug\n */\nexport function removeTeamFromProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  teamSlug: string\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${teamSlug}/`;\n\n  addLoadingMessage();\n  ProjectActions.removeTeam(teamSlug);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been removed from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamSuccess(teamSlug, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to remove [team] from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamError(err);\n        throw err;\n      }\n    );\n}\n\n/**\n * Change a project's slug\n *\n * @param prev Previous slug\n * @param next New slug\n */\nexport function changeProjectSlug(prev: string, next: string) {\n  ProjectActions.changeSlug(prev, next);\n}\n\n/**\n * Send a sample event\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n */\nexport function sendSampleEvent(api: Client, orgSlug: string, projectSlug: string) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/create-sample/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'POST',\n  });\n}\n\n/**\n * Creates a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param team The team slug to assign the project to\n * @param name Name of the project\n * @param platform The platform key of the project\n * @param options Additional options such as creating default alert rules\n */\nexport function createProject(\n  api: Client,\n  orgSlug: string,\n  team: string,\n  name: string,\n  platform: string,\n  options: {defaultRules?: boolean} = {}\n) {\n  return api.requestPromise(`/teams/${orgSlug}/${team}/projects/`, {\n    method: 'POST',\n    data: {name, platform, default_rules: options.defaultRules},\n  });\n}\n\n/**\n * Load platform documentation specific to the project. The DSN and various\n * other project specific secrets will be included in the documentation.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param platform Project platform.\n */\nexport function loadDocs(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  platform: PlatformKey\n) {\n  return api.requestPromise(`/projects/${orgSlug}/${projectSlug}/docs/${platform}/`);\n}\n\n/**\n * Load the counts of my projects and all projects for the current user\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n */\nexport function fetchProjectsCount(api: Client, orgSlug: string) {\n  return api.requestPromise(`/organizations/${orgSlug}/projects-count/`);\n}\n\n/**\n * Check if there are any releases in the last 90 days.\n * Used for checking if project is using releases.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectId Project Id\n */\nexport async function fetchAnyReleaseExistence(\n  api: Client,\n  orgSlug: string,\n  projectId: number | string\n) {\n  const data = await api.requestPromise(`/organizations/${orgSlug}/releases/stats/`, {\n    method: 'GET',\n    query: {\n      statsPeriod: '90d',\n      project: projectId,\n      per_page: 1,\n    },\n  });\n\n  return data.length > 0;\n}\n","import {createActions} from 'reflux';\n\nconst MemberActions = createActions([\n  'createSuccess',\n  'update',\n  'updateError',\n  'updateSuccess',\n  'resendMemberInvite',\n  'resendMemberInviteSuccess',\n  'resendMemberInviteError',\n]);\n\nexport default MemberActions;\n","import {browserHistory} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport Cookies from 'js-cookie';\nimport isUndefined from 'lodash/isUndefined';\nimport * as qs from 'query-string';\n\nimport {openSudo, redirectToProject} from 'sentry/actionCreators/modal';\nimport {EXPERIMENTAL_SPA} from 'sentry/constants';\nimport {\n  PROJECT_MOVED,\n  SUDO_REQUIRED,\n  SUPERUSER_REQUIRED,\n} from 'sentry/constants/apiErrorCodes';\nimport {metric} from 'sentry/utils/analytics';\nimport getCsrfToken from 'sentry/utils/getCsrfToken';\nimport {uniqueId} from 'sentry/utils/guid';\nimport createRequestError from 'sentry/utils/requestError/createRequestError';\n\nexport class Request {\n  /**\n   * Is the request still in flight\n   */\n  alive: boolean;\n  /**\n   * Promise which will be resolved when the request has completed\n   */\n  requestPromise: Promise<Response>;\n  /**\n   * AbortController to cancel the in-flight request. This will not be set in\n   * unsupported browsers.\n   */\n  aborter?: AbortController;\n\n  constructor(requestPromise: Promise<Response>, aborter?: AbortController) {\n    this.requestPromise = requestPromise;\n    this.aborter = aborter;\n    this.alive = true;\n  }\n\n  cancel() {\n    this.alive = false;\n    this.aborter?.abort();\n    metric('app.api.request-abort', 1);\n  }\n}\n\nexport type ResponseMeta<R = any> = {\n  /**\n   * Get a header value from the response\n   */\n  getResponseHeader: (header: string) => string | null;\n  /**\n   * The raw response\n   */\n  rawResponse: Response;\n  /**\n   * The response body decoded from json\n   */\n  responseJSON: R;\n  /**\n   * The string value of the response\n   */\n  responseText: string;\n  /**\n   * The response status code\n   */\n  status: Response['status'];\n  /**\n   * The response status code text\n   */\n  statusText: Response['statusText'];\n};\n\n/**\n * Check if the requested method does not require CSRF tokens\n */\nfunction csrfSafeMethod(method?: string) {\n  // these HTTP methods do not require CSRF protection\n  return /^(GET|HEAD|OPTIONS|TRACE)$/.test(method ?? '');\n}\n\n// TODO: Need better way of identifying anonymous pages that don't trigger redirect\nconst ALLOWED_ANON_PAGES = [\n  /^\\/accept\\//,\n  /^\\/share\\//,\n  /^\\/auth\\/login\\//,\n  /^\\/join-request\\//,\n];\n\n/**\n * Return true if we should skip calling the normal error handler\n */\nconst globalErrorHandlers: ((resp: ResponseMeta) => boolean)[] = [];\n\nexport const initApiClientErrorHandling = () =>\n  globalErrorHandlers.push((resp: ResponseMeta) => {\n    const pageAllowsAnon = ALLOWED_ANON_PAGES.find(regex =>\n      regex.test(window.location.pathname)\n    );\n\n    // Ignore error unless it is a 401\n    if (!resp || resp.status !== 401 || pageAllowsAnon) {\n      return false;\n    }\n\n    const code = resp?.responseJSON?.detail?.code;\n    const extra = resp?.responseJSON?.detail?.extra;\n\n    // 401s can also mean sudo is required or it's a request that is allowed to fail\n    // Ignore if these are the cases\n    if (\n      [\n        'sudo-required',\n        'ignore',\n        '2fa-required',\n        'app-connect-authentication-error',\n      ].includes(code)\n    ) {\n      return false;\n    }\n\n    // If user must login via SSO, redirect to org login page\n    if (code === 'sso-required') {\n      window.location.assign(extra.loginUrl);\n      return true;\n    }\n\n    if (code === 'member-disabled-over-limit') {\n      browserHistory.replace(extra.next);\n      return true;\n    }\n\n    // Otherwise, the user has become unauthenticated. Send them to auth\n    Cookies.set('session_expired', '1');\n\n    if (EXPERIMENTAL_SPA) {\n      browserHistory.replace('/auth/login/');\n    } else {\n      window.location.reload();\n    }\n    return true;\n  });\n\n/**\n * Construct a full request URL\n */\nfunction buildRequestUrl(baseUrl: string, path: string, query: RequestOptions['query']) {\n  let params: string;\n  try {\n    params = qs.stringify(query ?? []);\n  } catch (err) {\n    Sentry.withScope(scope => {\n      scope.setExtra('path', path);\n      scope.setExtra('query', query);\n      Sentry.captureException(err);\n    });\n    throw err;\n  }\n\n  // Append the baseUrl\n  let fullUrl = path.includes(baseUrl) ? path : baseUrl + path;\n\n  // Append query parameters\n  if (params) {\n    fullUrl += fullUrl.includes('?') ? `&${params}` : `?${params}`;\n  }\n\n  return fullUrl;\n}\n\n/**\n * Check if the API response says project has been renamed.  If so, redirect\n * user to new project slug\n */\n// TODO(ts): refine this type later\nexport function hasProjectBeenRenamed(response: ResponseMeta) {\n  const code = response?.responseJSON?.detail?.code;\n\n  // XXX(billy): This actually will never happen because we can't intercept the 302\n  // jQuery ajax will follow the redirect by default...\n  //\n  // TODO(epurkhiser): We use fetch now, is the above comment still true?\n  if (code !== PROJECT_MOVED) {\n    return false;\n  }\n\n  const slug = response?.responseJSON?.detail?.extra?.slug;\n\n  redirectToProject(slug);\n  return true;\n}\n\n// TODO(ts): move this somewhere\nexport type APIRequestMethod = 'POST' | 'GET' | 'DELETE' | 'PUT';\n\ntype FunctionCallback<Args extends any[] = any[]> = (...args: Args) => void;\n\nexport type RequestCallbacks = {\n  /**\n   * Callback for the request completing (success or error)\n   */\n  complete?: (resp: ResponseMeta, textStatus: string) => void;\n  /**\n   * Callback for the request failing with an error\n   */\n  // TODO(ts): Update this when sentry is mostly migrated to TS\n  error?: FunctionCallback;\n  /**\n   * Callback for the request completing successfully\n   */\n  success?: (data: any, textStatus?: string, resp?: ResponseMeta) => void;\n};\n\nexport type RequestOptions = RequestCallbacks & {\n  /**\n   * Values to attach to the body of the request.\n   */\n  data?: any;\n  /**\n   * The HTTP method to use when making the API request\n   */\n  method?: APIRequestMethod;\n  /**\n   * Because of the async nature of API requests, errors will happen outside of\n   * the stack that initated the request. a preservedError can be passed to\n   * coalesce the stacks together.\n   */\n  preservedError?: Error;\n  /**\n   * Query parameters to add to the requested URL.\n   */\n  query?: Record<string, any>;\n};\n\ntype ClientOptions = {\n  /**\n   * The base URL path to prepend to API request URIs.\n   */\n  baseUrl?: string;\n};\n\ntype HandleRequestErrorOptions = {\n  id: string;\n  path: string;\n  requestOptions: Readonly<RequestOptions>;\n};\n\n/**\n * The API client is used to make HTTP requests to Sentry's backend.\n *\n * This is they preferred way to talk to the backend.\n */\nexport class Client {\n  baseUrl: string;\n  activeRequests: Record<string, Request>;\n\n  constructor(options: ClientOptions = {}) {\n    this.baseUrl = options.baseUrl ?? '/api/0';\n    this.activeRequests = {};\n  }\n\n  wrapCallback<T extends any[]>(\n    id: string,\n    func: FunctionCallback<T> | undefined,\n    cleanup: boolean = false\n  ) {\n    return (...args: T) => {\n      const req = this.activeRequests[id];\n\n      if (cleanup === true) {\n        delete this.activeRequests[id];\n      }\n\n      if (!req?.alive) {\n        return;\n      }\n\n      // Check if API response is a 302 -- means project slug was renamed and user\n      // needs to be redirected\n      // @ts-expect-error\n      if (hasProjectBeenRenamed(...args)) {\n        return;\n      }\n\n      if (isUndefined(func)) {\n        return;\n      }\n\n      // Call success callback\n      return func.apply(req, args); // eslint-disable-line\n    };\n  }\n\n  /**\n   * Attempt to cancel all active fetch requests\n   */\n  clear() {\n    Object.values(this.activeRequests).forEach(r => r.cancel());\n  }\n\n  handleRequestError(\n    {id, path, requestOptions}: HandleRequestErrorOptions,\n    response: ResponseMeta,\n    textStatus: string,\n    errorThrown: string\n  ) {\n    const code = response?.responseJSON?.detail?.code;\n    const isSudoRequired = code === SUDO_REQUIRED || code === SUPERUSER_REQUIRED;\n\n    let didSuccessfullyRetry = false;\n\n    if (isSudoRequired) {\n      openSudo({\n        isSuperuser: code === SUPERUSER_REQUIRED,\n        sudo: code === SUDO_REQUIRED,\n        retryRequest: async () => {\n          try {\n            const data = await this.requestPromise(path, requestOptions);\n            requestOptions.success?.(data);\n            didSuccessfullyRetry = true;\n          } catch (err) {\n            requestOptions.error?.(err);\n          }\n        },\n        onClose: () =>\n          // If modal was closed, then forward the original response\n          !didSuccessfullyRetry && requestOptions.error?.(response),\n      });\n      return;\n    }\n\n    // Call normal error callback\n    const errorCb = this.wrapCallback<[ResponseMeta, string, string]>(\n      id,\n      requestOptions.error\n    );\n    errorCb?.(response, textStatus, errorThrown);\n  }\n\n  /**\n   * Initate a request to the backend API.\n   *\n   * Consider using `requestPromise` for the async Promise version of this method.\n   */\n  request(path: string, options: Readonly<RequestOptions> = {}): Request {\n    const method = options.method || (options.data ? 'POST' : 'GET');\n\n    let fullUrl = buildRequestUrl(this.baseUrl, path, options.query);\n\n    let data = options.data;\n\n    if (!isUndefined(data) && method !== 'GET') {\n      data = JSON.stringify(data);\n    }\n\n    // TODO(epurkhiser): Mimicking the old jQuery API, data could be a string /\n    // object for GET requets. jQuery just sticks it onto the URL as query\n    // parameters\n    if (method === 'GET' && data) {\n      const queryString = typeof data === 'string' ? data : qs.stringify(data);\n\n      if (queryString.length > 0) {\n        fullUrl = fullUrl + (fullUrl.indexOf('?') !== -1 ? '&' : '?') + queryString;\n      }\n    }\n\n    const id = uniqueId();\n    const startMarker = `api-request-start-${id}`;\n\n    metric.mark({name: startMarker});\n\n    /**\n     * Called when the request completes with a 2xx status\n     */\n    const successHandler = (\n      resp: ResponseMeta,\n      textStatus: string,\n      responseData: any\n    ) => {\n      metric.measure({\n        name: 'app.api.request-success',\n        start: startMarker,\n        data: {status: resp?.status},\n      });\n      if (!isUndefined(options.success)) {\n        this.wrapCallback<[any, string, ResponseMeta]>(id, options.success)(\n          responseData,\n          textStatus,\n          resp\n        );\n      }\n    };\n\n    /**\n     * Called when the request is non-2xx\n     */\n    const errorHandler = (\n      resp: ResponseMeta,\n      textStatus: string,\n      errorThrown: string\n    ) => {\n      metric.measure({\n        name: 'app.api.request-error',\n        start: startMarker,\n        data: {status: resp?.status},\n      });\n\n      this.handleRequestError(\n        {id, path, requestOptions: options},\n        resp,\n        textStatus,\n        errorThrown\n      );\n    };\n\n    /**\n     * Called when the request completes\n     */\n    const completeHandler = (resp: ResponseMeta, textStatus: string) =>\n      this.wrapCallback<[ResponseMeta, string]>(\n        id,\n        options.complete,\n        true\n      )(resp, textStatus);\n\n    // AbortController is optional, though most browser should support it.\n    const aborter =\n      typeof AbortController !== 'undefined' ? new AbortController() : undefined;\n\n    // GET requests may not have a body\n    const body = method !== 'GET' ? data : undefined;\n\n    const headers = new Headers({\n      Accept: 'application/json; charset=utf-8',\n      'Content-Type': 'application/json',\n    });\n\n    // Do not set the X-CSRFToken header when making a request outside of the\n    // current domain\n    const absoluteUrl = new URL(fullUrl, window.location.origin);\n    const isSameOrigin = window.location.origin === absoluteUrl.origin;\n\n    if (!csrfSafeMethod(method) && isSameOrigin) {\n      headers.set('X-CSRFToken', getCsrfToken());\n    }\n\n    const fetchRequest = fetch(fullUrl, {\n      method,\n      body,\n      headers,\n      credentials: 'same-origin',\n      signal: aborter?.signal,\n    });\n\n    // XXX(epurkhiser): We migrated off of jquery, so for now we have a\n    // compatibility layer which mimics that of the jquery response objects.\n    fetchRequest\n      .then(async response => {\n        // The Response's body can only be resolved/used at most once.\n        // So we clone the response so we can resolve the body content as text content.\n        // Response objects need to be cloned before its body can be used.\n        let responseJSON: any;\n        let responseText: any;\n\n        const {status, statusText} = response;\n        let {ok} = response;\n        let errorReason = 'Request not OK'; // the default error reason\n\n        // Try to get text out of the response no matter the status\n        try {\n          responseText = await response.clone().text();\n        } catch (error) {\n          ok = false;\n          if (error.name === 'AbortError') {\n            errorReason = 'Request was aborted';\n          } else {\n            errorReason = error.toString();\n          }\n        }\n\n        const responseContentType = response.clone().headers.get('content-type');\n        const isResponseJSON = responseContentType?.includes('json');\n\n        const isStatus3XX = status >= 300 && status < 400;\n        if (status !== 204 && !isStatus3XX) {\n          try {\n            responseJSON = await response.clone().json();\n          } catch (error) {\n            if (error.name === 'AbortError') {\n              ok = false;\n              errorReason = 'Request was aborted';\n            } else if (isResponseJSON && error instanceof SyntaxError) {\n              // If the MIME type is `application/json` but decoding failed,\n              // this should be an error.\n              ok = false;\n              errorReason = 'JSON parse error';\n            }\n          }\n        }\n\n        const responseMeta: ResponseMeta = {\n          status,\n          statusText,\n          responseJSON,\n          responseText,\n          getResponseHeader: (header: string) => response.headers.get(header),\n          rawResponse: response.clone(),\n        };\n\n        // Respect the response content-type header\n        const responseData = isResponseJSON ? responseJSON : responseText;\n\n        if (ok) {\n          successHandler(responseMeta, statusText, responseData);\n        } else {\n          const shouldSkipErrorHandler =\n            globalErrorHandlers.map(handler => handler(responseMeta)).filter(Boolean)\n              .length > 0;\n\n          if (!shouldSkipErrorHandler) {\n            errorHandler(responseMeta, statusText, errorReason);\n          }\n        }\n\n        completeHandler(responseMeta, statusText);\n      })\n      .catch(() => {\n        // Ignore all failed requests\n      });\n\n    const request = new Request(fetchRequest, aborter);\n    this.activeRequests[id] = request;\n\n    return request;\n  }\n\n  requestPromise<IncludeAllArgsType extends boolean>(\n    path: string,\n    {\n      includeAllArgs,\n      ...options\n    }: {includeAllArgs?: IncludeAllArgsType} & Readonly<RequestOptions> = {}\n  ): Promise<\n    IncludeAllArgsType extends true\n      ? [any, string | undefined, ResponseMeta | undefined]\n      : any\n  > {\n    // Create an error object here before we make any async calls so that we\n    // have a helpful stack trace if it errors\n    //\n    // This *should* get logged to Sentry only if the promise rejection is not handled\n    // (since SDK captures unhandled rejections). Ideally we explicitly ignore rejection\n    // or handle with a user friendly error message\n    const preservedError = new Error();\n\n    return new Promise((resolve, reject) =>\n      this.request(path, {\n        ...options,\n        preservedError,\n        success: (data, textStatus, resp) => {\n          if (includeAllArgs) {\n            resolve([data, textStatus, resp] as any);\n          } else {\n            resolve(data);\n          }\n        },\n        error: (resp: ResponseMeta) => {\n          const errorObjectToUse = createRequestError(\n            resp,\n            preservedError.stack,\n            options.method,\n            path\n          );\n          errorObjectToUse.removeFrames(2);\n\n          // Although `this.request` logs all error responses, this error object can\n          // potentially be logged by Sentry's unhandled rejection handler\n          reject(errorObjectToUse);\n        },\n      })\n    );\n  }\n}\n","import * as React from 'react';\nimport {findDOMNode, render} from 'react-dom';\nimport * as ReactRouter from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport * as Reflux from 'reflux';\n\nimport plugins from 'sentry/plugins';\n\nconst globals = {\n  // The following globals are used in sentry-plugins webpack externals\n  // configuration.\n  PropTypes,\n  React,\n  Reflux,\n  Sentry,\n  moment,\n  Router: ReactRouter,\n  ReactDOM: {findDOMNode, render},\n\n  // django templates make use of these globals\n  SentryApp: {},\n};\n\n// The SentryApp global contains exported app modules for use in javascript\n// modules that are not compiled with the sentry bundle.\nconst SentryApp = {\n  // The following components are used in sentry-plugins.\n  Form: require('sentry/components/deprecatedforms/form').default,\n  FormState: require('sentry/components/forms/state').default,\n  LoadingIndicator: require('sentry/components/loadingIndicator').default,\n  plugins: {\n    add: plugins.add,\n    addContext: plugins.addContext,\n    BasePlugin: plugins.BasePlugin,\n    DefaultIssuePlugin: plugins.DefaultIssuePlugin,\n  },\n\n  // The following components are used in legacy django HTML views\n  // or in the Sentry sandbox\n  ConfigStore: require('sentry/stores/configStore').default,\n  HookStore: require('sentry/stores/hookStore').default,\n  GuideActionCreator: require('sentry/actionCreators/guides'),\n  Modal: require('sentry/actionCreators/modal'),\n  getModalPortal: require('sentry/utils/getModalPortal').default,\n  Client: require('sentry/api').Client,\n};\n\nglobals.SentryApp = SentryApp;\nObject.keys(globals).forEach(name => (window[name] = globals[name]));\n\nexport default globals;\n","import {Component} from 'react';\n\nimport RouteError from 'sentry/views/routeError';\n\ntype State = {\n  error: Error | undefined;\n  hasError: boolean;\n};\n\nexport default function errorHandler<P>(WrappedComponent: React.ComponentType<P>) {\n  class ErrorHandler extends Component<P, State> {\n    static getDerivedStateFromError(error: Error) {\n      // Update state so the next render will show the fallback UI.\n      return {\n        hasError: true,\n        error,\n      };\n    }\n\n    state: State = {\n      // we are explicit if an error has been thrown since errors thrown are not guaranteed\n      // to be truthy (e.g. throw null).\n      hasError: false,\n      error: undefined,\n    };\n\n    componentDidCatch(_error: Error, info: React.ErrorInfo) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Component stack trace caught in <ErrorHandler />:',\n        info.componentStack\n      );\n    }\n\n    render() {\n      if (this.state.hasError) {\n        return <RouteError error={this.state.error} />;\n      }\n\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return ErrorHandler;\n}\n","import styled from '@emotion/styled';\n\nimport Button, {ButtonPropsWithAriaLabel} from 'sentry/components/button';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nconst ModalHeader = styled('header')`\n  position: relative;\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(3)} ${space(4)};\n  margin: -${space(4)} -${space(4)} ${space(3)} -${space(4)};\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: 0;\n    line-height: 1.1;\n  }\n`;\n\nconst CloseButton = styled((p: ButtonPropsWithAriaLabel) => (\n  <Button size=\"zero\" icon={<IconClose size=\"10px\" />} {...p} />\n))`\n  position: absolute;\n  top: 0;\n  right: 0;\n  transform: translate(50%, -50%);\n  border-radius: 50%;\n  border: none;\n  box-shadow: 0 0 0 1px ${p => p.theme.translucentBorder};\n  background: ${p => p.theme.background};\n  height: 24px;\n  width: 24px;\n`;\n\nconst ModalBody = styled('section')`\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nconst ModalFooter = styled('footer')`\n  border-top: 1px solid ${p => p.theme.border};\n  display: flex;\n  justify-content: flex-end;\n  padding: ${space(3)} ${space(4)};\n  margin: ${space(3)} -${space(4)} -${space(4)};\n`;\n\ninterface ClosableHeaderProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Show a close button in the header\n   */\n  closeButton?: boolean;\n}\n/**\n * Creates a ModalHeader that includes props to enable the close button\n */\nconst makeClosableHeader = (closeModal: () => void) => {\n  const ClosableHeader: React.FC<ClosableHeaderProps> = ({\n    closeButton,\n    children,\n    ...props\n  }) => (\n    <ModalHeader {...props}>\n      {children}\n      {closeButton ? (\n        <CloseButton aria-label={t('Close Modal')} onClick={closeModal} />\n      ) : null}\n    </ModalHeader>\n  );\n\n  ClosableHeader.displayName = 'Header';\n\n  return ClosableHeader;\n};\n\n/**\n * Creates a CloseButton component that is connected to the provided closeModal trigger\n */\nconst makeCloseButton =\n  (closeModal: () => void): React.FC<Omit<ButtonPropsWithAriaLabel, 'aria-label'>> =>\n  props =>\n    <CloseButton {...props} aria-label={t('Close Modal')} onClick={closeModal} />;\n\nexport {makeClosableHeader, makeCloseButton, ModalBody, ModalFooter};\n","import {Component, Fragment, useCallback, useEffect, useRef} from 'react';\nimport {createPortal} from 'react-dom';\nimport {browserHistory} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {createFocusTrap, FocusTrap} from 'focus-trap';\nimport {AnimatePresence, motion} from 'framer-motion';\n\nimport {closeModal as actionCloseModal} from 'sentry/actionCreators/modal';\nimport {ROOT_ELEMENT} from 'sentry/constants';\nimport ModalStore from 'sentry/stores/modalStore';\nimport space from 'sentry/styles/space';\nimport getModalPortal from 'sentry/utils/getModalPortal';\nimport testableTransition from 'sentry/utils/testableTransition';\n\nimport {makeClosableHeader, makeCloseButton, ModalBody, ModalFooter} from './components';\n\ntype ModalOptions = {\n  /**\n   * Set to `false` to disable the ability to click outside the modal to\n   * close it. This is useful for modals containing user input which will\n   * disappear on an accidental click. Defaults to `true`.\n   */\n  allowClickClose?: boolean;\n  /**\n   * Set to `false` to disable the backdrop from being rendered. Set to\n   * `static` to disable the 'click outside' behavior from closing the modal.\n   * Set to true (the default) to show a translucent backdrop\n   */\n  backdrop?: 'static' | boolean;\n  /**\n   * Additional CSS which will be applied to the modals `role=\"dialog\"`\n   * component. You may use the `[role=\"document\"]` selector to target the\n   * actual modal content to style the visual element of the modal.\n   */\n  modalCss?: ReturnType<typeof css>;\n  /**\n   * Callback for when the modal is closed\n   */\n  onClose?: () => void;\n};\n\ntype ModalRenderProps = {\n  /**\n   * Body container for the modal\n   */\n  Body: typeof ModalBody;\n  /**\n   * Looks like a close button. Useful for when you don't want to render the\n   * header which can include the close button.\n   */\n  CloseButton: ReturnType<typeof makeCloseButton>;\n  /**\n   * Footer container for the modal, typically for actions\n   */\n  Footer: typeof ModalFooter;\n  /**\n   * The modal header, optionally includes a close button which will close the\n   * modal.\n   */\n  Header: ReturnType<typeof makeClosableHeader>;\n  /**\n   * Closes the modal\n   */\n  closeModal: () => void;\n};\n\n/**\n * Meta-type to make re-exporting these in the action creator easy without\n * poluting the global API namespace with duplicate type names.\n *\n * eg. you won't accidentally import ModalRenderProps from here.\n */\nexport type ModalTypes = {\n  options: ModalOptions;\n  renderProps: ModalRenderProps;\n};\n\ntype Props = {\n  /**\n   * Configuration of the modal\n   */\n  options: ModalOptions;\n  /**\n   * Is the modal visible\n   */\n  visible: boolean;\n  /**\n   * A function that returns a React Element\n   */\n  children?: null | ((renderProps: ModalRenderProps) => React.ReactNode);\n  /**\n   * Note this is the callback for the main App container and NOT the calling\n   * component. GlobalModal is never used directly, but is controlled via\n   * stores. To access the onClose callback from the component, you must\n   * specify it when using the action creator.\n   */\n  onClose?: () => void;\n};\n\nfunction GlobalModal({visible = false, options = {}, children, onClose}: Props) {\n  const closeModal = useCallback(() => {\n    // Option close callback, from the thing which opened the modal\n    options.onClose?.();\n\n    // Action creator, actually closes the modal\n    actionCloseModal();\n\n    // GlobalModal onClose prop callback\n    onClose?.();\n  }, [options, onClose]);\n\n  const handleEscapeClose = useCallback(\n    (e: KeyboardEvent) => e.key === 'Escape' && closeModal(),\n    [closeModal]\n  );\n\n  const portal = getModalPortal();\n  const focusTrap = useRef<FocusTrap>();\n  // SentryApp might be missing on tests\n  if (window.SentryApp) {\n    window.SentryApp.modalFocusTrap = focusTrap;\n  }\n\n  useEffect(() => {\n    focusTrap.current = createFocusTrap(portal, {\n      preventScroll: true,\n      escapeDeactivates: false,\n      fallbackFocus: portal,\n    });\n  }, [portal]);\n\n  useEffect(() => {\n    const body = document.querySelector('body');\n    const root = document.getElementById(ROOT_ELEMENT);\n\n    if (!body || !root) {\n      return () => void 0;\n    }\n\n    const reset = () => {\n      body.style.removeProperty('overflow');\n      root.removeAttribute('aria-hidden');\n      focusTrap.current?.deactivate();\n      document.removeEventListener('keydown', handleEscapeClose);\n    };\n\n    if (visible) {\n      body.style.overflow = 'hidden';\n      root.setAttribute('aria-hidden', 'true');\n      focusTrap.current?.activate();\n\n      document.addEventListener('keydown', handleEscapeClose);\n    } else {\n      reset();\n    }\n\n    return reset;\n  }, [portal, handleEscapeClose, visible]);\n\n  // Close the modal when the browser history changes\n  useEffect(() => browserHistory.listen(() => actionCloseModal()), []);\n\n  const renderedChild = children?.({\n    CloseButton: makeCloseButton(closeModal),\n    Header: makeClosableHeader(closeModal),\n    Body: ModalBody,\n    Footer: ModalFooter,\n    closeModal,\n  });\n\n  // Default to enabled backdrop\n  const backdrop = options.backdrop ?? true;\n\n  // Default to enabled click close\n  const allowClickClose = options.allowClickClose ?? true;\n\n  // Only close when we directly click outside of the modal.\n  const containerRef = useRef<HTMLDivElement>(null);\n  const clickClose = (e: React.MouseEvent) =>\n    containerRef.current === e.target && allowClickClose && closeModal();\n\n  return createPortal(\n    <Fragment>\n      <Backdrop\n        style={backdrop && visible ? {opacity: 0.5, pointerEvents: 'auto'} : {}}\n      />\n      <Container\n        ref={containerRef}\n        style={{pointerEvents: visible ? 'auto' : 'none'}}\n        onClick={backdrop === true ? clickClose : undefined}\n      >\n        <AnimatePresence>\n          {visible && (\n            <Modal role=\"dialog\" css={options.modalCss}>\n              <Content role=\"document\">{renderedChild}</Content>\n            </Modal>\n          )}\n        </AnimatePresence>\n      </Container>\n    </Fragment>,\n    portal\n  );\n}\n\nconst fullPageCss = css`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst Backdrop = styled('div')`\n  ${fullPageCss};\n  z-index: ${p => p.theme.zIndex.modal};\n  background: ${p => p.theme.black};\n  will-change: opacity;\n  transition: opacity 200ms;\n  pointer-events: none;\n  opacity: 0;\n`;\n\nconst Container = styled('div')`\n  ${fullPageCss};\n  z-index: ${p => p.theme.zIndex.modal};\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n`;\n\nconst Modal = styled(motion.div)`\n  width: 640px;\n  pointer-events: auto;\n  padding: 80px ${space(2)} ${space(4)} ${space(2)};\n`;\n\nModal.defaultProps = {\n  initial: {opacity: 0, y: -10},\n  animate: {opacity: 1, y: 0},\n  exit: {opacity: 0, y: 15},\n  transition: testableTransition({\n    opacity: {duration: 0.2},\n    y: {duration: 0.25},\n  }),\n};\n\nconst Content = styled('div')`\n  padding: ${space(4)};\n  background: ${p => p.theme.background};\n  border-radius: 8px;\n  box-shadow: 0 0 0 1px ${p => p.theme.translucentBorder}, ${p => p.theme.dropShadowHeavy};\n  position: relative;\n`;\n\ntype State = {\n  modalStore: ReturnType<typeof ModalStore.get>;\n};\n\nclass GlobalModalContainer extends Component<Partial<Props>, State> {\n  state: State = {\n    modalStore: ModalStore.get(),\n  };\n\n  componentWillUnmount() {\n    this.unlistener?.();\n  }\n\n  unlistener = ModalStore.listen(\n    (modalStore: State['modalStore']) => this.setState({modalStore}),\n    undefined\n  );\n\n  render() {\n    const {modalStore} = this.state;\n    const visible = !!modalStore && typeof modalStore.renderer === 'function';\n\n    return (\n      <GlobalModal {...this.props} {...modalStore} visible={visible}>\n        {visible ? modalStore.renderer : null}\n      </GlobalModal>\n    );\n  }\n}\n\nexport default GlobalModalContainer;\n","import {lazy, Profiler, Suspense, useCallback, useEffect, useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  displayDeployPreviewAlert,\n  displayExperimentalSpaAlert,\n} from 'sentry/actionCreators/developmentAlerts';\nimport {fetchGuides} from 'sentry/actionCreators/guides';\nimport {openCommandPalette} from 'sentry/actionCreators/modal';\nimport {initApiClientErrorHandling} from 'sentry/api';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport GlobalModal from 'sentry/components/globalModal';\nimport Indicators from 'sentry/components/indicators';\nimport {DEPLOY_PREVIEW_CONFIG, EXPERIMENTAL_SPA} from 'sentry/constants';\nimport AlertStore from 'sentry/stores/alertStore';\nimport ConfigStore from 'sentry/stores/configStore';\nimport HookStore from 'sentry/stores/hookStore';\nimport OrganizationsStore from 'sentry/stores/organizationsStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {onRenderCallback} from 'sentry/utils/performanceForSentry';\nimport useApi from 'sentry/utils/useApi';\nimport {useHotkeys} from 'sentry/utils/useHotkeys';\n\nimport SystemAlerts from './systemAlerts';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst InstallWizard = lazy(() => import('sentry/views/admin/installWizard'));\nconst NewsletterConsent = lazy(() => import('sentry/views/newsletterConsent'));\n\n/**\n * App is the root level container for all uathenticated routes.\n */\nfunction App({children}: Props) {\n  const api = useApi();\n  const config = useLegacyStore(ConfigStore);\n\n  // Command palette global-shortcut\n  useHotkeys(\n    [\n      {\n        match: ['command+shift+p', 'command+k', 'ctrl+shift+p', 'ctrl+k'],\n        callback: e => {\n          openCommandPalette();\n          e.preventDefault();\n        },\n      },\n    ],\n    []\n  );\n\n  // Theme toggle global shortcut\n  useHotkeys(\n    [\n      {\n        match: ['command+shift+l', 'ctrl+shift+l'],\n        callback: e => {\n          ConfigStore.set('theme', config.theme === 'light' ? 'dark' : 'light');\n          e.preventDefault();\n        },\n      },\n    ],\n    [config.theme]\n  );\n\n  /**\n   * Loads the users organization list into the OrganizationsStore\n   */\n  const loadOrganizations = useCallback(async () => {\n    try {\n      const data = await api.requestPromise('/organizations/', {query: {member: '1'}});\n      OrganizationsStore.load(data);\n    } catch {\n      // TODO: do something?\n    }\n  }, [api]);\n\n  /**\n   * Creates Alerts for any internal health problems\n   */\n  const checkInternalHealth = useCallback(async () => {\n    let data: any = null;\n\n    try {\n      data = await api.requestPromise('/internal/health/');\n    } catch {\n      // TODO: do something?\n    }\n\n    data?.problems?.forEach?.((problem: any) => {\n      const {id, message, url} = problem;\n      const type = problem.severity === 'critical' ? 'error' : 'warning';\n\n      AlertStore.addAlert({id, message, type, url, opaque: true});\n    });\n  }, [api]);\n\n  useEffect(() => {\n    loadOrganizations();\n    checkInternalHealth();\n\n    // Show system-level alerts\n    config.messages.forEach(msg =>\n      AlertStore.addAlert({message: msg.message, type: msg.level, neverExpire: true})\n    );\n\n    // The app is running in deploy preview mode\n    if (DEPLOY_PREVIEW_CONFIG) {\n      displayDeployPreviewAlert();\n    }\n\n    // The app is running in local SPA mode\n    if (!DEPLOY_PREVIEW_CONFIG && EXPERIMENTAL_SPA) {\n      displayExperimentalSpaAlert();\n    }\n\n    // Set the user for analytics\n    if (config.user) {\n      HookStore.get('analytics:init-user').map(cb => cb(config.user));\n    }\n\n    initApiClientErrorHandling();\n    fetchGuides();\n\n    // When the app is unloaded clear the organizationst list\n    return () => OrganizationsStore.load([]);\n  }, [loadOrganizations, checkInternalHealth, config.messages, config.user]);\n\n  function clearUpgrade() {\n    ConfigStore.set('needsUpgrade', false);\n  }\n\n  function clearNewsletterConsent() {\n    const flags = {...config.user.flags, newsletter_consent_prompt: false};\n    ConfigStore.set('user', {...config.user, flags});\n  }\n\n  const needsUpgrade = config.user?.isSuperuser && config.needsUpgrade;\n  const newsletterConsentPrompt = config.user?.flags?.newsletter_consent_prompt;\n\n  function renderBody() {\n    if (needsUpgrade) {\n      return (\n        <Suspense fallback={null}>\n          <InstallWizard onConfigured={clearUpgrade} />;\n        </Suspense>\n      );\n    }\n\n    if (newsletterConsentPrompt) {\n      return (\n        <Suspense fallback={null}>\n          <NewsletterConsent onSubmitSuccess={clearNewsletterConsent} />\n        </Suspense>\n      );\n    }\n\n    return children;\n  }\n\n  // Used to restore focus to the container after closing the modal\n  const mainContainerRef = useRef<HTMLDivElement>(null);\n  const handleModalClose = useCallback(() => mainContainerRef.current?.focus?.(), []);\n\n  return (\n    <Profiler id=\"App\" onRender={onRenderCallback}>\n      <MainContainer tabIndex={-1} ref={mainContainerRef}>\n        <GlobalModal onClose={handleModalClose} />\n        <SystemAlerts className=\"messages-container\" />\n        <Indicators className=\"indicators-container\" />\n        <ErrorBoundary>{renderBody()}</ErrorBoundary>\n      </MainContainer>\n    </Profiler>\n  );\n}\n\nexport default App;\n\nconst MainContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  outline: none;\n  padding-top: ${p => (ConfigStore.get('demoMode') ? p.theme.demo.headerSize : 0)};\n`;\n","import ExternalLink from 'sentry/components/links/externalLink';\nimport {DEPLOY_PREVIEW_CONFIG, EXPERIMENTAL_SPA} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport AlertStore from 'sentry/stores/alertStore';\n\nexport function displayDeployPreviewAlert() {\n  if (!DEPLOY_PREVIEW_CONFIG) {\n    return;\n  }\n\n  const {branch, commitSha, githubOrg, githubRepo} = DEPLOY_PREVIEW_CONFIG;\n  const repoUrl = `https://github.com/${githubOrg}/${githubRepo}`;\n\n  const commitLink = (\n    <ExternalLink href={`${repoUrl}/commit/${commitSha}`}>\n      {t('%s@%s', `${githubOrg}/${githubRepo}`, commitSha.slice(0, 6))}\n    </ExternalLink>\n  );\n\n  const branchLink = (\n    <ExternalLink href={`${repoUrl}/tree/${branch}`}>{branch}</ExternalLink>\n  );\n\n  AlertStore.addAlert({\n    id: 'deploy-preview',\n    message: tct(\n      'You are viewing a frontend deploy preview of [commitLink] ([branchLink])',\n      {commitLink, branchLink}\n    ),\n    type: 'warning',\n    neverExpire: true,\n    noDuplicates: true,\n  });\n}\n\nexport function displayExperimentalSpaAlert() {\n  if (!EXPERIMENTAL_SPA) {\n    return;\n  }\n\n  AlertStore.addAlert({\n    id: 'develop-proxy',\n    message: t(\n      'You are developing against production Sentry API, please BE CAREFUL, as your changes will affect production data.'\n    ),\n    type: 'warning',\n    opaque: true,\n    neverExpire: true,\n    noDuplicates: true,\n  });\n}\n","import NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype Props = {\n  children: React.ReactChildren;\n  projects: Project[];\n};\n\nfunction IssueListContainer({children}: Props) {\n  const organization = useOrganization();\n\n  return (\n    <SentryDocumentTitle title={t('Issues')} orgSlug={organization.slug}>\n      <PageFiltersContainer hideGlobalHeader>\n        <NoProjectMessage organization={organization}>{children}</NoProjectMessage>\n      </PageFiltersContainer>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default IssueListContainer;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {ProcessingIssue} from 'sentry/types';\n\ntype Props = {\n  issue: ProcessingIssue;\n  orgId: string;\n  projectId: string;\n  showProject: boolean;\n};\n\nfunction ProcessingIssueHint({orgId, projectId, issue, showProject}: Props) {\n  const link = `/settings/${orgId}/projects/${projectId}/processing-issues/`;\n  let showButton = false;\n  let text = '';\n  let lastEvent: React.ReactNode = null;\n  let alertType: React.ComponentProps<typeof Alert>['type'] = 'error';\n\n  let project: React.ReactNode = null;\n  if (showProject) {\n    project = (\n      <Fragment>\n        <strong>{projectId}</strong> &mdash;{' '}\n      </Fragment>\n    );\n  }\n\n  if (issue.numIssues > 0) {\n    text = tn(\n      'There is %s issue blocking event processing',\n      'There are %s issues blocking event processing',\n      issue.numIssues\n    );\n    lastEvent = (\n      <Fragment>\n        (\n        {tct('last event from [ago]', {\n          ago: <TimeSince date={issue.lastSeen} />,\n        })}\n        )\n      </Fragment>\n    );\n    alertType = 'error';\n    showButton = true;\n  } else if (issue.issuesProcessing > 0) {\n    alertType = 'info';\n    text = tn(\n      'Reprocessing %s event …',\n      'Reprocessing %s events …',\n      issue.issuesProcessing\n    );\n  } else if (issue.resolveableIssues > 0) {\n    alertType = 'warning';\n    text = tn(\n      'There is %s event pending reprocessing.',\n      'There are %s events pending reprocessing.',\n      issue.resolveableIssues\n    );\n    showButton = true;\n  } else {\n    /* we should not go here but what do we know */\n    return null;\n  }\n\n  return (\n    <StyledAlert\n      type={alertType}\n      showIcon\n      trailingItems={\n        showButton && (\n          <StyledButton size=\"xsmall\" to={link}>\n            {t('Show details')}\n          </StyledButton>\n        )\n      }\n    >\n      {project} <strong>{text}</strong> {lastEvent}\n    </StyledAlert>\n  );\n}\n\nexport default ProcessingIssueHint;\n\nconst StyledAlert = styled(Alert)`\n  border-width: 1px 0;\n  border-radius: 0;\n  margin: 0;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledButton = styled(Button)`\n  white-space: nowrap;\n  margin-left: ${space(1)};\n`;\n","import {Component, Fragment} from 'react';\nimport isEqual from 'lodash/isEqual';\n\nimport {fetchProcessingIssues} from 'sentry/actionCreators/processingIssues';\nimport {Client} from 'sentry/api';\nimport ProcessingIssueHint from 'sentry/components/stream/processingIssueHint';\nimport {Organization, ProcessingIssue} from 'sentry/types';\n\nconst defaultProps = {\n  showProject: false,\n};\n\ntype Props = {\n  organization: Organization;\n  projectIds: string[];\n} & typeof defaultProps;\n\ntype State = {\n  issues: ProcessingIssue[];\n  loading: boolean;\n};\n\nclass ProcessingIssueList extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    loading: true,\n    issues: [],\n  };\n\n  componentDidMount() {\n    this.fetchIssues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.projectIds, this.props.projectIds)) {\n      this.fetchIssues();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api = new Client();\n\n  fetchIssues() {\n    const {organization, projectIds} = this.props;\n    const promise = fetchProcessingIssues(this.api, organization.slug, projectIds);\n\n    promise.then(\n      (data?: ProcessingIssue[]) => {\n        const hasIssues = data?.some(\n          p => p.hasIssues || p.resolveableIssues > 0 || p.issuesProcessing > 0\n        );\n\n        if (data && hasIssues) {\n          this.setState({issues: data});\n        }\n      },\n      () => {\n        // this is okay. it's just a ui hint\n      }\n    );\n  }\n\n  render() {\n    const {issues} = this.state;\n    const {organization, showProject} = this.props;\n\n    return (\n      <Fragment>\n        {issues.map((p, idx) => (\n          <ProcessingIssueHint\n            key={idx}\n            issue={p}\n            projectId={p.project}\n            orgId={organization.slug}\n            showProject={showProject}\n          />\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default ProcessingIssueList;\n","import {Client} from 'sentry/api';\n\nexport function fetchProcessingIssues(\n  api: Client,\n  orgId: string,\n  projectIds: string[] | null = null\n) {\n  return api.requestPromise(`/organizations/${orgId}/processingissues/`, {\n    method: 'GET',\n    query: projectIds ? {project: projectIds} : [],\n  });\n}\n","import findIndex from 'lodash/findIndex';\nimport {createStore, StoreDefinition} from 'reflux';\n\nimport SavedSearchesActions from 'sentry/actions/savedSearchesActions';\nimport {SavedSearch, SavedSearchType} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype State = {\n  hasError: boolean;\n  isLoading: boolean;\n  savedSearches: SavedSearch[];\n};\n\ninterface SavedSearchesStoreDefinition extends StoreDefinition {\n  findByQuery(query: string, sort: string): SavedSearch | undefined;\n  get(): State;\n  getFilteredSearches(type: SavedSearchType, id?: string): SavedSearch[];\n  onPinSearch(type: SavedSearchType, query: string, sort: string): void;\n  reset(): void;\n  updateExistingSearch(id: string, changes: Partial<SavedSearch>): SavedSearch;\n}\n\nconst storeConfig: SavedSearchesStoreDefinition = {\n  unsubscribeListeners: [],\n\n  state: {\n    savedSearches: [],\n    hasError: false,\n    isLoading: true,\n  },\n\n  init() {\n    const {\n      startFetchSavedSearches,\n      fetchSavedSearchesSuccess,\n      fetchSavedSearchesError,\n      createSavedSearchSuccess,\n      deleteSavedSearchSuccess,\n      pinSearch,\n      pinSearchSuccess,\n      resetSavedSearches,\n      unpinSearch,\n    } = SavedSearchesActions;\n\n    this.unsubscribeListeners.push(\n      this.listenTo(startFetchSavedSearches, this.onStartFetchSavedSearches)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(fetchSavedSearchesSuccess, this.onFetchSavedSearchesSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(fetchSavedSearchesError, this.onFetchSavedSearchesError)\n    );\n    this.unsubscribeListeners.push(this.listenTo(resetSavedSearches, this.onReset));\n    this.unsubscribeListeners.push(\n      this.listenTo(createSavedSearchSuccess, this.onCreateSavedSearchSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(deleteSavedSearchSuccess, this.onDeleteSavedSearchSuccess)\n    );\n    this.unsubscribeListeners.push(this.listenTo(pinSearch, this.onPinSearch));\n    this.unsubscribeListeners.push(\n      this.listenTo(pinSearchSuccess, this.onPinSearchSuccess)\n    );\n    this.unsubscribeListeners.push(this.listenTo(unpinSearch, this.onUnpinSearch));\n\n    this.reset();\n  },\n\n  reset() {\n    this.state = {\n      savedSearches: [],\n      hasError: false,\n      isLoading: true,\n    };\n  },\n\n  get() {\n    return this.state;\n  },\n\n  /**\n   * If pinned search, remove from list if user created pin (e.g. not org saved search and not global)\n   * Otherwise change `isPinned` to false (e.g. if it's default or org saved search)\n   */\n  getFilteredSearches(type, existingSearchId) {\n    return this.state.savedSearches\n      .filter(\n        (savedSearch: SavedSearch) =>\n          !(\n            savedSearch.isPinned &&\n            savedSearch.type === type &&\n            !savedSearch.isOrgCustom &&\n            !savedSearch.isGlobal &&\n            savedSearch.id !== existingSearchId\n          )\n      )\n      .map((savedSearch: SavedSearch) => {\n        if (\n          typeof existingSearchId !== 'undefined' &&\n          existingSearchId === savedSearch.id\n        ) {\n          // Do not update existing search\n          return savedSearch;\n        }\n\n        return {...savedSearch, isPinned: false};\n      });\n  },\n\n  updateExistingSearch(id, updateObj) {\n    const index = findIndex(\n      this.state.savedSearches,\n      (savedSearch: SavedSearch) => savedSearch.id === id\n    );\n\n    if (index === -1) {\n      return null;\n    }\n\n    const existingSavedSearch = this.state.savedSearches[index];\n    const newSavedSearch = {\n      ...existingSavedSearch,\n      ...updateObj,\n    };\n    this.state.savedSearches[index] = newSavedSearch;\n    return newSavedSearch;\n  },\n\n  /**\n   * Find saved search by query string\n   */\n  findByQuery(query, sort) {\n    return this.state.savedSearches.find(\n      savedSearch => query === savedSearch.query && sort === savedSearch.sort\n    );\n  },\n\n  /**\n   * Reset store to initial state\n   */\n  onReset() {\n    this.reset();\n    this.trigger(this.state);\n  },\n\n  onStartFetchSavedSearches() {\n    this.state = {\n      ...this.state,\n      isLoading: true,\n    };\n    this.trigger(this.state);\n  },\n\n  onFetchSavedSearchesSuccess(data) {\n    if (!Array.isArray(data)) {\n      data = [];\n    }\n    this.state = {\n      ...this.state,\n      savedSearches: data,\n      isLoading: false,\n    };\n    this.trigger(this.state);\n  },\n\n  onFetchSavedSearchesError(_resp) {\n    this.state = {\n      ...this.state,\n      savedSearches: [],\n      isLoading: false,\n      hasError: true,\n    };\n    this.trigger(this.state);\n  },\n\n  onCreateSavedSearchSuccess(resp) {\n    this.state = {\n      ...this.state,\n      savedSearches: [...this.state.savedSearches, resp],\n    };\n\n    this.trigger(this.state);\n  },\n\n  onDeleteSavedSearchSuccess(search) {\n    this.state = {\n      ...this.state,\n      savedSearches: this.state.savedSearches.filter(item => item.id !== search.id),\n    };\n\n    this.trigger(this.state);\n  },\n\n  onPinSearch(type, query, sort) {\n    const existingSearch = this.findByQuery(query, sort);\n\n    if (existingSearch) {\n      this.updateExistingSearch(existingSearch.id, {isPinned: true});\n    }\n\n    const newPinnedSearch = !existingSearch\n      ? [\n          {\n            id: null,\n            name: 'My Pinned Search',\n            type,\n            query,\n            sort,\n            isPinned: true,\n          },\n        ]\n      : [];\n\n    this.state = {\n      ...this.state,\n      savedSearches: [\n        ...newPinnedSearch,\n\n        // There can only be 1 pinned search, so the rest must be unpinned\n        // Also if we are pinning an existing search, then filter that out too\n        ...this.getFilteredSearches(type, existingSearch && existingSearch.id),\n      ],\n    };\n    this.trigger(this.state);\n  },\n\n  onPinSearchSuccess(resp) {\n    const existingSearch = this.findByQuery(resp.query, resp.sort);\n\n    if (existingSearch) {\n      this.updateExistingSearch(existingSearch.id, resp);\n    }\n\n    this.trigger(this.state);\n  },\n\n  onUnpinSearch(type) {\n    this.state = {\n      ...this.state,\n      // Design decision that there can only be 1 pinned search per `type`\n      savedSearches: this.getFilteredSearches(type),\n    };\n    this.trigger(this.state);\n  },\n};\n\nconst SavedSearchesStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SavedSearchesStore;\n","import {t, tct} from 'sentry/locale';\n\nimport {BULK_LIMIT, BULK_LIMIT_STR} from './utils';\n\ntype Props = {\n  all: boolean;\n  query: string;\n  queryCount: number;\n};\n\nfunction ExtraDescription({all, query, queryCount}: Props) {\n  if (!all) {\n    return null;\n  }\n\n  if (query) {\n    return (\n      <div>\n        <p>{t('This will apply to the current search query') + ':'}</p>\n        <pre>{query}</pre>\n      </div>\n    );\n  }\n\n  return (\n    <p className=\"error\">\n      <strong>\n        {queryCount > BULK_LIMIT\n          ? tct(\n              'This will apply to the first [bulkNumber] issues matched in this project!',\n              {\n                bulkNumber: BULK_LIMIT_STR,\n              }\n            )\n          : tct('This will apply to all [bulkNumber] issues matched in this project!', {\n              bulkNumber: queryCount,\n            })}\n      </strong>\n    </p>\n  );\n}\n\nexport default ExtraDescription;\n","import capitalize from 'lodash/capitalize';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct, tn} from 'sentry/locale';\n\nimport ExtraDescription from './extraDescription';\n\nexport const BULK_LIMIT = 1000;\nexport const BULK_LIMIT_STR = BULK_LIMIT.toLocaleString();\n\nexport enum ConfirmAction {\n  RESOLVE = 'resolve',\n  UNRESOLVE = 'unresolve',\n  IGNORE = 'ignore',\n  BOOKMARK = 'bookmark',\n  UNBOOKMARK = 'unbookmark',\n  MERGE = 'merge',\n  DELETE = 'delete',\n}\n\nfunction getBulkConfirmMessage(action: string, queryCount: number) {\n  if (queryCount > BULK_LIMIT) {\n    return tct(\n      'Are you sure you want to [action] the first [bulkNumber] issues that match the search?',\n      {\n        action,\n        bulkNumber: BULK_LIMIT_STR,\n      }\n    );\n  }\n\n  return tct(\n    'Are you sure you want to [action] all [bulkNumber] issues that match the search?',\n    {\n      action,\n      bulkNumber: queryCount,\n    }\n  );\n}\n\nexport function getConfirm(\n  numIssues: number,\n  allInQuerySelected: boolean,\n  query: string,\n  queryCount: number\n) {\n  return function (action: ConfirmAction | string, canBeUndone: boolean, append = '') {\n    const question = allInQuerySelected\n      ? getBulkConfirmMessage(`${action}${append}`, queryCount)\n      : tn(\n          `Are you sure you want to ${action} this %s issue${append}?`,\n          `Are you sure you want to ${action} these %s issues${append}?`,\n          numIssues\n        );\n\n    let message;\n    switch (action) {\n      case ConfirmAction.DELETE:\n        message = tct(\n          'Bulk deletion is only recommended for junk data. To clear your stream, consider resolving or ignoring. [link:When should I delete events?]',\n          {\n            link: (\n              <ExternalLink href=\"https://help.sentry.io/account/billing/when-should-i-delete-events/\" />\n            ),\n          }\n        );\n        break;\n      case ConfirmAction.MERGE:\n        message = t('Note that unmerging is currently an experimental feature.');\n        break;\n      default:\n        message = t('This action cannot be undone.');\n    }\n\n    return (\n      <div>\n        <p style={{marginBottom: '20px'}}>\n          <strong>{question}</strong>\n        </p>\n        <ExtraDescription\n          all={allInQuerySelected}\n          query={query}\n          queryCount={queryCount}\n        />\n        {!canBeUndone && <p>{message}</p>}\n      </div>\n    );\n  };\n}\n\nexport function getLabel(numIssues: number, allInQuerySelected: boolean) {\n  return function (action: string, append = '') {\n    const capitalized = capitalize(action);\n    const text = allInQuerySelected\n      ? t(`Bulk ${action} issues`)\n      : tn(\n          `${capitalized} %s selected issue`,\n          `${capitalized} %s selected issues`,\n          numIssues\n        );\n\n    return text + append;\n  };\n}\n","import ResolveActions from 'sentry/components/actions/resolve';\nimport {Organization} from 'sentry/types';\n\nimport {ConfirmAction} from './utils';\n\ntype Props = {\n  anySelected: boolean;\n  onShouldConfirm: (action: ConfirmAction) => boolean;\n  onUpdate: (data?: any) => void;\n  orgSlug: Organization['slug'];\n  params: any;\n};\n\nfunction ResolveActionsContainer({\n  params,\n  orgSlug,\n  anySelected,\n  onShouldConfirm,\n  onUpdate,\n}: Props) {\n  const {\n    hasReleases,\n    latestRelease,\n    projectId,\n    confirm,\n    label,\n    loadingProjects,\n    projectFetchError,\n  } = params;\n\n  // resolve requires a single project to be active in an org context\n  // projectId is null when 0 or >1 projects are selected.\n  const resolveDisabled = Boolean(!anySelected || projectFetchError);\n  const resolveDropdownDisabled = Boolean(\n    !anySelected || !projectId || loadingProjects || projectFetchError\n  );\n\n  return (\n    <ResolveActions\n      hasRelease={hasReleases}\n      latestRelease={latestRelease}\n      orgSlug={orgSlug}\n      projectSlug={projectId}\n      onUpdate={onUpdate}\n      shouldConfirm={onShouldConfirm(ConfirmAction.RESOLVE)}\n      confirmMessage={confirm('resolve', true)}\n      confirmLabel={label('resolve')}\n      disabled={resolveDisabled}\n      disableDropdown={resolveDropdownDisabled}\n      projectFetchError={projectFetchError}\n    />\n  );\n}\n\nexport default ResolveActionsContainer;\n","import Feature from 'sentry/components/acl/feature';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {IconSort} from 'sentry/icons/iconSort';\nimport {t} from 'sentry/locale';\nimport {getSortLabel, IssueSortOptions, Query} from 'sentry/views/issueList/utils';\n\ntype Props = {\n  onSelect: (sort: string) => void;\n  query: string;\n  sort: string;\n};\n\nfunction getSortTooltip(key: IssueSortOptions) {\n  switch (key) {\n    case IssueSortOptions.INBOX:\n      return t('When the issue was flagged for review.');\n    case IssueSortOptions.NEW:\n      return t('When the issue was first seen in the selected time period.');\n    case IssueSortOptions.PRIORITY:\n      return t('Issues trending upward recently.');\n    case IssueSortOptions.FREQ:\n      return t('Number of events in the time selected.');\n    case IssueSortOptions.USER:\n      return t('Number of users affected in the time selected.');\n    case IssueSortOptions.TREND:\n      return t('% change in event count over the time selected.');\n    case IssueSortOptions.DATE:\n    default:\n      return t('When the issue was last seen in the selected time period.');\n  }\n}\n\nfunction getSortOptions(sortKeys: IssueSortOptions[], hasTrendSort = false) {\n  const combinedSortKeys = [\n    ...sortKeys,\n    ...(hasTrendSort ? [IssueSortOptions.TREND] : []),\n  ];\n  return combinedSortKeys.map(key => ({\n    value: key,\n    label: getSortLabel(key),\n    tooltip: getSortTooltip(key),\n  }));\n}\n\nconst IssueListSortOptions = ({onSelect, sort, query}: Props) => {\n  const sortKey = sort || IssueSortOptions.DATE;\n  const sortKeys = [\n    ...(query === Query.FOR_REVIEW ? [IssueSortOptions.INBOX] : []),\n    IssueSortOptions.DATE,\n    IssueSortOptions.NEW,\n    IssueSortOptions.PRIORITY,\n    IssueSortOptions.FREQ,\n    IssueSortOptions.USER,\n  ];\n\n  return (\n    <Feature features={['issue-list-trend-sort']}>\n      {({hasFeature: hasTrendSort}) => (\n        <CompactSelect\n          onChange={opt => onSelect(opt.value)}\n          options={getSortOptions(sortKeys, hasTrendSort)}\n          value={sortKey}\n          triggerProps={{\n            size: 'xsmall',\n            icon: <IconSort size=\"xs\" />,\n          }}\n        />\n      )}\n    </Feature>\n  );\n};\n\nexport default IssueListSortOptions;\n","import {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport ActionLink from 'sentry/components/actions/actionLink';\nimport IgnoreActions from 'sentry/components/actions/ignore';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport {MenuItemProps} from 'sentry/components/dropdownMenuItemV2';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, ResolutionStatus} from 'sentry/types';\nimport Projects from 'sentry/utils/projects';\nimport useMedia from 'sentry/utils/useMedia';\n\nimport ResolveActions from './resolveActions';\nimport ReviewAction from './reviewAction';\nimport IssueListSortOptions from './sortOptions';\nimport {ConfirmAction, getConfirm, getLabel} from './utils';\n\ntype Props = {\n  allInQuerySelected: boolean;\n  anySelected: boolean;\n  issues: Set<string>;\n  multiSelected: boolean;\n  onDelete: () => void;\n  onMerge: () => void;\n  onShouldConfirm: (action: ConfirmAction) => boolean;\n  onSortChange: (sort: string) => void;\n  onUpdate: (data?: any) => void;\n  orgSlug: Organization['slug'];\n  query: string;\n  queryCount: number;\n  sort: string;\n  selectedProjectSlug?: string;\n};\n\nfunction ActionSet({\n  orgSlug,\n  queryCount,\n  query,\n  allInQuerySelected,\n  anySelected,\n  multiSelected,\n  issues,\n  onUpdate,\n  onShouldConfirm,\n  onDelete,\n  onMerge,\n  selectedProjectSlug,\n  sort,\n  onSortChange,\n}: Props) {\n  const numIssues = issues.size;\n  const confirm = getConfirm(numIssues, allInQuerySelected, query, queryCount);\n  const label = getLabel(numIssues, allInQuerySelected);\n\n  // merges require a single project to be active in an org context\n  // selectedProjectSlug is null when 0 or >1 projects are selected.\n  const mergeDisabled = !(multiSelected && selectedProjectSlug);\n\n  const selectedIssues = [...issues].map(GroupStore.get);\n  const canMarkReviewed =\n    anySelected && (allInQuerySelected || selectedIssues.some(issue => !!issue?.inbox));\n\n  // determine which ... dropdown options to show based on issue(s) selected\n  const canAddBookmark =\n    allInQuerySelected || selectedIssues.some(issue => !issue?.isBookmarked);\n  const canRemoveBookmark =\n    allInQuerySelected || selectedIssues.some(issue => issue?.isBookmarked);\n  const canSetUnresolved =\n    allInQuerySelected || selectedIssues.some(issue => issue?.status === 'resolved');\n\n  // Determine whether to nest \"Merge\" and \"Mark as Reviewed\" buttons inside\n  // the dropdown menu based on the current screen size\n  const theme = useTheme();\n  const nestMergeAndReview = useMedia(`(max-width: ${theme.breakpoints.xlarge})`);\n\n  const menuItems: MenuItemProps[] = [\n    {\n      key: 'merge',\n      label: t('Merge'),\n      hidden: !nestMergeAndReview,\n      onAction: () => {\n        openConfirmModal({\n          bypass: !onShouldConfirm(ConfirmAction.MERGE),\n          onConfirm: onMerge,\n          message: confirm(ConfirmAction.MERGE, false),\n          confirmText: label('merge'),\n        });\n      },\n    },\n    {\n      key: 'mark-reviewed',\n      label: t('Mark Reviewed'),\n      hidden: !nestMergeAndReview,\n      onAction: () => onUpdate({inbox: false}),\n    },\n    {\n      key: 'bookmark',\n      label: t('Add to Bookmarks'),\n      hidden: !canAddBookmark,\n      onAction: () => {\n        openConfirmModal({\n          bypass: !onShouldConfirm(ConfirmAction.BOOKMARK),\n          onConfirm: () => onUpdate({isBookmarked: true}),\n          message: confirm(ConfirmAction.BOOKMARK, false),\n          confirmText: label('bookmark'),\n        });\n      },\n    },\n    {\n      key: 'remove-bookmark',\n      label: t('Remove from Bookmarks'),\n      hidden: !canRemoveBookmark,\n      onAction: () => {\n        openConfirmModal({\n          bypass: !onShouldConfirm(ConfirmAction.UNBOOKMARK),\n          onConfirm: () => onUpdate({isBookmarked: false}),\n          message: confirm('remove', false, ' from your bookmarks'),\n          confirmText: label('remove', ' from your bookmarks'),\n        });\n      },\n    },\n    {\n      key: 'unresolve',\n      label: t('Set status to: Unresolved'),\n      hidden: !canSetUnresolved,\n      onAction: () => {\n        openConfirmModal({\n          bypass: !onShouldConfirm(ConfirmAction.UNRESOLVE),\n          onConfirm: () => onUpdate({status: ResolutionStatus.UNRESOLVED}),\n          message: confirm(ConfirmAction.UNRESOLVE, true),\n          confirmText: label('unresolve'),\n        });\n      },\n    },\n    {\n      key: 'delete',\n      label: t('Delete'),\n      priority: 'danger',\n      onAction: () => {\n        openConfirmModal({\n          bypass: !onShouldConfirm(ConfirmAction.DELETE),\n          onConfirm: onDelete,\n          priority: 'danger',\n          message: confirm(ConfirmAction.DELETE, false),\n          confirmText: label('delete'),\n        });\n      },\n    },\n  ];\n\n  const disabledMenuItems = [\n    ...(mergeDisabled ? ['merge'] : []),\n    ...(canMarkReviewed ? [] : ['mark-reviewed']),\n  ];\n\n  return (\n    <Wrapper>\n      {selectedProjectSlug ? (\n        <Projects orgId={orgSlug} slugs={[selectedProjectSlug]}>\n          {({projects, initiallyLoaded, fetchError}) => {\n            const selectedProject = projects[0];\n            return (\n              <ResolveActions\n                onShouldConfirm={onShouldConfirm}\n                onUpdate={onUpdate}\n                anySelected={anySelected}\n                orgSlug={orgSlug}\n                params={{\n                  hasReleases: selectedProject.hasOwnProperty('features')\n                    ? (selectedProject as Project).features.includes('releases')\n                    : false,\n                  latestRelease: selectedProject.hasOwnProperty('latestRelease')\n                    ? (selectedProject as Project).latestRelease\n                    : undefined,\n                  projectId: selectedProject.slug,\n                  confirm,\n                  label,\n                  loadingProjects: !initiallyLoaded,\n                  projectFetchError: !!fetchError,\n                }}\n              />\n            );\n          }}\n        </Projects>\n      ) : (\n        <ResolveActions\n          onShouldConfirm={onShouldConfirm}\n          onUpdate={onUpdate}\n          anySelected={anySelected}\n          orgSlug={orgSlug}\n          params={{\n            hasReleases: false,\n            latestRelease: null,\n            projectId: null,\n            confirm,\n            label,\n          }}\n        />\n      )}\n\n      <IgnoreActions\n        onUpdate={onUpdate}\n        shouldConfirm={onShouldConfirm(ConfirmAction.IGNORE)}\n        confirmMessage={confirm(ConfirmAction.IGNORE, true)}\n        confirmLabel={label('ignore')}\n        disabled={!anySelected}\n      />\n      {!nestMergeAndReview && (\n        <ReviewAction disabled={!canMarkReviewed} onUpdate={onUpdate} />\n      )}\n      {!nestMergeAndReview && (\n        <ActionLink\n          type=\"button\"\n          disabled={mergeDisabled}\n          onAction={onMerge}\n          shouldConfirm={onShouldConfirm(ConfirmAction.MERGE)}\n          message={confirm(ConfirmAction.MERGE, false)}\n          confirmLabel={label('merge')}\n          title={t('Merge Selected Issues')}\n        >\n          {t('Merge')}\n        </ActionLink>\n      )}\n      <DropdownMenuControlV2\n        items={menuItems}\n        triggerProps={{\n          'aria-label': t('More issue actions'),\n          icon: <IconEllipsis size=\"xs\" />,\n          showChevron: false,\n          size: 'xsmall',\n        }}\n        disabledKeys={disabledMenuItems}\n        isDisabled={!anySelected}\n      />\n      <IssueListSortOptions sort={sort} query={query} onSelect={onSortChange} />\n    </Wrapper>\n  );\n}\n\nexport default ActionSet;\n\nconst Wrapper = styled('div')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 66.66%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    width: 50%;\n  }\n  flex: 1;\n  margin: 0 ${space(1)};\n  display: grid;\n  gap: ${space(0.5)};\n  grid-auto-flow: column;\n  justify-content: flex-start;\n  white-space: nowrap;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ToolbarHeader from 'sentry/components/toolbarHeader';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {PageFilters} from 'sentry/types';\n\ntype Props = {\n  isReprocessingQuery: boolean;\n  onSelectStatsPeriod: (statsPeriod: string) => void;\n  selection: PageFilters;\n  statsPeriod: string;\n  anySelected?: boolean;\n};\n\nfunction Headers({\n  selection,\n  statsPeriod,\n  onSelectStatsPeriod,\n  isReprocessingQuery,\n}: Props) {\n  return (\n    <Fragment>\n      {isReprocessingQuery ? (\n        <Fragment>\n          <StartedColumn>{t('Started')}</StartedColumn>\n          <EventsReprocessedColumn>{t('Events Reprocessed')}</EventsReprocessedColumn>\n          <ProgressColumn>{t('Progress')}</ProgressColumn>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <GraphHeaderWrapper className=\"hidden-xs hidden-sm hidden-md\">\n            <GraphHeader>\n              <StyledToolbarHeader>{t('Graph:')}</StyledToolbarHeader>\n              {selection.datetime.period !== '24h' && (\n                <GraphToggle\n                  active={statsPeriod === '24h'}\n                  onClick={() => onSelectStatsPeriod('24h')}\n                >\n                  {t('24h')}\n                </GraphToggle>\n              )}\n              <GraphToggle\n                active={statsPeriod === 'auto'}\n                onClick={() => onSelectStatsPeriod('auto')}\n              >\n                {selection.datetime.period || t('Custom')}\n              </GraphToggle>\n            </GraphHeader>\n          </GraphHeaderWrapper>\n          <EventsOrUsersLabel>{t('Events')}</EventsOrUsersLabel>\n          <EventsOrUsersLabel>{t('Users')}</EventsOrUsersLabel>\n          <AssigneesLabel className=\"hidden-xs hidden-sm\">\n            <ToolbarHeader>{t('Assignee')}</ToolbarHeader>\n          </AssigneesLabel>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nexport default Headers;\n\nconst GraphHeaderWrapper = styled('div')`\n  width: 160px;\n  margin-left: ${space(2)};\n  margin-right: ${space(2)};\n  animation: 0.25s FadeIn linear forwards;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst GraphHeader = styled('div')`\n  display: flex;\n`;\n\nconst StyledToolbarHeader = styled(ToolbarHeader)`\n  flex: 1;\n`;\n\nconst GraphToggle = styled('a')<{active: boolean}>`\n  font-size: 13px;\n  padding-left: ${space(1)};\n\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => (p.active ? p.theme.textColor : p.theme.disabled)};\n  }\n`;\n\nconst EventsOrUsersLabel = styled(ToolbarHeader)`\n  display: inline-grid;\n  align-items: center;\n  justify-content: flex-end;\n  text-align: right;\n  width: 60px;\n  margin: 0 ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    width: 80px;\n  }\n`;\n\nconst AssigneesLabel = styled('div')`\n  justify-content: flex-end;\n  text-align: right;\n  width: 80px;\n  margin-left: ${space(2)};\n  margin-right: ${space(2)};\n`;\n\n// Reprocessing\nconst StartedColumn = styled(ToolbarHeader)`\n  margin: 0 ${space(2)};\n  ${p => p.theme.overflowEllipsis};\n  width: 85px;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 140px;\n  }\n`;\n\nconst EventsReprocessedColumn = styled(ToolbarHeader)`\n  margin: 0 ${space(2)};\n  ${p => p.theme.overflowEllipsis};\n  width: 75px;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 140px;\n  }\n`;\n\nconst ProgressColumn = styled(ToolbarHeader)`\n  margin: 0 ${space(2)};\n\n  display: none;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n    width: 160px;\n  }\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport uniq from 'lodash/uniq';\n\nimport {bulkDelete, bulkUpdate, mergeGroups} from 'sentry/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {alertStyles} from 'sentry/components/alert';\nimport Checkbox from 'sentry/components/checkbox';\nimport {t, tct, tn} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport SelectedGroupStore from 'sentry/stores/selectedGroupStore';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, PageFilters} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport withApi from 'sentry/utils/withApi';\n\nimport ActionSet from './actionSet';\nimport Headers from './headers';\nimport {BULK_LIMIT, BULK_LIMIT_STR, ConfirmAction} from './utils';\n\ntype Props = {\n  allResultsVisible: boolean;\n  api: Client;\n  displayCount: React.ReactNode;\n  displayReprocessingActions: boolean;\n  groupIds: string[];\n  onDelete: () => void;\n  onSelectStatsPeriod: (period: string) => void;\n  onSortChange: (sort: string) => void;\n  organization: Organization;\n  query: string;\n  queryCount: number;\n  selection: PageFilters;\n  sort: string;\n  statsPeriod: string;\n  onActionTaken?: (itemIds: string[]) => void;\n  onMarkReviewed?: (itemIds: string[]) => void;\n};\n\ntype State = {\n  allInQuerySelected: boolean;\n  anySelected: boolean;\n  multiSelected: boolean;\n  pageSelected: boolean;\n  selectedIds: Set<string>;\n  selectedProjectSlug?: string;\n};\n\nclass IssueListActions extends Component<Props, State> {\n  state: State = {\n    anySelected: false,\n    multiSelected: false, // more than one selected\n    pageSelected: false, // all on current page selected (e.g. 25)\n    allInQuerySelected: false, // all in current search query selected (e.g. 1000+)\n    selectedIds: new Set(),\n  };\n\n  componentDidMount() {\n    this.handleSelectedGroupChange();\n  }\n\n  componentWillUnmount() {\n    callIfFunction(this.listener);\n  }\n\n  listener = SelectedGroupStore.listen(() => this.handleSelectedGroupChange(), undefined);\n\n  actionSelectedGroups(callback: (itemIds: string[] | undefined) => void) {\n    let selectedIds: string[] | undefined;\n\n    if (this.state.allInQuerySelected) {\n      selectedIds = undefined; // undefined means \"all\"\n    } else {\n      const itemIdSet = SelectedGroupStore.getSelectedIds();\n      selectedIds = this.props.groupIds.filter(itemId => itemIdSet.has(itemId));\n    }\n\n    callback(selectedIds);\n\n    this.deselectAll();\n  }\n\n  deselectAll() {\n    SelectedGroupStore.deselectAll();\n    this.setState({allInQuerySelected: false});\n  }\n\n  // Handler for when `SelectedGroupStore` changes\n  handleSelectedGroupChange() {\n    const selected = SelectedGroupStore.getSelectedIds();\n    const projects = [...selected]\n      .map(id => GroupStore.get(id))\n      .filter((group): group is Group => !!(group && group.project))\n      .map(group => group.project.slug);\n\n    const uniqProjects = uniq(projects);\n\n    // we only want selectedProjectSlug set if there is 1 project\n    // more or fewer should result in a null so that the action toolbar\n    // can behave correctly.\n    const selectedProjectSlug = uniqProjects.length === 1 ? uniqProjects[0] : undefined;\n\n    this.setState({\n      pageSelected: SelectedGroupStore.allSelected(),\n      multiSelected: SelectedGroupStore.multiSelected(),\n      anySelected: SelectedGroupStore.anySelected(),\n      allInQuerySelected: false, // any change resets\n      selectedIds: SelectedGroupStore.getSelectedIds(),\n      selectedProjectSlug,\n    });\n  }\n\n  handleSelectStatsPeriod = (period: string) => {\n    return this.props.onSelectStatsPeriod(period);\n  };\n\n  handleApplyToAll = () => {\n    this.setState({allInQuerySelected: true});\n  };\n\n  handleUpdate = (data?: any) => {\n    const {selection, api, organization, query, onMarkReviewed, onActionTaken} =\n      this.props;\n    const orgId = organization.slug;\n    const hasIssueListRemovalAction = organization.features.includes(\n      'issue-list-removal-action'\n    );\n\n    this.actionSelectedGroups(itemIds => {\n      // TODO(Kelly): remove once issue-list-removal-action feature is stable\n      if (!hasIssueListRemovalAction) {\n        addLoadingMessage(t('Saving changes\\u2026'));\n      }\n\n      if (data?.inbox === false) {\n        onMarkReviewed?.(itemIds ?? []);\n      }\n\n      onActionTaken?.(itemIds ?? []);\n\n      // If `itemIds` is undefined then it means we expect to bulk update all items\n      // that match the query.\n      //\n      // We need to always respect the projects selected in the global selection header:\n      // * users with no global views requires a project to be specified\n      // * users with global views need to be explicit about what projects the query will run against\n      const projectConstraints = {project: selection.projects};\n\n      bulkUpdate(\n        api,\n        {\n          orgId,\n          itemIds,\n          data,\n          query,\n          environment: selection.environments,\n          ...projectConstraints,\n          ...selection.datetime,\n        },\n        {\n          complete: () => {\n            if (!hasIssueListRemovalAction) {\n              clearIndicators();\n            }\n          },\n        }\n      );\n    });\n  };\n\n  handleDelete = () => {\n    const {selection, api, organization, query, onDelete} = this.props;\n    const orgId = organization.slug;\n\n    this.actionSelectedGroups(itemIds => {\n      bulkDelete(\n        api,\n        {\n          orgId,\n          itemIds,\n          query,\n          project: selection.projects,\n          environment: selection.environments,\n          ...selection.datetime,\n        },\n        {\n          complete: () => {\n            onDelete();\n          },\n        }\n      );\n    });\n  };\n\n  handleMerge = () => {\n    const {selection, api, organization, query} = this.props;\n    const orgId = organization.slug;\n\n    this.actionSelectedGroups(itemIds => {\n      mergeGroups(\n        api,\n        {\n          orgId,\n          itemIds,\n          query,\n          project: selection.projects,\n          environment: selection.environments,\n          ...selection.datetime,\n        },\n        {}\n      );\n    });\n  };\n\n  handleSelectAll() {\n    SelectedGroupStore.toggleSelectAll();\n  }\n\n  shouldConfirm = (action: ConfirmAction) => {\n    const selectedItems = SelectedGroupStore.getSelectedIds();\n\n    switch (action) {\n      case ConfirmAction.RESOLVE:\n      case ConfirmAction.UNRESOLVE:\n      case ConfirmAction.IGNORE:\n      case ConfirmAction.UNBOOKMARK: {\n        const {pageSelected} = this.state;\n        return pageSelected && selectedItems.size > 1;\n      }\n      case ConfirmAction.BOOKMARK:\n        return selectedItems.size > 1;\n      case ConfirmAction.MERGE:\n      case ConfirmAction.DELETE:\n      default:\n        return true; // By default, should confirm ...\n    }\n  };\n  render() {\n    const {\n      allResultsVisible,\n      queryCount,\n      query,\n      statsPeriod,\n      selection,\n      organization,\n      displayReprocessingActions,\n    } = this.props;\n\n    const {\n      allInQuerySelected,\n      anySelected,\n      pageSelected,\n      selectedIds: issues,\n      multiSelected,\n      selectedProjectSlug,\n    } = this.state;\n\n    const numIssues = issues.size;\n\n    return (\n      <Sticky>\n        <StyledFlex>\n          <ActionsCheckbox isReprocessingQuery={displayReprocessingActions}>\n            <Checkbox\n              onChange={this.handleSelectAll}\n              checked={pageSelected}\n              disabled={displayReprocessingActions}\n            />\n          </ActionsCheckbox>\n          {!displayReprocessingActions && (\n            <ActionSet\n              sort={this.props.sort}\n              onSortChange={this.props.onSortChange}\n              orgSlug={organization.slug}\n              queryCount={queryCount}\n              query={query}\n              issues={issues}\n              allInQuerySelected={allInQuerySelected}\n              anySelected={anySelected}\n              multiSelected={multiSelected}\n              selectedProjectSlug={selectedProjectSlug}\n              onShouldConfirm={this.shouldConfirm}\n              onDelete={this.handleDelete}\n              onMerge={this.handleMerge}\n              onUpdate={this.handleUpdate}\n            />\n          )}\n          <Headers\n            onSelectStatsPeriod={this.handleSelectStatsPeriod}\n            anySelected={anySelected}\n            selection={selection}\n            statsPeriod={statsPeriod}\n            isReprocessingQuery={displayReprocessingActions}\n          />\n        </StyledFlex>\n        {!allResultsVisible && pageSelected && (\n          <SelectAllNotice>\n            {allInQuerySelected ? (\n              queryCount >= BULK_LIMIT ? (\n                tct(\n                  'Selected up to the first [count] issues that match this search query.',\n                  {\n                    count: BULK_LIMIT_STR,\n                  }\n                )\n              ) : (\n                tct('Selected all [count] issues that match this search query.', {\n                  count: queryCount,\n                })\n              )\n            ) : (\n              <Fragment>\n                {tn(\n                  '%s issue on this page selected.',\n                  '%s issues on this page selected.',\n                  numIssues\n                )}\n                <SelectAllLink onClick={this.handleApplyToAll}>\n                  {queryCount >= BULK_LIMIT\n                    ? tct(\n                        'Select the first [count] issues that match this search query.',\n                        {\n                          count: BULK_LIMIT_STR,\n                        }\n                      )\n                    : tct('Select all [count] issues that match this search query.', {\n                        count: queryCount,\n                      })}\n                </SelectAllLink>\n              </Fragment>\n            )}\n          </SelectAllNotice>\n        )}\n      </Sticky>\n    );\n  }\n}\n\nconst Sticky = styled('div')`\n  position: sticky;\n  z-index: ${p => p.theme.zIndex.issuesList.stickyHeader};\n  top: -1px;\n`;\n\nconst StyledFlex = styled('div')`\n  display: flex;\n  box-sizing: border-box;\n  min-height: 45px;\n  padding-top: ${space(1)};\n  padding-bottom: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  border: 1px solid ${p => p.theme.border};\n  border-top: none;\n  border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n  margin: 0 -1px -1px;\n`;\n\nconst ActionsCheckbox = styled('div')<{isReprocessingQuery: boolean}>`\n  padding-left: ${space(2)};\n  margin-bottom: 1px;\n  & input[type='checkbox'] {\n    margin: 0;\n    display: block;\n  }\n  ${p => p.isReprocessingQuery && 'flex: 1'};\n`;\n\nconst SelectAllNotice = styled('div')`\n  ${p => alertStyles({theme: p.theme, type: 'warning', system: true, opaque: true})}\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: ${space(0.5)} ${space(1.5)};\n  border-top-width: 1px;\n\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  a:not([role='button']) {\n    color: ${p => p.theme.linkColor};\n    border-bottom: none;\n  }\n`;\n\nconst SelectAllLink = styled('a')`\n  margin-left: ${space(1)};\n`;\n\nexport {IssueListActions};\n\nexport default withApi(IssueListActions);\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport space from 'sentry/styles/space';\nimport {Organization, SavedSearch} from 'sentry/types';\n\nimport IssueListSearchBar from './searchBar';\nimport {TagValueLoader} from './types';\n\ntype IssueListSearchBarProps = React.ComponentProps<typeof IssueListSearchBar>;\n\ntype Props = {\n  isSearchDisabled: boolean;\n  onSearch: (query: string) => void;\n  onSidebarToggle: (event: React.MouseEvent) => void;\n  organization: Organization;\n  query: string;\n  savedSearch: SavedSearch;\n  sort: string;\n  tagValueLoader: TagValueLoader;\n  tags: NonNullable<IssueListSearchBarProps['supportedTags']>;\n};\n\nfunction IssueListFilters({\n  organization,\n  savedSearch,\n  query,\n  isSearchDisabled,\n  sort,\n  onSidebarToggle,\n  onSearch,\n  tagValueLoader,\n  tags,\n}: Props) {\n  return (\n    <Fragment>\n      <SearchContainer>\n        <PageFilterBar>\n          <ProjectPageFilter />\n          <EnvironmentPageFilter />\n          <DatePageFilter alignDropdown=\"left\" />\n        </PageFilterBar>\n        <IssueListSearchBar\n          organization={organization}\n          query={query || ''}\n          sort={sort}\n          onSearch={onSearch}\n          disabled={isSearchDisabled}\n          excludeEnvironment\n          supportedTags={tags}\n          tagValueLoader={tagValueLoader}\n          savedSearch={savedSearch}\n          onSidebarToggle={onSidebarToggle}\n        />\n      </SearchContainer>\n    </Fragment>\n  );\n}\n\nconst SearchContainer = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  width: 100%;\n  margin-bottom: ${space(2)};\n  grid-template-columns: minmax(0, max-content) minmax(20rem, 1fr);\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nexport default IssueListFilters;\n","import {Fragment, useCallback, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport Badge from 'sentry/components/badge';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DropdownButtonV2 from 'sentry/components/dropdownButtonV2';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {ControlProps} from 'sentry/components/forms/selectControl';\nimport QueryCount from 'sentry/components/queryCount';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, SavedSearch} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport {getSortLabel} from './utils';\n\ntype Props = {\n  onSavedSearchDelete: (savedSearch: SavedSearch) => void;\n  onSavedSearchSelect: (savedSearch: SavedSearch) => void;\n  organization: Organization;\n  savedSearchList: SavedSearch[];\n  sort: string;\n  isActive?: boolean;\n  query?: string;\n  queryCount?: number;\n};\n\nfunction SavedSearchTab({\n  isActive,\n  organization,\n  savedSearchList,\n  onSavedSearchSelect,\n  onSavedSearchDelete,\n  query,\n  queryCount,\n  sort,\n}: Props) {\n  const savedSearch = savedSearchList.find(\n    search => search.query === query && search.sort === sort\n  );\n  const savedSearchValue = savedSearch\n    ? savedSearch.isGlobal\n      ? `global-search-${savedSearch.id}`\n      : `saved-search-${savedSearch.id}`\n    : '';\n\n  const options: ControlProps['options'] = useMemo(() => {\n    const savedSearches = savedSearchList.filter(search => !search.isGlobal);\n    const globalSearches = savedSearchList.filter(\n      search => search.isGlobal && !search.isPinned && search.query !== 'is:unresolved'\n    );\n\n    function getSearchOption(search, keyPrefix) {\n      return {\n        value: `${keyPrefix}-${search.id}`,\n        label: search.name,\n        details: (\n          <Details>\n            {search.query}\n            {` \\u2022 ${t('Sort:')} ${getSortLabel(search.sort)}`}\n          </Details>\n        ),\n        tooltip: (\n          <Fragment>\n            {`${search.name} \\u2022 `}\n            <TooltipSearchQuery>{search.query}</TooltipSearchQuery>\n            {` \\u2022 `}\n            {t('Sort: ')}\n            {getSortLabel(search.sort)}\n          </Fragment>\n        ),\n        tooltipOptions: {delay: 1000},\n        ...(!search.isPinned &&\n          !search.isGlobal && {\n            trailingItems: (\n              <Access\n                organization={organization}\n                access={['org:write']}\n                renderNoAccessMessage={false}\n              >\n                <Confirm\n                  onConfirm={() => onSavedSearchDelete(search)}\n                  message={t('Are you sure you want to delete this saved search?')}\n                  stopPropagation\n                >\n                  <DeleteButton\n                    borderless\n                    icon={<IconDelete />}\n                    aria-label={t('delete')}\n                    size=\"zero\"\n                  />\n                </Confirm>\n              </Access>\n            ),\n          }),\n        trailingItemsSpanFullHeight: true,\n      };\n    }\n\n    const searchOptions: ControlProps['options'] = [];\n\n    if (savedSearches.length > 0) {\n      searchOptions.push({\n        value: 'saved-searches',\n        label: t('Saved Searches'),\n        options: savedSearches.map(search => getSearchOption(search, 'saved-search')),\n      });\n    }\n\n    if (globalSearches.length > 0) {\n      searchOptions.push({\n        value: 'global-searches',\n        label: t('Recommended Searches'),\n        options: globalSearches.map(search => getSearchOption(search, 'global-search')),\n      });\n    }\n\n    return searchOptions;\n  }, []);\n\n  const trigger = ({props, ref}) => (\n    <StyledDropdownTrigger\n      ref={ref}\n      {...props}\n      isActive={isActive}\n      borderless\n      priority=\"link\"\n      size=\"zero\"\n    >\n      {isActive ? (\n        <Fragment>\n          <span>{savedSearch ? savedSearch.name : t('Custom Search')}&nbsp;</span>\n          {defined(queryCount) && queryCount > 0 && (\n            <Badge>\n              <QueryCount hideParens count={queryCount} max={1000} />\n            </Badge>\n          )}\n        </Fragment>\n      ) : (\n        t('Saved Searches')\n      )}\n    </StyledDropdownTrigger>\n  );\n\n  const onChange = useCallback(\n    option => {\n      const searchObj = savedSearchList.find(s =>\n        s.isGlobal\n          ? `global-search-${s.id}` === option.value\n          : `saved-search-${s.id}` === option.value\n      );\n      searchObj && onSavedSearchSelect(searchObj);\n    },\n    [savedSearchList, onSavedSearchSelect]\n  );\n\n  return (\n    <StyledCompactSelect\n      renderWrapAs=\"li\"\n      trigger={trigger}\n      options={options}\n      value={savedSearchValue}\n      isActive={isActive}\n      onChange={onChange}\n      offset={-4}\n      maxMenuHeight={800}\n    />\n  );\n}\n\nexport default SavedSearchTab;\n\nconst StyledCompactSelect = styled(CompactSelect)<{isActive?: boolean}>`\n  && {\n    position: static;\n  }\n  border-bottom-width: 4px;\n  border-bottom-style: solid;\n  border-bottom-color: ${p => (p.isActive ? p.theme.active : 'transparent')};\n`;\n\nconst StyledDropdownTrigger = styled(DropdownButtonV2)<{isActive?: boolean}>`\n  display: flex;\n  height: calc(1.25rem - 2px);\n  align-items: center;\n  color: ${p => (p.isActive ? p.theme.textColor : p.theme.subText)};\n  box-sizing: content-box;\n  padding: ${space(1)} 0;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst Details = styled('span')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  max-width: 16rem;\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst TooltipSearchQuery = styled('span')`\n  color: ${p => p.theme.subText};\n  font-weight: normal;\n  font-family: ${p => p.theme.text.familyMono};\n`;\n\nconst DeleteButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  flex-shrink: 0;\n  padding: ${space(1)} 0;\n\n  :hover {\n    color: ${p => p.theme.error};\n  }\n`;\n","import {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Badge from 'sentry/components/badge';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport GlobalEventProcessingAlert from 'sentry/components/globalEventProcessingAlert';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport QueryCount from 'sentry/components/queryCount';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconPause, IconPlay} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport SavedSearchTab from './savedSearchTab';\nimport {getTabs, IssueSortOptions, Query, QueryCounts, TAB_MAX_COUNT} from './utils';\n\ntype Props = {\n  displayReprocessingTab: boolean;\n  onRealtimeChange: (realtime: boolean) => void;\n  organization: Organization;\n  query: string;\n  queryCounts: QueryCounts;\n  realtimeActive: boolean;\n  router: InjectedRouter;\n  selectedProjectIds: number[];\n  sort: string;\n  queryCount?: number;\n} & React.ComponentProps<typeof SavedSearchTab>;\n\nfunction IssueListHeader({\n  organization,\n  query,\n  sort,\n  queryCount,\n  queryCounts,\n  realtimeActive,\n  onRealtimeChange,\n  onSavedSearchSelect,\n  onSavedSearchDelete,\n  savedSearchList,\n  router,\n  displayReprocessingTab,\n  selectedProjectIds,\n}: Props) {\n  const {projects} = useProjects();\n  const tabs = getTabs(organization);\n  const visibleTabs = displayReprocessingTab\n    ? tabs\n    : tabs.filter(([tab]) => tab !== Query.REPROCESSING);\n  const savedSearchTabActive = !visibleTabs.some(([tabQuery]) => tabQuery === query);\n  // Remove cursor and page when switching tabs\n  const {cursor: _, page: __, ...queryParms} = router?.location?.query ?? {};\n  const sortParam =\n    queryParms.sort === IssueSortOptions.INBOX ? undefined : queryParms.sort;\n\n  function trackTabClick(tabQuery: string) {\n    // Clicking on inbox tab and currently another tab is active\n    if (tabQuery === Query.FOR_REVIEW && query !== Query.FOR_REVIEW) {\n      trackAnalyticsEvent({\n        eventKey: 'inbox_tab.clicked',\n        eventName: 'Clicked Inbox Tab',\n        organization_id: organization.id,\n      });\n    }\n  }\n\n  const selectedProjects = projects.filter(({id}) =>\n    selectedProjectIds.includes(Number(id))\n  );\n\n  return (\n    <Layout.Header noActionWrap>\n      <Layout.HeaderContent>\n        <StyledLayoutTitle>{t('Issues')}</StyledLayoutTitle>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        <ButtonBar gap={1}>\n          <Button\n            size=\"small\"\n            data-test-id=\"real-time\"\n            title={\n              realtimeActive\n                ? t('Pause real-time updates')\n                : t('Enable real-time updates')\n            }\n            icon={realtimeActive ? <IconPause size=\"xs\" /> : <IconPlay size=\"xs\" />}\n            onClick={() => onRealtimeChange(!realtimeActive)}\n            aria-label={t('Toggle real-time updates')}\n          />\n        </ButtonBar>\n      </Layout.HeaderActions>\n      <StyledGlobalEventProcessingAlert projects={selectedProjects} />\n      <Layout.HeaderNavTabs underlined>\n        {visibleTabs.map(\n          ([tabQuery, {name: queryName, tooltipTitle, tooltipHoverable}]) => {\n            const to = {\n              query: {\n                ...queryParms,\n                query: tabQuery,\n                sort: tabQuery === Query.FOR_REVIEW ? IssueSortOptions.INBOX : sortParam,\n              },\n              pathname: `/organizations/${organization.slug}/issues/`,\n            };\n\n            return (\n              <li key={tabQuery} className={query === tabQuery ? 'active' : ''}>\n                <Link to={to} onClick={() => trackTabClick(tabQuery)}>\n                  <Tooltip\n                    title={tooltipTitle}\n                    position=\"bottom\"\n                    isHoverable={tooltipHoverable}\n                    delay={1000}\n                  >\n                    {queryName}{' '}\n                    {queryCounts[tabQuery]?.count > 0 && (\n                      <Badge\n                        type={\n                          tabQuery === Query.FOR_REVIEW &&\n                          queryCounts[tabQuery]!.count > 0\n                            ? 'review'\n                            : 'default'\n                        }\n                      >\n                        <QueryCount\n                          hideParens\n                          count={queryCounts[tabQuery].count}\n                          max={queryCounts[tabQuery].hasMore ? TAB_MAX_COUNT : 1000}\n                        />\n                      </Badge>\n                    )}\n                  </Tooltip>\n                </Link>\n              </li>\n            );\n          }\n        )}\n        <SavedSearchTab\n          organization={organization}\n          query={query}\n          sort={sort}\n          savedSearchList={savedSearchList}\n          onSavedSearchSelect={onSavedSearchSelect}\n          onSavedSearchDelete={onSavedSearchDelete}\n          isActive={savedSearchTabActive}\n          queryCount={queryCount}\n        />\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n}\n\nexport default IssueListHeader;\n\nconst StyledLayoutTitle = styled(Layout.Title)`\n  margin-top: ${space(0.5)};\n`;\n\nconst StyledGlobalEventProcessingAlert = styled(GlobalEventProcessingAlert)`\n  grid-column: 1/-1;\n  margin-top: ${space(1)};\n  margin-bottom: ${space(1)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    margin-top: ${space(2)};\n    margin-bottom: 0;\n  }\n`;\n","import {Component} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Input from 'sentry/components/forms/controls/input';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport SidebarSection from 'sentry/components/sidebarSection';\nimport {t, tct} from 'sentry/locale';\nimport {Tag, TagValue} from 'sentry/types';\n\nimport {TagValueLoader} from './types';\n\nconst defaultProps = {\n  value: '',\n};\n\ntype SelectOption = Record<'value' | 'label', string>;\n\ntype Props = {\n  onSelect: (tag: Tag, value: string | null) => void;\n  tag: Tag;\n  tagValueLoader: TagValueLoader;\n} & typeof defaultProps;\n\ntype State = {\n  isLoading: boolean;\n  query: string;\n  textValue: string;\n  value: string | null;\n  options?: SelectOption[];\n};\n\nclass IssueListTagFilter extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    query: '',\n    isLoading: false,\n    value: this.props.value,\n    textValue: this.props.value,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.value !== this.state.value) {\n      this.setState({\n        value: nextProps.value,\n        textValue: nextProps.value,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.api) {\n      return;\n    }\n    this.api.clear();\n  }\n\n  api = new Client();\n\n  handleLoadOptions = () => {\n    const {tag, tagValueLoader} = this.props;\n    const {textValue} = this.state;\n\n    if (tag.isInput || tag.predefined) {\n      return;\n    }\n\n    if (!this.api) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n    });\n\n    tagValueLoader(tag.key, textValue)\n      .then(resp => {\n        this.setState({\n          isLoading: false,\n          options: Object.values(resp).map(\n            ({value}: TagValue): SelectOption => ({\n              value,\n              label: value,\n            })\n          ),\n        });\n      })\n      .catch(() => {\n        // TODO(billy): This endpoint seems to timeout a lot,\n        // should we log these errors into datadog?\n\n        addErrorMessage(\n          tct('Unable to retrieve values for tag [tagName]', {\n            tagName: textValue,\n          })\n        );\n      });\n  };\n\n  handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    this.setState({\n      textValue: value,\n    });\n    this.debouncedTextChange(value);\n  };\n\n  debouncedTextChange = debounce(text => {\n    this.handleChange(text);\n  }, 150);\n\n  handleOpenMenu = () => {\n    if (this.props.tag.predefined) {\n      return;\n    }\n\n    this.setState(\n      {\n        isLoading: true,\n      },\n      this.handleLoadOptions\n    );\n  };\n\n  handleChangeSelect = (valueObj: SelectOption | null) => {\n    const value = valueObj ? valueObj.value : null;\n    this.handleChange(value);\n  };\n\n  handleChangeSelectInput = (value: string) => {\n    this.setState(\n      {\n        textValue: value,\n      },\n      this.handleLoadOptions\n    );\n  };\n\n  handleChange = (value: string | null) => {\n    const {onSelect, tag} = this.props;\n\n    this.setState(\n      {\n        value,\n      },\n      () => {\n        onSelect && onSelect(tag, value);\n      }\n    );\n  };\n\n  render() {\n    const {tag} = this.props;\n    const {options, isLoading} = this.state;\n\n    return (\n      <SidebarSection title={tag.key}>\n        {!!tag.isInput && (\n          <Input value={this.state.textValue} onChange={this.handleChangeInput} />\n        )}\n\n        {!tag.isInput && (\n          <SelectControl\n            clearable\n            aria-label={tag.key}\n            placeholder=\"--\"\n            loadingMessage={() => t('Loading\\u2026')}\n            value={this.state.value}\n            onChange={this.handleChangeSelect}\n            isLoading={isLoading}\n            onInputChange={this.handleChangeSelectInput}\n            onFocus={this.handleOpenMenu}\n            noResultsText={isLoading ? t('Loading\\u2026') : t('No results found')}\n            options={\n              tag.predefined\n                ? tag.values &&\n                  tag.values.map(value => ({\n                    value,\n                    label: value,\n                  }))\n                : options\n            }\n          />\n        )}\n      </SidebarSection>\n    );\n  }\n}\n\nexport default IssueListTagFilter;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\n\nimport Input from 'sentry/components/forms/controls/input';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SidebarSection from 'sentry/components/sidebarSection';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Tag, TagCollection} from 'sentry/types';\nimport {objToQuery, QueryObj, queryToObj} from 'sentry/utils/stream';\n\nimport IssueListTagFilter from './tagFilter';\nimport {TagValueLoader} from './types';\n\ntype DefaultProps = {\n  onQueryChange: (query: string) => void;\n  query: string;\n  tags: TagCollection;\n};\n\ntype Props = DefaultProps & {\n  tagValueLoader: TagValueLoader;\n  loading?: boolean;\n};\n\ntype State = {\n  queryObj: QueryObj;\n  textFilter: string;\n};\n\nclass IssueListSidebar extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    tags: {},\n    query: '',\n    onQueryChange: function () {},\n  };\n\n  state: State = {\n    queryObj: queryToObj(this.props.query),\n    textFilter: queryToObj(this.props.query).__text,\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    // If query was updated by another source (e.g. SearchBar),\n    // clobber state of sidebar with new query.\n    const query = objToQuery(this.state.queryObj);\n\n    if (!isEqual(nextProps.query, query)) {\n      const queryObj = queryToObj(nextProps.query);\n      this.setState({\n        queryObj,\n        textFilter: queryObj.__text,\n      });\n    }\n  }\n\n  onSelectTag = (tag: Tag, value: string | null) => {\n    const newQuery = {...this.state.queryObj};\n    if (value) {\n      newQuery[tag.key] = value;\n    } else {\n      delete newQuery[tag.key];\n    }\n\n    this.setState(\n      {\n        queryObj: newQuery,\n      },\n      this.onQueryChange\n    );\n  };\n\n  onTextChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({textFilter: evt.target.value});\n  };\n\n  onTextFilterSubmit = (evt?: React.FormEvent<HTMLFormElement>) => {\n    evt && evt.preventDefault();\n\n    const newQueryObj = {\n      ...this.state.queryObj,\n      __text: this.state.textFilter,\n    };\n\n    this.setState(\n      {\n        queryObj: newQueryObj,\n      },\n      this.onQueryChange\n    );\n  };\n\n  onQueryChange = () => {\n    const query = objToQuery(this.state.queryObj);\n    this.props.onQueryChange && this.props.onQueryChange(query);\n  };\n\n  onClearSearch = () => {\n    this.setState(\n      {\n        textFilter: '',\n      },\n      this.onTextFilterSubmit\n    );\n  };\n\n  render() {\n    const {loading, tagValueLoader, tags} = this.props;\n    return (\n      <StreamSidebar>\n        {loading ? (\n          <LoadingIndicator />\n        ) : (\n          <Fragment>\n            <SidebarSection title={t('Text')}>\n              <form onSubmit={this.onTextFilterSubmit}>\n                <Input\n                  placeholder={t('Search title and culprit text body')}\n                  onChange={this.onTextChange}\n                  value={this.state.textFilter}\n                />\n                {this.state.textFilter && (\n                  <StyledIconClose size=\"xs\" onClick={this.onClearSearch} />\n                )}\n              </form>\n              <StyledHr />\n            </SidebarSection>\n\n            {map(tags, tag => (\n              <IssueListTagFilter\n                value={this.state.queryObj[tag.key]}\n                key={tag.key}\n                tag={tag}\n                onSelect={this.onSelectTag}\n                tagValueLoader={tagValueLoader}\n              />\n            ))}\n          </Fragment>\n        )}\n      </StreamSidebar>\n    );\n  }\n}\n\nexport default IssueListSidebar;\n\nconst StreamSidebar = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 13px;\n  right: 10px;\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst StyledHr = styled('hr')`\n  margin: ${space(2)} 0 0;\n  border-top: solid 1px ${p => p.theme.innerBorder};\n`;\n","import {Component, Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport Cookies from 'js-cookie';\nimport isEqual from 'lodash/isEqual';\nimport mapValues from 'lodash/mapValues';\nimport omit from 'lodash/omit';\nimport pickBy from 'lodash/pickBy';\nimport * as qs from 'query-string';\n\nimport {addMessage} from 'sentry/actionCreators/indicator';\nimport {fetchOrgMembers, indexMembersByProject} from 'sentry/actionCreators/members';\nimport {\n  deleteSavedSearch,\n  fetchSavedSearches,\n  resetSavedSearches,\n} from 'sentry/actionCreators/savedSearches';\nimport {fetchTagValues, loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport GroupActions from 'sentry/actions/groupActions';\nimport {Client} from 'sentry/api';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {extractSelectionParameters} from 'sentry/components/organizations/pageFilters/utils';\nimport Pagination, {CursorHandler} from 'sentry/components/pagination';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport QueryCount from 'sentry/components/queryCount';\nimport StreamGroup from 'sentry/components/stream/group';\nimport ProcessingIssueList from 'sentry/components/stream/processingIssueList';\nimport {DEFAULT_QUERY, DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport {PageContent} from 'sentry/styles/organization';\nimport {\n  BaseGroup,\n  Group,\n  Member,\n  Organization,\n  PageFilters,\n  SavedSearch,\n  TagCollection,\n} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport CursorPoller from 'sentry/utils/cursorPoller';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport getCurrentSentryReactTransaction from 'sentry/utils/getCurrentSentryReactTransaction';\nimport parseApiError from 'sentry/utils/parseApiError';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport {VisuallyCompleteWithData} from 'sentry/utils/performanceForSentry';\nimport StreamManager from 'sentry/utils/streamManager';\nimport withApi from 'sentry/utils/withApi';\nimport withIssueTags from 'sentry/utils/withIssueTags';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withSavedSearches from 'sentry/utils/withSavedSearches';\n\nimport IssueListActions from './actions';\nimport IssueListFilters from './filters';\nimport IssueListHeader from './header';\nimport NoGroupsHandler from './noGroupsHandler';\nimport IssueListSidebar from './sidebar';\nimport {\n  getTabs,\n  getTabsWithCounts,\n  isForReviewQuery,\n  IssueSortOptions,\n  Query,\n  QueryCounts,\n  TAB_MAX_COUNT,\n} from './utils';\n\nconst MAX_ITEMS = 25;\nconst DEFAULT_SORT = IssueSortOptions.DATE;\n// the default period for the graph in each issue row\nconst DEFAULT_GRAPH_STATS_PERIOD = '24h';\n// the allowed period choices for graph in each issue row\nconst DYNAMIC_COUNTS_STATS_PERIODS = new Set(['14d', '24h', 'auto']);\n\ntype Params = {\n  orgId: string;\n};\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  params: Params;\n  savedSearch: SavedSearch;\n  savedSearchLoading: boolean;\n  savedSearches: SavedSearch[];\n  selection: PageFilters;\n  tags: TagCollection;\n} & RouteComponentProps<{searchId?: string}, {}>;\n\ntype State = {\n  actionTaken: boolean;\n  actionTakenGroupData: Group[];\n  error: string | null;\n  // TODO(Kelly): remove forReview once issue-list-removal-action feature is stable\n  forReview: boolean;\n  groupIds: string[];\n  isSidebarVisible: boolean;\n  issuesLoading: boolean;\n  itemsRemoved: number;\n  memberList: ReturnType<typeof indexMembersByProject>;\n  pageLinks: string;\n  /**\n   * Current query total\n   */\n  queryCount: number;\n  /**\n   * Counts for each inbox tab\n   */\n  queryCounts: QueryCounts;\n  queryMaxCount: number;\n  realtimeActive: boolean;\n  // TODO(Kelly): remove reviewedIds once issue-list-removal-action feature is stable\n  reviewedIds: string[];\n  selectAllActive: boolean;\n  tagsLoading: boolean;\n  undo: boolean;\n  // Will be set to true if there is valid session data from issue-stats api call\n  query?: string;\n};\n\ntype EndpointParams = Partial<PageFilters['datetime']> & {\n  environment: string[];\n  project: number[];\n  cursor?: string;\n  groupStatsPeriod?: string | null;\n  page?: number | string;\n  query?: string;\n  sort?: string;\n  statsPeriod?: string | null;\n};\n\ntype CountsEndpointParams = Omit<EndpointParams, 'cursor' | 'page' | 'query'> & {\n  query: string[];\n};\n\ntype StatEndpointParams = Omit<EndpointParams, 'cursor' | 'page'> & {\n  groups: string[];\n  expand?: string | string[];\n};\n\nclass IssueListOverview extends Component<Props, State> {\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    const realtimeActiveCookie = Cookies.get('realtimeActive');\n    const realtimeActive =\n      typeof realtimeActiveCookie === 'undefined'\n        ? false\n        : realtimeActiveCookie === 'true';\n\n    return {\n      groupIds: [],\n      // TODO(Kelly): remove reviewedIds and forReview once issue-list-removal-action feature is stable\n      reviewedIds: [],\n      actionTaken: false,\n      actionTakenGroupData: [],\n      forReview: false,\n      undo: false,\n      selectAllActive: false,\n      realtimeActive,\n      pageLinks: '',\n      itemsRemoved: 0,\n      queryCount: 0,\n      queryCounts: {},\n      queryMaxCount: 0,\n      error: null,\n      isSidebarVisible: false,\n      issuesLoading: true,\n      tagsLoading: true,\n      memberList: {},\n    };\n  }\n\n  componentDidMount() {\n    const links = parseLinkHeader(this.state.pageLinks);\n    this._poller = new CursorPoller({\n      endpoint: links.previous?.href || '',\n      success: this.onRealtimePoll,\n    });\n\n    // Start by getting searches first so if the user is on a saved search\n    // or they have a pinned search we load the correct data the first time.\n    this.fetchSavedSearches();\n    this.fetchTags();\n    this.fetchMemberList();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevState.realtimeActive !== this.state.realtimeActive) {\n      // User toggled realtime button\n      if (this.state.realtimeActive) {\n        this.resumePolling();\n      } else {\n        this._poller.disable();\n      }\n    }\n\n    // If the project selection has changed reload the member list and tag keys\n    // allowing autocomplete and tag sidebar to be more accurate.\n    if (!isEqual(prevProps.selection.projects, this.props.selection.projects)) {\n      this.fetchMemberList();\n      this.fetchTags();\n    }\n\n    // TODO(Kelly): remove once issue-list-removal-action feature is stable\n    if (!this.props.organization.features.includes('issue-list-removal-action')) {\n      if (prevState.forReview !== this.state.forReview) {\n        this.fetchData();\n      }\n    }\n\n    // Wait for saved searches to load before we attempt to fetch stream data\n    if (this.props.savedSearchLoading) {\n      return;\n    }\n    if (prevProps.savedSearchLoading) {\n      this.fetchData();\n      return;\n    }\n\n    const prevQuery = prevProps.location.query;\n    const newQuery = this.props.location.query;\n\n    const selectionChanged = !isEqual(prevProps.selection, this.props.selection);\n\n    // If any important url parameter changed or saved search changed\n    // reload data.\n    if (\n      selectionChanged ||\n      prevQuery.cursor !== newQuery.cursor ||\n      prevQuery.sort !== newQuery.sort ||\n      prevQuery.query !== newQuery.query ||\n      prevQuery.statsPeriod !== newQuery.statsPeriod ||\n      prevQuery.groupStatsPeriod !== newQuery.groupStatsPeriod ||\n      prevProps.savedSearch !== this.props.savedSearch\n    ) {\n      this.fetchData(selectionChanged);\n    } else if (\n      !this._lastRequest &&\n      prevState.issuesLoading === false &&\n      this.state.issuesLoading\n    ) {\n      // Reload if we issues are loading or their loading state changed.\n      // This can happen when transitionTo is called\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this._poller.disable();\n    GroupStore.reset();\n    this.props.api.clear();\n    callIfFunction(this.listener);\n    // Reset store when unmounting because we always fetch on mount\n    // This means if you navigate away from stream and then back to stream,\n    // this component will go from:\n    // \"ready\" ->\n    // \"loading\" (because fetching saved searches) ->\n    // \"ready\"\n    //\n    // We don't render anything until saved searches is ready, so this can\n    // cause weird side effects (e.g. ProcessingIssueList mounting and making\n    // a request, but immediately unmounting when fetching saved searches)\n    resetSavedSearches();\n  }\n\n  private _poller: any;\n  private _lastRequest: any;\n  private _lastStatsRequest: any;\n  private _lastFetchCountsRequest: any;\n  private _streamManager = new StreamManager(GroupStore);\n\n  getQuery(): string {\n    const {savedSearch, location} = this.props;\n    if (savedSearch) {\n      return savedSearch.query;\n    }\n\n    const {query} = location.query;\n\n    if (query !== undefined) {\n      return query as string;\n    }\n\n    return DEFAULT_QUERY;\n  }\n\n  getSort(): string {\n    const {location, savedSearch} = this.props;\n    if (!location.query.sort && savedSearch?.id) {\n      return savedSearch.sort;\n    }\n\n    if (location.query.sort) {\n      return location.query.sort as string;\n    }\n\n    return DEFAULT_SORT;\n  }\n\n  getGroupStatsPeriod(): string {\n    let currentPeriod: string;\n    if (typeof this.props.location.query?.groupStatsPeriod === 'string') {\n      currentPeriod = this.props.location.query.groupStatsPeriod;\n    } else if (this.getSort() === IssueSortOptions.TREND) {\n      // Default to the larger graph when sorting by relative change\n      currentPeriod = 'auto';\n    } else {\n      currentPeriod = DEFAULT_GRAPH_STATS_PERIOD;\n    }\n\n    return DYNAMIC_COUNTS_STATS_PERIODS.has(currentPeriod)\n      ? currentPeriod\n      : DEFAULT_GRAPH_STATS_PERIOD;\n  }\n\n  getEndpointParams = (): EndpointParams => {\n    const {selection} = this.props;\n\n    const params: EndpointParams = {\n      project: selection.projects,\n      environment: selection.environments,\n      query: this.getQuery(),\n      ...selection.datetime,\n    };\n\n    if (selection.datetime.period) {\n      delete params.period;\n      params.statsPeriod = selection.datetime.period;\n    }\n    if (params.end) {\n      params.end = getUtcDateString(params.end);\n    }\n    if (params.start) {\n      params.start = getUtcDateString(params.start);\n    }\n\n    const sort = this.getSort();\n    if (sort !== DEFAULT_SORT) {\n      params.sort = sort;\n    }\n\n    const groupStatsPeriod = this.getGroupStatsPeriod();\n    if (groupStatsPeriod !== DEFAULT_GRAPH_STATS_PERIOD) {\n      params.groupStatsPeriod = groupStatsPeriod;\n    }\n\n    // only include defined values.\n    return pickBy(params, v => defined(v)) as EndpointParams;\n  };\n\n  getGlobalSearchProjectIds = () => {\n    return this.props.selection.projects;\n  };\n\n  fetchMemberList() {\n    const projectIds = this.getGlobalSearchProjectIds()?.map(projectId =>\n      String(projectId)\n    );\n\n    fetchOrgMembers(this.props.api, this.props.organization.slug, projectIds).then(\n      members => {\n        this.setState({memberList: indexMembersByProject(members)});\n      }\n    );\n  }\n\n  fetchTags() {\n    const {organization, selection} = this.props;\n    this.setState({tagsLoading: true});\n    loadOrganizationTags(this.props.api, organization.slug, selection).then(() =>\n      this.setState({tagsLoading: false})\n    );\n  }\n\n  fetchStats = (groups: string[]) => {\n    // If we have no groups to fetch, just skip stats\n    if (!groups.length) {\n      return;\n    }\n    const requestParams: StatEndpointParams = {\n      ...this.getEndpointParams(),\n      groups,\n    };\n    // If no stats period values are set, use default\n    if (!requestParams.statsPeriod && !requestParams.start) {\n      requestParams.statsPeriod = DEFAULT_STATS_PERIOD;\n    }\n\n    this._lastStatsRequest = this.props.api.request(this.getGroupStatsEndpoint(), {\n      method: 'GET',\n      data: qs.stringify(requestParams),\n      success: data => {\n        if (!data) {\n          return;\n        }\n        GroupActions.populateStats(groups, data);\n      },\n      error: err => {\n        this.setState({\n          error: parseApiError(err),\n        });\n      },\n      complete: () => {\n        this._lastStatsRequest = null;\n\n        // End navigation transaction to prevent additional page requests from impacting page metrics.\n        // Other transactions include stacktrace preview request\n        const currentTransaction = Sentry.getCurrentHub().getScope()?.getTransaction();\n        if (currentTransaction?.op === 'navigation') {\n          currentTransaction.finish();\n        }\n      },\n    });\n  };\n\n  fetchCounts = (currentQueryCount: number, fetchAllCounts: boolean) => {\n    const {organization} = this.props;\n    const {queryCounts: _queryCounts} = this.state;\n    let queryCounts: QueryCounts = {..._queryCounts};\n\n    const endpointParams = this.getEndpointParams();\n    const tabQueriesWithCounts = getTabsWithCounts(organization);\n    const currentTabQuery = tabQueriesWithCounts.includes(endpointParams.query as Query)\n      ? endpointParams.query\n      : null;\n\n    // Update the count based on the exact number of issues, these shown as is\n    if (currentTabQuery) {\n      queryCounts[currentTabQuery] = {\n        count: currentQueryCount,\n        hasMore: false,\n      };\n      const tab = getTabs(organization).find(\n        ([tabQuery]) => currentTabQuery === tabQuery\n      )?.[1];\n      if (tab && !endpointParams.cursor) {\n        trackAdvancedAnalyticsEvent('issues_tab.viewed', {\n          organization,\n          tab: tab.analyticsName,\n          num_issues: queryCounts[currentTabQuery].count,\n        });\n      }\n    }\n    this.setState({queryCounts});\n\n    // If all tabs' counts are fetched, skip and only set\n    if (\n      fetchAllCounts ||\n      !tabQueriesWithCounts.every(tabQuery => queryCounts[tabQuery] !== undefined)\n    ) {\n      const requestParams: CountsEndpointParams = {\n        ...omit(endpointParams, 'query'),\n        // fetch the counts for the tabs whose counts haven't been fetched yet\n        query: tabQueriesWithCounts.filter(_query => _query !== currentTabQuery),\n      };\n\n      // If no stats period values are set, use default\n      if (!requestParams.statsPeriod && !requestParams.start) {\n        requestParams.statsPeriod = DEFAULT_STATS_PERIOD;\n      }\n\n      this._lastFetchCountsRequest = this.props.api.request(\n        this.getGroupCountsEndpoint(),\n        {\n          method: 'GET',\n          data: qs.stringify(requestParams),\n\n          success: data => {\n            if (!data) {\n              return;\n            }\n            // Counts coming from the counts endpoint is limited to 100, for >= 100 we display 99+\n            queryCounts = {\n              ...queryCounts,\n              ...mapValues(data, (count: number) => ({\n                count,\n                hasMore: count > TAB_MAX_COUNT,\n              })),\n            };\n          },\n          error: () => {\n            this.setState({queryCounts: {}});\n          },\n          complete: () => {\n            this._lastFetchCountsRequest = null;\n\n            this.setState({queryCounts});\n          },\n        }\n      );\n    }\n  };\n\n  fetchData = (fetchAllCounts = false) => {\n    const {organization} = this.props;\n    const query = this.getQuery();\n    const hasIssueListRemovalAction = organization.features.includes(\n      'issue-list-removal-action'\n    );\n\n    // TODO(Kelly): update once issue-list-removal-action feature is stable\n    if (hasIssueListRemovalAction && !this.state.realtimeActive) {\n      if (!this.state.actionTaken && !this.state.undo) {\n        GroupStore.loadInitialData([]);\n        this._streamManager.reset();\n\n        this.setState({\n          issuesLoading: true,\n          queryCount: 0,\n          itemsRemoved: 0,\n          error: null,\n        });\n      }\n    } else {\n      if (!this.state.reviewedIds.length || !isForReviewQuery(query)) {\n        GroupStore.loadInitialData([]);\n        this._streamManager.reset();\n\n        this.setState({\n          issuesLoading: true,\n          queryCount: 0,\n          itemsRemoved: 0,\n          reviewedIds: [],\n          error: null,\n        });\n      }\n    }\n\n    const transaction = getCurrentSentryReactTransaction();\n    transaction?.setTag('query.sort', this.getSort());\n\n    this.setState({\n      queryCount: 0,\n      itemsRemoved: 0,\n      error: null,\n    });\n\n    const requestParams: any = {\n      ...this.getEndpointParams(),\n      limit: MAX_ITEMS,\n      shortIdLookup: 1,\n    };\n\n    const currentQuery = this.props.location.query || {};\n    if ('cursor' in currentQuery) {\n      requestParams.cursor = currentQuery.cursor;\n    }\n\n    // If no stats period values are set, use default\n    if (!requestParams.statsPeriod && !requestParams.start) {\n      requestParams.statsPeriod = DEFAULT_STATS_PERIOD;\n    }\n\n    requestParams.expand = ['owners', 'inbox'];\n    requestParams.collapse = 'stats';\n\n    if (this._lastRequest) {\n      this._lastRequest.cancel();\n    }\n    if (this._lastStatsRequest) {\n      this._lastStatsRequest.cancel();\n    }\n    if (this._lastFetchCountsRequest) {\n      this._lastFetchCountsRequest.cancel();\n    }\n\n    this._poller.disable();\n\n    this._lastRequest = this.props.api.request(this.getGroupListEndpoint(), {\n      method: 'GET',\n      data: qs.stringify(requestParams),\n      success: (data, _, resp) => {\n        if (!resp) {\n          return;\n        }\n\n        const {orgId} = this.props.params;\n        // If this is a direct hit, we redirect to the intended result directly.\n        if (resp.getResponseHeader('X-Sentry-Direct-Hit') === '1') {\n          let redirect: string;\n          if (data[0] && data[0].matchingEventId) {\n            const {id, matchingEventId} = data[0];\n            redirect = `/organizations/${orgId}/issues/${id}/events/${matchingEventId}/`;\n          } else {\n            const {id} = data[0];\n            redirect = `/organizations/${orgId}/issues/${id}/`;\n          }\n\n          browserHistory.replace({\n            pathname: redirect,\n            query: extractSelectionParameters(this.props.location.query),\n          });\n          return;\n        }\n\n        if (this.state.undo) {\n          GroupStore.loadInitialData(data);\n        }\n        this._streamManager.push(data);\n\n        // TODO(Kelly): update once issue-list-removal-action feature is stable\n        if (!hasIssueListRemovalAction) {\n          if (isForReviewQuery(query)) {\n            GroupStore.remove(this.state.reviewedIds);\n          }\n        }\n\n        this.fetchStats(data.map((group: BaseGroup) => group.id));\n\n        const hits = resp.getResponseHeader('X-Hits');\n        const queryCount =\n          typeof hits !== 'undefined' && hits ? parseInt(hits, 10) || 0 : 0;\n        const maxHits = resp.getResponseHeader('X-Max-Hits');\n        const queryMaxCount =\n          typeof maxHits !== 'undefined' && maxHits ? parseInt(maxHits, 10) || 0 : 0;\n        const pageLinks = resp.getResponseHeader('Link');\n\n        // TODO(Kelly): update once issue-list-removal-action feature is stable\n        if (hasIssueListRemovalAction && !this.state.realtimeActive) {\n          this.fetchCounts(queryCount, fetchAllCounts);\n        } else {\n          if (!this.state.forReview) {\n            this.fetchCounts(queryCount, fetchAllCounts);\n          }\n        }\n\n        this.setState({\n          error: null,\n          issuesLoading: false,\n          queryCount,\n          queryMaxCount,\n          pageLinks: pageLinks !== null ? pageLinks : '',\n        });\n      },\n      error: err => {\n        trackAdvancedAnalyticsEvent('issue_search.failed', {\n          organization: this.props.organization,\n          search_type: 'issues',\n          search_source: 'main_search',\n          error: parseApiError(err),\n        });\n\n        this.setState({\n          error: parseApiError(err),\n          issuesLoading: false,\n        });\n      },\n      complete: () => {\n        this._lastRequest = null;\n\n        this.resumePolling();\n\n        // TODO(Kelly): update once issue-list-removal-action feature is stable\n        if (hasIssueListRemovalAction && !this.state.realtimeActive) {\n          this.setState({actionTaken: false, undo: false});\n        } else {\n          this.setState({forReview: false});\n        }\n      },\n    });\n  };\n\n  resumePolling = () => {\n    if (!this.state.pageLinks) {\n      return;\n    }\n\n    // Only resume polling if we're on the first page of results\n    const links = parseLinkHeader(this.state.pageLinks);\n    if (links && !links.previous.results && this.state.realtimeActive) {\n      // Remove collapse stats from endpoint before supplying to poller\n      const issueEndpoint = new URL(links.previous.href, window.location.origin);\n      issueEndpoint.searchParams.delete('collapse');\n      this._poller.setEndpoint(decodeURIComponent(issueEndpoint.href));\n      this._poller.enable();\n    }\n  };\n\n  getGroupListEndpoint(): string {\n    const {orgId} = this.props.params;\n\n    return `/organizations/${orgId}/issues/`;\n  }\n\n  getGroupCountsEndpoint(): string {\n    const {orgId} = this.props.params;\n\n    return `/organizations/${orgId}/issues-count/`;\n  }\n\n  getGroupStatsEndpoint(): string {\n    const {orgId} = this.props.params;\n\n    return `/organizations/${orgId}/issues-stats/`;\n  }\n\n  onRealtimeChange = (realtime: boolean) => {\n    Cookies.set('realtimeActive', realtime.toString());\n    this.setState({realtimeActive: realtime});\n  };\n\n  onSelectStatsPeriod = (period: string) => {\n    const {location} = this.props;\n    if (period !== this.getGroupStatsPeriod()) {\n      const cursor = location.query.cursor;\n      const queryPageInt = parseInt(location.query.page, 10);\n      const page = isNaN(queryPageInt) || !location.query.cursor ? 0 : queryPageInt;\n      this.transitionTo({cursor, page, groupStatsPeriod: period});\n    }\n  };\n\n  onRealtimePoll = (data: any, _links: any) => {\n    // Note: We do not update state with cursors from polling,\n    // `CursorPoller` updates itself with new cursors\n    this._streamManager.unshift(data);\n  };\n\n  listener = GroupStore.listen(() => this.onGroupChange(), undefined);\n\n  onGroupChange() {\n    const {organization} = this.props;\n    const {actionTakenGroupData} = this.state;\n    const query = this.getQuery();\n    const hasIssueListRemovalAction = organization.features.includes(\n      'issue-list-removal-action'\n    );\n\n    // TODO(Kelly): update once issue-list-removal-action feature is stable\n    if (\n      hasIssueListRemovalAction &&\n      !this.state.realtimeActive &&\n      actionTakenGroupData.length > 0\n    ) {\n      const filteredItems = this._streamManager.getAllItems().filter(item => {\n        return actionTakenGroupData.findIndex(data => data.id === item.id) !== -1;\n      });\n\n      const resolvedIds = filteredItems\n        .filter(item => item.status === 'resolved')\n        .map(id => id.id);\n      const ignoredIds = filteredItems\n        .filter(item => item.status === 'ignored')\n        .map(i => i.id);\n      // need to include resolve and ignored statuses because marking as resolved/ignored also\n      // counts as reviewed\n      const reviewedIds = filteredItems\n        .filter(\n          item => !item.inbox && item.status !== 'resolved' && item.status !== 'ignored'\n        )\n        .map(i => i.id);\n      // Remove Ignored and Resolved group ids from the issue stream if on the All Unresolved,\n      // For Review, or Ignored tab. Still include on the saved/custom search tab.\n      if (\n        resolvedIds.length > 0 &&\n        (query.includes('is:unresolved') ||\n          query.includes('is:ignored') ||\n          isForReviewQuery(query))\n      ) {\n        this.onIssueAction(resolvedIds, t('Resolved'));\n      }\n      if (\n        ignoredIds.length > 0 &&\n        (query.includes('is:unresolved') || isForReviewQuery(query))\n      ) {\n        this.onIssueAction(ignoredIds, t('Ignored'));\n      }\n      // Remove issues that are marked as Reviewed from the For Review tab, but still include the\n      // issues if on the All Unresolved tab or saved/custom searches.\n      if (\n        reviewedIds.length > 0 &&\n        (isForReviewQuery(query) || query.includes('is:ignored'))\n      ) {\n        this.onIssueAction(reviewedIds, t('Reviewed'));\n      }\n    }\n\n    const groupIds = this._streamManager.getAllItems().map(item => item.id) ?? [];\n    if (!isEqual(groupIds, this.state.groupIds)) {\n      this.setState({groupIds});\n    }\n  }\n\n  onIssueListSidebarSearch = (query: string) => {\n    trackAdvancedAnalyticsEvent('search.searched', {\n      organization: this.props.organization,\n      query,\n      search_type: 'issues',\n      search_source: 'search_builder',\n    });\n\n    this.onSearch(query);\n  };\n\n  onSearch = (query: string) => {\n    if (query === this.state.query) {\n      // if query is the same, just re-fetch data\n      this.fetchData();\n    } else {\n      // Clear the saved search as the user wants something else.\n      this.transitionTo({query}, null);\n    }\n  };\n\n  onSortChange = (sort: string) => {\n    this.transitionTo({sort});\n  };\n\n  onCursorChange: CursorHandler = (nextCursor, _path, _query, delta) => {\n    const queryPageInt = parseInt(this.props.location.query.page, 10);\n    let nextPage: number | undefined = isNaN(queryPageInt) ? delta : queryPageInt + delta;\n\n    let cursor: undefined | string = nextCursor;\n\n    // unset cursor and page when we navigate back to the first page\n    // also reset cursor if somehow the previous button is enabled on\n    // first page and user attempts to go backwards\n    if (nextPage <= 0) {\n      cursor = undefined;\n      nextPage = undefined;\n    }\n\n    this.transitionTo({cursor, page: nextPage});\n  };\n\n  onSidebarToggle = () => {\n    const {organization} = this.props;\n    this.setState({\n      isSidebarVisible: !this.state.isSidebarVisible,\n    });\n    trackAdvancedAnalyticsEvent('issue.search_sidebar_clicked', {\n      organization,\n    });\n  };\n\n  /**\n   * Returns true if all results in the current query are visible/on this page\n   */\n  allResultsVisible(): boolean {\n    if (!this.state.pageLinks) {\n      return false;\n    }\n\n    const links = parseLinkHeader(this.state.pageLinks);\n    return links && !links.previous.results && !links.next.results;\n  }\n\n  transitionTo = (\n    newParams: Partial<EndpointParams> = {},\n    savedSearch: (SavedSearch & {projectId?: number}) | null = this.props.savedSearch\n  ) => {\n    const query = {\n      ...this.getEndpointParams(),\n      ...newParams,\n    };\n    const {organization} = this.props;\n    let path: string;\n\n    if (savedSearch && savedSearch.id) {\n      path = `/organizations/${organization.slug}/issues/searches/${savedSearch.id}/`;\n\n      // Remove the query as saved searches bring their own query string.\n      delete query.query;\n\n      // If we aren't going to another page in the same search\n      // drop the query and replace the current project, with the saved search search project\n      // if available.\n      if (!query.cursor && savedSearch.projectId) {\n        query.project = [savedSearch.projectId];\n      }\n      if (!query.cursor && !newParams.sort && savedSearch.sort) {\n        query.sort = savedSearch.sort;\n      }\n    } else {\n      path = `/organizations/${organization.slug}/issues/`;\n    }\n\n    // Remove inbox tab specific sort\n    if (query.sort === IssueSortOptions.INBOX && query.query !== Query.FOR_REVIEW) {\n      delete query.sort;\n    }\n\n    if (\n      path !== this.props.location.pathname ||\n      !isEqual(query, this.props.location.query)\n    ) {\n      browserHistory.push({\n        pathname: path,\n        query,\n      });\n      this.setState({issuesLoading: true});\n    }\n  };\n\n  displayReprocessingTab() {\n    const {organization} = this.props;\n    const {queryCounts} = this.state;\n\n    return (\n      organization.features.includes('reprocessing-v2') &&\n      !!queryCounts?.[Query.REPROCESSING]?.count\n    );\n  }\n\n  displayReprocessingLayout(showReprocessingTab: boolean, query: string) {\n    return showReprocessingTab && query === Query.REPROCESSING;\n  }\n\n  renderGroupNodes = (ids: string[], groupStatsPeriod: string) => {\n    const topIssue = ids[0];\n    const {memberList} = this.state;\n    const query = this.getQuery();\n    const showInboxTime = this.getSort() === IssueSortOptions.INBOX;\n\n    return ids.map((id, index) => {\n      const hasGuideAnchor = id === topIssue;\n      const group = GroupStore.get(id) as Group | undefined;\n      let members: Member['user'][] | undefined;\n      if (group?.project) {\n        members = memberList[group.project.slug];\n      }\n\n      const showReprocessingTab = this.displayReprocessingTab();\n      const displayReprocessingLayout = this.displayReprocessingLayout(\n        showReprocessingTab,\n        query\n      );\n\n      return (\n        <StreamGroup\n          index={index}\n          key={id}\n          id={id}\n          statsPeriod={groupStatsPeriod}\n          query={query}\n          hasGuideAnchor={hasGuideAnchor}\n          memberList={members}\n          displayReprocessingLayout={displayReprocessingLayout}\n          useFilteredStats\n          showInboxTime={showInboxTime}\n        />\n      );\n    });\n  };\n\n  renderLoading(): React.ReactNode {\n    return (\n      <PageContent>\n        <LoadingIndicator />\n      </PageContent>\n    );\n  }\n\n  renderStreamBody(): React.ReactNode {\n    const {issuesLoading, error, groupIds} = this.state;\n\n    if (issuesLoading) {\n      return <LoadingIndicator hideMessage />;\n    }\n\n    if (error) {\n      return <LoadingError message={error} onRetry={this.fetchData} />;\n    }\n\n    if (groupIds.length > 0) {\n      return (\n        <PanelBody>\n          {this.renderGroupNodes(groupIds, this.getGroupStatsPeriod())}\n        </PanelBody>\n      );\n    }\n\n    const {api, organization, selection} = this.props;\n\n    return (\n      <NoGroupsHandler\n        api={api}\n        organization={organization}\n        query={this.getQuery()}\n        selectedProjectIds={selection.projects}\n        groupIds={groupIds}\n      />\n    );\n  }\n\n  fetchSavedSearches = () => {\n    const {organization, api} = this.props;\n\n    fetchSavedSearches(api, organization.slug);\n  };\n\n  onSavedSearchSelect = (savedSearch: SavedSearch) => {\n    trackAdvancedAnalyticsEvent('organization_saved_search.selected', {\n      organization: this.props.organization,\n      search_type: 'issues',\n      id: savedSearch.id ? parseInt(savedSearch.id, 10) : -1,\n    });\n    this.setState({issuesLoading: true}, () => this.transitionTo(undefined, savedSearch));\n  };\n\n  onSavedSearchDelete = (search: SavedSearch) => {\n    const {orgId} = this.props.params;\n\n    deleteSavedSearch(this.props.api, orgId, search).then(() => {\n      this.setState(\n        {\n          issuesLoading: true,\n        },\n        () => this.transitionTo({}, null)\n      );\n    });\n  };\n\n  onDelete = () => {\n    this.setState({actionTaken: true});\n    this.fetchData(true);\n  };\n\n  onUndo = () => {\n    const {organization, selection} = this.props;\n    const {actionTakenGroupData} = this.state;\n    const query = this.getQuery();\n\n    const groupIds = actionTakenGroupData.map(data => data.id);\n    const projectIds = selection?.projects?.map(p => p.toString());\n    const endpoint = `/organizations/${organization.slug}/issues/`;\n\n    if (this._lastRequest) {\n      this._lastRequest.cancel();\n    }\n    if (this._lastStatsRequest) {\n      this._lastStatsRequest.cancel();\n    }\n    if (this._lastFetchCountsRequest) {\n      this._lastFetchCountsRequest.cancel();\n    }\n\n    this.props.api.request(endpoint, {\n      method: 'PUT',\n      data: {\n        status: 'unresolved',\n      },\n      query: {\n        project: projectIds,\n        id: groupIds,\n      },\n      success: response => {\n        if (!response) {\n          return;\n        }\n        // If on the Ignore or For Review tab, adding back to the GroupStore will make the issue show up\n        // on this page for a second and then be removed (will show up on All Unresolved). This is to\n        // stop this from happening and avoid confusion.\n        if (!query.includes('is:ignored') && !isForReviewQuery(query)) {\n          GroupStore.add(actionTakenGroupData);\n        }\n        this.setState({undo: true});\n      },\n      error: err => {\n        this.setState({\n          error: parseApiError(err),\n          issuesLoading: false,\n        });\n      },\n      complete: () => {\n        this.setState({actionTakenGroupData: []});\n        this.fetchData();\n      },\n    });\n  };\n\n  onMarkReviewed = (itemIds: string[]) => {\n    const {organization} = this.props;\n    const query = this.getQuery();\n    const hasIssueListRemovalAction = organization.features.includes(\n      'issue-list-removal-action'\n    );\n\n    if (!isForReviewQuery(query)) {\n      if (itemIds.length > 1) {\n        addMessage(t(`Reviewed ${itemIds.length} Issues`), 'success', {duration: 4000});\n      } else {\n        const shortId = itemIds.map(item => GroupStore.get(item)?.shortId).toString();\n        addMessage(t(`Reviewed ${shortId}`), 'success', {duration: 4000});\n      }\n      return;\n    }\n\n    const {queryCounts, itemsRemoved} = this.state;\n    const currentQueryCount = queryCounts[query as Query];\n    if (itemIds.length && currentQueryCount) {\n      const inInboxCount = itemIds.filter(id => GroupStore.get(id)?.inbox).length;\n      currentQueryCount.count -= inInboxCount;\n      // TODO(Kelly): update once issue-list-removal-action feature is stable\n      if (!hasIssueListRemovalAction) {\n        this.setState({\n          reviewedIds: itemIds,\n          forReview: true,\n        });\n      }\n      this.setState({\n        queryCounts: {\n          ...queryCounts,\n          [query as Query]: currentQueryCount,\n        },\n        itemsRemoved: itemsRemoved + inInboxCount,\n      });\n    }\n  };\n\n  onActionTaken = (itemIds: string[]) => {\n    const actionTakenGroupData = itemIds.map(id => GroupStore.get(id) as Group);\n    this.setState({\n      actionTakenGroupData,\n    });\n  };\n\n  onIssueAction = (itemIds: string[], actionType: string) => {\n    if (itemIds.length > 1) {\n      addMessage(t(`${actionType} ${itemIds.length} Issues`), 'success', {\n        duration: 4000,\n        ...(actionType !== 'Reviewed' && {undo: this.onUndo}),\n      });\n    } else {\n      const shortId = itemIds.map(item => GroupStore.get(item)?.shortId).toString();\n      addMessage(t(`${actionType} ${shortId}`), 'success', {\n        duration: 4000,\n        ...(actionType !== 'Reviewed' && {undo: this.onUndo}),\n      });\n    }\n\n    GroupStore.remove(itemIds);\n    this.setState({actionTaken: true});\n    this.fetchData(true);\n  };\n\n  tagValueLoader = (key: string, search: string) => {\n    const {orgId} = this.props.params;\n    const projectIds = this.getGlobalSearchProjectIds().map(id => id.toString());\n    const endpointParams = this.getEndpointParams();\n\n    return fetchTagValues(\n      this.props.api,\n      orgId,\n      key,\n      search,\n      projectIds,\n      endpointParams as any\n    );\n  };\n\n  render() {\n    if (this.props.savedSearchLoading) {\n      return this.renderLoading();\n    }\n\n    const {\n      isSidebarVisible,\n      tagsLoading,\n      pageLinks,\n      queryCount,\n      queryCounts,\n      realtimeActive,\n      groupIds,\n      queryMaxCount,\n      itemsRemoved,\n    } = this.state;\n    const {organization, savedSearch, savedSearches, tags, selection, location, router} =\n      this.props;\n    const links = parseLinkHeader(pageLinks);\n    const query = this.getQuery();\n    const queryPageInt = parseInt(location.query.page, 10);\n    // Cursor must be present for the page number to be used\n    const page = isNaN(queryPageInt) || !location.query.cursor ? 0 : queryPageInt;\n    const pageBasedCount = page * MAX_ITEMS + groupIds.length;\n\n    let pageCount = pageBasedCount > queryCount ? queryCount : pageBasedCount;\n    if (!links?.next?.results || this.allResultsVisible()) {\n      // On last available page\n      pageCount = queryCount;\n    } else if (!links?.previous?.results) {\n      // On first available page\n      pageCount = groupIds.length;\n    }\n\n    // Subtract # items that have been marked reviewed\n    pageCount = Math.max(pageCount - itemsRemoved, 0);\n    const modifiedQueryCount = Math.max(queryCount - itemsRemoved, 0);\n    const displayCount = tct('[count] of [total]', {\n      count: pageCount,\n      total: (\n        <StyledQueryCount\n          hideParens\n          hideIfEmpty={false}\n          count={modifiedQueryCount}\n          max={queryMaxCount || 100}\n        />\n      ),\n    });\n\n    const projectIds = selection?.projects?.map(p => p.toString());\n\n    const showReprocessingTab = this.displayReprocessingTab();\n    const displayReprocessingActions = this.displayReprocessingLayout(\n      showReprocessingTab,\n      query\n    );\n\n    const layoutProps = {\n      fullWidth: !isSidebarVisible,\n    };\n\n    return (\n      <Fragment>\n        <StyledPageContent>\n          <IssueListHeader\n            organization={organization}\n            query={query}\n            sort={this.getSort()}\n            queryCount={queryCount}\n            queryCounts={queryCounts}\n            realtimeActive={realtimeActive}\n            onRealtimeChange={this.onRealtimeChange}\n            router={router}\n            savedSearchList={savedSearches}\n            onSavedSearchSelect={this.onSavedSearchSelect}\n            onSavedSearchDelete={this.onSavedSearchDelete}\n            displayReprocessingTab={showReprocessingTab}\n            selectedProjectIds={selection.projects}\n          />\n          <Layout.Body {...layoutProps}>\n            <Layout.Main {...layoutProps}>\n              <IssueListFilters\n                organization={organization}\n                query={query}\n                savedSearch={savedSearch}\n                sort={this.getSort()}\n                onSearch={this.onSearch}\n                onSidebarToggle={this.onSidebarToggle}\n                isSearchDisabled={isSidebarVisible}\n                tagValueLoader={this.tagValueLoader}\n                tags={tags}\n              />\n\n              <Panel>\n                <IssueListActions\n                  organization={organization}\n                  selection={selection}\n                  query={query}\n                  queryCount={modifiedQueryCount}\n                  displayCount={displayCount}\n                  onSelectStatsPeriod={this.onSelectStatsPeriod}\n                  onMarkReviewed={this.onMarkReviewed}\n                  onActionTaken={this.onActionTaken}\n                  onDelete={this.onDelete}\n                  statsPeriod={this.getGroupStatsPeriod()}\n                  groupIds={groupIds}\n                  allResultsVisible={this.allResultsVisible()}\n                  displayReprocessingActions={displayReprocessingActions}\n                  sort={this.getSort()}\n                  onSortChange={this.onSortChange}\n                />\n                <PanelBody>\n                  <ProcessingIssueList\n                    organization={organization}\n                    projectIds={projectIds}\n                    showProject\n                  />\n                  <VisuallyCompleteWithData\n                    hasData={this.state.groupIds.length > 0}\n                    id=\"IssueList-Body\"\n                  >\n                    {this.renderStreamBody()}\n                  </VisuallyCompleteWithData>\n                </PanelBody>\n              </Panel>\n              <StyledPagination\n                caption={tct('Showing [displayCount] issues', {\n                  displayCount,\n                })}\n                pageLinks={pageLinks}\n                onCursor={this.onCursorChange}\n              />\n            </Layout.Main>\n\n            {/* Avoid rendering sidebar until first accessed */}\n            {isSidebarVisible && (\n              <Layout.Side>\n                <IssueListSidebar\n                  loading={tagsLoading}\n                  tags={tags}\n                  query={query}\n                  onQueryChange={this.onIssueListSidebarSearch}\n                  tagValueLoader={this.tagValueLoader}\n                />\n              </Layout.Side>\n            )}\n          </Layout.Body>\n        </StyledPageContent>\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(\n  withPageFilters(\n    withSavedSearches(withOrganization(withIssueTags(withProfiler(IssueListOverview))))\n  )\n);\n\nexport {IssueListOverview};\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst StyledQueryCount = styled(QueryCount)`\n  margin-left: 0;\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n","import {Client, Request} from 'sentry/api';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\n\ntype Options = {\n  endpoint: string;\n  success: (data: any, link?: string | null) => void;\n};\n\nconst BASE_DELAY = 3000;\nconst MAX_DELAY = 60000;\n\nclass CursorPoller {\n  constructor(options: Options) {\n    this.options = options;\n    this.pollingEndpoint = options.endpoint;\n  }\n\n  api = new Client();\n  options: Options;\n  pollingEndpoint: string;\n  timeoutId: number | null = null;\n  lastRequest: Request | null = null;\n  active: boolean = true;\n\n  reqsWithoutData = 0;\n\n  getDelay() {\n    const delay = BASE_DELAY * (this.reqsWithoutData + 1);\n    return Math.min(delay, MAX_DELAY);\n  }\n\n  setEndpoint(url: string) {\n    this.pollingEndpoint = url;\n  }\n\n  enable() {\n    this.active = true;\n\n    // Proactively clear timeout and last request\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n    if (this.lastRequest) {\n      this.lastRequest.cancel();\n    }\n    this.timeoutId = window.setTimeout(this.poll.bind(this), this.getDelay());\n  }\n\n  disable() {\n    this.active = false;\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n\n    if (this.lastRequest) {\n      this.lastRequest.cancel();\n    }\n  }\n\n  poll() {\n    this.lastRequest = this.api.request(this.pollingEndpoint, {\n      success: (data, _, resp) => {\n        // cancel in progress operation if disabled\n        if (!this.active) {\n          return;\n        }\n\n        // if theres no data, nothing changes\n        if (!data || !data.length) {\n          this.reqsWithoutData += 1;\n          return;\n        }\n\n        if (this.reqsWithoutData > 0) {\n          this.reqsWithoutData -= 1;\n        }\n\n        const linksHeader = resp?.getResponseHeader('Link') ?? null;\n        const links = parseLinkHeader(linksHeader);\n        this.pollingEndpoint = links.previous.href;\n\n        this.options.success(data, linksHeader);\n      },\n      error: resp => {\n        if (!resp) {\n          return;\n        }\n\n        // If user does not have access to the endpoint, we should halt polling\n        // These errors could mean:\n        // * the user lost access to a project\n        // * project was renamed\n        // * user needs to reauth\n        if (resp.status === 404 || resp.status === 403 || resp.status === 401) {\n          this.disable();\n        }\n      },\n      complete: () => {\n        this.lastRequest = null;\n\n        if (this.active) {\n          this.timeoutId = window.setTimeout(this.poll.bind(this), this.getDelay());\n        }\n      },\n    });\n  }\n}\n\nexport default CursorPoller;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport SavedSearchesStore from 'sentry/stores/savedSearchesStore';\nimport {SavedSearch} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedSavedSearchesProps = {\n  savedSearch: SavedSearch | null;\n  savedSearchLoading: boolean;\n  savedSearches: SavedSearch[];\n} & RouteComponentProps<{searchId?: string}, {}>;\n\ntype State = {\n  isLoading: boolean;\n  savedSearches: SavedSearch[];\n};\n\n/**\n * Wrap a component with saved issue search data from the store.\n */\nfunction withSavedSearches<P extends InjectedSavedSearchesProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithSavedSearches extends Component<\n    Omit<P, keyof InjectedSavedSearchesProps> & Partial<InjectedSavedSearchesProps>,\n    State\n  > {\n    static displayName = `withSavedSearches(${getDisplayName(WrappedComponent)})`;\n\n    state = SavedSearchesStore.get();\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = SavedSearchesStore.listen(\n      (searchesState: State) => this.onUpdate(searchesState),\n      undefined\n    );\n\n    onUpdate(newState: State) {\n      this.setState(newState);\n    }\n\n    render() {\n      const {\n        params,\n        location,\n        savedSearchLoading,\n        savedSearch: savedSearchProp,\n        savedSearches: savedSearchesProp,\n      } = this.props as P;\n      const {searchId} = params;\n      const {savedSearches, isLoading} = this.state as State;\n      let savedSearch: SavedSearch | null = null;\n\n      // Switch to the current saved search or pinned result if available\n      if (!isLoading && savedSearches) {\n        if (searchId) {\n          const match = savedSearches.find(search => search.id === searchId);\n          savedSearch = match ? match : null;\n        }\n\n        // If there's no direct saved search being requested (via URL route)\n        // *AND* there's no query in URL, then check if there is pinned search\n        //\n        // Note: Don't use pinned searches when there is an empty query (query === empty string)\n        if (!savedSearch && typeof location.query.query === 'undefined') {\n          const pin = savedSearches.find(search => search.isPinned);\n          savedSearch = pin ? pin : null;\n        }\n      }\n\n      return (\n        <WrappedComponent\n          {...(this.props as P)}\n          savedSearches={savedSearchesProp ?? savedSearches}\n          savedSearchLoading={savedSearchLoading ?? isLoading}\n          savedSearch={savedSearchProp ?? savedSearch}\n        />\n      );\n    }\n  }\n\n  return WithSavedSearches;\n}\n\nexport default withSavedSearches;\n","import styled from '@emotion/styled';\n\nimport sentryLoader from 'sentry-images/sentry-loader.svg';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children?: React.ReactNode;\n};\n\nfunction LoadingTriangle({children}: Props) {\n  return (\n    <LoadingTriangleWrapper data-test-id=\"loading-indicator\">\n      <CircleBackground>\n        <img src={sentryLoader} />\n      </CircleBackground>\n      {children && <div>{children}</div>}\n    </LoadingTriangleWrapper>\n  );\n}\n\nconst LoadingTriangleWrapper = styled('div')`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 500px;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${space(3)};\n`;\n\nconst CircleBackground = styled('div')`\n  height: 150px;\n  width: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${p => p.theme.white};\n  border-radius: 50%;\n`;\n\nexport default LoadingTriangle;\n","import styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  /**\n   * Content rendered instaed the panel item\n   */\n  children?: React.ReactNode;\n  /**\n   * The text for the CTA link at the bottom of the panel item\n   */\n  cta?: string;\n  /**\n   * Has the item been seen? affects the styling of the panel item\n   */\n  hasSeen?: boolean;\n  /**\n   * The URL to use for the CTA\n   */\n  link?: string;\n  /**\n   * A message with muted styling which appears above the children content\n   */\n  message?: React.ReactNode;\n  /**\n   * The title of the sidebar item\n   */\n  title?: string;\n  /**\n   * Actions to the right of the title\n   */\n  titleAction?: React.ReactNode;\n};\n\nconst SidebarPanelItem = ({\n  hasSeen,\n  title,\n  message,\n  link,\n  cta,\n  titleAction,\n  children,\n}: Props) => (\n  <SidebarPanelItemRoot>\n    {title && (\n      <TitleWrapper>\n        <Title hasSeen={hasSeen}>{title}</Title>\n        {titleAction}\n      </TitleWrapper>\n    )}\n    {message && <Message>{message}</Message>}\n\n    {children}\n\n    {link && (\n      <Text>\n        <ExternalLink href={link}>{cta || t('Read More')}</ExternalLink>\n      </Text>\n    )}\n  </SidebarPanelItemRoot>\n);\n\nexport default SidebarPanelItem;\n\nconst SidebarPanelItemRoot = styled('div')`\n  line-height: 1.5;\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  background: ${p => p.theme.background};\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: ${space(3)};\n`;\n\nconst TitleWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  gap: ${space(1)};\n`;\n\nconst Title = styled('div')<Pick<Props, 'hasSeen'>>`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin-bottom: ${space(1)};\n  color: ${p => p.theme.textColor};\n  ${p => !p.hasSeen && 'font-weight: 600;'};\n\n  .culprit {\n    font-weight: normal;\n  }\n`;\n\nconst Text = styled('div')`\n  margin: ${space(0.5)} 0;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Message = styled(Text)`\n  color: ${p => p.theme.subText};\n`;\n","import styled from '@emotion/styled';\nimport groupBy from 'lodash/groupBy';\nimport partition from 'lodash/partition';\n\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Tag from 'sentry/components/tag';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Organization,\n  Project,\n  ProjectSdkUpdates,\n  SDKUpdatesSuggestion,\n} from 'sentry/types';\nimport getSdkUpdateSuggestion from 'sentry/utils/getSdkUpdateSuggestion';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\nimport withSdkUpdates from 'sentry/utils/withSdkUpdates';\n\nimport Alert from '../alert';\nimport Collapsible from '../collapsible';\nimport List from '../list';\nimport ListItem from '../list/listItem';\n\nimport SidebarPanelItem from './sidebarPanelItem';\n\ntype Props = {\n  organization: Organization;\n  projects: Project[];\n  sdkUpdates?: ProjectSdkUpdates[] | null;\n};\n\nconst flattenSuggestions = (list: ProjectSdkUpdates[]) =>\n  list.reduce<SDKUpdatesSuggestion[]>(\n    (suggestions, sdk) => [...suggestions, ...sdk.suggestions],\n    []\n  );\n\nfunction BroadcastSdkUpdates({projects, sdkUpdates, organization}: Props) {\n  if (!sdkUpdates) {\n    return null;\n  }\n\n  // Are there any updates?\n  if (!flattenSuggestions(sdkUpdates).length) {\n    return null;\n  }\n\n  function renderUpdates(projectSdkUpdates: ProjectSdkUpdates[]) {\n    // Group SDK updates by project\n    const items = Object.entries(groupBy(projectSdkUpdates, 'projectId'));\n\n    return items\n      .map(([projectId, updates]) => {\n        const project = projects.find(p => p.id === projectId);\n\n        if (!project) {\n          return null;\n        }\n\n        // Updates should only be shown to users who are project members or users who have open membership or org write permission\n        const hasPermissionToSeeUpdates =\n          project.isMember ||\n          organization.features.includes('open-membership') ||\n          organization.access.includes('org:write');\n\n        if (!hasPermissionToSeeUpdates) {\n          return null;\n        }\n\n        return updates.map(({sdkName, sdkVersion, suggestions}) => {\n          const isDeprecated = suggestions.some(\n            suggestion => suggestion.type === 'changeSdk'\n          );\n          return (\n            <div key={sdkName}>\n              <Header>\n                <SdkProjectBadge project={project} />\n                {isDeprecated && <Tag type=\"warning\">{t('Deprecated')}</Tag>}\n              </Header>\n              <SdkOutdatedVersion>\n                {tct('This project is on [current-version]', {\n                  ['current-version']: (\n                    <OutdatedVersion>{`${sdkName}@v${sdkVersion}`}</OutdatedVersion>\n                  ),\n                })}\n              </SdkOutdatedVersion>\n              <StyledList>\n                {suggestions.map((suggestion, i) => (\n                  <ListItem key={i}>\n                    {getSdkUpdateSuggestion({\n                      sdk: {\n                        name: sdkName,\n                        version: sdkVersion,\n                      },\n                      suggestion,\n                      shortStyle: true,\n                      capitalized: true,\n                    })}\n                  </ListItem>\n                ))}\n              </StyledList>\n            </div>\n          );\n        });\n      })\n      .filter(item => !!item);\n  }\n\n  const [deprecatedRavenSdkUpdates, otherSdkUpdates] = partition(\n    sdkUpdates,\n    sdkUpdate =>\n      sdkUpdate.sdkName.includes('raven') &&\n      sdkUpdate.suggestions.some(suggestion => suggestion.type === 'changeSdk')\n  );\n\n  return (\n    <SidebarPanelItem\n      hasSeen\n      title={t('Update your SDKs')}\n      message={t(\n        'We recommend updating the following SDKs to make sure you’re getting all the data you need.'\n      )}\n    >\n      {!!deprecatedRavenSdkUpdates.length && (\n        <StyledAlert type=\"warning\" showIcon>\n          {tct(\n            `[first-sentence]. Any SDK that has the package name ‘raven’ may be missing data. Migrate to the latest SDK version.`,\n            {\n              ['first-sentence']: tn(\n                'You have %s project using a deprecated version of the Sentry client',\n                'You have %s projects using a deprecated version of the Sentry client',\n                deprecatedRavenSdkUpdates.length\n              ),\n            }\n          )}\n        </StyledAlert>\n      )}\n      <UpdatesList>\n        <Collapsible>\n          {renderUpdates(deprecatedRavenSdkUpdates)}\n          {renderUpdates(otherSdkUpdates)}\n        </Collapsible>\n      </UpdatesList>\n    </SidebarPanelItem>\n  );\n}\n\nexport default withSdkUpdates(withProjects(withOrganization(BroadcastSdkUpdates)));\n\nconst UpdatesList = styled('div')`\n  margin-top: ${space(3)};\n  display: grid;\n  grid-auto-flow: row;\n  gap: ${space(3)};\n`;\n\nconst Header = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  gap: ${space(0.5)};\n  margin-bottom: ${space(0.25)};\n  align-items: center;\n`;\n\nconst SdkOutdatedVersion = styled('div')`\n  /* 24px + 8px to be aligned with the SdkProjectBadge data */\n  padding-left: calc(24px + ${space(1)});\n`;\n\nconst OutdatedVersion = styled('span')`\n  color: ${p => p.theme.gray400};\n`;\n\nconst SdkProjectBadge = styled(ProjectBadge)`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  line-height: 1;\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-top: ${space(2)};\n`;\n\nconst StyledList = styled(List)`\n  /* 24px + 8px to be aligned with the project name\n  * displayed by the SdkProjectBadge component */\n  padding-left: calc(24px + ${space(1)});\n`;\n","import {Fragment, isValidElement} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport Link from 'sentry/components/links/link';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport {Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport localStorage from 'sentry/utils/localStorage';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {SidebarOrientation} from './types';\n\nconst LabelHook = HookOrDefault({\n  hookName: 'sidebar:item-label',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\ntype Props = WithRouterProps & {\n  /**\n   * Icon to display\n   */\n  icon: React.ReactNode;\n  /**\n   * Key of the sidebar item. Used for label hooks\n   */\n  id: string;\n  /**\n   * Label to display (only when expanded)\n   */\n  label: React.ReactNode;\n  /**\n   * Sidebar is at \"top\" or \"left\" of screen\n   */\n  orientation: SidebarOrientation;\n  /**\n   * Is this sidebar item active\n   */\n  active?: boolean;\n\n  /**\n   * Additional badge to display after label\n   */\n  badge?: number;\n  className?: string;\n  /**\n   * Is sidebar in a collapsed state\n   */\n  collapsed?: boolean;\n  /**\n   * Sidebar has a panel open\n   */\n  hasPanel?: boolean;\n  href?: string;\n  index?: boolean;\n  /**\n   * Additional badge letting users know a tab is in beta.\n   */\n  isBeta?: boolean;\n  /**\n   * Additional badge letting users know a tab is new.\n   */\n  isNew?: boolean;\n  /**\n   * An optional prefix that can be used to reset the \"new\" indicator\n   */\n  isNewSeenKeySuffix?: string;\n  onClick?: (id: string, e: React.MouseEvent<HTMLAnchorElement>) => void;\n  /**\n   * The current organization. Useful for analytics.\n   */\n  organization?: Organization;\n\n  to?: string;\n};\n\nconst SidebarItem = ({\n  router,\n  id,\n  href,\n  to,\n  icon,\n  label,\n  badge,\n  active,\n  hasPanel,\n  isNew,\n  isBeta,\n  collapsed,\n  className,\n  orientation,\n  isNewSeenKeySuffix,\n  organization,\n  onClick,\n  ...props\n}: Props) => {\n  // label might be wrapped in a guideAnchor\n  let labelString = label;\n  if (isValidElement(label)) {\n    labelString = label?.props?.children ?? label;\n  }\n  // If there is no active panel open and if path is active according to react-router\n  const isActiveRouter =\n    (!hasPanel && router && to && location.pathname.startsWith(to)) ||\n    (labelString === 'Discover' && location.pathname.includes('/discover/')) ||\n    (labelString === 'Dashboards' &&\n      (location.pathname.includes('/dashboards/') ||\n        location.pathname.includes('/dashboard/')) &&\n      !location.pathname.startsWith('/settings/')) ||\n    // TODO: this won't be necessary once we remove settingsHome\n    (labelString === 'Settings' && location.pathname.startsWith('/settings/')) ||\n    (labelString === 'Alerts' &&\n      location.pathname.includes('/alerts/') &&\n      !location.pathname.startsWith('/settings/'));\n\n  const isActive = active || isActiveRouter;\n  const isTop = orientation === 'top';\n  const placement = isTop ? 'bottom' : 'right';\n\n  const seenSuffix = isNewSeenKeySuffix ?? '';\n  const isNewSeenKey = `sidebar-new-seen:${id}${seenSuffix}`;\n  const showIsNew = isNew && !localStorage.getItem(isNewSeenKey);\n\n  const recordAnalytics = () => {\n    trackAdvancedAnalyticsEvent('growth.clicked_sidebar', {\n      item: id,\n      organization: organization || null,\n    });\n  };\n  return (\n    <Tooltip disabled={!collapsed} title={label} position={placement}>\n      <StyledSidebarItem\n        data-test-id={props['data-test-id']}\n        id={`sidebar-item-${id}`}\n        active={isActive ? 'true' : undefined}\n        to={(to ? to : href) || '#'}\n        className={className}\n        onClick={(event: React.MouseEvent<HTMLAnchorElement>) => {\n          !(to || href) && event.preventDefault();\n          recordAnalytics();\n          onClick?.(id, event);\n          showIsNew && localStorage.setItem(isNewSeenKey, 'true');\n        }}\n      >\n        <SidebarItemWrapper>\n          <SidebarItemIcon>{icon}</SidebarItemIcon>\n          {!collapsed && !isTop && (\n            <SidebarItemLabel>\n              <LabelHook id={id}>\n                <TextOverflow>{label}</TextOverflow>\n                {showIsNew && <FeatureBadge type=\"new\" noTooltip />}\n                {isBeta && <FeatureBadge type=\"beta\" noTooltip />}\n              </LabelHook>\n            </SidebarItemLabel>\n          )}\n          {collapsed && showIsNew && <CollapsedFeatureBadge type=\"new\" />}\n          {collapsed && isBeta && <CollapsedFeatureBadge type=\"beta\" />}\n          {badge !== undefined && badge > 0 && (\n            <SidebarItemBadge collapsed={collapsed}>{badge}</SidebarItemBadge>\n          )}\n        </SidebarItemWrapper>\n      </StyledSidebarItem>\n    </Tooltip>\n  );\n};\n\nexport default withRouter(SidebarItem);\n\nconst getActiveStyle = ({active, theme}: {active?: string; theme?: Theme}) => {\n  if (!active) {\n    return '';\n  }\n  return css`\n    color: ${theme?.white};\n\n    &:active,\n    &:focus,\n    &:hover {\n      color: ${theme?.white};\n    }\n\n    &:before {\n      background-color: ${theme?.active};\n    }\n  `;\n};\n\nconst StyledSidebarItem = styled(Link)`\n  display: flex;\n  color: inherit;\n  position: relative;\n  cursor: pointer;\n  font-size: 15px;\n  line-height: 32px;\n  height: 34px;\n  flex-shrink: 0;\n\n  transition: 0.15s color linear;\n\n  &:before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 4px;\n    left: -20px;\n    bottom: 6px;\n    width: 5px;\n    border-radius: 0 3px 3px 0;\n    background-color: transparent;\n    transition: 0.15s background-color linear;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    margin: 0 4px;\n\n    &:before {\n      top: auto;\n      left: 5px;\n      bottom: -10px;\n      height: 5px;\n      width: auto;\n      right: 5px;\n      border-radius: 3px 3px 0 0;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.white};\n  }\n\n  &.focus-visible {\n    outline: none;\n    background: #584c66;\n    padding: 0 19px;\n    margin: 0 -19px;\n\n    &:before {\n      left: 0;\n    }\n  }\n\n  ${getActiveStyle};\n`;\n\nconst SidebarItemWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst SidebarItemIcon = styled('span')`\n  content: '';\n  display: inline-flex;\n  width: 32px;\n  height: 22px;\n  font-size: 20px;\n  align-items: center;\n  flex-shrink: 0;\n\n  svg {\n    display: block;\n    margin: 0 auto;\n  }\n`;\n\nconst SidebarItemLabel = styled('span')`\n  margin-left: 12px;\n  white-space: nowrap;\n  opacity: 1;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst getCollapsedBadgeStyle = ({collapsed, theme}) => {\n  if (!collapsed) {\n    return '';\n  }\n\n  return css`\n    text-indent: -99999em;\n    position: absolute;\n    right: 0;\n    top: 1px;\n    background: ${theme.red300};\n    width: ${theme.sidebar.smallBadgeSize};\n    height: ${theme.sidebar.smallBadgeSize};\n    border-radius: ${theme.sidebar.smallBadgeSize};\n    line-height: ${theme.sidebar.smallBadgeSize};\n    box-shadow: ${theme.sidebar.boxShadow};\n  `;\n};\n\nconst SidebarItemBadge = styled(({collapsed: _, ...props}) => <span {...props} />)`\n  display: block;\n  text-align: center;\n  color: ${p => p.theme.white};\n  font-size: 12px;\n  background: ${p => p.theme.red300};\n  width: ${p => p.theme.sidebar.badgeSize};\n  height: ${p => p.theme.sidebar.badgeSize};\n  border-radius: ${p => p.theme.sidebar.badgeSize};\n  line-height: ${p => p.theme.sidebar.badgeSize};\n\n  ${getCollapsedBadgeStyle};\n`;\n\nconst CollapsedFeatureBadge = styled(FeatureBadge)`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nCollapsedFeatureBadge.defaultProps = {\n  variant: 'indicator',\n  noTooltip: true,\n};\n","import {useCallback, useEffect, useRef} from 'react';\nimport {createPortal} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {IconClose} from 'sentry/icons';\nimport {slideInLeft} from 'sentry/styles/animations';\nimport space from 'sentry/styles/space';\n\nimport {CommonSidebarProps} from './types';\n\ntype PositionProps = Pick<CommonSidebarProps, 'orientation' | 'collapsed'>;\n\nconst PanelContainer = styled('div')<PositionProps>`\n  position: fixed;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n  border-right: 1px solid ${p => p.theme.border};\n  box-shadow: 1px 0 2px rgba(0, 0, 0, 0.06);\n  text-align: left;\n  animation: 200ms ${slideInLeft};\n  z-index: ${p => p.theme.zIndex.sidebar - 1};\n\n  ${p =>\n    p.orientation === 'top'\n      ? css`\n          top: ${p.theme.sidebar.mobileHeight};\n          left: 0;\n          right: 0;\n        `\n      : css`\n          width: 460px;\n          top: 0;\n          left: ${p.collapsed\n            ? p.theme.sidebar.collapsedWidth\n            : p.theme.sidebar.expandedWidth};\n        `};\n`;\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  collapsed: CommonSidebarProps['collapsed'];\n  hidePanel: CommonSidebarProps['hidePanel'];\n  orientation: CommonSidebarProps['orientation'];\n  title?: string;\n}\n\nconst getSidebarPortal = () => {\n  let portal = document.getElementById('sidebar-flyout-portal');\n\n  if (!portal) {\n    portal = document.createElement('div');\n    portal.setAttribute('id', 'sidebar-flyout-portal');\n    document.body.appendChild(portal);\n  }\n\n  return portal as HTMLDivElement;\n};\n\nfunction SidebarPanel({\n  orientation,\n  collapsed,\n  hidePanel,\n  title,\n  children,\n  ...props\n}: Props): React.ReactElement {\n  const portalEl = useRef<HTMLDivElement>(getSidebarPortal());\n\n  const panelCloseHandler = useCallback(\n    (evt: MouseEvent) => {\n      if (!(evt.target instanceof Element)) {\n        return;\n      }\n\n      if (portalEl.current.contains(evt.target)) {\n        return;\n      }\n\n      hidePanel();\n    },\n    [hidePanel]\n  );\n\n  useEffect(() => {\n    // Wait one tick to setup the click handler so we don't detect the click\n    // that is bubbling up from opening the panel itself\n    window.setTimeout(() => document.addEventListener('click', panelCloseHandler));\n\n    return function cleanup() {\n      window.setTimeout(() => document.removeEventListener('click', panelCloseHandler));\n    };\n  }, [panelCloseHandler]);\n\n  return createPortal(\n    <PanelContainer\n      role=\"dialog\"\n      collapsed={collapsed}\n      orientation={orientation}\n      {...props}\n    >\n      {title ? (\n        <SidebarPanelHeader>\n          <Title>{title}</Title>\n          <PanelClose onClick={hidePanel} />\n        </SidebarPanelHeader>\n      ) : null}\n      <SidebarPanelBody hasHeader={!!title}>{children}</SidebarPanelBody>\n    </PanelContainer>,\n    portalEl.current\n  );\n}\n\nexport default SidebarPanel;\n\nconst SidebarPanelHeader = styled('div')`\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(3)};\n  background: ${p => p.theme.background};\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.06);\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 1;\n`;\n\nconst SidebarPanelBody = styled('div')<{hasHeader: boolean}>`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: auto;\n  position: relative;\n`;\n\nconst PanelClose = styled(IconClose)`\n  color: ${p => p.theme.subText};\n  cursor: pointer;\n  position: relative;\n  padding: ${space(0.75)};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nPanelClose.defaultProps = {\n  size: 'lg',\n};\n\nconst Title = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  margin: 0;\n`;\n","import styled from '@emotion/styled';\n\nconst SidebarPanelEmpty = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.gray300};\n  padding: 0 60px;\n  text-align: center;\n  min-height: 150px;\n`;\n\nexport default SidebarPanelEmpty;\n","import {Component, Fragment} from 'react';\n\nimport {getAllBroadcasts, markBroadcastsAsSeen} from 'sentry/actionCreators/broadcasts';\nimport {Client} from 'sentry/api';\nimport DemoModeGate from 'sentry/components/acl/demoModeGate';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport BroadcastSdkUpdates from 'sentry/components/sidebar/broadcastSdkUpdates';\nimport SidebarItem from 'sentry/components/sidebar/sidebarItem';\nimport SidebarPanel from 'sentry/components/sidebar/sidebarPanel';\nimport SidebarPanelEmpty from 'sentry/components/sidebar/sidebarPanelEmpty';\nimport SidebarPanelItem from 'sentry/components/sidebar/sidebarPanelItem';\nimport {IconBroadcast} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Broadcast, Organization} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {CommonSidebarProps, SidebarPanelKey} from './types';\n\nconst MARK_SEEN_DELAY = 1000;\nconst POLLER_DELAY = 600000; // 10 minute poll (60 * 10 * 1000)\n\ntype Props = CommonSidebarProps & {\n  api: Client;\n  organization: Organization;\n};\n\ntype State = {\n  broadcasts: Broadcast[];\n  error: boolean;\n  loading: boolean;\n};\n\nclass Broadcasts extends Component<Props, State> {\n  state: State = {\n    broadcasts: [],\n    loading: true,\n    error: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.markSeenTimeout);\n    window.clearTimeout(this.pollingTimeout);\n\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n  }\n\n  pollingTimeout: number | undefined = undefined;\n  markSeenTimeout: number | undefined = undefined;\n\n  startPolling() {\n    if (this.pollingTimeout) {\n      this.stopPolling();\n    }\n    this.pollingTimeout = window.setTimeout(this.fetchData, POLLER_DELAY);\n  }\n\n  stopPolling() {\n    window.clearTimeout(this.pollingTimeout);\n    this.pollingTimeout = undefined;\n  }\n\n  fetchData = async () => {\n    if (this.pollingTimeout) {\n      this.stopPolling();\n    }\n\n    try {\n      const data = await getAllBroadcasts(this.props.api, this.props.organization.slug);\n      this.setState({loading: false, broadcasts: data || []});\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n\n    this.startPolling();\n  };\n\n  /**\n   * If tab/window loses visibility (note: this is different than focus), stop\n   * polling for broadcasts data, otherwise, if it gains visibility, start\n   * polling again.\n   */\n  handleVisibilityChange = () =>\n    document.hidden ? this.stopPolling() : this.startPolling();\n\n  handleShowPanel = () => {\n    window.clearTimeout(this.markSeenTimeout);\n\n    this.markSeenTimeout = window.setTimeout(this.markSeen, MARK_SEEN_DELAY);\n    this.props.onShowPanel();\n  };\n\n  markSeen = async () => {\n    const unseenBroadcastIds = this.unseenIds;\n    if (unseenBroadcastIds.length === 0) {\n      return;\n    }\n\n    await markBroadcastsAsSeen(this.props.api, unseenBroadcastIds);\n\n    this.setState(state => ({\n      broadcasts: state.broadcasts.map(item => ({...item, hasSeen: true})),\n    }));\n  };\n\n  get unseenIds() {\n    return this.state.broadcasts\n      ? this.state.broadcasts.filter(item => !item.hasSeen).map(item => item.id)\n      : [];\n  }\n\n  render() {\n    const {orientation, collapsed, currentPanel, hidePanel} = this.props;\n    const {broadcasts, loading} = this.state;\n\n    const unseenPosts = this.unseenIds;\n\n    return (\n      <DemoModeGate>\n        <Fragment>\n          <SidebarItem\n            data-test-id=\"sidebar-broadcasts\"\n            orientation={orientation}\n            collapsed={collapsed}\n            active={currentPanel === SidebarPanelKey.Broadcasts}\n            badge={unseenPosts.length}\n            icon={<IconBroadcast size=\"md\" />}\n            label={t(\"What's new\")}\n            onClick={this.handleShowPanel}\n            id=\"broadcasts\"\n          />\n\n          {currentPanel === SidebarPanelKey.Broadcasts && (\n            <SidebarPanel\n              data-test-id=\"sidebar-broadcasts-panel\"\n              orientation={orientation}\n              collapsed={collapsed}\n              title={t(\"What's new in Sentry\")}\n              hidePanel={hidePanel}\n            >\n              {loading ? (\n                <LoadingIndicator />\n              ) : broadcasts.length === 0 ? (\n                <SidebarPanelEmpty>\n                  {t('No recent updates from the Sentry team.')}\n                </SidebarPanelEmpty>\n              ) : (\n                broadcasts.map(item => (\n                  <SidebarPanelItem\n                    key={item.id}\n                    hasSeen={item.hasSeen}\n                    title={item.title}\n                    message={item.message}\n                    link={item.link}\n                    cta={item.cta}\n                  />\n                ))\n              )}\n              <BroadcastSdkUpdates />\n            </SidebarPanel>\n          )}\n        </Fragment>\n      </DemoModeGate>\n    );\n  }\n}\n\nexport default withApi(Broadcasts);\n","import {Client} from 'sentry/api';\n\nexport function getAllBroadcasts(api: Client, orgSlug: string) {\n  return api.requestPromise(`/organizations/${orgSlug}/broadcasts/`, {method: 'GET'});\n}\n\nexport function markBroadcastsAsSeen(api: Client, idList: string[]) {\n  return api.requestPromise('/broadcasts/', {\n    method: 'PUT',\n    query: {id: idList},\n    data: {hasSeen: '1'},\n  });\n}\n","import {css} from '@emotion/react';\n\nimport {Theme} from 'sentry/utils/theme';\n\nconst SidebarDropdownMenu = (p: {theme: Theme}) => css`\n  position: absolute;\n  background: ${p.theme.background};\n  color: ${p.theme.textColor};\n  border-radius: 4px;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.08), 0 4px 20px 0 rgba(0, 0, 0, 0.3);\n  padding: 5px 0;\n  width: 250px;\n  z-index: 1000;\n`;\n\nexport default SidebarDropdownMenu;\n","import ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\n\ntype Props = {\n  // SidebarMenuItemLink content (accepted via string or components / DOM nodes)\n  children: React.ReactNode;\n  /**\n   * Use this prop if button is an external link\n   */\n  href?: string;\n  /**\n   * It is raised when the user clicks on the element - optional\n   */\n  onClick?: () => void;\n  /**\n   * specifies whether to open the linked document in a new tab\n   */\n  openInNewTab?: boolean;\n  /**\n   * Inline styles\n   */\n  style?: React.CSSProperties;\n  /**\n   * Use this prop if button is a react-router link\n   */\n  to?: string;\n};\n\nconst SidebarMenuItemLink = ({to, href, ...props}: Props) => {\n  if (href) {\n    return <ExternalLink href={href} {...props} />;\n  }\n\n  if (to) {\n    return <Link to={to} {...props} />;\n  }\n\n  return <div tabIndex={0} {...props} />;\n};\n\nexport default SidebarMenuItemLink;\n","import styled from '@emotion/styled';\n\nimport OrganizationAvatar from 'sentry/components/avatar/organizationAvatar';\nimport {IconWarning} from 'sentry/icons';\nimport {tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OrganizationSummary} from 'sentry/types';\n\ntype Props = {\n  organization: OrganizationSummary;\n  className?: string;\n  /**\n   * Show the project count under the organization name.\n   */\n  projectCount?: number;\n};\n\nconst SidebarOrgSummary = styled(({organization, projectCount, ...props}: Props) => (\n  <div {...props}>\n    {organization.status.id === 'pending_deletion' ? (\n      <PendingDeletionAvatar data-test-id=\"pending-deletion-icon\" />\n    ) : (\n      <OrganizationAvatar organization={organization} size={36} />\n    )}\n    <div>\n      <Name pendingDeletion={organization.status.id === 'pending_deletion'}>\n        {organization.name}\n      </Name>\n      {!!projectCount && (\n        <ProjectCount>{tn('%s project', '%s projects', projectCount)}</ProjectCount>\n      )}\n    </div>\n  </div>\n))`\n  display: grid;\n  grid-template-columns: max-content minmax(0, 1fr);\n  gap: ${space(1)};\n  align-items: center;\n  padding: ${space(1)} ${p => p.theme.sidebar.menuSpacing};\n`;\n\nconst Name = styled('div')<{pendingDeletion: boolean}>`\n  color: ${p => (p.pendingDeletion ? p.theme.subText : p.theme.textColor)};\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.1;\n  font-weight: bold;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst ProjectCount = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n  margin-top: ${space(0.5)};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst PendingDeletionAvatar = styled('div')`\n  height: 36px;\n  width: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed ${p => p.theme.gray200};\n  border-radius: 4px;\n`;\n\nPendingDeletionAvatar.defaultProps = {\n  children: <IconWarning size=\"sm\" color=\"gray200\" />,\n};\n\nexport default SidebarOrgSummary;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {Theme} from 'sentry/utils/theme';\n\nimport SidebarMenuItemLink from './sidebarMenuItemLink';\nimport SidebarOrgSummary from './sidebarOrgSummary';\n\ntype Props = {\n  children: React.ReactNode;\n} & React.ComponentProps<typeof SidebarMenuItemLink>;\n\nconst SidebarMenuItem = ({to, children, href, ...props}: Props) => {\n  const hasMenu = !to && !href;\n  return (\n    <StyledSidebarMenuItemLink to={to} href={href} {...props}>\n      <MenuItemLabel hasMenu={hasMenu}>{children}</MenuItemLabel>\n    </StyledSidebarMenuItemLink>\n  );\n};\n\nconst menuItemStyles = (\n  p: Omit<React.ComponentProps<typeof SidebarMenuItemLink>, 'children'> & {theme: Theme}\n) => css`\n  color: ${p.theme.textColor};\n  cursor: pointer;\n  display: flex;\n  font-size: ${p.theme.fontSizeMedium};\n  line-height: 32px;\n  padding: 0 ${p.theme.sidebar.menuSpacing};\n  position: relative;\n  transition: 0.1s all linear;\n  ${(!!p.to || !!p.href) && 'overflow: hidden'};\n\n  &:hover,\n  &:active,\n  &.focus-visible {\n    background: ${p.theme.backgroundSecondary};\n    color: ${p.theme.textColor};\n    outline: none;\n  }\n\n  ${SidebarOrgSummary} {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\nconst MenuItemLabel = styled('span')<{hasMenu?: boolean}>`\n  flex: 1;\n  ${p =>\n    p.hasMenu\n      ? css`\n          margin: 0 -${p.theme.sidebar.menuSpacing};\n          padding: 0 ${p.theme.sidebar.menuSpacing};\n        `\n      : css`\n          overflow: hidden;\n        `};\n`;\n\nconst StyledSidebarMenuItemLink = styled(SidebarMenuItemLink)`\n  ${menuItemStyles}\n`;\n\nexport {menuItemStyles};\nexport default SidebarMenuItem;\n","import styled from '@emotion/styled';\n\nimport {openHelpSearchModal} from 'sentry/actionCreators/modal';\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport Hook from 'sentry/components/hook';\nimport SidebarItem from 'sentry/components/sidebar/sidebarItem';\nimport {IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\nimport SidebarDropdownMenu from './sidebarDropdownMenu.styled';\nimport SidebarMenuItem from './sidebarMenuItem';\nimport {CommonSidebarProps} from './types';\n\ntype Props = Pick<CommonSidebarProps, 'collapsed' | 'hidePanel' | 'orientation'> & {\n  organization: Organization;\n};\n\nconst SidebarHelp = ({orientation, collapsed, hidePanel, organization}: Props) => (\n  <DropdownMenu>\n    {({isOpen, getActorProps, getMenuProps}) => (\n      <HelpRoot>\n        <HelpActor {...getActorProps({onClick: hidePanel})}>\n          <SidebarItem\n            data-test-id=\"help-sidebar\"\n            orientation={orientation}\n            collapsed={collapsed}\n            hasPanel={false}\n            icon={<IconQuestion size=\"md\" />}\n            label={t('Help')}\n            id=\"help\"\n          />\n        </HelpActor>\n\n        {isOpen && (\n          <HelpMenu {...getMenuProps({})} orientation={orientation}>\n            <SidebarMenuItem\n              data-test-id=\"search-docs-and-faqs\"\n              onClick={() => openHelpSearchModal({organization})}\n            >\n              {t('Search Support, Docs and More')}\n            </SidebarMenuItem>\n            <SidebarMenuItem href=\"https://help.sentry.io/\">\n              {t('Visit Help Center')}\n            </SidebarMenuItem>\n            <Hook name=\"sidebar:help-menu\" organization={organization} />\n          </HelpMenu>\n        )}\n      </HelpRoot>\n    )}\n  </DropdownMenu>\n);\n\nexport default SidebarHelp;\n\nconst HelpRoot = styled('div')`\n  position: relative;\n`;\n\n// This exists to provide a styled actor for the dropdown. Making the actor a regular,\n// non-styled react component causes some issues with toggling correctly because of\n// how refs are handled.\nconst HelpActor = styled('div')``;\n\nconst HelpMenu = styled('div', {shouldForwardProp: p => p !== 'orientation'})<{\n  orientation: Props['orientation'];\n}>`\n  ${SidebarDropdownMenu};\n  ${p => (p.orientation === 'left' ? 'bottom: 100%' : `top: ${space(4)}; right: 0px;`)}\n`;\n","import {SerializedStyles} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {AnimatePresence, motion} from 'framer-motion';\n\nimport testableTransition from 'sentry/utils/testableTransition';\nimport theme, {Theme} from 'sentry/utils/theme';\n\ntype TextProps = {\n  percent: number;\n  theme: Theme;\n  textCss?: Props['textCss'];\n};\n\ntype Props = React.HTMLAttributes<SVGSVGElement> & {\n  value: number;\n  /**\n   * Apply a micro animation when the text value changes\n   */\n  animateText?: boolean;\n  /**\n   * The color of the ring background\n   */\n  backgroundColor?: string;\n  /**\n   * The width of the progress ring bar\n   */\n  barWidth?: number;\n  maxValue?: number;\n  minValue?: number;\n  /**\n   * The color of the ring bar. A function may be provided to compute the color\n   * based on the percent value filled of the progress bar.\n   */\n  progressColor?: string;\n  /**\n   * Endcaps on the progress bar\n   */\n  progressEndcaps?: React.SVGAttributes<SVGCircleElement>['strokeLinecap'];\n  size?: number;\n  /**\n   * Text to display in the center of the ring\n   */\n  text?: React.ReactNode;\n  /**\n   * The css to apply to the center text. A function may be provided to compute\n   * styles based on the state of the progress bar.\n   */\n  textCss?: (p: TextProps) => SerializedStyles;\n};\n\nconst Text = styled('div')<Omit<TextProps, 'theme'>>`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  color: ${p => p.theme.chartLabel};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  transition: color 100ms;\n  ${p => p.textCss && p.textCss(p)}\n`;\n\nconst AnimatedText = motion(Text);\n\nAnimatedText.defaultProps = {\n  initial: {opacity: 0, y: -10},\n  animate: {opacity: 1, y: 0},\n  exit: {opacity: 0, y: 10},\n  transition: testableTransition(),\n};\n\nconst ProgressRing = ({\n  value,\n  minValue = 0,\n  maxValue = 100,\n  size = 20,\n  barWidth = 3,\n  text,\n  textCss,\n  animateText = false,\n  progressColor = theme.green300,\n  backgroundColor = theme.gray200,\n  progressEndcaps,\n  ...p\n}: Props) => {\n  const radius = size / 2 - barWidth / 2;\n  const circumference = 2 * Math.PI * radius;\n\n  const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n  const progress = (boundedValue - minValue) / (maxValue - minValue);\n  const percent = progress * 100;\n  const progressOffset = (1 - progress) * circumference;\n\n  const TextComponent = animateText ? AnimatedText : Text;\n\n  let textNode = (\n    <TextComponent key={text?.toString()} {...{textCss, percent}}>\n      {text}\n    </TextComponent>\n  );\n\n  textNode = animateText ? (\n    <AnimatePresence initial={false}>{textNode}</AnimatePresence>\n  ) : (\n    textNode\n  );\n\n  return (\n    <RingSvg\n      role=\"img\"\n      height={radius * 2 + barWidth}\n      width={radius * 2 + barWidth}\n      {...p}\n    >\n      <RingBackground\n        r={radius}\n        barWidth={barWidth}\n        cx={radius + barWidth / 2}\n        cy={radius + barWidth / 2}\n        color={backgroundColor}\n      />\n      <RingBar\n        strokeDashoffset={progressOffset}\n        strokeLinecap={progressEndcaps}\n        circumference={circumference}\n        r={radius}\n        barWidth={barWidth}\n        cx={radius + barWidth / 2}\n        cy={radius + barWidth / 2}\n        color={progressColor}\n      />\n      <foreignObject height=\"100%\" width=\"100%\">\n        {text !== undefined && textNode}\n      </foreignObject>\n    </RingSvg>\n  );\n};\n\nconst RingSvg = styled('svg')`\n  position: relative;\n`;\n\nconst RingBackground = styled('circle')<{barWidth: number; color: string}>`\n  fill: none;\n  stroke: ${p => p.color};\n  stroke-width: ${p => p.barWidth}px;\n  transition: stroke 100ms;\n`;\n\nconst RingBar = styled('circle')<{\n  barWidth: number;\n  circumference: number;\n  color: string;\n}>`\n  fill: none;\n  stroke: ${p => p.color};\n  stroke-width: ${p => p.barWidth}px;\n  stroke-dasharray: ${p => p.circumference} ${p => p.circumference};\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n  transition: stroke-dashoffset 200ms, stroke 100ms;\n`;\n\nexport default ProgressRing;\n\n// We export components to allow for css selectors\nexport {RingBackground, RingBar, Text as RingText};\n","import {css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport ProgressRing from 'sentry/components/progressRing';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OnboardingTaskDescriptor, OnboardingTaskStatus} from 'sentry/types';\n\ntype Props = {\n  allTasks: OnboardingTaskDescriptor[];\n  completedTasks: OnboardingTaskStatus[];\n};\n\nfunction ProgressHeader({allTasks, completedTasks}: Props) {\n  const theme = useTheme();\n\n  return (\n    <Container>\n      <StyledProgressRing\n        size={80}\n        barWidth={8}\n        text={allTasks.length - completedTasks.length}\n        animateText\n        value={(completedTasks.length / allTasks.length) * 100}\n        progressEndcaps=\"round\"\n        backgroundColor={theme.gray100}\n        textCss={() => css`\n          font-size: 26px;\n          color: ${theme.textColor};\n        `}\n      />\n      <HeaderTitle>{t('Quick Start')}</HeaderTitle>\n      <Description>\n        {t('Walk through this guide to get the most out of Sentry right away.')}\n      </Description>\n    </Container>\n  );\n}\n\nexport default ProgressHeader;\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-template-rows: min-content 1fr;\n  grid-column-gap: ${space(2)};\n  margin: 90px ${space(4)} 0 ${space(4)};\n`;\n\nconst StyledProgressRing = styled(ProgressRing)`\n  grid-column: 1/2;\n  grid-row: 1/3;\n`;\n\nconst HeaderTitle = styled('h3')`\n  margin: 0;\n  grid-column: 2/3;\n  grid-row: 1/2;\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.gray300};\n  grid-column: 2/3;\n  grid-row: 2/3;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {t} from 'sentry/locale';\nimport {fadeIn} from 'sentry/styles/animations';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: (opts: {skip: (e: React.MouseEvent) => void}) => React.ReactNode;\n  onSkip: () => void;\n};\n\ntype State = {\n  showConfirmation: boolean;\n};\n\nclass SkipConfirm extends Component<Props, State> {\n  state: State = {\n    showConfirmation: false,\n  };\n\n  toggleConfirm = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.setState(state => ({showConfirmation: !state.showConfirmation}));\n  };\n\n  handleSkip = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.props.onSkip();\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return (\n      <Fragment>\n        {children({skip: this.toggleConfirm})}\n        <Confirmation\n          visible={this.state.showConfirmation}\n          onSkip={this.handleSkip}\n          onDismiss={this.toggleConfirm}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default SkipConfirm;\n\nconst SkipHelp = HookOrDefault({\n  hookName: 'onboarding-wizard:skip-help',\n  defaultComponent: () => (\n    <Button priority=\"primary\" size=\"xsmall\" to=\"https://forum.sentry.io/\" external>\n      {t('Community Forum')}\n    </Button>\n  ),\n});\n\ntype ConfirmProps = React.HTMLAttributes<HTMLDivElement> & {\n  onDismiss: (e: React.MouseEvent) => void;\n  onSkip: (e: React.MouseEvent) => void;\n  visible: boolean;\n};\n\nconst Confirmation = styled(({onDismiss, onSkip, visible: _, ...props}: ConfirmProps) => (\n  <div onClick={onDismiss} {...props}>\n    <p>{t(\"Not sure what to do? We're here for you!\")}</p>\n    <ButtonBar gap={1}>\n      <SkipHelp />\n      <Button size=\"xsmall\" onClick={onSkip}>\n        {t('Just skip')}\n      </Button>\n    </ButtonBar>\n  </div>\n))`\n  display: ${p => (p.visible ? 'flex' : 'none')};\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  padding: 0 ${space(3)};\n  border-radius: ${p => p.theme.borderRadius};\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.9);\n  animation: ${fadeIn} 200ms normal forwards;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  p {\n    margin-bottom: ${space(1)};\n  }\n`;\n","import {OnboardingTask} from 'sentry/types';\n\nexport const taskIsDone = (task: OnboardingTask) =>\n  ['complete', 'skipped'].includes(task.status);\n\nexport const findCompleteTasks = (task: OnboardingTask) =>\n  task.completionSeen && ['complete', 'skipped'].includes(task.status);\n\nexport const findActiveTasks = (task: OnboardingTask) =>\n  task.requisiteTasks.length === 0 && !findCompleteTasks(task);\n\nexport const findUpcomingTasks = (task: OnboardingTask) =>\n  task.requisiteTasks.length > 0 && !findCompleteTasks(task);\n","import {forwardRef} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\nimport moment from 'moment';\n\nimport {navigateTo} from 'sentry/actionCreators/navigation';\nimport Avatar from 'sentry/components/avatar';\nimport Button from 'sentry/components/button';\nimport Card from 'sentry/components/card';\nimport LetterAvatar from 'sentry/components/letterAvatar';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose, IconLock, IconSync} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, OnboardingTask, OnboardingTaskKey, Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport testableTransition from 'sentry/utils/testableTransition';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport SkipConfirm from './skipConfirm';\nimport {taskIsDone} from './utils';\n\nconst recordAnalytics = (\n  task: OnboardingTask,\n  organization: Organization,\n  action: string\n) =>\n  trackAdvancedAnalyticsEvent('onboarding.wizard_clicked', {\n    organization,\n    todo_id: task.task,\n    todo_title: task.title,\n    action,\n  });\n\ntype Props = WithRouterProps & {\n  forwardedRef: React.Ref<HTMLDivElement>;\n  /**\n   * Fired when a task is completed. This will typically happen if there is a\n   * supplemental component with the ability to complete a task\n   */\n  onMarkComplete: (taskKey: OnboardingTaskKey) => void;\n  /**\n   * Fired when the task has been skipped\n   */\n  onSkip: (taskKey: OnboardingTaskKey) => void;\n\n  organization: Organization;\n  /**\n   * Task to render\n   */\n  task: OnboardingTask;\n};\n\nfunction Task({router, task, onSkip, onMarkComplete, forwardedRef, organization}: Props) {\n  const handleSkip = () => {\n    recordAnalytics(task, organization, 'skipped');\n    onSkip(task.task);\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    recordAnalytics(task, organization, 'clickthrough');\n    e.stopPropagation();\n\n    if (task.actionType === 'external') {\n      window.open(task.location, '_blank');\n    }\n\n    if (task.actionType === 'action') {\n      task.action();\n    }\n\n    if (task.actionType === 'app') {\n      const url = new URL(task.location, window.location.origin);\n      url.searchParams.append('referrer', 'onboarding_task');\n      navigateTo(url.toString(), router);\n    }\n  };\n\n  if (taskIsDone(task) && task.completionSeen) {\n    const completedOn = moment(task.dateCompleted);\n\n    return (\n      <TaskCard ref={forwardedRef} onClick={handleClick}>\n        <CompleteTitle>\n          <StatusIndicator>\n            {task.status === 'complete' && <CompleteIndicator />}\n            {task.status === 'skipped' && <SkippedIndicator />}\n          </StatusIndicator>\n          {task.title}\n          <DateCompleted title={completedOn.toString()}>\n            {completedOn.fromNow()}\n          </DateCompleted>\n          {task.user ? (\n            <TaskUserAvatar hasTooltip user={task.user} />\n          ) : (\n            <Tooltip\n              containerDisplayMode=\"inherit\"\n              title={t('No user was associated with completing this task')}\n            >\n              <TaskBlankAvatar round />\n            </Tooltip>\n          )}\n        </CompleteTitle>\n      </TaskCard>\n    );\n  }\n\n  const IncompleteMarker = task.requisiteTasks.length > 0 && (\n    <Tooltip\n      containerDisplayMode=\"block\"\n      title={tct('[requisite] before completing this task', {\n        requisite: task.requisiteTasks[0].title,\n      })}\n    >\n      <IconLock color=\"pink300\" isSolid />\n    </Tooltip>\n  );\n\n  const {SupplementComponent} = task;\n  const supplement = SupplementComponent && (\n    <SupplementComponent task={task} onCompleteTask={() => onMarkComplete(task.task)} />\n  );\n\n  const skipAction = task.skippable && (\n    <SkipConfirm onSkip={handleSkip}>\n      {({skip}) => (\n        <CloseButton\n          borderless\n          size=\"zero\"\n          aria-label={t('Close')}\n          icon={<IconClose size=\"xs\" />}\n          onClick={skip}\n        />\n      )}\n    </SkipConfirm>\n  );\n\n  return (\n    <TaskCard\n      interactive\n      ref={forwardedRef}\n      onClick={handleClick}\n      data-test-id={task.task}\n    >\n      <IncompleteTitle>\n        {IncompleteMarker}\n        {task.title}\n      </IncompleteTitle>\n      <Description>{`${task.description}`}</Description>\n      {task.requisiteTasks.length === 0 && (\n        <ActionBar>\n          {skipAction}\n          {supplement}\n          {task.status === 'pending' ? (\n            <InProgressIndicator user={task.user} />\n          ) : (\n            <Button priority=\"primary\" size=\"small\">\n              {t('Start')}\n            </Button>\n          )}\n        </ActionBar>\n      )}\n    </TaskCard>\n  );\n}\n\nconst TaskCard = styled(Card)`\n  position: relative;\n  padding: ${space(2)} ${space(3)};\n`;\n\nconst IncompleteTitle = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  font-weight: 600;\n`;\n\nconst CompleteTitle = styled(IncompleteTitle)`\n  grid-template-columns: min-content 1fr max-content min-content;\n`;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.subText};\n  margin: ${space(0.5)} 0 0 0;\n`;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin-top: ${space(1.5)};\n`;\n\ntype InProgressIndicatorProps = React.HTMLAttributes<HTMLDivElement> & {\n  user?: AvatarUser | null;\n};\n\nconst InProgressIndicator = styled(({user, ...props}: InProgressIndicatorProps) => (\n  <div {...props}>\n    <Tooltip\n      disabled={!user}\n      containerDisplayMode=\"flex\"\n      title={tct('This task has been started by [user]', {\n        user: user?.name,\n      })}\n    >\n      <IconSync />\n    </Tooltip>\n    {t('Task in progress...')}\n  </div>\n))`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n  color: ${p => p.theme.pink300};\n  display: grid;\n  grid-template-columns: max-content max-content;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  right: ${space(1.5)};\n  top: ${space(1.5)};\n  color: ${p => p.theme.gray300};\n`;\n\nconst transition = testableTransition();\n\nconst StatusIndicator = styled(motion.div)`\n  display: flex;\n`;\nStatusIndicator.defaultProps = {\n  variants: {\n    initial: {opacity: 0, x: 10},\n    animate: {opacity: 1, x: 0},\n  },\n  transition,\n};\n\nconst CompleteIndicator = styled(IconCheckmark)``;\nCompleteIndicator.defaultProps = {\n  isCircled: true,\n  color: 'green300',\n};\n\nconst SkippedIndicator = styled(IconClose)``;\nSkippedIndicator.defaultProps = {\n  isCircled: true,\n  color: 'pink300',\n};\n\nconst completedItemAnimation = {\n  initial: {opacity: 0, x: -10},\n  animate: {opacity: 1, x: 0},\n};\n\nconst DateCompleted = styled(motion.div)`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 300;\n`;\n\nDateCompleted.defaultProps = {\n  variants: completedItemAnimation,\n  transition,\n};\n\nconst TaskUserAvatar = motion(Avatar);\nTaskUserAvatar.defaultProps = {\n  variants: completedItemAnimation,\n  transition,\n};\n\nconst TaskBlankAvatar = styled(motion(LetterAvatar))`\n  position: unset;\n`;\n\nTaskBlankAvatar.defaultProps = {\n  variants: completedItemAnimation,\n  transition,\n};\n\nconst WrappedTask = withOrganization(withRouter(Task));\n\nexport default forwardRef<\n  HTMLDivElement,\n  Omit<React.ComponentProps<typeof WrappedTask>, 'forwardedRef'>\n>((props, ref) => <WrappedTask forwardedRef={ref} {...props} />);\n","import styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\n\nimport Button from 'sentry/components/button';\nimport Card from 'sentry/components/card';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron, IconClose, IconEllipsis} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport space from 'sentry/styles/space';\nimport {OnboardingCustomComponentProps} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport testableTransition from 'sentry/utils/testableTransition';\nimport {onboardingIntegrations} from 'sentry/views/onboarding/targetedOnboarding/components/integrationSelect';\n\nimport SkipConfirm from './skipConfirm';\n\nconst MAX_INTEGRATIONS_COUNT = 3;\nconst onboardingIntegrationSet = new Map(onboardingIntegrations.map(i => [i.slug, i]));\n\nexport default function OnboardingIntegrationCard({\n  organization,\n  task,\n  onboardingState,\n  setOnboardingState,\n}: OnboardingCustomComponentProps) {\n  if (!onboardingState) {\n    return null;\n  }\n\n  const handleSkip = () => {\n    setOnboardingState &&\n      setOnboardingState({\n        ...onboardingState,\n        selectedIntegrations: [],\n      });\n  };\n  // Projects selected during onboarding but not received first event\n  const finishedIntegrations = new Set(task.data?.providers ?? []);\n  const integrationsToSetup = onboardingState.selectedIntegrations.filter(\n    i => !finishedIntegrations.has(i)\n  );\n  if (integrationsToSetup.length === 0) {\n    return null;\n  }\n  return (\n    <TaskCard key=\"onboarding-integration-continue-card\">\n      <Title>{t('Integrations to Setup')}</Title>\n      <OnboardingTaskProjectList>\n        {integrationsToSetup.slice(0, MAX_INTEGRATIONS_COUNT).map(p => {\n          const integration = onboardingIntegrationSet.get(p);\n          return (\n            <OnboardingTaskProjectListItem\n              to={`/onboarding/${organization.slug}/setup-docs/?integration=${p}&sub_step=integration`}\n              onClick={() => {\n                trackAdvancedAnalyticsEvent(\n                  'growth.onboarding_quick_start_cta_integration',\n                  {\n                    integration: p,\n                    all_selected_integrations: integrationsToSetup.join(','),\n                    organization,\n                  }\n                );\n              }}\n              key={p}\n            >\n              <OnboardingTaskProjectListItemInner>\n                <PluginIcon pluginId={p} />\n                {integration && integration.name}\n                <StyledIconChevron direction=\"right\" />\n              </OnboardingTaskProjectListItemInner>\n            </OnboardingTaskProjectListItem>\n          );\n        })}\n        {integrationsToSetup.length > MAX_INTEGRATIONS_COUNT && (\n          <OnboardingTaskProjectListItem\n            onClick={() => {\n              trackAdvancedAnalyticsEvent(\n                'growth.onboarding_quick_start_cta_integration',\n                {\n                  organization,\n                }\n              );\n            }}\n            to={`/onboarding/${organization.slug}/setup-docs/?sub_step=integration`}\n            key=\"more\"\n          >\n            <OnboardingTaskProjectListItemInner>\n              <StyledAndMoreIcon />\n              {tct('and [num] more', {\n                num: integrationsToSetup.length - MAX_INTEGRATIONS_COUNT,\n              })}\n            </OnboardingTaskProjectListItemInner>\n          </OnboardingTaskProjectListItem>\n        )}\n      </OnboardingTaskProjectList>\n      <SkipConfirm onSkip={handleSkip}>\n        {({skip}) => (\n          <CloseButton\n            borderless\n            size=\"zero\"\n            aria-label={t('Close')}\n            icon={<IconClose size=\"xs\" />}\n            onClick={skip}\n          />\n        )}\n      </SkipConfirm>\n    </TaskCard>\n  );\n}\n\nconst Title = styled('div')`\n  font-weight: 600;\n  margin: ${space(2)} ${space(3)} 0;\n`;\n\nconst TaskCard = styled(motion(Card))`\n  position: relative;\n  overflow: visible;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${space(1)};\n`;\nTaskCard.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  layout: true,\n  variants: {\n    initial: {\n      opacity: 0,\n      y: 40,\n    },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: testableTransition({\n        delay: 0.8,\n        when: 'beforeChildren',\n        staggerChildren: 0.3,\n      }),\n    },\n    exit: {\n      y: 20,\n      z: -10,\n      opacity: 0,\n      transition: {duration: 0.2},\n    },\n  },\n};\n\nconst OnboardingTaskProjectList = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledIconChevron = styled(IconChevron)``;\n\nconst OnboardingTaskProjectListItemInner = styled('div')`\n  padding: ${space(1)} 0;\n\n  display: flex;\n  align-items: center;\n  ${PluginIcon} {\n    margin-right: ${space(1)};\n  }\n  ${StyledIconChevron} {\n    margin-left: auto;\n  }\n`;\nconst OnboardingTaskProjectListItem = styled(Link)`\n  :hover {\n    background-color: ${p => p.theme.hover};\n  }\n  border-radius: 0;\n  padding: 0 ${space(3)};\n  color: ${p => p.theme.textColor};\n\n  :not(:last-child) {\n    ${OnboardingTaskProjectListItemInner} {\n      border-bottom: 1px solid ${p => p.theme.innerBorder};\n    }\n  }\n`;\n\nconst CloseButton = styled(Button)`\n  position: absolute;\n  right: ${space(1.5)};\n  top: ${space(1.5)};\n  color: ${p => p.theme.gray300};\n`;\nconst StyledAndMoreIcon = styled(IconEllipsis)`\n  margin-right: ${space(1)};\n`;\n","import styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'sentry/components/button';\nimport Card from 'sentry/components/card';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron, IconClose, IconEllipsis} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport pulsingIndicatorStyles from 'sentry/styles/pulsingIndicator';\nimport space from 'sentry/styles/space';\nimport {OnboardingCustomComponentProps, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nimport SkipConfirm from './skipConfirm';\n\nconst MAX_PROJECT_COUNT = 3;\n\nexport default function OnboardingProjectsCard({\n  organization: org,\n  onboardingState,\n  setOnboardingState,\n  projects: allProjects,\n}: OnboardingCustomComponentProps) {\n  if (!onboardingState) {\n    return null;\n  }\n\n  const handleSkip = () => {\n    setOnboardingState({\n      ...onboardingState,\n      selectedPlatforms: [],\n    });\n  };\n  // Projects selected during onboarding but not received first event\n  const projects = onboardingState.selectedPlatforms\n    .map(platform => onboardingState.platformToProjectIdMap[platform])\n    .map(projectId => allProjects.find(p => p.slug === projectId))\n    .filter(project => project && !project.firstEvent) as Project[];\n  if (projects.length === 0) {\n    return null;\n  }\n  return (\n    <TaskCard key=\"onboarding-continue-card\">\n      <Title>{t('Project to Setup')}</Title>\n      <OnboardingTaskProjectList>\n        {projects.slice(0, MAX_PROJECT_COUNT).map(p => (\n          <OnboardingTaskProjectListItem\n            key={p.id}\n            to={`/onboarding/${org.slug}/setup-docs/?project_id=${p.id}`}\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('growth.onboarding_quick_start_cta', {\n                platform: p.platform,\n                organization: org,\n              });\n            }}\n          >\n            <OnboardingTaskProjectListItemInner>\n              <StyledPlatformIcon platform={p.platform || 'default'} />\n              {p.slug}\n              <PulsingIndicator />\n              <PulsingIndicatorText>{t('Waiting for event')}</PulsingIndicatorText>\n              <IconChevron direction=\"right\" />\n            </OnboardingTaskProjectListItemInner>\n          </OnboardingTaskProjectListItem>\n        ))}\n        {projects.length > MAX_PROJECT_COUNT && (\n          <OnboardingTaskProjectListItem\n            to={`/onboarding/${org.slug}/setup-docs/`}\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('growth.onboarding_quick_start_cta', {\n                organization: org,\n              });\n            }}\n          >\n            <OnboardingTaskProjectListItemInner>\n              <StyledAndMoreIcon />\n              {tct('and [num] more', {num: projects.length - MAX_PROJECT_COUNT})}\n            </OnboardingTaskProjectListItemInner>\n          </OnboardingTaskProjectListItem>\n        )}\n      </OnboardingTaskProjectList>\n      <SkipConfirm onSkip={handleSkip}>\n        {({skip}) => (\n          <CloseButton\n            borderless\n            size=\"zero\"\n            aria-label={t('Close')}\n            icon={<IconClose size=\"xs\" />}\n            onClick={skip}\n          />\n        )}\n      </SkipConfirm>\n    </TaskCard>\n  );\n}\n\nconst Heading = styled(motion.div)`\n  display: flex;\n  color: ${p => p.theme.purple300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  text-transform: uppercase;\n  font-weight: 600;\n  line-height: 1;\n  margin-top: ${space(3)};\n`;\nHeading.defaultProps = {\n  exit: 'exit',\n  variants: {\n    exit: {\n      height: 0,\n      marginTop: 0,\n      opacity: 0,\n      transition: {duration: 0.3},\n    },\n  },\n};\n\nconst Title = styled('div')`\n  font-weight: 600;\n  margin: ${space(2)} ${space(3)} 0;\n`;\n\nconst TaskCard = styled(motion(Card))`\n  position: relative;\n  overflow: visible;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${space(1)};\n`;\nTaskCard.defaultProps = {\n  exit: 'exit',\n  variants: {\n    exit: {\n      height: 0,\n      overflow: 'hidden',\n      transition: {duration: 0.3},\n    },\n  },\n};\n\nconst OnboardingTaskProjectList = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst OnboardingTaskProjectListItemInner = styled('div')`\n  padding: ${space(1)} 0;\n\n  display: flex;\n  align-items: center;\n`;\nconst OnboardingTaskProjectListItem = styled(Link)`\n  :hover {\n    background-color: ${p => p.theme.hover};\n  }\n  border-radius: 0;\n  padding: 0 ${space(3)};\n  color: ${p => p.theme.textColor};\n\n  :not(:last-child) {\n    ${OnboardingTaskProjectListItemInner} {\n      border-bottom: 1px solid ${p => p.theme.innerBorder};\n    }\n  }\n`;\n\nconst PulsingIndicator = styled('div')`\n  ${pulsingIndicatorStyles};\n  margin-left: auto;\n`;\nconst PulsingIndicatorText = styled('span')`\n  color: ${p => p.theme.pink300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: 0 ${space(1)};\n`;\nconst CloseButton = styled(Button)`\n  position: absolute;\n  right: ${space(1.5)};\n  top: ${space(1.5)};\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledAndMoreIcon = styled(IconEllipsis)`\n  margin-right: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nimport {openInviteMembersModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport {taskIsDone} from 'sentry/components/onboardingWizard/utils';\nimport {sourceMaps} from 'sentry/data/platformCategories';\nimport {t} from 'sentry/locale';\nimport pulsingIndicatorStyles from 'sentry/styles/pulsingIndicator';\nimport space from 'sentry/styles/space';\nimport {\n  OnboardingSupplementComponentProps,\n  OnboardingTask,\n  OnboardingTaskDescriptor,\n  OnboardingTaskKey,\n  Organization,\n  Project,\n} from 'sentry/types';\nimport EventWaiter from 'sentry/utils/eventWaiter';\nimport withApi from 'sentry/utils/withApi';\nimport {OnboardingState} from 'sentry/views/onboarding/targetedOnboarding/types';\n\nimport IntegrationCard from './integrationCard';\nimport OnboardingProjectsCard from './onboardingCard';\n\nfunction hasPlatformWithSourceMaps(projects: Project[] | undefined) {\n  return projects !== undefined\n    ? projects.some(({platform}) => platform && sourceMaps.includes(platform))\n    : false;\n}\n\ntype FirstEventWaiterProps = OnboardingSupplementComponentProps & {\n  api: Client;\n};\n\ntype Options = {\n  /**\n   * The organization to show onboarding tasks for\n   */\n  organization: Organization;\n  onboardingState?: OnboardingState;\n\n  /**\n   * A list of the organizations projects. This is used for some onboarding\n   * tasks to show additional task details (such as for suggesting sourcemaps)\n   */\n  projects?: Project[];\n};\n\nfunction getIssueAlertUrl({projects, organization}: Options) {\n  if (!projects || !projects.length) {\n    return `/organizations/${organization.slug}/alerts/rules/`;\n  }\n  // pick the first project with events if we have that, otherwise just pick the first project\n  const firstProjectWithEvents = projects.find(project => !!project.firstEvent);\n  const project = firstProjectWithEvents ?? projects[0];\n  return `/organizations/${organization.slug}/alerts/${project.slug}/wizard/`;\n}\n\nfunction getMetricAlertUrl({projects, organization}: Options) {\n  if (!projects || !projects.length) {\n    return `/organizations/${organization.slug}/alerts/rules/`;\n  }\n  // pick the first project with transaction events if we have that, otherwise just pick the first project\n  const firstProjectWithEvents = projects.find(\n    project => !!project.firstTransactionEvent\n  );\n  const project = firstProjectWithEvents ?? projects[0];\n  return `/organizations/${organization.slug}/alerts/${project.slug}/wizard/?alert_option=trans_duration`;\n}\n\nexport function getOnboardingTasks({\n  organization,\n  projects,\n  onboardingState,\n}: Options): OnboardingTaskDescriptor[] {\n  return [\n    {\n      task: OnboardingTaskKey.FIRST_PROJECT,\n      title: t('Create a project'),\n      description: t(\n        \"Monitor in seconds by adding a simple lines of code to your project. It's as easy as microwaving leftover pizza.\"\n      ),\n      skippable: false,\n      requisites: [],\n      actionType: 'app',\n      location: `/organizations/${organization.slug}/projects/new/`,\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.FIRST_EVENT,\n      title: t('Capture your first error'),\n      description: t(\n        \"Time to test it out. Now that you've created a project, capture your first error. We've got an example you can fiddle with.\"\n      ),\n      skippable: false,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT],\n      actionType: 'app',\n      location: `/settings/${organization.slug}/projects/:projectId/install/`,\n      display: true,\n      SupplementComponent: withApi(({api, task, onCompleteTask}: FirstEventWaiterProps) =>\n        !!projects?.length && task.requisiteTasks.length === 0 && !task.completionSeen ? (\n          <EventWaiter\n            api={api}\n            organization={organization}\n            project={projects[0]}\n            eventType=\"error\"\n            onIssueReceived={() => !taskIsDone(task) && onCompleteTask()}\n          >\n            {() => <EventWaitingIndicator />}\n          </EventWaiter>\n        ) : null\n      ),\n    },\n    {\n      task: OnboardingTaskKey.INVITE_MEMBER,\n      title: t('Invite your team'),\n      description: t(\n        'Assign issues and comment on shared errors with coworkers so you always know who to blame when sh*t hits the fan.'\n      ),\n      skippable: true,\n      requisites: [],\n      actionType: 'action',\n      action: () => openInviteMembersModal({source: 'onboarding_widget'}),\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.FIRST_INTEGRATION,\n      title: t('Install any of our 40+ integrations'),\n      description: t(\n        'Get alerted in Slack. Two-way sync issues between Sentry and Jira. Notify Sentry of releases from GitHub, Vercel, or Netlify.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'app',\n      location: `/settings/${organization.slug}/integrations/`,\n      display: (onboardingState?.selectedIntegrations.length ?? 0) === 0,\n    },\n    {\n      task: OnboardingTaskKey.SECOND_PLATFORM,\n      title: t('Create another project'),\n      description: t(\n        'Easy, right? Don’t stop at one. Set up another project and send it events to keep things running smoothly in both the frontend and backend.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'app',\n      location: `/organizations/${organization.slug}/projects/new/`,\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.FIRST_TRANSACTION,\n      title: t('Boost performance'),\n      description: t(\n        \"Don't keep users waiting. Trace transactions, investigate spans and cross-reference related issues for those mission-critical endpoints.\"\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT],\n      actionType: 'external',\n      location: 'https://docs.sentry.io/product/performance/getting-started/',\n      display: true,\n      SupplementComponent: withApi(({api, task, onCompleteTask}: FirstEventWaiterProps) =>\n        !!projects?.length && task.requisiteTasks.length === 0 && !task.completionSeen ? (\n          <EventWaiter\n            api={api}\n            organization={organization}\n            project={projects[0]}\n            eventType=\"transaction\"\n            onIssueReceived={() => !taskIsDone(task) && onCompleteTask()}\n          >\n            {() => <EventWaitingIndicator />}\n          </EventWaiter>\n        ) : null\n      ),\n    },\n    {\n      task: OnboardingTaskKey.USER_CONTEXT,\n      title: t('Get more user context'),\n      description: t(\n        'Enable us to pinpoint which users are suffering from that bad code, so you can debug the problem more swiftly and maybe even apologize for it.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'external',\n      location:\n        'https://docs.sentry.io/platform-redirect/?next=/enriching-events/identify-user/',\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.RELEASE_TRACKING,\n      title: t('Track releases'),\n      description: t(\n        'Take an in-depth look at the health of each and every release with crash analytics, errors, related issues and suspect commits.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'app',\n      location: `/settings/${organization.slug}/projects/:projectId/release-tracking/`,\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.SOURCEMAPS,\n      title: t('Upload source maps'),\n      description: t(\n        \"Deminify Javascript source code to debug with context. Seeing code in it's original form will help you debunk the ghosts of errors past.\"\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'external',\n      location: 'https://docs.sentry.io/platforms/javascript/sourcemaps/',\n      display: hasPlatformWithSourceMaps(projects),\n    },\n    {\n      task: OnboardingTaskKey.USER_REPORTS,\n      title: 'User crash reports',\n      description: t('Collect user feedback when your application crashes'),\n      skippable: true,\n      requisites: [\n        OnboardingTaskKey.FIRST_PROJECT,\n        OnboardingTaskKey.FIRST_EVENT,\n        OnboardingTaskKey.USER_CONTEXT,\n      ],\n      actionType: 'app',\n      location: `/settings/${organization.slug}/projects/:projectId/user-reports/`,\n      display: false,\n    },\n    {\n      task: OnboardingTaskKey.ISSUE_TRACKER,\n      title: t('Set up issue tracking'),\n      description: t('Link to Sentry issues within your issue tracker'),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_EVENT],\n      actionType: 'app',\n      location: `/settings/${organization.slug}/projects/:projectId/plugins/`,\n      display: false,\n    },\n    {\n      task: OnboardingTaskKey.ALERT_RULE,\n      title: t('Configure an Issue Alert'),\n      description: t(\n        'We all have issues. Get real-time error notifications by setting up alerts for issues that match your set criteria.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT],\n      actionType: 'app',\n      location: getIssueAlertUrl({projects, organization, onboardingState}),\n      display: true,\n    },\n    {\n      task: OnboardingTaskKey.METRIC_ALERT,\n      title: t('Create a Performance Alert'),\n      description: t(\n        'See slow fast with performance alerts. Set up alerts for notifications about slow page load times, API latency, or when throughput significantly deviates from normal.'\n      ),\n      skippable: true,\n      requisites: [OnboardingTaskKey.FIRST_PROJECT, OnboardingTaskKey.FIRST_TRANSACTION],\n      actionType: 'app',\n      location: getMetricAlertUrl({projects, organization, onboardingState}),\n      display: organization.features?.includes('incidents'),\n    },\n    {\n      task: OnboardingTaskKey.USER_SELECTED_PROJECTS,\n      title: t('Projects to Setup'),\n      description: '',\n      skippable: true,\n      requisites: [],\n      actionType: 'action',\n      action: () => {},\n      display: true,\n      renderCard: OnboardingProjectsCard,\n    },\n    {\n      task: OnboardingTaskKey.INTEGRATIONS,\n      title: t('Integrations to Setup'),\n      description: '',\n      skippable: true,\n      requisites: [],\n      actionType: 'action',\n      action: () => {},\n      display: !!organization.experiments?.TargetedOnboardingIntegrationSelectExperiment,\n      serverTask: OnboardingTaskKey.FIRST_INTEGRATION,\n      renderCard: IntegrationCard,\n    },\n  ];\n}\n\nexport function getMergedTasks({organization, projects, onboardingState}: Options) {\n  const taskDescriptors = getOnboardingTasks({organization, projects, onboardingState});\n  const serverTasks = organization.onboardingTasks;\n\n  // Map server task state (i.e. completed status) with tasks objects\n  const allTasks = taskDescriptors.map(\n    desc =>\n      ({\n        ...desc,\n        ...serverTasks.find(\n          serverTask =>\n            serverTask.task === desc.task || serverTask.task === desc.serverTask\n        ),\n        requisiteTasks: [],\n      } as OnboardingTask)\n  );\n\n  // Map incomplete requisiteTasks as full task objects\n  return allTasks.map(task => ({\n    ...task,\n    requisiteTasks: task.requisites\n      .map(key => allTasks.find(task2 => task2.task === key)!)\n      .filter(reqTask => reqTask.status !== 'complete'),\n  }));\n}\n\nconst PulsingIndicator = styled('div')`\n  ${pulsingIndicatorStyles};\n  margin-right: ${space(1)};\n`;\n\nconst EventWaitingIndicator = styled((p: React.HTMLAttributes<HTMLDivElement>) => (\n  <div {...p}>\n    <PulsingIndicator />\n    {t('Waiting for event')}\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.pink300};\n`;\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport styled from '@emotion/styled';\nimport {AnimatePresence, motion} from 'framer-motion';\n\nimport HighlightTopRight from 'sentry-images/pattern/highlight-top-right.svg';\n\nimport {updateOnboardingTask} from 'sentry/actionCreators/onboardingTasks';\nimport SidebarPanel from 'sentry/components/sidebar/sidebarPanel';\nimport {CommonSidebarProps} from 'sentry/components/sidebar/types';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OnboardingTask, OnboardingTaskKey, Organization, Project} from 'sentry/types';\nimport testableTransition from 'sentry/utils/testableTransition';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\nimport {usePersistedOnboardingState} from 'sentry/views/onboarding/targetedOnboarding/utils';\n\nimport ProgressHeader from './progressHeader';\nimport Task from './task';\nimport {getMergedTasks} from './taskConfig';\nimport {findActiveTasks, findCompleteTasks, findUpcomingTasks, taskIsDone} from './utils';\n\ntype Props = Pick<CommonSidebarProps, 'orientation' | 'collapsed'> & {\n  onClose: () => void;\n  organization: Organization;\n  projects: Project[];\n};\n\n/**\n * How long (in ms) to delay before beginning to mark tasks complete\n */\nconst INITIAL_MARK_COMPLETE_TIMEOUT = 600;\n\n/**\n * How long (in ms) to delay between marking each unseen task as complete.\n */\nconst COMPLETION_SEEN_TIMEOUT = 800;\n\nconst Heading = styled(motion.div)`\n  display: flex;\n  color: ${p => p.theme.purple300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  text-transform: uppercase;\n  font-weight: 600;\n  line-height: 1;\n  margin-top: ${space(3)};\n`;\n\nHeading.defaultProps = {\n  layout: true,\n  transition: testableTransition(),\n};\n\nconst customizedTasksHeading = <Heading key=\"customized\">{t('The Basics')}</Heading>;\nconst completeNowHeading = <Heading key=\"now\">{t('Next Steps')}</Heading>;\nconst upcomingTasksHeading = (\n  <Heading key=\"upcoming\">\n    <Tooltip\n      containerDisplayMode=\"block\"\n      title={t('Some tasks should be completed before completing these tasks')}\n    >\n      {t('Level Up')}\n    </Tooltip>\n  </Heading>\n);\nconst completedTasksHeading = <Heading key=\"complete\">{t('Completed')}</Heading>;\n\nfunction OnboardingWizardSidebar({\n  organization,\n  collapsed,\n  orientation,\n  onClose,\n  projects,\n}: Props) {\n  const api = useApi();\n  const [onboardingState, setOnboardingState] = usePersistedOnboardingState();\n\n  const markCompletionTimeout = useRef<number | undefined>();\n  const markCompletionSeenTimeout = useRef<number | undefined>();\n\n  function completionTimeout(time: number): Promise<void> {\n    window.clearTimeout(markCompletionTimeout.current);\n    return new Promise(resolve => {\n      markCompletionTimeout.current = window.setTimeout(resolve, time);\n    });\n  }\n\n  function seenTimeout(time: number): Promise<void> {\n    window.clearTimeout(markCompletionSeenTimeout.current);\n    return new Promise(resolve => {\n      markCompletionSeenTimeout.current = window.setTimeout(resolve, time);\n    });\n  }\n\n  const {allTasks, customTasks, active, upcoming, complete} = useMemo(() => {\n    const all = getMergedTasks({\n      organization,\n      projects,\n      onboardingState: onboardingState || undefined,\n    }).filter(task => task.display);\n    const tasks = all.filter(task => !task.renderCard);\n    return {\n      allTasks: all,\n      customTasks: all.filter(task => task.renderCard),\n      active: tasks.filter(findActiveTasks),\n      upcoming: tasks.filter(findUpcomingTasks),\n      complete: tasks.filter(findCompleteTasks),\n    };\n  }, [organization, projects, onboardingState]);\n\n  const markTasksAsSeen = useCallback(\n    async function () {\n      const unseenTasks = allTasks\n        .filter(task => taskIsDone(task) && !task.completionSeen)\n        .map(task => task.task);\n\n      // Incrementally mark tasks as seen. This gives the card completion\n      // animations time before we move each task into the completed section.\n      for (const task of unseenTasks) {\n        await seenTimeout(COMPLETION_SEEN_TIMEOUT);\n        updateOnboardingTask(api, organization, {task, completionSeen: true});\n      }\n    },\n    [api, organization, allTasks]\n  );\n\n  const markSeenOnOpen = useCallback(\n    async function () {\n      // Add a minor delay to marking tasks complete to account for the animation\n      // opening of the sidebar panel\n      await completionTimeout(INITIAL_MARK_COMPLETE_TIMEOUT);\n      markTasksAsSeen();\n    },\n    [markTasksAsSeen]\n  );\n\n  useEffect(() => {\n    markSeenOnOpen();\n\n    return () => {\n      window.clearTimeout(markCompletionTimeout.current);\n      window.clearTimeout(markCompletionSeenTimeout.current);\n    };\n  }, [markSeenOnOpen]);\n\n  function makeTaskUpdater(status: OnboardingTask['status']) {\n    return (task: OnboardingTaskKey) =>\n      updateOnboardingTask(api, organization, {task, status, completionSeen: true});\n  }\n\n  function renderItem(task: OnboardingTask) {\n    return (\n      <AnimatedTaskItem\n        task={task}\n        key={`${task.task}`}\n        onSkip={makeTaskUpdater('skipped')}\n        onMarkComplete={makeTaskUpdater('complete')}\n      />\n    );\n  }\n\n  const completeList = (\n    <CompleteList key=\"complete-group\">\n      <AnimatePresence initial={false}>{complete.map(renderItem)}</AnimatePresence>\n    </CompleteList>\n  );\n\n  const customizedCards = customTasks\n    .map(task =>\n      task.renderCard?.({\n        organization,\n        task,\n        onboardingState,\n        setOnboardingState,\n        projects,\n      })\n    )\n    .filter(card => !!card);\n\n  const items = [\n    customizedCards.length > 0 && customizedTasksHeading,\n    ...customizedCards,\n    active.length > 0 && completeNowHeading,\n    ...active.map(renderItem),\n    upcoming.length > 0 && upcomingTasksHeading,\n    ...upcoming.map(renderItem),\n    complete.length > 0 && completedTasksHeading,\n    completeList,\n  ];\n\n  return (\n    <TaskSidebarPanel collapsed={collapsed} hidePanel={onClose} orientation={orientation}>\n      <TopRight src={HighlightTopRight} />\n      <ProgressHeader allTasks={allTasks} completedTasks={complete} />\n      <TaskList>\n        <AnimatePresence initial={false}>{items}</AnimatePresence>\n      </TaskList>\n    </TaskSidebarPanel>\n  );\n}\n\nconst TaskSidebarPanel = styled(SidebarPanel)`\n  width: 450px;\n`;\n\nconst AnimatedTaskItem = motion(Task);\n\nAnimatedTaskItem.defaultProps = {\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  layout: true,\n  variants: {\n    initial: {\n      opacity: 0,\n      y: 40,\n    },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: testableTransition({\n        delay: 0.8,\n        when: 'beforeChildren',\n        staggerChildren: 0.3,\n      }),\n    },\n    exit: {\n      y: 20,\n      z: -10,\n      opacity: 0,\n      transition: {duration: 0.2},\n    },\n  },\n};\n\nconst TaskList = styled('div')`\n  display: grid;\n  grid-auto-flow: row;\n  gap: ${space(1)};\n  margin: ${space(1)} ${space(4)} ${space(4)} ${space(4)};\n`;\n\nconst CompleteList = styled('div')`\n  display: grid;\n  grid-auto-flow: row;\n\n  > div {\n    transition: border-radius 500ms;\n  }\n\n  > div:not(:first-of-type) {\n    margin-top: -1px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  > div:not(:last-of-type) {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n`;\n\nconst TopRight = styled('img')`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 60%;\n`;\n\nexport default withOrganization(withProjects(OnboardingWizardSidebar));\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport OnboardingSidebar from 'sentry/components/onboardingWizard/sidebar';\nimport {getMergedTasks} from 'sentry/components/onboardingWizard/taskConfig';\nimport ProgressRing, {\n  RingBackground,\n  RingBar,\n  RingText,\n} from 'sentry/components/progressRing';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OnboardingTaskStatus, Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport theme, {Theme} from 'sentry/utils/theme';\nimport withProjects from 'sentry/utils/withProjects';\nimport {usePersistedOnboardingState} from 'sentry/views/onboarding/targetedOnboarding/utils';\n\nimport {CommonSidebarProps, SidebarPanelKey} from './types';\n\ntype Props = CommonSidebarProps & {\n  org: Organization;\n  projects: Project[];\n};\n\nconst isDone = (task: OnboardingTaskStatus) =>\n  task.status === 'complete' || task.status === 'skipped';\n\nconst progressTextCss = () => css`\n  font-size: ${theme.fontSizeMedium};\n  font-weight: bold;\n`;\n\nfunction OnboardingStatus({\n  collapsed,\n  org,\n  projects,\n  currentPanel,\n  orientation,\n  hidePanel,\n  onShowPanel,\n}: Props) {\n  const handleShowPanel = () => {\n    trackAdvancedAnalyticsEvent('onboarding.wizard_opened', {organization: org});\n    onShowPanel();\n  };\n  const [onboardingState] = usePersistedOnboardingState();\n\n  if (!org.features?.includes('onboarding')) {\n    return null;\n  }\n\n  const tasks = getMergedTasks({\n    organization: org,\n    projects,\n    onboardingState: onboardingState || undefined,\n  });\n\n  const allDisplayedTasks = tasks\n    .filter(task => task.display)\n    .filter(task => !task.renderCard);\n  const doneTasks = allDisplayedTasks.filter(isDone);\n  const numberRemaining = allDisplayedTasks.length - doneTasks.length;\n\n  const pendingCompletionSeen = doneTasks.some(\n    task =>\n      allDisplayedTasks.some(displayedTask => displayedTask.task === task.task) &&\n      task.status === 'complete' &&\n      !task.completionSeen\n  );\n\n  const isActive = currentPanel === SidebarPanelKey.OnboardingWizard;\n\n  if (doneTasks.length >= allDisplayedTasks.length && !isActive) {\n    return null;\n  }\n\n  const label = t('Quick Start');\n\n  return (\n    <Fragment>\n      <Container\n        role=\"button\"\n        aria-label={label}\n        onClick={handleShowPanel}\n        isActive={isActive}\n      >\n        <ProgressRing\n          animateText\n          textCss={progressTextCss}\n          text={allDisplayedTasks.length - doneTasks.length}\n          value={(doneTasks.length / allDisplayedTasks.length) * 100}\n          backgroundColor=\"rgba(255, 255, 255, 0.15)\"\n          progressEndcaps=\"round\"\n          size={38}\n          barWidth={6}\n        />\n        {!collapsed && (\n          <div>\n            <Heading>{label}</Heading>\n            <Remaining>\n              {tct('[numberRemaining] Remaining tasks', {numberRemaining})}\n              {pendingCompletionSeen && <PendingSeenIndicator />}\n            </Remaining>\n          </div>\n        )}\n      </Container>\n      {isActive && (\n        <OnboardingSidebar\n          orientation={orientation}\n          collapsed={collapsed}\n          onClose={hidePanel}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nconst Heading = styled('div')`\n  transition: color 100ms;\n  font-size: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.white};\n  margin-bottom: ${space(0.25)};\n`;\n\nconst Remaining = styled('div')`\n  transition: color 100ms;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  display: grid;\n  grid-template-columns: max-content max-content;\n  gap: ${space(0.75)};\n  align-items: center;\n`;\n\nconst PendingSeenIndicator = styled('div')`\n  background: ${p => p.theme.red300};\n  border-radius: 50%;\n  height: 7px;\n  width: 7px;\n`;\n\nconst hoverCss = (p: {theme: Theme}) => css`\n  background: rgba(255, 255, 255, 0.05);\n\n  ${RingBackground} {\n    stroke: rgba(255, 255, 255, 0.3);\n  }\n  ${RingBar} {\n    stroke: ${p.theme.green200};\n  }\n  ${RingText} {\n    color: ${p.theme.white};\n  }\n\n  ${Heading} {\n    color: ${p.theme.white};\n  }\n  ${Remaining} {\n    color: ${p.theme.white};\n  }\n`;\n\nconst Container = styled('div')<{isActive: boolean}>`\n  padding: 9px 19px 9px 16px;\n  cursor: pointer;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1.5)};\n  align-items: center;\n  transition: background 100ms;\n\n  ${p => p.isActive && hoverCss(p)};\n\n  &:hover {\n    ${hoverCss};\n  }\n`;\n\nexport default withProjects(OnboardingStatus);\n","import {Fragment, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport color from 'color';\nimport sortBy from 'lodash/sortBy';\nimport startCase from 'lodash/startCase';\n\nimport {loadIncidents} from 'sentry/actionCreators/serviceIncidents';\nimport Button from 'sentry/components/button';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport Text from 'sentry/components/text';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IS_ACCEPTANCE_TEST} from 'sentry/constants';\nimport {\n  IconCheckmark,\n  IconFatal,\n  IconFire,\n  IconInfo,\n  IconOpen,\n  IconWarning,\n} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SentryServiceStatus} from 'sentry/types';\nimport marked from 'sentry/utils/marked';\n\nimport TimeSince from '../timeSince';\n\nimport SidebarItem from './sidebarItem';\nimport SidebarPanel from './sidebarPanel';\nimport SidebarPanelEmpty from './sidebarPanelEmpty';\nimport SidebarPanelItem from './sidebarPanelItem';\nimport {CommonSidebarProps, SidebarPanelKey} from './types';\n\ntype Props = CommonSidebarProps;\n\ntype Status =\n  SentryServiceStatus['incidents'][number]['affectedComponents'][number]['status'];\n\nconst COMPONENT_STATUS_SORT: Status[] = [\n  'operational',\n  'degraded_performance',\n  'partial_outage',\n  'major_outage',\n];\n\nfunction ServiceIncidents({\n  currentPanel,\n  onShowPanel,\n  hidePanel,\n  collapsed,\n  orientation,\n}: Props) {\n  const [serviceStatus, setServiceStatus] = useState<SentryServiceStatus | null>(null);\n\n  async function fetchData() {\n    try {\n      setServiceStatus(await loadIncidents());\n    } catch (e) {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['ServiceIncidents-fetchData']);\n        Sentry.captureException(e);\n      });\n    }\n  }\n\n  useEffect(() => void fetchData(), []);\n\n  // Never render incidents in acceptance tests\n  if (IS_ACCEPTANCE_TEST) {\n    return null;\n  }\n\n  if (!serviceStatus) {\n    return null;\n  }\n\n  const active = currentPanel === SidebarPanelKey.ServiceIncidents;\n  const isEmpty = !serviceStatus.incidents || serviceStatus.incidents.length === 0;\n\n  if (isEmpty) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <SidebarItem\n        id=\"statusupdate\"\n        orientation={orientation}\n        collapsed={collapsed}\n        active={active}\n        icon={<IconWarning size=\"md\" />}\n        label={t('Service status')}\n        onClick={onShowPanel}\n      />\n      {active && serviceStatus && (\n        <SidebarPanel\n          orientation={orientation}\n          title={t('Recent service updates')}\n          hidePanel={hidePanel}\n          collapsed={collapsed}\n        >\n          {isEmpty && (\n            <SidebarPanelEmpty>{t('There are no incidents to report')}</SidebarPanelEmpty>\n          )}\n          {serviceStatus.incidents.map(incident => (\n            <SidebarPanelItem\n              title={incident.name}\n              key={incident.id}\n              titleAction={\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconOpen size=\"xs\" />}\n                  priority=\"link\"\n                  href={incident.url}\n                  external\n                >\n                  {t('Full Incident Details')}\n                </Button>\n              }\n            >\n              <AffectedServices>\n                {tct(\n                  \"This incident started [timeAgo]. We're experiencing the following problems with our services\",\n                  {\n                    timeAgo: (\n                      <strong>\n                        <TimeSince date={incident.createdAt} />\n                      </strong>\n                    ),\n                  }\n                )}\n                <ComponentList>\n                  {sortBy(incident.affectedComponents, i =>\n                    COMPONENT_STATUS_SORT.indexOf(i.status)\n                  ).map(({name, status}, key) => (\n                    <ComponentStatus\n                      key={key}\n                      padding=\"24px\"\n                      symbol={getStatusSymbol(status)}\n                    >\n                      {name}\n                    </ComponentStatus>\n                  ))}\n                </ComponentList>\n              </AffectedServices>\n\n              <UpdatesList>\n                {incident.updates.map(({status, body, updatedAt}, key) => (\n                  <ListItem key={key}>\n                    <UpdateHeading>\n                      <StatusTitle>{startCase(status)}</StatusTitle>\n                      <StatusDate>\n                        {tct('([time])', {time: <TimeSince date={updatedAt} />})}\n                      </StatusDate>\n                    </UpdateHeading>\n                    <Text dangerouslySetInnerHTML={{__html: marked(body)}} />\n                  </ListItem>\n                ))}\n              </UpdatesList>\n            </SidebarPanelItem>\n          ))}\n        </SidebarPanel>\n      )}\n    </Fragment>\n  );\n}\n\nfunction getStatusSymbol(status: Status) {\n  return (\n    <Tooltip skipWrapper title={startCase(status)}>\n      {status === 'operational' ? (\n        <IconCheckmark size=\"sm\" isCircled color=\"green300\" />\n      ) : status === 'major_outage' ? (\n        <IconFatal size=\"sm\" color=\"red300\" />\n      ) : status === 'degraded_performance' ? (\n        <IconWarning size=\"sm\" color=\"yellow300\" />\n      ) : status === 'partial_outage' ? (\n        <IconFire size=\"sm\" color=\"yellow300\" />\n      ) : (\n        <IconInfo size=\"sm\" color=\"gray300\" />\n      )}\n    </Tooltip>\n  );\n}\n\nconst AffectedServices = styled('div')`\n  margin: ${space(2)} 0;\n`;\n\nconst UpdatesList = styled(List)`\n  gap: ${space(3)};\n  margin-left: ${space(1.5)};\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    height: 100%;\n    width: 2px;\n    margin: ${space(1)} 0 ${space(1)} -${space(1.5)};\n    background: ${p => p.theme.gray100};\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: -${space(1)};\n    margin-left: -${space(1.5)};\n    height: 30px;\n    width: 2px;\n    background: linear-gradient(\n      0deg,\n      ${p => p.theme.background},\n      ${p => color(p.theme.background).alpha(0).string()}\n    );\n  }\n`;\n\nconst UpdateHeading = styled('div')`\n  margin-bottom: ${space(0.5)};\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n  position: relative;\n\n  &::before {\n    content: '';\n    display: block;\n    position: absolute;\n    height: 8px;\n    width: 8px;\n    margin-left: -15px;\n    border-radius: 50%;\n    background: ${p => p.theme.purple300};\n  }\n`;\n\nconst StatusTitle = styled('div')`\n  color: ${p => p.theme.headingColor};\n  font-weight: bold;\n`;\n\nconst StatusDate = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst ComponentList = styled(List)`\n  margin-top: ${space(1)};\n  display: block;\n  column-count: 2;\n`;\n\nconst ComponentStatus = styled(ListItem)`\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 2;\n`;\n\nexport default ServiceIncidents;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {SentryServiceIncident, SentryServiceStatus} from 'sentry/types';\n\ntype IncidentImpact = SentryServiceStatus['indicator'];\n\n/**\n * This is a partial typing of the statuspage API [0]\n *\n * [0]: https://doers.statuspage.io/api/v2/incidents/\n */\ntype StatuspageIncident = {\n  created_at: string;\n  id: string;\n  impact: IncidentImpact;\n  name: string;\n  shortlink: string;\n  status: string;\n  components?: Array<any>;\n  incident_updates?: Array<any>;\n};\n\nfunction getIncidentsFromIncidentResponse(statuspageIncidents: StatuspageIncident[]): {\n  incidents: SentryServiceIncident[];\n  indicator: IncidentImpact;\n} {\n  if (statuspageIncidents === null || statuspageIncidents.length === 0) {\n    return {incidents: [], indicator: 'none'};\n  }\n\n  let isMajor = false;\n  const incidents: SentryServiceIncident[] = [];\n\n  statuspageIncidents.forEach(item => {\n    if (!isMajor && item.impact === 'major') {\n      isMajor = true;\n    }\n    incidents.push({\n      id: item.id,\n      name: item.name,\n      createdAt: item.created_at,\n      updates:\n        item.incident_updates?.map(update => ({\n          body: update.body,\n          status: update.status,\n          updatedAt: update.updated_at,\n        })) ?? [],\n      affectedComponents:\n        item.components?.map(componentUpdate => ({\n          name: componentUpdate.name,\n          status: componentUpdate.status,\n          updatedAt: componentUpdate.updated_at,\n        })) ?? [],\n      url: item.shortlink,\n      status: item.status,\n    });\n  });\n\n  return {incidents, indicator: isMajor ? 'major' : 'minor'};\n}\n\nexport async function loadIncidents(): Promise<SentryServiceStatus | null> {\n  const cfg = ConfigStore.get('statuspage');\n  let response: Response | undefined = undefined;\n  if (!cfg || !cfg.id) {\n    return null;\n  }\n\n  try {\n    response = await fetch(\n      `https://${cfg.id}.${cfg.api_host}/api/v2/incidents/unresolved.json`\n    );\n  } catch (err) {\n    // No point in capturing this as we can't make statuspage come back.\n    return null;\n  }\n\n  if (!response.ok) {\n    // Sometimes statuspage responds with a 500\n    return null;\n  }\n\n  const data = await response.json();\n  const {incidents, indicator} = getIncidentsFromIncidentResponse(data.incidents);\n\n  return {\n    incidents,\n    indicator,\n    url: data.page.url,\n  };\n}\n","import styled from '@emotion/styled';\n\nconst Divider = styled('div')`\n  height: 0;\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  margin: 5px 0;\n`;\nexport default Divider;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport SidebarDropdownMenu from 'sentry/components/sidebar/sidebarDropdownMenu.styled';\nimport SidebarMenuItem from 'sentry/components/sidebar/sidebarMenuItem';\nimport SidebarOrgSummary from 'sentry/components/sidebar/sidebarOrgSummary';\nimport {IconAdd, IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {OrganizationSummary} from 'sentry/types';\nimport withOrganizations from 'sentry/utils/withOrganizations';\n\nimport Divider from './divider.styled';\n\ntype Props = {\n  canCreateOrganization: boolean;\n  organizations: OrganizationSummary[];\n};\n/**\n * Switch Organization Menu Label + Sub Menu\n */\nconst SwitchOrganization = ({organizations, canCreateOrganization}: Props) => (\n  <DropdownMenu isNestedDropdown>\n    {({isOpen, getMenuProps, getActorProps}) => (\n      <Fragment>\n        <SwitchOrganizationMenuActor\n          data-test-id=\"sidebar-switch-org\"\n          {...getActorProps({})}\n          onClick={e => {\n            // This overwrites `DropdownMenu.getActorProps.onClick` which normally handles clicks on actor\n            // to toggle visibility of menu. Instead, do nothing because it is nested and we only want it\n            // to appear when hovered on. Will also stop menu from closing when clicked on (which seems to be common\n            // behavior);\n\n            // Stop propagation so that dropdown menu doesn't close here\n            e.stopPropagation();\n          }}\n        >\n          {t('Switch organization')}\n\n          <SubMenuCaret>\n            <IconChevron size=\"xs\" direction=\"right\" />\n          </SubMenuCaret>\n        </SwitchOrganizationMenuActor>\n\n        {isOpen && (\n          <SwitchOrganizationMenu\n            data-test-id=\"sidebar-switch-org-menu\"\n            {...getMenuProps({})}\n          >\n            <OrganizationList role=\"list\">\n              {sortBy(organizations, ['status.id']).map(organization => {\n                const url = `/organizations/${organization.slug}/`;\n\n                return (\n                  <SidebarMenuItem key={organization.slug} to={url}>\n                    <SidebarOrgSummary organization={organization} />\n                  </SidebarMenuItem>\n                );\n              })}\n            </OrganizationList>\n            {organizations && !!organizations.length && canCreateOrganization && (\n              <Divider css={{marginTop: 0}} />\n            )}\n            {canCreateOrganization && (\n              <SidebarMenuItem\n                data-test-id=\"sidebar-create-org\"\n                to=\"/organizations/new/\"\n                style={{alignItems: 'center'}}\n              >\n                <MenuItemLabelWithIcon>\n                  <StyledIconAdd />\n                  <span>{t('Create a new organization')}</span>\n                </MenuItemLabelWithIcon>\n              </SidebarMenuItem>\n            )}\n          </SwitchOrganizationMenu>\n        )}\n      </Fragment>\n    )}\n  </DropdownMenu>\n);\n\nconst SwitchOrganizationContainer = withOrganizations(SwitchOrganization);\n\nexport {SwitchOrganization};\nexport default SwitchOrganizationContainer;\n\nconst StyledIconAdd = styled(IconAdd)`\n  margin-right: ${space(1)};\n  color: ${p => p.theme.gray300};\n`;\n\nconst MenuItemLabelWithIcon = styled('span')`\n  line-height: 1;\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} 0;\n`;\n\nconst SubMenuCaret = styled('span')`\n  color: ${p => p.theme.gray300};\n  transition: 0.1s color linear;\n\n  &:hover,\n  &:active {\n    color: ${p => p.theme.subText};\n  }\n`;\n\n// Menu Item in dropdown to \"Switch organization\"\nconst SwitchOrganizationMenuActor = styled('span')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 -${p => p.theme.sidebar.menuSpacing};\n  padding: 0 ${p => p.theme.sidebar.menuSpacing};\n`;\n\nconst SwitchOrganizationMenu = styled('div')`\n  ${SidebarDropdownMenu};\n  top: 0;\n  left: 256px;\n`;\n\nconst OrganizationList = styled('div')`\n  max-height: 350px;\n  overflow-y: auto;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport DemoModeGate from 'sentry/components/acl/demoModeGate';\nimport Avatar from 'sentry/components/avatar';\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport Hook from 'sentry/components/hook';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport SidebarDropdownMenu from 'sentry/components/sidebar/sidebarDropdownMenu.styled';\nimport SidebarMenuItem, {menuItemStyles} from 'sentry/components/sidebar/sidebarMenuItem';\nimport SidebarOrgSummary from 'sentry/components/sidebar/sidebarOrgSummary';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {IconChevron, IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Config, Organization, Project, User} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport SidebarMenuItemLink from '../sidebarMenuItemLink';\nimport {CommonSidebarProps} from '../types';\n\nimport Divider from './divider.styled';\nimport SwitchOrganization from './switchOrganization';\n\n// TODO: make org and user optional props\ntype Props = Pick<CommonSidebarProps, 'orientation' | 'collapsed'> & {\n  api: Client;\n  config: Config;\n  projects: Project[];\n  user: User;\n  /**\n   * Set to true to hide links within the organization\n   */\n  hideOrgLinks?: boolean;\n  org?: Organization;\n};\n\nconst SidebarDropdown = ({\n  api,\n  org,\n  projects,\n  orientation,\n  collapsed,\n  config,\n  user,\n  hideOrgLinks,\n}: Props) => {\n  const handleLogout = async () => {\n    await logout(api);\n    window.location.assign('/auth/login/');\n  };\n\n  const hasOrganization = !!org;\n  const hasUser = !!user;\n\n  // It's possible we do not have an org in context (e.g. RouteNotFound)\n  // Otherwise, we should have the full org\n  const hasOrgRead = org?.access?.includes('org:read');\n  const hasMemberRead = org?.access?.includes('member:read');\n  const hasTeamRead = org?.access?.includes('team:read');\n  const canCreateOrg = ConfigStore.get('features').has('organizations:create');\n\n  // Avatar to use: Organization --> user --> Sentry\n  const avatar =\n    hasOrganization || hasUser ? (\n      <StyledAvatar\n        collapsed={collapsed}\n        organization={org}\n        user={!org ? user : undefined}\n        size={32}\n        round={false}\n      />\n    ) : (\n      <SentryLink to=\"/\">\n        <IconSentry size=\"32px\" />\n      </SentryLink>\n    );\n\n  return (\n    <DropdownMenu>\n      {({isOpen, getRootProps, getActorProps, getMenuProps}) => (\n        <SidebarDropdownRoot {...getRootProps()}>\n          <SidebarDropdownActor\n            type=\"button\"\n            data-test-id=\"sidebar-dropdown\"\n            {...getActorProps({})}\n          >\n            {avatar}\n            {!collapsed && orientation !== 'top' && (\n              <OrgAndUserWrapper>\n                <OrgOrUserName>\n                  {hasOrganization ? org.name : user.name}{' '}\n                  <StyledIconChevron color=\"white\" size=\"xs\" direction=\"down\" />\n                </OrgOrUserName>\n                <UserNameOrEmail>\n                  {hasOrganization ? user.name : user.email}\n                </UserNameOrEmail>\n              </OrgAndUserWrapper>\n            )}\n          </SidebarDropdownActor>\n\n          {isOpen && (\n            <OrgAndUserMenu {...getMenuProps({})}>\n              {hasOrganization && (\n                <Fragment>\n                  <SidebarOrgSummary organization={org} projectCount={projects.length} />\n                  {!hideOrgLinks && (\n                    <Fragment>\n                      {hasOrgRead && (\n                        <SidebarMenuItem to={`/settings/${org.slug}/`}>\n                          {t('Organization settings')}\n                        </SidebarMenuItem>\n                      )}\n                      {hasMemberRead && (\n                        <SidebarMenuItem to={`/settings/${org.slug}/members/`}>\n                          {t('Members')}\n                        </SidebarMenuItem>\n                      )}\n\n                      {hasTeamRead && (\n                        <SidebarMenuItem to={`/settings/${org.slug}/teams/`}>\n                          {t('Teams')}\n                        </SidebarMenuItem>\n                      )}\n\n                      <Hook\n                        name=\"sidebar:organization-dropdown-menu\"\n                        organization={org}\n                      />\n                    </Fragment>\n                  )}\n\n                  {!config.singleOrganization && (\n                    <DemoModeGate>\n                      <SidebarMenuItem>\n                        <SwitchOrganization canCreateOrganization={canCreateOrg} />\n                      </SidebarMenuItem>\n                    </DemoModeGate>\n                  )}\n                </Fragment>\n              )}\n\n              <DemoModeGate>\n                {hasOrganization && user && <Divider />}\n                {!!user && (\n                  <Fragment>\n                    <UserSummary to=\"/settings/account/details/\">\n                      <UserBadgeNoOverflow user={user} avatarSize={32} />\n                    </UserSummary>\n\n                    <div>\n                      <SidebarMenuItem to=\"/settings/account/\">\n                        {t('User settings')}\n                      </SidebarMenuItem>\n                      <SidebarMenuItem to=\"/settings/account/api/\">\n                        {t('API keys')}\n                      </SidebarMenuItem>\n                      {hasOrganization && (\n                        <Hook\n                          name=\"sidebar:organization-dropdown-menu-bottom\"\n                          organization={org}\n                        />\n                      )}\n                      {user.isSuperuser && (\n                        <SidebarMenuItem to=\"/manage/\">{t('Admin')}</SidebarMenuItem>\n                      )}\n                      <SidebarMenuItem\n                        data-test-id=\"sidebar-signout\"\n                        onClick={handleLogout}\n                      >\n                        {t('Sign out')}\n                      </SidebarMenuItem>\n                    </div>\n                  </Fragment>\n                )}\n              </DemoModeGate>\n            </OrgAndUserMenu>\n          )}\n        </SidebarDropdownRoot>\n      )}\n    </DropdownMenu>\n  );\n};\n\nexport default withApi(withProjects(SidebarDropdown));\n\nconst SentryLink = styled(Link)`\n  color: ${p => p.theme.white};\n  &:hover {\n    color: ${p => p.theme.white};\n  }\n`;\n\nconst UserSummary = styled(Link)<\n  Omit<React.ComponentProps<typeof SidebarMenuItemLink>, 'children'>\n>`\n  ${p => menuItemStyles(p)}\n  padding: 10px 15px;\n`;\n\nconst UserBadgeNoOverflow = styled(IdBadge)`\n  overflow: hidden;\n`;\n\nconst SidebarDropdownRoot = styled('div')`\n  position: relative;\n`;\n\n// So that long org names and user names do not overflow\nconst OrgAndUserWrapper = styled('div')`\n  overflow-x: hidden;\n  text-align: left;\n`;\nconst OrgOrUserName = styled(TextOverflow)`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.2;\n  font-weight: bold;\n  color: ${p => p.theme.white};\n  text-shadow: 0 0 6px rgba(255, 255, 255, 0);\n  transition: 0.15s text-shadow linear;\n`;\n\nconst UserNameOrEmail = styled(TextOverflow)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 16px;\n  transition: 0.15s color linear;\n`;\n\nconst SidebarDropdownActor = styled('button')`\n  display: flex;\n  align-items: flex-start;\n  cursor: pointer;\n  border: none;\n  padding: 0;\n  background: none;\n  width: 100%;\n\n  &:hover {\n    ${OrgOrUserName} {\n      text-shadow: 0 0 6px rgba(255, 255, 255, 0.1);\n    }\n    ${UserNameOrEmail} {\n      color: ${p => p.theme.white};\n    }\n  }\n`;\n\nconst StyledAvatar = styled(Avatar)<{collapsed: boolean}>`\n  margin: ${space(0.25)} 0;\n  margin-right: ${p => (p.collapsed ? '0' : space(1.5))};\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.08);\n  border-radius: 6px; /* Fixes background bleeding on corners */\n`;\n\nconst OrgAndUserMenu = styled('div')`\n  ${SidebarDropdownMenu};\n  top: 42px;\n  min-width: 180px;\n  z-index: ${p => p.theme.zIndex.orgAndUserMenu};\n`;\n\nconst StyledIconChevron = styled(IconChevron)`\n  margin-left: ${space(0.25)};\n`;\n","import {Fragment, useEffect} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {hideSidebar, showSidebar} from 'sentry/actionCreators/preferences';\nimport Feature from 'sentry/components/acl/feature';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {\n  IconChevron,\n  IconDashboard,\n  IconIssues,\n  IconLab,\n  IconLightning,\n  IconList,\n  IconPlay,\n  IconProject,\n  IconReleases,\n  IconSettings,\n  IconSiren,\n  IconSpan,\n  IconStats,\n  IconSupport,\n  IconTelescope,\n} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport HookStore from 'sentry/stores/hookStore';\nimport PreferencesStore from 'sentry/stores/preferencesStore';\nimport SidebarPanelStore from 'sentry/stores/sidebarPanelStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\nimport theme from 'sentry/utils/theme';\nimport useMedia from 'sentry/utils/useMedia';\n\nimport Broadcasts from './broadcasts';\nimport SidebarHelp from './help';\nimport OnboardingStatus from './onboardingStatus';\nimport ServiceIncidents from './serviceIncidents';\nimport SidebarDropdown from './sidebarDropdown';\nimport SidebarItem from './sidebarItem';\nimport {SidebarOrientation, SidebarPanelKey} from './types';\n\nconst SidebarOverride = HookOrDefault({\n  hookName: 'sidebar:item-override',\n  defaultComponent: ({children}) => <Fragment>{children({})}</Fragment>,\n});\n\ntype Props = {\n  location?: Location;\n  organization?: Organization;\n};\n\nfunction togglePanel(panel: SidebarPanelKey) {\n  SidebarPanelStore.togglePanel(panel);\n}\n\nfunction hidePanel() {\n  SidebarPanelStore.hidePanel();\n}\n\nfunction Sidebar({location, organization}: Props) {\n  const config = useLegacyStore(ConfigStore);\n  const preferences = useLegacyStore(PreferencesStore);\n  const activePanel = useLegacyStore(SidebarPanelStore);\n\n  const collapsed = !!preferences.collapsed;\n  const horizontal = useMedia(`(max-width: ${theme.breakpoints.medium})`);\n\n  const toggleCollapse = () => {\n    const action = collapsed ? showSidebar : hideSidebar;\n    action();\n  };\n\n  const bcl = document.body.classList;\n\n  // Close panel on any navigation\n  useEffect(() => void hidePanel(), [location?.pathname]);\n\n  // Add classname to body\n  useEffect(() => {\n    bcl.add('body-sidebar');\n    return () => bcl.remove('body-sidebar');\n  }, [bcl]);\n\n  // Add sidebar collapse classname to body\n  useEffect(() => {\n    if (collapsed) {\n      bcl.add('collapsed');\n    } else {\n      bcl.remove('collapsed');\n    }\n\n    return () => bcl.remove('collapsed');\n  }, [collapsed, bcl]);\n\n  // Trigger panels depending on the location hash\n  useEffect(() => {\n    if (location?.hash === '#welcome') {\n      togglePanel(SidebarPanelKey.OnboardingWizard);\n    }\n  }, [location?.hash]);\n\n  const hasPanel = !!activePanel;\n  const hasOrganization = !!organization;\n  const orientation: SidebarOrientation = horizontal ? 'top' : 'left';\n\n  const sidebarItemProps = {\n    orientation,\n    collapsed,\n    hasPanel,\n    organization,\n  };\n\n  const projects = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      index\n      icon={<IconProject size=\"md\" />}\n      label={<GuideAnchor target=\"projects\">{t('Projects')}</GuideAnchor>}\n      to={`/organizations/${organization.slug}/projects/`}\n      id=\"projects\"\n    />\n  );\n\n  const issues = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconIssues size=\"md\" />}\n      label={<GuideAnchor target=\"issues\">{t('Issues')}</GuideAnchor>}\n      to={`/organizations/${organization.slug}/issues/`}\n      id=\"issues\"\n    />\n  );\n\n  const discover2 = hasOrganization && (\n    <Feature\n      hookName=\"feature-disabled:discover2-sidebar-item\"\n      features={['discover-basic']}\n      organization={organization}\n    >\n      <SidebarItem\n        {...sidebarItemProps}\n        icon={<IconTelescope size=\"md\" />}\n        label={<GuideAnchor target=\"discover\">{t('Discover')}</GuideAnchor>}\n        to={getDiscoverLandingUrl(organization)}\n        id=\"discover-v2\"\n      />\n    </Feature>\n  );\n\n  const performance = hasOrganization && (\n    <Feature\n      hookName=\"feature-disabled:performance-sidebar-item\"\n      features={['performance-view']}\n      organization={organization}\n    >\n      <SidebarOverride id=\"performance-override\">\n        {(overideProps: Partial<React.ComponentProps<typeof SidebarItem>>) => (\n          <SidebarItem\n            {...sidebarItemProps}\n            icon={<IconLightning size=\"md\" />}\n            label={<GuideAnchor target=\"performance\">{t('Performance')}</GuideAnchor>}\n            to={`/organizations/${organization.slug}/performance/`}\n            id=\"performance\"\n            {...overideProps}\n          />\n        )}\n      </SidebarOverride>\n    </Feature>\n  );\n\n  const releases = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconReleases size=\"md\" />}\n      label={<GuideAnchor target=\"releases\">{t('Releases')}</GuideAnchor>}\n      to={`/organizations/${organization.slug}/releases/`}\n      id=\"releases\"\n    />\n  );\n\n  const userFeedback = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconSupport size=\"md\" />}\n      label={t('User Feedback')}\n      to={`/organizations/${organization.slug}/user-feedback/`}\n      id=\"user-feedback\"\n    />\n  );\n\n  const alerts = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconSiren size=\"md\" />}\n      label={t('Alerts')}\n      to={`/organizations/${organization.slug}/alerts/rules/`}\n      id=\"alerts\"\n    />\n  );\n\n  const monitors = hasOrganization && (\n    <Feature features={['monitors']} organization={organization}>\n      <SidebarItem\n        {...sidebarItemProps}\n        icon={<IconLab size=\"md\" />}\n        label={t('Monitors')}\n        to={`/organizations/${organization.slug}/monitors/`}\n        id=\"monitors\"\n      />\n    </Feature>\n  );\n\n  const replays = hasOrganization && (\n    <Feature features={['session-replay']} organization={organization}>\n      <SidebarItem\n        {...sidebarItemProps}\n        icon={<IconPlay size=\"md\" />}\n        label={t('Replays')}\n        to={`/organizations/${organization.slug}/replays/`}\n        id=\"replays\"\n      />\n    </Feature>\n  );\n\n  const dashboards = hasOrganization && (\n    <Feature\n      hookName=\"feature-disabled:dashboards-sidebar-item\"\n      features={['discover', 'discover-query', 'dashboards-basic', 'dashboards-edit']}\n      organization={organization}\n      requireAll={false}\n    >\n      <SidebarItem\n        {...sidebarItemProps}\n        index\n        icon={<IconDashboard size=\"md\" />}\n        label={t('Dashboards')}\n        to={`/organizations/${organization.slug}/dashboards/`}\n        id=\"customizable-dashboards\"\n      />\n    </Feature>\n  );\n\n  const profiling = hasOrganization && (\n    <Feature\n      hookName=\"feature-disabled:profiling-sidebar-item\"\n      features={['profiling']}\n      organization={organization}\n      requireAll={false}\n    >\n      <SidebarItem\n        {...sidebarItemProps}\n        index\n        icon={<IconSpan size=\"md\" />}\n        label={t('Profiling')}\n        to={`/organizations/${organization.slug}/profiling/`}\n        id=\"profiling\"\n      />\n    </Feature>\n  );\n\n  const activity = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconList size=\"md\" />}\n      label={t('Activity')}\n      to={`/organizations/${organization.slug}/activity/`}\n      id=\"activity\"\n    />\n  );\n\n  const stats = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconStats size=\"md\" />}\n      label={t('Stats')}\n      to={`/organizations/${organization.slug}/stats/`}\n      id=\"stats\"\n    />\n  );\n\n  const settings = hasOrganization && (\n    <SidebarItem\n      {...sidebarItemProps}\n      icon={<IconSettings size=\"md\" />}\n      label={t('Settings')}\n      to={`/settings/${organization.slug}/`}\n      id=\"settings\"\n    />\n  );\n\n  return (\n    <SidebarWrapper collapsed={collapsed}>\n      <SidebarSectionGroupPrimary>\n        <SidebarSection>\n          <SidebarDropdown\n            orientation={orientation}\n            collapsed={collapsed}\n            org={organization}\n            user={config.user}\n            config={config}\n          />\n        </SidebarSection>\n\n        <PrimaryItems>\n          {hasOrganization && (\n            <Fragment>\n              <SidebarSection>\n                {projects}\n                {issues}\n                {performance}\n                {releases}\n                {userFeedback}\n                {alerts}\n                {discover2}\n                {dashboards}\n                {profiling}\n              </SidebarSection>\n\n              <SidebarSection>\n                {replays}\n                {monitors}\n              </SidebarSection>\n\n              <SidebarSection>\n                {activity}\n                {stats}\n              </SidebarSection>\n\n              <SidebarSection>{settings}</SidebarSection>\n            </Fragment>\n          )}\n        </PrimaryItems>\n      </SidebarSectionGroupPrimary>\n\n      {hasOrganization && (\n        <SidebarSectionGroup>\n          <SidebarSection noMargin noPadding>\n            <OnboardingStatus\n              org={organization}\n              currentPanel={activePanel}\n              onShowPanel={() => togglePanel(SidebarPanelKey.OnboardingWizard)}\n              hidePanel={hidePanel}\n              {...sidebarItemProps}\n            />\n          </SidebarSection>\n\n          <SidebarSection>\n            {HookStore.get('sidebar:bottom-items').length > 0 &&\n              HookStore.get('sidebar:bottom-items')[0]({\n                orientation,\n                collapsed,\n                hasPanel,\n                organization,\n              })}\n            <SidebarHelp\n              orientation={orientation}\n              collapsed={collapsed}\n              hidePanel={hidePanel}\n              organization={organization}\n            />\n            <Broadcasts\n              orientation={orientation}\n              collapsed={collapsed}\n              currentPanel={activePanel}\n              onShowPanel={() => togglePanel(SidebarPanelKey.Broadcasts)}\n              hidePanel={hidePanel}\n              organization={organization}\n            />\n            <ServiceIncidents\n              orientation={orientation}\n              collapsed={collapsed}\n              currentPanel={activePanel}\n              onShowPanel={() => togglePanel(SidebarPanelKey.ServiceIncidents)}\n              hidePanel={hidePanel}\n            />\n          </SidebarSection>\n\n          {!horizontal && (\n            <SidebarSection>\n              <SidebarCollapseItem\n                id=\"collapse\"\n                data-test-id=\"sidebar-collapse\"\n                {...sidebarItemProps}\n                icon={<StyledIconChevron collapsed={collapsed} />}\n                label={collapsed ? t('Expand') : t('Collapse')}\n                onClick={toggleCollapse}\n              />\n            </SidebarSection>\n          )}\n        </SidebarSectionGroup>\n      )}\n    </SidebarWrapper>\n  );\n}\n\nexport default Sidebar;\n\nconst responsiveFlex = css`\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${theme.breakpoints.medium}) {\n    flex-direction: row;\n  }\n`;\n\nexport const SidebarWrapper = styled('nav')<{collapsed: boolean}>`\n  background: ${p => p.theme.sidebarGradient};\n  color: ${p => p.theme.sidebar.color};\n  line-height: 1;\n  padding: 12px 0 2px; /* Allows for 32px avatars  */\n  width: ${p => p.theme.sidebar[p.collapsed ? 'collapsedWidth' : 'expandedWidth']};\n  position: fixed;\n  top: ${p => (ConfigStore.get('demoMode') ? p.theme.demo.headerSize : 0)};\n  left: 0;\n  bottom: 0;\n  justify-content: space-between;\n  z-index: ${p => p.theme.zIndex.sidebar};\n  border-right: solid 1px ${p => p.theme.sidebarBorder};\n  ${responsiveFlex};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    top: 0;\n    left: 0;\n    right: 0;\n    height: ${p => p.theme.sidebar.mobileHeight};\n    bottom: auto;\n    width: auto;\n    padding: 0 ${space(1)};\n    align-items: center;\n    border-right: none;\n    border-bottom: solid 1px ${p => p.theme.sidebarBorder};\n  }\n`;\n\nconst SidebarSectionGroup = styled('div')`\n  ${responsiveFlex};\n  flex-shrink: 0; /* prevents shrinking on Safari */\n`;\n\nconst SidebarSectionGroupPrimary = styled('div')`\n  ${responsiveFlex};\n  /* necessary for child flexing on msedge and ff */\n  min-height: 0;\n  min-width: 0;\n  flex: 1;\n  /* expand to fill the entire height on mobile */\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    height: 100%;\n    align-items: center;\n  }\n`;\n\nconst PrimaryItems = styled('div')`\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  @media (max-height: 675px) and (min-width: ${p => p.theme.breakpoints.medium}) {\n    border-bottom: 1px solid ${p => p.theme.gray400};\n    padding-bottom: ${space(1)};\n    box-shadow: rgba(0, 0, 0, 0.15) 0px -10px 10px inset;\n    &::-webkit-scrollbar {\n      background-color: transparent;\n      width: 8px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: ${p => p.theme.gray400};\n      border-radius: 8px;\n    }\n  }\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    overflow-y: visible;\n    flex-direction: row;\n    height: 100%;\n    align-items: center;\n    border-right: 1px solid ${p => p.theme.gray400};\n    padding-right: ${space(1)};\n    margin-right: ${space(0.5)};\n    box-shadow: rgba(0, 0, 0, 0.15) -10px 0px 10px inset;\n    ::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nconst SidebarSection = styled(SidebarSectionGroup)<{\n  noMargin?: boolean;\n  noPadding?: boolean;\n}>`\n  ${p => !p.noMargin && `margin: ${space(1)} 0`};\n  ${p => !p.noPadding && 'padding: 0 19px'};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin: 0;\n    padding: 0;\n  }\n\n  &:empty {\n    display: none;\n  }\n`;\n\nconst ExpandedIcon = css`\n  transition: 0.3s transform ease;\n  transform: rotate(270deg);\n`;\nconst CollapsedIcon = css`\n  transform: rotate(90deg);\n`;\nconst StyledIconChevron = styled(({collapsed, ...props}) => (\n  <IconChevron\n    direction=\"left\"\n    size=\"md\"\n    isCircled\n    css={[ExpandedIcon, collapsed && CollapsedIcon]}\n    {...props}\n  />\n))``;\n\nconst SidebarCollapseItem = styled(SidebarItem)`\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: none;\n  }\n`;\n","import {Component, Fragment} from 'react';\nimport {PlainRoute, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {openSudo} from 'sentry/actionCreators/modal';\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organization';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingTriangle from 'sentry/components/loadingTriangle';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport Sidebar from 'sentry/components/sidebar';\nimport {ORGANIZATION_FETCH_ERROR_TYPES} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport SentryTypes from 'sentry/sentryTypes';\nimport ConfigStore from 'sentry/stores/configStore';\nimport HookStore from 'sentry/stores/hookStore';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {metric} from 'sentry/utils/analytics';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganizations from 'sentry/utils/withOrganizations';\n\nimport {OrganizationContext} from './organizationContext';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  api: Client;\n  includeSidebar: boolean;\n  organizations: Organization[];\n  organizationsLoading: boolean;\n  routes: PlainRoute[];\n  useLastOrganization: boolean;\n};\n\ntype State = {\n  loading: boolean;\n  organization: Organization | null;\n  prevProps: {\n    location: RouteComponentProps<{orgId: string}, {}>['location'];\n    orgId: string;\n    organizationsLoading: boolean;\n  };\n  dirty?: boolean;\n  error?: RequestError | null;\n  errorType?: string | null;\n  hooks?: React.ReactNode[];\n};\n\nclass OrganizationContextContainer extends Component<Props, State> {\n  static getDerivedStateFromProps(props: Readonly<Props>, prevState: State): State {\n    const {prevProps} = prevState;\n\n    if (OrganizationContextContainer.shouldRemount(prevProps, props)) {\n      return OrganizationContextContainer.getDefaultState(props);\n    }\n\n    const {organizationsLoading, location, params} = props;\n    const {orgId} = params;\n    return {\n      ...prevState,\n      prevProps: {\n        orgId,\n        organizationsLoading,\n        location,\n      },\n    };\n  }\n\n  static shouldRemount(prevProps: State['prevProps'], props: Props): boolean {\n    const hasOrgIdAndChanged =\n      prevProps.orgId && props.params.orgId && prevProps.orgId !== props.params.orgId;\n\n    const hasOrgId =\n      props.params.orgId ||\n      (props.useLastOrganization && ConfigStore.get('lastOrganization'));\n\n    // protect against the case where we finish fetching org details\n    // and then `OrganizationsStore` finishes loading:\n    // only fetch in the case where we don't have an orgId\n    //\n    // Compare `getOrganizationSlug`  because we may have a last used org from server\n    // if there is no orgId in the URL\n    const organizationLoadingChanged =\n      prevProps.organizationsLoading !== props.organizationsLoading &&\n      props.organizationsLoading === false;\n\n    return (\n      hasOrgIdAndChanged ||\n      (!hasOrgId && organizationLoadingChanged) ||\n      (props.location.state === 'refresh' && prevProps.location.state !== 'refresh')\n    );\n  }\n\n  static getDefaultState(props: Props): State {\n    const prevProps = {\n      orgId: props.params.orgId,\n      organizationsLoading: props.organizationsLoading,\n      location: props.location,\n    };\n\n    if (OrganizationContextContainer.isOrgStorePopulatedCorrectly(props)) {\n      // retrieve initial state from store\n      return {\n        ...OrganizationStore.get(),\n        prevProps,\n      };\n    }\n\n    return {\n      loading: true,\n      error: null,\n      errorType: null,\n      organization: null,\n      prevProps,\n    };\n  }\n\n  static getOrganizationSlug(props: Props) {\n    return (\n      props.params.orgId ||\n      ((props.useLastOrganization &&\n        (ConfigStore.get('lastOrganization') ||\n          props.organizations?.[0]?.slug)) as string)\n    );\n  }\n\n  static isOrgChanging(props: Props): boolean {\n    const {organization} = OrganizationStore.get();\n\n    if (!organization) {\n      return false;\n    }\n\n    return organization.slug !== OrganizationContextContainer.getOrganizationSlug(props);\n  }\n\n  static isOrgStorePopulatedCorrectly(props: Props) {\n    const {organization, dirty} = OrganizationStore.get();\n\n    return !dirty && organization && !OrganizationContextContainer.isOrgChanging(props);\n  }\n\n  static childContextTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = OrganizationContextContainer.getDefaultState(props);\n  }\n\n  getChildContext() {\n    return {\n      organization: this.state.organization,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData(true);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const remountPrevProps: State['prevProps'] = {\n      orgId: prevProps.params.orgId,\n      organizationsLoading: prevProps.organizationsLoading,\n      location: prevProps.location,\n    };\n\n    if (OrganizationContextContainer.shouldRemount(remountPrevProps, this.props)) {\n      this.remountComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unlisteners.forEach(callIfFunction);\n  }\n\n  unlisteners = [\n    ProjectActions.createSuccess.listen(() => this.onProjectCreation(), undefined),\n    OrganizationStore.listen(data => this.loadOrganization(data), undefined),\n  ];\n\n  remountComponent = () => {\n    this.setState(\n      OrganizationContextContainer.getDefaultState(this.props),\n      this.fetchData\n    );\n  };\n\n  onProjectCreation() {\n    // If a new project was created, we need to re-fetch the\n    // org details endpoint, which will propagate re-rendering\n    // for the entire component tree\n    fetchOrganizationDetails(\n      this.props.api,\n      OrganizationContextContainer.getOrganizationSlug(this.props),\n      true,\n      false\n    );\n  }\n\n  isLoading() {\n    // In the absence of an organization slug, the loading state should be\n    // derived from this.props.organizationsLoading from OrganizationsStore\n    if (!OrganizationContextContainer.getOrganizationSlug(this.props)) {\n      return this.props.organizationsLoading;\n    }\n\n    return this.state.loading;\n  }\n\n  fetchData(isInitialFetch = false) {\n    if (!OrganizationContextContainer.getOrganizationSlug(this.props)) {\n      return;\n    }\n    // fetch from the store, then fetch from the API if necessary\n    if (OrganizationContextContainer.isOrgStorePopulatedCorrectly(this.props)) {\n      return;\n    }\n\n    metric.mark({name: 'organization-details-fetch-start'});\n    fetchOrganizationDetails(\n      this.props.api,\n      OrganizationContextContainer.getOrganizationSlug(this.props),\n      !OrganizationContextContainer.isOrgChanging(this.props), // if true, will preserve a lightweight org that was fetched,\n      isInitialFetch\n    );\n  }\n\n  loadOrganization(orgData: State) {\n    const {organization, error} = orgData;\n    const hooks: React.ReactNode[] = [];\n\n    if (organization && !error) {\n      HookStore.get('organization:header').forEach(cb => {\n        hooks.push(cb(organization));\n      });\n\n      // Configure scope to have organization tag\n      Sentry.configureScope(scope => {\n        // XXX(dcramer): this is duplicated in sdk.py on the backend\n        scope.setTag('organization', organization.id);\n        scope.setTag('organization.slug', organization.slug);\n        scope.setContext('organization', {id: organization.id, slug: organization.slug});\n      });\n    } else if (error) {\n      // If user is superuser, open sudo window\n      const user = ConfigStore.get('user');\n      if (!user || !user.isSuperuser || error.status !== 403) {\n        // This `catch` can swallow up errors in development (and tests)\n        // So let's log them. This may create some noise, especially the test case where\n        // we specifically test this branch\n        console.error(error); // eslint-disable-line no-console\n      } else {\n        openSudo({\n          retryRequest: () => Promise.resolve(this.fetchData()),\n          isSuperuser: true,\n          needsReload: true,\n        });\n      }\n    }\n\n    this.setState({...orgData, hooks}, () => {\n      // Take a measurement for when organization details are done loading and the new state is applied\n      if (organization) {\n        metric.measure({\n          name: 'app.component.perf',\n          start: 'organization-details-fetch-start',\n          data: {\n            name: 'org-details',\n            route: getRouteStringFromRoutes(this.props.routes),\n            organization_id: parseInt(organization.id, 10),\n          },\n        });\n      }\n    });\n  }\n\n  getOrganizationDetailsEndpoint() {\n    return `/organizations/${OrganizationContextContainer.getOrganizationSlug(\n      this.props\n    )}/`;\n  }\n\n  getTitle() {\n    return this.state.organization?.name ?? 'Sentry';\n  }\n\n  renderSidebar(): React.ReactNode {\n    if (!this.props.includeSidebar) {\n      return null;\n    }\n\n    const {children: _, ...props} = this.props;\n    return <Sidebar {...props} organization={this.state.organization as Organization} />;\n  }\n\n  renderError() {\n    let errorComponent: React.ReactElement;\n\n    switch (this.state.errorType) {\n      case ORGANIZATION_FETCH_ERROR_TYPES.ORG_NO_ACCESS:\n        // We can still render when an org can't be loaded due to 401. The\n        // backend will handle redirects when this is a problem.\n        return this.renderBody();\n      case ORGANIZATION_FETCH_ERROR_TYPES.ORG_NOT_FOUND:\n        errorComponent = (\n          <Alert type=\"error\">\n            {t('The organization you were looking for was not found.')}\n          </Alert>\n        );\n        break;\n      default:\n        errorComponent = <LoadingError onRetry={this.remountComponent} />;\n    }\n\n    return <ErrorWrapper>{errorComponent}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <SentryDocumentTitle noSuffix title={this.getTitle()}>\n        <OrganizationContext.Provider value={this.state.organization}>\n          <div className=\"app\">\n            {this.state.hooks}\n            {this.renderSidebar()}\n            {this.props.children}\n          </div>\n        </OrganizationContext.Provider>\n      </SentryDocumentTitle>\n    );\n  }\n\n  render() {\n    if (this.isLoading()) {\n      return (\n        <LoadingTriangle>{t('Loading data for your organization.')}</LoadingTriangle>\n      );\n    }\n\n    if (this.state.error) {\n      return (\n        <Fragment>\n          {this.renderSidebar()}\n          {this.renderError()}\n        </Fragment>\n      );\n    }\n\n    return this.renderBody();\n  }\n}\n\nexport default withApi(\n  withOrganizations(Sentry.withProfiler(OrganizationContextContainer))\n);\n\nexport {OrganizationContextContainer as OrganizationLegacyContext, OrganizationContext};\n\nconst ErrorWrapper = styled('div')`\n  padding: ${space(3)};\n`;\n","import {Fragment, useState} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport Footer from 'sentry/components/footer';\nimport {Body, Main} from 'sentry/components/layouts/thirds';\nimport {t, tct} from 'sentry/locale';\nimport AlertStore from 'sentry/stores/alertStore';\nimport {Organization} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\nfunction DeletionInProgress({organization}: Props) {\n  return (\n    <Body>\n      <Main>\n        <Alert type=\"warning\" showIcon>\n          {tct(\n            'The [organization] organization is currently in the process of being deleted from Sentry.',\n            {\n              organization: <strong>{organization.slug}</strong>,\n            }\n          )}\n        </Alert>\n      </Main>\n    </Body>\n  );\n}\n\nfunction DeletionPending({organization}: Props) {\n  const api = useApi();\n  const [isRestoring, setIsRestoring] = useState(false);\n\n  const onRestore = async () => {\n    setIsRestoring(true);\n\n    try {\n      await api.requestPromise(`/organizations/${organization.slug}/`, {\n        method: 'PUT',\n        data: {cancelDeletion: true},\n      });\n      window.location.reload();\n    } catch {\n      setIsRestoring(false);\n      AlertStore.addAlert({\n        message:\n          'We were unable to restore this organization. Please try again or contact support.',\n        type: 'error',\n      });\n    }\n  };\n\n  return (\n    <Body>\n      <Main>\n        <h3>{t('Deletion Scheduled')}</h3>\n        <p>\n          {tct('The [organization] organization is currently scheduled for deletion.', {\n            organization: <strong>{organization.slug}</strong>,\n          })}\n        </p>\n\n        {organization.access.includes('org:admin') ? (\n          <div>\n            <p>\n              {t(\n                'Would you like to cancel this process and restore the organization back to the original state?'\n              )}\n            </p>\n            <p>\n              <Button priority=\"primary\" onClick={onRestore} disabled={isRestoring}>\n                {t('Restore Organization')}\n              </Button>\n            </p>\n          </div>\n        ) : (\n          <p>\n            {t(\n              'If this is a mistake, contact an organization owner and ask them to restore this organization.'\n            )}\n          </p>\n        )}\n        <p>\n          <small>\n            {t(\n              \"Note: Restoration is available until the process begins. Once it does, there's no recovering the data that has been removed.\"\n            )}\n          </small>\n        </p>\n      </Main>\n    </Body>\n  );\n}\n\nfunction OrganizationDetailsBody({children, organization}: Props) {\n  const status = organization?.status?.id;\n\n  if (status === 'pending_deletion') {\n    return <DeletionPending organization={organization} />;\n  }\n\n  if (status === 'deletion_in_progress') {\n    return <DeletionInProgress organization={organization} />;\n  }\n\n  return (\n    <Fragment>\n      <ErrorBoundary>{children}</ErrorBoundary>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default withOrganization(OrganizationDetailsBody);\n","import {useEffect, useRef} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {switchOrganization} from 'sentry/actionCreators/organizations';\nimport OrganizationContextContainer from 'sentry/views/organizationContextContainer';\n\nimport Body from './body';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> &\n  Partial<React.ComponentProps<typeof OrganizationContextContainer>>;\n\nfunction OrganizationDetails({children, ...props}: Props) {\n  // Switch organizations when the orgId changes\n  const orgId = useRef(props.params.orgId);\n  useEffect(() => {\n    if (props.params.orgId && orgId.current !== props.params.orgId) {\n      // Only switch on: org1 -> org2\n      // Not on: undefined -> org1\n      // Also avoid: org1 -> undefined -> org1\n      if (orgId.current) {\n        switchOrganization();\n      }\n\n      orgId.current = props.params.orgId;\n    }\n  }, [props.params.orgId]);\n\n  return (\n    <OrganizationContextContainer includeSidebar useLastOrganization {...props}>\n      <Body>{children}</Body>\n    </OrganizationContextContainer>\n  );\n}\n\nexport default OrganizationDetails;\n","import {Fragment, useEffect} from 'react';\n\nimport {setActiveProject} from 'sentry/actionCreators/projects';\n\ntype Props = {children: React.ReactChildren};\n\n/**\n * This is the parent container for organization-level views such\n * as the Dashboard, Stats, Activity, etc...\n *\n * Currently is just used to unset active project\n */\nfunction OrganizationRoot({children}: Props) {\n  useEffect(() => void setActiveProject(null), []);\n\n  return <Fragment>{children}</Fragment>;\n}\n\nexport default OrganizationRoot;\n","import {useEffect, useState} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport DetailedError from 'sentry/components/errors/detailedError';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\n\ntype Props = RouteComponentProps<{}, {}>;\n\n/**\n * This component performs a client-side redirect to Event Details given only\n * an event ID (which normally additionally requires the event's Issue/Group ID).\n * It does this by using an XHR against the identically-named ProjectEventRedirect\n * _Django_ view, which responds with a 302 with the Location of the corresponding\n * Event Details page (if it exists).\n *\n * See:\n * https://github.com/getsentry/sentry/blob/824c03089907ad22a9282303a5eaca33989ce481/src/sentry/web/urls.py#L578\n */\nfunction ProjectEventRedirect({router}: Props) {\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // This presumes that _this_ React view/route is only reachable at\n    // /:org/:project/events/:eventId (the same URL which serves the ProjectEventRedirect\n    // Django view).\n    const endpoint = router.location.pathname;\n\n    // Use XmlHttpRequest directly instead of our client API helper (fetch),\n    // because you can't reach the underlying XHR via $.ajax, and we need\n    // access to `xhr.responseURL`.\n    //\n    // TODO(epurkhiser): We can likely replace tihs with fetch\n    const xhr = new XMLHttpRequest();\n\n    // Hitting this endpoint will return a 302 with a new location, which\n    // the XHR will follow and make a _second_ request. Using HEAD instead\n    // of GET returns an empty response instead of the entire HTML content.\n    xhr.open('HEAD', endpoint);\n    xhr.send();\n\n    xhr.onload = () => {\n      if (xhr.status === 404) {\n        setError(t('Could not find an issue for the provided event id'));\n        return;\n      }\n      // responseURL is the URL of the document the browser ultimately loaded,\n      // after following any redirects. It _should_ be the page we're trying\n      // to reach; use the router to go there.\n\n      // Use `replace` so that hitting the browser back button will skip all\n      // this redirect business.\n      router.replace(xhr.responseURL);\n    };\n    xhr.onerror = () => {\n      setError(t('Could not load the requested event'));\n    };\n  });\n\n  return error ? (\n    <DetailedError heading={t('Not found')} message={error} hideSupportLinks />\n  ) : (\n    <PageContent />\n  );\n}\n\nexport default ProjectEventRedirect;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isString from 'lodash/isString';\n\nimport {Client, ResponseMeta} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport Redirect from 'sentry/utils/redirect';\nimport withApi from 'sentry/utils/withApi';\n\ntype DetailsProps = {\n  api: Client;\n  children: (props: ChildProps) => React.ReactNode;\n  orgId: string;\n  projectSlug: string;\n};\n\ntype DetailsState = {\n  error: null | ResponseMeta;\n  loading: boolean;\n  project: null | Project;\n};\n\ntype ChildProps = DetailsState & {\n  hasProjectId: boolean;\n  organizationId: null | string;\n  projectId: null | string;\n};\n\nclass ProjectDetailsInner extends Component<DetailsProps, DetailsState> {\n  state: DetailsState = {\n    loading: true,\n    error: null,\n    project: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({\n      loading: true,\n      error: null,\n    });\n\n    const {orgId, projectSlug} = this.props;\n\n    try {\n      const project = await this.props.api.requestPromise(\n        `/projects/${orgId}/${projectSlug}/`\n      );\n\n      this.setState({\n        loading: false,\n        error: null,\n        project,\n      });\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error,\n        project: null,\n      });\n    }\n  };\n\n  getProjectId() {\n    if (this.state.project) {\n      return this.state.project.id;\n    }\n    return null;\n  }\n\n  hasProjectId() {\n    const projectID = this.getProjectId();\n    return isString(projectID) && projectID.length > 0;\n  }\n\n  getOrganizationId() {\n    if (this.state.project) {\n      return this.state.project.organization.id;\n    }\n    return null;\n  }\n\n  render() {\n    const childrenProps: ChildProps = {\n      ...this.state,\n      projectId: this.getProjectId(),\n      hasProjectId: this.hasProjectId(),\n      organizationId: this.getOrganizationId(),\n    };\n\n    return this.props.children(childrenProps);\n  }\n}\n\nconst ProjectDetails = withApi(ProjectDetailsInner);\n\ntype Params = {orgId: string; projectId: string} & Record<string, any>;\n\ntype Props = RouteComponentProps<Params, {}>;\n\ntype RedirectOptions = {\n  orgId: string;\n  projectId: null | string;\n  router: {\n    params: Params;\n  };\n};\n\ntype RedirectCallback = (options: RedirectOptions) => string;\n\nconst redirectDeprecatedProjectRoute =\n  (generateRedirectRoute: RedirectCallback) =>\n  ({params, router, routes}: Props) => {\n    // TODO(epurkhiser): The way this function get's called as a side-effect of\n    // the render is pretty janky and incorrect... we should fix it.\n    function trackRedirect(organizationId: string, nextRoute: string) {\n      const payload = {\n        feature: 'global_views',\n        url: getRouteStringFromRoutes(routes), // the URL being redirected from\n        org_id: parseInt(organizationId, 10),\n      };\n\n      // track redirects of deprecated URLs for analytics\n      analytics('deprecated_urls.redirect', payload);\n\n      return nextRoute;\n    }\n\n    const {orgId} = params;\n\n    return (\n      <Wrapper>\n        <ProjectDetails orgId={orgId} projectSlug={params.projectId}>\n          {({loading, error, hasProjectId, projectId, organizationId}) => {\n            if (loading) {\n              return <LoadingIndicator />;\n            }\n\n            if (!hasProjectId || !organizationId) {\n              if (error && error.status === 404) {\n                return (\n                  <Alert type=\"error\">\n                    {t('The project you were looking for was not found.')}\n                  </Alert>\n                );\n              }\n\n              return <LoadingError />;\n            }\n\n            const routeProps: RedirectOptions = {\n              orgId,\n              projectId,\n              router: {params},\n            };\n\n            return (\n              <Redirect\n                router={router}\n                to={trackRedirect(organizationId, generateRedirectRoute(routeProps))}\n              />\n            );\n          }}\n        </ProjectDetails>\n      </Wrapper>\n    );\n  };\n\nexport default redirectDeprecatedProjectRoute;\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  padding: ${space(3)};\n`;\n","import {useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport NotFound from 'sentry/components/errors/notFound';\nimport Footer from 'sentry/components/footer';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport Sidebar from 'sentry/components/sidebar';\nimport {t} from 'sentry/locale';\n\ntype Props = RouteComponentProps<{}, {}>;\n\nfunction RouteNotFound({router, location}: Props) {\n  const {pathname, search, hash} = location;\n\n  const isMissingSlash = pathname[pathname.length - 1] !== '/';\n\n  useEffect(() => {\n    // Attempt to fix trailing slashes first\n    if (isMissingSlash) {\n      router.replace(`${pathname}/${search}${hash}`);\n      return;\n    }\n\n    Sentry.withScope(scope => {\n      scope.setFingerprint(['RouteNotFound']);\n      Sentry.captureException(new Error('Route not found'));\n    });\n  }, [pathname, search, hash, isMissingSlash, router]);\n\n  if (isMissingSlash) {\n    return null;\n  }\n\n  return (\n    <SentryDocumentTitle title={t('Page Not Found')}>\n      <div className=\"app\">\n        <Sidebar location={location} />\n        <div className=\"container\">\n          <div className=\"content\">\n            <section className=\"body\">\n              <NotFound />\n            </section>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default RouteNotFound;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport useScrollToTop from 'sentry/utils/useScrollToTop';\n\ntype Props = {\n  children: React.ReactChildren;\n  location: Location;\n};\n\nfunction scrollDisable(newLocation: Location, prevLocation: Location) {\n  return newLocation.pathname === prevLocation.pathname;\n}\n\nfunction SettingsWrapper({location, children}: Props) {\n  useScrollToTop({location, disable: scrollDisable});\n\n  return <StyledSettingsWrapper>{children}</StyledSettingsWrapper>;\n}\n\nexport default SettingsWrapper;\n\nconst StyledSettingsWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: ${p => p.theme.text.lineHeightBody};\n  color: ${p => p.theme.textColor};\n\n  .messages-container {\n    margin: 0;\n  }\n`;\n","import {Fragment} from 'react';\nimport {\n  IndexRedirect,\n  IndexRoute as BaseIndexRoute,\n  IndexRouteProps,\n  Redirect,\n  Route as BaseRoute,\n  RouteProps,\n} from 'react-router';\nimport memoize from 'lodash/memoize';\n\nimport LazyLoad from 'sentry/components/lazyLoad';\nimport {EXPERIMENTAL_SPA} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName} from 'sentry/types/hooks';\nimport {SamplingRuleType} from 'sentry/types/sampling';\nimport errorHandler from 'sentry/utils/errorHandler';\nimport App from 'sentry/views/app';\nimport AuthLayout from 'sentry/views/auth/layout';\nimport IssueListContainer from 'sentry/views/issueList/container';\nimport IssueListOverview from 'sentry/views/issueList/overview';\nimport OrganizationContextContainer from 'sentry/views/organizationContextContainer';\nimport OrganizationDetails from 'sentry/views/organizationDetails';\nimport {Tab} from 'sentry/views/organizationGroupDetails/types';\nimport OrganizationRoot from 'sentry/views/organizationRoot';\nimport ProjectEventRedirect from 'sentry/views/projectEventRedirect';\nimport redirectDeprecatedProjectRoute from 'sentry/views/projects/redirectDeprecatedProjectRoute';\nimport RouteNotFound from 'sentry/views/routeNotFound';\nimport SettingsWrapper from 'sentry/views/settings/components/settingsWrapper';\n\ntype CustomProps = {\n  name?: string;\n};\n\n/**\n * We add some additional props to our routes\n */\n\nconst Route = BaseRoute as React.ComponentClass<RouteProps & CustomProps>;\nconst IndexRoute = BaseIndexRoute as React.ComponentClass<IndexRouteProps & CustomProps>;\n\nconst hook = (name: HookName) => HookStore.get(name).map(cb => cb());\n\nconst SafeLazyLoad = errorHandler(LazyLoad);\n\ntype PromisedImport<C> = Promise<{default: C}>;\ntype ComponentType = React.ComponentType<any>;\n\n// NOTE: makeLazyloadComponent is exported for use in the sentry.io (getsentry)\n// pirvate routing tree.\n\n/**\n * Factory function to produce a component that will render the SafeLazyLoad\n * _with_ the required props.\n */\nexport function makeLazyloadComponent<C extends ComponentType>(\n  resolve: () => PromisedImport<C>\n) {\n  // XXX: Assign the component to a variable so it has a displayname\n  const RouteLazyLoad: React.FC<React.ComponentProps<C>> = props => {\n    return <SafeLazyLoad {...props} component={resolve} />;\n  };\n\n  return RouteLazyLoad;\n}\n\n// Shorthand to avoid extra line wrapping\nconst make = makeLazyloadComponent;\n\nfunction buildRoutes() {\n  // Read this to understand where to add new routes, how / why the routing\n  // tree is structured the way it is, and how the lazy-loading /\n  // code-splitting works for pages.\n  //\n  // ## Formatting\n  //\n  // NOTE that there are intentionally NO blank lines within route tree blocks.\n  // This helps make it easier to navigate within the file by using your\n  // editors shortcuts to jump between 'paragraphs' of code.\n  //\n  // [!!] Do NOT add blank lines within route blocks to preserve this behavior!\n  //\n  //\n  // ## Lazy loading\n  //\n  // * The `SafeLazyLoad` component\n  //\n  //   Most routes are rendered as LazyLoad components (SafeLazyLoad is the\n  //   errorHandler wrapped version). This means the rendered component for the\n  //   route will only be loaded when the route is loaded. This helps us\n  //   \"code-split\" the app.\n  //\n  // ## Hooks\n  //\n  // There are a number of `hook()` routes placed within the routing tree to\n  // allow for additional routes to be augmented into the application via the\n  // hookStore mechanism.\n  //\n  //\n  // ## The structure\n  //\n  // * `experimentalSpaRoutes`\n  //\n  //   These routes are specifically for the experimental single-page-app mode,\n  //   where Sentry is run separate from Django. These are NOT part of the root\n  //   <App /> component.\n  //\n  //   Right now these are mainly used for authentication pages. In the future\n  //   they would be used for other pages like registration.\n  //\n  // * `rootRoutes`\n  //\n  //   These routes live directly under the <App /> container, and generally\n  //   are not specific to an organization.\n  //\n  // * `settingsRoutes`\n  //\n  //   This is the route tree for all of `/settings/`. This route tree is\n  //   composed of a few different sub-trees.\n  //\n  //   - `accountSettingsRoutes`    User specific settings\n  //   - `orgSettingsRoutes`        Specific to a organization\n  //   - `projectSettingsRoutes`    Specific to a project\n  //   - `legacySettingsRedirects`  Routes that used to exist in settings\n  //\n  // * `organizationRoutes`\n  //\n  //   This is where a majority of the app routes live. This is wrapped with\n  //   the <OrganizationDetails /> component, which provides the sidebar and\n  //   organization context.\n  //\n  //   Within these routes are a variety of subroutes. They are not all\n  //   listed here as the subroutes will be added and removed, and most are\n  //   self explanatory.\n  //\n  // * `legacyRedirectRoutes`\n  //\n  //   This route tree contains <Redirect /> routes for many old legacy paths.\n  //\n  //   You may also find <Redirect />'s collocated next to the feature routes\n  //   they have redirects for. A good rule here is to place 'helper' redirects\n  //   next to the routes they redirect to, and place 'legacy route' redirects\n  //   for routes that have completely changed in this tree.\n\n  const experimentalSpaRoutes = EXPERIMENTAL_SPA ? (\n    <Route path=\"/auth/login/\" component={errorHandler(AuthLayout)}>\n      <IndexRoute component={make(() => import('sentry/views/auth/login'))} />\n    </Route>\n  ) : null;\n\n  const rootRoutes = (\n    <Fragment>\n      <IndexRoute component={make(() => import('sentry/views/app/root'))} />\n      <Route\n        path=\"/accept/:memberId/:token/\"\n        component={make(() => import('sentry/views/acceptOrganizationInvite'))}\n      />\n      <Route\n        path=\"/accept-transfer/\"\n        component={make(() => import('sentry/views/acceptProjectTransfer'))}\n      />\n      <Route\n        path=\"/extensions/external-install/:integrationSlug/:installationId\"\n        component={make(() => import('sentry/views/integrationOrganizationLink'))}\n      />\n      <Route\n        path=\"/extensions/:integrationSlug/link/\"\n        component={make(() => import('sentry/views/integrationOrganizationLink'))}\n      />\n      <Route\n        path=\"/sentry-apps/:sentryAppSlug/external-install/\"\n        component={make(() => import('sentry/views/sentryAppExternalInstallation'))}\n      />\n      <Redirect from=\"/account/\" to=\"/settings/account/details/\" />\n      <Redirect from=\"/share/group/:shareId/\" to=\"/share/issue/:shareId/\" />\n      <Route\n        path=\"/share/issue/:shareId/\"\n        component={make(() => import('sentry/views/sharedGroupDetails'))}\n      />\n      <Route\n        path=\"/organizations/new/\"\n        component={make(() => import('sentry/views/organizationCreate'))}\n      />\n      <Route\n        path=\"/organizations/:orgId/data-export/:dataExportId\"\n        component={make(() => import('sentry/views/dataExport/dataDownload'))}\n      />\n      <Route\n        path=\"/organizations/:orgId/disabled-member/\"\n        component={make(() => import('sentry/views/disabledMember'))}\n      />\n      <Route\n        path=\"/join-request/:orgId/\"\n        component={make(() => import('sentry/views/organizationJoinRequest'))}\n      />\n      <Route\n        path=\"/onboarding/:orgId/\"\n        component={errorHandler(OrganizationContextContainer)}\n      >\n        <IndexRedirect to=\"welcome/\" />\n        <Route\n          path=\":step/\"\n          component={make(() => import('sentry/views/onboarding/onboardingController'))}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const accountSettingsRoutes = (\n    <Route\n      path=\"account/\"\n      name={t('Account')}\n      component={make(\n        () => import('sentry/views/settings/account/accountSettingsLayout')\n      )}\n    >\n      <IndexRedirect to=\"details/\" />\n      <Route\n        path=\"details/\"\n        name={t('Details')}\n        component={make(() => import('sentry/views/settings/account/accountDetails'))}\n      />\n      <Route path=\"notifications/\" name={t('Notifications')}>\n        <IndexRoute\n          component={make(\n            () =>\n              import('sentry/views/settings/account/notifications/notificationSettings')\n          )}\n        />\n        <Route\n          path=\":fineTuneType/\"\n          name={t('Fine Tune Alerts')}\n          component={make(\n            () => import('sentry/views/settings/account/accountNotificationFineTuning')\n          )}\n        />\n      </Route>\n      <Route\n        path=\"emails/\"\n        name={t('Emails')}\n        component={make(() => import('sentry/views/settings/account/accountEmails'))}\n      />\n      <Route\n        path=\"authorizations/\"\n        component={make(\n          () => import('sentry/views/settings/account/accountAuthorizations')\n        )}\n      />\n      <Route name={t('Security')} path=\"security/\">\n        <Route\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/account/accountSecurity/accountSecurityWrapper'\n              )\n          )}\n        >\n          <IndexRoute\n            component={make(\n              () => import('sentry/views/settings/account/accountSecurity')\n            )}\n          />\n          <Route\n            path=\"session-history/\"\n            name={t('Session History')}\n            component={make(\n              () => import('sentry/views/settings/account/accountSecurity/sessionHistory')\n            )}\n          />\n          <Route\n            path=\"mfa/:authId/\"\n            name={t('Details')}\n            component={make(\n              () =>\n                import(\n                  'sentry/views/settings/account/accountSecurity/accountSecurityDetails'\n                )\n            )}\n          />\n        </Route>\n        <Route\n          path=\"mfa/:authId/enroll/\"\n          name={t('Enroll')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/account/accountSecurity/accountSecurityEnroll'\n              )\n          )}\n        />\n      </Route>\n      <Route\n        path=\"subscriptions/\"\n        name={t('Subscriptions')}\n        component={make(\n          () => import('sentry/views/settings/account/accountSubscriptions')\n        )}\n      />\n      <Route\n        path=\"identities/\"\n        name={t('Identities')}\n        component={make(() => import('sentry/views/settings/account/accountIdentities'))}\n      />\n      <Route path=\"api/\" name={t('API')}>\n        <IndexRedirect to=\"auth-tokens/\" />\n        <Route path=\"auth-tokens/\" name={t('Auth Tokens')}>\n          <IndexRoute\n            component={make(() => import('sentry/views/settings/account/apiTokens'))}\n          />\n          <Route\n            path=\"new-token/\"\n            name={t('Create New Token')}\n            component={make(() => import('sentry/views/settings/account/apiNewToken'))}\n          />\n        </Route>\n        <Route path=\"applications/\" name={t('Applications')}>\n          <IndexRoute\n            component={make(\n              () => import('sentry/views/settings/account/apiApplications')\n            )}\n          />\n          <Route\n            path=\":appId/\"\n            name={t('Details')}\n            component={make(\n              () => import('sentry/views/settings/account/apiApplications/details')\n            )}\n          />\n        </Route>\n        {hook('routes:api')}\n      </Route>\n      <Route\n        path=\"close-account/\"\n        name={t('Close Account')}\n        component={make(() => import('sentry/views/settings/account/accountClose'))}\n      />\n    </Route>\n  );\n\n  const projectSettingsRoutes = (\n    <Route\n      path=\"projects/:projectId/\"\n      name={t('Project')}\n      component={make(\n        () => import('sentry/views/settings/project/projectSettingsLayout')\n      )}\n    >\n      <IndexRoute\n        name={t('General')}\n        component={make(() => import('sentry/views/settings/projectGeneralSettings'))}\n      />\n      <Route\n        path=\"teams/\"\n        name={t('Teams')}\n        component={make(() => import('sentry/views/settings/project/projectTeams'))}\n      />\n      <Route\n        path=\"alerts/\"\n        name={t('Alerts')}\n        component={make(() => import('sentry/views/settings/projectAlerts'))}\n      >\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/projectAlerts/settings'))}\n        />\n        <Redirect from=\"new/\" to=\"/organizations/:orgId/alerts/:projectId/new/\" />\n        <Redirect from=\"rules/\" to=\"/organizations/:orgId/alerts/rules/\" />\n        <Redirect from=\"rules/new/\" to=\"/organizations/:orgId/alerts/:projectId/new/\" />\n        <Redirect\n          from=\"metric-rules/new/\"\n          to=\"/organizations/:orgId/alerts/:projectId/new/\"\n        />\n        <Redirect\n          from=\"rules/:ruleId/\"\n          to=\"/organizations/:orgId/alerts/rules/:projectId/:ruleId/\"\n        />\n        <Redirect\n          from=\"metric-rules/:ruleId/\"\n          to=\"/organizations/:orgId/alerts/metric-rules/:projectId/:ruleId/\"\n        />\n      </Route>\n      <Route\n        path=\"environments/\"\n        name={t('Environments')}\n        component={make(\n          () => import('sentry/views/settings/project/projectEnvironments')\n        )}\n      >\n        <IndexRoute />\n        <Route path=\"hidden/\" />\n      </Route>\n      <Route\n        path=\"tags/\"\n        name={t('Tags')}\n        component={make(() => import('sentry/views/settings/projectTags'))}\n      />\n      <Redirect from=\"issue-tracking/\" to=\"/settings/:orgId/:projectId/plugins/\" />\n      <Route\n        path=\"release-tracking/\"\n        name={t('Release Tracking')}\n        component={make(\n          () => import('sentry/views/settings/project/projectReleaseTracking')\n        )}\n      />\n      <Route\n        path=\"ownership/\"\n        name={t('Issue Owners')}\n        component={make(() => import('sentry/views/settings/project/projectOwnership'))}\n      />\n      <Route\n        path=\"data-forwarding/\"\n        name={t('Data Forwarding')}\n        component={make(() => import('sentry/views/settings/projectDataForwarding'))}\n      />\n      <Route\n        path=\"security-and-privacy/\"\n        name={t('Security & Privacy')}\n        component={make(() => import('sentry/views/settings/projectSecurityAndPrivacy'))}\n      />\n      <Route\n        path=\"debug-symbols/\"\n        name={t('Debug Information Files')}\n        component={make(() => import('sentry/views/settings/projectDebugFiles'))}\n      />\n      <Route\n        path=\"proguard/\"\n        name={t('ProGuard Mappings')}\n        component={make(() => import('sentry/views/settings/projectProguard'))}\n      />\n      <Route\n        path=\"performance/\"\n        name={t('Performance')}\n        component={make(() => import('sentry/views/settings/projectPerformance'))}\n      />\n      <Route\n        path=\"source-maps/\"\n        name={t('Source Maps')}\n        component={make(() => import('sentry/views/settings/projectSourceMaps'))}\n      >\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/projectSourceMaps/list'))}\n        />\n        <Route\n          path=\":name/\"\n          name={t('Archive')}\n          component={make(() => import('sentry/views/settings/projectSourceMaps/detail'))}\n        />\n      </Route>\n      <Route\n        path=\"processing-issues/\"\n        name={t('Processing Issues')}\n        component={make(\n          () => import('sentry/views/settings/project/projectProcessingIssues')\n        )}\n      />\n      <Route\n        path=\"filters/\"\n        name={t('Inbound Filters')}\n        component={make(() => import('sentry/views/settings/project/projectFilters'))}\n      >\n        <IndexRedirect to=\"data-filters/\" />\n        <Route path=\":filterType/\" />\n      </Route>\n      <Route\n        path=\"sampling/\"\n        name={t('Sampling')}\n        component={make(() => import('sentry/views/settings/project/sampling'))}\n      >\n        <IndexRedirect to={`${SamplingRuleType.TRACE}/`} />\n        <Route path=\":ruleType/\" />\n      </Route>\n      <Route\n        path=\"issue-grouping/\"\n        name={t('Issue Grouping')}\n        component={make(() => import('sentry/views/settings/projectIssueGrouping'))}\n      />\n      <Route\n        path=\"hooks/\"\n        name={t('Service Hooks')}\n        component={make(\n          () => import('sentry/views/settings/project/projectServiceHooks')\n        )}\n      />\n      <Route\n        path=\"hooks/new/\"\n        name={t('Create Service Hook')}\n        component={make(\n          () => import('sentry/views/settings/project/projectCreateServiceHook')\n        )}\n      />\n      <Route\n        path=\"hooks/:hookId/\"\n        name={t('Service Hook Details')}\n        component={make(\n          () => import('sentry/views/settings/project/projectServiceHookDetails')\n        )}\n      />\n      <Route path=\"keys/\" name={t('Client Keys')}>\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/project/projectKeys/list'))}\n        />\n        <Route\n          path=\":keyId/\"\n          name={t('Details')}\n          component={make(\n            () => import('sentry/views/settings/project/projectKeys/details')\n          )}\n        />\n      </Route>\n      <Route\n        path=\"user-feedback/\"\n        name={t('User Feedback')}\n        component={make(\n          () => import('sentry/views/settings/project/projectUserFeedback')\n        )}\n      />\n      <Redirect from=\"csp/\" to=\"security-headers/\" />\n      <Route path=\"security-headers/\" name={t('Security Headers')}>\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/projectSecurityHeaders'))}\n        />\n        <Route\n          path=\"csp/\"\n          name={t('Content Security Policy')}\n          component={make(\n            () => import('sentry/views/settings/projectSecurityHeaders/csp')\n          )}\n        />\n        <Route\n          path=\"expect-ct/\"\n          name={t('Certificate Transparency')}\n          component={make(\n            () => import('sentry/views/settings/projectSecurityHeaders/expectCt')\n          )}\n        />\n        <Route\n          path=\"hpkp/\"\n          name={t('HPKP')}\n          component={make(\n            () => import('sentry/views/settings/projectSecurityHeaders/hpkp')\n          )}\n        />\n      </Route>\n      <Route path=\"plugins/\" name={t('Legacy Integrations')}>\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/projectPlugins'))}\n        />\n        <Route\n          path=\":pluginId/\"\n          name={t('Integration Details')}\n          component={make(() => import('sentry/views/settings/projectPlugins/details'))}\n        />\n      </Route>\n      <Route path=\"install/\" name={t('Configuration')}>\n        <IndexRoute\n          component={make(() => import('sentry/views/projectInstall/overview'))}\n        />\n        <Route\n          path=\":platform/\"\n          name={t('Docs')}\n          component={make(\n            () => import('sentry/views/projectInstall/platformOrIntegration')\n          )}\n        />\n      </Route>\n    </Route>\n  );\n\n  const orgSettingsRoutes = (\n    <Route\n      component={make(\n        () => import('sentry/views/settings/organization/organizationSettingsLayout')\n      )}\n    >\n      {hook('routes:organization')}\n      <IndexRoute\n        name={t('General')}\n        component={make(\n          () => import('sentry/views/settings/organizationGeneralSettings')\n        )}\n      />\n      <Route\n        path=\"projects/\"\n        name={t('Projects')}\n        component={make(() => import('sentry/views/settings/organizationProjects'))}\n      />\n      <Route path=\"api-keys/\" name={t('API Key')}>\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/organizationApiKeys'))}\n        />\n        <Route\n          path=\":apiKey/\"\n          name={t('Details')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationApiKeys/organizationApiKeyDetails'\n              )\n          )}\n        />\n      </Route>\n      <Route\n        path=\"audit-log/\"\n        name={t('Audit Log')}\n        component={make(() => import('sentry/views/settings/organizationAuditLog'))}\n      />\n      <Route\n        path=\"auth/\"\n        name={t('Auth Providers')}\n        component={make(() => import('sentry/views/settings/organizationAuth'))}\n      />\n      <Redirect from=\"members/requests\" to=\"members/\" />\n      <Route path=\"members/\" name={t('Members')}>\n        <Route\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationMembers/organizationMembersWrapper'\n              )\n          )}\n        >\n          <IndexRoute\n            component={make(\n              () =>\n                import(\n                  'sentry/views/settings/organizationMembers/organizationMembersList'\n                )\n            )}\n          />\n        </Route>\n        <Route\n          path=\":memberId/\"\n          name={t('Details')}\n          component={make(\n            () =>\n              import('sentry/views/settings/organizationMembers/organizationMemberDetail')\n          )}\n        />\n      </Route>\n      <Route\n        path=\"rate-limits/\"\n        name={t('Rate Limits')}\n        component={make(() => import('sentry/views/settings/organizationRateLimits'))}\n      />\n      <Route\n        path=\"relay/\"\n        name={t('Relay')}\n        component={make(() => import('sentry/views/settings/organizationRelay'))}\n      />\n      <Route\n        path=\"repos/\"\n        name={t('Repositories')}\n        component={make(() => import('sentry/views/settings/organizationRepositories'))}\n      />\n      <Route\n        path=\"settings/\"\n        component={make(\n          () => import('sentry/views/settings/organizationGeneralSettings')\n        )}\n      />\n      <Route\n        path=\"security-and-privacy/\"\n        name={t('Security & Privacy')}\n        component={make(\n          () => import('sentry/views/settings/organizationSecurityAndPrivacy')\n        )}\n      />\n      <Route name={t('Teams')} path=\"teams/\">\n        <IndexRoute\n          component={make(() => import('sentry/views/settings/organizationTeams'))}\n        />\n        <Route\n          path=\":teamId/\"\n          name={t('Team')}\n          component={make(\n            () => import('sentry/views/settings/organizationTeams/teamDetails')\n          )}\n        >\n          <IndexRedirect to=\"members/\" />\n          <Route\n            path=\"members/\"\n            name={t('Members')}\n            component={make(\n              () => import('sentry/views/settings/organizationTeams/teamMembers')\n            )}\n          />\n          <Route\n            path=\"notifications/\"\n            name={t('Notifications')}\n            component={make(\n              () => import('sentry/views/settings/organizationTeams/teamNotifications')\n            )}\n          />\n          <Route\n            path=\"projects/\"\n            name={t('Projects')}\n            component={make(\n              () => import('sentry/views/settings/organizationTeams/teamProjects')\n            )}\n          />\n          <Route\n            path=\"settings/\"\n            name={t('Settings')}\n            component={make(\n              () => import('sentry/views/settings/organizationTeams/teamSettings')\n            )}\n          />\n        </Route>\n      </Route>\n      <Redirect from=\"plugins/\" to=\"integrations/\" />\n      <Route name={t('Integrations')} path=\"plugins/\">\n        <Route\n          path=\":integrationSlug/\"\n          name={t('Integration Details')}\n          component={make(\n            () => import('sentry/views/organizationIntegrations/pluginDetailedView')\n          )}\n        />\n      </Route>\n      <Redirect from=\"sentry-apps/\" to=\"integrations/\" />\n      <Route name={t('Integrations')} path=\"sentry-apps/\">\n        <Route\n          path=\":integrationSlug\"\n          name={t('Details')}\n          component={make(\n            () => import('sentry/views/organizationIntegrations/sentryAppDetailedView')\n          )}\n        />\n      </Route>\n      <Redirect from=\"document-integrations/\" to=\"integrations/\" />\n      <Route name={t('Integrations')} path=\"document-integrations/\">\n        <Route\n          path=\":integrationSlug\"\n          name={t('Details')}\n          component={make(\n            () =>\n              import('sentry/views/organizationIntegrations/docIntegrationDetailedView')\n          )}\n        />\n      </Route>\n      <Route name={t('Integrations')} path=\"integrations/\">\n        <IndexRoute\n          component={make(\n            () => import('sentry/views/organizationIntegrations/integrationListDirectory')\n          )}\n        />\n        <Route\n          path=\":integrationSlug\"\n          name={t('Integration Details')}\n          component={make(\n            () => import('sentry/views/organizationIntegrations/integrationDetailedView')\n          )}\n        />\n        <Route\n          path=\":providerKey/:integrationId/\"\n          name={t('Configure Integration')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationIntegrations/configureIntegration'\n              )\n          )}\n        />\n      </Route>\n      <Route name={t('Developer Settings')} path=\"developer-settings/\">\n        <IndexRoute\n          component={make(\n            () => import('sentry/views/settings/organizationDeveloperSettings')\n          )}\n        />\n        <Route\n          path=\"new-public/\"\n          name={t('Create Integration')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationDeveloperSettings/sentryApplicationDetails'\n              )\n          )}\n        />\n        <Route\n          path=\"new-internal/\"\n          name={t('Create Integration')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationDeveloperSettings/sentryApplicationDetails'\n              )\n          )}\n        />\n        <Route\n          path=\":appSlug/\"\n          name={t('Edit Integration')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationDeveloperSettings/sentryApplicationDetails'\n              )\n          )}\n        />\n        <Route\n          path=\":appSlug/dashboard/\"\n          name={t('Integration Dashboard')}\n          component={make(\n            () =>\n              import(\n                'sentry/views/settings/organizationDeveloperSettings/sentryApplicationDashboard'\n              )\n          )}\n        />\n      </Route>\n    </Route>\n  );\n\n  const legacySettingsRedirects = (\n    <Fragment>\n      <Redirect from=\":projectId/\" to=\"projects/:projectId/\" />\n      <Redirect from=\":projectId/alerts/\" to=\"projects/:projectId/alerts/\" />\n      <Redirect from=\":projectId/alerts/rules/\" to=\"projects/:projectId/alerts/rules/\" />\n      <Redirect\n        from=\":projectId/alerts/rules/:ruleId/\"\n        to=\"projects/:projectId/alerts/rules/:ruleId/\"\n      />\n    </Fragment>\n  );\n\n  const settingsRoutes = (\n    <Route path=\"/settings/\" name={t('Settings')} component={SettingsWrapper}>\n      <IndexRoute component={make(() => import('sentry/views/settings/settingsIndex'))} />\n      {accountSettingsRoutes}\n      <Route name={t('Organization')} path=\":orgId/\">\n        {orgSettingsRoutes}\n        {projectSettingsRoutes}\n        {legacySettingsRedirects}\n      </Route>\n    </Route>\n  );\n\n  const projectsRoutes = (\n    <Route path=\"/organizations/:orgId/projects/\">\n      <IndexRoute component={make(() => import('sentry/views/projectsDashboard'))} />\n      <Route\n        path=\"new/\"\n        component={make(() => import('sentry/views/projectInstall/newProject'))}\n      />\n      <Route\n        path=\":projectId/getting-started/\"\n        component={make(() => import('sentry/views/projectInstall/gettingStarted'))}\n      >\n        <IndexRoute\n          component={make(() => import('sentry/views/projectInstall/overview'))}\n        />\n        <Route\n          path=\":platform/\"\n          component={make(\n            () => import('sentry/views/projectInstall/platformOrIntegration')\n          )}\n        />\n      </Route>\n      <Route\n        path=\":projectId/\"\n        component={make(() => import('sentry/views/projectDetail'))}\n      />\n      <Route\n        path=\":projectId/events/:eventId/\"\n        component={errorHandler(ProjectEventRedirect)}\n      />\n    </Route>\n  );\n\n  const dashboardRoutes = (\n    <Fragment>\n      <Route\n        path=\"/organizations/:orgId/dashboards/\"\n        component={make(() => import('sentry/views/dashboardsV2'))}\n      >\n        <IndexRoute component={make(() => import('sentry/views/dashboardsV2/manage'))} />\n      </Route>\n      <Route\n        path=\"/organizations/:orgId/dashboards/new/\"\n        component={make(() => import('sentry/views/dashboardsV2/create'))}\n      >\n        <Route\n          path=\"widget/:widgetIndex/edit/\"\n          component={make(() => import('sentry/views/dashboardsV2/widgetBuilder'))}\n        />\n        <Route\n          path=\"widget/new/\"\n          component={make(() => import('sentry/views/dashboardsV2/widgetBuilder'))}\n        />\n      </Route>\n      <Route\n        path=\"/organizations/:orgId/dashboards/new/:templateId\"\n        component={make(() => import('sentry/views/dashboardsV2/create'))}\n      >\n        <Route\n          path=\"widget/:widgetId/\"\n          component={make(() => import('sentry/views/dashboardsV2/create'))}\n        />\n      </Route>\n      <Redirect\n        from=\"/organizations/:orgId/dashboards/:dashboardId/\"\n        to=\"/organizations/:orgId/dashboard/:dashboardId/\"\n      />\n      <Route\n        path=\"/organizations/:orgId/dashboard/:dashboardId/\"\n        component={make(() => import('sentry/views/dashboardsV2/view'))}\n      >\n        <Route\n          path=\"widget/:widgetIndex/edit/\"\n          component={make(() => import('sentry/views/dashboardsV2/widgetBuilder'))}\n        />\n        <Route\n          path=\"widget/new/\"\n          component={make(() => import('sentry/views/dashboardsV2/widgetBuilder'))}\n        />\n        <Route\n          path=\"widget/:widgetId/\"\n          component={make(() => import('sentry/views/dashboardsV2/view'))}\n        />\n      </Route>\n    </Fragment>\n  );\n\n  const alertRoutes = (\n    <Route\n      path=\"/organizations/:orgId/alerts/\"\n      component={make(() => import('sentry/views/alerts'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/alerts/list/incidents'))} />\n      <Route path=\"rules/\">\n        <IndexRoute component={make(() => import('sentry/views/alerts/list/rules'))} />\n        <Route\n          path=\"details/:ruleId/\"\n          component={make(() => import('sentry/views/alerts/rules/metric/details'))}\n        />\n        <Route\n          path=\":projectId/\"\n          component={make(() => import('sentry/views/alerts/builder/projectProvider'))}\n        >\n          <IndexRedirect to=\"/organizations/:orgId/alerts/rules/\" />\n          <Route\n            path=\":ruleId/\"\n            component={make(() => import('sentry/views/alerts/edit'))}\n          />\n        </Route>\n        <Route\n          path=\":projectId/:ruleId/details/\"\n          component={make(() => import('sentry/views/alerts/rules/issue/details'))}\n        >\n          <IndexRoute\n            component={make(\n              () => import('sentry/views/alerts/rules/issue/details/ruleDetails')\n            )}\n          />\n        </Route>\n      </Route>\n      <Route path=\"metric-rules/\">\n        <IndexRedirect to=\"/organizations/:orgId/alerts/rules/\" />\n        <Route\n          path=\":projectId/\"\n          component={make(() => import('sentry/views/alerts/builder/projectProvider'))}\n        >\n          <IndexRedirect to=\"/organizations/:orgId/alerts/rules/\" />\n          <Route\n            path=\":ruleId/\"\n            component={make(() => import('sentry/views/alerts/edit'))}\n          />\n        </Route>\n      </Route>\n      <Route\n        path=\"wizard/\"\n        component={make(() => import('sentry/views/alerts/builder/projectProvider'))}\n      >\n        <IndexRoute component={make(() => import('sentry/views/alerts/wizard'))} />\n      </Route>\n      <Route\n        path=\"new/\"\n        component={make(() => import('sentry/views/alerts/builder/projectProvider'))}\n      >\n        <IndexRedirect to=\"/organizations/:orgId/alerts/wizard/\" />\n        <Route\n          path=\":alertType/\"\n          component={make(() => import('sentry/views/alerts/create'))}\n        />\n      </Route>\n      <Route\n        path=\":alertId/\"\n        component={make(() => import('sentry/views/alerts/incidentRedirect'))}\n      />\n      <Route\n        path=\":projectId/\"\n        component={make(() => import('sentry/views/alerts/builder/projectProvider'))}\n      >\n        <Route path=\"new/\" component={make(() => import('sentry/views/alerts/create'))} />\n        <Route\n          path=\"wizard/\"\n          component={make(() => import('sentry/views/alerts/wizard'))}\n        />\n      </Route>\n    </Route>\n  );\n\n  const monitorsRoutes = (\n    <Route\n      path=\"/organizations/:orgId/monitors/\"\n      component={make(() => import('sentry/views/monitors'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/monitors/monitors'))} />\n      <Route\n        path=\"/organizations/:orgId/monitors/create/\"\n        component={make(() => import('sentry/views/monitors/create'))}\n      />\n      <Route\n        path=\"/organizations/:orgId/monitors/:monitorId/\"\n        component={make(() => import('sentry/views/monitors/details'))}\n      />\n      <Route\n        path=\"/organizations/:orgId/monitors/:monitorId/edit/\"\n        component={make(() => import('sentry/views/monitors/edit'))}\n      />\n    </Route>\n  );\n\n  const replayRoutes = (\n    <Route\n      path=\"/organizations/:orgId/replays/\"\n      component={make(() => import('sentry/views/replays'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/replays/replays'))} />\n      <Route\n        path=\":eventSlug/\"\n        component={make(() => import('sentry/views/replays/details'))}\n      />\n    </Route>\n  );\n\n  const releasesRoutes = (\n    <Route path=\"/organizations/:orgId/releases/\">\n      <IndexRoute component={make(() => import('sentry/views/releases/list'))} />\n      <Route\n        path=\":release/\"\n        component={make(() => import('sentry/views/releases/detail'))}\n      >\n        <IndexRoute\n          component={make(() => import('sentry/views/releases/detail/overview'))}\n        />\n        <Route\n          path=\"commits/\"\n          component={make(\n            () => import('sentry/views/releases/detail/commitsAndFiles/commits')\n          )}\n        />\n        <Route\n          path=\"files-changed/\"\n          component={make(\n            () => import('sentry/views/releases/detail/commitsAndFiles/filesChanged')\n          )}\n        />\n        <Redirect from=\"new-events/\" to=\"/organizations/:orgId/releases/:release/\" />\n        <Redirect from=\"all-events/\" to=\"/organizations/:orgId/releases/:release/\" />\n      </Route>\n    </Route>\n  );\n\n  const activityRoutes = (\n    <Route\n      path=\"/organizations/:orgId/activity/\"\n      component={make(() => import('sentry/views/organizationActivity'))}\n    />\n  );\n\n  const statsRoutes = (\n    <Route path=\"/organizations/:orgId/stats/\">\n      <IndexRoute component={make(() => import('sentry/views/organizationStats'))} />\n      <Route\n        path=\"issues/\"\n        component={make(() => import('sentry/views/organizationStats/teamInsights'))}\n      >\n        <IndexRoute\n          component={make(\n            () => import('sentry/views/organizationStats/teamInsights/issues')\n          )}\n        />\n      </Route>\n      <Route\n        path=\"health/\"\n        component={make(() => import('sentry/views/organizationStats/teamInsights'))}\n      >\n        <IndexRoute\n          component={make(\n            () => import('sentry/views/organizationStats/teamInsights/health')\n          )}\n        />\n      </Route>\n\n      <Redirect from=\"team/\" to=\"/organizations/:orgId/stats/issues/\" />\n    </Route>\n  );\n\n  // TODO(mark) Long term this /queries route should go away and /discover\n  // should be the canonical route for discover2. We have a redirect right now\n  // as /discover was for discover 1 and most of the application is linking to\n  // /discover/queries and not /discover\n  const discoverRoutes = (\n    <Route\n      path=\"/organizations/:orgId/discover/\"\n      component={make(() => import('sentry/views/eventsV2'))}\n    >\n      <IndexRedirect to=\"queries/\" />\n      <Route\n        path=\"queries/\"\n        component={make(() => import('sentry/views/eventsV2/landing'))}\n      />\n      <Route\n        path=\"results/\"\n        component={make(() => import('sentry/views/eventsV2/results'))}\n      />\n      <Route\n        path=\":eventSlug/\"\n        component={make(() => import('sentry/views/eventsV2/eventDetails'))}\n      />\n    </Route>\n  );\n\n  const performanceRoutes = (\n    <Route\n      path=\"/organizations/:orgId/performance/\"\n      component={make(() => import('sentry/views/performance'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/performance/content'))} />\n      <Route\n        path=\"trends/\"\n        component={make(() => import('sentry/views/performance/trends'))}\n      />\n      <Route path=\"/organizations/:orgId/performance/summary/\">\n        <IndexRoute\n          component={make(\n            () =>\n              import('sentry/views/performance/transactionSummary/transactionOverview')\n          )}\n        />\n        <Route\n          path=\"vitals/\"\n          component={make(\n            () => import('sentry/views/performance/transactionSummary/transactionVitals')\n          )}\n        />\n        <Route\n          path=\"tags/\"\n          component={make(\n            () => import('sentry/views/performance/transactionSummary/transactionTags')\n          )}\n        />\n        <Route\n          path=\"events/\"\n          component={make(\n            () => import('sentry/views/performance/transactionSummary/transactionEvents')\n          )}\n        />\n        <Route\n          path=\"anomalies/\"\n          component={make(\n            () =>\n              import('sentry/views/performance/transactionSummary/transactionAnomalies')\n          )}\n        />\n        <Route path=\"spans/\">\n          <IndexRoute\n            component={make(\n              () => import('sentry/views/performance/transactionSummary/transactionSpans')\n            )}\n          />\n          <Route\n            path=\":spanSlug/\"\n            component={make(\n              () =>\n                import(\n                  'sentry/views/performance/transactionSummary/transactionSpans/spanDetails'\n                )\n            )}\n          />\n        </Route>\n      </Route>\n      <Route\n        path=\"vitaldetail/\"\n        component={make(() => import('sentry/views/performance/vitalDetail'))}\n      />\n      <Route\n        path=\"trace/:traceSlug/\"\n        component={make(() => import('sentry/views/performance/traceDetails'))}\n      />\n      <Route\n        path=\":eventSlug/\"\n        component={make(() => import('sentry/views/performance/transactionDetails'))}\n      />\n    </Route>\n  );\n\n  const userFeedbackRoutes = (\n    <Route\n      path=\"/organizations/:orgId/user-feedback/\"\n      component={make(() => import('sentry/views/userFeedback'))}\n    />\n  );\n\n  const issueListRoutes = (\n    <Route\n      path=\"/organizations/:orgId/issues/\"\n      component={errorHandler(IssueListContainer)}\n    >\n      <Redirect from=\"/organizations/:orgId/\" to=\"/organizations/:orgId/issues/\" />\n      <IndexRoute component={errorHandler(IssueListOverview)} />\n      <Route path=\"searches/:searchId/\" component={errorHandler(IssueListOverview)} />\n    </Route>\n  );\n\n  // Once org issues is complete, these routes can be nested under\n  // /organizations/:orgId/issues\n  const issueDetailsRoutes = (\n    <Route\n      path=\"/organizations/:orgId/issues/:groupId/\"\n      component={make(() => import('sentry/views/organizationGroupDetails'))}\n    >\n      <IndexRoute\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupEventDetails')\n        )}\n        props={{\n          currentTab: Tab.DETAILS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"replays/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupReplays')\n        )}\n        props={{\n          currentTab: Tab.REPLAYS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"activity/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupActivity')\n        )}\n        props={{\n          currentTab: Tab.ACTIVITY,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"events/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupEvents')\n        )}\n        props={{\n          currentTab: Tab.EVENTS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"tags/\"\n        component={make(() => import('sentry/views/organizationGroupDetails/groupTags'))}\n        props={{\n          currentTab: Tab.TAGS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"tags/:tagKey/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupTagValues')\n        )}\n        props={{\n          currentTab: Tab.TAGS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"feedback/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupUserFeedback')\n        )}\n        props={{\n          currentTab: Tab.USER_FEEDBACK,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"attachments/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupEventAttachments')\n        )}\n        props={{\n          currentTab: Tab.ATTACHMENTS,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"similar/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupSimilarIssues')\n        )}\n        props={{\n          currentTab: Tab.SIMILAR_ISSUES,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"merged/\"\n        component={make(\n          () => import('sentry/views/organizationGroupDetails/groupMerged')\n        )}\n        props={{\n          currentTab: Tab.MERGED,\n          isEventRoute: false,\n        }}\n      />\n      <Route\n        path=\"grouping/\"\n        component={make(() => import('sentry/views/organizationGroupDetails/grouping'))}\n        props={{\n          currentTab: Tab.GROUPING,\n          isEventRoute: false,\n        }}\n      />\n      <Route path=\"events/:eventId/\">\n        <IndexRoute\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupEventDetails')\n          )}\n          props={{\n            currentTab: Tab.DETAILS,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"activity/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupActivity')\n          )}\n          props={{\n            currentTab: Tab.ACTIVITY,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"events/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupEvents')\n          )}\n          props={{\n            currentTab: Tab.EVENTS,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"similar/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupSimilarIssues')\n          )}\n          props={{\n            currentTab: Tab.SIMILAR_ISSUES,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"tags/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupTags')\n          )}\n          props={{\n            currentTab: Tab.TAGS,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"tags/:tagKey/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupTagValues')\n          )}\n          props={{\n            currentTab: Tab.TAGS,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"feedback/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupUserFeedback')\n          )}\n          props={{\n            currentTab: Tab.USER_FEEDBACK,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"attachments/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupEventAttachments')\n          )}\n          props={{\n            currentTab: Tab.ATTACHMENTS,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"merged/\"\n          component={make(\n            () => import('sentry/views/organizationGroupDetails/groupMerged')\n          )}\n          props={{\n            currentTab: Tab.MERGED,\n            isEventRoute: true,\n          }}\n        />\n        <Route\n          path=\"grouping/\"\n          component={make(() => import('sentry/views/organizationGroupDetails/grouping'))}\n          props={{\n            currentTab: Tab.GROUPING,\n            isEventRoute: true,\n          }}\n        />\n      </Route>\n    </Route>\n  );\n\n  // These are the \"manage\" pages. For sentry.io, these are _different_ from\n  // the SaaS admin routes in getsentry.\n  const adminManageRoutes = (\n    <Route\n      path=\"/manage/\"\n      component={make(() => import('sentry/views/admin/adminLayout'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/admin/adminOverview'))} />\n      <Route\n        path=\"buffer/\"\n        component={make(() => import('sentry/views/admin/adminBuffer'))}\n      />\n      <Route\n        path=\"relays/\"\n        component={make(() => import('sentry/views/admin/adminRelays'))}\n      />\n      <Route\n        path=\"organizations/\"\n        component={make(() => import('sentry/views/admin/adminOrganizations'))}\n      />\n      <Route\n        path=\"projects/\"\n        component={make(() => import('sentry/views/admin/adminProjects'))}\n      />\n      <Route\n        path=\"queue/\"\n        component={make(() => import('sentry/views/admin/adminQueue'))}\n      />\n      <Route\n        path=\"quotas/\"\n        component={make(() => import('sentry/views/admin/adminQuotas'))}\n      />\n      <Route\n        path=\"settings/\"\n        component={make(() => import('sentry/views/admin/adminSettings'))}\n      />\n      <Route path=\"users/\">\n        <IndexRoute component={make(() => import('sentry/views/admin/adminUsers'))} />\n        <Route\n          path=\":id\"\n          component={make(() => import('sentry/views/admin/adminUserEdit'))}\n        />\n      </Route>\n      <Route\n        path=\"status/mail/\"\n        component={make(() => import('sentry/views/admin/adminMail'))}\n      />\n      <Route\n        path=\"status/environment/\"\n        component={make(() => import('sentry/views/admin/adminEnvironment'))}\n      />\n      <Route\n        path=\"status/packages/\"\n        component={make(() => import('sentry/views/admin/adminPackages'))}\n      />\n      <Route\n        path=\"status/warnings/\"\n        component={make(() => import('sentry/views/admin/adminWarnings'))}\n      />\n      {hook('routes:admin')}\n    </Route>\n  );\n\n  // XXX(epurkhiser): This should probably go away. It's not totally clear to\n  // me why we need the OrganizationRoot root container.\n  const legacyOrganizationRootRoutes = (\n    <Route component={errorHandler(OrganizationRoot)}>\n      <Route\n        path=\"/organizations/:orgId/teams/new/\"\n        component={make(() => import('sentry/views/teamCreate'))}\n      />\n      <Route path=\"/organizations/:orgId/\">\n        {hook('routes:organization')}\n        <Redirect from=\"/organizations/:orgId/teams/\" to=\"/settings/:orgId/teams/\" />\n        <Redirect\n          from=\"/organizations/:orgId/teams/your-teams/\"\n          to=\"/settings/:orgId/teams/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/teams/all-teams/\"\n          to=\"/settings/:orgId/teams/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/teams/:teamId/\"\n          to=\"/settings/:orgId/teams/:teamId/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/teams/:teamId/members/\"\n          to=\"/settings/:orgId/teams/:teamId/members/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/teams/:teamId/projects/\"\n          to=\"/settings/:orgId/teams/:teamId/projects/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/teams/:teamId/settings/\"\n          to=\"/settings/:orgId/teams/:teamId/settings/\"\n        />\n        <Redirect from=\"/organizations/:orgId/settings/\" to=\"/settings/:orgId/\" />\n        <Redirect\n          from=\"/organizations/:orgId/api-keys/\"\n          to=\"/settings/:orgId/api-keys/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/api-keys/:apiKey/\"\n          to=\"/settings/:orgId/api-keys/:apiKey/\"\n        />\n        <Redirect from=\"/organizations/:orgId/members/\" to=\"/settings/:orgId/members/\" />\n        <Redirect\n          from=\"/organizations/:orgId/members/:memberId/\"\n          to=\"/settings/:orgId/members/:memberId/\"\n        />\n        <Redirect\n          from=\"/organizations/:orgId/rate-limits/\"\n          to=\"/settings/:orgId/rate-limits/\"\n        />\n        <Redirect from=\"/organizations/:orgId/repos/\" to=\"/settings/:orgId/repos/\" />\n      </Route>\n    </Route>\n  );\n\n  // XXX(epurkhiser): These also exist in the legacyOrganizationRootRoutes. Not\n  // sure which one here is more correct.\n  const legacyGettingStartedRoutes = (\n    <Route\n      path=\"/:orgId/:projectId/getting-started/\"\n      component={make(() => import('sentry/views/projectInstall/gettingStarted'))}\n    >\n      <IndexRoute\n        component={make(() => import('sentry/views/projectInstall/overview'))}\n      />\n      <Route\n        path=\":platform/\"\n        component={make(\n          () => import('sentry/views/projectInstall/platformOrIntegration')\n        )}\n      />\n    </Route>\n  );\n\n  // Support for deprecated URLs (pre-Sentry 10). We just redirect users to new\n  // canonical URLs.\n  //\n  // XXX(epurkhiser): Can these be moved over to the legacyOrgRedirects routes,\n  // or do these need to be nested into the OrganizationDetails tree?\n  const legacyOrgRedirects = (\n    <Route path=\"/:orgId/:projectId/\">\n      <IndexRoute\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId}) => `/organizations/${orgId}/issues/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"issues/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId}) => `/organizations/${orgId}/issues/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"dashboard/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId}) =>\n              `/organizations/${orgId}/dashboards/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"user-feedback/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId}) =>\n              `/organizations/${orgId}/user-feedback/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"releases/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId}) =>\n              `/organizations/${orgId}/releases/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"releases/:version/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId, router}) =>\n              `/organizations/${orgId}/releases/${router.params.version}/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"releases/:version/new-events/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId, router}) =>\n              `/organizations/${orgId}/releases/${router.params.version}/new-events/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"releases/:version/all-events/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId, router}) =>\n              `/organizations/${orgId}/releases/${router.params.version}/all-events/?project=${projectId}`\n          )\n        )}\n      />\n      <Route\n        path=\"releases/:version/commits/\"\n        component={errorHandler(\n          redirectDeprecatedProjectRoute(\n            ({orgId, projectId, router}) =>\n              `/organizations/${orgId}/releases/${router.params.version}/commits/?project=${projectId}`\n          )\n        )}\n      />\n    </Route>\n  );\n\n  const profilingRoutes = (\n    <Route\n      path=\"/organizations/:orgId/profiling/\"\n      component={make(() => import('sentry/views/profiling'))}\n    >\n      <IndexRoute component={make(() => import('sentry/views/profiling/content'))} />\n      <Route\n        path=\"summary/:projectId/\"\n        component={make(() => import('sentry/views/profiling/profileSummary'))}\n      />\n      <Route\n        path=\"profile/:projectId/:eventId\"\n        component={make(() => import('sentry/views/profiling/profileGroupProvider'))}\n      >\n        <Route\n          path=\"details/\"\n          component={make(() => import('sentry/views/profiling/profileDetails'))}\n        />\n        <Route\n          path=\"flamegraph/\"\n          component={make(() => import('sentry/views/profiling/profileFlamegraph'))}\n        />\n      </Route>\n    </Route>\n  );\n\n  const organizationRoutes = (\n    <Route component={errorHandler(OrganizationDetails)}>\n      {settingsRoutes}\n      {projectsRoutes}\n      {dashboardRoutes}\n      {userFeedbackRoutes}\n      {issueListRoutes}\n      {issueDetailsRoutes}\n      {alertRoutes}\n      {monitorsRoutes}\n      {replayRoutes}\n      {releasesRoutes}\n      {activityRoutes}\n      {statsRoutes}\n      {discoverRoutes}\n      {performanceRoutes}\n      {profilingRoutes}\n      {adminManageRoutes}\n      {legacyOrganizationRootRoutes}\n      {legacyGettingStartedRoutes}\n      {legacyOrgRedirects}\n    </Route>\n  );\n\n  const legacyRedirectRoutes = (\n    <Route path=\"/:orgId/\">\n      <IndexRedirect to=\"/organizations/:orgId/\" />\n      <Route path=\":projectId/settings/\">\n        <Redirect from=\"teams/\" to=\"/settings/:orgId/projects/:projectId/teams/\" />\n        <Redirect from=\"alerts/\" to=\"/settings/:orgId/projects/:projectId/alerts/\" />\n        <Redirect\n          from=\"alerts/rules/\"\n          to=\"/settings/:orgId/projects/:projectId/alerts/rules/\"\n        />\n        <Redirect\n          from=\"alerts/rules/new/\"\n          to=\"/settings/:orgId/projects/:projectId/alerts/rules/new/\"\n        />\n        <Redirect\n          from=\"alerts/rules/:ruleId/\"\n          to=\"/settings/:orgId/projects/:projectId/alerts/rules/:ruleId/\"\n        />\n        <Redirect\n          from=\"environments/\"\n          to=\"/settings/:orgId/projects/:projectId/environments/\"\n        />\n        <Redirect\n          from=\"environments/hidden/\"\n          to=\"/settings/:orgId/projects/:projectId/environments/hidden/\"\n        />\n        <Redirect from=\"tags/\" to=\"/settings/projects/:orgId/projects/:projectId/tags/\" />\n        <Redirect\n          from=\"issue-tracking/\"\n          to=\"/settings/:orgId/projects/:projectId/issue-tracking/\"\n        />\n        <Redirect\n          from=\"release-tracking/\"\n          to=\"/settings/:orgId/projects/:projectId/release-tracking/\"\n        />\n        <Redirect\n          from=\"ownership/\"\n          to=\"/settings/:orgId/projects/:projectId/ownership/\"\n        />\n        <Redirect\n          from=\"data-forwarding/\"\n          to=\"/settings/:orgId/projects/:projectId/data-forwarding/\"\n        />\n        <Redirect\n          from=\"debug-symbols/\"\n          to=\"/settings/:orgId/projects/:projectId/debug-symbols/\"\n        />\n        <Redirect\n          from=\"processing-issues/\"\n          to=\"/settings/:orgId/projects/:projectId/processing-issues/\"\n        />\n        <Redirect from=\"filters/\" to=\"/settings/:orgId/projects/:projectId/filters/\" />\n        <Redirect from=\"hooks/\" to=\"/settings/:orgId/projects/:projectId/hooks/\" />\n        <Redirect from=\"keys/\" to=\"/settings/:orgId/projects/:projectId/keys/\" />\n        <Redirect\n          from=\"keys/:keyId/\"\n          to=\"/settings/:orgId/projects/:projectId/keys/:keyId/\"\n        />\n        <Redirect\n          from=\"user-feedback/\"\n          to=\"/settings/:orgId/projects/:projectId/user-feedback/\"\n        />\n        <Redirect\n          from=\"security-headers/\"\n          to=\"/settings/:orgId/projects/:projectId/security-headers/\"\n        />\n        <Redirect\n          from=\"security-headers/csp/\"\n          to=\"/settings/:orgId/projects/:projectId/security-headers/csp/\"\n        />\n        <Redirect\n          from=\"security-headers/expect-ct/\"\n          to=\"/settings/:orgId/projects/:projectId/security-headers/expect-ct/\"\n        />\n        <Redirect\n          from=\"security-headers/hpkp/\"\n          to=\"/settings/:orgId/projects/:projectId/security-headers/hpkp/\"\n        />\n        <Redirect from=\"plugins/\" to=\"/settings/:orgId/projects/:projectId/plugins/\" />\n        <Redirect\n          from=\"plugins/:pluginId/\"\n          to=\"/settings/:orgId/projects/:projectId/plugins/:pluginId/\"\n        />\n        <Redirect\n          from=\"integrations/:providerKey/\"\n          to=\"/settings/:orgId/projects/:projectId/integrations/:providerKey/\"\n        />\n        <Redirect from=\"install/\" to=\"/settings/:orgId/projects/:projectId/install/\" />\n        <Redirect\n          from=\"install/:platform'\"\n          to=\"/settings/:orgId/projects/:projectId/install/:platform/\"\n        />\n      </Route>\n      <Redirect from=\":projectId/group/:groupId/\" to=\"issues/:groupId/\" />\n      <Redirect\n        from=\":projectId/issues/:groupId/\"\n        to=\"/organizations/:orgId/issues/:groupId/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/events/\"\n        to=\"/organizations/:orgId/issues/:groupId/events/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/events/:eventId/\"\n        to=\"/organizations/:orgId/issues/:groupId/events/:eventId/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/tags/\"\n        to=\"/organizations/:orgId/issues/:groupId/tags/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/tags/:tagKey/\"\n        to=\"/organizations/:orgId/issues/:groupId/tags/:tagKey/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/feedback/\"\n        to=\"/organizations/:orgId/issues/:groupId/feedback/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/similar/\"\n        to=\"/organizations/:orgId/issues/:groupId/similar/\"\n      />\n      <Redirect\n        from=\":projectId/issues/:groupId/merged/\"\n        to=\"/organizations/:orgId/issues/:groupId/merged/\"\n      />\n      <Route\n        path=\":projectId/events/:eventId/\"\n        component={errorHandler(ProjectEventRedirect)}\n      />\n    </Route>\n  );\n\n  const appRoutes = (\n    <Route>\n      {experimentalSpaRoutes}\n      <Route path=\"/\" component={errorHandler(App)}>\n        {rootRoutes}\n        {organizationRoutes}\n        {legacyRedirectRoutes}\n        {hook('routes')}\n        <Route path=\"*\" component={errorHandler(RouteNotFound)} />\n      </Route>\n    </Route>\n  );\n\n  return appRoutes;\n}\n\n// We load routes both when initlaizing the SDK (for routing integrations) and\n// when the app renders Main. Memoize to avoid rebuilding the route tree.\nexport const routes = memoize(buildRoutes);\n","import {render} from 'react-dom';\n\nexport function renderDom(\n  Component: React.ComponentType,\n  container: string,\n  props: Record<string, any> = {}\n) {\n  const rootEl = document.querySelector(container);\n\n  // Note: On pages like `SetupWizard`, we will attempt to mount main App\n  // but will fail because the DOM el wasn't found (which is intentional)\n  if (!rootEl) {\n    return;\n  }\n\n  render(<Component {...props} />, rootEl);\n}\n","import exportGlobals from 'sentry/bootstrap/exportGlobals';\nimport {OnSentryInitConfiguration, SentryInitRenderReactComponent} from 'sentry/types';\n\nimport {renderDom} from './renderDom';\nimport {renderOnDomReady} from './renderOnDomReady';\n\nconst COMPONENT_MAP = {\n  [SentryInitRenderReactComponent.INDICATORS]: () =>\n    import(/* webpackChunkName: \"Indicators\" */ 'sentry/components/indicators'),\n  [SentryInitRenderReactComponent.SYSTEM_ALERTS]: () =>\n    import(/* webpackChunkName: \"SystemAlerts\" */ 'sentry/views/app/systemAlerts'),\n  [SentryInitRenderReactComponent.SETUP_WIZARD]: () =>\n    import(/* webpackChunkName: \"SetupWizard\" */ 'sentry/views/setupWizard'),\n  [SentryInitRenderReactComponent.U2F_SIGN]: () =>\n    import(/* webpackChunkName: \"U2fSign\" */ 'sentry/components/u2f/u2fsign'),\n  [SentryInitRenderReactComponent.SU_ACCESS_FORM]: () =>\n    import(\n      /* webpackChunkName: \"SuperuserAccessForm\" */ 'sentry/components/superuserAccessForm'\n    ),\n};\n\nasync function processItem(initConfig: OnSentryInitConfiguration) {\n  /**\n   * Allows our auth pages to dynamically attach a client side password\n   * strength indicator The password strength component is very\n   * heavyweight as it includes the zxcvbn, a relatively byte-heavy\n   * password strength estimation library. Load it on demand.\n   */\n  if (initConfig.name === 'passwordStrength') {\n    const {input, element} = initConfig;\n    if (!input || !element) {\n      return;\n    }\n\n    const passwordStrength = await import(\n      /* webpackChunkName: \"PasswordStrength\" */ 'sentry/components/passwordStrength'\n    );\n\n    passwordStrength.attachTo({\n      input: document.querySelector(input),\n      element: document.querySelector(element),\n    });\n\n    return;\n  }\n\n  /**\n   * Allows server rendered templates to render a React component to DOM\n   * without exposing the component globally.\n   */\n  if (initConfig.name === 'renderReact') {\n    if (!COMPONENT_MAP.hasOwnProperty(initConfig.component)) {\n      return;\n    }\n    const {default: Component} = await COMPONENT_MAP[initConfig.component]();\n\n    renderOnDomReady(() =>\n      // TODO(ts): Unsure how to type this, complains about u2fsign's required props\n      renderDom(Component as any, initConfig.container, initConfig.props)\n    );\n  }\n\n  /**\n   * Callback for when js bundle is loaded. Provide library + component references\n   * for downstream consumers to use.\n   */\n  if (initConfig.name === 'onReady' && typeof initConfig.onReady === 'function') {\n    initConfig.onReady(exportGlobals);\n  }\n}\n\n/**\n * This allows server templates to push \"tasks\" to be run after application has initialized.\n * The global `window.__onSentryInit` is used for this.\n *\n * Be careful here as we can not guarantee type safety on `__onSentryInit` as\n * these will be defined in server rendered templates\n */\nexport async function processInitQueue() {\n  // Currently, this is run *before* anything is queued in\n  // `window.__onSentryInit`. We want to provide a migration path for potential\n  // custom plugins that rely on `window.SentryApp` so they can start migrating\n  // their plugins ASAP, as `SentryApp` will be loaded async and will require\n  // callbacks to access it, instead of via `window` global.\n  if (\n    typeof window.__onSentryInit !== 'undefined' &&\n    !Array.isArray(window.__onSentryInit)\n  ) {\n    return;\n  }\n\n  const queued = window.__onSentryInit;\n\n  // Stub future calls of `window.__onSentryInit.push` so that it is\n  // processed immediately (since bundle is loaded at this point and no\n  // longer needs to act as a queue)\n  //\n  window.__onSentryInit = {\n    push: processItem,\n  };\n\n  if (Array.isArray(queued)) {\n    // These are all side-effects, so no need to return a value, but allow consumer to\n    // wait for all initialization to finish\n    await Promise.all(queued.map(processItem));\n  }\n}\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LogoSentry from 'sentry/components/logoSentry';\nimport {t} from 'sentry/locale';\nimport PreferencesStore from 'sentry/stores/preferencesStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport space from 'sentry/styles/space';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {\n  extraQueryParameter,\n  extraQueryParameterWithEmail,\n  urlAttachQueryParams,\n} from 'sentry/utils/demoMode';\n\nexport default function DemoHeader() {\n  const sandboxData = window.SandboxData;\n  // if the user came from a SaaS org, we should send them back to upgrade when they leave the sandbox\n  const extraSearchParams = extraQueryParameter();\n\n  const collapsed = !!useLegacyStore(PreferencesStore).collapsed;\n\n  return (\n    <Wrapper collapsed={collapsed}>\n      <StyledLogoSentry />\n      <StyledExternalLink\n        onClick={() =>\n          trackAdvancedAnalyticsEvent('growth.demo_click_docs', {organization: null})\n        }\n        href={urlAttachQueryParams('https://docs.sentry.io/', extraSearchParams)}\n        openInNewTab\n      >\n        {t('Documentation')}\n      </StyledExternalLink>\n      <RequestDemoBtn\n        priority=\"form\"\n        onClick={() =>\n          trackAdvancedAnalyticsEvent('growth.demo_click_request_demo', {\n            organization: null,\n          })\n        }\n        href={urlAttachQueryParams('https://sentry.io/_/demo/', extraSearchParams)}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {t('Request a Demo')}\n      </RequestDemoBtn>\n      <GetStarted\n        onClick={() => {\n          const url =\n            sandboxData?.cta?.url ||\n            urlAttachQueryParams(\n              'https://sentry.io/signup/',\n              extraQueryParameterWithEmail()\n            );\n\n          // Using window.open instead of href={} because we need to read `email`\n          // from localStorage when the user clicks the button.\n          window.open(url, '_blank');\n\n          trackAdvancedAnalyticsEvent('growth.demo_click_get_started', {\n            cta: sandboxData?.cta?.id,\n            organization: null,\n          });\n        }}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        <GetStartedTextLong>\n          {sandboxData?.cta?.title || t('Sign Up for Free')}\n        </GetStartedTextLong>\n        <GetStartedTextShort>\n          {sandboxData?.cta?.shortTitle || t('Sign Up')}\n        </GetStartedTextShort>\n      </GetStarted>\n    </Wrapper>\n  );\n}\n\n// Note many of the colors don't come from the theme as they come from the marketing site\nconst Wrapper = styled('div')<{collapsed: boolean}>`\n  padding-right: ${space(3)};\n  background-color: ${p => p.theme.white};\n  height: ${p => p.theme.demo.headerSize};\n  display: flex;\n  justify-content: space-between;\n  text-transform: uppercase;\n  align-items: center;\n  white-space: nowrap;\n  gap: ${space(4)};\n\n  margin-left: calc(\n    -1 * ${p => (p.collapsed ? p.theme.sidebar.collapsedWidth : p.theme.sidebar.expandedWidth)}\n  );\n\n  position: fixed;\n  width: 100%;\n  border-bottom: 1px solid ${p => p.theme.border};\n  z-index: ${p => p.theme.zIndex.settingsSidebarNav};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    height: ${p => p.theme.sidebar.mobileHeight};\n    margin-left: 0;\n  }\n`;\n\nconst StyledLogoSentry = styled(LogoSentry)`\n  margin-top: auto;\n  margin-bottom: auto;\n  margin-left: 20px;\n  margin-right: auto;\n  width: 130px;\n  height: 30px;\n  color: ${p => p.theme.textColor};\n`;\n\nconst BaseButton = styled(Button)`\n  border-radius: 2rem;\n  text-transform: uppercase;\n`;\n\nconst RequestDemoBtn = styled(BaseButton)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: none;\n  }\n`;\n\nconst GetStartedTextShort = styled('span')`\n  display: none;\n`;\n\nconst GetStartedTextLong = styled('span')``;\n\n// Note many of the colors don't come from the theme as they come from the marketing site\nconst GetStarted = styled(BaseButton)`\n  border-color: transparent;\n  box-shadow: 0 2px 0 rgb(54 45 89 / 10%);\n  background-color: #e1567c;\n  color: #fff;\n  .short-text {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    ${GetStartedTextLong} {\n      display: none;\n    }\n    ${GetStartedTextShort} {\n      display: inline;\n    }\n  }\n`;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  color: #584774;\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n","import {browserHistory, Router, RouterContext} from 'react-router';\n\nimport DemoHeader from 'sentry/components/demo/demoHeader';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {routes} from 'sentry/routes';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {RouteContext} from 'sentry/views/routeContext';\n\nimport {PersistedStoreProvider} from './stores/persistedStore';\n\nfunction Main() {\n  return (\n    <ThemeAndStyleProvider>\n      <PersistedStoreProvider>\n        {ConfigStore.get('demoMode') && <DemoHeader />}\n        <Router\n          history={browserHistory}\n          render={props => (\n            <RouteContext.Provider value={props}>\n              <RouterContext {...props} />\n            </RouteContext.Provider>\n          )}\n        >\n          {routes()}\n        </Router>\n      </PersistedStoreProvider>\n    </ThemeAndStyleProvider>\n  );\n}\n\nexport default Main;\n","import {ROOT_ELEMENT} from 'sentry/constants';\nimport Main from 'sentry/main';\n\nimport {renderDom} from './renderDom';\n\nexport function renderMain() {\n  try {\n    renderDom(Main, `#${ROOT_ELEMENT}`);\n  } catch (err) {\n    if (err.message === 'URI malformed') {\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(\n          'An unencoded \"%\" has appeared, it is super effective! (See https://github.com/ReactTraining/history/issues/505)'\n        )\n      );\n      window.location.assign(window.location.pathname);\n    }\n  }\n}\n","import './legacyTwitterBootstrap';\nimport './exportGlobals';\n\nimport {routes} from 'sentry/routes';\nimport {Config} from 'sentry/types';\nimport {metric} from 'sentry/utils/analytics';\n\nimport {commonInitialization} from './commonInitialization';\nimport {initializeSdk} from './initializeSdk';\nimport {processInitQueue} from './processInitQueue';\nimport {renderMain} from './renderMain';\nimport {renderOnDomReady} from './renderOnDomReady';\n\nexport function initializeApp(config: Config) {\n  commonInitialization(config);\n  initializeSdk(config, {routes});\n\n  // Used for operational metrics to determine that the application js\n  // bundle was loaded by browser.\n  metric.mark({name: 'sentry-app-init'});\n  renderOnDomReady(renderMain);\n  processInitQueue();\n}\n","/**\n * This is a re-implementation of some bootstrap functionality that we still\n * depend on in some html templates.\n */\n\n/**\n * Similar to jQuery's `on`, adds an event listener to the root document which\n * will only fire when the selector matches the element which triggered the\n * event.\n */\nconst addSelectorEventListener = <K extends keyof DocumentEventMap>(\n  type: K,\n  selector: string,\n  listener: (ev: DocumentEventMap[K]) => any\n) =>\n  document.addEventListener(type, event => {\n    const {target} = event;\n\n    if (target === null) {\n      return;\n    }\n\n    if (!(target instanceof HTMLElement)) {\n      return;\n    }\n\n    if (!target.matches(selector)) {\n      return;\n    }\n\n    listener(event);\n  });\n\n/**\n * Tab toggle handlers.\n *\n * @deprecated\n */\naddSelectorEventListener('click', '[data-toggle=\"tab\"]', event => {\n  event.preventDefault();\n\n  const triggerElement = event.target as HTMLElement;\n  const targetSelector = triggerElement.getAttribute('href');\n\n  if (targetSelector === null) {\n    return;\n  }\n\n  const targetPanel = document.querySelector<HTMLElement>(targetSelector);\n\n  if (targetPanel === null) {\n    return;\n  }\n\n  const container = targetPanel.parentElement!;\n  const tabs = triggerElement.closest('ul');\n\n  const targetTab = triggerElement.closest('li');\n  const lastActiveTab = tabs?.querySelector(':scope > .active');\n\n  // Reset the old active tab\n  lastActiveTab?.classList?.remove('active');\n  lastActiveTab?.querySelector(':scope > a')?.setAttribute('aria-expanded', 'false');\n\n  container.querySelector<HTMLElement>(':scope > .active')?.classList?.remove('active');\n\n  // Activate the target\n  targetTab?.classList.add('active');\n  targetTab?.querySelector(':scope > a')?.setAttribute('aria-expanded', 'true');\n\n  targetPanel.classList.add('active');\n});\n\n/**\n * Remove alerts when the close button is clicked\n *\n * @deprecated\n */\naddSelectorEventListener('click', '[data-dismiss=\"alert\"]', event => {\n  (event.target as HTMLElement).closest('.alert')?.remove();\n});\n","import ConfigStore from 'sentry/stores/configStore';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode;\n\n  demoComponent?:\n    | React.ReactNode\n    | ((props: {children?: React.ReactNode}) => React.ReactNode);\n};\n\n/**\n * Component to handle demo mode switches\n */\nfunction DemoModeGate(props: Props) {\n  const {organization, children, demoComponent = null} = props;\n\n  if (organization?.role === 'member' && ConfigStore.get('demoMode')) {\n    if (typeof demoComponent === 'function') {\n      return demoComponent({children});\n    }\n    return demoComponent;\n  }\n  return children;\n}\n\nexport default withOrganization(DemoModeGate);\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button, {ButtonLabel} from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {CONFIG_DOCS_URL} from 'sentry/constants';\nimport {IconChevron, IconCopy} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {selectText} from 'sentry/utils/selectText';\n\nconst installText = (features: string[], featureName: string): string =>\n  `# ${t('Enables the %s feature', featureName)}\\n${features\n    .map(f => `SENTRY_FEATURES['${f}'] = True`)\n    .join('\\n')}`;\n\ntype Props = {\n  /**\n   * The English name of the feature. This is used in the comment that will\n   * be outputted above the example line of code to enable the feature.\n   */\n  featureName: string;\n  /**\n   * The feature flag keys that should be displayed in the code example for\n   * enabling the feature.\n   */\n  features: string[];\n  /**\n   * Render the disabled message within a warning Alert. A custom Alert\n   * component may be provided.\n   *\n   * Attaches additional styles to the FeatureDisabled component to make it\n   * look consistent within the Alert.\n   */\n  alert?: boolean | React.ElementType;\n  /**\n   * Do not show the help toggle. The description will always be rendered.\n   */\n  hideHelpToggle?: boolean;\n  /**\n   * A custom message to display. Defaults to a generic disabled message.\n   */\n  message?: string;\n};\n\n/**\n * DisabledInfo renders a component informing that a feature has been disabled.\n *\n * By default this component will render a help button which toggles more\n * information about why the feature is disabled, showing the missing feature\n * flag and linking to documentation for managing sentry server feature flags.\n */\nfunction FeatureDisabled({\n  features,\n  featureName,\n  alert,\n  hideHelpToggle,\n  message = t('This feature is not enabled on your Sentry installation.'),\n}: Props) {\n  const [showHelp, setShowHelp] = useState(false);\n\n  function renderHelp() {\n    return (\n      <Fragment>\n        <HelpText>\n          {tct(\n            `Enable this feature on your sentry installation by adding the\n              following configuration into your [configFile:sentry.conf.py].\n              See [configLink:the configuration documentation] for more\n              details.`,\n            {\n              configFile: <code />,\n              configLink: <ExternalLink href={CONFIG_DOCS_URL} />,\n            }\n          )}\n        </HelpText>\n        <Clipboard hideUnsupported value={installText(features, featureName)}>\n          <CopyButton borderless size=\"xsmall\" icon={<IconCopy size=\"xs\" />}>\n            {t('Copy to Clipboard')}\n          </CopyButton>\n        </Clipboard>\n        <Pre onClick={e => selectText(e.target as HTMLElement)}>\n          <code>{installText(features, featureName)}</code>\n        </Pre>\n      </Fragment>\n    );\n  }\n\n  if (!alert) {\n    const showDescription = hideHelpToggle || showHelp;\n    return (\n      <Fragment>\n        <FeatureDisabledMessage>\n          {message}\n          {!hideHelpToggle && (\n            <ToggleButton\n              priority=\"link\"\n              size=\"xsmall\"\n              onClick={() => setShowHelp(!showHelp)}\n            >\n              {t('Help')}\n              <IconChevron direction={showDescription ? 'up' : 'down'} />\n            </ToggleButton>\n          )}\n        </FeatureDisabledMessage>\n        {showDescription && <HelpDescription>{renderHelp()}</HelpDescription>}\n      </Fragment>\n    );\n  }\n\n  const AlertComponent = typeof alert === 'boolean' ? Alert : alert;\n  return (\n    <AlertComponent type=\"warning\" showIcon expand={renderHelp()}>\n      {message}\n    </AlertComponent>\n  );\n}\n\nconst FeatureDisabledMessage = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  line-height: ${p => p.theme.text.lineHeightBody};\n`;\n\nconst HelpDescription = styled('div')`\n  margin-top: ${space(1)};\n\n  pre,\n  code {\n    margin-bottom: 0;\n    white-space: pre;\n  }\n\n  button {\n    margin-bottom: ${space(0.5)};\n  }\n`;\n\nconst HelpText = styled('p')`\n  margin-bottom: ${space(1)};\n`;\n\nconst ToggleButton = styled(Button)`\n  color: ${p => p.theme.active};\n  height: ${p => p.theme.text.lineHeightBody}em;\n  min-height: ${p => p.theme.text.lineHeightBody}em;\n\n  &:hover {\n    color: ${p => p.theme.activeHover};\n  }\n\n  ${ButtonLabel} {\n    display: grid;\n    grid-auto-flow: column;\n    gap: ${space(1)};\n  }\n`;\n\nconst CopyButton = styled(Button)`\n  margin-left: auto;\n`;\n\nconst Pre = styled('pre')`\n  margin-bottom: 0;\n`;\n\nexport default FeatureDisabled;\n","import {Fragment} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\n\ntype ConfirmProps = React.ComponentProps<typeof Confirm>;\ntype Props = {\n  children: React.ReactNode | ConfirmProps['children'];\n  shouldConfirm?: boolean;\n} & Partial<\n  Pick<ConfirmProps, 'confirmText' | 'priority' | 'stopPropagation' | 'header'>\n> &\n  Pick<ConfirmProps, 'message' | 'disabled' | 'confirmText' | 'onConfirm'>;\n\nexport default function ConfirmableAction({shouldConfirm, children, ...props}: Props) {\n  if (shouldConfirm) {\n    return <Confirm {...props}>{children as ConfirmProps['children']}</Confirm>;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n","import styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {t} from 'sentry/locale';\n\nimport ActionButton from './button';\nimport ConfirmableAction from './confirmableAction';\n\nconst StyledAction = styled('a')<{disabled?: boolean}>`\n  display: flex;\n  align-items: center;\n  ${p => p.disabled && 'cursor: not-allowed;'}\n`;\n\nconst StyledActionButton = styled(ActionButton)<{\n  disabled?: boolean;\n  hasDropdown?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  pointer-events: ${p => (p.disabled ? 'none' : 'auto')};\n\n  ${p => p.disabled && 'cursor: not-allowed;'}\n  ${p => p.hasDropdown && `border-radius: ${p.theme.borderRadiusLeft}`};\n`;\n\ntype ConfirmableActionProps = React.ComponentProps<typeof ConfirmableAction>;\n\ntype CommonProps = Omit<\n  ConfirmableActionProps,\n  'onConfirm' | 'confirmText' | 'children' | 'stopPropagation' | 'priority'\n> & {\n  children: React.ReactChild;\n  title: string;\n  className?: string;\n  confirmLabel?: string;\n  confirmPriority?: ConfirmableActionProps['priority'];\n  disabled?: boolean;\n  onAction?: () => void;\n  shouldConfirm?: boolean;\n};\n\ntype Props = CommonProps &\n  ({type?: 'button'} & Partial<\n    Omit<React.ComponentProps<typeof StyledActionButton>, 'as' | 'children'>\n  >);\n\nexport default function ActionLink({\n  message,\n  className,\n  title,\n  onAction,\n  type,\n  confirmLabel,\n  disabled,\n  children,\n  shouldConfirm,\n  confirmPriority,\n  header,\n  ...props\n}: Props) {\n  const actionCommonProps = {\n    ['aria-label']: typeof title === 'string' ? title : t('Actions'),\n    className: classNames(className, {disabled}),\n    onClick: disabled ? undefined : onAction,\n    disabled,\n    children,\n    ...props,\n  };\n\n  const action =\n    type === 'button' ? (\n      <StyledActionButton {...actionCommonProps} />\n    ) : (\n      <StyledAction {...actionCommonProps} />\n    );\n\n  if (shouldConfirm && onAction) {\n    return (\n      <ConfirmableAction\n        shouldConfirm={shouldConfirm}\n        priority={confirmPriority}\n        disabled={disabled}\n        message={message}\n        header={header}\n        confirmText={confirmLabel}\n        onConfirm={onAction}\n        stopPropagation={disabled}\n      >\n        {action}\n      </ConfirmableAction>\n    );\n  }\n\n  return action;\n}\n","import {Component, Fragment} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport InputField from 'sentry/components/forms/inputField';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t} from 'sentry/locale';\nimport {ResolutionStatusDetails, SelectValue} from 'sentry/types';\n\ntype CountNames = 'ignoreCount' | 'ignoreUserCount';\ntype WindowNames = 'ignoreWindow' | 'ignoreUserWindow';\n\ntype Props = ModalRenderProps & {\n  countLabel: string;\n  countName: CountNames;\n  label: string;\n  onSelected: (statusDetails: ResolutionStatusDetails) => void;\n  windowName: WindowNames;\n  windowOptions: SelectValue<number>[];\n};\n\ntype State = {\n  count: number;\n  window: number | null;\n};\n\nclass CustomIgnoreCountModal extends Component<Props, State> {\n  state: State = {\n    count: 100,\n    window: null,\n  };\n\n  handleSubmit = () => {\n    const {count, window} = this.state;\n    const {countName, windowName} = this.props;\n\n    const statusDetails: ResolutionStatusDetails = {[countName]: count};\n    if (window) {\n      statusDetails[windowName] = window;\n    }\n    this.props.onSelected(statusDetails);\n    this.props.closeModal();\n  };\n\n  handleChange = (name: keyof State, value: number) => {\n    this.setState({[name]: value} as State);\n  };\n\n  render() {\n    const {Header, Footer, Body, countLabel, label, closeModal, windowOptions} =\n      this.props;\n    const {count, window} = this.state;\n    return (\n      <Fragment>\n        <Header>\n          <h4>{label}</h4>\n        </Header>\n        <Body>\n          <InputField\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            label={countLabel}\n            name=\"count\"\n            type=\"number\"\n            value={count}\n            onChange={val => this.handleChange('count' as 'count', Number(val))}\n            required\n            placeholder={t('e.g. 100')}\n          />\n          <SelectField\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            label={t('Time window')}\n            value={window}\n            name=\"window\"\n            onChange={val => this.handleChange('window' as const, val)}\n            options={windowOptions}\n            placeholder={t('e.g. per hour')}\n            allowClear\n            help={t('(Optional) If supplied, this rule will apply as a rate of change.')}\n          />\n        </Body>\n        <Footer>\n          <ButtonBar gap={1}>\n            <Button type=\"button\" onClick={closeModal}>\n              {t('Cancel')}\n            </Button>\n            <Button type=\"button\" priority=\"primary\" onClick={this.handleSubmit}>\n              {t('Ignore')}\n            </Button>\n          </ButtonBar>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default CustomIgnoreCountModal;\n","import {Component, createRef, Fragment} from 'react';\nimport moment from 'moment';\nimport {sprintf} from 'sprintf-js';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\nimport {ResolutionStatusDetails} from 'sentry/types';\n\nconst defaultProps = {\n  label: t('Ignore this issue until \\u2026'),\n};\n\ntype Props = ModalRenderProps & {\n  onSelected: (details: ResolutionStatusDetails) => void;\n} & typeof defaultProps;\n\ntype State = {\n  dateWarning: boolean;\n};\n\nexport default class CustomIgnoreDurationModal extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    dateWarning: false,\n  };\n\n  snoozeDateInputRef = createRef<HTMLInputElement>();\n\n  snoozeTimeInputRef = createRef<HTMLInputElement>();\n\n  selectedIgnoreMinutes = () => {\n    const dateStr = this.snoozeDateInputRef.current?.value; // YYYY-MM-DD\n    const timeStr = this.snoozeTimeInputRef.current?.value; // HH:MM\n    if (dateStr && timeStr) {\n      const selectedDate = moment.utc(dateStr + ' ' + timeStr);\n      if (selectedDate.isValid()) {\n        const now = moment.utc();\n        return selectedDate.diff(now, 'minutes');\n      }\n    }\n    return 0;\n  };\n\n  snoozeClicked = () => {\n    const minutes = this.selectedIgnoreMinutes();\n\n    this.setState({\n      dateWarning: minutes <= 0,\n    });\n\n    if (minutes > 0) {\n      this.props.onSelected({ignoreDuration: minutes});\n    }\n    this.props.closeModal();\n  };\n\n  render() {\n    // Give the user a sane starting point to select a date\n    // (prettier than the empty date/time inputs):\n    const defaultDate = new Date();\n    defaultDate.setDate(defaultDate.getDate() + 14);\n    defaultDate.setSeconds(0);\n    defaultDate.setMilliseconds(0);\n\n    const defaultDateVal = sprintf(\n      '%d-%02d-%02d',\n      defaultDate.getUTCFullYear(),\n      defaultDate.getUTCMonth() + 1,\n      defaultDate.getUTCDate()\n    );\n\n    const defaultTimeVal = sprintf('%02d:00', defaultDate.getUTCHours());\n    const {Header, Body, Footer, label} = this.props;\n\n    return (\n      <Fragment>\n        <Header>{label}</Header>\n        <Body>\n          <form className=\"form-horizontal\">\n            <div className=\"control-group\">\n              <h6 className=\"nav-header\">{t('Date')}</h6>\n              <input\n                className=\"form-control\"\n                type=\"date\"\n                id=\"snooze-until-date\"\n                defaultValue={defaultDateVal}\n                ref={this.snoozeDateInputRef}\n                required\n                style={{padding: '0 10px'}}\n              />\n            </div>\n            <div className=\"control-group m-b-1\">\n              <h6 className=\"nav-header\">{t('Time (UTC)')}</h6>\n              <input\n                className=\"form-control\"\n                type=\"time\"\n                id=\"snooze-until-time\"\n                defaultValue={defaultTimeVal}\n                ref={this.snoozeTimeInputRef}\n                style={{padding: '0 10px'}}\n                required\n              />\n            </div>\n          </form>\n        </Body>\n        {this.state.dateWarning && (\n          <Alert type=\"error\" showIcon>\n            {t('Please enter a valid date in the future')}\n          </Alert>\n        )}\n        <Footer>\n          <ButtonBar gap={1}>\n            <Button type=\"button\" priority=\"default\" onClick={this.props.closeModal}>\n              {t('Cancel')}\n            </Button>\n            <Button type=\"button\" priority=\"primary\" onClick={this.snoozeClicked}>\n              {t('Ignore')}\n            </Button>\n          </ButtonBar>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport CustomIgnoreCountModal from 'sentry/components/customIgnoreCountModal';\nimport CustomIgnoreDurationModal from 'sentry/components/customIgnoreDurationModal';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport Duration from 'sentry/components/duration';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconChevron, IconMute} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport {\n  ResolutionStatus,\n  ResolutionStatusDetails,\n  SelectValue,\n  UpdateResolutionStatus,\n} from 'sentry/types';\n\nconst IGNORE_DURATIONS = [30, 120, 360, 60 * 24, 60 * 24 * 7];\nconst IGNORE_COUNTS = [1, 10, 100, 1000, 10000, 100000];\nconst IGNORE_WINDOWS: SelectValue<number>[] = [\n  {value: 60, label: t('per hour')},\n  {value: 24 * 60, label: t('per day')},\n  {value: 24 * 7 * 60, label: t('per week')},\n];\n\ntype Props = {\n  onUpdate: (params: UpdateResolutionStatus) => void;\n  confirmLabel?: string;\n  confirmMessage?: React.ReactNode;\n  disabled?: boolean;\n  isIgnored?: boolean;\n  shouldConfirm?: boolean;\n};\n\nconst IgnoreActions = ({\n  onUpdate,\n  disabled,\n  shouldConfirm,\n  confirmMessage,\n  confirmLabel = t('Ignore'),\n  isIgnored = false,\n}: Props) => {\n  const onIgnore = (statusDetails?: ResolutionStatusDetails) => {\n    openConfirmModal({\n      bypass: !shouldConfirm,\n      onConfirm: () =>\n        onUpdate({\n          status: ResolutionStatus.IGNORED,\n          statusDetails,\n        }),\n      message: confirmMessage,\n      confirmText: confirmLabel,\n    });\n  };\n\n  const onCustomIgnore = (statusDetails: ResolutionStatusDetails) => {\n    onIgnore(statusDetails);\n  };\n\n  if (isIgnored) {\n    return (\n      <Tooltip title={t('Change status to unresolved')}>\n        <Button\n          priority=\"primary\"\n          size=\"xsmall\"\n          onClick={() => onUpdate({status: ResolutionStatus.UNRESOLVED})}\n          aria-label={t('Unignore')}\n          icon={<IconMute size=\"xs\" />}\n        />\n      </Tooltip>\n    );\n  }\n\n  const openCustomIgnoreDuration = () =>\n    openModal(deps => (\n      <CustomIgnoreDurationModal\n        {...deps}\n        onSelected={details => onCustomIgnore(details)}\n      />\n    ));\n\n  const openCustomIgnoreCount = () =>\n    openModal(deps => (\n      <CustomIgnoreCountModal\n        {...deps}\n        onSelected={details => onCustomIgnore(details)}\n        label={t('Ignore this issue until it occurs again\\u2026')}\n        countLabel={t('Number of times')}\n        countName=\"ignoreCount\"\n        windowName=\"ignoreWindow\"\n        windowOptions={IGNORE_WINDOWS}\n      />\n    ));\n\n  const openCustomIgnoreUserCount = () =>\n    openModal(deps => (\n      <CustomIgnoreCountModal\n        {...deps}\n        onSelected={details => onCustomIgnore(details)}\n        label={t('Ignore this issue until it affects an additional\\u2026')}\n        countLabel={t('Number of users')}\n        countName=\"ignoreUserCount\"\n        windowName=\"ignoreUserWindow\"\n        windowOptions={IGNORE_WINDOWS}\n      />\n    ));\n\n  const dropdownItems = [\n    {\n      key: 'for',\n      label: t('For\\u2026'),\n      isSubmenu: true,\n      children: [\n        ...IGNORE_DURATIONS.map(duration => ({\n          key: `for-${duration}`,\n          label: <Duration seconds={duration * 60} />,\n          onAction: () => onIgnore({ignoreDuration: duration}),\n        })),\n        {\n          key: 'for-custom',\n          label: t('Custom'),\n          onAction: () => openCustomIgnoreDuration(),\n        },\n      ],\n    },\n    {\n      key: 'until-reoccur',\n      label: t('Until this occurs again\\u2026'),\n      isSubmenu: true,\n      children: [\n        ...IGNORE_COUNTS.map(count => ({\n          key: `until-reoccur-${count}-times`,\n          label:\n            count === 1\n              ? t('one time\\u2026') // This is intentional as unbalanced string formatters are problematic\n              : tn('%s time\\u2026', '%s times\\u2026', count),\n          isSubmenu: true,\n          children: [\n            {\n              key: `until-reoccur-${count}-times-from-now`,\n              label: t('from now'),\n              onAction: () => onIgnore({ignoreCount: count}),\n            },\n            ...IGNORE_WINDOWS.map(({value, label}) => ({\n              key: `until-reoccur-${count}-times-from-${label}`,\n              label,\n              onAction: () =>\n                onIgnore({\n                  ignoreCount: count,\n                  ignoreWindow: value,\n                }),\n            })),\n          ],\n        })),\n        {\n          key: 'until-reoccur-custom',\n          label: t('Custom'),\n          onAction: () => openCustomIgnoreCount(),\n        },\n      ],\n    },\n    {\n      key: 'until-affect',\n      label: t('Until this affects an additional\\u2026'),\n      isSubmenu: true,\n      children: [\n        ...IGNORE_COUNTS.map(count => ({\n          key: `until-affect-${count}-users`,\n          label:\n            count === 1\n              ? t('one user\\u2026') // This is intentional as unbalanced string formatters are problematic\n              : tn('%s user\\u2026', '%s users\\u2026', count),\n          isSubmenu: true,\n          children: [\n            {\n              key: `until-affect-${count}-users-from-now`,\n              label: t('from now'),\n              onAction: () => onIgnore({ignoreUserCount: count}),\n            },\n            ...IGNORE_WINDOWS.map(({value, label}) => ({\n              key: `until-affect-${count}-users-from-${label}`,\n              label,\n              onAction: () =>\n                onIgnore({\n                  ignoreUserCount: count,\n                  ignoreUserWindow: value,\n                }),\n            })),\n          ],\n        })),\n        {\n          key: 'until-affect-custom',\n          label: t('Custom'),\n          onAction: () => openCustomIgnoreUserCount(),\n        },\n      ],\n    },\n  ];\n\n  return (\n    <ButtonBar merged>\n      <IgnoreButton\n        size=\"xsmall\"\n        tooltipProps={{delay: 300, disabled}}\n        title={t(\n          'Silences alerts for this issue and removes it from the issue stream by default.'\n        )}\n        icon={<IconMute size=\"xs\" />}\n        onClick={() => onIgnore()}\n        disabled={disabled}\n      >\n        {t('Ignore')}\n      </IgnoreButton>\n      <DropdownMenuControlV2\n        trigger={({props: triggerProps, ref: triggerRef}) => (\n          <DropdownTrigger\n            ref={triggerRef}\n            {...triggerProps}\n            aria-label={t('Ignore options')}\n            size=\"xsmall\"\n            icon={<IconChevron direction=\"down\" size=\"xs\" />}\n            disabled={disabled}\n          />\n        )}\n        menuTitle={t('Ignore')}\n        items={dropdownItems}\n        isDisabled={disabled}\n      />\n    </ButtonBar>\n  );\n};\n\nexport default IgnoreActions;\n\nconst IgnoreButton = styled(Button)`\n  box-shadow: none;\n  border-radius: ${p => p.theme.borderRadiusLeft};\n`;\n\nconst DropdownTrigger = styled(Button)`\n  box-shadow: none;\n  border-radius: ${p => p.theme.borderRadiusRight};\n  border-left: none;\n`;\n","import {Component} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport {SelectAsyncField} from 'sentry/components/deprecatedforms';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Release} from 'sentry/types';\n\ntype Props = ModalRenderProps & {\n  onSelected: ({inRelease: string}) => void;\n  orgSlug: string;\n  projectSlug?: string;\n};\n\ntype State = {\n  version: string;\n};\n\nclass CustomResolutionModal extends Component<Props, State> {\n  state: State = {\n    version: '',\n  };\n\n  onChange = (value: string | number | boolean) => {\n    this.setState({version: value as string}); // TODO(ts): Add select value type as generic to select controls\n  };\n\n  onAsyncFieldResults = (results: Release[]) =>\n    results.map(release => ({\n      value: release.version,\n      label: <Version version={release.version} anchor={false} />,\n      details: (\n        <span>\n          {t('Created')} <TimeSince date={release.dateCreated} />\n        </span>\n      ),\n      release,\n    }));\n\n  render() {\n    const {orgSlug, projectSlug, closeModal, onSelected, Header, Body, Footer} =\n      this.props;\n    const url = projectSlug\n      ? `/projects/${orgSlug}/${projectSlug}/releases/`\n      : `/organizations/${orgSlug}/releases/`;\n\n    const onSubmit = (e: React.FormEvent) => {\n      e.preventDefault();\n      onSelected({inRelease: this.state.version});\n      closeModal();\n    };\n\n    return (\n      <form onSubmit={onSubmit}>\n        <Header>{t('Resolved In')}</Header>\n        <Body>\n          <SelectAsyncField\n            label={t('Version')}\n            id=\"version\"\n            name=\"version\"\n            onChange={this.onChange}\n            placeholder={t('e.g. 1.0.4')}\n            url={url}\n            onResults={this.onAsyncFieldResults}\n            onQuery={query => ({query})}\n          />\n        </Body>\n        <Footer>\n          <Button type=\"button\" css={{marginRight: space(1.5)}} onClick={closeModal}>\n            {t('Cancel')}\n          </Button>\n          <Button type=\"submit\" priority=\"primary\">\n            {t('Save Changes')}\n          </Button>\n        </Footer>\n      </form>\n    );\n  }\n}\n\nexport default CustomResolutionModal;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport CustomResolutionModal from 'sentry/components/customResolutionModal';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {\n  Organization,\n  Release,\n  ResolutionStatus,\n  ResolutionStatusDetails,\n  UpdateResolutionStatus,\n} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst defaultProps = {\n  isResolved: false,\n  isAutoResolved: false,\n  confirmLabel: t('Resolve'),\n};\n\ntype Props = {\n  hasRelease: boolean;\n  onUpdate: (data: UpdateResolutionStatus) => void;\n  orgSlug: string;\n  organization: Organization;\n  confirmMessage?: React.ReactNode;\n  disableDropdown?: boolean;\n  disabled?: boolean;\n  latestRelease?: Release;\n  projectFetchError?: boolean;\n  projectSlug?: string;\n  shouldConfirm?: boolean;\n} & Partial<typeof defaultProps>;\n\nclass ResolveActions extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  handleAnotherExistingReleaseResolution(statusDetails: ResolutionStatusDetails) {\n    const {organization, onUpdate} = this.props;\n    onUpdate({\n      status: ResolutionStatus.RESOLVED,\n      statusDetails,\n    });\n    trackAdvancedAnalyticsEvent('resolve_issue', {\n      organization,\n      release: 'anotherExisting',\n    });\n  }\n\n  handleCurrentReleaseResolution = () => {\n    const {onUpdate, organization, hasRelease, latestRelease} = this.props;\n    hasRelease &&\n      onUpdate({\n        status: ResolutionStatus.RESOLVED,\n        statusDetails: {\n          inRelease: latestRelease ? latestRelease.version : 'latest',\n        },\n      });\n    trackAdvancedAnalyticsEvent('resolve_issue', {\n      organization,\n      release: 'current',\n    });\n  };\n\n  handleNextReleaseResolution = () => {\n    const {onUpdate, organization, hasRelease} = this.props;\n    hasRelease &&\n      onUpdate({\n        status: ResolutionStatus.RESOLVED,\n        statusDetails: {\n          inNextRelease: true,\n        },\n      });\n    trackAdvancedAnalyticsEvent('resolve_issue', {\n      organization,\n      release: 'next',\n    });\n  };\n\n  renderResolved() {\n    const {isAutoResolved, onUpdate} = this.props;\n\n    return (\n      <Tooltip\n        title={\n          isAutoResolved\n            ? t(\n                'This event is resolved due to the Auto Resolve configuration for this project'\n              )\n            : t('Unresolve')\n        }\n      >\n        <Button\n          priority=\"primary\"\n          size=\"xsmall\"\n          icon={<IconCheckmark size=\"xs\" />}\n          aria-label={t('Unresolve')}\n          disabled={isAutoResolved}\n          onClick={() => onUpdate({status: ResolutionStatus.UNRESOLVED})}\n        />\n      </Tooltip>\n    );\n  }\n\n  renderDropdownMenu() {\n    const {\n      projectSlug,\n      isResolved,\n      hasRelease,\n      latestRelease,\n      confirmMessage,\n      shouldConfirm,\n      disabled,\n      confirmLabel,\n      disableDropdown,\n    } = this.props;\n\n    if (isResolved) {\n      return this.renderResolved();\n    }\n\n    const actionTitle = !hasRelease\n      ? t('Set up release tracking in order to use this feature.')\n      : '';\n\n    const onActionOrConfirm = onAction => {\n      openConfirmModal({\n        bypass: !shouldConfirm,\n        onConfirm: onAction,\n        message: confirmMessage,\n        confirmText: confirmLabel,\n      });\n    };\n\n    const items = [\n      {\n        key: 'next-release',\n        label: t('The next release'),\n        details: actionTitle,\n        onAction: () => onActionOrConfirm(this.handleNextReleaseResolution),\n        showDividers: !hasRelease,\n      },\n      {\n        key: 'current-release',\n        label: latestRelease\n          ? t('The current release (%s)', formatVersion(latestRelease.version))\n          : t('The current release'),\n        details: actionTitle,\n        onAction: () => onActionOrConfirm(this.handleCurrentReleaseResolution),\n        showDividers: !hasRelease,\n      },\n      {\n        key: 'another-release',\n        label: t('Another existing release\\u2026'),\n        onAction: () => this.openCustomReleaseModal(),\n      },\n    ];\n\n    const isDisabled = !projectSlug ? disabled : disableDropdown;\n\n    return (\n      <DropdownMenuControlV2\n        items={items}\n        trigger={({props: triggerProps, ref: triggerRef}) => (\n          <DropdownTrigger\n            ref={triggerRef}\n            {...triggerProps}\n            aria-label={t('More resolve options')}\n            size=\"xsmall\"\n            icon={<IconChevron direction=\"down\" size=\"xs\" />}\n            disabled={isDisabled}\n          />\n        )}\n        disabledKeys={\n          disabled || !hasRelease\n            ? ['next-release', 'current-release', 'another-release']\n            : []\n        }\n        menuTitle={t('Resolved In')}\n        isDisabled={isDisabled}\n      />\n    );\n  }\n\n  openCustomReleaseModal() {\n    const {orgSlug, projectSlug} = this.props;\n\n    openModal(deps => (\n      <CustomResolutionModal\n        {...deps}\n        onSelected={(statusDetails: ResolutionStatusDetails) =>\n          this.handleAnotherExistingReleaseResolution(statusDetails)\n        }\n        orgSlug={orgSlug}\n        projectSlug={projectSlug}\n      />\n    ));\n  }\n\n  render() {\n    const {\n      isResolved,\n      onUpdate,\n      confirmMessage,\n      shouldConfirm,\n      disabled,\n      confirmLabel,\n      projectFetchError,\n    } = this.props;\n\n    if (isResolved) {\n      return this.renderResolved();\n    }\n\n    const onResolve = () =>\n      openConfirmModal({\n        bypass: !shouldConfirm,\n        onConfirm: () => onUpdate({status: ResolutionStatus.RESOLVED}),\n        message: confirmMessage,\n        confirmText: confirmLabel,\n      });\n\n    return (\n      <Tooltip disabled={!projectFetchError} title={t('Error fetching project')}>\n        <ButtonBar merged>\n          <ResolveButton\n            size=\"xsmall\"\n            title={t(\n              'Resolves the issue. The issue will get unresolved if it happens again.'\n            )}\n            tooltipProps={{delay: 300, disabled}}\n            icon={<IconCheckmark size=\"xs\" />}\n            onClick={onResolve}\n            disabled={disabled}\n          >\n            {t('Resolve')}\n          </ResolveButton>\n          {this.renderDropdownMenu()}\n        </ButtonBar>\n      </Tooltip>\n    );\n  }\n}\n\nexport default withOrganization(ResolveActions);\n\nconst ResolveButton = styled(Button)`\n  box-shadow: none;\n  border-radius: ${p => p.theme.borderRadiusLeft};\n`;\n\nconst DropdownTrigger = styled(Button)`\n  box-shadow: none;\n  border-radius: ${p => p.theme.borderRadiusRight};\n  border-left: none;\n`;\n","import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {useHover} from '@react-aria/interactions';\nimport classNames from 'classnames';\n\nimport {IconCheckmark, IconChevron, IconInfo, IconNot, IconWarning} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\n  expand?: React.ReactNode;\n  opaque?: boolean;\n  showIcon?: boolean;\n  system?: boolean;\n  trailingItems?: React.ReactNode;\n  type?: keyof Theme['alert'];\n}\n\nconst DEFAULT_TYPE = 'info';\n\nfunction Alert({\n  type = DEFAULT_TYPE,\n  showIcon = false,\n  opaque,\n  system,\n  expand,\n  trailingItems,\n  className,\n  children,\n  ...props\n}: AlertProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const showExpand = defined(expand);\n  const showTrailingItems = defined(trailingItems);\n\n  // Show the hover state (with darker borders) only when hovering over the\n  // IconWrapper or MessageContainer.\n  const {hoverProps: iconHoverProps, isHovered: iconIsHovered} = useHover({\n    isDisabled: !showExpand,\n  });\n  const {hoverProps: messageHoverProps, isHovered: messageIsHovered} = useHover({\n    isDisabled: !showExpand,\n  });\n\n  function getIcon() {\n    switch (type) {\n      case 'warning':\n        return <IconWarning />;\n      case 'success':\n        return <IconCheckmark />;\n      case 'error':\n        return <IconNot />;\n      case 'info':\n      default:\n        return <IconInfo />;\n    }\n  }\n\n  function handleClick() {\n    showExpand && setIsExpanded(!isExpanded);\n  }\n\n  return (\n    <Wrap\n      type={type}\n      system={system}\n      opaque={opaque}\n      expand={expand}\n      hovered={iconIsHovered || messageIsHovered}\n      className={classNames(type ? `ref-${type}` : '', className)}\n      {...props}\n    >\n      {showIcon && (\n        <IconWrapper onClick={handleClick} {...iconHoverProps}>\n          {getIcon()}\n        </IconWrapper>\n      )}\n      <ContentWrapper>\n        <MessageContainer\n          onClick={handleClick}\n          showIcon={showIcon}\n          showTrailingItems={showTrailingItems}\n          {...messageHoverProps}\n        >\n          <Message>{children}</Message>\n          {(showExpand || showTrailingItems) && (\n            <TrailingItemsWrap>\n              <TrailingItems onClick={e => e.stopPropagation()}>\n                {trailingItems}\n              </TrailingItems>\n              {showExpand && (\n                <ExpandIconWrap>\n                  <IconChevron direction={isExpanded ? 'up' : 'down'} />\n                </ExpandIconWrap>\n              )}\n            </TrailingItemsWrap>\n          )}\n        </MessageContainer>\n        {isExpanded && (\n          <ExpandContainer>\n            {Array.isArray(expand) ? expand.map(item => item) : expand}\n          </ExpandContainer>\n        )}\n      </ContentWrapper>\n    </Wrap>\n  );\n}\n\nconst alertStyles = ({\n  type = DEFAULT_TYPE,\n  system,\n  opaque,\n  expand,\n  hovered,\n  theme,\n}: AlertProps & {theme: Theme; hovered?: boolean}) => {\n  const alertColors = theme.alert[type];\n  const showExpand = defined(expand);\n\n  return css`\n    display: flex;\n    margin: 0 0 ${space(2)};\n    font-size: ${theme.fontSizeMedium};\n    border-radius: ${theme.borderRadius};\n    border: 1px solid ${alertColors.border};\n    background: ${opaque\n      ? `linear-gradient(${alertColors.backgroundLight}, ${alertColors.backgroundLight}), linear-gradient(${theme.background}, ${theme.background})`\n      : `${alertColors.backgroundLight}`};\n\n    a:not([role='button']) {\n      color: ${theme.textColor};\n      text-decoration-color: ${theme.translucentBorder};\n      text-decoration-style: solid;\n      text-decoration-line: underline;\n      text-decoration-thickness: 0.08em;\n      text-underline-offset: 0.06em;\n    }\n    a:not([role='button']):hover {\n      text-decoration-color: ${theme.subText};\n      text-decoration-style: solid;\n    }\n\n    pre {\n      background: ${alertColors.backgroundLight};\n      margin: ${space(0.5)} 0 0;\n    }\n\n    ${IconWrapper}, ${ExpandIconWrap} {\n      color: ${alertColors.iconColor};\n    }\n\n    ${hovered &&\n    `\n      border-color: ${alertColors.borderHover};\n      ${IconWrapper}, ${IconChevron} {\n        color: ${alertColors.iconHoverColor};\n      }\n    `}\n\n    ${showExpand &&\n    `${IconWrapper}, ${MessageContainer} {\n        cursor: pointer;\n      }\n      ${TrailingItems} {\n       cursor: auto;\n      }\n    `}\n\n    ${system &&\n    `\n      border-width: 0 0 1px 0;\n      border-radius: 0;\n    `}\n  `;\n};\n\nconst Wrap = styled('div')<AlertProps & {hovered: boolean}>`\n  ${alertStyles}\n`;\n\nconst IconWrapper = styled('div')`\n  display: flex;\n  height: calc(${p => p.theme.fontSizeMedium} * ${p => p.theme.text.lineHeightBody});\n  padding: ${space(1.5)} ${space(1)} ${space(1.5)} ${space(2)};\n  box-sizing: content-box;\n  align-items: center;\n`;\n\nconst ContentWrapper = styled('div')`\n  width: 100%;\n`;\n\nconst MessageContainer = styled('div')<{\n  showIcon: boolean;\n  showTrailingItems: boolean;\n}>`\n  display: flex;\n  width: 100%;\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(1.5)};\n  padding-left: ${p => (p.showIcon ? '0' : space(2))};\n  padding-right: ${p => (p.showTrailingItems ? space(1.5) : space(2))};\n`;\n\nconst Message = styled('span')`\n  line-height: ${p => p.theme.text.lineHeightBody};\n  position: relative;\n  flex: 1;\n`;\n\nconst TrailingItems = styled('div')`\n  height: calc(${p => p.theme.fontSizeMedium} * ${p => p.theme.text.lineHeightBody});\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-rows: 100%;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst TrailingItemsWrap = styled(TrailingItems)`\n  margin-left: ${space(1)};\n`;\n\nconst ExpandIconWrap = styled('div')`\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst ExpandContainer = styled('div')`\n  display: grid;\n  padding-right: ${space(1.5)};\n  padding-bottom: ${space(1.5)};\n`;\n\nexport {alertStyles};\n\nexport default Alert;\n","import {Children, cloneElement, isValidElement} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport {ButtonProps, StyledButton} from 'sentry/components/button';\nimport space, {ValidSize} from 'sentry/styles/space';\n\ntype ButtonBarProps = {\n  children: React.ReactNode;\n  active?: ButtonProps['barId'];\n  className?: string;\n  gap?: ValidSize;\n  merged?: boolean;\n};\n\nfunction ButtonBar({\n  children,\n  className,\n  active,\n  merged = false,\n  gap = 0,\n}: ButtonBarProps) {\n  const shouldCheckActive = typeof active !== 'undefined';\n  return (\n    <ButtonGrid merged={merged} gap={gap} className={className}>\n      {!shouldCheckActive\n        ? children\n        : Children.map(children, child => {\n            if (!isValidElement(child)) {\n              return child;\n            }\n\n            const {props: childProps, ...childWithoutProps} = child;\n\n            // We do not want to pass `barId` to <Button>`\n            const {barId, ...props} = childProps;\n            const isActive = active === barId;\n\n            // This [\"primary\"] could be customizable with a prop,\n            // but let's just enforce one \"active\" type for now\n            const priority = isActive ? 'primary' : childProps.priority || 'default';\n\n            return cloneElement(childWithoutProps as React.ReactElement, {\n              ...props,\n              className: classNames(className, {active: isActive}),\n              priority,\n            });\n          })}\n    </ButtonGrid>\n  );\n}\n\nconst MergedStyles = () => css`\n  /* Raised buttons show borders on both sides. Useful to create pill bars */\n  & > .active {\n    z-index: 2;\n  }\n\n  & > .dropdown,\n  & > button,\n  & > input,\n  & > a {\n    position: relative;\n\n    /* First button is square on the right side */\n    &:first-child:not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n\n      & > .dropdown-actor > ${StyledButton} {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n    }\n\n    /* Middle buttons are square */\n    &:not(:last-child):not(:first-child) {\n      border-radius: 0;\n\n      & > .dropdown-actor > ${StyledButton} {\n        border-radius: 0;\n      }\n    }\n\n    /* Middle buttons only need one border so we don't get a double line */\n    &:first-child {\n      & + .dropdown:not(:last-child),\n      & + a:not(:last-child),\n      & + input:not(:last-child),\n      & + button:not(:last-child) {\n        margin-left: -1px;\n      }\n    }\n\n    /* Middle buttons only need one border so we don't get a double line */\n    /* stylelint-disable-next-line no-duplicate-selectors */\n    &:not(:last-child):not(:first-child) {\n      & + .dropdown,\n      & + button,\n      & + input,\n      & + a {\n        margin-left: -1px;\n      }\n    }\n\n    /* Last button is square on the left side */\n    &:last-child:not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n      margin-left: -1px;\n\n      & > .dropdown-actor > ${StyledButton} {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        margin-left: -1px;\n      }\n    }\n  }\n`;\n\nconst ButtonGrid = styled('div')<{gap: ValidSize; merged: boolean}>`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: ${p => space(p.gap)};\n  align-items: center;\n\n  ${p => p.merged && MergedStyles}\n`;\n\nexport {ButtonGrid, MergedStyles};\nexport default ButtonBar;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  /**\n   * Adds hover and focus states to the card\n   */\n  interactive?: boolean;\n};\n\nconst hoverStyle = css`\n  &:focus,\n  &:hover {\n    box-shadow: 0px 0px 0px 6px rgba(209, 202, 216, 0.2);\n    outline: none;\n  }\n\n  &:active {\n    box-shadow: 0px 0px 0px 6px rgba(209, 202, 216, 0.5);\n  }\n\n  /* This is to ensure the graph is visually clickable */\n  * {\n    cursor: pointer;\n  }\n`;\n\nconst Card = styled('div')<Props>`\n  position: relative;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  align-items: stretch;\n  flex-direction: column;\n  transition: box-shadow 0.2s ease;\n  text-align: left;\n  padding: 0;\n\n  ${p => p.interactive && 'cursor: pointer'};\n  ${p => p.interactive && hoverStyle};\n`;\n\nexport default Card;\n","import 'echarts/lib/component/markPoint';\n\nimport type {MarkPointComponentOption} from 'echarts';\n\n/**\n * eCharts markPoint\n *\n * See https://ecomfe.github.io/echarts-doc/public/en/option.html#series-line.markPoint\n */\nexport default function MarkPoint(\n  props: MarkPointComponentOption\n): MarkPointComponentOption {\n  return {\n    ...props,\n  };\n}\n","// Import to ensure echarts components are loaded.\nimport './components/markPoint';\n\nimport {useTheme} from '@emotion/react';\nimport set from 'lodash/set';\n\nimport {getFormattedDate} from 'sentry/utils/dates';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\n\nimport {BarChart, BarChartProps, BarChartSeries} from './barChart';\nimport type BaseChart from './baseChart';\nimport {truncationFormatter} from './utils';\n\ntype Marker = {\n  color: string;\n  name: string;\n  value: string | number | Date;\n  symbolSize?: number;\n};\n\ntype ChartProps = React.ComponentProps<typeof BaseChart>;\n\ninterface Props extends Omit<ChartProps, 'css' | 'colors' | 'series' | 'height'> {\n  /**\n   * Chart height\n   */\n  height: number;\n  /**\n   * Colors to use on the chart.\n   */\n  colors?: string[];\n\n  /**\n   * A list of colors to use on hover.\n   * By default hover state will shift opacity from 0.6 to 1.0.\n   * You can use this prop to also shift colors on hover.\n   */\n  emphasisColors?: string[];\n\n  /**\n   * Delay time for hiding tooltip, in ms.\n   */\n  hideDelay?: number;\n\n  /**\n   * Show max/min values on yAxis\n   */\n  labelYAxisExtents?: boolean;\n\n  /**\n   * A list of series to be rendered as markLine components on the chart\n   * This is often used to indicate start/end markers on the xAxis\n   */\n  markers?: Marker[];\n\n  series?: BarChartProps['series'];\n\n  /**\n   * Whether not we show a MarkLine label\n   */\n  showMarkLineLabel?: boolean;\n\n  /**\n   * Whether not the series should be stacked.\n   *\n   * Some of our stats endpoints return data where the 'total' series includes\n   * breakdown data (issues). For these results `stacked` should be false.\n   * Other endpoints return decomposed results that need to be stacked (outcomes).\n   */\n  stacked?: boolean;\n\n  /**\n   * Function to format tooltip values\n   */\n  tooltipFormatter?: (value: number) => string;\n\n  /**\n   * Whether timestamps are should be shown in UTC or local timezone.\n   */\n  utc?: boolean;\n}\n\nfunction MiniBarChart({\n  markers,\n  emphasisColors,\n  series,\n  hideDelay,\n  tooltipFormatter,\n  colors,\n  stacked = false,\n  labelYAxisExtents = false,\n  showMarkLineLabel = false,\n  height,\n  ...props\n}: Props) {\n  const {ref: _ref, ...barChartProps} = props;\n  const theme = useTheme();\n  const colorList = Array.isArray(colors)\n    ? colors\n    : [theme.gray200, theme.purple300, theme.purple300];\n\n  let chartSeries: BarChartSeries[] = [];\n\n  // Ensure bars overlap and that empty values display as we're disabling the axis lines.\n  if (!!series?.length) {\n    chartSeries = series.map((original, i: number) => {\n      const updated: BarChartSeries = {\n        ...original,\n        cursor: 'normal',\n        type: 'bar',\n      };\n\n      if (i === 0) {\n        updated.barMinHeight = 1;\n        if (stacked === false) {\n          updated.barGap = '-100%';\n        }\n      }\n      if (stacked) {\n        updated.stack = 'stack1';\n      }\n      set(updated, 'itemStyle.color', colorList[i]);\n      set(updated, 'itemStyle.opacity', 0.6);\n      set(updated, 'emphasis.itemStyle.opacity', 1.0);\n      set(updated, 'emphasis.itemStyle.color', emphasisColors?.[i] ?? colorList[i]);\n\n      return updated;\n    });\n  }\n\n  if (markers) {\n    const markerTooltip = {\n      show: true,\n      trigger: 'item',\n      formatter: ({data}) => {\n        const time = getFormattedDate(data.coord[0], 'MMM D, YYYY LT', {\n          local: !props.utc,\n        });\n        const name = truncationFormatter(data.name, props?.xAxis?.truncate);\n        return [\n          '<div class=\"tooltip-series\">',\n          `<div><span class=\"tooltip-label\"><strong>${name}</strong></span></div>`,\n          '</div>',\n          '<div class=\"tooltip-date\">',\n          time,\n          '</div>',\n          '</div>',\n          '<div class=\"tooltip-arrow\"></div>',\n        ].join('');\n      },\n    };\n\n    const markPoint = {\n      data: markers.map((marker: Marker) => ({\n        name: marker.name,\n        coord: [marker.value, 0],\n        tooltip: markerTooltip,\n        symbol: 'circle',\n        symbolSize: marker.symbolSize ?? 8,\n        itemStyle: {\n          color: marker.color,\n          borderColor: theme.background,\n        },\n      })),\n    };\n    chartSeries[0].markPoint = markPoint;\n  }\n\n  const yAxisOptions = labelYAxisExtents\n    ? {\n        showMinLabel: true,\n        showMaxLabel: true,\n        interval: Infinity,\n        axisLabel: {\n          formatter(value: number) {\n            if (tooltipFormatter) {\n              return tooltipFormatter(value);\n            }\n            return formatAbbreviatedNumber(value);\n          },\n        },\n      }\n    : {\n        axisLabel: {\n          show: false,\n        },\n      };\n\n  const chartOptions: Omit<BarChartProps, 'series'> = {\n    tooltip: {\n      trigger: 'axis',\n      hideDelay,\n      valueFormatter: tooltipFormatter\n        ? (value: number) => tooltipFormatter(value)\n        : undefined,\n    },\n    yAxis: {\n      max(value: {max: number; min: number}) {\n        // This keeps small datasets from looking 'scary'\n        // by having full bars for < 10 values.\n        if (value.max < 10) {\n          return 10;\n        }\n        // Adds extra spacing at the top of the chart canvas, ensuring the series doesn't hit the ceiling, leaving more empty space.\n        // When the user hovers over an empty space, a tooltip with all series information is displayed.\n        return (value.max * (height + 10)) / height;\n      },\n      splitLine: {\n        show: false,\n      },\n      ...yAxisOptions,\n    },\n    grid: {\n      // Offset to ensure there is room for the marker symbols at the\n      // default size.\n      top: labelYAxisExtents || showMarkLineLabel ? 6 : 0,\n      bottom: markers || labelYAxisExtents || showMarkLineLabel ? 4 : 0,\n      left: markers ? 8 : showMarkLineLabel ? 35 : 4,\n      right: markers ? 4 : 0,\n    },\n    xAxis: {\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n        alignWithLabel: true,\n      },\n      axisLabel: {\n        show: false,\n      },\n      axisPointer: {\n        type: 'line' as const,\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          width: 0,\n        },\n      },\n    },\n    options: {\n      animation: false,\n    },\n  };\n\n  return (\n    <BarChart series={chartSeries} height={height} {...chartOptions} {...barChartProps} />\n  );\n}\n\nexport default MiniBarChart;\n","import {Children, Fragment, useState} from 'react';\n\nimport Button from 'sentry/components/button';\nimport {t, tn} from 'sentry/locale';\n\ntype CollapseButtonRenderProps = {\n  onCollapse: () => void;\n};\n\ntype ExpandButtonRenderProps = {\n  numberOfHiddenItems: number;\n  onExpand: () => void;\n};\n\ntype Props = {\n  collapseButton?: (props: CollapseButtonRenderProps) => React.ReactNode;\n  expandButton?: (props: ExpandButtonRenderProps) => React.ReactNode;\n  maxVisibleItems?: number;\n};\n\n/**\n * This component is used to show first X items and collapse the rest\n */\nconst Collapsible: React.FC<Props> = ({\n  collapseButton,\n  expandButton,\n  maxVisibleItems = 5,\n  children,\n}) => {\n  const [isCollapsed, setCollapsed] = useState(true);\n  const handleCollapseToggle = () => setCollapsed(!isCollapsed);\n\n  const items = Children.toArray(children);\n  const canCollapse = items.length > maxVisibleItems;\n\n  if (!canCollapse) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  const visibleItems = isCollapsed ? items.slice(0, maxVisibleItems) : items;\n  const numberOfHiddenItems = items.length - visibleItems.length;\n\n  const showDefault =\n    (numberOfHiddenItems > 0 && !expandButton) ||\n    (numberOfHiddenItems === 0 && !collapseButton);\n\n  return (\n    <Fragment>\n      {visibleItems}\n\n      {showDefault && (\n        <Button priority=\"link\" onClick={handleCollapseToggle}>\n          {isCollapsed\n            ? tn('Show %s hidden item', 'Show %s hidden items', numberOfHiddenItems)\n            : t('Collapse')}\n        </Button>\n      )}\n\n      {numberOfHiddenItems > 0 &&\n        expandButton?.({onExpand: handleCollapseToggle, numberOfHiddenItems})}\n      {numberOfHiddenItems === 0 && collapseButton?.({onCollapse: handleCollapseToggle})}\n    </Fragment>\n  );\n};\n\nexport default Collapsible;\n","import {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport PageFilterDropdownButton from 'sentry/components/organizations/pageFilters/pageFilterDropdownButton';\nimport PageFilterPinIndicator from 'sentry/components/organizations/pageFilters/pageFilterPinIndicator';\nimport TimeRangeSelector, {\n  ChangeData,\n} from 'sentry/components/organizations/timeRangeSelector';\nimport {IconCalendar} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {\n  DEFAULT_DAY_END_TIME,\n  DEFAULT_DAY_START_TIME,\n  getFormattedDate,\n} from 'sentry/utils/dates';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Props = Omit<\n  React.ComponentProps<typeof TimeRangeSelector>,\n  'organization' | 'start' | 'end' | 'utc' | 'relative' | 'onUpdate'\n> &\n  WithRouterProps & {\n    /**\n     * Reset these URL params when we fire actions (custom routing only)\n     */\n    resetParamsOnChange?: string[];\n  };\n\nfunction DatePageFilter({router, resetParamsOnChange, ...props}: Props) {\n  const {selection, desyncedFilters} = usePageFilters();\n  const organization = useOrganization();\n  const {start, end, period, utc} = selection.datetime;\n\n  const handleUpdate = (timePeriodUpdate: ChangeData) => {\n    const {relative, ...startEndUtc} = timePeriodUpdate;\n    const newTimePeriod = {\n      period: relative,\n      ...startEndUtc,\n    };\n\n    updateDateTime(newTimePeriod, router, {save: true, resetParams: resetParamsOnChange});\n  };\n\n  const customDropdownButton = ({getActorProps, isOpen}) => {\n    let label;\n    if (start && end) {\n      const startTimeFormatted = getFormattedDate(start, 'HH:mm:ss', {local: true});\n      const endTimeFormatted = getFormattedDate(end, 'HH:mm:ss', {local: true});\n\n      const shouldShowTimes =\n        startTimeFormatted !== DEFAULT_DAY_START_TIME ||\n        endTimeFormatted !== DEFAULT_DAY_END_TIME;\n      const format = shouldShowTimes ? 'MMM D, h:mma' : 'MMM D';\n\n      const startString = getFormattedDate(start, format, {local: true});\n      const endString = getFormattedDate(end, format, {local: true});\n\n      label = `${startString} - ${endString}`;\n    } else {\n      label = period?.toUpperCase();\n    }\n\n    return (\n      <PageFilterDropdownButton\n        detached\n        hideBottomBorder={false}\n        isOpen={isOpen}\n        highlighted={desyncedFilters.has('datetime')}\n        data-test-id=\"page-filter-timerange-selector\"\n        {...getActorProps()}\n      >\n        <DropdownTitle>\n          <PageFilterPinIndicator filter=\"datetime\">\n            <IconCalendar />\n          </PageFilterPinIndicator>\n          <TitleContainer>{label}</TitleContainer>\n        </DropdownTitle>\n      </PageFilterDropdownButton>\n    );\n  };\n\n  return (\n    <TimeRangeSelector\n      organization={organization}\n      start={start}\n      end={end}\n      relative={period}\n      utc={utc}\n      onUpdate={handleUpdate}\n      customDropdownButton={customDropdownButton}\n      showPin\n      detached\n      {...props}\n    />\n  );\n}\n\nconst TitleContainer = styled('div')`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1 1 0%;\n  margin-left: ${space(1)};\n  text-align: left;\n`;\n\nconst DropdownTitle = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  width: 100%;\n`;\n\nexport default withRouter(DatePageFilter);\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Button from 'sentry/components/button';\nimport FormContext, {\n  FormContextData,\n} from 'sentry/components/deprecatedforms/formContext';\nimport FormState from 'sentry/components/forms/state';\nimport {t} from 'sentry/locale';\n\ntype FormProps = {\n  cancelLabel?: string;\n  className?: string;\n  errorMessage?: React.ReactNode;\n  extraButton?: React.ReactNode;\n  footerClass?: string;\n  hideErrors?: boolean;\n  initialData?: object;\n  onCancel?: () => void;\n  onSubmit?: (\n    data: object,\n    onSubmitSuccess: (data: object) => void,\n    onSubmitError: (error: object) => void\n  ) => void;\n  onSubmitError?: (error: object) => void;\n  onSubmitSuccess?: (data: object) => void;\n  requireChanges?: boolean;\n  resetOnError?: boolean;\n  submitDisabled?: boolean;\n  submitLabel?: string;\n};\n\ntype FormClassState = {\n  data: any;\n  errors: {non_field_errors?: object[]} & object;\n  initialData: object;\n  state: FormState;\n};\n\n// Re-export for compatibility alias.\nexport type Context = FormContextData;\n\nclass Form<\n  Props extends FormProps = FormProps,\n  State extends FormClassState = FormClassState\n> extends Component<Props, State> {\n  static defaultProps = {\n    cancelLabel: t('Cancel'),\n    submitLabel: t('Save Changes'),\n    submitDisabled: false,\n    footerClass: 'form-actions align-right',\n    className: 'form-stacked',\n    requireChanges: false,\n    hideErrors: false,\n    resetOnError: false,\n    errorMessage: t(\n      'Unable to save your changes. Please ensure all fields are valid and try again.'\n    ),\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n      data: {...this.props.initialData},\n      errors: {},\n      initialData: {...this.props.initialData},\n      state: FormState.READY,\n    } as State;\n  }\n\n  getContext() {\n    const {data, errors} = this.state;\n    return {\n      form: {\n        data,\n        errors,\n        onFieldChange: this.onFieldChange,\n      },\n    };\n  }\n\n  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.props.onSubmit) {\n      throw new Error('onSubmit is a required prop');\n    }\n    this.props.onSubmit(this.state.data, this.onSubmitSuccess, this.onSubmitError);\n  };\n\n  onSubmitSuccess = (data: object) => {\n    this.setState({\n      state: FormState.READY,\n      errors: {},\n      initialData: {...this.state.data, ...(data || {})},\n    });\n    this.props.onSubmitSuccess && this.props.onSubmitSuccess(data);\n  };\n\n  onSubmitError = error => {\n    this.setState({\n      state: FormState.ERROR,\n      errors: error.responseJSON,\n    });\n\n    if (this.props.resetOnError) {\n      this.setState({\n        initialData: {},\n      });\n    }\n\n    this.props.onSubmitError && this.props.onSubmitError(error);\n  };\n\n  onFieldChange = (name: string, value: string | number) => {\n    this.setState(state => ({\n      data: {\n        ...state.data,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const isSaving = this.state.state === FormState.SAVING;\n    const {initialData, data} = this.state;\n    const {errorMessage, hideErrors, requireChanges} = this.props;\n    const hasChanges = requireChanges\n      ? Object.keys(data).length && !isEqual(data, initialData)\n      : true;\n    const isError = this.state.state === FormState.ERROR;\n    const nonFieldErrors = this.state.errors && this.state.errors.non_field_errors;\n\n    return (\n      <FormContext.Provider value={this.getContext()}>\n        <StyledForm onSubmit={this.onSubmit} className={this.props.className}>\n          {isError && !hideErrors && (\n            <div className=\"alert alert-error alert-block\">\n              {nonFieldErrors ? (\n                <div>\n                  <p>\n                    {t(\n                      'Unable to save your changes. Please correct the following errors try again.'\n                    )}\n                  </p>\n                  <ul>\n                    {nonFieldErrors.map((e, i) => (\n                      <li key={i}>{e}</li>\n                    ))}\n                  </ul>\n                </div>\n              ) : (\n                errorMessage\n              )}\n            </div>\n          )}\n          {this.props.children}\n          <div className={this.props.footerClass} style={{marginTop: 25}}>\n            <Button\n              priority=\"primary\"\n              disabled={isSaving || this.props.submitDisabled || !hasChanges}\n              type=\"submit\"\n              aria-label={this.props.submitLabel ?? t('Submit')}\n            >\n              {this.props.submitLabel}\n            </Button>\n            {this.props.onCancel && (\n              <Button\n                type=\"button\"\n                disabled={isSaving}\n                onClick={this.props.onCancel}\n                style={{marginLeft: 5}}\n                aria-label={this.props.cancelLabel ?? t('Cancel')}\n              >\n                {this.props.cancelLabel}\n              </Button>\n            )}\n            {this.props.extraButton}\n          </div>\n        </StyledForm>\n      </FormContext.Provider>\n    );\n  }\n}\n\n// Note: this is so we can use this as a selector for SelectField\n// We need to keep `Form` as a React Component because ApiForm extends it :/\nexport const StyledForm = styled('form')``;\n\nexport default Form;\n","import {createContext} from 'react';\n\n/**\n * Context type used on 'classic' or 'old' forms.\n *\n * This is a very different type than what is used on the 'settings'\n * forms which have MobX under the hood.\n */\nexport type FormContextData = {\n  form?: {\n    data: object;\n    errors: object;\n    onFieldChange: (name: string, value: string | number) => void;\n  };\n};\n\n/**\n * Default to undefined to preserve backwards compatibility.\n * The FormField component uses a truthy test to see if it is connected\n * to context or if the control is 'uncontrolled'.\n */\nconst FormContext = createContext<FormContextData>({});\n\nexport default FormContext;\n","import {PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport FormContext, {\n  FormContextData,\n} from 'sentry/components/deprecatedforms/formContext';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {Meta} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype Value = string | number | boolean;\n\ntype DefaultProps = {\n  disabled?: boolean;\n  hideErrorMessage?: boolean;\n  required?: boolean;\n};\n\ntype FormFieldProps = DefaultProps & {\n  name: string;\n  className?: string;\n  defaultValue?: any;\n  disabledReason?: string;\n  error?: string;\n  help?: string | React.ReactNode;\n  label?: React.ReactNode;\n  meta?: Meta;\n  onChange?: (value: Value) => void;\n  style?: object;\n  value?: Value;\n};\n\ntype FormFieldState = {\n  error: string | null;\n  value: Value;\n};\n\nexport default class FormField<\n  Props extends FormFieldProps = FormFieldProps,\n  State extends FormFieldState = FormFieldState\n> extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    hideErrorMessage: false,\n    disabled: false,\n    required: false,\n  };\n\n  constructor(props: Props, context?: any) {\n    super(props, context);\n    this.state = {\n      error: null,\n      value: this.getValue(props, context),\n    } as State;\n  }\n\n  componentDidMount() {}\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props, nextContext: FormContextData) {\n    const newError = this.getError(nextProps, nextContext);\n    if (newError !== this.state.error) {\n      this.setState({error: newError});\n    }\n    if (this.props.value !== nextProps.value || defined(nextContext.form)) {\n      const newValue = this.getValue(nextProps, nextContext);\n      if (newValue !== this.state.value) {\n        this.setValue(newValue);\n      }\n    }\n  }\n\n  componentWillUnmount() {}\n\n  static contextType = FormContext;\n\n  getValue(props: Props, context: FormContextData) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n    if (defined(props.value)) {\n      return props.value;\n    }\n    if (form && form.data.hasOwnProperty(props.name)) {\n      return defined(form.data[props.name]) ? form.data[props.name] : '';\n    }\n    return defined(props.defaultValue) ? props.defaultValue : '';\n  }\n\n  getError(props: Props, context: FormContextData) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n    if (defined(props.error)) {\n      return props.error;\n    }\n    return (form && form.errors[props.name]) || null;\n  }\n\n  getId() {\n    return `id-${this.props.name}`;\n  }\n\n  coerceValue(value: any) {\n    return value;\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    this.setValue(value);\n  };\n\n  setValue = (value: Value) => {\n    const form = (this.context || {}).form;\n    this.setState(\n      {\n        value,\n      },\n      () => {\n        const finalValue = this.coerceValue(this.state.value);\n        this.props.onChange?.(finalValue);\n        form?.onFieldChange(this.props.name, finalValue);\n      }\n    );\n  };\n\n  getField() {\n    throw new Error('Must be implemented by child.');\n  }\n\n  getClassName(): string {\n    throw new Error('Must be implemented by child.');\n  }\n\n  getFinalClassNames() {\n    const {className, required} = this.props;\n    const {error} = this.state;\n    return classNames(className, this.getClassName(), {\n      'has-error': !!error,\n      required,\n    });\n  }\n\n  renderDisabledReason() {\n    const {disabled, disabledReason} = this.props;\n    if (!disabled) {\n      return null;\n    }\n    if (!disabledReason) {\n      return null;\n    }\n    return <QuestionTooltip title={disabledReason} position=\"top\" size=\"sm\" />;\n  }\n\n  render() {\n    const {label, hideErrorMessage, help, style} = this.props;\n    const {error} = this.state;\n    const cx = this.getFinalClassNames();\n    const shouldShowErrorMessage = error && !hideErrorMessage;\n\n    return (\n      <div style={style} className={cx}>\n        <div className=\"controls\">\n          {label && (\n            <label htmlFor={this.getId()} className=\"control-label\">\n              {label}\n            </label>\n          )}\n          {this.getField()}\n          {this.renderDisabledReason()}\n          {defined(help) && <p className=\"help-block\">{help}</p>}\n          {shouldShowErrorMessage && <ErrorMessage>{error}</ErrorMessage>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ErrorMessage = styled('p')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.red300};\n`;\n","import {Children} from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {APIRequestMethod, Client} from 'sentry/api';\nimport Form from 'sentry/components/deprecatedforms/form';\nimport FormField from 'sentry/components/deprecatedforms/formField';\nimport FormState from 'sentry/components/forms/state';\nimport {t} from 'sentry/locale';\n\ntype Props = Form['props'] & {\n  apiEndpoint: string;\n  apiMethod: APIRequestMethod;\n  omitDisabled?: boolean;\n  onSubmit?: (data: object) => void;\n  submitErrorMessage?: string;\n  submitLoadingMessage?: string;\n};\n\nexport default class ApiForm extends Form<Props> {\n  api = new Client();\n\n  static defaultProps = {\n    ...Form.defaultProps,\n    omitDisabled: false, // TODO(chadwhitacre) Upstream, flip to true, deprecate.\n    submitErrorMessage: t('There was an error saving your changes.'),\n    submitLoadingMessage: t('Saving changes\\u2026'),\n  };\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  getEnabledData() {\n    // Return a hash of data from non-disabled fields.\n\n    // Start with this.state.data and remove rather than starting from scratch\n    // and adding, because a) this.state.data is our source of truth, and b)\n    // we'd have to do more work to loop over the state.data Object and lookup\n    // against the props.children Array (looping over the Array and looking up\n    // in the Object is more natural). Maybe the consequent use of delete\n    // carries a slight performance hit. Why is yer form so big? 🤔\n\n    const data = {...this.state.data}; // Copy to avoid mutating state.data itself.\n    Children.forEach(this.props.children, (child: any) => {\n      if (!FormField.isPrototypeOf(child.type)) {\n        return; // Form children include h4's, etc.\n      }\n      if (child.key && child.props?.disabled) {\n        delete data[child.key]; // Assume a link between child.key and data. 🐭\n      }\n    });\n    return data;\n  }\n\n  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.state === FormState.SAVING) {\n      return;\n    }\n\n    // Actual HTML forms do not submit data for disabled fields, and because of\n    // the way some of our APIs are implemented, we need to start doing the\n    // same. But, since some other parts of the app very probably depend on\n    // sending disabled fields, keep that the default for now.\n    // TODO(chadwhitacre): Expand and upstream this.\n    const data = this.props.omitDisabled ? this.getEnabledData() : this.state.data;\n\n    this.props.onSubmit && this.props.onSubmit(data);\n    this.setState(\n      {\n        state: FormState.SAVING,\n      },\n      () => {\n        addLoadingMessage(this.props.submitLoadingMessage);\n        this.api.request(this.props.apiEndpoint, {\n          method: this.props.apiMethod,\n          data,\n          success: result => {\n            clearIndicators();\n            this.onSubmitSuccess(result);\n          },\n          error: error => {\n            addErrorMessage(this.props.submitErrorMessage);\n            this.onSubmitError(error);\n          },\n        });\n      }\n    );\n  };\n}\n","import InputField from 'sentry/components/deprecatedforms/inputField';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconQuestion} from 'sentry/icons';\nimport {defined} from 'sentry/utils';\n\ntype Props = InputField['props'];\n\ntype State = InputField['state'] & {\n  value: boolean;\n};\n\nexport default class BooleanField extends InputField<Props, State> {\n  coerceValue(initialValue: string | number) {\n    const value = super.coerceValue(initialValue);\n    return value ? true : false;\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.checked;\n    this.setValue(value);\n  };\n\n  getField() {\n    return (\n      <input\n        id={this.getId()}\n        type={this.getType()}\n        checked={this.state.value}\n        onChange={this.onChange.bind(this)}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  render() {\n    const {error} = this.state;\n    let className = this.getClassName();\n    if (error) {\n      className += ' has-error';\n    }\n    return (\n      <div className={className}>\n        <div className=\"controls\">\n          <label className=\"control-label\">\n            {this.getField()}\n            {this.props.label}\n            {this.props.disabled && this.props.disabledReason && (\n              <Tooltip title={this.props.disabledReason}>\n                <IconQuestion size=\"xs\" />\n              </Tooltip>\n            )}\n          </label>\n          {defined(this.props.help) && <p className=\"help-block\">{this.props.help}</p>}\n          {error && <p className=\"error\">{error}</p>}\n        </div>\n      </div>\n    );\n  }\n\n  getClassName() {\n    return 'control-group checkbox';\n  }\n\n  getType() {\n    return 'checkbox';\n  }\n}\n","import InputField from 'sentry/components/deprecatedforms/inputField';\n\nexport default class EmailField extends InputField {\n  getType() {\n    return 'email';\n  }\n}\n","import InputField from 'sentry/components/deprecatedforms/inputField';\n\ntype Props = {\n  max?: number;\n  min?: number;\n} & InputField['props'];\n\nexport default class NumberField extends InputField<Props> {\n  coerceValue(value) {\n    const intValue = parseInt(value, 10);\n\n    // return previous value if new value is NaN, otherwise, will get recursive error\n    const isNewCoercedNaN = isNaN(intValue);\n\n    if (!isNewCoercedNaN) {\n      return intValue;\n    }\n\n    return '';\n  }\n\n  getType() {\n    return 'number';\n  }\n\n  getAttributes() {\n    return {\n      min: this.props.min || undefined,\n      max: this.props.max || undefined,\n    };\n  }\n}\n","import SelectField from 'sentry/components/deprecatedforms/selectField';\nimport SelectAsyncControl from 'sentry/components/forms/selectAsyncControl';\n\nclass SelectAsyncField extends SelectField {\n  static defaultProps = {\n    ...SelectField.defaultProps,\n    placeholder: 'Start typing to search for an issue',\n  };\n\n  onResults = data => {\n    const {name} = this.props;\n    const results = data && data[name];\n\n    return (results && results.map(({id, text}) => ({value: id, label: text}))) || [];\n  };\n\n  onQuery = query =>\n    // Used by legacy integrations\n    ({autocomplete_query: query, autocomplete_field: this.props.name});\n\n  getField() {\n    // Callers should be able to override all props except onChange\n    // FormField calls props.onChange via `setValue`\n    return (\n      <SelectAsyncControl\n        id={this.getId()}\n        onResults={this.onResults}\n        onQuery={this.onQuery}\n        {...this.props}\n        value={this.state.value}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport default SelectAsyncField;\n","import styled from '@emotion/styled';\n\nimport {StyledForm} from 'sentry/components/deprecatedforms/form';\nimport SelectField from 'sentry/components/deprecatedforms/selectField';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport convertFromSelect2Choices from 'sentry/utils/convertFromSelect2Choices';\n\n/**\n * This is a <SelectField> that allows the user to create new options if one does't exist.\n *\n * This is used in some integrations\n */\nexport default class SelectCreatableField extends SelectField {\n  options: SelectValue<any>[] | undefined;\n\n  constructor(props, context) {\n    super(props, context);\n\n    // We only want to parse options once because react-select relies\n    // on `options` mutation when you create a new option\n    //\n    // Otherwise you will not get the created option in the dropdown menu\n    this.options = this.getOptions(props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    const newError = this.getError(nextProps, nextContext);\n    if (newError !== this.state.error) {\n      this.setState({error: newError});\n    }\n    if (this.props.value !== nextProps.value || defined(nextContext.form)) {\n      const newValue = this.getValue(nextProps, nextContext);\n      // This is the only thing that is different from parent, we compare newValue against coerved value in state\n      // To remain compatible with react-select, we need to store the option object that\n      // includes `value` and `label`, but when we submit the format, we need to coerce it\n      // to just return `value`. Also when field changes, it propagates the coerced value up\n      const coercedValue = this.coerceValue(this.state.value);\n\n      // newValue can be empty string because of `getValue`, while coerceValue needs to return null (to differentiate\n      // empty string from cleared item). We could use `!=` to compare, but lets be a bit more explicit with strict equality\n      //\n      // This can happen when this is apart of a field, and it re-renders onChange for a different field,\n      // there will be a mismatch between this component's state.value and `this.getValue` result above\n      if (\n        newValue !== coercedValue &&\n        !!newValue !== !!coercedValue &&\n        newValue !== this.state.value\n      ) {\n        this.setValue(newValue);\n      }\n    }\n  }\n\n  getOptions(props) {\n    return convertFromSelect2Choices(props.choices) || props.options;\n  }\n\n  getField() {\n    const {placeholder, disabled, clearable, name} = this.props;\n\n    return (\n      <StyledSelectControl\n        creatable\n        id={this.getId()}\n        options={this.options}\n        placeholder={placeholder}\n        disabled={disabled}\n        value={this.state.value}\n        onChange={this.onChange}\n        clearable={clearable}\n        multiple={this.isMultiple()}\n        name={name}\n      />\n    );\n  }\n}\n\n// This is because we are removing `control-group` class name which provides margin-bottom\nconst StyledSelectControl = styled(SelectControl)`\n  ${StyledForm} &, .form-stacked & {\n    .control-group & {\n      margin-bottom: 0;\n    }\n\n    margin-bottom: 15px;\n  }\n`;\n","import InputField from 'sentry/components/deprecatedforms/inputField';\n\ntype State = InputField['state'] & {\n  value?: string;\n};\n\nexport default class TextareaField extends InputField<InputField['props'], State> {\n  getField() {\n    return (\n      <textarea\n        id={this.getId()}\n        className=\"form-control\"\n        value={this.state.value}\n        disabled={this.props.disabled}\n        required={this.props.required}\n        placeholder={this.props.placeholder}\n        onChange={this.onChange.bind(this)}\n      />\n    );\n  }\n}\n","import BooleanField from 'sentry/components/deprecatedforms/booleanField';\nimport EmailField from 'sentry/components/deprecatedforms/emailField';\nimport FormField from 'sentry/components/deprecatedforms/formField';\nimport NumberField from 'sentry/components/deprecatedforms/numberField';\nimport PasswordField from 'sentry/components/deprecatedforms/passwordField';\nimport SelectAsyncField from 'sentry/components/deprecatedforms/selectAsyncField';\nimport SelectCreatableField from 'sentry/components/deprecatedforms/selectCreatableField';\nimport SelectField from 'sentry/components/deprecatedforms/selectField';\nimport TextareaField from 'sentry/components/deprecatedforms/textareaField';\nimport TextField from 'sentry/components/deprecatedforms/textField';\nimport FormState from 'sentry/components/forms/state';\nimport {defined} from 'sentry/utils';\n\ntype FieldType =\n  | 'secret'\n  | 'range'\n  | 'bool'\n  | 'email'\n  | 'string'\n  | 'text'\n  | 'url'\n  | 'number'\n  | 'textarea';\n\ntype SelectFieldType = 'select' | 'choice';\n\ntype Config = {\n  choices: Array<[number | string, number | string]>;\n  default: string;\n  name: string;\n  placeholder: string;\n  readonly: boolean;\n  type: FieldType;\n  help?: string;\n  label?: string;\n  required?: boolean;\n};\n\ntype SelectFieldConfig = Omit<Config, 'type' | 'has_autocomplete'> & {\n  has_autocomplete: false;\n  type: SelectFieldType;\n};\n\ntype AsyncSelectFieldConfig = Omit<SelectFieldConfig, 'has_autocomplete'> & {\n  has_autocomplete: true;\n  url: string;\n};\n\ninterface FormData {\n  [name: string]: string;\n}\n\ntype Props = {\n  config: Config | SelectFieldConfig | AsyncSelectFieldConfig;\n  formData: FormData;\n  formState: typeof FormState[keyof typeof FormState];\n  onChange: FormField['props']['onChange'];\n  formErrors?: object;\n};\n\nconst GenericField = ({\n  config,\n  formData = {},\n  formErrors = {},\n  formState,\n  onChange,\n}: Props) => {\n  const required = defined(config.required) ? config.required : true;\n  const fieldProps = {\n    ...config,\n    value: formData[config.name],\n    onChange,\n    label: config.label + (required ? '*' : ''),\n    placeholder: config.placeholder,\n    required,\n    name: config.name,\n    error: (formErrors || {})[config.name],\n    defaultValue: config.default,\n    disabled: config.readonly,\n    key: config.name,\n    formState,\n    help:\n      defined(config.help) && config.help !== '' ? (\n        <span dangerouslySetInnerHTML={{__html: config.help}} />\n      ) : null,\n  };\n\n  switch (config.type) {\n    case 'secret':\n      return <PasswordField {...fieldProps} />;\n    case 'bool':\n      return <BooleanField {...fieldProps} />;\n    case 'email':\n      return <EmailField {...fieldProps} />;\n    case 'string':\n    case 'text':\n    case 'url':\n      if (fieldProps.choices) {\n        return <SelectCreatableField {...fieldProps} />;\n      }\n      return <TextField {...fieldProps} />;\n    case 'number':\n      return <NumberField {...fieldProps} />;\n    case 'textarea':\n      return <TextareaField {...fieldProps} />;\n    case 'choice':\n    case 'select':\n      // the chrome required tip winds up in weird places\n      // for select elements, so just make it look like\n      // it's required (with *) and rely on server validation\n      const {required: _, ...selectProps} = fieldProps;\n      if (config.has_autocomplete) {\n        // Redeclaring field props here as config has been narrowed to include the correct options for SelectAsyncField\n        const selectFieldProps = {\n          ...config,\n          ...selectProps,\n        };\n        return <SelectAsyncField {...selectFieldProps} />;\n      }\n      return <SelectField {...selectProps} />;\n    default:\n      return null;\n  }\n};\n\nexport default GenericField;\n","import classNames from 'classnames';\n\nimport FormField from 'sentry/components/deprecatedforms/formField';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconQuestion} from 'sentry/icons';\nimport {Choices} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype Value = string | number | boolean;\n\ntype Props = {\n  choices: Choices;\n  hideLabelDivider?: boolean;\n} & FormField['props'];\n\ntype State = FormField['state'] & {\n  values: Value[];\n};\n\nexport default class MultipleCheckboxField extends FormField<Props, State> {\n  onChange = (e: React.ChangeEvent<HTMLInputElement>, _value?: Value) => {\n    const value = _value as Value; // Casting here to allow _value to be optional, which it has to be since it's overloaded.\n    let allValues = this.state.values;\n\n    if (e.target.checked) {\n      if (allValues) {\n        allValues = [...allValues, value];\n      } else {\n        allValues = [value];\n      }\n    } else {\n      allValues = allValues.filter(v => v !== value);\n    }\n    this.setValues(allValues);\n  };\n\n  setValues(values: Value[]) {\n    const form = (this.context || {}).form;\n    this.setState(\n      {\n        values,\n      },\n      () => {\n        const finalValue = this.coerceValue(this.state.values);\n        this.props.onChange && this.props.onChange(finalValue);\n        form && form.onFieldChange(this.props.name, finalValue);\n      }\n    );\n  }\n\n  render() {\n    const {\n      required,\n      className,\n      disabled,\n      disabledReason,\n      label,\n      help,\n      choices,\n      hideLabelDivider,\n      style,\n    } = this.props;\n    const {error} = this.state;\n    const cx = classNames(className, 'control-group', {\n      'has-error': error,\n    });\n    // Hacky, but this isn't really a form label vs the checkbox labels, but\n    // we want to treat it as one (i.e. for \"required\" indicator)\n    const labelCx = classNames({\n      required,\n    });\n    const shouldShowDisabledReason = disabled && disabledReason;\n\n    return (\n      <div style={style} className={cx}>\n        <div className={labelCx}>\n          <div className=\"controls\">\n            <label\n              className=\"control-label\"\n              style={{\n                display: 'block',\n                marginBottom: !hideLabelDivider ? 10 : undefined,\n                borderBottom: !hideLabelDivider ? '1px solid #f1eff3' : undefined,\n              }}\n            >\n              {label}\n              {shouldShowDisabledReason && (\n                <Tooltip title={disabledReason}>\n                  <span className=\"disabled-indicator\">\n                    <IconQuestion size=\"xs\" />\n                  </span>\n                </Tooltip>\n              )}\n            </label>\n            {help && <p className=\"help-block\">{help}</p>}\n            {error && <p className=\"error\">{error}</p>}\n          </div>\n        </div>\n\n        <div className=\"control-list\">\n          {choices.map(([value, choiceLabel]) => (\n            <label className=\"checkbox\" key={value}>\n              <input\n                type=\"checkbox\"\n                value={value}\n                onChange={e => this.onChange(e, value)}\n                disabled={disabled}\n                checked={\n                  defined(this.state.values) && this.state.values.indexOf(value) !== -1\n                }\n              />\n              {choiceLabel}\n            </label>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import FormField from 'sentry/components/deprecatedforms/formField';\n\ntype InputFieldProps = FormField['props'] & {\n  autoComplete?: string;\n  inputStyle?: object;\n  min?: number;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n  onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  step?: number;\n};\n\nclass InputField<\n  Props extends InputFieldProps = InputFieldProps,\n  State extends FormField['state'] = FormField['state']\n> extends FormField<Props, State> {\n  getField() {\n    return (\n      <input\n        id={this.getId()} // TODO(Priscila): check the reason behind this. We are getting warnings if we have 2 or more fields with the same name, for instance in the DATA PRIVACY RULES\n        type={this.getType()}\n        className=\"form-control\"\n        autoComplete={this.props.autoComplete}\n        placeholder={this.props.placeholder}\n        onChange={this.onChange}\n        disabled={this.props.disabled}\n        name={this.props.name}\n        required={this.props.required}\n        value={this.state.value as string | number} // can't pass in boolean here\n        style={this.props.inputStyle}\n        onBlur={this.props.onBlur}\n        onFocus={this.props.onFocus}\n        onKeyPress={this.props.onKeyPress}\n        onKeyDown={this.props.onKeyDown}\n        min={this.props.min}\n        step={this.props.step}\n      />\n    );\n  }\n\n  getClassName() {\n    return 'control-group';\n  }\n\n  getType(): string {\n    throw new Error('Must be implemented by child.');\n  }\n}\n\nexport default InputField;\n","import {Context} from 'sentry/components/deprecatedforms/form';\nimport InputField from 'sentry/components/deprecatedforms/inputField';\nimport FormState from 'sentry/components/forms/state';\n\ntype Props = InputField['props'] & {\n  prefix: string;\n  formState?: typeof FormState[keyof typeof FormState];\n  hasSavedValue?: boolean;\n};\n\ntype State = InputField['state'] & {\n  editing: boolean;\n};\n\n// TODO(dcramer): im not entirely sure this is working correctly with\n// value propagation in all scenarios\nexport default class PasswordField extends InputField<Props, State> {\n  static defaultProps = {\n    ...InputField.defaultProps,\n    hasSavedValue: false,\n    prefix: '',\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n\n    this.state = {...this.state, editing: false};\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // close edit mode after successful save\n    // TODO(dcramer): this needs to work with this.context.form\n    if (\n      this.props.formState &&\n      this.props.formState === FormState.SAVING &&\n      nextProps.formState === FormState.READY\n    ) {\n      this.setState({\n        editing: false,\n      });\n    }\n  }\n\n  getType() {\n    return 'password';\n  }\n\n  cancelEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    this.setState(\n      {\n        editing: false,\n      },\n      () => {\n        this.setValue('');\n      }\n    );\n  };\n\n  startEdit = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    this.setState({\n      editing: true,\n    });\n  };\n\n  getField() {\n    if (!this.props.hasSavedValue) {\n      return super.getField();\n    }\n\n    if (this.state.editing) {\n      return (\n        <div className=\"form-password editing\">\n          <div>{super.getField()}</div>\n          <div>\n            <a onClick={this.cancelEdit}>Cancel</a>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"form-password saved\">\n        <span>\n          {this.props.prefix + new Array(21 - this.props.prefix.length).join('*')}\n        </span>\n        {!this.props.disabled && <a onClick={this.startEdit}>Edit</a>}\n      </div>\n    );\n  }\n}\n","import {Fragment} from 'react';\n\nimport InputField from 'sentry/components/deprecatedforms/inputField';\nimport {defined} from 'sentry/utils';\n\ntype Props = {\n  noLabel: string;\n  yesLabel: string;\n  yesFirst?: boolean;\n} & InputField['props'];\n\nexport default class RadioBooleanField extends InputField<Props> {\n  static defaultProps = {\n    ...InputField.defaultProps,\n    yesLabel: 'Yes',\n    noLabel: 'No',\n    yesFirst: true,\n  };\n\n  coerceValue(props) {\n    const value = super.coerceValue(props);\n    return value ? true : false;\n  }\n\n  onChange = e => {\n    const value = e.target.value === 'true';\n    this.setValue(value);\n  };\n\n  getType() {\n    return 'radio';\n  }\n\n  getField() {\n    const yesOption = (\n      <div className=\"radio\" key=\"yes\">\n        <label style={{fontWeight: 'normal'}}>\n          <input\n            type=\"radio\"\n            value=\"true\"\n            name={this.props.name}\n            checked={this.state.value === true}\n            onChange={this.onChange.bind(this)}\n            disabled={this.props.disabled}\n          />{' '}\n          {this.props.yesLabel}\n        </label>\n      </div>\n    );\n    const noOption = (\n      <div className=\"radio\" key=\"no\">\n        <label style={{fontWeight: 'normal'}}>\n          <input\n            type=\"radio\"\n            name={this.props.name}\n            value=\"false\"\n            checked={this.state.value === false}\n            onChange={this.onChange.bind(this)}\n            disabled={this.props.disabled}\n          />{' '}\n          {this.props.noLabel}\n        </label>\n      </div>\n    );\n    return (\n      <div className=\"control-group radio-boolean\">\n        {this.props.yesFirst ? (\n          <Fragment>\n            {yesOption}\n            {noOption}\n          </Fragment>\n        ) : (\n          <Fragment>\n            {noOption}\n            {yesOption}\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {label, hideErrorMessage, help, style} = this.props;\n    const {error} = this.state;\n    const cx = this.getFinalClassNames();\n    const shouldShowErrorMessage = error && !hideErrorMessage;\n\n    return (\n      <div style={style} className={cx}>\n        <div className=\"controls\">\n          {label && (\n            <label htmlFor={this.getId()} className=\"control-label\">\n              {label}\n            </label>\n          )}\n          {defined(help) && <p className=\"help-block\">{help}</p>}\n          {this.getField()}\n          {this.renderDisabledReason()}\n          {shouldShowErrorMessage && <p className=\"error\">{error}</p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {defined} from 'sentry/utils';\n\nimport {StyledForm} from './form';\nimport FormField from './formField';\n\ntype SelectProps = Omit<ControlProps, 'onChange' | 'name'>;\ntype FormProps = FormField['props'];\n\ntype Props = FormProps & SelectProps;\n\nexport default class SelectField extends FormField<Props> {\n  static defaultProps = {\n    ...FormField.defaultProps,\n    clearable: true,\n    multiple: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    const newError = this.getError(nextProps, nextContext);\n    if (newError !== this.state.error) {\n      this.setState({error: newError});\n    }\n    if (this.props.value !== nextProps.value || defined(nextContext.form)) {\n      const newValue = this.getValue(nextProps, nextContext);\n      // This is the only thing that is different from parent, we compare newValue against coerced value in state\n      // To remain compatible with react-select, we need to store the option object that\n      // includes `value` and `label`, but when we submit the format, we need to coerce it\n      // to just return `value`. Also when field changes, it propagates the coerced value up\n      const coercedValue = this.coerceValue(this.state.value);\n\n      // newValue can be empty string because of `getValue`, while coerceValue needs to return null (to differentiate\n      // empty string from cleared item). We could use `!=` to compare, but lets be a bit more explicit with strict equality\n      //\n      // This can happen when this is apart of a field, and it re-renders onChange for a different field,\n      // there will be a mismatch between this component's state.value and `this.getValue` result above\n      if (newValue !== coercedValue && !!newValue !== !!coercedValue) {\n        this.setValue(newValue);\n      }\n    }\n  }\n\n  // Overriding this so that we can support `multi` fields through property\n  getValue(props, context) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n\n    // Don't use `isMultiple` here because we're taking props from args as well\n    const defaultValue = this.isMultiple(props) ? [] : '';\n\n    if (defined(props.value)) {\n      return props.value;\n    }\n    if (form && form.data.hasOwnProperty(props.name)) {\n      return defined(form.data[props.name]) ? form.data[props.name] : defaultValue;\n    }\n    return defined(props.defaultValue) ? props.defaultValue : defaultValue;\n  }\n\n  // We need this to get react-select's `Creatable` to work properly\n  // Otherwise, when you hit \"enter\" to create a new item, the \"selected value\" does\n  // not update with new value (and also new value is not displayed in dropdown)\n  //\n  // This is also needed to get `multi` select working since we need the {label, value} object\n  // for react-select (but forms expect just the value to be propagated)\n  coerceValue(value) {\n    if (!value) {\n      return '';\n    }\n\n    if (this.isMultiple()) {\n      return value.map(v => v.value);\n    }\n    if (value.hasOwnProperty('value')) {\n      return value.value;\n    }\n\n    return value;\n  }\n\n  isMultiple(props?) {\n    props = props || this.props;\n    // this is to maintain compatibility with the 'multi' prop\n    return props.multi || props.multiple;\n  }\n\n  getClassName() {\n    return '';\n  }\n\n  onChange = opt => {\n    // Changing this will most likely break react-select (e.g. you won't be able to select\n    // a menu option that is from an async request, or a multi select).\n    this.setValue(opt);\n  };\n\n  getField() {\n    const {\n      options,\n      clearable,\n      creatable,\n      choices,\n      placeholder,\n      disabled,\n      name,\n      isLoading,\n    } = this.props;\n\n    return (\n      <StyledSelectControl\n        creatable={creatable}\n        id={this.getId()}\n        choices={choices}\n        options={options}\n        placeholder={placeholder}\n        disabled={disabled}\n        value={this.state.value}\n        onChange={this.onChange}\n        clearable={clearable}\n        multiple={this.isMultiple()}\n        name={name}\n        isLoading={isLoading}\n      />\n    );\n  }\n}\n\n// This is to match other fields that are wrapped by a `div.control-group`\nconst StyledSelectControl = styled(SelectControl)`\n  ${StyledForm} &, .form-stacked & {\n    .control-group & {\n      margin-bottom: 0;\n    }\n\n    margin-bottom: 15px;\n  }\n`;\n","import InputField from 'sentry/components/deprecatedforms/inputField';\n\ntype Props = InputField['props'] & {\n  spellCheck?: string;\n};\n\nexport default class TextField extends InputField<Props> {\n  getAttributes() {\n    return {\n      spellCheck: this.props.spellCheck,\n    };\n  }\n\n  getType() {\n    return 'text';\n  }\n}\n","import {useCallback} from 'react';\nimport styled from '@emotion/styled';\nimport memoize from 'lodash/memoize';\n\nimport AutoComplete from 'sentry/components/autoComplete';\nimport DropdownBubble from 'sentry/components/dropdownBubble';\nimport Input from 'sentry/components/forms/controls/input';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport autoCompleteFilter from './autoCompleteFilter';\nimport List from './list';\nimport {Item, ItemsBeforeFilter} from './types';\n\ntype AutoCompleteChildrenArgs = Parameters<AutoComplete<Item>['props']['children']>[0];\ntype Actions = AutoCompleteChildrenArgs['actions'];\n\nexport type MenuFooterChildProps = {\n  actions: Actions;\n};\n\ntype ListProps = React.ComponentProps<typeof List>;\n\ntype Props = {\n  children: (\n    args: Pick<\n      AutoCompleteChildrenArgs,\n      'getInputProps' | 'getActorProps' | 'actions' | 'isOpen' | 'selectedItem'\n    >\n  ) => React.ReactNode;\n  /** null items indicates loading */\n  items: ItemsBeforeFilter | null;\n\n  /**\n   * Dropdown menu alignment.\n   */\n  alignMenu?: 'left' | 'right';\n  /**\n   * Should menu visually lock to a direction (so we don't display a rounded corner)\n   */\n  blendCorner?: boolean;\n\n  /**\n   * Show loading indicator next to input and \"Searching...\" text in the list\n   */\n  busy?: boolean;\n\n  /**\n   * Show loading indicator next to input but don't hide list items\n   */\n  busyItemsStillVisible?: boolean;\n\n  /**\n   * for passing  styles to the DropdownBubble\n   */\n  className?: string;\n\n  /**\n   * AutoComplete prop\n   */\n  closeOnSelect?: boolean;\n\n  css?: any;\n\n  'data-test-id'?: string;\n\n  /**\n   * If true, the menu will be visually detached from actor.\n   */\n  detached?: boolean;\n\n  /**\n   * Disables padding for the label.\n   */\n  disableLabelPadding?: boolean;\n\n  /**\n   * passed down to the AutoComplete Component\n   */\n  disabled?: boolean;\n\n  /**\n   * Hide's the input when there are no items. Avoid using this when querying\n   * results in an async fashion.\n   */\n  emptyHidesInput?: boolean;\n\n  /**\n   * Message to display when there are no items initially\n   */\n  emptyMessage?: React.ReactNode;\n\n  /**\n   * If this is undefined, autocomplete filter will use this value instead of the\n   * current value in the filter input element.\n   *\n   * This is useful if you need to strip characters out of the search\n   */\n  filterValue?: string;\n\n  /**\n   * Hides the default filter input\n   */\n  hideInput?: boolean;\n\n  /**\n   * renderProp for the end (right side) of the search input\n   */\n  inputActions?: React.ReactElement;\n\n  /**\n   * Props to pass to input/filter component\n   */\n  inputProps?: {style: React.CSSProperties};\n\n  /**\n   * Used to control dropdown state (optional)\n   */\n  isOpen?: boolean;\n\n  /**\n   * Max height of dropdown menu. Units are assumed as `px`\n   */\n  maxHeight?: ListProps['maxHeight'];\n\n  menuFooter?:\n    | React.ReactElement\n    | ((props: MenuFooterChildProps) => React.ReactElement | null);\n\n  menuHeader?: React.ReactElement;\n\n  /**\n   * Props to pass to menu component\n   */\n  menuProps?: Parameters<AutoCompleteChildrenArgs['getMenuProps']>[0];\n\n  /**\n   * Minimum menu width, defaults to 250\n   */\n  minWidth?: number;\n\n  /**\n   * Message to display when there are no items that match the search\n   */\n  noResultsMessage?: React.ReactNode;\n\n  /**\n   * When AutoComplete input changes\n   */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Callback for when dropdown menu closes\n   */\n  onClose?: () => void;\n\n  /**\n   * Callback for when dropdown menu opens\n   */\n  onOpen?: (event?: React.MouseEvent) => void;\n\n  /**\n   * When an item is selected (via clicking dropdown, or keyboard navigation)\n   */\n  onSelect?: (\n    item: Item,\n    state?: AutoComplete<Item>['state'],\n    e?: React.MouseEvent | React.KeyboardEvent\n  ) => void;\n  /**\n   * for passing simple styles to the root container\n   */\n  rootClassName?: string;\n\n  /**\n   * Search input's placeholder text\n   */\n  searchPlaceholder?: string;\n  /**\n   * the styles are forward to the Autocomplete's getMenuProps func\n   */\n  style?: React.CSSProperties;\n  /**\n   * Optional element to be rendered on the right side of the dropdown menu\n   */\n  subPanel?: React.ReactNode;\n} & Pick<\n  ListProps,\n  'virtualizedHeight' | 'virtualizedLabelHeight' | 'itemSize' | 'onScroll'\n>;\n\nfunction Menu({\n  maxHeight = 300,\n  emptyMessage = t('No items'),\n  searchPlaceholder = t('Filter search'),\n  blendCorner = true,\n  detached = false,\n  alignMenu = 'left',\n  minWidth = 250,\n  hideInput = false,\n  disableLabelPadding = false,\n  busy = false,\n  busyItemsStillVisible = false,\n  disabled = false,\n  subPanel = null,\n  itemSize,\n  virtualizedHeight,\n  virtualizedLabelHeight,\n  menuProps,\n  noResultsMessage,\n  inputProps,\n  children,\n  rootClassName,\n  className,\n  emptyHidesInput,\n  menuHeader,\n  filterValue,\n  items,\n  menuFooter,\n  style,\n  onScroll,\n  inputActions,\n  onChange,\n  onSelect,\n  onOpen,\n  onClose,\n  css,\n  closeOnSelect,\n  'data-test-id': dataTestId,\n  ...props\n}: Props) {\n  // Can't search if there are no items\n  const hasItems = !!items?.length;\n\n  // Items are loading if null\n  const itemsLoading = items === null;\n\n  // Hide the input when we have no items to filter, only if\n  // emptyHidesInput is set to true.\n  const showInput = !hideInput && (hasItems || !emptyHidesInput);\n\n  // Only redefine the autocomplete function if our items list has chagned.\n  // This avoids producing a new array on every call.\n  const stableItemFilter = useCallback(\n    (filterValueOrInput: string) => autoCompleteFilter(items, filterValueOrInput),\n    [items]\n  );\n\n  // Memoize the filterValueOrInput to the stableItemFilter so that we get the\n  // same list every time when the filter value doesn't change.\n  const getFilteredItems = memoize(stableItemFilter);\n\n  return (\n    <AutoComplete\n      onSelect={onSelect}\n      inputIsActor={false}\n      onOpen={onOpen}\n      onClose={onClose}\n      disabled={disabled}\n      closeOnSelect={closeOnSelect}\n      resetInputOnClose\n      {...props}\n    >\n      {({\n        getActorProps,\n        getRootProps,\n        getInputProps,\n        getMenuProps,\n        getItemProps,\n        registerItemCount,\n        registerVisibleItem,\n        inputValue,\n        selectedItem,\n        highlightedIndex,\n        isOpen,\n        actions,\n      }) => {\n        // This is the value to use to filter (default to value in filter input)\n        const filterValueOrInput = filterValue ?? inputValue;\n\n        // Only filter results if menu is open and there are items. Uses\n        // `getFilteredItems` to ensure we get a stable items list back.\n        const autoCompleteResults =\n          isOpen && hasItems ? getFilteredItems(filterValueOrInput) : [];\n\n        // Has filtered results\n        const hasResults = !!autoCompleteResults.length;\n\n        // No items to display\n        const showNoItems = !busy && !filterValueOrInput && !hasItems;\n\n        // Results mean there was an attempt to search\n        const showNoResultsMessage =\n          !busy && !busyItemsStillVisible && filterValueOrInput && !hasResults;\n\n        // When virtualization is turned on, we need to pass in the number of\n        // selecteable items for arrow-key limits\n        const itemCount = virtualizedHeight\n          ? autoCompleteResults.filter(i => !i.groupLabel).length\n          : undefined;\n\n        const renderedFooter =\n          typeof menuFooter === 'function' ? menuFooter({actions}) : menuFooter;\n\n        // XXX(epurkhiser): Would be better if this happened in a useEffect,\n        // but hooks do not work inside render-prop callbacks.\n        registerItemCount(itemCount);\n\n        return (\n          <AutoCompleteRoot\n            {...getRootProps()}\n            className={rootClassName}\n            disabled={disabled}\n            data-is-open={isOpen}\n            data-test-id={dataTestId}\n          >\n            {children({\n              getInputProps,\n              getActorProps,\n              actions,\n              isOpen,\n              selectedItem,\n            })}\n            {isOpen && (\n              <StyledDropdownBubble\n                className={className}\n                {...getMenuProps(menuProps)}\n                {...{style, css, blendCorner, detached, alignMenu, minWidth}}\n              >\n                <DropdownMainContent minWidth={minWidth}>\n                  {itemsLoading && <LoadingIndicator mini />}\n                  {showInput && (\n                    <InputWrapper>\n                      <StyledInput\n                        autoFocus\n                        placeholder={searchPlaceholder}\n                        {...getInputProps({...inputProps, onChange})}\n                      />\n                      <InputLoadingWrapper>\n                        {(busy || busyItemsStillVisible) && (\n                          <LoadingIndicator size={16} mini />\n                        )}\n                      </InputLoadingWrapper>\n                      {inputActions}\n                    </InputWrapper>\n                  )}\n                  <div>\n                    {menuHeader && (\n                      <LabelWithPadding disableLabelPadding={disableLabelPadding}>\n                        {menuHeader}\n                      </LabelWithPadding>\n                    )}\n                    <ItemList data-test-id=\"autocomplete-list\" maxHeight={maxHeight}>\n                      {showNoItems && <EmptyMessage>{emptyMessage}</EmptyMessage>}\n                      {showNoResultsMessage && (\n                        <EmptyMessage>\n                          {noResultsMessage ?? `${emptyMessage} ${t('found')}`}\n                        </EmptyMessage>\n                      )}\n                      {busy && (\n                        <BusyMessage>\n                          <EmptyMessage>{t('Searching\\u2026')}</EmptyMessage>\n                        </BusyMessage>\n                      )}\n                      {!busy && (\n                        <List\n                          items={autoCompleteResults}\n                          {...{\n                            maxHeight,\n                            highlightedIndex,\n                            inputValue,\n                            onScroll,\n                            getItemProps,\n                            registerVisibleItem,\n                            virtualizedLabelHeight,\n                            virtualizedHeight,\n                            itemSize,\n                          }}\n                        />\n                      )}\n                    </ItemList>\n                    {renderedFooter && (\n                      <LabelWithPadding disableLabelPadding={disableLabelPadding}>\n                        {renderedFooter}\n                      </LabelWithPadding>\n                    )}\n                  </div>\n                </DropdownMainContent>\n                {subPanel}\n              </StyledDropdownBubble>\n            )}\n          </AutoCompleteRoot>\n        );\n      }}\n    </AutoComplete>\n  );\n}\n\nexport default Menu;\n\nconst StyledInput = styled(Input)`\n  flex: 1;\n  border: 1px solid transparent;\n  &,\n  &:focus,\n  &:active,\n  &:hover {\n    border: 0;\n    box-shadow: none;\n    font-size: 13px;\n    padding: ${space(1)};\n    font-weight: normal;\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst InputLoadingWrapper = styled('div')`\n  display: flex;\n  background: ${p => p.theme.background};\n  align-items: center;\n  flex-shrink: 0;\n  width: 30px;\n  .loading.mini {\n    height: 16px;\n    margin: 0;\n  }\n`;\n\nconst EmptyMessage = styled('div')`\n  color: ${p => p.theme.gray200};\n  padding: ${space(2)};\n  text-align: center;\n  text-transform: none;\n`;\n\nexport const AutoCompleteRoot = styled('div')<{disabled?: boolean}>`\n  position: relative;\n  display: inline-block;\n  ${p => p.disabled && 'pointer-events: none;'}\n`;\n\nconst StyledDropdownBubble = styled(DropdownBubble)<{minWidth: number}>`\n  display: flex;\n  min-width: ${p => p.minWidth}px;\n\n  ${p => p.detached && p.alignMenu === 'left' && 'right: auto;'}\n  ${p => p.detached && p.alignMenu === 'right' && 'left: auto;'}\n`;\n\nconst DropdownMainContent = styled('div')<{minWidth: number}>`\n  width: 100%;\n  min-width: ${p => p.minWidth}px;\n`;\n\nconst InputWrapper = styled('div')`\n  display: flex;\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  border-radius: ${p => `${p.theme.borderRadius} ${p.theme.borderRadius} 0 0`};\n  align-items: center;\n`;\n\nconst LabelWithPadding = styled('div')<{disableLabelPadding: boolean}>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  border-width: 1px 0;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  &:first-child {\n    border-top: none;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n  padding: ${p => !p.disableLabelPadding && `${space(0.25)} ${space(1)}`};\n`;\n\nconst ItemList = styled('div')<{maxHeight: NonNullable<Props['maxHeight']>}>`\n  max-height: ${p => `${p.maxHeight}px`};\n  overflow-y: auto;\n`;\n\nconst BusyMessage = styled('div')`\n  display: flex;\n  justify-content: center;\n  padding: ${space(1)};\n`;\n","import {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {updateEnvironments} from 'sentry/actionCreators/pageFilters';\nimport Badge from 'sentry/components/badge';\nimport EnvironmentSelector from 'sentry/components/organizations/environmentSelector';\nimport PageFilterDropdownButton from 'sentry/components/organizations/pageFilters/pageFilterDropdownButton';\nimport PageFilterPinIndicator from 'sentry/components/organizations/pageFilters/pageFilterPinIndicator';\nimport {IconWindow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {trimSlug} from 'sentry/utils/trimSlug';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype EnvironmentSelectorProps = React.ComponentProps<typeof EnvironmentSelector>;\n\ntype Props = {\n  router: WithRouterProps['router'];\n  alignDropdown?: EnvironmentSelectorProps['alignDropdown'];\n  /**\n   * Max character length for the dropdown title. Default is 20. This number\n   * is used to determine how many projects to show, and how much to truncate.\n   */\n  maxTitleLength?: number;\n  /**\n   * Reset these URL params when we fire actions (custom routing only)\n   */\n  resetParamsOnChange?: string[];\n};\n\nfunction EnvironmentPageFilter({\n  router,\n  resetParamsOnChange = [],\n  alignDropdown,\n  maxTitleLength = 20,\n}: Props) {\n  const {projects, initiallyLoaded: projectsLoaded} = useProjects();\n  const organization = useOrganization();\n  const {selection, isReady, desyncedFilters} = usePageFilters();\n\n  const handleUpdateEnvironments = (environments: string[]) => {\n    updateEnvironments(environments, router, {\n      save: true,\n      resetParams: resetParamsOnChange,\n    });\n  };\n\n  const customDropdownButton: EnvironmentSelectorProps['customDropdownButton'] = ({\n    isOpen,\n    value,\n  }) => {\n    const environmentsToShow =\n      value[0]?.length + value[1]?.length <= maxTitleLength - 2\n        ? value.slice(0, 2)\n        : value.slice(0, 1);\n    const summary = value.length\n      ? environmentsToShow.map(env => trimSlug(env, maxTitleLength)).join(', ')\n      : t('All Env');\n\n    return (\n      <PageFilterDropdownButton\n        detached\n        hideBottomBorder={false}\n        isOpen={isOpen}\n        highlighted={desyncedFilters.has('environments')}\n        data-test-id=\"page-filter-environment-selector\"\n      >\n        <DropdownTitle>\n          <PageFilterPinIndicator filter=\"environments\">\n            <IconWindow />\n          </PageFilterPinIndicator>\n          <TitleContainer>\n            {summary}\n            {!!value.length && value.length > environmentsToShow.length && (\n              <Badge text={`+${value.length - environmentsToShow.length}`} />\n            )}\n          </TitleContainer>\n        </DropdownTitle>\n      </PageFilterDropdownButton>\n    );\n  };\n\n  const customLoadingIndicator = (\n    <PageFilterDropdownButton\n      showChevron={false}\n      disabled\n      data-test-id=\"page-filter-environment-selector\"\n    >\n      <DropdownTitle>\n        <IconWindow />\n        <TitleContainer>{t('Loading\\u2026')}</TitleContainer>\n      </DropdownTitle>\n    </PageFilterDropdownButton>\n  );\n\n  return (\n    <EnvironmentSelector\n      organization={organization}\n      projects={projects}\n      loadingProjects={!projectsLoaded || !isReady}\n      selectedProjects={selection.projects}\n      value={selection.environments}\n      onUpdate={handleUpdateEnvironments}\n      customDropdownButton={customDropdownButton}\n      customLoadingIndicator={customLoadingIndicator}\n      alignDropdown={alignDropdown}\n      detached\n      showPin\n    />\n  );\n}\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex: 1 1 0%;\n  margin-left: ${space(1)};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst DropdownTitle = styled('div')`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nexport default withRouter<Props>(EnvironmentPageFilter);\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nconst NotFound = () => (\n  <NotFoundAlert type=\"error\" showIcon>\n    <Heading>{t('Page Not Found')}</Heading>\n    <p>{t('The page you are looking for was not found.')}</p>\n    <p>{t('You may wish to try the following:')}</p>\n    <ul>\n      <li>\n        {t(\n          `If you entered the address manually, double check the path. Did you\n           forget a trailing slash?`\n        )}\n      </li>\n      <li>\n        {t(\n          `If you followed a link here, try hitting back and reloading the\n           page. It's possible the resource was moved out from under you.`\n        )}\n      </li>\n      <li>\n        {tct('If all else fails, [link:contact us] with more details', {\n          link: (\n            <ExternalLink href=\"https://github.com/getsentry/sentry/issues/new/choose\" />\n          ),\n        })}\n      </li>\n    </ul>\n    <p>\n      {tct('Not sure what to do? [link:Return to the dashboard]', {\n        link: <Link to=\"/\" />,\n      })}\n    </p>\n  </NotFoundAlert>\n);\n\nconst NotFoundAlert = styled(Alert)`\n  margin: ${space(3)} 0;\n`;\n\nconst Heading = styled('h1')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.4;\n  margin-bottom: ${space(1)};\n`;\n\nexport default NotFound;\n","import styled from '@emotion/styled';\n\n/**\n * Used in new inbox\n * Renders the project badge and short name\n */\n\ntype Props = {\n  shortId: string;\n  avatar?: React.ReactNode;\n};\n\nconst ShortId = ({shortId, avatar}: Props) => (\n  <Wrapper>\n    <AvatarWrapper>{avatar}</AvatarWrapper>\n    <IdWrapper>{shortId}</IdWrapper>\n  </Wrapper>\n);\n\nexport default ShortId;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n`;\nconst AvatarWrapper = styled('div')`\n  margin-right: 3px;\n  flex-shrink: 0;\n`;\n\nconst IdWrapper = styled('div')`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-top: 1px;\n`;\n","import styled from '@emotion/styled';\n\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\n/**\n * Used in new inbox\n * Renders the first & last seen times for a group or event with\n * a clock icon.\n */\n\ntype Props = {\n  firstSeen: string;\n  lastSeen: string;\n};\n\nconst TimesTag = ({lastSeen, firstSeen}: Props) => {\n  return (\n    <Wrapper>\n      <StyledIconClock size=\"xs\" color=\"gray300\" />\n      {lastSeen &&\n        getDynamicText({\n          value: (\n            <TimeSince\n              tooltipTitle={t('Last Seen')}\n              date={lastSeen}\n              suffix={t('ago')}\n              shorten\n            />\n          ),\n          fixed: '10s ago',\n        })}\n      {firstSeen && lastSeen && (\n        <Separator className=\"hidden-xs hidden-sm\">&nbsp;|&nbsp;</Separator>\n      )}\n      {firstSeen &&\n        getDynamicText({\n          value: (\n            <TimeSince\n              tooltipTitle={t('First Seen')}\n              date={firstSeen}\n              suffix={t('old')}\n              className=\"hidden-xs hidden-sm\"\n              shorten\n            />\n          ),\n          fixed: '10s old',\n        })}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst Separator = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  margin-right: ${space(0.5)};\n`;\n\nexport default TimesTag;\n","import {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport EventAnnotation from 'sentry/components/events/eventAnnotation';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport InboxReason from 'sentry/components/group/inboxBadges/inboxReason';\nimport InboxShortId from 'sentry/components/group/inboxBadges/shortId';\nimport TimesTag from 'sentry/components/group/inboxBadges/timesTag';\nimport UnhandledTag from 'sentry/components/group/inboxBadges/unhandledTag';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconChat} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = WithRouterProps<{orgId: string}> & {\n  data: Event | Group;\n  showAssignee?: boolean;\n  showInboxTime?: boolean;\n};\n\nfunction EventOrGroupExtraDetails({data, showAssignee, params, showInboxTime}: Props) {\n  const {\n    id,\n    lastSeen,\n    firstSeen,\n    subscriptionDetails,\n    numComments,\n    logger,\n    assignedTo,\n    annotations,\n    shortId,\n    project,\n    lifetime,\n    isUnhandled,\n    inbox,\n  } = data as Group;\n\n  const issuesPath = `/organizations/${params.orgId}/issues/`;\n\n  return (\n    <GroupExtra>\n      {inbox && <InboxReason inbox={inbox} showDateAdded={showInboxTime} />}\n      {shortId && (\n        <InboxShortId\n          shortId={shortId}\n          avatar={\n            project && (\n              <ShadowlessProjectBadge project={project} avatarSize={12} hideName />\n            )\n          }\n        />\n      )}\n      {isUnhandled && <UnhandledTag />}\n      {!lifetime && !firstSeen && !lastSeen ? (\n        <Placeholder height=\"14px\" width=\"100px\" />\n      ) : (\n        <TimesTag\n          lastSeen={lifetime?.lastSeen || lastSeen}\n          firstSeen={lifetime?.firstSeen || firstSeen}\n        />\n      )}\n      {/* Always display comment count on inbox */}\n      {numComments > 0 && (\n        <CommentsLink to={`${issuesPath}${id}/activity/`} className=\"comments\">\n          <IconChat\n            size=\"xs\"\n            color={subscriptionDetails?.reason === 'mentioned' ? 'green300' : undefined}\n          />\n          <span>{numComments}</span>\n        </CommentsLink>\n      )}\n      {logger && (\n        <LoggerAnnotation>\n          <GlobalSelectionLink\n            to={{\n              pathname: issuesPath,\n              query: {\n                query: `logger:${logger}`,\n              },\n            }}\n          >\n            {logger}\n          </GlobalSelectionLink>\n        </LoggerAnnotation>\n      )}\n      {annotations?.map((annotation, key) => (\n        <AnnotationNoMargin\n          dangerouslySetInnerHTML={{\n            __html: annotation,\n          }}\n          key={key}\n        />\n      ))}\n\n      {showAssignee && assignedTo && (\n        <div>{tct('Assigned to [name]', {name: assignedTo.name})}</div>\n      )}\n    </GroupExtra>\n  );\n}\n\nconst GroupExtra = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column dense;\n  gap: ${space(1.5)};\n  justify-content: start;\n  align-items: center;\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeSmall};\n  position: relative;\n  min-width: 500px;\n  white-space: nowrap;\n  line-height: 1.2;\n\n  a {\n    color: inherit;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    line-height: 1;\n  }\n`;\n\nconst ShadowlessProjectBadge = styled(ProjectBadge)`\n  * > img {\n    box-shadow: none;\n  }\n`;\n\nconst CommentsLink = styled(Link)`\n  display: inline-grid;\n  gap: ${space(0.5)};\n  align-items: center;\n  grid-auto-flow: column;\n  color: ${p => p.theme.textColor};\n`;\n\nconst AnnotationNoMargin = styled(EventAnnotation)`\n  margin-left: 0;\n  padding-left: 0;\n  border-left: none;\n  & > a {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst LoggerAnnotation = styled(AnnotationNoMargin)`\n  color: ${p => p.theme.textColor};\n`;\n\nexport default withRouter(EventOrGroupExtraDetails);\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst EventAnnotation = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  border-left: 1px solid ${p => p.theme.innerBorder};\n  padding-left: ${space(1)};\n  color: ${p => p.theme.gray300};\n\n  a {\n    color: ${p => p.theme.gray300};\n\n    &:hover {\n      color: ${p => p.theme.subText};\n    }\n  }\n`;\n\nexport default EventAnnotation;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Hook from 'sentry/components/hook';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n};\n\nfunction BaseFooter({className}: Props) {\n  const config = ConfigStore.getConfig();\n  return (\n    <footer className={className}>\n      <LeftLinks>\n        {config.isSelfHosted && (\n          <Fragment>\n            {'Sentry '}\n            {getDynamicText({\n              fixed: 'Acceptance Test',\n              value: config.version.current,\n            })}\n            <Build>\n              {getDynamicText({\n                fixed: 'test',\n                value: config.version.build.substring(0, 7),\n              })}\n            </Build>\n          </Fragment>\n        )}\n        {config.privacyUrl && (\n          <FooterLink href={config.privacyUrl}>{t('Privacy Policy')}</FooterLink>\n        )}\n        {config.termsUrl && (\n          <FooterLink href={config.termsUrl}>{t('Terms of Use')}</FooterLink>\n        )}\n      </LeftLinks>\n      <LogoLink />\n      <RightLinks>\n        {!config.isSelfHosted && (\n          <FooterLink href=\"https://status.sentry.io/\">{t('Service Status')}</FooterLink>\n        )}\n        <FooterLink href=\"/api/\">{t('API')}</FooterLink>\n        <FooterLink href=\"/docs/\">{t('Docs')}</FooterLink>\n        <FooterLink href=\"https://github.com/getsentry/sentry\">\n          {t('Contribute')}\n        </FooterLink>\n        {config.isSelfHosted && !config.demoMode && (\n          <FooterLink href=\"/out/\">{t('Migrate to SaaS')}</FooterLink>\n        )}\n      </RightLinks>\n      <Hook name=\"footer\" />\n    </footer>\n  );\n}\n\nconst LeftLinks = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n  align-items: center;\n  justify-self: flex-start;\n  gap: ${space(2)};\n`;\n\nconst RightLinks = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n  align-items: center;\n  justify-self: flex-end;\n  gap: ${space(2)};\n`;\n\nconst FooterLink = styled(ExternalLink)`\n  color: ${p => p.theme.subText};\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.blue300} 0 2px 0;\n  }\n`;\n\nconst LogoLink = styled(props => (\n  <ExternalLink href=\"https://sentry.io/welcome/\" tabIndex={-1} {...props}>\n    <IconSentry size=\"lg\" />\n  </ExternalLink>\n))`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  color: ${p => p.theme.subText};\n`;\n\nconst Build = styled('span')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  color: ${p => p.theme.subText};\n  font-weight: bold;\n  margin-left: ${space(1)};\n`;\n\nconst Footer = styled(BaseFooter)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border-top: 1px solid ${p => p.theme.border};\n  align-content: center;\n  padding: ${space(2)} ${space(4)};\n  margin-top: auto; /* pushes footer to the bottom of the page when loading */\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)};\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: none;\n  }\n`;\n\nexport default Footer;\n","import {Component} from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Form from 'sentry/components/forms/form';\nimport {t} from 'sentry/locale';\n\ntype Props = Form['props'] & {\n  apiEndpoint: string;\n  apiMethod: string;\n  onSubmit?: (data: Record<string, any>) => void;\n};\n\nexport default class ApiForm extends Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport FieldDescription from 'sentry/components/forms/field/fieldDescription';\nimport FieldHelp from 'sentry/components/forms/field/fieldHelp';\nimport FieldLabel from 'sentry/components/forms/field/fieldLabel';\nimport FieldRequiredBadge from 'sentry/components/forms/field/fieldRequiredBadge';\nimport FormField from 'sentry/components/forms/formField';\nimport space from 'sentry/styles/space';\n\ntype FormFieldProps = Omit<\n  React.ComponentProps<typeof FormField>,\n  'children' | 'help' | 'disabled' | 'required'\n>;\n\ntype Props = {\n  /**\n   * The input name\n   */\n  name: string;\n  /**\n   * Is the field disabled?\n   */\n  disabled?: boolean;\n  /**\n   * Help or description of the field\n   */\n  help?: React.ReactNode | React.ReactElement | ((props: Props) => React.ReactNode);\n  /**\n   * The control's `id` property\n   */\n  id?: string;\n  /**\n   * User visible field label\n   */\n  label?: React.ReactNode;\n  /**\n   * Is the field required?\n   */\n  required?: boolean;\n} & FormFieldProps;\n\nfunction CheckboxField(props: Props) {\n  const {name, disabled, stacked, id, required, label, help} = props;\n\n  const helpElement = typeof help === 'function' ? help(props) : help;\n\n  return (\n    <FormField name={name} inline={false} stacked={stacked}>\n      {({onChange, value}) => {\n        function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n          const newValue = e.target.checked;\n          onChange?.(newValue, e);\n        }\n\n        return (\n          <FieldLayout>\n            <ControlWrapper>\n              <Checkbox\n                id={id}\n                name={name}\n                disabled={disabled}\n                checked={value === true}\n                onChange={handleChange}\n              />\n            </ControlWrapper>\n            <FieldDescription htmlFor={id}>\n              {label && (\n                <FieldLabel disabled={disabled}>\n                  <span>\n                    {label}\n                    {required && <FieldRequiredBadge />}\n                  </span>\n                </FieldLabel>\n              )}\n              {helpElement && (\n                <FieldHelp stacked={stacked} inline>\n                  {helpElement}\n                </FieldHelp>\n              )}\n            </FieldDescription>\n          </FieldLayout>\n        );\n      }}\n    </FormField>\n  );\n}\n\nconst ControlWrapper = styled('span')`\n  align-self: flex-start;\n  display: flex;\n  margin-right: ${space(1)};\n\n  & input {\n    margin: 0;\n  }\n`;\n\nconst FieldLayout = styled('div')`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport default CheckboxField;\n","import {Fragment} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Radio from 'sentry/components/radio';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ninterface ContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientInline?: boolean;\n}\n\nconst Container = styled('div')<ContainerProps>`\n  display: grid;\n  gap: ${p => space(p.orientInline ? 3 : 1)};\n  grid-auto-flow: ${p => (p.orientInline ? 'column' : 'row')};\n  grid-auto-rows: max-content;\n  grid-auto-columns: max-content;\n`;\n\ninterface BaseRadioGroupProps<C extends string> {\n  /**\n   * An array of [id, name, description]\n   */\n  choices: [C, React.ReactNode, React.ReactNode?][];\n  label: string;\n  onChange: (id: C, e: React.FormEvent<HTMLInputElement>) => void;\n  value: string | number | null;\n  disabled?: boolean;\n  /**\n   * An array of [choice id, disabled reason]\n   */\n  disabledChoices?: [C, React.ReactNode?][];\n  /**\n   * Switch the radio items to flow left to right, instead of vertically.\n   */\n  orientInline?: boolean;\n}\n\nexport interface RadioGroupProps<C extends string>\n  extends BaseRadioGroupProps<C>,\n    Omit<ContainerProps, 'onChange'> {}\n\nconst RadioGroup = <C extends string>({\n  value,\n  disabled: groupDisabled,\n  disabledChoices = [],\n  choices = [],\n  label,\n  onChange,\n  orientInline,\n  ...props\n}: RadioGroupProps<C>) => (\n  <Container\n    orientInline={orientInline}\n    {...props}\n    role=\"radiogroup\"\n    aria-labelledby={label}\n  >\n    {choices.map(([id, name, description], index) => {\n      const disabledChoice = disabledChoices.find(([choiceId]) => choiceId === id);\n      const disabledChoiceReason = disabledChoice?.[1];\n      const disabled = !!disabledChoice || groupDisabled;\n      const content = (\n        <Fragment>\n          <RadioLineItem\n            role=\"radio\"\n            index={index}\n            aria-checked={value === id}\n            disabled={disabled}\n          >\n            <Radio\n              aria-label={t('Select %s', name)}\n              disabled={disabled}\n              checked={value === id}\n              onChange={(e: React.FormEvent<HTMLInputElement>) =>\n                !disabled && onChange(id, e)\n              }\n            />\n            <RadioLineText disabled={disabled}>{name}</RadioLineText>\n            {description && (\n              <Fragment>\n                {/* If there is a description then we want to have a 2x2 grid so the first column width aligns with Radio Button */}\n                <div />\n                <Description>{description}</Description>\n              </Fragment>\n            )}\n          </RadioLineItem>\n        </Fragment>\n      );\n\n      if (!!disabledChoiceReason) {\n        return (\n          <Tooltip key={index} title={disabledChoiceReason}>\n            {content}\n          </Tooltip>\n        );\n      }\n\n      return <Fragment key={index}>{content}</Fragment>;\n    })}\n  </Container>\n);\n\nconst shouldForwardProp = (p: PropertyKey) =>\n  typeof p === 'string' && !['disabled', 'animate'].includes(p) && isPropValid(p);\n\nexport const RadioLineItem = styled('label', {shouldForwardProp})<{\n  index: number;\n  disabled?: boolean;\n}>`\n  display: grid;\n  gap: 0.25em 0.5em;\n  grid-template-columns: max-content auto;\n  align-items: center;\n  cursor: ${p => (p.disabled ? 'default' : 'pointer')};\n  outline: none;\n  font-weight: normal;\n  margin: 0;\n`;\n\nconst RadioLineText = styled('div', {shouldForwardProp})<{disabled?: boolean}>`\n  opacity: ${p => (p.disabled ? 0.4 : null)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4em;\n`;\n\nexport default RadioGroup;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport {Observer} from 'mobx-react';\n\nimport {APIRequestMethod} from 'sentry/api';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport FormContext, {FormContextData} from 'sentry/components/forms/formContext';\nimport FormModel, {FormOptions} from 'sentry/components/forms/model';\nimport {Data, OnSubmitCallback} from 'sentry/components/forms/type';\nimport Panel from 'sentry/components/panels/panel';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\n\ntype RenderProps = {\n  model: FormModel;\n};\n\ntype RenderFunc = (props: RenderProps) => React.ReactNode;\n\ntype Props = {\n  additionalFieldProps?: {[key: string]: any};\n  allowUndo?: boolean;\n  /**\n   * The URL to the API endpoint this form submits to.\n   */\n  apiEndpoint?: string;\n  /**\n   * The HTTP method to use.\n   */\n  apiMethod?: APIRequestMethod;\n  cancelLabel?: string;\n  children?: React.ReactNode | RenderFunc;\n  className?: string;\n  'data-test-id'?: string;\n  extraButton?: React.ReactNode;\n  footerClass?: string;\n  footerStyle?: React.CSSProperties;\n  hideFooter?: boolean;\n  initialData?: Data;\n  /**\n   * A FormModel instance. If undefined a FormModel will be created for you.\n   */\n  model?: FormModel;\n  /**\n   * Callback fired when the form is cancelled via the cancel button.\n   */\n  onCancel?: (e: React.MouseEvent) => void;\n  onPreSubmit?: () => void;\n  /**\n   * Callback to handle form submission.\n   *\n   * Defining this prop will replace the normal API submission behavior\n   * and instead only call the provided callback.\n   *\n   * Your callback is expected to call `onSubmitSuccess` when the action succeeds and\n   * `onSubmitError` when the action fails.\n   */\n  onSubmit?: OnSubmitCallback;\n  /**\n   * Ensure the form model isn't reset when the form unmounts\n   */\n  preventFormResetOnUnmount?: boolean;\n  /**\n   * Are changed required before the form can be submitted.\n   */\n  requireChanges?: boolean;\n  /**\n   * Should the form reset its state when there are errors after submission.\n   */\n  resetOnError?: boolean;\n  /**\n   * Should fields save individually as they are blurred.\n   */\n  saveOnBlur?: boolean;\n\n  /**\n   * If set to true, preventDefault is not called\n   */\n  skipPreventDefault?: boolean;\n  /**\n   * Should the submit button be disabled.\n   */\n  submitDisabled?: boolean;\n  submitLabel?: string;\n  submitPriority?: ButtonProps['priority'];\n} & Pick<FormOptions, 'onSubmitSuccess' | 'onSubmitError' | 'onFieldChange'>;\n\nexport default class Form extends Component<Props> {\n  constructor(props: Props, context: FormContextData) {\n    super(props, context);\n    const {\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n      resetOnError,\n      onSubmitSuccess,\n      onSubmitError,\n      onFieldChange,\n      initialData,\n      allowUndo,\n    } = props;\n\n    this.model.setInitialData(initialData);\n    this.model.setFormOptions({\n      resetOnError,\n      allowUndo,\n      onFieldChange,\n      onSubmitSuccess,\n      onSubmitError,\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n    });\n  }\n\n  componentWillUnmount() {\n    !this.props.preventFormResetOnUnmount && this.model.reset();\n  }\n\n  model: FormModel = this.props.model || new FormModel();\n\n  contextData() {\n    return {\n      saveOnBlur: this.props.saveOnBlur,\n      form: this.model,\n    };\n  }\n\n  onSubmit = e => {\n    !this.props.skipPreventDefault && e.preventDefault();\n    if (this.model.isSaving) {\n      return;\n    }\n\n    this.props.onPreSubmit?.();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit(\n        this.model.getData(),\n        this.onSubmitSuccess,\n        this.onSubmitError,\n        e,\n        this.model\n      );\n    } else {\n      this.model.saveForm();\n    }\n  };\n\n  onSubmitSuccess = data => {\n    const {onSubmitSuccess} = this.props;\n    this.model.submitSuccess(data);\n\n    if (onSubmitSuccess) {\n      onSubmitSuccess(data, this.model);\n    }\n  };\n\n  onSubmitError = error => {\n    const {onSubmitError} = this.props;\n    this.model.submitError(error);\n\n    if (onSubmitError) {\n      onSubmitError(error, this.model);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      footerClass,\n      footerStyle,\n      submitDisabled,\n      submitLabel,\n      submitPriority,\n      cancelLabel,\n      onCancel,\n      extraButton,\n      requireChanges,\n      saveOnBlur,\n      hideFooter,\n    } = this.props;\n    const shouldShowFooter =\n      typeof hideFooter !== 'undefined' ? !hideFooter : !saveOnBlur;\n\n    return (\n      <FormContext.Provider value={this.contextData()}>\n        <form\n          onSubmit={this.onSubmit}\n          className={className ?? 'form-stacked'}\n          data-test-id={this.props['data-test-id']}\n        >\n          <div>\n            {isRenderFunc<RenderFunc>(children)\n              ? children({model: this.model})\n              : children}\n          </div>\n\n          {shouldShowFooter && (\n            <StyledFooter\n              className={footerClass}\n              style={footerStyle}\n              saveOnBlur={saveOnBlur}\n            >\n              {extraButton}\n              <DefaultButtons>\n                {onCancel && (\n                  <Observer>\n                    {() => (\n                      <Button\n                        type=\"button\"\n                        disabled={this.model.isSaving}\n                        onClick={onCancel}\n                        style={{marginLeft: 5}}\n                      >\n                        {cancelLabel ?? t('Cancel')}\n                      </Button>\n                    )}\n                  </Observer>\n                )}\n\n                <Observer>\n                  {() => (\n                    <Button\n                      data-test-id=\"form-submit\"\n                      priority={submitPriority ?? 'primary'}\n                      disabled={\n                        this.model.isError ||\n                        this.model.isSaving ||\n                        submitDisabled ||\n                        (requireChanges ? !this.model.formChanged : false)\n                      }\n                      type=\"submit\"\n                    >\n                      {submitLabel ?? t('Save Changes')}\n                    </Button>\n                  )}\n                </Observer>\n              </DefaultButtons>\n            </StyledFooter>\n          )}\n        </form>\n      </FormContext.Provider>\n    );\n  }\n}\n\nconst StyledFooter = styled('div')<{saveOnBlur?: boolean}>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 25px;\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  background: none;\n  padding: 16px 0 0;\n  margin-bottom: 16px;\n\n  ${p =>\n    !p.saveOnBlur &&\n    `\n  ${Panel} & {\n    margin-top: 0;\n    padding-right: 36px;\n  }\n\n  /* Better padding with form inside of a modal */\n  [role='document'] & {\n    padding-right: 30px;\n    margin-left: -30px;\n    margin-right: -30px;\n    margin-bottom: -30px;\n    margin-top: 16px;\n    padding-bottom: 16px;\n  }\n  `};\n`;\n\nconst DefaultButtons = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  flex: 1;\n`;\n","import Input, {InputProps} from 'sentry/components/forms/controls/input';\nimport FormField, {FormFieldProps} from 'sentry/components/forms/formField';\n\nexport interface InputFieldProps\n  extends Omit<FormFieldProps, 'children'>,\n    Omit<\n      InputProps,\n      | 'value'\n      | 'placeholder'\n      | 'disabled'\n      | 'onBlur'\n      | 'onKeyDown'\n      | 'onChange'\n      | 'children'\n      | 'name'\n      | 'defaultValue'\n    > {\n  // TODO(ts) Add base types for this. Each input field\n  // has different props, but we could use have a base type that contains\n  // the common properties.\n  field?: (props) => React.ReactNode;\n  value?: any;\n}\n\nexport type onEvent = (value, event?: React.FormEvent<HTMLInputElement>) => void;\n\nfunction defaultField({\n  onChange,\n  onBlur,\n  onKeyDown,\n  ...rest\n}: {\n  onBlur: onEvent;\n  onChange: onEvent;\n  onKeyDown: onEvent;\n}) {\n  return (\n    <Input\n      onBlur={e => onBlur(e.target.value, e)}\n      onKeyDown={e => onKeyDown((e.target as any).value, e)}\n      onChange={e => onChange(e.target.value, e)}\n      {...rest}\n    />\n  );\n}\n\nfunction InputField(props: InputFieldProps) {\n  return (\n    <FormField className={props.className} {...props}>\n      {formFieldProps => {\n        const {children: _children, ...otherFieldProps} = formFieldProps;\n        return props.field ? props.field(otherFieldProps) : defaultField(otherFieldProps);\n      }}\n    </FormField>\n  );\n}\n\nexport default InputField;\n","import {forwardRef, useCallback, useMemo} from 'react';\nimport ReactSelect, {\n  components as selectComponents,\n  GroupedOptionsType,\n  mergeStyles,\n  OptionsType,\n  Props as ReactSelectProps,\n  StylesConfig,\n} from 'react-select';\nimport Async from 'react-select/async';\nimport AsyncCreatable from 'react-select/async-creatable';\nimport Creatable from 'react-select/creatable';\nimport {useTheme} from '@emotion/react';\n\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {IconChevron, IconClose} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {Choices, SelectValue} from 'sentry/types';\nimport convertFromSelect2Choices from 'sentry/utils/convertFromSelect2Choices';\n\nimport Option from './selectOption';\n\nfunction isGroupedOptions<OptionType>(\n  maybe:\n    | ReturnType<typeof convertFromSelect2Choices>\n    | GroupedOptionsType<OptionType>\n    | OptionType[]\n    | OptionsType<OptionType>\n): maybe is GroupedOptionsType<OptionType> {\n  if (!maybe || maybe.length === 0) {\n    return false;\n  }\n  return (maybe as GroupedOptionsType<OptionType>)[0].options !== undefined;\n}\n\nconst ClearIndicator = (\n  props: React.ComponentProps<typeof selectComponents.ClearIndicator>\n) => (\n  <selectComponents.ClearIndicator {...props}>\n    <IconClose size=\"10px\" />\n  </selectComponents.ClearIndicator>\n);\n\nconst DropdownIndicator = (\n  props: React.ComponentProps<typeof selectComponents.DropdownIndicator>\n) => (\n  <selectComponents.DropdownIndicator {...props}>\n    <IconChevron direction=\"down\" size=\"14px\" />\n  </selectComponents.DropdownIndicator>\n);\n\nconst MultiValueRemove = (\n  props: React.ComponentProps<typeof selectComponents.MultiValueRemove>\n) => (\n  <selectComponents.MultiValueRemove {...props}>\n    <IconClose size=\"8px\" />\n  </selectComponents.MultiValueRemove>\n);\n\nconst SelectLoadingIndicator = () => (\n  <LoadingIndicator mini size={20} style={{height: 20, width: 20}} />\n);\n\nexport type ControlProps<OptionType = GeneralSelectValue> = Omit<\n  ReactSelectProps<OptionType>,\n  'onChange' | 'value'\n> & {\n  /**\n   * Backwards compatible shim to work with select2 style choice type.\n   */\n  choices?: Choices | ((props: ControlProps<OptionType>) => Choices);\n  /**\n   * Set to true to prefix selected values with content\n   */\n  inFieldLabel?: string;\n  /**\n   * Whether this is used inside compactSelect. See\n   * components/compactSelect.tsx\n   */\n  isCompact?: boolean;\n  /**\n   * Maximum width of the menu component. Menu item labels that overflow the\n   * menu's boundaries will automatically be truncated.\n   */\n  maxMenuWidth?: number | string;\n  /**\n   * Used by MultiSelectControl.\n   */\n  multiple?: boolean;\n  /**\n   * Handler for changes. Narrower than the types in react-select.\n   */\n  onChange?: (value?: OptionType | null) => void;\n  /**\n   * Show line dividers between options\n   */\n  showDividers?: boolean;\n  /**\n   * Unlike react-select which expects an OptionType as its value\n   * we accept the option.value and resolve the option object.\n   * Because this type is embedded in the OptionType generic we\n   * can't have a good type here.\n   */\n  value?: any;\n};\n\n/**\n * Additional props provided by forwardRef\n */\ntype WrappedControlProps<OptionType> = ControlProps<OptionType> & {\n  /**\n   * Ref forwarded into ReactSelect component.\n   * The any is inherited from react-select.\n   */\n  forwardedRef: React.Ref<ReactSelect>;\n};\n\n// TODO(ts) The exported component uses forwardRef.\n// This means we cannot fill the SelectValue generic\n// at the call site. We use `any` here to avoid type errors with select\n// controls that have custom option structures\nexport type GeneralSelectValue = SelectValue<any>;\n\nfunction SelectControl<OptionType extends GeneralSelectValue = GeneralSelectValue>(\n  props: WrappedControlProps<OptionType>\n) {\n  const theme = useTheme();\n  const {isCompact, isSearchable, maxMenuWidth} = props;\n\n  // TODO(epurkhiser): The loading indicator should probably also be our loading\n  // indicator.\n\n  // Unfortunately we cannot use emotions `css` helper here, since react-select\n  // *requires* object styles, which the css helper cannot produce.\n  const indicatorStyles = useCallback(\n    ({padding: _padding, ...provided}: React.CSSProperties) => ({\n      ...provided,\n      padding: '4px',\n      alignItems: 'center',\n      cursor: 'pointer',\n      color: theme.subText,\n    }),\n    [theme]\n  );\n\n  const defaultStyles = useMemo<StylesConfig>(\n    () => ({\n      control: (_, state: any) => ({\n        height: '100%',\n        lineHeight: theme.text.lineHeightBody,\n        display: 'flex',\n        // @ts-ignore Ignore merge errors as only defining the property once\n        // makes code harder to understand.\n        ...{\n          color: theme.formText,\n          background: theme.background,\n          border: `1px solid ${theme.border}`,\n          boxShadow: theme.dropShadowLight,\n        },\n        borderRadius: theme.borderRadius,\n        transition: 'border 0.1s, box-shadow 0.1s',\n        alignItems: 'center',\n        minHeight: '40px',\n        ...(state.isFocused && {\n          borderColor: theme.focusBorder,\n          boxShadow: `${theme.focusBorder} 0 0 0 1px`,\n        }),\n        ...(state.isDisabled && {\n          borderColor: theme.border,\n          background: theme.backgroundSecondary,\n          color: theme.disabled,\n          cursor: 'not-allowed',\n        }),\n        ...(!state.isSearchable && {\n          cursor: 'pointer',\n        }),\n        ...(isCompact && {\n          padding: `${space(0.5)} ${space(0.5)}`,\n          borderRadius: 0,\n          border: 'none',\n          boxShadow: 'none',\n          cursor: 'initial',\n          minHeight: 'none',\n          ...(isSearchable\n            ? {marginTop: 1}\n            : {\n                height: 0,\n                padding: 0,\n                overflow: 'hidden',\n              }),\n        }),\n      }),\n\n      menu: (provided: React.CSSProperties) => ({\n        ...provided,\n        fontSize: theme.fontSizeMedium,\n        zIndex: theme.zIndex.dropdown,\n        background: theme.backgroundElevated,\n        border: `1px solid ${theme.border}`,\n        borderRadius: theme.borderRadius,\n        boxShadow: theme.dropShadowHeavy,\n        width: 'auto',\n        minWidth: '100%',\n        maxWidth: maxMenuWidth ?? 'auto',\n        ...(isCompact && {\n          position: 'relative',\n          margin: 0,\n          borderRadius: 0,\n          border: 'none',\n          boxShadow: 'none',\n          zIndex: 'initial',\n          ...(isSearchable && {paddingTop: 0}),\n        }),\n      }),\n\n      menuList: (provided: React.CSSProperties) => ({\n        ...provided,\n        ...(isCompact &&\n          isSearchable && {\n            paddingTop: 0,\n          }),\n      }),\n\n      menuPortal: () => ({\n        maxWidth: maxMenuWidth ?? '24rem',\n        zIndex: theme.zIndex.dropdown,\n        width: '90%',\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        background: theme.backgroundElevated,\n        border: `1px solid ${theme.border}`,\n        borderRadius: theme.borderRadius,\n        boxShadow: theme.dropShadowHeavy,\n        overflow: 'hidden',\n      }),\n\n      option: (provided: React.CSSProperties) => ({\n        ...provided,\n        cursor: 'pointer',\n        color: theme.textColor,\n        background: 'transparent',\n        padding: 0,\n        ':active': {\n          background: 'transparent',\n        },\n      }),\n      valueContainer: (provided: React.CSSProperties) => ({\n        ...provided,\n        alignItems: 'center',\n        ...(isCompact && {\n          fontSize: theme.fontSizeMedium,\n          padding: `${space(0.5)} ${space(1)}`,\n          border: `1px solid ${theme.innerBorder}`,\n          borderRadius: theme.borderRadius,\n          cursor: 'text',\n          background: theme.backgroundSecondary,\n        }),\n      }),\n      input: (provided: React.CSSProperties) => ({\n        ...provided,\n        color: theme.formText,\n        ...(isCompact && {\n          padding: 0,\n          margin: 0,\n        }),\n      }),\n      singleValue: (provided: React.CSSProperties) => ({\n        ...provided,\n        color: theme.formText,\n      }),\n      placeholder: (provided: React.CSSProperties) => ({\n        ...provided,\n        color: theme.formPlaceholder,\n        ...(isCompact && {\n          padding: 0,\n          margin: 0,\n        }),\n      }),\n      multiValue: (provided: React.CSSProperties) => ({\n        ...provided,\n        color: '#007eff',\n        backgroundColor: '#ebf5ff',\n        borderRadius: '2px',\n        border: '1px solid #c2e0ff',\n        display: 'flex',\n      }),\n      multiValueLabel: (provided: React.CSSProperties) => ({\n        ...provided,\n        color: '#007eff',\n        padding: '0',\n        paddingLeft: '6px',\n        lineHeight: '1.8',\n      }),\n      multiValueRemove: () => ({\n        cursor: 'pointer',\n        alignItems: 'center',\n        borderLeft: '1px solid #c2e0ff',\n        borderRadius: '0 2px 2px 0',\n        display: 'flex',\n        padding: '0 4px',\n        marginLeft: '4px',\n\n        '&:hover': {\n          color: '#6284b9',\n          background: '#cce5ff',\n        },\n      }),\n      indicatorsContainer: () => ({\n        display: 'grid',\n        gridAutoFlow: 'column',\n        gridGap: '2px',\n        marginRight: '6px',\n        ...(isCompact && {display: 'none'}),\n      }),\n      clearIndicator: indicatorStyles,\n      dropdownIndicator: indicatorStyles,\n      loadingIndicator: indicatorStyles,\n      groupHeading: (provided: React.CSSProperties) => ({\n        ...provided,\n        lineHeight: '1.5',\n        fontWeight: 600,\n        color: theme.subText,\n        marginBottom: 0,\n        padding: `${space(0.5)} ${space(1.5)}`,\n      }),\n      group: (provided: React.CSSProperties) => ({\n        ...provided,\n        paddingTop: 0,\n        ':last-of-type': {\n          paddingBottom: 0,\n        },\n      }),\n    }),\n    [theme, maxMenuWidth, indicatorStyles, isSearchable, isCompact]\n  );\n\n  const getFieldLabelStyle = (label?: string) => ({\n    ':before': {\n      content: `\"${label}\"`,\n      color: theme.gray300,\n      fontWeight: 600,\n    },\n  });\n\n  const {\n    async,\n    creatable,\n    options,\n    choices,\n    clearable,\n    components,\n    styles,\n    value,\n    inFieldLabel,\n    ...rest\n  } = props;\n\n  // Compatibility with old select2 API\n  const choicesOrOptions =\n    convertFromSelect2Choices(typeof choices === 'function' ? choices(props) : choices) ||\n    options;\n\n  // It's possible that `choicesOrOptions` does not exist (e.g. in the case of AsyncSelect)\n  let mappedValue = value;\n\n  if (choicesOrOptions) {\n    /**\n     * Value is expected to be object like the options list, we map it back from the options list.\n     * Note that if the component doesn't have options or choices passed in\n     * because the select component fetches the options finding the mappedValue will fail\n     * and the component won't work\n     */\n    let flatOptions: any[] = [];\n    if (isGroupedOptions<OptionType>(choicesOrOptions)) {\n      flatOptions = choicesOrOptions.flatMap(option => option.options);\n    } else {\n      // @ts-ignore The types used in react-select generics (OptionType) don't\n      // line up well with our option type (SelectValue). We need to do more work\n      // to get these types to align.\n      flatOptions = choicesOrOptions.flatMap(option => option);\n    }\n    mappedValue =\n      props.multiple && Array.isArray(value)\n        ? value.map(val => flatOptions.find(option => option.value === val))\n        : flatOptions.find(opt => opt.value === value) || value;\n  }\n\n  // Override the default style with in-field labels if they are provided\n  const inFieldLabelStyles = {\n    singleValue: (base: React.CSSProperties) => ({\n      ...base,\n      ...getFieldLabelStyle(inFieldLabel),\n    }),\n    placeholder: (base: React.CSSProperties) => ({\n      ...base,\n      ...getFieldLabelStyle(inFieldLabel),\n    }),\n  };\n  const labelOrDefaultStyles = inFieldLabel\n    ? mergeStyles(defaultStyles, inFieldLabelStyles)\n    : defaultStyles;\n\n  // Allow the provided `styles` prop to override default styles using the same\n  // function interface provided by react-styled. This ensures the `provided`\n  // styles include our overridden default styles\n  const mappedStyles = styles\n    ? mergeStyles(labelOrDefaultStyles, styles)\n    : labelOrDefaultStyles;\n\n  const replacedComponents = {\n    ClearIndicator,\n    DropdownIndicator,\n    MultiValueRemove,\n    LoadingIndicator: SelectLoadingIndicator,\n    IndicatorSeparator: null,\n    Option,\n  };\n\n  return (\n    <SelectPicker<OptionType>\n      styles={mappedStyles}\n      components={{...replacedComponents, ...components}}\n      async={async}\n      creatable={creatable}\n      isClearable={clearable}\n      backspaceRemovesValue={clearable}\n      value={mappedValue}\n      isMulti={props.multiple || props.multi}\n      isDisabled={props.isDisabled || props.disabled}\n      showDividers={props.showDividers}\n      options={options || (choicesOrOptions as OptionsType<OptionType>)}\n      openMenuOnFocus={props.openMenuOnFocus}\n      blurInputOnSelect={!props.multiple && !props.multi}\n      closeMenuOnSelect={!(props.multiple || props.multi)}\n      hideSelectedOptions={false}\n      tabSelectsValue={false}\n      {...rest}\n    />\n  );\n}\n\ntype PickerProps<OptionType> = ControlProps<OptionType> & {\n  /**\n   * Enable async option loading.\n   */\n  async?: boolean;\n  /**\n   * Enable 'clearable' which allows values to be removed.\n   */\n  clearable?: boolean;\n  /**\n   * Enable 'create' mode which allows values to be created inline.\n   */\n  creatable?: boolean;\n};\n\nfunction SelectPicker<OptionType>({\n  async,\n  creatable,\n  forwardedRef,\n  ...props\n}: PickerProps<OptionType>) {\n  // Pick the right component to use\n  // Using any here as react-select types also use any\n  let Component: React.ComponentType<any> | undefined;\n  if (async && creatable) {\n    Component = AsyncCreatable;\n  } else if (async && !creatable) {\n    Component = Async;\n  } else if (creatable) {\n    Component = Creatable;\n  } else {\n    Component = ReactSelect;\n  }\n\n  return <Component ref={forwardedRef} {...props} />;\n}\n\n// The generics need to be filled here as forwardRef can't expose generics.\nconst RefForwardedSelectControl = forwardRef<\n  ReactSelect<GeneralSelectValue>,\n  ControlProps<GeneralSelectValue>\n>(function RefForwardedSelectControl(props, ref) {\n  return <SelectControl forwardedRef={ref as any} {...props} />;\n});\n\nexport default RefForwardedSelectControl;\n","import {Component} from 'react';\nimport {OptionsType, ValueType} from 'react-select';\n\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport InputField, {InputFieldProps} from 'sentry/components/forms/inputField';\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {t} from 'sentry/locale';\nimport {Choices, SelectValue} from 'sentry/types';\n\nexport interface SelectFieldProps<OptionType>\n  extends InputFieldProps,\n    Omit<ControlProps<OptionType>, 'onChange'> {\n  /**\n   * Should the select be clearable?\n   */\n  allowClear?: boolean;\n  /**\n   * Should the select allow empty values?\n   */\n  allowEmpty?: boolean;\n  /**\n   * Allow specific options to be 'confirmed' with a confirmation message.\n   *\n   * The key is the value that should be confirmed, the value is the message\n   * to display in the confirmation modal.\n   *\n   * XXX: This only works when using the new-style options format, and _only_\n   * if the value object has a `value` attribute in the option. The types do\n   * not correctly reflect this so be careful!\n   */\n  confirm?: Record<string, React.ReactNode>;\n  /**\n   * A label that is shown inside the select control.\n   */\n  inFieldLabel?: string;\n  small?: boolean;\n}\n\nfunction getChoices<T>(props: SelectFieldProps<T>): Choices {\n  const choices = props.choices;\n  if (typeof choices === 'function') {\n    return choices(props);\n  }\n  if (choices === undefined) {\n    return [];\n  }\n\n  return choices;\n}\n\n/**\n * Required to type guard for OptionsType<T> which is a readonly Array\n */\nfunction isArray<T>(maybe: T | OptionsType<T>): maybe is OptionsType<T> {\n  return Array.isArray(maybe);\n}\n\nexport default class SelectField<OptionType extends SelectValue<any>> extends Component<\n  SelectFieldProps<OptionType>\n> {\n  static defaultProps = {\n    allowClear: false,\n    allowEmpty: false,\n    placeholder: '--',\n    escapeMarkup: true,\n    multiple: false,\n    small: false,\n    formatMessageValue: (value, props) =>\n      (getChoices(props).find(choice => choice[0] === value) || [null, value])[1],\n  };\n\n  handleChange = (\n    onBlur: InputFieldProps['onBlur'],\n    onChange: InputFieldProps['onChange'],\n    optionObj: ValueType<OptionType>\n  ) => {\n    let value: any = undefined;\n\n    // If optionObj is empty, then it probably means that the field was \"cleared\"\n    if (!optionObj) {\n      value = optionObj;\n    } else if (this.props.multiple && isArray(optionObj)) {\n      // List of optionObjs\n      value = optionObj.map(({value: val}) => val);\n    } else if (!isArray(optionObj)) {\n      value = optionObj.value;\n    }\n\n    onChange?.(value, {});\n    onBlur?.(value, {});\n  };\n\n  render() {\n    const {allowClear, confirm, multiple, small, ...otherProps} = this.props;\n    return (\n      <InputField\n        {...otherProps}\n        alignRight={small}\n        field={({onChange, onBlur, required: _required, ...props}) => (\n          <SelectControl\n            {...props}\n            clearable={allowClear}\n            multiple={multiple}\n            onChange={val => {\n              if (!confirm) {\n                this.handleChange(onBlur, onChange, val);\n                return;\n              }\n\n              // Support 'confirming' selections. This only works with\n              // `val` objects that use the new-style options format\n              const previousValue = props.value?.toString();\n              // `val` may be null if clearing the select for an optional field\n              const newValue = val?.value?.toString();\n\n              // Value not marked for confirmation, or hasn't changed\n              if (!confirm[newValue] || previousValue === newValue) {\n                this.handleChange(onBlur, onChange, val);\n                return;\n              }\n\n              openConfirmModal({\n                onConfirm: () => this.handleChange(onBlur, onChange, val),\n                message: confirm[val?.value] ?? t('Continue with these changes?'),\n              });\n            }}\n          />\n        )}\n      />\n    );\n  }\n}\n","enum FormState {\n  HOVER = 'Hover',\n  DISABLED = 'Disabled',\n  LOADING = 'Loading',\n  READY = 'Ready',\n  SAVING = 'Saving',\n  ERROR = 'Error',\n}\n\nexport default FormState;\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {tct} from 'sentry/locale';\nimport {Project} from 'sentry/types';\n\nconst sentryStatusPageLink = 'https://status.sentry.io/';\n\ntype Props = {\n  projects: Project[];\n  className?: string;\n};\n\n// This alert makes the user aware that one or more projects have been selected for the Low Priority Queue\nfunction GlobalEventProcessingAlert({className, projects}: Props) {\n  const projectsInTheLowPriorityQueue = projects.filter(\n    project => project.eventProcessing.symbolicationDegraded\n  );\n\n  if (!projectsInTheLowPriorityQueue.length) {\n    return null;\n  }\n\n  return (\n    <Alert className={className} type=\"info\" showIcon>\n      {projectsInTheLowPriorityQueue.length === 1\n        ? tct(\n            'Event Processing for this project is currently degraded. Events may appear with larger delays than usual or get dropped. Please check the [link:Status] page for a potential outage.',\n            {\n              link: <ExternalLink href={sentryStatusPageLink} />,\n            }\n          )\n        : tct(\n            'Event Processing for the [projectSlugs] projects is currently degraded. Events may appear with larger delays than usual or get dropped. Please check the [link:Status] page for a potential outage.',\n            {\n              projectSlugs: projectsInTheLowPriorityQueue.map(({slug}, index) => (\n                <Fragment key={slug}>\n                  <strong>{slug}</strong>\n                  {index !== projectsInTheLowPriorityQueue.length - 1 && ', '}\n                </Fragment>\n              )),\n              link: <ExternalLink href={sentryStatusPageLink} />,\n            }\n          )}\n    </Alert>\n  );\n}\n\nexport default GlobalEventProcessingAlert;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport DateTime from 'sentry/components/dateTime';\nimport Tag from 'sentry/components/tag';\nimport TimeSince, {getRelativeDate} from 'sentry/components/timeSince';\nimport {t, tct} from 'sentry/locale';\nimport {InboxDetails} from 'sentry/types';\nimport {getDuration} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {Theme} from 'sentry/utils/theme';\n\nconst GroupInboxReason = {\n  NEW: 0,\n  UNIGNORED: 1,\n  REGRESSION: 2,\n  MANUAL: 3,\n  REPROCESSED: 4,\n};\n\ntype Props = {\n  inbox: InboxDetails;\n  fontSize?: 'sm' | 'md';\n  /** Displays the time an issue was added to inbox */\n  showDateAdded?: boolean;\n};\n\nconst EVENT_ROUND_LIMIT = 1000;\n\nfunction InboxReason({inbox, fontSize = 'sm', showDateAdded}: Props) {\n  const {reason, reason_details: reasonDetails, date_added: dateAdded} = inbox;\n  const relativeDateAdded = getDynamicText({\n    value: dateAdded && getRelativeDate(dateAdded, 'ago', true),\n    fixed: '3s ago',\n  });\n\n  const getCountText = (count: number) =>\n    count > EVENT_ROUND_LIMIT\n      ? `More than ${Math.round(count / EVENT_ROUND_LIMIT)}k`\n      : `${count}`;\n\n  function getTooltipDescription() {\n    const {\n      until,\n      count,\n      window,\n      user_count: userCount,\n      user_window: userWindow,\n    } = reasonDetails;\n    if (until) {\n      // Was ignored until `until` has passed.\n      // `until` format: \"2021-01-20T03:59:03+00:00\"\n      return tct('Was ignored until [window]', {\n        window: <DateTime date={until} dateOnly />,\n      });\n    }\n\n    if (count) {\n      // Was ignored until `count` events occurred\n      // If `window` is defined, than `count` events occurred in `window` minutes.\n      // else `count` events occurred since it was ignored.\n      if (window) {\n        return tct('Occurred [count] time(s) in [duration]', {\n          count: getCountText(count),\n          duration: getDuration(window * 60, 0, true),\n        });\n      }\n\n      return tct('Occurred [count] time(s)', {\n        count: getCountText(count),\n      });\n    }\n\n    if (userCount) {\n      // Was ignored until `user_count` users were affected\n      // If `user_window` is defined, than `user_count` users affected in `user_window` minutes.\n      // else `user_count` events occurred since it was ignored.\n      if (userWindow) {\n        return tct('Affected [count] user(s) in [duration]', {\n          count: getCountText(userCount),\n          duration: getDuration(userWindow * 60, 0, true),\n        });\n      }\n      return tct('Affected [count] user(s)', {\n        count: getCountText(userCount),\n      });\n    }\n\n    return undefined;\n  }\n\n  function getReasonDetails(): {\n    reasonBadgeText: string;\n    tagType: React.ComponentProps<typeof Tag>['type'];\n    tooltipDescription?: string | React.ReactNode;\n    tooltipText?: string;\n  } {\n    switch (reason) {\n      case GroupInboxReason.UNIGNORED:\n        return {\n          tagType: 'default',\n          reasonBadgeText: t('Unignored'),\n          tooltipText:\n            dateAdded &&\n            t('Unignored %(relative)s', {\n              relative: relativeDateAdded,\n            }),\n          tooltipDescription: getTooltipDescription(),\n        };\n      case GroupInboxReason.REGRESSION:\n        return {\n          tagType: 'error',\n          reasonBadgeText: t('Regression'),\n          tooltipText:\n            dateAdded &&\n            t('Regressed %(relative)s', {\n              relative: relativeDateAdded,\n            }),\n          // TODO: Add tooltip description for regression move when resolver is added to reason\n          // Resolved by {full_name} {time} ago.\n        };\n      // TODO: Manual moves will go away, remove this then\n      case GroupInboxReason.MANUAL:\n        return {\n          tagType: 'highlight',\n          reasonBadgeText: t('Manual'),\n          tooltipText:\n            dateAdded && t('Moved %(relative)s', {relative: relativeDateAdded}),\n          // TODO: IF manual moves stay then add tooltip description for manual move\n          // Moved to inbox by {full_name}.\n        };\n      case GroupInboxReason.REPROCESSED:\n        return {\n          tagType: 'info',\n          reasonBadgeText: t('Reprocessed'),\n          tooltipText:\n            dateAdded &&\n            t('Reprocessed %(relative)s', {\n              relative: relativeDateAdded,\n            }),\n        };\n      case GroupInboxReason.NEW:\n      default:\n        return {\n          tagType: 'warning',\n          reasonBadgeText: t('New Issue'),\n          tooltipText:\n            dateAdded &&\n            t('Created %(relative)s', {\n              relative: relativeDateAdded,\n            }),\n        };\n    }\n  }\n\n  const {tooltipText, tooltipDescription, reasonBadgeText, tagType} = getReasonDetails();\n\n  const tooltip = (tooltipText || tooltipDescription) && (\n    <TooltipWrapper>\n      {tooltipText && <div>{tooltipText}</div>}\n      {tooltipDescription && (\n        <TooltipDescription>{tooltipDescription}</TooltipDescription>\n      )}\n      <TooltipDescription>Mark Reviewed to remove this label</TooltipDescription>\n    </TooltipWrapper>\n  );\n\n  return (\n    <StyledTag type={tagType} tooltipText={tooltip} fontSize={fontSize}>\n      {reasonBadgeText}\n      {showDateAdded && dateAdded && (\n        <Fragment>\n          <Separator type={tagType ?? 'default'}>{' | '}</Separator>\n          <TimeSince date={dateAdded} suffix=\"\" extraShort disabledAbsoluteTooltip />\n        </Fragment>\n      )}\n    </StyledTag>\n  );\n}\n\nexport default InboxReason;\n\nconst TooltipWrapper = styled('div')`\n  text-align: left;\n`;\n\nconst TooltipDescription = styled('div')`\n  color: ${p => p.theme.subText};\n`;\n\nconst Separator = styled('span')<{type: keyof Theme['tag']}>`\n  color: ${p => p.theme.tag[p.type].border};\n  opacity: 80%;\n`;\n\nconst StyledTag = styled(Tag, {\n  shouldForwardProp: p => p !== 'fontSize',\n})<{fontSize: 'sm' | 'md'}>`\n  font-size: ${p =>\n    p.fontSize === 'sm' ? p.theme.fontSizeSmall : p.theme.fontSizeMedium};\n`;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFatal} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nconst UnhandledTag = () => (\n  <Tooltip skipWrapper title={t('An unhandled error was detected in this Issue.')}>\n    <UnhandledTagWrapper>\n      <StyledIconFatal size=\"xs\" color=\"red300\" />\n      {t('Unhandled')}\n    </UnhandledTagWrapper>\n  </Tooltip>\n);\n\nexport default UnhandledTag;\n\nconst UnhandledTagWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  color: ${p => p.theme.red300};\n`;\n\nconst StyledIconFatal = styled(IconFatal)`\n  margin-top: -2px;\n  margin-right: 3px;\n`;\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import {Component, lazy, Suspense} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Params<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  hookName: H;\n  /**\n   * Component that will be shown if no hook is available\n   */\n  defaultComponent?: ReturnType<Hooks[H]>;\n  /**\n   * This is a function that returns a promise (more specifically a function\n   * that returns the result of a dynamic import using `import()`. This will\n   * use React.Suspense and React.lazy to render the component.\n   */\n  defaultComponentPromise?: () => Promise<ReturnType<Hooks[H]>>;\n};\n\n/**\n * Use this instead of the usual ternery operator when using getsentry hooks.\n * So in lieu of:\n *\n *  HookStore.get('component:org-auth-view').length\n *   ? HookStore.get('component:org-auth-view')[0]()\n *   : OrganizationAuth\n *\n * do this instead:\n *\n *   const HookedOrganizationAuth = HookOrDefault({\n *     hookName:'component:org-auth-view',\n *     defaultComponent: OrganizationAuth,\n *   })\n *\n * Note, you will need to add the hookstore function in getsentry [0] first and\n * then register the types [2] and validHookName [1] in sentry.\n *\n * [0] /getsentry/static/getsentry/gsApp/registerHooks.jsx\n * [1] /sentry/app/stores/hookStore.tsx\n * [2] /sentry/app/types/hooks.ts\n */\nfunction HookOrDefault<H extends HookName>({\n  hookName,\n  defaultComponent,\n  defaultComponentPromise,\n}: Params<H>) {\n  type Props = React.ComponentProps<ReturnType<Hooks[H]>>;\n  type State = {hooks: Hooks[H][]};\n\n  class HookOrDefaultComponent extends Component<Props, State> {\n    static displayName = `HookOrDefaultComponent(${hookName})`;\n\n    state: State = {\n      hooks: HookStore.get(hookName),\n    };\n\n    componentWillUnmount() {\n      this.unlistener?.();\n    }\n\n    unlistener = HookStore.listen(\n      (name: string, hooks: Hooks[HookName][]) =>\n        name === hookName && this.setState({hooks}),\n      undefined\n    );\n\n    get defaultComponent() {\n      // If `defaultComponentPromise` is passed, then return a Suspended component\n      if (defaultComponentPromise) {\n        const DefaultComponent = lazy(defaultComponentPromise);\n\n        return (props: Props) => (\n          <Suspense fallback={null}>\n            <DefaultComponent {...props} />\n          </Suspense>\n        );\n      }\n\n      return defaultComponent;\n    }\n\n    render() {\n      const hookExists = this.state.hooks && this.state.hooks.length;\n      const componentFromHook = this.state.hooks[0]?.();\n      const HookComponent =\n        hookExists && componentFromHook ? componentFromHook : this.defaultComponent;\n\n      return HookComponent ? <HookComponent {...this.props} /> : null;\n    }\n  }\n\n  return HookOrDefaultComponent;\n}\n\nexport default HookOrDefault;\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport space from 'sentry/styles/space';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  avatarSize?: UserAvatar['props']['size'];\n  className?: string;\n  displayEmail?: string;\n  displayName?: React.ReactNode;\n  hideEmail?: boolean;\n  user?: AvatarUser;\n};\n\nconst UserBadge = ({\n  avatarSize = 24,\n  hideEmail = false,\n  displayName,\n  displayEmail,\n  user,\n  className,\n}: Props) => {\n  const title =\n    displayName ||\n    (user &&\n      (user.name ||\n        user.email ||\n        user.username ||\n        user.ipAddress ||\n        // Because this can be used to render EventUser models, or User *interface*\n        // objects from serialized Event models. we try both ipAddress and ip_address.\n        user.ip_address ||\n        user.id));\n\n  return (\n    <StyledUserBadge className={className}>\n      <StyledAvatar user={user} size={avatarSize} />\n      <StyledNameAndEmail>\n        <StyledName hideEmail={!!hideEmail}>{title}</StyledName>\n        {!hideEmail && <StyledEmail>{displayEmail || (user && user.email)}</StyledEmail>}\n      </StyledNameAndEmail>\n    </StyledUserBadge>\n  );\n};\n\nconst StyledUserBadge = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledNameAndEmail = styled('div')`\n  flex-shrink: 1;\n  min-width: 0;\n  line-height: normal;\n`;\n\nconst StyledEmail = styled('div')`\n  font-size: 0.875em;\n  margin-top: ${space(0.25)};\n  color: ${p => p.theme.gray300};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nexport const StyledName = styled('span')<{hideEmail: boolean}>`\n  font-weight: ${p => (p.hideEmail ? 'inherit' : 'bold')};\n  line-height: 1.15em;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  min-width: ${space(3)};\n  min-height: ${space(3)};\n  margin-right: ${space(1)};\n`;\n\nexport default UserBadge;\n","import styled from '@emotion/styled';\nimport {AnimatePresence} from 'framer-motion';\n\nimport {removeIndicator} from 'sentry/actionCreators/indicator';\nimport ToastIndicator from 'sentry/components/alerts/toastIndicator';\nimport IndicatorStore from 'sentry/stores/indicatorStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\n\nconst Toasts = styled('div')`\n  position: fixed;\n  right: 30px;\n  bottom: 30px;\n  z-index: ${p => p.theme.zIndex.toast};\n`;\n\ntype Props = {\n  className?: string;\n};\n\nfunction Indicators(props: Props) {\n  const items = useLegacyStore(IndicatorStore);\n\n  return (\n    <Toasts {...props}>\n      <AnimatePresence>\n        {items.map((indicator, i) => (\n          // We purposefully use `i` as key here because of transitions\n          // Toasts can now queue up, so when we change from [firstToast] -> [secondToast],\n          // we don't want to  animate `firstToast` out and `secondToast` in, rather we want\n          // to replace `firstToast` with `secondToast`\n          <ToastIndicator onDismiss={removeIndicator} indicator={indicator} key={i} />\n        ))}\n      </AnimatePresence>\n    </Toasts>\n  );\n}\n\nexport default Indicators;\n","import {Component, ErrorInfo, lazy, Suspense, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {isWebpackChunkLoadingError} from 'sentry/utils';\nimport retryableImport from 'sentry/utils/retryableImport';\n\ntype PromisedImport<C> = Promise<{default: C}>;\n\ntype ComponentType = React.ComponentType<any>;\n\ntype Props<C extends ComponentType> = Omit<React.ComponentProps<C>, 'route'> & {\n  /**\n   * Accepts a function to trigger the import resolution of the component.\n   */\n  component: () => PromisedImport<C>;\n};\n\n/**\n * LazyLoad is used to dynamically load codesplit components via a `import`\n * call. This is primarily used in our routing tree.\n *\n * <LazyLoad component={() => import('./myComponent')} someComponentProps={...} />\n */\nfunction LazyLoad<C extends ComponentType>({component, ...props}: Props<C>) {\n  const LazyComponent = useMemo(\n    () => lazy(() => retryableImport(component)),\n    [component]\n  );\n\n  return (\n    <ErrorBoundary>\n      <Suspense\n        fallback={\n          <LoadingContainer>\n            <LoadingIndicator />\n          </LoadingContainer>\n        }\n      >\n        <LazyComponent {...(props as React.ComponentProps<C>)} />\n      </Suspense>\n    </ErrorBoundary>\n  );\n}\n\ninterface ErrorBoundaryState {\n  error: Error | null;\n  hasError: boolean;\n}\n\n// Error boundaries currently have to be classes.\nclass ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n  static getDerivedStateFromError(error: Error) {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  state = {hasError: false, error: null};\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    Sentry.withScope(scope => {\n      if (isWebpackChunkLoadingError(error)) {\n        scope.setFingerprint(['webpack', 'error loading chunk']);\n      }\n      scope.setExtra('errorInfo', errorInfo);\n      Sentry.captureException(error);\n    });\n\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n\n  // Reset `hasError` so that we attempt to render `this.props.children` again\n  handleRetry = () => this.setState({hasError: false});\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <LoadingErrorContainer>\n          <LoadingError\n            onRetry={this.handleRetry}\n            message={t('There was an error loading a component.')}\n          />\n        </LoadingErrorContainer>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst LoadingContainer = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst LoadingErrorContainer = styled('div')`\n  flex: 1;\n`;\n\nexport default LazyLoad;\n","import {isWebpackChunkLoadingError} from 'sentry/utils';\n\nconst MAX_RETRIES = 2;\n\nexport default function retryableImport<T>(\n  fn: () => Promise<{default: T}>\n): Promise<{default: T}> {\n  let retries = 0;\n  const tryLoad = async () => {\n    try {\n      return await fn();\n    } catch (err) {\n      if (isWebpackChunkLoadingError(err) && retries < MAX_RETRIES) {\n        retries++;\n        return tryLoad();\n      }\n\n      throw err;\n    }\n  };\n\n  return tryLoad();\n}\n","import {forwardRef} from 'react';\n\nimport Anchor from './anchor';\n\nexport interface ExternalLinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'target'> {\n  disabled?: boolean;\n  openInNewTab?: boolean;\n}\n\nconst ExternalLink = forwardRef<HTMLAnchorElement, ExternalLinkProps>(\n  ({openInNewTab = true, ...props}, ref) => {\n    const anchorProps = openInNewTab\n      ? {target: '_blank', rel: 'noreferrer noopener'}\n      : {href: props.href};\n\n    return <Anchor ref={ref} {...anchorProps} {...props} />;\n  }\n);\n\nexport default ExternalLink;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\n/* TODO: replace with I/O when finished */\nimport img from 'sentry-images/spot/hair-on-fire.svg';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport PageHeading from 'sentry/components/pageHeading';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n  superuserNeedsToBeProjectMember?: boolean;\n};\n\nfunction NoProjectMessage({\n  children,\n  organization,\n  superuserNeedsToBeProjectMember,\n}: Props) {\n  const {projects, initiallyLoaded: projectsLoaded} = useProjects();\n\n  const orgSlug = organization.slug;\n  const canCreateProject = organization.access.includes('project:write');\n  const canJoinTeam = organization.access.includes('team:read');\n\n  const {isSuperuser} = ConfigStore.get('user');\n\n  const orgHasProjects = !!projects?.length;\n  const hasProjectAccess =\n    isSuperuser && !superuserNeedsToBeProjectMember\n      ? !!projects?.some(p => p.hasAccess)\n      : !!projects?.some(p => p.isMember && p.hasAccess);\n\n  if (hasProjectAccess || !projectsLoaded) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  // If the organization has some projects, but the user doesn't have access to\n  // those projects, the primary action is to Join a Team. Otherwise the primary\n  // action is to create a project.\n\n  const joinTeamAction = (\n    <Button\n      title={canJoinTeam ? undefined : t('You do not have permission to join a team.')}\n      disabled={!canJoinTeam}\n      priority={orgHasProjects ? 'primary' : 'default'}\n      to={`/settings/${orgSlug}/teams/`}\n    >\n      {t('Join a Team')}\n    </Button>\n  );\n\n  const createProjectAction = (\n    <Button\n      title={\n        canCreateProject\n          ? undefined\n          : t('You do not have permission to create a project.')\n      }\n      disabled={!canCreateProject}\n      priority={orgHasProjects ? 'default' : 'primary'}\n      to={`/organizations/${orgSlug}/projects/new/`}\n    >\n      {t('Create project')}\n    </Button>\n  );\n\n  return (\n    <Wrapper>\n      <HeightWrapper>\n        <img src={img} height={350} alt={t('Nothing to see')} />\n        <Content>\n          <StyledPageHeading>{t('Remain Calm')}</StyledPageHeading>\n          <HelpMessage>{t('You need at least one project to use this view')}</HelpMessage>\n          <Actions gap={1}>\n            {!orgHasProjects ? (\n              createProjectAction\n            ) : (\n              <Fragment>\n                {joinTeamAction}\n                {createProjectAction}\n              </Fragment>\n            )}\n          </Actions>\n        </Content>\n      </HeightWrapper>\n    </Wrapper>\n  );\n}\n\nconst StyledPageHeading = styled(PageHeading)`\n  font-size: 28px;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst HelpMessage = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HeightWrapper = styled('div')`\n  display: flex;\n  height: 350px;\n`;\n\nconst Content = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 40px;\n`;\n\nconst Actions = styled(ButtonBar)`\n  width: fit-content;\n`;\n\nexport default NoProjectMessage;\n","import {Fragment, useEffect, useRef, useState} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy';\n\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {MenuFooterChildProps} from 'sentry/components/dropdownAutoComplete/menu';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport {MenuActions} from 'sentry/components/dropdownMenu';\nimport Highlight from 'sentry/components/highlight';\nimport HeaderItem from 'sentry/components/organizations/headerItem';\nimport MultipleSelectorSubmitRow from 'sentry/components/organizations/multipleSelectorSubmitRow';\nimport PageFilterRow from 'sentry/components/organizations/pageFilterRow';\nimport PageFilterPinButton from 'sentry/components/organizations/pageFilters/pageFilterPinButton';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {IconWindow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport theme from 'sentry/utils/theme';\n\ntype Props = WithRouterProps & {\n  loadingProjects: boolean;\n  /**\n   * When menu is closed\n   */\n  onUpdate: (environments: string[]) => void;\n  organization: Organization;\n  projects: Project[];\n  selectedProjects: number[];\n  /**\n   * This component must be controlled using a value array\n   */\n  value: string[];\n  /**\n   * Aligns dropdown menu to left or right of button\n   */\n  alignDropdown?: 'left' | 'right';\n  customDropdownButton?: (config: {\n    actions: MenuActions;\n    isOpen: boolean;\n    value: string[];\n  }) => React.ReactElement;\n  customLoadingIndicator?: React.ReactNode;\n  detached?: boolean;\n  forceEnvironment?: string;\n  /**\n   * Show the pin button in the dropdown's header actions\n   */\n  showPin?: boolean;\n};\n\n/**\n * Environment Selector\n *\n * Note we only fetch environments when this component is mounted\n */\nfunction EnvironmentSelector({\n  loadingProjects,\n  onUpdate,\n  organization,\n  projects,\n  selectedProjects,\n  value,\n  alignDropdown,\n  customDropdownButton,\n  customLoadingIndicator,\n  detached,\n  forceEnvironment,\n  router,\n  showPin,\n}: Props) {\n  const [selectedEnvs, setSelectedEnvs] = useState(value);\n  const hasChanges = !isEqual(selectedEnvs, value);\n\n  // Update selected envs value on change\n  useEffect(() => {\n    setSelectedEnvs(value);\n    lastSelectedEnvs.current = selectedEnvs;\n  }, [value]);\n\n  // We keep a separate list of selected environments to use for sorting. This\n  // allows us to only update it after the list is closed, to avoid the list\n  // jumping around while selecting projects.\n  const lastSelectedEnvs = useRef(value);\n\n  // Ref to help avoid updating stale selected values\n  const didQuickSelect = useRef(false);\n\n  /**\n   * Toggle selected state of an environment\n   */\n  const toggleCheckbox = (environment: string) => {\n    const willRemove = selectedEnvs.includes(environment);\n\n    const updatedSelectedEnvs = willRemove\n      ? selectedEnvs.filter(env => env !== environment)\n      : [...selectedEnvs, environment];\n\n    analytics('environmentselector.toggle', {\n      action: willRemove ? 'removed' : 'added',\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    setSelectedEnvs(updatedSelectedEnvs);\n  };\n\n  const handleSave = (actions: MenuFooterChildProps['actions']) => {\n    actions.close();\n    onUpdate(selectedEnvs);\n  };\n\n  const handleMenuClose = () => {\n    // Only update if there are changes\n    if (!hasChanges || didQuickSelect.current) {\n      didQuickSelect.current = false;\n      return;\n    }\n\n    analytics('environmentselector.update', {\n      count: selectedEnvs.length,\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    onUpdate(selectedEnvs);\n  };\n\n  /**\n   * Clears all selected environments and updates\n   */\n  const handleClear = () => {\n    analytics('environmentselector.clear', {\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    setSelectedEnvs([]);\n    onUpdate([]);\n  };\n\n  const handleQuickSelect = (item: Item) => {\n    analytics('environmentselector.direct_selection', {\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    const selectedEnvironments = [item.value];\n\n    setSelectedEnvs(selectedEnvironments);\n    onUpdate(selectedEnvironments);\n\n    // Track that we just did a click select so we don't trigger an update in\n    // the close handler.\n    didQuickSelect.current = true;\n  };\n\n  const config = ConfigStore.getConfig();\n\n  const unsortedEnvironments = projects.flatMap(project => {\n    const projectId = parseInt(project.id, 10);\n    // Include environments from:\n    // - all projects if the user is a superuser\n    // - the requested projects\n    // - all member projects if 'my projects' (empty list) is selected.\n    // - all projects if -1 is the only selected project.\n    if (\n      (selectedProjects.length === 1 &&\n        selectedProjects[0] === ALL_ACCESS_PROJECTS &&\n        project.hasAccess) ||\n      (selectedProjects.length === 0 && (project.isMember || config.user.isSuperuser)) ||\n      selectedProjects.includes(projectId)\n    ) {\n      return project.environments;\n    }\n\n    return [];\n  });\n\n  const uniqueEnvironments = Array.from(new Set(unsortedEnvironments));\n\n  // Sort with the last selected environments at the top\n  const environments = sortBy(uniqueEnvironments, env => [\n    !lastSelectedEnvs.current.find(e => e === env),\n    env,\n  ]);\n\n  const validatedValue = value.filter(env => environments.includes(env));\n  const summary = validatedValue.length\n    ? `${validatedValue.join(', ')}`\n    : t('All Environments');\n\n  if (forceEnvironment !== undefined) {\n    return (\n      <StyledHeaderItem\n        data-test-id=\"page-filter-environment-selector\"\n        icon={<IconWindow />}\n        isOpen={false}\n        locked\n      >\n        {forceEnvironment ? forceEnvironment : t('All Environments')}\n      </StyledHeaderItem>\n    );\n  }\n\n  if (loadingProjects && customLoadingIndicator) {\n    return <Fragment>{customLoadingIndicator}</Fragment>;\n  }\n\n  if (loadingProjects) {\n    return (\n      <StyledHeaderItem\n        data-test-id=\"page-filter-environment-selector\"\n        icon={<IconWindow />}\n        loading={loadingProjects}\n        hasChanges={false}\n        hasSelected={false}\n        isOpen={false}\n        locked={false}\n      >\n        {t('Loading\\u2026')}\n      </StyledHeaderItem>\n    );\n  }\n\n  return (\n    <ClassNames>\n      {({css}) => (\n        <StyledDropdownAutoComplete\n          alignMenu={alignDropdown}\n          allowActorToggle\n          closeOnSelect\n          blendCorner={false}\n          detached={detached}\n          searchPlaceholder={t('Filter environments')}\n          onSelect={handleQuickSelect}\n          onClose={handleMenuClose}\n          maxHeight={500}\n          rootClassName={css`\n            position: relative;\n            display: flex;\n          `}\n          inputProps={{style: {padding: 8, paddingLeft: 14}}}\n          emptyMessage={t('You have no environments')}\n          noResultsMessage={t('No environments found')}\n          virtualizedHeight={theme.headerSelectorRowHeight}\n          emptyHidesInput\n          inputActions={\n            showPin ? <StyledPinButton size=\"xsmall\" filter=\"environments\" /> : undefined\n          }\n          menuFooter={({actions}) =>\n            hasChanges ? (\n              <MultipleSelectorSubmitRow onSubmit={() => handleSave(actions)} />\n            ) : null\n          }\n          items={environments.map(env => ({\n            value: env,\n            searchKey: env,\n            label: ({inputValue}) => (\n              <PageFilterRow\n                data-test-id={`environment-${env}`}\n                checked={selectedEnvs.includes(env)}\n                onCheckClick={e => {\n                  e.stopPropagation();\n                  toggleCheckbox(env);\n                }}\n              >\n                <Highlight text={inputValue}>{env}</Highlight>\n              </PageFilterRow>\n            ),\n          }))}\n        >\n          {({isOpen, actions}) =>\n            customDropdownButton ? (\n              customDropdownButton({isOpen, actions, value: validatedValue})\n            ) : (\n              <StyledHeaderItem\n                data-test-id=\"page-filter-environment-selector\"\n                icon={<IconWindow />}\n                isOpen={isOpen}\n                hasSelected={value && !!value.length}\n                onClear={handleClear}\n                hasChanges={false}\n                locked={false}\n                loading={false}\n              >\n                {summary}\n              </StyledHeaderItem>\n            )\n          }\n        </StyledDropdownAutoComplete>\n      )}\n    </ClassNames>\n  );\n}\n\nexport default withRouter(EnvironmentSelector);\n\nconst StyledHeaderItem = styled(HeaderItem)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst StyledDropdownAutoComplete = styled(DropdownAutoComplete)`\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  position: absolute;\n  top: 100%;\n\n  ${p =>\n    !p.detached &&\n    `\n    margin-top: 0;\n    border-radius: ${p.theme.borderRadiusBottom};\n  `};\n`;\n\nconst StyledPinButton = styled(PageFilterPinButton)`\n  margin: 0 ${space(1)};\n`;\n","import {forwardRef} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconChevron, IconClose, IconInfo, IconLock, IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype DefaultProps = {\n  allowClear: boolean;\n};\n\ntype Props = {\n  icon: React.ReactNode;\n  forwardedRef?: React.Ref<HTMLDivElement>;\n  hasChanges?: boolean;\n  hasSelected?: boolean;\n  hint?: string;\n  isOpen?: boolean;\n  loading?: boolean;\n  locked?: boolean;\n  lockedMessage?: React.ReactNode;\n  onClear?: () => void;\n  settingsLink?: string;\n} & Partial<DefaultProps> &\n  React.HTMLAttributes<HTMLDivElement>;\n\nfunction HeaderItem({\n  children,\n  isOpen,\n  hasSelected,\n  icon,\n  locked,\n  lockedMessage,\n  settingsLink,\n  hint,\n  loading,\n  forwardedRef,\n  onClear,\n  allowClear = true,\n  ...props\n}: Props) {\n  const handleClear = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onClear?.();\n  };\n\n  const textColorProps = {\n    locked,\n    isOpen,\n    hasSelected,\n  };\n\n  return (\n    <StyledHeaderItem\n      ref={forwardedRef}\n      loading={!!loading}\n      {...omit(props, 'onClear')}\n      {...textColorProps}\n    >\n      <IconContainer {...textColorProps}>{icon}</IconContainer>\n      <Content>\n        <StyledContent>{children}</StyledContent>\n\n        {settingsLink && (\n          <SettingsIconLink to={settingsLink}>\n            <IconSettings />\n          </SettingsIconLink>\n        )}\n      </Content>\n      {hint && (\n        <Hint>\n          <Tooltip title={hint} position=\"bottom\">\n            <IconInfo size=\"sm\" />\n          </Tooltip>\n        </Hint>\n      )}\n      {hasSelected && !locked && allowClear && (\n        <StyledClose {...textColorProps} onClick={handleClear} />\n      )}\n      {!locked && !loading && (\n        <ChevronWrapper>\n          <StyledChevron isOpen={!!isOpen} direction={isOpen ? 'up' : 'down'} size=\"sm\" />\n        </ChevronWrapper>\n      )}\n      {locked && (\n        <Tooltip title={lockedMessage || t('This selection is locked')} position=\"bottom\">\n          <StyledLock color=\"gray300\" isSolid />\n        </Tooltip>\n      )}\n    </StyledHeaderItem>\n  );\n}\n\n// Infer props here because of styled/theme\nconst getColor = (p: ColorProps & {theme: Theme}) => {\n  if (p.locked) {\n    return p.theme.gray300;\n  }\n  return p.isOpen || p.hasSelected ? p.theme.textColor : p.theme.gray300;\n};\n\ntype ColorProps = {\n  hasSelected?: boolean;\n  isOpen?: boolean;\n  locked?: boolean;\n};\n\nconst StyledHeaderItem = styled('div', {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'loading',\n})<\n  ColorProps & {\n    loading: boolean;\n  }\n>`\n  display: flex;\n  padding: 0 ${space(4)};\n  align-items: center;\n  cursor: ${p => (p.loading ? 'progress' : p.locked ? 'text' : 'pointer')};\n  color: ${getColor};\n  transition: 0.1s color;\n  user-select: none;\n`;\n\nconst Content = styled('div')`\n  display: flex;\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  margin-right: ${space(1.5)};\n`;\n\nconst StyledContent = styled('div')`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst IconContainer = styled('span', {shouldForwardProp: isPropValid})<ColorProps>`\n  color: ${getColor};\n  margin-right: ${space(1.5)};\n  display: flex;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst Hint = styled('div')`\n  position: relative;\n  top: ${space(0.25)};\n  margin-right: ${space(1)};\n`;\n\nconst StyledClose = styled(IconClose, {shouldForwardProp: isPropValid})<ColorProps>`\n  color: ${getColor};\n  height: ${space(1.5)};\n  width: ${space(1.5)};\n  stroke-width: 1.5;\n  padding: ${space(1)};\n  box-sizing: content-box;\n  margin: -${space(1)} 0px -${space(1)} -${space(1)};\n`;\n\nconst ChevronWrapper = styled('div')`\n  width: ${space(2)};\n  height: ${space(2)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledChevron = styled(IconChevron, {shouldForwardProp: isPropValid})<{\n  isOpen: boolean;\n}>`\n  color: ${getColor};\n`;\n\nexport const SettingsIconLink = styled(Link)`\n  color: ${p => p.theme.gray300};\n  align-items: center;\n  display: inline-flex;\n  justify-content: space-between;\n  margin-right: ${space(1.5)};\n  margin-left: ${space(1.0)};\n  transition: 0.5s opacity ease-out;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst StyledLock = styled(IconLock)`\n  margin-top: ${space(0.75)};\n  stroke-width: 1.5;\n`;\n\nexport default forwardRef<HTMLDivElement, Props>((props, ref) => (\n  <HeaderItem forwardedRef={ref} {...props} />\n));\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {growIn} from 'sentry/styles/animations';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  onSubmit: () => void;\n  disabled?: boolean;\n};\n\nconst MultipleSelectorSubmitRow = ({onSubmit, disabled = false}: Props) => (\n  <SubmitButtonContainer>\n    <SubmitButton disabled={disabled} onClick={onSubmit} size=\"xsmall\" priority=\"primary\">\n      {t('Apply')}\n    </SubmitButton>\n  </SubmitButtonContainer>\n);\n\nconst SubmitButtonContainer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst SubmitButton = styled(Button)`\n  animation: 0.1s ${growIn} ease-in;\n  margin: ${space(0.5)} 0;\n`;\n\nexport default MultipleSelectorSubmitRow;\n","import styled from '@emotion/styled';\n\nconst PageFilterBar = styled('div')<{condensed?: boolean}>`\n  display: flex;\n  position: relative;\n  border-radius: ${p => p.theme.borderRadius};\n  height: ${p => p.theme.form.default.height}px;\n  ${p =>\n    p.condensed &&\n    `\n    max-width: 100%;\n    width: max-content;\n  `}\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    pointer-events: none;\n    box-shadow: inset 0 0 0 1px ${p => p.theme.border};\n    border-radius: ${p => p.theme.borderRadius};\n  }\n\n  & [role='button'] {\n    z-index: 0;\n  }\n\n  & button[aria-haspopup='listbox'] {\n    height: 100%;\n    min-height: auto;\n    border-color: transparent !important;\n    box-shadow: none;\n    z-index: 0;\n  }\n\n  & > * {\n    min-width: 6rem;\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: max-content;\n  }\n\n  & > *:not(:first-child)::after {\n    content: '';\n    position: absolute;\n    height: 60%;\n    width: 1px;\n    background-color: ${p => p.theme.innerBorder};\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  & > *:hover::after,\n  & > *[data-is-open='true']::after,\n  & > *:hover + *:not(:first-child)::after,\n  & > *[data-is-open='true'] + *:not(:first-child)::after {\n    display: none;\n  }\n`;\n\nexport default PageFilterBar;\n","import {useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport CheckboxFancy from 'sentry/components/checkboxFancy/checkboxFancy';\nimport space from 'sentry/styles/space';\nimport domId from 'sentry/utils/domId';\n\nconst defaultRenderCheckbox = ({checkbox}) => checkbox;\n\ntype CheckboxRenderOptions = {\n  checkbox: React.ReactNode;\n  checked?: boolean;\n};\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  checked: boolean;\n  children: React.ReactNode;\n  onCheckClick: (event: React.MouseEvent) => void;\n  multi?: boolean;\n  /**\n   * This is a render prop which may be used to augment the checkbox rendered\n   * to the right of the row. It will receive the default `checkbox` as a\n   * prop along with the `checked` boolean.\n   */\n  renderCheckbox?: (options: CheckboxRenderOptions) => React.ReactNode;\n}\n\nfunction PageFilterRow({\n  checked,\n  onCheckClick,\n  children,\n  multi = true,\n  renderCheckbox = defaultRenderCheckbox,\n  ...props\n}: Props) {\n  const rowId = useMemo(() => domId('page_filter_row'), []);\n\n  const checkbox = (\n    <MultiselectCheckbox\n      isDisabled={!multi}\n      isChecked={checked}\n      onClick={multi ? onCheckClick : undefined}\n      aria-labelledby={rowId}\n    />\n  );\n\n  return (\n    <Container aria-checked={checked} isChecked={checked} {...props}>\n      <Label id={rowId} multi={multi}>\n        {children}\n      </Label>\n      {renderCheckbox({checkbox, checked})}\n    </Container>\n  );\n}\n\nconst MultiselectCheckbox = styled(CheckboxFancy)`\n  position: relative;\n  margin: 0 ${space(1)};\n  margin-right: ${space(0.75)};\n\n  /* Make the hitbox of the checkbox a bit larger */\n  &:after {\n    content: '';\n    position: absolute;\n    top: -${space(2)};\n    right: -${space(1.5)};\n    bottom: -${space(2)};\n    left: -${space(2)};\n  }\n`;\n\nconst Container = styled('div')<{isChecked: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: 400;\n  padding-left: ${space(0.5)};\n\n  ${MultiselectCheckbox} {\n    opacity: ${p => (p.isChecked ? 1 : 0.33)};\n  }\n\n  &:hover ${MultiselectCheckbox} {\n    opacity: 1;\n  }\n`;\n\nconst Label = styled('div')<{multi: boolean}>`\n  display: flex;\n  flex-shrink: 1;\n  overflow: hidden;\n  align-items: center;\n  height: 100%;\n  flex-grow: 1;\n  user-select: none;\n  white-space: nowrap;\n\n  &:hover {\n    text-decoration: ${p => (p.multi ? 'underline' : null)};\n    color: ${p => (p.multi ? p.theme.blue300 : null)};\n  }\n`;\n\nexport default PageFilterRow;\n","import {Fragment, useState} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {revertToPinnedFilters} from 'sentry/actionCreators/pageFilters';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Props = {\n  router: InjectedRouter;\n};\n\nexport default function DesyncedFilterAlert({router}: Props) {\n  const {desyncedFilters} = usePageFilters();\n  const organization = useOrganization();\n  const [hideAlert, setHideAlert] = useState(false);\n\n  const onRevertClick = () => {\n    revertToPinnedFilters(organization.slug, router);\n  };\n\n  if (desyncedFilters.size === 0 || hideAlert) {\n    return null;\n  }\n\n  return (\n    <Alert\n      type=\"info\"\n      showIcon\n      system\n      trailingItems={\n        <Fragment>\n          <RevertButton priority=\"link\" size=\"zero\" onClick={onRevertClick} borderless>\n            {t('Revert')}\n          </RevertButton>\n          <Button\n            priority=\"link\"\n            size=\"zero\"\n            icon={<IconClose color=\"purple300\" />}\n            aria-label={t('Close Alert')}\n            onClick={() => setHideAlert(true)}\n          />\n        </Fragment>\n      }\n    >\n      {t(\n        \"You're viewing a shared link. Certain queries and filters have been automatically filled from URL parameters.\"\n      )}\n    </Alert>\n  );\n}\n\nconst RevertButton = styled(Button)`\n  display: flex;\n  font-weight: bold;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.purple300};\n\n  &:after {\n    content: '|';\n    margin-left: ${space(2)};\n    color: ${p => p.theme.purple200};\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport Link from 'sentry/components/links/link';\nimport space from 'sentry/styles/space';\n\nconst BackToIssues = styled(Link)`\n  display: flex;\n  width: ${space(1.5)};\n  height: ${space(1.5)};\n  align-items: center;\n  justify-content: center;\n\n  box-sizing: content-box;\n  padding: ${space(1)};\n  border-radius: 50%;\n\n  color: ${p => p.theme.textColor};\n  background: ${p => p.theme.backgroundSecondary};\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  z-index: 1;\n\n  &:hover {\n    background: ${p => p.theme.background};\n    transform: scale(1.125);\n  }\n`;\n\nexport default BackToIssues;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {AutoCompleteRoot} from 'sentry/components/dropdownAutoComplete/menu';\nimport {TimeRangeRoot} from 'sentry/components/organizations/timeRangeSelector/index';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  isSpacer?: boolean;\n};\n\nfunction getMediaQueryForSpacer(p: Props & {theme: Theme}) {\n  return p.isSpacer\n    ? css`\n        @media (max-width: ${p.theme.breakpoints.medium}) {\n          display: none;\n        }\n      `\n    : '';\n}\n\nconst HeaderItemPosition = styled('div')<Props>`\n  display: flex;\n  flex: 1;\n  min-width: 0;\n  height: 100%;\n\n  ${getMediaQueryForSpacer}\n\n  ${AutoCompleteRoot}, ${TimeRangeRoot} {\n    flex: 1;\n    min-width: 0;\n  }\n`;\n\nexport default HeaderItemPosition;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst HeaderSeparator = styled('div')`\n  width: 1px;\n  background-color: ${p => p.theme.border};\n  margin: ${space(2)} 0;\n`;\n\nexport default HeaderSeparator;\n","import {Component, Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {\n  updateDateTime,\n  updateEnvironments,\n  updateProjects,\n} from 'sentry/actionCreators/pageFilters';\nimport BackToIssues from 'sentry/components/organizations/backToIssues';\nimport EnvironmentSelector from 'sentry/components/organizations/environmentSelector';\nimport HeaderItemPosition from 'sentry/components/organizations/headerItemPosition';\nimport HeaderSeparator from 'sentry/components/organizations/headerSeparator';\nimport ProjectSelector from 'sentry/components/organizations/projectSelector';\nimport TimeRangeSelector, {\n  ChangeData,\n} from 'sentry/components/organizations/timeRangeSelector';\nimport Tooltip from 'sentry/components/tooltip';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {MinimalProject, Organization, PageFilters, Project} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport Projects from 'sentry/utils/projects';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nconst PROJECTS_PER_PAGE = 50;\n\nconst defaultProps = {\n  /**\n   * Display Environment selector?\n   */\n  showEnvironmentSelector: true,\n\n  /**\n   * Display date selector?\n   */\n  showDateSelector: true,\n\n  /**\n   * Reset these URL params when we fire actions\n   * (custom routing only)\n   */\n  resetParamsOnChange: [] as string[],\n\n  /**\n   * Remove ability to select multiple projects even if organization has feature 'global-views'\n   */\n  disableMultipleProjectSelection: false,\n};\n\ntype Props = {\n  /**\n   * Whether or not the projects are currently being loaded in\n   */\n  loadingProjects: boolean;\n\n  memberProjects: Project[];\n  nonMemberProjects: Project[];\n\n  organization: Organization;\n\n  /**\n   * List of projects to display in project selector (comes from HoC)\n   */\n  projects: Project[];\n\n  /**\n   * Currently selected values(s)\n   */\n  selection: PageFilters;\n\n  className?: string;\n\n  /**\n   * Custom default selection values (e.g. a different default period)\n   */\n  defaultSelection?: Partial<PageFilters>;\n\n  /**\n   * If a forced environment is passed, selection is disabled\n   */\n  forceEnvironment?: string;\n\n  /**\n   * If a forced project is passed, selection is disabled\n   */\n  forceProject?: MinimalProject | null;\n\n  /**\n   * Is global selection store still loading (i.e. not ready)\n   */\n  isGlobalSelectionReady?: boolean;\n\n  /**\n   * Subject that will be used in a tooltip that is shown on a lock icon hover\n   * E.g. This 'issue' is unique to a project\n   */\n  lockedMessageSubject?: string;\n\n  /**\n   * The maximum number of days in the past you can pick\n   */\n  maxPickableDays?: number;\n\n  onChangeProjects?: (val: number[]) => void;\n\n  onChangeTime?: (datetime: any) => void;\n\n  onUpdateEnvironments?: (environments: string[]) => void;\n  onUpdateProjects?: (selectedProjects: number[]) => void;\n  onUpdateTime?: (datetime: any) => void;\n  /**\n   * Message to display at the bottom of project list\n   */\n  projectsFooterMessage?: React.ReactNode;\n  /**\n   * Override default relative date options from DEFAULT_RELATIVE_PERIODS\n   */\n  relativeDateOptions?: Record<string, React.ReactNode>;\n  /**\n   * A project will be forced from parent component (selection is disabled, and if user\n   * does not have multi-project support enabled, it will not try to auto select a project).\n   *\n   * Project will be specified in the prop `forceProject` (since its data is async)\n   */\n  shouldForceProject?: boolean;\n\n  /// Props passed to child components ///\n  /**\n   * Show absolute date selectors\n   */\n  showAbsolute?: boolean;\n\n  /**\n   * If true, there will be a back to issues stream icon link\n   */\n  showIssueStreamLink?: boolean;\n\n  /**\n   * If true, there will be a project settings icon link\n   * (forceProject prop needs to be present to know the right project slug)\n   */\n  showProjectSettingsLink?: boolean;\n\n  /**\n   * Show relative date selectors\n   */\n  showRelative?: boolean;\n\n  /**\n   * Slugs of projects to display in project selector\n   */\n  specificProjectSlugs?: string[];\n\n  /**\n   * Small info icon with tooltip hint text\n   */\n  timeRangeHint?: string;\n} & Partial<typeof defaultProps> &\n  Omit<WithRouterProps, 'router'> & {\n    router: WithRouterProps['router'] | null;\n  };\n\ntype State = {\n  projects: number[] | null;\n  searchQuery: string;\n};\n\nclass GlobalSelectionHeader extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    projects: null,\n    searchQuery: '',\n  };\n\n  // Returns an options object for `update*` actions\n  getUpdateOptions = () => ({\n    save: true,\n    resetParams: this.props.resetParamsOnChange,\n  });\n\n  handleChangeTime = ({start, end, relative: period, utc}: ChangeData) => {\n    callIfFunction(this.props.onChangeTime, {start, end, period, utc});\n  };\n\n  handleUpdateTime = ({\n    relative: period,\n    start,\n    end,\n    utc,\n  }: {end?; relative?; start?; utc?} = {}) => {\n    const newValueObj = {\n      period,\n      start,\n      end,\n      utc,\n    };\n\n    updateDateTime(newValueObj, this.props.router, this.getUpdateOptions());\n    callIfFunction(this.props.onUpdateTime, newValueObj);\n  };\n\n  handleUpdateEnvironments = (environments: string[]) => {\n    updateEnvironments(environments, this.props.router, this.getUpdateOptions());\n    callIfFunction(this.props.onUpdateEnvironments, environments);\n  };\n\n  handleChangeProjects = (projects: State['projects']) => {\n    this.setState({projects});\n    callIfFunction(this.props.onChangeProjects, projects);\n  };\n\n  handleUpdateProjects = (projects: State['projects']) => {\n    // Clear environments when switching projects\n    updateProjects(projects || [], this.props.router, {\n      ...this.getUpdateOptions(),\n      environments: [],\n    });\n    this.setState({projects: null});\n    callIfFunction(this.props.onUpdateProjects, projects);\n  };\n\n  getBackButton = () => {\n    const {organization, location} = this.props;\n    return (\n      <BackButtonWrapper>\n        <Tooltip title={t('Back to Issues Stream')} position=\"bottom\">\n          <BackToIssues\n            data-test-id=\"back-to-issues\"\n            to={`/organizations/${organization.slug}/issues/${location.search}`}\n          >\n            <IconArrow direction=\"left\" size=\"sm\" />\n          </BackToIssues>\n        </Tooltip>\n      </BackButtonWrapper>\n    );\n  };\n\n  scrollFetchDispatcher = debounce(\n    (onSearch, options) => {\n      onSearch(this.state.searchQuery, options);\n    },\n    200,\n    {leading: true, trailing: false}\n  );\n\n  searchDispatcher = debounce((onSearch, searchQuery, options) => {\n    // in the case that a user repeats a search query (because search is\n    // debounced this is possible if the user types and then deletes what they\n    // typed) we should switch to an append strategy to not override all results\n    // with a new page.\n    if (this.state.searchQuery === searchQuery) {\n      options.append = true;\n    }\n    onSearch(searchQuery, options);\n    this.setState({\n      searchQuery,\n    });\n  }, 200);\n\n  render() {\n    const {\n      className,\n      shouldForceProject,\n      forceEnvironment,\n      forceProject,\n      isGlobalSelectionReady,\n      loadingProjects,\n      organization,\n      showAbsolute,\n      showRelative,\n      showDateSelector,\n      showEnvironmentSelector,\n      memberProjects,\n      nonMemberProjects,\n      showIssueStreamLink,\n      showProjectSettingsLink,\n      lockedMessageSubject,\n      timeRangeHint,\n      specificProjectSlugs,\n      disableMultipleProjectSelection,\n      projectsFooterMessage,\n      defaultSelection,\n      relativeDateOptions,\n      maxPickableDays,\n    } = this.props;\n\n    const {period, start, end, utc} = this.props.selection.datetime || {};\n    const defaultPeriod = defaultSelection?.datetime?.period || DEFAULT_STATS_PERIOD;\n\n    const selectedProjects = forceProject\n      ? [parseInt(forceProject.id, 10)]\n      : this.props.selection.projects;\n\n    return (\n      <Header className={className}>\n        <HeaderItemPosition>\n          {showIssueStreamLink && this.getBackButton()}\n          <Projects\n            orgId={organization.slug}\n            limit={PROJECTS_PER_PAGE}\n            slugs={specificProjectSlugs}\n          >\n            {({projects, hasMore, onSearch, fetching}) => {\n              const paginatedProjectSelectorCallbacks = {\n                onScroll: ({clientHeight, scrollHeight, scrollTop}) => {\n                  // check if no new projects are being fetched and the user has\n                  // scrolled far enough to fetch a new page of projects\n                  if (\n                    !fetching &&\n                    scrollTop + clientHeight >= scrollHeight - clientHeight &&\n                    hasMore\n                  ) {\n                    this.scrollFetchDispatcher(onSearch, {append: true});\n                  }\n                },\n                onFilterChange: event => {\n                  this.searchDispatcher(onSearch, event.target.value, {\n                    append: false,\n                  });\n                },\n                searching: fetching,\n                paginated: true,\n              };\n              return (\n                <ProjectSelector\n                  organization={organization}\n                  shouldForceProject={shouldForceProject}\n                  forceProject={forceProject}\n                  memberProjects={\n                    loadingProjects ? (projects as Project[]) : memberProjects\n                  }\n                  isGlobalSelectionReady={isGlobalSelectionReady}\n                  nonMemberProjects={nonMemberProjects}\n                  value={this.state.projects || this.props.selection.projects}\n                  onChange={this.handleChangeProjects}\n                  onApplyChange={this.handleUpdateProjects}\n                  disableMultipleProjectSelection={disableMultipleProjectSelection}\n                  {...(loadingProjects ? paginatedProjectSelectorCallbacks : {})}\n                  showIssueStreamLink={showIssueStreamLink}\n                  showProjectSettingsLink={showProjectSettingsLink}\n                  lockedMessageSubject={lockedMessageSubject}\n                  footerMessage={projectsFooterMessage}\n                />\n              );\n            }}\n          </Projects>\n        </HeaderItemPosition>\n\n        {showEnvironmentSelector && (\n          <Fragment>\n            <HeaderSeparator />\n            <HeaderItemPosition>\n              <EnvironmentSelector\n                organization={organization}\n                projects={this.props.projects}\n                loadingProjects={loadingProjects}\n                selectedProjects={selectedProjects}\n                forceEnvironment={forceEnvironment}\n                value={this.props.selection.environments}\n                onUpdate={this.handleUpdateEnvironments}\n              />\n            </HeaderItemPosition>\n          </Fragment>\n        )}\n\n        {showDateSelector && (\n          <Fragment>\n            <HeaderSeparator />\n            <HeaderItemPosition>\n              <TimeRangeSelector\n                key={`period:${period}-start:${start}-end:${end}-utc:${utc}-defaultPeriod:${defaultPeriod}`}\n                showAbsolute={showAbsolute}\n                showRelative={showRelative}\n                relative={period}\n                start={start}\n                end={end}\n                utc={utc}\n                onChange={this.handleChangeTime}\n                onUpdate={this.handleUpdateTime}\n                organization={organization}\n                defaultPeriod={defaultPeriod}\n                hint={timeRangeHint}\n                relativeOptions={relativeDateOptions}\n                maxPickableDays={maxPickableDays}\n              />\n            </HeaderItemPosition>\n          </Fragment>\n        )}\n\n        {!showEnvironmentSelector && <HeaderItemPosition isSpacer />}\n        {!showDateSelector && <HeaderItemPosition isSpacer />}\n      </Header>\n    );\n  }\n}\n\nexport default withPageFilters(GlobalSelectionHeader);\n\nconst BackButtonWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  position: relative;\n  left: ${space(2)};\n`;\n\nconst Header = styled('div')`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 60px;\n\n  border-bottom: 1px solid ${p => p.theme.border};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  z-index: ${p => p.theme.zIndex.globalSelectionHeader};\n\n  background: ${p => p.theme.headerBackground};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  @media (min-width: ${p => p.theme.breakpoints.small} and max-width: ${p =>\n      p.theme.breakpoints.medium}) {\n    margin-top: 54px;\n  }\n  @media (max-width: calc(${p => p.theme.breakpoints.small} - 1px)) {\n    margin-top: 0;\n  }\n`;\n","import {Fragment, useEffect, useRef} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport partition from 'lodash/partition';\n\nimport {\n  initializeUrlState,\n  updateDateTime,\n  updateEnvironments,\n  updateProjects,\n} from 'sentry/actionCreators/pageFilters';\nimport DesyncedFilterAlert from 'sentry/components/organizations/pageFilters/desyncedFiltersAlert';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {PageContent} from 'sentry/styles/organization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport GlobalSelectionHeader from './globalSelectionHeader';\nimport {getDatetimeFromState, getStateFromQuery} from './parse';\nimport {extractSelectionParameters} from './utils';\n\ntype GlobalSelectionHeaderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof GlobalSelectionHeader>,\n  | 'router'\n  | 'memberProjects'\n  | 'nonMemberProjects'\n  | 'selection'\n  | 'projects'\n  | 'loadingProjects'\n>;\n\ntype Props = WithRouterProps &\n  GlobalSelectionHeaderProps & {\n    /**\n     * Hide the global header\n     * Mainly used for pages which are using the new style page filters\n     */\n    hideGlobalHeader?: boolean;\n\n    /**\n     * When used with shouldForceProject it will not persist the project id\n     * to url query parameters on load. This is useful when global selection header\n     * is used for display purposes rather than selection.\n     */\n    skipInitializeUrlParams?: boolean;\n\n    /**\n     * Skip loading from local storage\n     * An example is Issue Details, in the case where it is accessed directly (e.g. from email).\n     * We do not want to load the user's last used env/project in this case, otherwise will\n     * lead to very confusing behavior.\n     */\n    skipLoadLastUsed?: boolean;\n  };\n\n/**\n * The page filters container handles initialization of page filters for the\n * wrapped content. Children will not be rendered until the filters are ready.\n */\nfunction Container({skipLoadLastUsed, children, ...props}: Props) {\n  const {\n    location,\n    router,\n    forceProject,\n    organization,\n    defaultSelection,\n    showAbsolute,\n    shouldForceProject,\n    specificProjectSlugs,\n    hideGlobalHeader,\n    skipInitializeUrlParams,\n  } = props;\n\n  const {isReady} = usePageFilters();\n\n  const {projects, initiallyLoaded: projectsLoaded} = useProjects();\n\n  const {isSuperuser} = ConfigStore.get('user');\n  const isOrgAdmin = organization.access.includes('org:admin');\n  const enforceSingleProject = !organization.features.includes('global-views');\n\n  const specifiedProjects = specificProjectSlugs\n    ? projects.filter(project => specificProjectSlugs.includes(project.slug))\n    : projects;\n\n  const [memberProjects, otherProjects] = partition(\n    specifiedProjects,\n    project => project.isMember\n  );\n\n  const nonMemberProjects = isSuperuser || isOrgAdmin ? otherProjects : [];\n\n  const additionalProps = {\n    loadingProjects: !projectsLoaded,\n    projects,\n    memberProjects,\n    nonMemberProjects,\n  };\n\n  const doInitialization = () =>\n    initializeUrlState({\n      organization,\n      queryParams: location.query,\n      router,\n      skipLoadLastUsed,\n      memberProjects,\n      defaultSelection,\n      forceProject,\n      shouldForceProject,\n      shouldEnforceSingleProject: enforceSingleProject,\n      showAbsolute,\n      skipInitializeUrlParams,\n    });\n\n  // Initializes GlobalSelectionHeader\n  //\n  // Calls an actionCreator to load project/environment from local storage when\n  // pinned, otherwise populate with defaults.\n  //\n  // This happens when we mount the container.\n  useEffect(() => {\n    // We can initialize before ProjectsStore is fully loaded if we don't need to\n    // enforce single project.\n    if (!projectsLoaded && (shouldForceProject || enforceSingleProject)) {\n      return;\n    }\n\n    doInitialization();\n  }, [projectsLoaded, shouldForceProject, enforceSingleProject]);\n\n  const lastQuery = useRef(location.query);\n\n  // This happens e.g. using browser's navigation button, in which case\n  // we need to update our store to reflect URL changes\n  useEffect(() => {\n    if (location.query === lastQuery.current) {\n      return;\n    }\n\n    // We may need to re-initialize the URL state if we completely clear\n    // out the global selection URL state, for example by navigating with\n    // the sidebar on the same view.\n    const oldSelectionQuery = extractSelectionParameters(lastQuery.current);\n    const newSelectionQuery = extractSelectionParameters(location.query);\n\n    // XXX: This re-initalization is only required in new-page-filters\n    // land, since we have implicit pinning in the old land which will\n    // cause page filters to commonly reset.\n    if (isEmpty(newSelectionQuery) && !isEqual(oldSelectionQuery, newSelectionQuery)) {\n      doInitialization();\n      lastQuery.current = location.query;\n      return;\n    }\n\n    const oldState = getStateFromQuery(lastQuery.current, {\n      allowEmptyPeriod: true,\n      allowAbsoluteDatetime: true,\n    });\n    const newState = getStateFromQuery(location.query, {\n      allowAbsoluteDatetime: true,\n      defaultStatsPeriod: defaultSelection?.datetime?.period ?? DEFAULT_STATS_PERIOD,\n    });\n\n    const newEnvironments = newState.environment || [];\n    const newDateState = getDatetimeFromState(newState);\n    const oldDateState = getDatetimeFromState(oldState);\n\n    const noProjectChange = isEqual(oldState.project, newState.project);\n    const noEnvironmentChange = isEqual(oldState.environment, newState.environment);\n    const noDatetimeChange = isEqual(oldDateState, newDateState);\n\n    // Do not pass router to these actionCreators, as we do not want to update\n    // routes since these state changes are happening due to a change of routes\n    if (!noProjectChange) {\n      updateProjects(newState.project || [], null, {environments: newEnvironments});\n    }\n\n    // When the project stays the same, it's still possible that the\n    // environment changed, so explicitly update the environment\n    if (noProjectChange && !noEnvironmentChange) {\n      updateEnvironments(newEnvironments);\n    }\n\n    if (!noDatetimeChange) {\n      updateDateTime(newDateState);\n    }\n\n    lastQuery.current = location.query;\n  }, [location.query]);\n\n  // Wait for global selection to be ready before rendering children\n  if (!isReady) {\n    return <PageContent />;\n  }\n\n  return (\n    <Fragment>\n      {!hideGlobalHeader && <GlobalSelectionHeader {...props} {...additionalProps} />}\n      {hideGlobalHeader && <DesyncedFilterAlert router={router} />}\n      {children}\n    </Fragment>\n  );\n}\n\nconst PageFiltersContainer = withOrganization(withRouter(Container));\n\nexport default PageFiltersContainer;\n","import styled from '@emotion/styled';\n\nimport DropdownButton from 'sentry/components/dropdownButton';\n\ntype Props = {\n  /**\n   * Highlights the button blue. For page filters this indicates the filter\n   * has been desynced from the URL.\n   */\n  highlighted?: boolean;\n};\n\nexport default styled(DropdownButton)<Props>`\n  width: 100%;\n  height: 40px;\n  text-overflow: ellipsis;\n  ${p =>\n    p.highlighted &&\n    `\n    &,\n    &:active,\n    &:hover,\n    &:focus {\n      background-color: ${p.theme.purple100};\n      border-color: ${p.theme.purple200};\n    }\n  `}\n`;\n","import styled from '@emotion/styled';\n\nimport {pinFilter} from 'sentry/actionCreators/pageFilters';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconLock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {PinnedPageFilter} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Props = {\n  filter: PinnedPageFilter;\n  size: Extract<ButtonProps['size'], 'xsmall' | 'zero'>;\n  className?: string;\n};\n\nfunction PageFilterPinButton({filter, size, className}: Props) {\n  const organization = useOrganization();\n  const {pinnedFilters} = usePageFilters();\n  const pinned = pinnedFilters.has(filter);\n\n  const onPin = () => {\n    trackAdvancedAnalyticsEvent('page_filters.pin_click', {\n      organization,\n      filter,\n      pin: !pinned,\n    });\n    pinFilter(filter, !pinned);\n  };\n\n  return (\n    <PinButton\n      className={className}\n      aria-pressed={pinned}\n      aria-label={t('Lock filter')}\n      onClick={onPin}\n      size={size}\n      pinned={pinned}\n      borderless={size === 'zero'}\n      icon={<IconLock isSolid={pinned} size=\"xs\" />}\n      title={t(\"Once locked, Sentry will remember this filter's value across pages.\")}\n      tooltipProps={{delay: 500}}\n    >\n      {pinned ? t('Locked') : t('Lock')}\n    </PinButton>\n  );\n}\n\nconst PinButton = styled(Button)<{pinned: boolean; size: 'xsmall' | 'zero'}>`\n  display: block;\n  color: ${p => p.theme.textColor};\n\n  :hover {\n    color: ${p => p.theme.headingColor};\n  }\n  ${p => p.size === 'zero' && 'background: transparent'};\n`;\n\nexport default PageFilterPinButton;\n","import styled from '@emotion/styled';\n\nimport {IconLock} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {PinnedPageFilter} from 'sentry/types';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\ntype Props = {\n  children: React.ReactNode;\n  filter: PinnedPageFilter;\n};\n\nfunction PageFilterPinIndicator({children, filter}: Props) {\n  const {pinnedFilters} = usePageFilters();\n  const pinned = pinnedFilters.has(filter);\n\n  return (\n    <Wrap>\n      {children}\n      {pinned && (\n        <IndicatorWrap aria-label=\"Filter applied across pages\">\n          <StyledIconLock size=\"xs\" isSolid />\n        </IndicatorWrap>\n      )}\n    </Wrap>\n  );\n}\n\nexport default PageFilterPinIndicator;\n\nconst Wrap = styled('div')`\n  position: relative;\n  display: flex;\n  align-items: center;\n  transform: translateX(-${space(0.25)});\n`;\n\nconst IndicatorWrap = styled('div')`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  transform: translate(50%, 35%);\n  border-radius: 50%;\n  background-color: ${p => p.theme.background};\n\n  padding: ${space(0.25)};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledIconLock = styled(IconLock)`\n  width: 0.5rem;\n  height: 0.5rem;\n  color: ${p => p.theme.textColor};\n`;\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {growIn} from 'sentry/styles/animations';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\ntype ShowAllButtonProps = {\n  canShowAllProjects: boolean;\n  onButtonClick: () => void;\n};\n\ntype FeatureRenderProps = {\n  hasFeature: boolean;\n  renderShowAllButton?: (p: ShowAllButtonProps) => React.ReactNode;\n};\n\ntype Props = {\n  onApply: () => void;\n  onShowAllProjects: () => void;\n  onShowMyProjects: () => void;\n  organization: Organization;\n  disableMultipleProjectSelection?: boolean;\n  hasChanges?: boolean;\n  message?: React.ReactNode;\n  selected?: Set<number>;\n};\n\nconst ProjectSelectorFooter = ({\n  selected,\n  disableMultipleProjectSelection,\n  hasChanges,\n  onApply,\n  onShowAllProjects,\n  onShowMyProjects,\n  organization,\n  message,\n}: Props) => {\n  // Nothing to show.\n  if (disableMultipleProjectSelection && !hasChanges && !message) {\n    return null;\n  }\n\n  // see if we should show \"All Projects\" or \"My Projects\" if disableMultipleProjectSelection isn't true\n  const hasGlobalRole = organization.role === 'owner' || organization.role === 'manager';\n  const hasOpenMembership = organization.features.includes('open-membership');\n  const allSelected = selected && selected.has(ALL_ACCESS_PROJECTS);\n\n  const canShowAllProjects = (hasGlobalRole || hasOpenMembership) && !allSelected;\n  const onProjectClick = canShowAllProjects ? onShowAllProjects : onShowMyProjects;\n  const buttonText = canShowAllProjects\n    ? t('Select All Projects')\n    : t('Select My Projects');\n\n  const hasProjectWrite = organization.access.includes('project:write');\n  const newProjectUrl = `/organizations/${organization.slug}/projects/new/`;\n\n  return (\n    <FooterContainer hasMessage={!!message}>\n      {message && <FooterMessage>{message}</FooterMessage>}\n      <FooterActions>\n        <Button\n          aria-label={t('Add Project')}\n          disabled={!hasProjectWrite}\n          to={newProjectUrl}\n          size=\"xsmall\"\n          icon={<IconAdd size=\"xs\" isCircled />}\n          title={\n            !hasProjectWrite ? t(\"You don't have permission to add a project\") : undefined\n          }\n        >\n          {t('Project')}\n        </Button>\n        {!disableMultipleProjectSelection && (\n          <Feature\n            features={['organizations:global-views']}\n            organization={organization}\n            hookName=\"feature-disabled:project-selector-all-projects\"\n            renderDisabled={false}\n          >\n            {({renderShowAllButton, hasFeature}: FeatureRenderProps) => {\n              // if our hook is adding renderShowAllButton, render that\n              if (renderShowAllButton) {\n                return renderShowAllButton({\n                  onButtonClick: onProjectClick,\n                  canShowAllProjects,\n                });\n              }\n              // if no hook, render null if feature is disabled\n              if (!hasFeature) {\n                return null;\n              }\n              // otherwise render the buton\n              return (\n                <Button priority=\"default\" size=\"xsmall\" onClick={onProjectClick}>\n                  {buttonText}\n                </Button>\n              );\n            }}\n          </Feature>\n        )}\n        {hasChanges && (\n          <SubmitButton onClick={onApply} size=\"xsmall\" priority=\"primary\">\n            {t('Apply Filter')}\n          </SubmitButton>\n        )}\n      </FooterActions>\n    </FooterContainer>\n  );\n};\n\nexport default ProjectSelectorFooter;\n\nconst FooterContainer = styled('div')<{hasMessage: boolean}>`\n  display: flex;\n  justify-content: ${p => (p.hasMessage ? 'space-between' : 'flex-end')};\n`;\n\nconst FooterActions = styled('div')`\n  display: grid;\n  grid-auto-flow: column dense;\n  justify-items: end;\n  padding: ${space(1)} 0;\n  gap: ${space(1)};\n\n  & > * {\n    margin-left: ${space(0.5)};\n  }\n  &:empty {\n    display: none;\n  }\n`;\n\nconst SubmitButton = styled(Button)`\n  animation: 0.1s ${growIn} ease-in;\n`;\n\nconst FooterMessage = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(1)} ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport Button from 'sentry/components/button';\nimport Highlight from 'sentry/components/highlight';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport IdBadge from 'sentry/components/idBadge';\nimport PageFilterRow from 'sentry/components/organizations/pageFilterRow';\nimport BookmarkStar from 'sentry/components/projects/bookmarkStar';\nimport {IconOpen, IconSettings} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\n\ntype Props = {\n  inputValue: string;\n  isChecked: boolean;\n  multi: boolean;\n  organization: Organization;\n  project: Project;\n  onMultiSelect?: (project: Project, event: React.MouseEvent) => void;\n};\n\nfunction ProjectSelectorItem({\n  project,\n  organization,\n  onMultiSelect,\n  multi = false,\n  inputValue = '',\n  isChecked = false,\n}: Props) {\n  const handleClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n    onMultiSelect?.(project, event);\n  };\n\n  const handleBookmarkToggle = (isBookmarked: boolean) => {\n    analytics('projectselector.bookmark_toggle', {\n      org_id: parseInt(organization.id, 10),\n      bookmarked: isBookmarked,\n    });\n  };\n\n  const renderDisabledCheckbox = ({\n    children,\n    features,\n  }: {\n    children: React.ReactNode;\n    features: string[];\n  }) => {\n    return (\n      <Hovercard\n        body={\n          <FeatureDisabled\n            features={features}\n            hideHelpToggle\n            featureName={t('Multiple Project Selection')}\n          />\n        }\n      >\n        {children}\n      </Hovercard>\n    );\n  };\n\n  return (\n    <ProjectFilterRow\n      checked={isChecked}\n      onCheckClick={handleClick}\n      multi={multi}\n      renderCheckbox={({checkbox}) => (\n        <Feature\n          features={['organizations:global-views']}\n          hookName=\"feature-disabled:project-selector-checkbox\"\n          renderDisabled={renderDisabledCheckbox}\n        >\n          {checkbox}\n        </Feature>\n      )}\n    >\n      <BadgeWrapper>\n        <IdBadge\n          project={project}\n          avatarSize={16}\n          displayName={<Highlight text={inputValue}>{project.slug}</Highlight>}\n          avatarProps={{consistentWidth: true}}\n          disableLink\n        />\n      </BadgeWrapper>\n      <ActionBookmark\n        project={project}\n        organization={organization}\n        onToggle={handleBookmarkToggle}\n      />\n      <ActionButton\n        to={`/organizations/${organization.slug}/projects/${project.slug}/?project=${project.id}`}\n        size=\"zero\"\n        priority=\"link\"\n        aria-label=\"Project Details\"\n        icon={<IconOpen />}\n      />\n      <ActionButton\n        to={`/settings/${organization.slug}/projects/${project.slug}/`}\n        size=\"zero\"\n        priority=\"link\"\n        aria-label=\"Project Settings\"\n        icon={<IconSettings />}\n      />\n    </ProjectFilterRow>\n  );\n}\n\nexport default ProjectSelectorItem;\n\nconst BadgeWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst ActionButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(1)} ${space(0.25)} ${space(1)} ${space(1)};\n  opacity: 0.33;\n  :hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst ActionBookmark = styled(BookmarkStar)`\n  ${p => !p.project.isBookmarked && 'opacity: 0.33'};\n`;\n\nconst ProjectFilterRow = styled(PageFilterRow)`\n  :hover ${ActionButton}, :hover ${ActionBookmark} {\n    opacity: 1;\n  }\n`;\n","import {Fragment, useMemo, useRef, useState} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {MenuActions} from 'sentry/components/dropdownMenu';\nimport Link from 'sentry/components/links/link';\nimport HeaderItem from 'sentry/components/organizations/headerItem';\nimport PageFilterPinButton from 'sentry/components/organizations/pageFilters/pageFilterPinButton';\nimport PlatformList from 'sentry/components/platformList';\nimport Tooltip from 'sentry/components/tooltip';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {IconProject} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {MinimalProject, Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport theme from 'sentry/utils/theme';\n\nimport ProjectSelectorFooter from './footer';\nimport SelectorItem from './selectorItem';\n\ntype Props = WithRouterProps & {\n  /**\n   * Projects the member is a part of\n   */\n  memberProjects: Project[];\n  /**\n   * Projects the member is _not_ part of\n   */\n  nonMemberProjects: Project[];\n  /**\n   * Triggered when the selection changes are applied\n   */\n  onApplyChange: (newProjects: number[]) => void;\n  /**\n   * Triggers any time a selection is changed, but the menu has not yet been closed or \"applied\"\n   */\n  onChange: (selected: number[]) => void;\n  organization: Organization;\n  /**\n   * The selected projects\n   */\n  value: number[];\n  /**\n   * Used to render a custom dropdown button for the DropdownAutoComplete\n   */\n  customDropdownButton?: (config: {\n    actions: MenuActions;\n    isOpen: boolean;\n    selectedProjects: Project[];\n  }) => React.ReactElement;\n  /**\n   * The loading indicator to render when global selection is not yet ready.\n   */\n  customLoadingIndicator?: React.ReactNode;\n  detached?: boolean;\n  /**\n   * Only allow a single project to be selected at once\n   */\n  disableMultipleProjectSelection?: boolean;\n  /**\n   * Message to show in the footer\n   */\n  footerMessage?: React.ReactNode;\n  /**\n   * Forces a specific project to be selected and does _not_ allow editing of the project selection.\n   *\n   * @deprecated This was used in the old Global Selection Header\n   */\n  forceProject?: MinimalProject | null;\n  isGlobalSelectionReady?: boolean;\n  /**\n   * Used when `forceProject` is set. Indicates what is \"locked\"\n   *\n   * @deprecated\n   */\n  lockedMessageSubject?: React.ReactNode;\n  /**\n   * When we expect forceProject to be set, but the project is still loading, we\n   * can use this to hint that the forceProject will be set.\n   *\n   * @deprecated\n   */\n  shouldForceProject?: boolean;\n  /**\n   * Link back to the issues strean\n   *\n   * @deprecated\n   */\n  showIssueStreamLink?: boolean;\n  /**\n   * Show the pinning icon in the projects dropdown\n   */\n  showPin?: boolean;\n  /**\n   * Show a link to the project settings in th header\n   *\n   * @deprecated\n   */\n  showProjectSettingsLink?: boolean;\n};\n\nfunction ProjectSelector({\n  customDropdownButton,\n  customLoadingIndicator,\n  disableMultipleProjectSelection,\n  footerMessage,\n  forceProject,\n  isGlobalSelectionReady,\n  location,\n  lockedMessageSubject = t('page'),\n  memberProjects,\n  nonMemberProjects = [],\n  onApplyChange,\n  onChange,\n  organization,\n  router,\n  shouldForceProject,\n  showIssueStreamLink,\n  showPin,\n  showProjectSettingsLink,\n  value,\n  ...extraProps\n}: Props) {\n  // Used to determine if we should show the 'apply' changes button\n  const [hasChanges, setHasChanges] = useState(false);\n\n  // Used to keep selected proects sorted in the same order when opening /\n  // closing the project selector\n  const lastSelected = useRef(value);\n\n  const isMulti =\n    !disableMultipleProjectSelection && organization.features.includes('global-views');\n\n  /**\n   * Reset \"hasChanges\" state and call `onApplyChange` callback\n   *\n   * @param value optional parameter that will be passed to onApplyChange callback\n   */\n  const doApplyChange = (newValue: number[]) => {\n    setHasChanges(false);\n    onApplyChange(newValue);\n  };\n\n  /**\n   * Handler for when an explicit update call should be made.\n   * e.g. an \"Update\" button\n   *\n   * Should perform an \"update\" callback\n   */\n  const handleUpdate = (actions: {close: () => void}) => {\n    actions.close();\n    doApplyChange(value);\n  };\n\n  /**\n   * Handler for when a dropdown item was selected directly (and not via multi select)\n   *\n   * Should perform an \"update\" callback\n   */\n  const handleQuickSelect = (selected: Pick<Project, 'id'>) => {\n    trackAdvancedAnalyticsEvent('projectselector.direct_selection', {\n      path: getRouteStringFromRoutes(router.routes),\n      organization,\n    });\n\n    const newValue = selected.id === null ? [] : [parseInt(selected.id, 10)];\n    onChange(newValue);\n    doApplyChange(newValue);\n  };\n\n  /**\n   * Handler for when dropdown menu closes\n   *\n   * Should perform an \"update\" callback\n   */\n  const handleClose = () => {\n    // Only update if there are changes\n    if (!hasChanges) {\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('projectselector.update', {\n      count: value.length,\n      path: getRouteStringFromRoutes(router.routes),\n      organization,\n      multi: isMulti,\n    });\n\n    doApplyChange(value);\n    lastSelected.current = value;\n  };\n\n  /**\n   * Handler for clearing the current value\n   *\n   * Should perform an \"update\" callback\n   */\n  const handleClear = () => {\n    trackAdvancedAnalyticsEvent('projectselector.clear', {\n      path: getRouteStringFromRoutes(router.routes),\n      organization,\n    });\n\n    onChange([]);\n    doApplyChange([]);\n  };\n\n  const allProjects = [...memberProjects, ...nonMemberProjects];\n  const selectedProjectIds = useMemo(() => new Set(value), [value]);\n\n  const selected = allProjects.filter(project =>\n    selectedProjectIds.has(parseInt(project.id, 10))\n  );\n\n  // `forceProject` can be undefined if it is loading the project\n  // We are intentionally using an empty string as its \"loading\" state\n  if (shouldForceProject) {\n    const projectName =\n      forceProject && showIssueStreamLink && isMulti ? (\n        <Tooltip title={t('Issues Stream')} position=\"bottom\">\n          <StyledLink\n            to={{\n              pathname: `/organizations/${organization.slug}/issues/`,\n              query: {...location.query, project: forceProject.id},\n            }}\n          >\n            {forceProject.slug}\n          </StyledLink>\n        </Tooltip>\n      ) : forceProject ? (\n        forceProject.slug\n      ) : (\n        ''\n      );\n\n    const lockedMessage = forceProject\n      ? tct('This [subject] is unique to the [projectSlug] project', {\n          subject: lockedMessageSubject,\n          projectSlug: forceProject.slug,\n        })\n      : tct('This [subject] is unique to a project', {subject: lockedMessageSubject});\n\n    return (\n      <StyledHeaderItem\n        data-test-id=\"page-filter-project-selector\"\n        icon={\n          forceProject && (\n            <PlatformList\n              platforms={forceProject.platform ? [forceProject.platform] : []}\n              max={1}\n            />\n          )\n        }\n        locked\n        lockedMessage={lockedMessage}\n        settingsLink={\n          (forceProject &&\n            showProjectSettingsLink &&\n            `/settings/${organization.slug}/projects/${forceProject.slug}/`) ||\n          undefined\n        }\n      >\n        {projectName}\n      </StyledHeaderItem>\n    );\n  }\n\n  if (!isGlobalSelectionReady) {\n    return (\n      <Fragment>{customLoadingIndicator}</Fragment> ?? (\n        <StyledHeaderItem\n          data-test-id=\"page-filter-project-selector-loading\"\n          icon={<IconProject />}\n          loading\n        >\n          {t('Loading\\u2026')}\n        </StyledHeaderItem>\n      )\n    );\n  }\n\n  const listSort = (project: Project) => [\n    !lastSelected.current.includes(parseInt(project.id, 10)),\n    !project.isBookmarked,\n    project.slug,\n  ];\n\n  const projects = sortBy(memberProjects, listSort);\n  const otherProjects = sortBy(nonMemberProjects, listSort);\n\n  const handleMultiSelect = (project: Project) => {\n    const selectedProjectsMap = new Map(selected.map(p => [p.slug, p]));\n\n    if (selectedProjectsMap.has(project.slug)) {\n      // unselected a project\n      selectedProjectsMap.delete(project.slug);\n    } else {\n      selectedProjectsMap.set(project.slug, project);\n    }\n\n    trackAdvancedAnalyticsEvent('projectselector.toggle', {\n      action: selected.length > value.length ? 'added' : 'removed',\n      path: getRouteStringFromRoutes(router.routes),\n      organization,\n    });\n\n    const selectedList = [...selectedProjectsMap.values()]\n      .map(({id}) => parseInt(id, 10))\n      .filter(i => i);\n\n    onChange(selectedList);\n    setHasChanges(true);\n  };\n\n  const getProjectItem = (project: Project) => ({\n    item: project,\n    searchKey: project.slug,\n    label: ({inputValue}: {inputValue: typeof project.slug}) => (\n      <SelectorItem\n        project={project}\n        organization={organization}\n        multi={isMulti}\n        inputValue={inputValue}\n        isChecked={!!selected.find(({slug}) => slug === project.slug)}\n        onMultiSelect={handleMultiSelect}\n      />\n    ),\n  });\n\n  const hasProjects = !!projects?.length || !!otherProjects?.length;\n\n  const items = !hasProjects\n    ? []\n    : [\n        {\n          hideGroupLabel: true,\n          items: projects.map(getProjectItem),\n        },\n        {\n          hideGroupLabel: otherProjects.length === 0,\n          itemSize: 'small',\n          id: 'no-membership-header', // needed for tests for non-virtualized lists\n          label: <Label>{t(\"Projects I don't belong to\")}</Label>,\n          items: otherProjects.map(getProjectItem),\n        },\n      ];\n\n  return (\n    <ClassNames>\n      {({css}) => (\n        <StyledDropdownAutocomplete\n          {...extraProps}\n          blendCorner={false}\n          searchPlaceholder={t('Filter projects')}\n          onSelect={i => handleQuickSelect(i.item)}\n          onClose={handleClose}\n          maxHeight={500}\n          minWidth={350}\n          inputProps={{style: {padding: 8, paddingLeft: 10}}}\n          rootClassName={css`\n            display: flex;\n          `}\n          emptyMessage={t('You have no projects')}\n          noResultsMessage={t('No projects found')}\n          virtualizedHeight={theme.headerSelectorRowHeight}\n          virtualizedLabelHeight={theme.headerSelectorLabelHeight}\n          inputActions={\n            <InputActions>\n              {showPin && (\n                <GuideAnchor target=\"new_page_filter_pin\" position=\"bottom\">\n                  <PageFilterPinButton size=\"xsmall\" filter=\"projects\" />\n                </GuideAnchor>\n              )}\n            </InputActions>\n          }\n          menuFooter={({actions}) => (\n            <ProjectSelectorFooter\n              selected={selectedProjectIds}\n              disableMultipleProjectSelection={disableMultipleProjectSelection}\n              organization={organization}\n              hasChanges={hasChanges}\n              onApply={() => handleUpdate(actions)}\n              onShowAllProjects={() => {\n                handleQuickSelect({id: ALL_ACCESS_PROJECTS.toString()});\n                actions.close();\n                trackAdvancedAnalyticsEvent('projectselector.multi_button_clicked', {\n                  button_type: 'all',\n                  path: getRouteStringFromRoutes(router.routes),\n                  organization,\n                });\n              }}\n              onShowMyProjects={() => {\n                handleClear();\n                actions.close();\n                trackAdvancedAnalyticsEvent('projectselector.multi_button_clicked', {\n                  button_type: 'my',\n                  path: getRouteStringFromRoutes(router.routes),\n                  organization,\n                });\n              }}\n              message={footerMessage}\n            />\n          )}\n          items={items}\n          allowActorToggle\n          closeOnSelect\n        >\n          {({actions, isOpen}) => {\n            if (customDropdownButton) {\n              return customDropdownButton({\n                actions,\n                selectedProjects: selected,\n                isOpen,\n              });\n            }\n            const hasSelected = !!selected.length;\n            const title = hasSelected\n              ? selected.map(({slug}) => slug).join(', ')\n              : selectedProjectIds.has(ALL_ACCESS_PROJECTS)\n              ? t('All Projects')\n              : t('My Projects');\n            const icon = hasSelected ? (\n              <PlatformList\n                platforms={selected.map(p => p.platform ?? 'other').reverse()}\n                max={5}\n              />\n            ) : (\n              <IconProject />\n            );\n\n            return (\n              <StyledHeaderItem\n                data-test-id=\"page-filter-project-selector\"\n                icon={icon}\n                hasSelected={hasSelected}\n                hasChanges={hasChanges}\n                isOpen={isOpen}\n                onClear={handleClear}\n                allowClear={isMulti}\n                settingsLink={\n                  selected.length === 1\n                    ? `/settings/${organization.slug}/projects/${selected[0]?.slug}/`\n                    : ''\n                }\n              >\n                {title}\n              </StyledHeaderItem>\n            );\n          }}\n        </StyledDropdownAutocomplete>\n      )}\n    </ClassNames>\n  );\n}\n\nexport default withRouter(ProjectSelector);\n\nconst StyledDropdownAutocomplete = styled(DropdownAutoComplete)`\n  background-color: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n\n  ${p =>\n    !p.detached &&\n    `\n    width: 100%;\n    margin: 1px 0 0 -1px;\n    border-radius: ${p.theme.borderRadiusBottom};\n  `}\n`;\n\nconst StyledHeaderItem = styled(HeaderItem)`\n  height: 100%;\n  width: 100%;\n  ${p => p.locked && 'cursor: default'};\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.subText};\n\n  &:hover {\n    color: ${p => p.theme.subText};\n  }\n`;\n\nconst Label = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst InputActions = styled('div')`\n  display: grid;\n  margin: 0 ${space(1)};\n  gap: ${space(1)};\n  grid-auto-flow: column;\n  grid-auto-columns: auto;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\ntype Props = {\n  onChangeEnd: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeStart: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  // Should inputs be disabled\n  disabled?: boolean;\n  // Takes string in 24 hour format\n  end?: string;\n  // Takes string in 24 hour format\n  start?: string;\n};\n\ntype State = {\n  focused: boolean;\n};\n\nconst TimePicker = styled(\n  class TimePicker extends Component<Props, State> {\n    state: State = {\n      focused: false,\n    };\n\n    shouldComponentUpdate() {\n      // This is necessary because when a change event happens,\n      // the change is propagated up to the dropdown. This causes\n      // a re-render of this component which in turn causes the\n      // input element to lose focus. To get around losing focus,\n      // we prevent the component from updating when one of the\n      // inputs has focus. This is okay because the inputs will\n      // keep track of their own values so we do not have to keep\n      // track of it.\n      return !this.state.focused;\n    }\n\n    handleFocus = () => {\n      this.setState({focused: true});\n    };\n\n    handleBlur = () => {\n      this.setState({focused: false});\n    };\n\n    render() {\n      const {className, start, end, disabled, onChangeStart, onChangeEnd} = this.props;\n      return (\n        <div className={classNames(className, 'rdrDateDisplay')}>\n          <div>\n            <Input\n              type=\"time\"\n              key={start}\n              defaultValue={start}\n              className=\"rdrDateDisplayItem\"\n              data-test-id=\"startTime\"\n              disabled={disabled}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              onChange={onChangeStart}\n            />\n          </div>\n\n          <div>\n            <Input\n              type=\"time\"\n              defaultValue={end}\n              key={end}\n              className=\"rdrDateDisplayItem\"\n              data-test-id=\"endTime\"\n              disabled={disabled}\n              onFocus={this.handleFocus}\n              onBlur={this.handleBlur}\n              onChange={onChangeEnd}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n)`\n  &.rdrDateDisplay {\n    display: grid;\n    background: transparent;\n    grid-template-columns: 48% 48%;\n    grid-column-gap: 4%;\n    align-items: center;\n    font-size: 0.875em;\n    color: ${p => p.theme.subText};\n    width: 70%;\n    padding: 0;\n  }\n`;\n\nconst Input = styled('input')`\n  &.rdrDateDisplayItem {\n    width: 100%;\n    padding-left: 5%;\n    background: ${p => p.theme.backgroundSecondary};\n    border: 1px solid ${p => p.theme.border};\n    color: ${p => p.theme.gray300};\n    box-shadow: none;\n  }\n`;\n\nexport default TimePicker;\n","import {Component, lazy, Suspense} from 'react';\nimport type {OnChangeProps, RangeWithKey} from 'react-date-range';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport TimePicker from 'sentry/components/organizations/timeRangeSelector/timePicker';\nimport Placeholder from 'sentry/components/placeholder';\nimport {MAX_PICKABLE_DAYS} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport {\n  getEndOfDay,\n  getStartOfPeriodAgo,\n  isValidTime,\n  setDateToTime,\n} from 'sentry/utils/dates';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport {Theme} from 'sentry/utils/theme';\n\nconst DateRangePicker = lazy(() => import('./dateRangeWrapper'));\n\nconst getTimeStringFromDate = (date: Date) => moment(date).local().format('HH:mm');\n\n// react.date-range doesn't export this as a type.\ntype RangeSelection = {selection: RangeWithKey};\n\nfunction isRangeSelection(maybe: OnChangeProps): maybe is RangeSelection {\n  return (maybe as RangeSelection).selection !== undefined;\n}\n\ntype ChangeData = {end?: Date; hasDateRangeErrors?: boolean; start?: Date};\n\nconst defaultProps = {\n  showAbsolute: true,\n  showRelative: false,\n  /**\n   * The maximum number of days in the past you can pick\n   */\n  maxPickableDays: MAX_PICKABLE_DAYS,\n};\n\ntype Props = WithRouterProps & {\n  /**\n   * End date value for absolute date selector\n   */\n  end: Date | null;\n  /**\n   * Callback when value changes\n   */\n  onChange: (data: ChangeData) => void;\n\n  /**\n   * handle UTC checkbox change\n   */\n  onChangeUtc: () => void;\n\n  /**\n   * Just used for metrics\n   */\n  organization: Organization;\n\n  /**\n   * Start date value for absolute date selector\n   */\n  start: Date | null;\n\n  theme: Theme;\n\n  className?: string;\n\n  /**\n   * Should we have a time selector?\n   */\n  showTimePicker?: boolean;\n\n  /**\n   * Use UTC\n   */\n  utc?: boolean | null;\n} & Partial<typeof defaultProps>;\n\ntype State = {\n  hasEndErrors: boolean;\n  hasStartErrors: boolean;\n};\n\nclass BaseDateRange extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    hasStartErrors: false,\n    hasEndErrors: false,\n  };\n\n  handleSelectDateRange = (changeProps: OnChangeProps) => {\n    if (!isRangeSelection(changeProps)) {\n      return;\n    }\n    const {selection} = changeProps;\n    const {onChange} = this.props;\n    const {startDate, endDate} = selection;\n\n    const end = endDate ? getEndOfDay(endDate) : endDate;\n\n    onChange({\n      start: startDate,\n      end,\n    });\n  };\n\n  handleChangeStart = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // Safari does not support \"time\" inputs, so we don't have access to\n    // `e.target.valueAsDate`, must parse as string\n    //\n    // Time will be in 24hr e.g. \"21:00\"\n    const start = this.props.start ?? '';\n    const end = this.props.end ?? undefined;\n    const {onChange, organization, router} = this.props;\n    const startTime = e.target.value;\n\n    if (!startTime || !isValidTime(startTime)) {\n      this.setState({hasStartErrors: true});\n      onChange({hasDateRangeErrors: true});\n      return;\n    }\n    const newTime = setDateToTime(start, startTime, {local: true});\n\n    analytics('dateselector.time_changed', {\n      field_changed: 'start',\n      time: startTime,\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    onChange({\n      start: newTime,\n      end,\n      hasDateRangeErrors: this.state.hasEndErrors,\n    });\n\n    this.setState({hasStartErrors: false});\n  };\n\n  handleChangeEnd = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const start = this.props.start ?? undefined;\n    const end = this.props.end ?? '';\n    const {organization, onChange, router} = this.props;\n    const endTime = e.target.value;\n\n    if (!endTime || !isValidTime(endTime)) {\n      this.setState({hasEndErrors: true});\n      onChange({hasDateRangeErrors: true});\n      return;\n    }\n\n    const newTime = setDateToTime(end, endTime, {local: true});\n\n    analytics('dateselector.time_changed', {\n      field_changed: 'end',\n      time: endTime,\n      path: getRouteStringFromRoutes(router.routes),\n      org_id: parseInt(organization.id, 10),\n    });\n\n    onChange({\n      start,\n      end: newTime,\n      hasDateRangeErrors: this.state.hasStartErrors,\n    });\n\n    this.setState({hasEndErrors: false});\n  };\n\n  render() {\n    const {className, maxPickableDays, utc, showTimePicker, onChangeUtc, theme} =\n      this.props;\n    const start = this.props.start ?? '';\n    const end = this.props.end ?? '';\n\n    const startTime = getTimeStringFromDate(new Date(start));\n    const endTime = getTimeStringFromDate(new Date(end));\n\n    // Restraints on the time range that you can select\n    // Can't select dates in the future b/c we're not fortune tellers (yet)\n    //\n    // We want `maxPickableDays` - 1 (if today is Jan 5, max is 3 days, the minDate should be Jan 3)\n    // Subtract additional day  because we force the end date to be inclusive,\n    // so when you pick Jan 1 the time becomes Jan 1 @ 23:59:59,\n    // (or really, Jan 2 @ 00:00:00 - 1 second), while the start time is at 00:00\n    const minDate = getStartOfPeriodAgo(\n      'days',\n      (maxPickableDays ?? MAX_PICKABLE_DAYS) - 2\n    );\n    const maxDate = new Date();\n\n    return (\n      <div className={className} data-test-id=\"date-range\">\n        <Suspense\n          fallback={\n            <Placeholder width=\"342px\" height=\"254px\">\n              <LoadingIndicator />\n            </Placeholder>\n          }\n        >\n          <DateRangePicker\n            rangeColors={[theme.purple300]}\n            ranges={[\n              {\n                startDate: moment(start).local().toDate(),\n                endDate: moment(end).local().toDate(),\n                key: 'selection',\n              },\n            ]}\n            minDate={minDate}\n            maxDate={maxDate}\n            onChange={this.handleSelectDateRange}\n          />\n        </Suspense>\n        {showTimePicker && (\n          <TimeAndUtcPicker>\n            <TimePicker\n              start={startTime}\n              end={endTime}\n              onChangeStart={this.handleChangeStart}\n              onChangeEnd={this.handleChangeEnd}\n            />\n            <UtcPicker>\n              {t('Use UTC')}\n              <Checkbox\n                onChange={onChangeUtc}\n                checked={utc || false}\n                style={{\n                  margin: '0 0 0 0.5em',\n                }}\n              />\n            </UtcPicker>\n          </TimeAndUtcPicker>\n        )}\n      </div>\n    );\n  }\n}\n\nconst DateRange = styled(withTheme(withRouter(BaseDateRange)))`\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid ${p => p.theme.border};\n`;\n\nconst TimeAndUtcPicker = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(0.25)} ${space(2)};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n`;\n\nconst UtcPicker = styled('div')`\n  color: ${p => p.theme.gray300};\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex: 1;\n`;\n\nexport default DateRange;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DEFAULT_DAY_END_TIME, DEFAULT_DAY_START_TIME} from 'sentry/utils/dates';\n\ntype Props = {\n  end: moment.MomentInput;\n  start: moment.MomentInput;\n};\n\n/**\n * Displays and formats absolute DateTime ranges\n */\nfunction DateSummary({start, end}: Props) {\n  function getFormattedDate(date: moment.MomentInput, format: string) {\n    return moment(date).local().format(format);\n  }\n\n  function formatDate(date: moment.MomentInput) {\n    return getFormattedDate(date, 'll');\n  }\n\n  function formatTime(date: moment.MomentInput, withSeconds = false) {\n    return getFormattedDate(date, `HH:mm${withSeconds ? ':ss' : ''}`);\n  }\n\n  const startTimeFormatted = formatTime(start, true);\n  const endTimeFormatted = formatTime(end, true);\n\n  // Show times if either start or end date contain a time that is not midnight\n  const shouldShowTimes =\n    startTimeFormatted !== DEFAULT_DAY_START_TIME ||\n    endTimeFormatted !== DEFAULT_DAY_END_TIME;\n\n  return (\n    <DateGroupWrapper hasTime={shouldShowTimes}>\n      <DateGroup>\n        <Date hasTime={shouldShowTimes}>\n          {formatDate(start)}\n          {shouldShowTimes && <Time>{formatTime(start)}</Time>}\n        </Date>\n      </DateGroup>\n      <Fragment>\n        <DateRangeDivider>{t('to')}</DateRangeDivider>\n\n        <DateGroup>\n          <Date hasTime={shouldShowTimes}>\n            {formatDate(end)}\n            {shouldShowTimes && <Time>{formatTime(end)}</Time>}\n          </Date>\n        </DateGroup>\n      </Fragment>\n    </DateGroupWrapper>\n  );\n}\n\nconst DateGroupWrapper = styled('div')<{hasTime: boolean}>`\n  display: flex;\n  align-items: center;\n  transform: translateY(${p => (p.hasTime ? '-5px' : '0')});\n`;\n\nconst DateGroup = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 110px;\n`;\n\nconst Date = styled('div')<{hasTime: boolean}>`\n  ${p => p.hasTime && 'margin-top: 9px'};\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nconst Time = styled('div')`\n  font-size: 0.7em;\n  line-height: 0.7em;\n  opacity: 0.5;\n`;\n\nconst DateRangeDivider = styled('span')`\n  margin: 0 ${space(0.5)};\n`;\n\nexport default DateSummary;\n","import styled from '@emotion/styled';\n\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport {DEFAULT_RELATIVE_PERIODS} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: (items: Item[]) => React.ReactElement;\n  handleSelectRelative: (value: string) => void;\n  relativePeriods?: Record<'string', React.ReactNode>;\n  shouldShowAbsolute?: boolean;\n  shouldShowRelative?: boolean;\n};\n\nconst SelectorItems = ({\n  children,\n  relativePeriods,\n  shouldShowRelative,\n  shouldShowAbsolute,\n}: Props) => {\n  const relativeArr = Object.entries(relativePeriods ?? DEFAULT_RELATIVE_PERIODS);\n\n  const items: Item[] = [\n    ...(shouldShowRelative\n      ? relativeArr.map(([value, itemLabel], index) => ({\n          index,\n          value,\n          searchKey: typeof itemLabel === 'string' ? itemLabel : value,\n          label: <Label>{itemLabel}</Label>,\n          'data-test-id': value,\n        }))\n      : []),\n    ...(shouldShowAbsolute\n      ? [\n          {\n            index: relativeArr.length,\n            value: 'absolute',\n            searchKey: 'absolute',\n            label: <Label>{t('Absolute date')}</Label>,\n            'data-test-id': 'absolute',\n          },\n        ]\n      : []),\n  ];\n\n  return children(items);\n};\n\nconst Label = styled('div')`\n  margin-left: ${space(0.5)};\n  margin-top: ${space(0.25)};\n  margin-bottom: ${space(0.25)};\n`;\n\nexport default SelectorItems;\n","import {PureComponent} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport {GetActorPropsFn} from 'sentry/components/dropdownMenu';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport HeaderItem from 'sentry/components/organizations/headerItem';\nimport MultipleSelectorSubmitRow from 'sentry/components/organizations/multipleSelectorSubmitRow';\nimport PageFilterPinButton from 'sentry/components/organizations/pageFilters/pageFilterPinButton';\nimport DateRange from 'sentry/components/organizations/timeRangeSelector/dateRange';\nimport DateSummary from 'sentry/components/organizations/timeRangeSelector/dateSummary';\nimport {getRelativeSummary} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {IconCalendar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DateString, Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {analytics} from 'sentry/utils/analytics';\nimport {\n  getDateWithTimezoneInUtc,\n  getInternalDate,\n  getLocalToSystem,\n  getPeriodAgo,\n  getUserTimezone,\n  getUtcToSystem,\n  parsePeriodToHours,\n} from 'sentry/utils/dates';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\n\nimport SelectorItems from './selectorItems';\n\nconst DateRangeHook = HookOrDefault({\n  hookName: 'component:header-date-range',\n  defaultComponent: DateRange,\n});\n\nconst SelectorItemsHook = HookOrDefault({\n  hookName: 'component:header-selector-items',\n  defaultComponent: SelectorItems,\n});\n\nexport type ChangeData = {\n  relative: string | null;\n  end?: Date;\n  start?: Date;\n  utc?: boolean | null;\n};\n\ntype DateRangeChangeData = Parameters<\n  React.ComponentProps<typeof DateRange>['onChange']\n>[0];\n\nconst defaultProps = {\n  /**\n   * Show absolute date selectors\n   */\n  showAbsolute: true,\n  /**\n   * Show relative date selectors\n   */\n  showRelative: true,\n  /**\n   * When the default period is selected, it is visually dimmed and\n   * makes the selector unclearable.\n   */\n  defaultPeriod: DEFAULT_STATS_PERIOD,\n  /**\n   * Callback when value changes\n   */\n  onChange: (() => {}) as (data: ChangeData) => void,\n};\n\ntype Props = WithRouterProps & {\n  /**\n   * End date value for absolute date selector\n   */\n  end: DateString;\n\n  /**\n   * Callback when \"Update\" button is clicked\n   */\n  onUpdate: (data: ChangeData) => void;\n\n  /**\n   * Just used for metrics\n   */\n  organization: Organization;\n\n  /**\n   * Relative date value\n   */\n  relative: string | null;\n\n  /**\n   * Start date value for absolute date selector\n   */\n  start: DateString;\n\n  /**\n   * Default initial value for using UTC\n   */\n  utc: boolean | null;\n\n  /**\n   * Aligns dropdown menu to left or right of button\n   */\n  alignDropdown?: 'left' | 'right';\n\n  /**\n   * Optionally render a custom dropdown button, instead of the default\n   * <HeaderItem />\n   */\n  customDropdownButton?: (config: {\n    getActorProps: GetActorPropsFn;\n    isOpen: boolean;\n  }) => React.ReactElement;\n\n  /**\n   * Set an optional default value to prefill absolute date with\n   */\n  defaultAbsolute?: {end?: Date; start?: Date};\n\n  /**\n   * Whether the menu should be detached from the actor\n   */\n  detached?: boolean;\n\n  /**\n   * Small info icon with tooltip hint text\n   */\n  hint?: string;\n\n  /**\n   * Replace the default calendar icon for label\n   */\n  label?: React.ReactNode;\n\n  /**\n   * The maximum number of days in the past you can pick\n   */\n  maxPickableDays?: number;\n\n  /**\n   * Callback when opening/closing dropdown date selector\n   */\n  onToggleSelector?: (isOpen: boolean) => void;\n\n  /**\n   * Override defaults from DEFAULT_RELATIVE_PERIODS\n   */\n  relativeOptions?: Record<string, React.ReactNode>;\n\n  /**\n   * Show the pin button in the dropdown's header actions\n   */\n  showPin?: boolean;\n} & Partial<typeof defaultProps>;\n\ntype State = {\n  hasChanges: boolean;\n  hasDateRangeErrors: boolean;\n  isOpen: boolean;\n  relative: string | null;\n  end?: Date;\n  start?: Date;\n  utc?: boolean | null;\n};\n\nclass TimeRangeSelector extends PureComponent<Props, State> {\n  static defaultProps = defaultProps;\n\n  constructor(props: Props) {\n    super(props);\n\n    let start: Date | undefined = undefined;\n    let end: Date | undefined = undefined;\n\n    if (props.start && props.end) {\n      start = getInternalDate(props.start, props.utc);\n      end = getInternalDate(props.end, props.utc);\n    }\n\n    this.state = {\n      // if utc is not null and not undefined, then use value of `props.utc` (it can be false)\n      // otherwise if no value is supplied, the default should be the user's timezone preference\n      utc: defined(props.utc) ? props.utc : getUserTimezone() === 'UTC',\n      isOpen: false,\n      hasChanges: false,\n      hasDateRangeErrors: false,\n      start,\n      end,\n      relative: props.relative,\n    };\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const {onToggleSelector} = this.props;\n    const currState = this.state;\n\n    if (onToggleSelector && prevState.isOpen !== currState.isOpen) {\n      onToggleSelector(currState.isOpen);\n    }\n  }\n\n  callCallback = (callback: Props['onChange'], datetime: ChangeData) => {\n    if (typeof callback !== 'function') {\n      return;\n    }\n\n    if (!datetime.start && !datetime.end) {\n      callback(datetime);\n      return;\n    }\n\n    // Change local date into either UTC or local time (local time defined by user preference)\n    callback({\n      ...datetime,\n      start: getDateWithTimezoneInUtc(datetime.start, this.state.utc),\n      end: getDateWithTimezoneInUtc(datetime.end, this.state.utc),\n    });\n  };\n\n  handleCloseMenu = () => {\n    const {relative, start, end, utc} = this.state;\n\n    if (this.state.hasChanges) {\n      // Only call update if we close when absolute date is selected\n      this.handleUpdate({relative, start, end, utc});\n    } else {\n      this.setState({isOpen: false});\n    }\n  };\n\n  handleUpdate = (datetime: ChangeData) => {\n    const {onUpdate} = this.props;\n\n    this.setState(\n      {\n        isOpen: false,\n        hasChanges: false,\n      },\n      () => {\n        this.callCallback(onUpdate, datetime);\n      }\n    );\n  };\n\n  handleSelect = (item: Item) => {\n    if (item.value === 'absolute') {\n      this.handleAbsoluteClick();\n      return;\n    }\n    this.handleSelectRelative(item.value);\n  };\n\n  handleAbsoluteClick = () => {\n    const {relative, onChange, defaultPeriod, defaultAbsolute, start, end} = this.props;\n\n    // If we already have a start/end we don't have to set a default\n    if (start && end) {\n      return;\n    }\n\n    // Set default range to equivalent of last relative period,\n    // or use default stats period\n    const newDateTime: ChangeData = {\n      relative: null,\n      start: defaultAbsolute?.start\n        ? defaultAbsolute.start\n        : getPeriodAgo(\n            'hours',\n            parsePeriodToHours(relative || defaultPeriod || DEFAULT_STATS_PERIOD)\n          ).toDate(),\n      end: defaultAbsolute?.end ? defaultAbsolute.end : new Date(),\n    };\n\n    if (defined(this.props.utc)) {\n      newDateTime.utc = this.state.utc;\n    }\n\n    this.setState({\n      hasChanges: true,\n      ...newDateTime,\n      start: newDateTime.start,\n      end: newDateTime.end,\n    });\n    this.callCallback(onChange, newDateTime);\n  };\n\n  handleSelectRelative = (value: string) => {\n    const {onChange} = this.props;\n    const newDateTime: ChangeData = {\n      relative: value,\n      start: undefined,\n      end: undefined,\n    };\n    this.setState(newDateTime);\n    this.callCallback(onChange, newDateTime);\n    this.handleUpdate(newDateTime);\n  };\n\n  handleClear = () => {\n    const {onChange, defaultPeriod} = this.props;\n\n    const newDateTime: ChangeData = {\n      relative: defaultPeriod || DEFAULT_STATS_PERIOD,\n      start: undefined,\n      end: undefined,\n      utc: null,\n    };\n    this.setState(newDateTime);\n    this.callCallback(onChange, newDateTime);\n    this.handleUpdate(newDateTime);\n  };\n\n  handleSelectDateRange = ({\n    start,\n    end,\n    hasDateRangeErrors = false,\n  }: DateRangeChangeData) => {\n    if (hasDateRangeErrors) {\n      this.setState({hasDateRangeErrors});\n      return;\n    }\n\n    const {onChange} = this.props;\n\n    const newDateTime: ChangeData = {\n      relative: null,\n      start,\n      end,\n    };\n\n    if (defined(this.props.utc)) {\n      newDateTime.utc = this.state.utc;\n    }\n\n    this.setState({hasChanges: true, hasDateRangeErrors, ...newDateTime});\n    this.callCallback(onChange, newDateTime);\n  };\n\n  handleUseUtc = () => {\n    const {onChange, router} = this.props;\n    let {start, end} = this.props;\n\n    this.setState(state => {\n      const utc = !state.utc;\n\n      if (!start) {\n        start = getDateWithTimezoneInUtc(state.start, state.utc);\n      }\n\n      if (!end) {\n        end = getDateWithTimezoneInUtc(state.end, state.utc);\n      }\n\n      analytics('dateselector.utc_changed', {\n        utc,\n        path: getRouteStringFromRoutes(router.routes),\n        org_id: parseInt(this.props.organization.id, 10),\n      });\n\n      const newDateTime = {\n        relative: null,\n        start: utc ? getLocalToSystem(start) : getUtcToSystem(start),\n        end: utc ? getLocalToSystem(end) : getUtcToSystem(end),\n        utc,\n      };\n      this.callCallback(onChange, newDateTime);\n\n      return {\n        hasChanges: true,\n        ...newDateTime,\n      };\n    });\n  };\n\n  handleOpen = () => {\n    this.setState({isOpen: true});\n    // Start loading react-date-picker\n    import('../timeRangeSelector/dateRange/index');\n  };\n\n  render() {\n    const {\n      defaultPeriod,\n      showAbsolute,\n      showRelative,\n      organization,\n      hint,\n      label,\n      relativeOptions,\n      maxPickableDays,\n      customDropdownButton,\n      detached,\n      alignDropdown,\n      showPin,\n    } = this.props;\n    const {start, end, relative} = this.state;\n\n    const shouldShowAbsolute = showAbsolute;\n    const shouldShowRelative = showRelative;\n    const isAbsoluteSelected = !!start && !!end;\n\n    const summary =\n      isAbsoluteSelected && start && end ? (\n        <DateSummary start={start} end={end} />\n      ) : (\n        getRelativeSummary(\n          relative || defaultPeriod || DEFAULT_STATS_PERIOD,\n          relativeOptions\n        )\n      );\n\n    return (\n      <SelectorItemsHook\n        shouldShowAbsolute={shouldShowAbsolute}\n        shouldShowRelative={shouldShowRelative}\n        relativePeriods={relativeOptions}\n        handleSelectRelative={this.handleSelectRelative}\n      >\n        {items => (\n          <ClassNames>\n            {({css}) => (\n              <StyledDropdownAutoComplete\n                allowActorToggle\n                alignMenu={alignDropdown ?? (isAbsoluteSelected ? 'right' : 'left')}\n                isOpen={this.state.isOpen}\n                onOpen={this.handleOpen}\n                onClose={this.handleCloseMenu}\n                hideInput={!shouldShowRelative}\n                closeOnSelect={false}\n                blendCorner={false}\n                maxHeight={400}\n                detached={detached}\n                items={items}\n                searchPlaceholder={t('Filter time range')}\n                rootClassName={css`\n                  position: relative;\n                  display: flex;\n                  height: 100%;\n                `}\n                inputActions={\n                  showPin ? (\n                    <StyledPinButton size=\"xsmall\" filter=\"datetime\" />\n                  ) : undefined\n                }\n                onSelect={this.handleSelect}\n                subPanel={\n                  isAbsoluteSelected && (\n                    <AbsoluteRangeWrap>\n                      <DateRangeHook\n                        start={start ?? null}\n                        end={end ?? null}\n                        organization={organization}\n                        showTimePicker\n                        utc={this.state.utc}\n                        onChange={this.handleSelectDateRange}\n                        onChangeUtc={this.handleUseUtc}\n                        maxPickableDays={maxPickableDays}\n                      />\n                      <SubmitRow>\n                        <MultipleSelectorSubmitRow\n                          onSubmit={this.handleCloseMenu}\n                          disabled={\n                            !this.state.hasChanges || this.state.hasDateRangeErrors\n                          }\n                        />\n                      </SubmitRow>\n                    </AbsoluteRangeWrap>\n                  )\n                }\n              >\n                {({isOpen, getActorProps}) =>\n                  customDropdownButton ? (\n                    customDropdownButton({getActorProps, isOpen})\n                  ) : (\n                    <StyledHeaderItem\n                      data-test-id=\"page-filter-timerange-selector\"\n                      icon={label ?? <IconCalendar />}\n                      isOpen={isOpen}\n                      hasSelected={\n                        (!!this.props.relative &&\n                          this.props.relative !== defaultPeriod) ||\n                        isAbsoluteSelected\n                      }\n                      hasChanges={this.state.hasChanges}\n                      onClear={this.handleClear}\n                      allowClear\n                      hint={hint}\n                      {...getActorProps()}\n                    >\n                      {getDynamicText({\n                        value: summary,\n                        fixed: 'start to end',\n                      })}\n                    </StyledHeaderItem>\n                  )\n                }\n              </StyledDropdownAutoComplete>\n            )}\n          </ClassNames>\n        )}\n      </SelectorItemsHook>\n    );\n  }\n}\n\nconst TimeRangeRoot = styled('div')`\n  position: relative;\n`;\n\nconst StyledDropdownAutoComplete = styled(DropdownAutoComplete)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  position: absolute;\n  top: 100%;\n\n  ${p =>\n    !p.detached &&\n    `\n    margin-top: 0;\n    border-radius: ${p.theme.borderRadiusBottom};\n  `};\n`;\n\nconst StyledHeaderItem = styled(HeaderItem)`\n  height: 100%;\n`;\n\nconst AbsoluteRangeWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SubmitRow = styled('div')`\n  height: 100%;\n  padding: ${space(0.5)} ${space(1)};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  border-left: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledPinButton = styled(PageFilterPinButton)`\n  margin: 0 ${space(1)};\n`;\n\nexport default withRouter(TimeRangeSelector);\n\nexport {TimeRangeRoot};\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst PageHeading = styled('h1')<{withMargins?: boolean}>`\n  ${p => p.theme.text.pageTitle};\n  color: ${p => p.theme.headingColor};\n  margin: 0;\n  margin-bottom: ${p => p.withMargins && space(3)};\n  margin-top: ${p => p.withMargins && space(1)};\n`;\n\nexport default PageHeading;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\n\ntype BaseProps = {\n  withPadding?: boolean;\n};\n\nconst PanelBody = styled('div')<BaseProps>`\n  ${p => p.withPadding && `padding: ${space(2)}`};\n  ${textStyles};\n`;\n\nexport default PanelBody;\n","import styled from '@emotion/styled';\n\nconst PanelFooter = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  color: ${p => p.theme.subText};\n  font-size: 14px;\n`;\n\nexport default PanelFooter;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\n\ntype Props = React.ComponentProps<typeof Alert>;\n\n// Margin bottom should probably be a different prop\nconst PanelAlert = styled(({...props}: Props) => <Alert {...props} showIcon system />)`\n  margin: 0 0 1px 0;\n  border-radius: 0;\n  box-shadow: none;\n\n  &:last-child {\n    border-bottom: none;\n    margin: 0;\n    border-radius: 0 0 4px 4px;\n  }\n`;\n\nexport default PanelAlert;\n","import isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport Panel from './panel';\n\nexport type PanelTableProps = {\n  /**\n   * Headers of the table.\n   */\n  headers: React.ReactNode[];\n\n  /**\n   * The body of the table. Make sure the number of children elements are\n   * multiples of the length of headers.\n   */\n  children?: React.ReactNode | (() => React.ReactNode);\n\n  className?: string;\n\n  /**\n   * Renders without predefined padding on the header and body cells\n   */\n  disablePadding?: boolean;\n\n  /**\n   * Action to display when isEmpty is true\n   */\n  emptyAction?: React.ReactNode;\n  /**\n   * Message to use for `<EmptyStateWarning>`\n   */\n  emptyMessage?: React.ReactNode;\n\n  /**\n   * Displays an `<EmptyStateWarning>` if true\n   */\n  isEmpty?: boolean;\n\n  /**\n   * If this is true, then display a loading indicator\n   */\n  isLoading?: boolean;\n\n  /**\n   * A custom loading indicator.\n   */\n  loader?: React.ReactNode;\n\n  /**\n   * If true, scrolling headers out of view will pin to the top of container.\n   */\n  stickyHeaders?: boolean;\n};\n\n/**\n * Bare bones table generates a CSS grid template based on the content.\n *\n * The number of children elements should be a multiple of `this.props.columns` to have\n * it look ok.\n *\n *\n * Potential customizations:\n * - [ ] Add borders for columns to make them more like cells\n * - [ ] Add prop to disable borders for rows\n * - [ ] We may need to wrap `children` with our own component (similar to what we're doing\n *       with `headers`. Then we can get rid of that gross `> *` selector\n * - [ ] Allow customization of wrappers (Header and body cells if added)\n */\nconst PanelTable = ({\n  headers,\n  children,\n  isLoading,\n  isEmpty,\n  disablePadding,\n  className,\n  emptyMessage = t('There are no items to display'),\n  emptyAction,\n  loader,\n  stickyHeaders = false,\n  ...props\n}: PanelTableProps) => {\n  const shouldShowLoading = isLoading === true;\n  const shouldShowEmptyMessage = !shouldShowLoading && isEmpty;\n  const shouldShowContent = !shouldShowLoading && !shouldShowEmptyMessage;\n\n  return (\n    <Wrapper\n      columns={headers.length}\n      disablePadding={disablePadding}\n      className={className}\n      hasRows={shouldShowContent}\n      {...props}\n    >\n      {headers.map((header, i) => (\n        <PanelTableHeader key={i} sticky={stickyHeaders}>\n          {header}\n        </PanelTableHeader>\n      ))}\n\n      {shouldShowLoading && (\n        <LoadingWrapper>{loader || <LoadingIndicator />}</LoadingWrapper>\n      )}\n\n      {shouldShowEmptyMessage && (\n        <TableEmptyStateWarning>\n          <p>{emptyMessage}</p>\n          {emptyAction}\n        </TableEmptyStateWarning>\n      )}\n\n      {shouldShowContent && getContent(children)}\n    </Wrapper>\n  );\n};\n\nfunction getContent(children: PanelTableProps['children']) {\n  if (typeof children === 'function') {\n    return children();\n  }\n\n  return children;\n}\n\ntype WrapperProps = {\n  /**\n   * The number of columns the table will have, this is derived from the headers list\n   */\n  columns: number;\n  disablePadding: PanelTableProps['disablePadding'];\n  hasRows: boolean;\n};\n\nconst LoadingWrapper = styled('div')``;\n\nconst TableEmptyStateWarning = styled(EmptyStateWarning)``;\n\nconst Wrapper = styled(Panel, {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'columns',\n})<WrapperProps>`\n  display: grid;\n  grid-template-columns: repeat(${p => p.columns}, auto);\n\n  > * {\n    ${p => (p.disablePadding ? '' : `padding: ${space(2)};`)}\n\n    &:nth-last-child(n + ${p => (p.hasRows ? p.columns + 1 : 0)}) {\n      border-bottom: 1px solid ${p => p.theme.border};\n    }\n  }\n\n  > ${/* sc-selector */ TableEmptyStateWarning}, > ${/* sc-selector */ LoadingWrapper} {\n    border: none;\n    grid-column: auto / span ${p => p.columns};\n  }\n\n  /* safari needs an overflow value or the contents will spill out */\n  overflow: auto;\n`;\n\nexport const PanelTableHeader = styled('div')<{sticky: boolean}>`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 600;\n  text-transform: uppercase;\n  border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n  background: ${p => p.theme.backgroundSecondary};\n  line-height: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-height: 45px;\n\n  ${p =>\n    p.sticky &&\n    `\n    position: sticky;\n    top: 0;\n    z-index: ${p.theme.zIndex.initial};\n  `}\n`;\n\nexport default PanelTable;\n","import styled from '@emotion/styled';\n\nimport {Theme} from 'sentry/utils/theme';\n\ntype Variant = 'small' | 'large';\n\ntype Props = {\n  /**\n   * The value of the progress indicator for the determinate variant. Value between 0 and 100\n   */\n  value: number;\n  /**\n   * Styles applied to the component's root\n   */\n  className?: string;\n  /**\n   * The style of the progressBar\n   */\n  variant?: Variant;\n};\n\nconst getVariantStyle = ({\n  variant = 'small',\n  theme,\n}: Pick<Props, 'variant'> & {theme: Theme}) => {\n  if (variant === 'large') {\n    return `\n      height: 24px;\n      border-radius: 24px;\n      border: 1px solid ${theme.border};\n      box-shadow: inset 0px 1px 3px rgba(0, 0, 0, 0.06);\n      :before {\n        left: 6px;\n        right: 6px;\n        height: 14px;\n        top: calc(50% - 14px/2);\n        border-radius: 20px;\n        max-width: calc(100% - 12px);\n      }\n    `;\n  }\n\n  return `\n    height: 6px;\n    border-radius: 100px;\n    background: ${theme.progressBackground};\n    :before {\n      top: 0;\n      left: 0;\n      height: 100%;\n    }\n  `;\n};\n\nconst ProgressBar = styled(({className, value}: Props) => (\n  <div\n    role=\"progressbar\"\n    aria-valuenow={value}\n    aria-valuemin={0}\n    aria-valuemax={100}\n    className={className}\n  />\n))`\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  :before {\n    content: ' ';\n    width: ${p => p.value}%;\n    background-color: ${p => p.theme.progressBar};\n    position: absolute;\n  }\n\n  ${getVariantStyle};\n`;\n\nexport default ProgressBar;\n","import {useEffect, useState} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport partition from 'lodash/partition';\n\nimport {updateProjects} from 'sentry/actionCreators/pageFilters';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Badge from 'sentry/components/badge';\nimport PageFilterDropdownButton from 'sentry/components/organizations/pageFilters/pageFilterDropdownButton';\nimport PageFilterPinIndicator from 'sentry/components/organizations/pageFilters/pageFilterPinIndicator';\nimport ProjectSelector from 'sentry/components/organizations/projectSelector';\nimport PlatformList from 'sentry/components/platformList';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {IconProject} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {MinimalProject} from 'sentry/types';\nimport {trimSlug} from 'sentry/utils/trimSlug';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype ProjectSelectorProps = React.ComponentProps<typeof ProjectSelector>;\n\ntype Props = WithRouterProps & {\n  /**\n   * Message to display at the bottom of project list\n   */\n  footerMessage?: React.ReactNode;\n\n  /**\n   * If a forced project is passed, selection is disabled\n   */\n  forceProject?: MinimalProject | null;\n\n  /**\n   * Subject that will be used in a tooltip that is shown on a lock icon hover\n   * E.g. This 'issue' is unique to a project\n   */\n  lockedMessageSubject?: string;\n\n  /**\n   * Max character length for the dropdown title. Default is 20. This number\n   * is used to determine how many projects to show, and how much to truncate.\n   */\n  maxTitleLength?: number;\n\n  /**\n   * Reset these URL params when we fire actions (custom routing only)\n   */\n  resetParamsOnChange?: string[];\n\n  /**\n   * A project will be forced from parent component (selection is disabled, and if user\n   * does not have multi-project support enabled, it will not try to auto select a project).\n   *\n   * Project will be specified in the prop `forceProject` (since its data is async)\n   */\n  shouldForceProject?: boolean;\n\n  /**\n   * If true, there will be a back to issues stream icon link\n   */\n  showIssueStreamLink?: boolean;\n\n  /**\n   * If true, there will be a project settings icon link\n   * (forceProject prop needs to be present to know the right project slug)\n   */\n  showProjectSettingsLink?: boolean;\n\n  /**\n   * Slugs of projects to restrict the project selector to\n   */\n  specificProjectSlugs?: string[];\n};\n\nfunction ProjectPageFilter({\n  router,\n  specificProjectSlugs,\n  maxTitleLength = 30,\n  resetParamsOnChange = [],\n  ...otherProps\n}: Props) {\n  const [currentSelectedProjects, setCurrentSelectedProjects] = useState<number[] | null>(\n    null\n  );\n  const {projects, initiallyLoaded: projectsLoaded} = useProjects();\n  const organization = useOrganization();\n  const {selection, isReady, desyncedFilters} = usePageFilters();\n\n  useEffect(\n    () => {\n      if (!isEqual(selection.projects, currentSelectedProjects)) {\n        setCurrentSelectedProjects(selection.projects);\n      }\n    },\n    // We only care to update the currentSelectedProjects when the project\n    // selection has changed\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selection.projects]\n  );\n\n  const handleChangeProjects = (newProjects: number[]) => {\n    setCurrentSelectedProjects(newProjects);\n  };\n\n  const handleApplyChange = (newProjects: number[]) => {\n    updateProjects(newProjects, router, {\n      save: true,\n      resetParams: resetParamsOnChange,\n      environments: [], // Clear environments when switching projects\n    });\n  };\n\n  const specifiedProjects = specificProjectSlugs\n    ? projects.filter(project => specificProjectSlugs.includes(project.slug))\n    : projects;\n\n  const [memberProjects, otherProjects] = partition(\n    specifiedProjects,\n    project => project.isMember\n  );\n\n  const {isSuperuser} = ConfigStore.get('user');\n  const isOrgAdmin = organization.access.includes('org:admin');\n  const nonMemberProjects = isSuperuser || isOrgAdmin ? otherProjects : [];\n\n  const customProjectDropdown: ProjectSelectorProps['customDropdownButton'] = ({\n    actions,\n    selectedProjects,\n    isOpen,\n  }) => {\n    const selectedProjectIds = new Set(selection.projects);\n    const hasSelected = !!selectedProjects.length;\n\n    // Show 2 projects only if the combined string does not exceed maxTitleLength.\n    // Otherwise show only 1 project.\n    const projectsToShow =\n      selectedProjects[0]?.slug?.length + selectedProjects[1]?.slug?.length <=\n      maxTitleLength - 2\n        ? selectedProjects.slice(0, 2)\n        : selectedProjects.slice(0, 1);\n\n    const title = hasSelected\n      ? projectsToShow.map(proj => trimSlug(proj.slug, maxTitleLength)).join(', ')\n      : selectedProjectIds.has(ALL_ACCESS_PROJECTS)\n      ? t('All Projects')\n      : t('My Projects');\n\n    const icon = hasSelected ? (\n      <PlatformList\n        platforms={projectsToShow.map(p => p.platform ?? 'other').reverse()}\n      />\n    ) : (\n      <IconProject />\n    );\n\n    return (\n      <GuideAnchor\n        target=\"new_page_filter_button\"\n        position=\"bottom\"\n        onStepComplete={actions.open}\n      >\n        <PageFilterDropdownButton\n          detached\n          hideBottomBorder={false}\n          isOpen={isOpen}\n          highlighted={desyncedFilters.has('projects')}\n          data-test-id=\"page-filter-project-selector\"\n        >\n          <DropdownTitle>\n            <PageFilterPinIndicator filter=\"projects\">{icon}</PageFilterPinIndicator>\n            <TitleContainer>{title}</TitleContainer>\n            {selectedProjects.length > projectsToShow.length && (\n              <StyledBadge text={`+${selectedProjects.length - projectsToShow.length}`} />\n            )}\n          </DropdownTitle>\n        </PageFilterDropdownButton>\n      </GuideAnchor>\n    );\n  };\n\n  const customLoadingIndicator = (\n    <PageFilterDropdownButton\n      showChevron={false}\n      disabled\n      data-test-id=\"page-filter-project-selector-loading\"\n    >\n      <DropdownTitle>\n        <IconProject />\n        <TitleContainer>{t('Loading\\u2026')}</TitleContainer>\n      </DropdownTitle>\n    </PageFilterDropdownButton>\n  );\n\n  return (\n    <ProjectSelector\n      organization={organization}\n      memberProjects={memberProjects}\n      isGlobalSelectionReady={projectsLoaded && isReady}\n      nonMemberProjects={nonMemberProjects}\n      value={currentSelectedProjects || selection.projects}\n      onChange={handleChangeProjects}\n      onApplyChange={handleApplyChange}\n      customDropdownButton={customProjectDropdown}\n      customLoadingIndicator={customLoadingIndicator}\n      detached\n      showPin\n      {...otherProps}\n    />\n  );\n}\n\nconst TitleContainer = styled('div')`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1 1 0%;\n  margin-left: ${space(1)};\n  text-align: left;\n`;\n\nconst DropdownTitle = styled('div')`\n  width: max-content;\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n`;\n\nexport default withRouter(ProjectPageFilter);\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {update} from 'sentry/actionCreators/projects';\nimport Button from 'sentry/components/button';\nimport {IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  className?: string;\n  /**\n   * Allows the bookmarked state of the project to be overriden. Useful for\n   * optimistic updates.\n   */\n  isBookmarked?: boolean;\n  onToggle?: (isBookmarked: boolean) => void;\n};\n\nconst BookmarkStar = styled(\n  ({\n    isBookmarked: isBookmarkedProp,\n    className,\n    organization,\n    project,\n    onToggle,\n  }: Props) => {\n    const api = useApi();\n\n    const isBookmarked = defined(isBookmarkedProp)\n      ? isBookmarkedProp\n      : project.isBookmarked;\n\n    const toggleProjectBookmark = (event: React.MouseEvent) => {\n      update(api, {\n        orgId: organization.slug,\n        projectId: project.slug,\n        data: {isBookmarked: !isBookmarked},\n      }).catch(() =>\n        addErrorMessage(t('Unable to toggle bookmark for %s', project.slug))\n      );\n\n      // prevent dropdowns from closing\n      event.stopPropagation();\n\n      onToggle?.(!isBookmarked);\n    };\n\n    return (\n      <Button\n        aria-label=\"Bookmark Project\"\n        aria-pressed={isBookmarked}\n        onClick={toggleProjectBookmark}\n        size=\"zero\"\n        priority=\"link\"\n        className={className}\n        icon={\n          <IconStar\n            color={isBookmarked ? 'yellow300' : 'subText'}\n            isSolid={isBookmarked}\n          />\n        }\n      />\n    );\n  }\n)`\n  &:hover svg {\n    fill: ${p =>\n      p.project.isBookmarked || p.isBookmarked ? p.theme.yellow400 : p.theme.textColor};\n  }\n`;\n\nexport default BookmarkStar;\n","import {defined} from 'sentry/utils';\n\ntype Props = {\n  count?: number | null;\n  hideIfEmpty?: boolean;\n  hideParens?: boolean;\n  max?: number;\n};\n\n/**\n * Displays a number count. If `max` is specified, then give representation\n * of count, i.e. \"1000+\"\n *\n * Render nothing by default if `count` is falsy.\n */\n\nconst QueryCount = ({count, max, hideIfEmpty = true, hideParens = false}: Props) => {\n  const countOrMax = defined(count) && defined(max) && count >= max ? `${max}+` : count;\n\n  if (hideIfEmpty && !count) {\n    return null;\n  }\n\n  return (\n    <span>\n      {!hideParens && <span>(</span>}\n      <span>{countOrMax}</span>\n      {!hideParens && <span>)</span>}\n    </span>\n  );\n};\n\nexport default QueryCount;\n","export type SidebarOrientation = 'top' | 'left';\n\nexport enum SidebarPanelKey {\n  Broadcasts = 'broadcasts',\n  OnboardingWizard = 'todos',\n  ServiceIncidents = 'statusupdate',\n}\n\nexport type CommonSidebarProps = {\n  /**\n   * Is the sidebar collapsed?\n   */\n  collapsed: boolean;\n  /**\n   * The currently shown sidebar flyout panel\n   */\n  currentPanel: SidebarPanelKey | '';\n  /**\n   * Triggered when the panel should be hidden\n   */\n  hidePanel: () => void;\n  /**\n   * Triggered when the panel should be opened\n   */\n  onShowPanel: () => void;\n  /**\n   * The orientation of the sidebar\n   */\n  orientation: SidebarOrientation;\n};\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  title: React.ReactNode;\n  children?: React.ReactNode;\n  icon?: React.ReactNode;\n};\n\n/**\n * Used to add the new sidebar section on a page.\n */\nfunction SidebarSection({title, children, icon, ...props}: Props) {\n  return (\n    <Wrapper>\n      <Heading {...props}>\n        {title}\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n      </Heading>\n      <SectionContent>{children}</SectionContent>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst Heading = styled('h6')`\n  color: ${p => p.theme.subText};\n  display: flex;\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n`;\n\nconst IconWrapper = styled('div')`\n  color: ${p => p.theme.subText};\n  margin-left: ${space(0.5)};\n`;\n\nconst SectionContent = styled('div')`\n  color: ${p => p.theme.subText};\n`;\n\nexport default SidebarSection;\n","import {Component} from 'react';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport {t} from 'sentry/locale';\nimport SelectedGroupStore from 'sentry/stores/selectedGroupStore';\n\ntype Props = {\n  disabled: boolean;\n  id: string;\n};\n\ntype State = {\n  isSelected: boolean;\n};\n\nclass GroupCheckBox extends Component<Props, State> {\n  state: State = {\n    isSelected: SelectedGroupStore.isSelected(this.props.id),\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        isSelected: SelectedGroupStore.isSelected(nextProps.id),\n      });\n    }\n  }\n\n  shouldComponentUpdate(_nextProps, nextState) {\n    return nextState.isSelected !== this.state.isSelected;\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  unsubscribe = SelectedGroupStore.listen(() => {\n    this.onSelectedGroupChange();\n  }, undefined);\n\n  onSelectedGroupChange() {\n    const isSelected = SelectedGroupStore.isSelected(this.props.id);\n    if (isSelected !== this.state.isSelected) {\n      this.setState({\n        isSelected,\n      });\n    }\n  }\n\n  handleSelect = () => {\n    const id = this.props.id;\n    SelectedGroupStore.toggleSelect(id);\n  };\n\n  render() {\n    const {disabled, id} = this.props;\n    const {isSelected} = this.state;\n\n    return (\n      <Checkbox\n        aria-label={t('Select Issue')}\n        value={id}\n        checked={isSelected}\n        onChange={this.handleSelect}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport default GroupCheckBox;\n","import {Component, Fragment} from 'react';\nimport {css, Theme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport type {LocationDescriptor} from 'history';\n\nimport AssigneeSelector from 'sentry/components/assigneeSelector';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Count from 'sentry/components/count';\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport EventOrGroupExtraDetails from 'sentry/components/eventOrGroupExtraDetails';\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport Link from 'sentry/components/links/link';\nimport MenuItem from 'sentry/components/menuItem';\nimport {getRelativeSummary} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport {PanelItem} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport ProgressBar from 'sentry/components/progressBar';\nimport GroupChart from 'sentry/components/stream/groupChart';\nimport GroupCheckBox from 'sentry/components/stream/groupCheckBox';\nimport TimeSince from 'sentry/components/timeSince';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport SelectedGroupStore from 'sentry/stores/selectedGroupStore';\nimport space from 'sentry/styles/space';\nimport {\n  Group,\n  GroupReprocessing,\n  InboxDetails,\n  NewQuery,\n  Organization,\n  PageFilters,\n  User,\n} from 'sentry/types';\nimport {defined, percent, valueIsEqual} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {queryToObj} from 'sentry/utils/stream';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport {TimePeriodType} from 'sentry/views/alerts/rules/metric/details/constants';\nimport {\n  DISCOVER_EXCLUSION_FIELDS,\n  getTabs,\n  isForReviewQuery,\n  Query,\n} from 'sentry/views/issueList/utils';\n\nexport const DEFAULT_STREAM_GROUP_STATS_PERIOD = '24h';\n\nconst defaultProps = {\n  statsPeriod: DEFAULT_STREAM_GROUP_STATS_PERIOD,\n  canSelect: true,\n  withChart: true,\n  useFilteredStats: false,\n  useTintRow: true,\n  narrowGroups: false,\n};\n\ntype Props = {\n  id: string;\n  organization: Organization;\n  selection: PageFilters;\n  customStatsPeriod?: TimePeriodType;\n  displayReprocessingLayout?: boolean;\n  hasGuideAnchor?: boolean;\n  index?: number;\n  memberList?: User[];\n  query?: string;\n  // TODO(ts): higher order functions break defaultprops export types\n  queryFilterDescription?: string;\n  showInboxTime?: boolean;\n} & Partial<typeof defaultProps>;\n\ntype State = {\n  actionTaken: boolean;\n  data: Group;\n  reviewed: boolean;\n};\n\nclass StreamGroup extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = this.getInitialState();\n\n  getInitialState(): State {\n    const {id, useFilteredStats} = this.props;\n\n    const data = GroupStore.get(id) as Group;\n\n    return {\n      data: {\n        ...data,\n        filtered: useFilteredStats ? data.filtered : null,\n      },\n      reviewed: false,\n      actionTaken: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.id !== this.props.id ||\n      nextProps.useFilteredStats !== this.props.useFilteredStats\n    ) {\n      const data = GroupStore.get(this.props.id) as Group;\n\n      this.setState({\n        data: {\n          ...data,\n          filtered: nextProps.useFilteredStats ? data.filtered : null,\n        },\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    if (nextProps.statsPeriod !== this.props.statsPeriod) {\n      return true;\n    }\n    if (!valueIsEqual(this.state.data, nextState.data)) {\n      return true;\n    }\n    return false;\n  }\n\n  componentWillUnmount() {\n    callIfFunction(this.listener);\n  }\n\n  listener = GroupStore.listen(itemIds => this.onGroupChange(itemIds), undefined);\n\n  onGroupChange(itemIds: Set<string>) {\n    const {id, query} = this.props;\n    if (!itemIds.has(id)) {\n      return;\n    }\n\n    const actionTaken = this.state.data.status !== 'unresolved';\n    const data = GroupStore.get(id) as Group;\n    this.setState(state => {\n      // When searching is:for_review and the inbox reason is removed\n      const reviewed =\n        state.reviewed ||\n        (isForReviewQuery(query) &&\n          (state.data.inbox as InboxDetails)?.reason !== undefined &&\n          data.inbox === false);\n      return {data, reviewed, actionTaken};\n    });\n  }\n\n  /** Shared between two events */\n  sharedAnalytics() {\n    const {query, organization} = this.props;\n    const {data} = this.state;\n    const tab = getTabs(organization).find(([tabQuery]) => tabQuery === query)?.[1];\n    const owners = data?.owners || [];\n    return {\n      organization,\n      group_id: data.id,\n      tab: tab?.analyticsName || 'other',\n      was_shown_suggestion: owners.length > 0,\n    };\n  }\n\n  trackClick = () => {\n    const {query, organization} = this.props;\n    const {data} = this.state;\n    if (query === Query.FOR_REVIEW) {\n      trackAdvancedAnalyticsEvent('inbox_tab.issue_clicked', {\n        organization,\n        group_id: data.id,\n      });\n    }\n\n    if (query !== undefined) {\n      trackAdvancedAnalyticsEvent('issues_stream.issue_clicked', this.sharedAnalytics());\n    }\n  };\n\n  trackAssign: React.ComponentProps<typeof AssigneeSelector>['onAssign'] = (\n    type,\n    _assignee,\n    suggestedAssignee\n  ) => {\n    const {query} = this.props;\n    if (query !== undefined) {\n      trackAdvancedAnalyticsEvent('issues_stream.issue_assigned', {\n        ...this.sharedAnalytics(),\n        did_assign_suggestion: !!suggestedAssignee,\n        assigned_suggestion_reason: suggestedAssignee?.suggestedReason,\n        assigned_type: type,\n      });\n    }\n  };\n\n  toggleSelect = (evt: React.MouseEvent<HTMLDivElement>) => {\n    const targetElement = evt.target as Partial<HTMLElement>;\n\n    if (targetElement?.tagName?.toLowerCase() === 'a') {\n      return;\n    }\n\n    if (targetElement?.tagName?.toLowerCase() === 'input') {\n      return;\n    }\n\n    let e = targetElement;\n    while (e.parentElement) {\n      if (e?.tagName?.toLowerCase() === 'a') {\n        return;\n      }\n      e = e.parentElement!;\n    }\n\n    SelectedGroupStore.toggleSelect(this.state.data.id);\n  };\n\n  getDiscoverUrl(isFiltered?: boolean): LocationDescriptor {\n    const {organization, query, selection, customStatsPeriod} = this.props;\n    const {data} = this.state;\n\n    // when there is no discover feature open events page\n    const hasDiscoverQuery = organization.features.includes('discover-basic');\n\n    const queryTerms: string[] = [];\n\n    if (isFiltered && typeof query === 'string') {\n      const queryObj = queryToObj(query);\n      for (const queryTag in queryObj) {\n        if (!DISCOVER_EXCLUSION_FIELDS.includes(queryTag)) {\n          const queryVal = queryObj[queryTag].includes(' ')\n            ? `\"${queryObj[queryTag]}\"`\n            : queryObj[queryTag];\n          queryTerms.push(`${queryTag}:${queryVal}`);\n        }\n      }\n\n      if (queryObj.__text) {\n        queryTerms.push(queryObj.__text);\n      }\n    }\n\n    const commonQuery = {projects: [Number(data.project.id)]};\n\n    const searchQuery = (queryTerms.length ? ' ' : '') + queryTerms.join(' ');\n\n    if (hasDiscoverQuery) {\n      const {period, start, end, utc} = customStatsPeriod ?? (selection.datetime || {});\n\n      const discoverQuery: NewQuery = {\n        ...commonQuery,\n        id: undefined,\n        name: data.title || data.type,\n        fields: ['title', 'release', 'environment', 'user', 'timestamp'],\n        orderby: '-timestamp',\n        query: `issue.id:${data.id}${searchQuery}`,\n        version: 2,\n      };\n\n      if (!!start && !!end) {\n        discoverQuery.start = new Date(start).toISOString();\n        discoverQuery.end = new Date(end).toISOString();\n        if (utc) {\n          discoverQuery.utc = true;\n        }\n      } else {\n        discoverQuery.range = period || DEFAULT_STATS_PERIOD;\n      }\n\n      const discoverView = EventView.fromSavedQuery(discoverQuery);\n      return discoverView.getResultsViewUrlTarget(organization.slug);\n    }\n\n    return {\n      pathname: `/organizations/${organization.slug}/issues/${data.id}/events/`,\n      query: {\n        ...commonQuery,\n        query: searchQuery,\n      },\n    };\n  }\n\n  renderReprocessingColumns() {\n    const {data} = this.state;\n    const {statusDetails, count} = data as GroupReprocessing;\n    const {info, pendingEvents} = statusDetails;\n\n    if (!info) {\n      return null;\n    }\n\n    const {totalEvents, dateCreated} = info;\n\n    const remainingEventsToReprocess = totalEvents - pendingEvents;\n    const remainingEventsToReprocessPercent = percent(\n      remainingEventsToReprocess,\n      totalEvents\n    );\n\n    return (\n      <Fragment>\n        <StartedColumn>\n          <TimeSince date={dateCreated} />\n        </StartedColumn>\n        <EventsReprocessedColumn>\n          {!defined(count) ? (\n            <Placeholder height=\"17px\" />\n          ) : (\n            <Fragment>\n              <Count value={remainingEventsToReprocess} />\n              {'/'}\n              <Count value={totalEvents} />\n            </Fragment>\n          )}\n        </EventsReprocessedColumn>\n        <ProgressColumn>\n          <ProgressBar value={remainingEventsToReprocessPercent} />\n        </ProgressColumn>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {data, reviewed, actionTaken} = this.state;\n    const {\n      index,\n      query,\n      hasGuideAnchor,\n      canSelect,\n      memberList,\n      withChart,\n      statsPeriod,\n      selection,\n      organization,\n      displayReprocessingLayout,\n      showInboxTime,\n      useFilteredStats,\n      useTintRow,\n      customStatsPeriod,\n      queryFilterDescription,\n      narrowGroups,\n    } = this.props;\n\n    const {period, start, end} = selection.datetime || {};\n    const summary =\n      customStatsPeriod?.label.toLowerCase() ??\n      (!!start && !!end\n        ? 'time range'\n        : getRelativeSummary(period || DEFAULT_STATS_PERIOD).toLowerCase());\n\n    // Use data.filtered to decide on which value to use\n    // In case of the query has filters but we avoid showing both sets of filtered/unfiltered stats\n    // we use useFilteredStats param passed to Group for deciding\n    const primaryCount = data.filtered ? data.filtered.count : data.count;\n    const secondaryCount = data.filtered ? data.count : undefined;\n    const primaryUserCount = data.filtered ? data.filtered.userCount : data.userCount;\n    const secondaryUserCount = data.filtered ? data.userCount : undefined;\n\n    const showSecondaryPoints = Boolean(\n      withChart && data && data.filtered && statsPeriod && useFilteredStats\n    );\n\n    return (\n      <Wrapper\n        data-test-id=\"group\"\n        onClick={displayReprocessingLayout ? undefined : this.toggleSelect}\n        reviewed={reviewed}\n        unresolved={data.status === 'unresolved'}\n        actionTaken={actionTaken}\n        useTintRow={useTintRow ?? true}\n      >\n        {canSelect && (\n          <GroupCheckBoxWrapper>\n            <GroupCheckBox id={data.id} disabled={!!displayReprocessingLayout} />\n          </GroupCheckBoxWrapper>\n        )}\n        <GroupSummary canSelect={!!canSelect}>\n          <EventOrGroupHeader\n            index={index}\n            organization={organization}\n            includeLink\n            data={data}\n            query={query}\n            size=\"normal\"\n            onClick={this.trackClick}\n          />\n          <EventOrGroupExtraDetails data={data} showInboxTime={showInboxTime} />\n        </GroupSummary>\n        {hasGuideAnchor && <GuideAnchor target=\"issue_stream\" />}\n        {withChart && !displayReprocessingLayout && (\n          <ChartWrapper\n            className={`hidden-xs hidden-sm ${narrowGroups ? 'hidden-md' : ''}`}\n          >\n            {!data.filtered?.stats && !data.stats ? (\n              <Placeholder height=\"24px\" />\n            ) : (\n              <GroupChart\n                statsPeriod={statsPeriod!}\n                data={data}\n                showSecondaryPoints={showSecondaryPoints}\n                showMarkLine\n              />\n            )}\n          </ChartWrapper>\n        )}\n        {displayReprocessingLayout ? (\n          this.renderReprocessingColumns()\n        ) : (\n          <Fragment>\n            <EventUserWrapper>\n              {!defined(primaryCount) ? (\n                <Placeholder height=\"18px\" />\n              ) : (\n                <DropdownMenu isNestedDropdown>\n                  {({isOpen, getRootProps, getActorProps, getMenuProps}) => {\n                    const topLevelCx = classNames('dropdown', {\n                      'anchor-middle': true,\n                      open: isOpen,\n                    });\n\n                    return (\n                      <GuideAnchor target=\"dynamic_counts\" disabled={!hasGuideAnchor}>\n                        <span\n                          {...getRootProps({\n                            className: topLevelCx,\n                          })}\n                        >\n                          <span {...getActorProps({})}>\n                            <div className=\"dropdown-actor-title\">\n                              <PrimaryCount value={primaryCount} />\n                              {secondaryCount !== undefined && useFilteredStats && (\n                                <SecondaryCount value={secondaryCount} />\n                              )}\n                            </div>\n                          </span>\n                          {useFilteredStats && (\n                            <StyledDropdownList\n                              {...getMenuProps({className: 'dropdown-menu inverted'})}\n                            >\n                              {data.filtered && (\n                                <Fragment>\n                                  <StyledMenuItem to={this.getDiscoverUrl(true)}>\n                                    <MenuItemText>\n                                      {queryFilterDescription ??\n                                        t('Matching search filters')}\n                                    </MenuItemText>\n                                    <MenuItemCount value={data.filtered.count} />\n                                  </StyledMenuItem>\n                                  <MenuItem divider />\n                                </Fragment>\n                              )}\n\n                              <StyledMenuItem to={this.getDiscoverUrl()}>\n                                <MenuItemText>{t(`Total in ${summary}`)}</MenuItemText>\n                                <MenuItemCount value={data.count} />\n                              </StyledMenuItem>\n\n                              {data.lifetime && (\n                                <Fragment>\n                                  <MenuItem divider />\n                                  <StyledMenuItem>\n                                    <MenuItemText>{t('Since issue began')}</MenuItemText>\n                                    <MenuItemCount value={data.lifetime.count} />\n                                  </StyledMenuItem>\n                                </Fragment>\n                              )}\n                            </StyledDropdownList>\n                          )}\n                        </span>\n                      </GuideAnchor>\n                    );\n                  }}\n                </DropdownMenu>\n              )}\n            </EventUserWrapper>\n            <EventUserWrapper>\n              {!defined(primaryUserCount) ? (\n                <Placeholder height=\"18px\" />\n              ) : (\n                <DropdownMenu isNestedDropdown>\n                  {({isOpen, getRootProps, getActorProps, getMenuProps}) => {\n                    const topLevelCx = classNames('dropdown', {\n                      'anchor-middle': true,\n                      open: isOpen,\n                    });\n\n                    return (\n                      <span\n                        {...getRootProps({\n                          className: topLevelCx,\n                        })}\n                      >\n                        <span {...getActorProps({})}>\n                          <div className=\"dropdown-actor-title\">\n                            <PrimaryCount value={primaryUserCount} />\n                            {secondaryUserCount !== undefined && useFilteredStats && (\n                              <SecondaryCount dark value={secondaryUserCount} />\n                            )}\n                          </div>\n                        </span>\n                        {useFilteredStats && (\n                          <StyledDropdownList\n                            {...getMenuProps({className: 'dropdown-menu inverted'})}\n                          >\n                            {data.filtered && (\n                              <Fragment>\n                                <StyledMenuItem to={this.getDiscoverUrl(true)}>\n                                  <MenuItemText>\n                                    {queryFilterDescription ??\n                                      t('Matching search filters')}\n                                  </MenuItemText>\n                                  <MenuItemCount value={data.filtered.userCount} />\n                                </StyledMenuItem>\n                                <MenuItem divider />\n                              </Fragment>\n                            )}\n\n                            <StyledMenuItem to={this.getDiscoverUrl()}>\n                              <MenuItemText>{t(`Total in ${summary}`)}</MenuItemText>\n                              <MenuItemCount value={data.userCount} />\n                            </StyledMenuItem>\n\n                            {data.lifetime && (\n                              <Fragment>\n                                <MenuItem divider />\n                                <StyledMenuItem>\n                                  <MenuItemText>{t('Since issue began')}</MenuItemText>\n                                  <MenuItemCount value={data.lifetime.userCount} />\n                                </StyledMenuItem>\n                              </Fragment>\n                            )}\n                          </StyledDropdownList>\n                        )}\n                      </span>\n                    );\n                  }}\n                </DropdownMenu>\n              )}\n            </EventUserWrapper>\n            <AssigneeWrapper className=\"hidden-xs hidden-sm\">\n              <AssigneeSelector\n                id={data.id}\n                memberList={memberList}\n                onAssign={this.trackAssign}\n              />\n            </AssigneeWrapper>\n          </Fragment>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default withPageFilters(withOrganization(StreamGroup));\n\n// Position for wrapper is relative for overlay actions\nconst Wrapper = styled(PanelItem)<{\n  actionTaken: boolean;\n  reviewed: boolean;\n  unresolved: boolean;\n  useTintRow: boolean;\n}>`\n  position: relative;\n  padding: ${space(1.5)} 0;\n  line-height: 1.1;\n\n  ${p =>\n    p.useTintRow &&\n    (p.reviewed || !p.unresolved) &&\n    !p.actionTaken &&\n    css`\n      animation: tintRow 0.2s linear forwards;\n      position: relative;\n\n      /*\n       * A mask that fills the entire row and makes the text opaque. Doing this because\n       * opacity adds a stacking context in CSS so we need to apply it to another element.\n       */\n      &:after {\n        content: '';\n        pointer-events: none;\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n        background-color: ${p.theme.bodyBackground};\n        opacity: 0.4;\n      }\n\n      @keyframes tintRow {\n        0% {\n          background-color: ${p.theme.bodyBackground};\n        }\n        100% {\n          background-color: ${p.theme.backgroundSecondary};\n        }\n      }\n    `};\n`;\n\nconst GroupSummary = styled('div')<{canSelect: boolean}>`\n  overflow: hidden;\n  margin-left: ${p => space(p.canSelect ? 1 : 2)};\n  margin-right: ${space(1)};\n  flex: 1;\n  width: 66.66%;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 50%;\n  }\n`;\n\nconst GroupCheckBoxWrapper = styled('div')`\n  margin-left: ${space(2)};\n  align-self: flex-start;\n  height: 15px;\n  display: flex;\n  align-items: center;\n\n  & input[type='checkbox'] {\n    margin: 0;\n    display: block;\n  }\n`;\n\nconst primaryStatStyle = (theme: Theme) => css`\n  font-size: ${theme.fontSizeLarge};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst PrimaryCount = styled(Count)`\n  ${p => primaryStatStyle(p.theme)};\n`;\n\nconst secondaryStatStyle = (theme: Theme) => css`\n  font-size: ${theme.fontSizeLarge};\n  font-variant-numeric: tabular-nums;\n\n  :before {\n    content: '/';\n    padding-left: ${space(0.25)};\n    padding-right: 2px;\n    color: ${theme.gray300};\n  }\n`;\n\nconst SecondaryCount = styled(({value, ...p}) => <Count {...p} value={value} />)`\n  ${p => secondaryStatStyle(p.theme)}\n`;\n\nconst StyledDropdownList = styled('ul')`\n  z-index: ${p => p.theme.zIndex.hovercard};\n`;\n\ninterface MenuItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  to?: LocationDescriptor;\n}\n\nconst StyledMenuItem = styled(({to, children, ...p}: MenuItemProps) => (\n  <MenuItem noAnchor>\n    {to ? (\n      // @ts-expect-error allow target _blank for this link to open in new window\n      <Link to={to} target=\"_blank\">\n        <div {...p}>{children}</div>\n      </Link>\n    ) : (\n      <div className=\"dropdown-toggle\">\n        <div {...p}>{children}</div>\n      </div>\n    )}\n  </MenuItem>\n))`\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst menuItemStatStyles = css`\n  text-align: right;\n  font-weight: bold;\n  font-variant-numeric: tabular-nums;\n  padding-left: ${space(1)};\n`;\n\nconst MenuItemCount = styled(({value, ...p}) => (\n  <div {...p}>\n    <Count value={value} />\n  </div>\n))`\n  ${menuItemStatStyles};\n  color: ${p => p.theme.subText};\n`;\n\nconst MenuItemText = styled('div')`\n  white-space: nowrap;\n  font-weight: normal;\n  text-align: left;\n  padding-right: ${space(1)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst ChartWrapper = styled('div')`\n  width: 200px;\n  margin: 0 ${space(2)};\n  align-self: center;\n`;\n\nconst EventUserWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-self: center;\n  width: 60px;\n  margin: 0 ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    width: 80px;\n  }\n`;\n\nconst AssigneeWrapper = styled('div')`\n  width: 80px;\n  margin: 0 ${space(2)};\n  align-self: center;\n`;\n\n// Reprocessing\nconst StartedColumn = styled('div')`\n  align-self: center;\n  margin: 0 ${space(2)};\n  color: ${p => p.theme.gray500};\n  ${p => p.theme.overflowEllipsis};\n  width: 85px;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n    width: 140px;\n  }\n`;\n\nconst EventsReprocessedColumn = styled('div')`\n  align-self: center;\n  margin: 0 ${space(2)};\n  color: ${p => p.theme.gray500};\n  ${p => p.theme.overflowEllipsis};\n  width: 75px;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    width: 140px;\n  }\n`;\n\nconst ProgressColumn = styled('div')`\n  margin: 0 ${space(2)};\n  align-self: center;\n  display: none;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n    width: 160px;\n  }\n`;\n","import LazyLoad from 'react-lazyload';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport {t} from 'sentry/locale';\nimport {Group, TimeseriesValue} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  data: Group;\n  statsPeriod: string;\n  height?: number;\n  showMarkLine?: boolean;\n  showSecondaryPoints?: boolean;\n};\n\nfunction GroupChart({\n  data,\n  statsPeriod,\n  showSecondaryPoints = false,\n  height = 24,\n  showMarkLine = false,\n}: Props) {\n  const stats: TimeseriesValue[] = statsPeriod\n    ? data.filtered\n      ? data.filtered.stats[statsPeriod]\n      : data.stats[statsPeriod]\n    : [];\n\n  const secondaryStats: TimeseriesValue[] | null =\n    statsPeriod && data.filtered ? data.stats[statsPeriod] : null;\n\n  if (!stats || !stats.length) {\n    return null;\n  }\n\n  const markLinePoint = stats.map(point => point[1]);\n  const formattedMarkLine = formatAbbreviatedNumber(Math.max(...markLinePoint));\n\n  let colors: string[] | undefined = undefined;\n  let emphasisColors: string[] | undefined = undefined;\n\n  const series: Series[] = [];\n  if (showSecondaryPoints && secondaryStats && secondaryStats.length) {\n    series.push({\n      seriesName: t('Total Events'),\n      data: secondaryStats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    });\n    series.push({\n      seriesName: t('Matching Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    });\n  } else {\n    // Colors are custom to preserve historical appearance where the single series is\n    // considerably darker than the two series results.\n    colors = [theme.gray300];\n    emphasisColors = [theme.purple300];\n    series.push({\n      seriesName: t('Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n      markLine:\n        showMarkLine && Math.max(...markLinePoint) > 0\n          ? MarkLine({\n              silent: true,\n              lineStyle: {color: theme.gray200, type: 'dotted', width: 1},\n              data: [\n                {\n                  type: 'max',\n                },\n              ],\n              label: {\n                show: true,\n                position: 'start',\n                color: `${theme.gray200}`,\n                fontFamily: 'Rubik',\n                fontSize: 10,\n                formatter: `${formattedMarkLine}`,\n              },\n            })\n          : undefined,\n    });\n  }\n\n  return (\n    <LazyLoad debounce={50} height={showMarkLine ? 30 : height}>\n      <MiniBarChart\n        height={showMarkLine ? 36 : height}\n        isGroupedByDate\n        showTimeInTooltip\n        series={series}\n        colors={colors}\n        emphasisColors={emphasisColors}\n        hideDelay={50}\n        showMarkLineLabel={showMarkLine}\n      />\n    </LazyLoad>\n  );\n}\n\nexport default GroupChart;\n","import styled from '@emotion/styled';\n\nimport Panel from 'sentry/components/panels/panel';\nimport space from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\n\nconst Text = styled('div')`\n  ${textStyles};\n\n  ${/* sc-selector */ Panel} & {\n    padding-left: ${space(2)};\n    padding-right: ${space(2)};\n\n    &:first-child {\n      padding-top: ${space(2)};\n    }\n  }\n`;\n\nexport default Text;\n","import styled from '@emotion/styled';\n\nconst ToolbarHeader = styled('div')`\n  font-size: 12px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${p => p.theme.subText};\n`;\n\nexport default ToolbarHeader;\n","/* global process */\n\nimport {t} from 'sentry/locale';\nimport {DataCategory, PermissionResource, Scope} from 'sentry/types';\n\n/**\n * Common constants here\n */\n\n// This is the element id where we render our React application to\nexport const ROOT_ELEMENT = 'blk_router';\n\n// This is considered the \"default\" route/view that users should be taken\n// to when the application does not have any further context\n//\n// e.g. loading app root or switching organization\nexport const DEFAULT_APP_ROUTE = '/organizations/:orgSlug/issues/';\n\nexport const API_ACCESS_SCOPES = [\n  'project:read',\n  'project:write',\n  'project:admin',\n  'project:releases',\n  'team:read',\n  'team:write',\n  'team:admin',\n  'event:read',\n  'event:write',\n  'event:admin',\n  'org:read',\n  'org:write',\n  'org:admin',\n  'org:integrations',\n  'member:read',\n  'member:write',\n  'member:admin',\n  'alerts:read',\n  'alerts:write',\n] as const;\n\n// Default API scopes when adding a new API token or org API token\nexport const DEFAULT_API_ACCESS_SCOPES = [\n  'event:read',\n  'event:admin',\n  'project:read',\n  'project:releases',\n  'org:read',\n  'team:read',\n  'member:read',\n];\n\n// These should only be used in the case where we cannot obtain roles through\n// the members endpoint (primarily in cases where a user is admining a\n// different organization they are not a OrganizationMember of ).\nexport const MEMBER_ROLES = [\n  {\n    id: 'member',\n    name: 'Member',\n    allowed: true,\n    desc: 'Members can view and act on events, as well as view most other data within the organization.',\n  },\n  {\n    id: 'admin',\n    name: 'Admin',\n    allowed: true,\n    desc: \"Admin privileges on any teams of which they're a member. They can create new teams and projects, as well as remove teams and projects on which they already hold membership (or all teams, if open membership is enabled). Additionally, they can manage memberships of teams that they are members of. They cannot invite members to the organization.\",\n  },\n  {\n    id: 'manager',\n    name: 'Manager',\n    allowed: true,\n    desc: 'Gains admin access on all teams as well as the ability to add and remove members.',\n  },\n  {\n    id: 'owner',\n    name: 'Organization Owner',\n    allowed: true,\n    desc: 'Unrestricted access to the organization, its data, and its settings. Can add, modify, and delete projects and members, as well as make billing and plan changes.',\n  },\n];\n\nexport type PermissionChoice = {\n  label: 'No Access' | 'Read' | 'Read & Write' | 'Admin';\n  scopes: Scope[];\n};\n\ntype PermissionObj = {\n  choices: {\n    admin: PermissionChoice;\n    'no-access': PermissionChoice;\n    read?: PermissionChoice;\n    write?: PermissionChoice;\n  };\n  help: string;\n  resource: PermissionResource;\n  label?: string;\n};\n\nexport const RELEASE_ADOPTION_STAGES = ['low_adoption', 'adopted', 'replaced'];\n\n// We expose permissions for Sentry Apps in a more resource-centric way.\n// All of the API_ACCESS_SCOPES from above should be represented in a more\n// User-friendly way here.\nexport const SENTRY_APP_PERMISSIONS: PermissionObj[] = [\n  {\n    resource: 'Project',\n    help: 'Projects, Tags, Debug Files, and Feedback',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      read: {label: 'Read', scopes: ['project:read']},\n      write: {label: 'Read & Write', scopes: ['project:read', 'project:write']},\n      admin: {label: 'Admin', scopes: ['project:read', 'project:write', 'project:admin']},\n    },\n  },\n  {\n    resource: 'Team',\n    help: 'Teams of members',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      read: {label: 'Read', scopes: ['team:read']},\n      write: {label: 'Read & Write', scopes: ['team:read', 'team:write']},\n      admin: {label: 'Admin', scopes: ['team:read', 'team:write', 'team:admin']},\n    },\n  },\n  {\n    resource: 'Release',\n    help: 'Releases, Commits, and related Files',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      admin: {label: 'Admin', scopes: ['project:releases']},\n    },\n  },\n  {\n    resource: 'Event',\n    label: 'Issue & Event',\n    help: 'Issues, Events, and workflow statuses',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      read: {label: 'Read', scopes: ['event:read']},\n      write: {label: 'Read & Write', scopes: ['event:read', 'event:write']},\n      admin: {label: 'Admin', scopes: ['event:read', 'event:write', 'event:admin']},\n    },\n  },\n  {\n    resource: 'Organization',\n    help: 'Manage Organizations, resolve IDs, retrieve Repositories and Commits',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      read: {label: 'Read', scopes: ['org:read']},\n      write: {label: 'Read & Write', scopes: ['org:read', 'org:write']},\n      admin: {label: 'Admin', scopes: ['org:read', 'org:write', 'org:admin']},\n    },\n  },\n  {\n    resource: 'Member',\n    help: 'Manage Members within Teams',\n    choices: {\n      'no-access': {label: 'No Access', scopes: []},\n      read: {label: 'Read', scopes: ['member:read']},\n      write: {label: 'Read & Write', scopes: ['member:read', 'member:write']},\n      admin: {label: 'Admin', scopes: ['member:read', 'member:write', 'member:admin']},\n    },\n  },\n];\n\nexport const DEFAULT_TOAST_DURATION = 6000;\nexport const DEFAULT_DEBOUNCE_DURATION = 300;\n\nexport const ALL_ENVIRONMENTS_KEY = '__all_environments__';\n\n// Maps a `type: string` -> `url-prefix: string`\nexport const AVATAR_URL_MAP = {\n  team: 'team-avatar',\n  organization: 'organization-avatar',\n  project: 'project-avatar',\n  user: 'avatar',\n  sentryAppColor: 'sentry-app-avatar',\n  sentryAppSimple: 'sentry-app-avatar',\n  docIntegration: 'doc-integration-avatar',\n};\n\nexport const MENU_CLOSE_DELAY = 200;\n\nexport const MAX_PICKABLE_DAYS = 90;\n\nexport const DEFAULT_STATS_PERIOD = '14d';\n\nexport const DEFAULT_QUERY = 'is:unresolved';\n\nexport const DEFAULT_USE_UTC = true;\n\nexport const DEFAULT_RELATIVE_PERIODS = {\n  '1h': t('Last hour'),\n  '24h': t('Last 24 hours'),\n  '7d': t('Last 7 days'),\n  '14d': t('Last 14 days'),\n  '30d': t('Last 30 days'),\n  '90d': t('Last 90 days'),\n};\n\nexport const DEFAULT_RELATIVE_PERIODS_PAGE_FILTER = {\n  '1h': t('1H'),\n  '24h': t('24H'),\n  '7d': t('7D'),\n  '14d': t('14D'),\n  '30d': t('30D'),\n};\n\nexport const DATA_CATEGORY_NAMES = {\n  [DataCategory.ERRORS]: t('Errors'),\n  [DataCategory.TRANSACTIONS]: t('Transactions'),\n  [DataCategory.ATTACHMENTS]: t('Attachments'),\n};\n\n// Special Search characters\nexport const NEGATION_OPERATOR = '!';\nexport const SEARCH_WILDCARD = '*';\n\n// SmartSearchBar settings\nexport const MAX_AUTOCOMPLETE_RECENT_SEARCHES = 3;\nexport const MAX_AUTOCOMPLETE_RELEASES = 5;\n\nexport const DEFAULT_PER_PAGE = 50;\n\n// Limit query length so paginated response headers don't\n// go over HTTP header size limits (4Kb)\nexport const MAX_QUERY_LENGTH = 400;\n\n// Webpack configures DEPLOY_PREVIEW_CONFIG for deploy preview builds.\nexport const DEPLOY_PREVIEW_CONFIG = process.env.DEPLOY_PREVIEW_CONFIG as unknown as\n  | undefined\n  | {\n      branch: string;\n      commitSha: string;\n      githubOrg: string;\n      githubRepo: string;\n    };\n\n// Webpack configures EXPERIMENTAL_SPA.\nexport const EXPERIMENTAL_SPA = process.env.EXPERIMENTAL_SPA as unknown as\n  | undefined\n  | boolean;\n\n// so we don't use filtered values in certain display contexts\n// TODO(kmclb): once relay is doing the scrubbing, the masking value will be dynamic,\n// so this will have to change\nexport const FILTER_MASK = '[Filtered]';\n\n// Errors that may occur during the fetching of organization details\nexport const ORGANIZATION_FETCH_ERROR_TYPES = {\n  ORG_NOT_FOUND: 'ORG_NOT_FOUND',\n  ORG_NO_ACCESS: 'ORG_NO_ACCESS',\n};\n\nexport const CONFIG_DOCS_URL = 'https://develop.sentry.dev/config/';\nexport const DISCOVER2_DOCS_URL = 'https://docs.sentry.io/product/discover-queries/';\n\nexport const IS_ACCEPTANCE_TEST = !!process.env.IS_ACCEPTANCE_TEST;\nexport const NODE_ENV = process.env.NODE_ENV;\nexport const DISABLE_RR_WEB = !!process.env.DISABLE_RR_WEB;\nexport const SPA_DSN = process.env.SPA_DSN;\nexport const SENTRY_RELEASE_VERSION = process.env.SENTRY_RELEASE_VERSION;\n\nexport const DEFAULT_ERROR_JSON = {\n  detail: t('Unknown error. Please try again.'),\n};\n","import {t} from 'sentry/locale';\n\nexport const popularPlatformCategories = [\n  'javascript',\n  'javascript-react',\n  'javascript-nextjs',\n  'python-django',\n  'python',\n  'python-flask',\n  'ruby-rails',\n  'node-express',\n  'php-laravel',\n  'java',\n  'java-spring-boot',\n  'dotnet',\n  'dotnet-aspnetcore',\n  'csharp',\n  'go',\n  'php',\n  'ruby',\n  'node',\n  'react-native',\n  'javascript-angular',\n  'javascript-vue',\n  'android',\n  'apple-ios',\n  'flutter',\n  'dart-flutter',\n  'unity',\n] as const;\n\nexport const frontend = [\n  'dart',\n  'javascript',\n  'javascript-react',\n  'javascript-angular',\n  'javascript-angularjs',\n  'javascript-backbone',\n  'javascript-ember',\n  'javascript-gatsby',\n  'javascript-vue',\n  'javascript-nextjs',\n  'unity',\n] as const;\n\nexport const mobile = [\n  'android',\n  'apple-ios',\n  'cordova',\n  'capacitor',\n  'javascript-cordova',\n  'javascript-capacitor',\n  'ionic',\n  'react-native',\n  'flutter',\n  'dart-flutter',\n  'unity',\n  'dotnet-xamarin',\n  'unreal',\n  // Old platforms\n  'java-android',\n  'cocoa-objc',\n  'cocoa-swift',\n] as const;\n\nexport const backend = [\n  'dotnet',\n  'dotnet-aspnetcore',\n  'dotnet-aspnet',\n  'elixir',\n  'go',\n  'go-http',\n  'java',\n  'java-appengine',\n  'java-log4j',\n  'java-log4j2',\n  'java-logback',\n  'java-logging',\n  'java-spring',\n  'java-spring-boot',\n  'native',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n  'perl',\n  'php',\n  'php-laravel',\n  'php-monolog',\n  'php-symfony2',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'ruby',\n  'ruby-rails',\n  'ruby-rack',\n  'rust',\n  'kotlin',\n] as const;\n\nexport const serverless = [\n  'python-awslambda',\n  'python-azurefunctions',\n  'python-gcpfunctions',\n  'node-awslambda',\n  'node-azurefunctions',\n  'node-gcpfunctions',\n  'dotnet-awslambda',\n  'dotnet-gcpfunctions',\n] as const;\n\nexport const desktop = [\n  'apple-macos',\n  'dotnet',\n  'dotnet-winforms',\n  'dotnet-wpf',\n  'java',\n  'electron',\n  'javascript-electron',\n  'native',\n  'native-crashpad',\n  'native-breakpad',\n  'native-minidump',\n  'native-qt',\n  'minidump',\n  'unity',\n  'flutter',\n  'kotlin',\n  'unreal',\n] as const;\n\nconst categoryList = [\n  {id: 'popular', name: t('Popular'), platforms: popularPlatformCategories},\n  {id: 'browser', name: t('Browser'), platforms: frontend},\n  {id: 'server', name: t('Server'), platforms: backend},\n  {id: 'mobile', name: t('Mobile'), platforms: mobile},\n  {id: 'desktop', name: t('Desktop'), platforms: desktop},\n  {id: 'serverless', name: t('Serverless'), platforms: serverless},\n] as const;\n\nexport const sourceMaps: PlatformKey[] = [\n  ...frontend,\n  'react-native',\n  'cordova',\n  'electron',\n];\n\nexport const tracing = [\n  'python-tracing',\n  'node-tracing',\n  'react-native-tracing',\n] as const;\n\nexport const performance: PlatformKey[] = [\n  'javascript',\n  'javascript-ember',\n  'javascript-react',\n  'javascript-vue',\n  'php',\n  'php-laravel',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n];\n\nexport const releaseHealth: PlatformKey[] = [\n  // frontend\n  'javascript',\n  'javascript-react',\n  'javascript-angular',\n  'javascript-angularjs',\n  'javascript-backbone',\n  'javascript-ember',\n  'javascript-gatsby',\n  'javascript-vue',\n  'javascript-nextjs',\n  // mobile\n  'android',\n  'apple-ios',\n  'cordova',\n  'javascript-cordova',\n  'react-native',\n  'flutter',\n  'dart-flutter',\n  // backend\n  'native',\n  'node',\n  'node-express',\n  'node-koa',\n  'node-connect',\n  'python',\n  'python-django',\n  'python-flask',\n  'python-sanic',\n  'python-celery',\n  'python-bottle',\n  'python-pylons',\n  'python-pyramid',\n  'python-tornado',\n  'python-rq',\n  'rust',\n  // serverless\n  // desktop\n  'apple-macos',\n  'native',\n  'native-crashpad',\n  'native-breakpad',\n  'native-qt',\n];\n\n/**\n * Additional aliases used for filtering in the platform picker\n */\nexport const filterAliases: Partial<Record<PlatformKey, string[]>> = {\n  native: ['cpp', 'c++'],\n};\n\nexport type PlatformKey =\n  | typeof popularPlatformCategories[number]\n  | typeof frontend[number]\n  | typeof mobile[number]\n  | typeof backend[number]\n  | typeof desktop[number]\n  | typeof tracing[number]\n  | typeof serverless[number]\n  | 'other';\n\nexport default categoryList;\n","import {forwardRef, Fragment} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  isCircled?: boolean;\n}\n\nconst IconAdd = forwardRef<SVGSVGElement, Props>(({isCircled = false, ...props}, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      {isCircled ? (\n        <Fragment>\n          <path d=\"M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z\" />\n          <path d=\"M8,12a.76.76,0,0,1-.75-.75V4.72a.75.75,0,0,1,1.5,0v6.56A.76.76,0,0,1,8,12Z\" />\n          <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <path d=\"M8.75,7.25V2a.75.75,0,0,0-1.5,0V7.25H2a.75.75,0,0,0,0,1.5H7.25V14a.75.75,0,0,0,1.5,0V8.75H14a.75.75,0,0,0,0-1.5Z\" />\n        </Fragment>\n      )}\n    </SvgIcon>\n  );\n});\n\nIconAdd.displayName = 'IconAdd';\n\nexport {IconAdd};\n","import {forwardRef, Fragment} from 'react';\nimport {css} from '@emotion/react';\n\nimport theme from 'sentry/utils/theme';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  direction?: 'up' | 'right' | 'down' | 'left';\n  isCircled?: boolean;\n}\n\nconst IconChevron = forwardRef<SVGSVGElement, Props>(\n  ({isCircled = false, direction = 'up', ...props}, ref) => {\n    return (\n      <SvgIcon\n        {...props}\n        ref={ref}\n        css={\n          direction\n            ? css`\n                transition: transform 120ms ease-in-out;\n                transform: rotate(${theme.iconDirections[direction]}deg);\n              `\n            : undefined\n        }\n      >\n        {isCircled ? (\n          <Fragment>\n            <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n            <path d=\"M11.12,9.87a.73.73,0,0,1-.53-.22L8,7.07,5.41,9.65a.74.74,0,0,1-1.06,0,.75.75,0,0,1,0-1.06L7.47,5.48a.74.74,0,0,1,1.06,0l3.12,3.11a.75.75,0,0,1,0,1.06A.74.74,0,0,1,11.12,9.87Z\" />\n          </Fragment>\n        ) : (\n          <path d=\"M14,11.75a.74.74,0,0,1-.53-.22L8,6.06,2.53,11.53a.75.75,0,0,1-1.06-1.06l6-6a.75.75,0,0,1,1.06,0l6,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,14,11.75Z\" />\n        )}\n      </SvgIcon>\n    );\n  }\n);\n\nIconChevron.displayName = 'IconChevron';\n\nexport {IconChevron};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconDelete = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M14.71,3.94H1.29a.75.75,0,0,1,0-1.5H14.71a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M12.69,15.94H3.31a1.75,1.75,0,0,1-1.75-1.75v-11h1.5v11a.25.25,0,0,0,.25.25h9.38a.25.25,0,0,0,.25-.25v-11h1.5v11A1.75,1.75,0,0,1,12.69,15.94Z\" />\n      <path d=\"M5,13a.74.74,0,0,1-.75-.75V6.14a.75.75,0,0,1,1.5,0v6.1A.75.75,0,0,1,5,13Z\" />\n      <path d=\"M8,13a.75.75,0,0,1-.75-.75V6.14a.75.75,0,0,1,1.5,0v6.1A.75.75,0,0,1,8,13Z\" />\n      <path d=\"M11.05,13a.75.75,0,0,1-.75-.75V6.14a.75.75,0,0,1,1.5,0v6.1A.74.74,0,0,1,11.05,13Z\" />\n      <path d=\"M10.51,3.47l-.81-2H6.3l-.81,2L4.1,2.91,5,.77A1.26,1.26,0,0,1,6.13,0H9.87A1.26,1.26,0,0,1,11,.77l.87,2.14Z\" />\n    </SvgIcon>\n  );\n});\n\nexport {IconDelete};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconDownload = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M15.24,16H.76A.76.76,0,0,1,0,15.27V9.74A.76.76,0,0,1,.76,9a.76.76,0,0,1,.75.75v4.78h13V9.74a.75.75,0,0,1,1.5,0v5.53A.76.76,0,0,1,15.24,16Z\" />\n      <path d=\"M8,12.08a.79.79,0,0,1-.53-.22L3.32,7.71a.77.77,0,0,1,0-1.07.75.75,0,0,1,1.06,0L8,10.27l3.62-3.63a.75.75,0,0,1,1.06,0,.77.77,0,0,1,0,1.07L8.53,11.86A.79.79,0,0,1,8,12.08Z\" />\n      <path d=\"M8,12.08a.76.76,0,0,1-.75-.75V1a.75.75,0,0,1,1.5,0V11.33A.76.76,0,0,1,8,12.08Z\" />\n    </SvgIcon>\n  );\n});\n\nIconDownload.displayName = 'IconDownload';\n\nexport {IconDownload};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconEdit = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M1.36,15.91a1.34,1.34,0,0,1-.94-.38,1.32,1.32,0,0,1-.35-1.28L1.39,9a.94.94,0,0,1,.2-.35l8.06-8A1.71,1.71,0,0,1,12,.56l3.42,3.25A1.68,1.68,0,0,1,16,5a1.64,1.64,0,0,1-.48,1.2l-8.06,8a.79.79,0,0,1-.34.2L1.71,15.87A1.39,1.39,0,0,1,1.36,15.91Zm.16-1.3ZM2.8,9.53,1.59,14.35,6.51,13l7.91-7.89A.14.14,0,0,0,14.47,5a.17.17,0,0,0-.05-.12L11,1.64a.23.23,0,0,0-.3,0h0Zm7.38-8.41h0Z\" />\n      <rect\n        x=\"9.56\"\n        y=\"2.34\"\n        width=\"1.5\"\n        height=\"6.6\"\n        transform=\"translate(-0.91 9.12) rotate(-45.91)\"\n      />\n      <rect\n        x=\"3.76\"\n        y=\"8.12\"\n        width=\"1.5\"\n        height=\"6.6\"\n        transform=\"translate(-6.87 6.8) rotate(-46.34)\"\n      />\n    </SvgIcon>\n  );\n});\n\nIconEdit.displayName = 'IconEdit';\n\nexport {IconEdit};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconEllipsis = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <circle cx=\"8\" cy=\"8\" r=\"1.31\" />\n      <circle cx=\"1.31\" cy=\"8\" r=\"1.31\" />\n      <circle cx=\"14.69\" cy=\"8\" r=\"1.31\" />\n    </SvgIcon>\n  );\n});\n\nIconEllipsis.displayName = 'IconEllipsis';\n\nexport {IconEllipsis};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconInfo = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,11.78A.74.74,0,0,1,7.24,11V7a.75.75,0,0,1,1.5,0v4A.75.75,0,0,1,8,11.78Z\" />\n      <circle cx=\"8\" cy=\"4.78\" r=\"0.76\" />\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n    </SvgIcon>\n  );\n});\n\nIconInfo.displayName = 'IconInfo';\n\nexport {IconInfo};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconQuestion = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n      <path d=\"M5.33,6.19a1.93,1.93,0,0,1,.33-1,2.59,2.59,0,0,1,1-.87,3,3,0,0,1,1.47-.34,3.18,3.18,0,0,1,1.38.29,2.28,2.28,0,0,1,.92.78,2,2,0,0,1,.32,1.07,1.69,1.69,0,0,1-.18.8,2.74,2.74,0,0,1-.44.6l-.92.84a3.92,3.92,0,0,0-.29.29,1,1,0,0,0-.17.23,1.8,1.8,0,0,0-.08.21c0,.07,0,.19-.09.37a.6.6,0,0,1-.64.56.64.64,0,0,1-.47-.19.74.74,0,0,1-.19-.54,1.91,1.91,0,0,1,.51-1.36,7.83,7.83,0,0,1,.63-.59c.22-.2.39-.35.49-.46a1.46,1.46,0,0,0,.26-.34.8.8,0,0,0,.1-.41.93.93,0,0,0-.32-.72,1.13,1.13,0,0,0-.82-.3,1.15,1.15,0,0,0-.87.3,2.33,2.33,0,0,0-.47.88c-.12.4-.35.61-.7.61a.65.65,0,0,1-.5-.22A.63.63,0,0,1,5.33,6.19ZM8,12.07a.84.84,0,0,1-.57-.21.75.75,0,0,1-.24-.59.74.74,0,0,1,.23-.57A.78.78,0,0,1,8,10.47a.74.74,0,0,1,.57.23.78.78,0,0,1,.23.57.76.76,0,0,1-.24.59A.83.83,0,0,1,8,12.07Z\" />\n    </SvgIcon>\n  );\n});\n\nIconQuestion.displayName = 'IconQuestion';\n\nexport {IconQuestion};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSearch = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M6,12A6,6,0,1,1,12,6,6,6,0,0,1,6,12ZM6,1.54A4.46,4.46,0,1,0,10.45,6,4.46,4.46,0,0,0,6,1.54Z\" />\n      <path d=\"M15.2,16a.74.74,0,0,1-.53-.22L9.14,10.2A.75.75,0,0,1,10.2,9.14l5.53,5.53a.75.75,0,0,1,0,1.06A.74.74,0,0,1,15.2,16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSearch.displayName = 'IconSearch';\n\nexport {IconSearch};\n","import {forwardRef} from 'react';\nimport {css} from '@emotion/react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  rotated?: boolean;\n}\n\nconst IconSort = forwardRef<SVGSVGElement, Props>(({rotated, ...props}, ref) => {\n  return (\n    <SvgIcon\n      {...props}\n      ref={ref}\n      css={\n        rotated &&\n        css`\n          transform: rotate(90deg);\n        `\n      }\n    >\n      <path d=\"M15.49 11.76a.75.75 0 0 1-.22.53l-2.88 2.88a.75.75 0 0 1-1.06 0l-2.87-2.88a.74.74 0 0 1 0-1.06.75.75 0 0 1 1.06 0l2.34 2.35 2.35-2.35a.75.75 0 0 1 1.06 0 .79.79 0 0 1 .22.53Z\" />\n      <path d=\"M12.61 1.34v13.3a.75.75 0 1 1-1.5 0V1.34a.75.75 0 1 1 1.5 0Z\" />\n      <path d=\"M7.87 4.22a.74.74 0 0 1-.22.53.75.75 0 0 1-1.06 0L4.25 2.4 1.9 4.75A.75.75 0 0 1 .84 3.69L3.72.81a.75.75 0 0 1 1.06 0l2.87 2.88a.74.74 0 0 1 .22.53Z\" />\n      <path d=\"M5 1.34v13.3a.75.75 0 1 1-1.5 0V1.34a.75.75 0 0 1 1.5 0Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSort.displayName = 'IconSort';\n\nexport {IconSort};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconUser = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,10.63a4,4,0,0,1-3.94-4V4a3.94,3.94,0,1,1,7.88,0V6.68A4,4,0,0,1,8,10.63ZM8,1.52A2.44,2.44,0,0,0,5.56,4V6.68a2.44,2.44,0,1,0,4.88,0V4A2.44,2.44,0,0,0,8,1.52Z\" />\n      <path d=\"M14.19,16H1.81A1.74,1.74,0,0,1,.07,14.24V12.32A3.72,3.72,0,0,1,3.19,8.64l2.46-.41a.76.76,0,0,1,.87.62.75.75,0,0,1-.62.86l-2.47.41a2.22,2.22,0,0,0-1.86,2.2v1.92a.24.24,0,0,0,.24.24H14.19a.24.24,0,0,0,.24-.24V12.32a2.22,2.22,0,0,0-1.86-2.2L10.1,9.71a.75.75,0,0,1-.62-.86.76.76,0,0,1,.87-.62l2.47.41a3.72,3.72,0,0,1,3.11,3.68v1.92A1.74,1.74,0,0,1,14.19,16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconUser.displayName = 'IconUser';\n\nexport {IconUser};\n","import {forwardRef} from 'react';\nimport {css} from '@emotion/react';\n\nimport theme from 'sentry/utils/theme';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  direction?: 'up' | 'right' | 'down' | 'left';\n}\n\nconst IconArrow = forwardRef<SVGSVGElement, Props>(\n  ({direction = 'up', ...props}, ref) => {\n    return (\n      <SvgIcon\n        {...props}\n        ref={ref}\n        css={\n          direction\n            ? direction === 'down'\n              ? // Down arrows have a zoom issue with Firefox inside of tables due to rotate.\n                // Since arrows are symmetric, scaling to only flip vertically works to fix the issue.\n                css`\n                  transform: scale(1, -1);\n                `\n              : css`\n                  transform: rotate(${theme.iconDirections[direction]}deg);\n                `\n            : undefined\n        }\n      >\n        <path d=\"M13.76,7.32a.74.74,0,0,1-.53-.22L8,1.87,2.77,7.1A.75.75,0,1,1,1.71,6L7.47.28a.74.74,0,0,1,1.06,0L14.29,6a.75.75,0,0,1,0,1.06A.74.74,0,0,1,13.76,7.32Z\" />\n        <path d=\"M8,15.94a.75.75,0,0,1-.75-.75V.81a.75.75,0,0,1,1.5,0V15.19A.75.75,0,0,1,8,15.94Z\" />\n      </SvgIcon>\n    );\n  }\n);\n\nIconArrow.displayName = 'IconArrow';\n\nexport {IconArrow};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconBell = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M7.00012 15.9999C6.30168 15.9972 5.63275 15.7179 5.13982 15.2231C4.64688 14.7283 4.37011 14.0583 4.37012 13.3599C4.37012 13.161 4.44913 12.9702 4.58979 12.8295C4.73044 12.6889 4.9212 12.6099 5.12012 12.6099C5.31903 12.6099 5.5098 12.6889 5.65045 12.8295C5.7911 12.9702 5.87012 13.161 5.87012 13.3599C5.87012 13.6596 5.98917 13.947 6.20109 14.1589C6.413 14.3708 6.70042 14.4899 7.00012 14.4899C7.29981 14.4899 7.58723 14.3708 7.79915 14.1589C8.01106 13.947 8.13012 13.6596 8.13012 13.3599C8.13012 13.161 8.20913 12.9702 8.34979 12.8295C8.49044 12.6889 8.68121 12.6099 8.88012 12.6099C9.07903 12.6099 9.26979 12.6889 9.41045 12.8295C9.5511 12.9702 9.63012 13.161 9.63012 13.3599C9.63012 14.0583 9.35335 14.7283 8.86042 15.2231C8.36748 15.7179 7.69855 15.9972 7.00012 15.9999Z\" />\n      <path d=\"M13 14.07H1.00001C0.895161 14.0708 0.791282 14.0499 0.694908 14.0086C0.598533 13.9673 0.511748 13.9065 0.44001 13.83C0.370242 13.7536 0.317284 13.6633 0.284556 13.5652C0.251829 13.467 0.24006 13.363 0.25001 13.26L0.82001 6.71V6.65C0.757871 4.94869 1.37402 3.29235 2.53296 2.04528C3.6919 0.798201 5.29871 0.0625085 7.00001 0C8.69767 0.0574355 10.3034 0.785325 11.4655 2.02425C12.6275 3.26317 13.2513 4.91214 13.2 6.61C13.2047 6.62973 13.2047 6.65027 13.2 6.67L13.77 13.22C13.78 13.323 13.7682 13.427 13.7355 13.5252C13.7027 13.6233 13.6498 13.7136 13.58 13.79C13.5097 13.8763 13.4214 13.9461 13.3211 13.9945C13.2209 14.0429 13.1113 14.0686 13 14.07ZM1.80001 12.57H12.2L11.7 6.84V6.65C11.7515 5.34986 11.2859 4.08226 10.4051 3.12459C9.52424 2.16692 8.29991 1.59716 7.00001 1.54C5.70011 1.59716 4.47578 2.16692 3.59495 3.12459C2.71412 4.08226 2.24851 5.34986 2.30001 6.65V6.78L1.80001 12.57Z\" />\n    </SvgIcon>\n  );\n});\n\nIconBell.displayName = 'IconBell';\n\nexport {IconBell};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconBroadcast = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,10.2A2.2,2.2,0,1,1,10.2,8,2.21,2.21,0,0,1,8,10.2ZM8,7.3a.7.7,0,1,0,.7.7A.7.7,0,0,0,8,7.3Z\" />\n      <path d=\"M13.13,13.88a.74.74,0,0,1-.53-.22.75.75,0,0,1,0-1.06,6.51,6.51,0,0,0,0-9.2.75.75,0,0,1,0-1.06.75.75,0,0,1,1.06,0,8,8,0,0,1,0,11.32A.73.73,0,0,1,13.13,13.88Zm-10.26,0a.73.73,0,0,1-.53-.22,8,8,0,0,1,0-11.32.75.75,0,0,1,1.06,0,.75.75,0,0,1,0,1.06,6.51,6.51,0,0,0,0,9.2.75.75,0,0,1,0,1.06A.74.74,0,0,1,2.87,13.88Zm8.21-2.05a.74.74,0,0,1-.67-.41.76.76,0,0,1,.15-.88,3.62,3.62,0,0,0,0-5.09.74.74,0,0,1,0-1.06.75.75,0,0,1,1.06,0A5.1,5.1,0,0,1,13.1,8a5,5,0,0,1-1.49,3.61.75.75,0,0,1-.2.15A.78.78,0,0,1,11.08,11.83Zm0-.75h0Zm-6.16.75a.79.79,0,0,1-.53-.22A5.1,5.1,0,0,1,2.9,8,5,5,0,0,1,4.39,4.39l.08-.08a.75.75,0,0,1,1,1.15A3.51,3.51,0,0,0,4.4,8a3.59,3.59,0,0,0,1,2.55.74.74,0,0,1,0,1.06A.75.75,0,0,1,4.92,11.83Z\" />\n    </SvgIcon>\n  );\n});\n\nIconBroadcast.displayName = 'IconBroadcast';\n\nexport {IconBroadcast};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconChat = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M.94,16a.73.73,0,0,1-.47-.17A.74.74,0,0,1,.21,15l.93-3.92A6.83,6.83,0,0,1,0,7.35c0-4,3.59-7.3,8-7.3s8,3.28,8,7.3-3.59,7.29-8,7.29a8.59,8.59,0,0,1-3.11-.58L1.27,15.87A.8.8,0,0,1,.94,16Zm1.59-5.48a.74.74,0,0,1,.15.65L2,13.81l2.49-1.24a.73.73,0,0,1,.63,0A7,7,0,0,0,8,13.14c3.58,0,6.5-2.6,6.5-5.79S11.58,1.55,8,1.55s-6.5,2.6-6.5,5.8A5.32,5.32,0,0,0,2.53,10.47Z\" />\n    </SvgIcon>\n  );\n});\n\nIconChat.displayName = 'IconChat';\n\nexport {IconChat};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconCommit = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,11.91A3.91,3.91,0,1,1,11.91,8,3.91,3.91,0,0,1,8,11.91ZM8,5.59A2.41,2.41,0,1,0,10.41,8,2.41,2.41,0,0,0,8,5.59Z\" />\n      <path d=\"M15.23,8.75H11.16a.75.75,0,0,1,0-1.5h4.07a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M4.84,8.75H.77a.75.75,0,1,1,0-1.5H4.84a.75.75,0,0,1,0,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconCommit.displayName = 'IconCommit';\n\nexport {IconCommit};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconDashboard = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M5.66,16H1.5A1.5,1.5,0,0,1,0,14.5v-13A1.5,1.5,0,0,1,1.5,0H5.66a1.5,1.5,0,0,1,1.5,1.5v13A1.5,1.5,0,0,1,5.66,16ZM1.5,1.52v13H5.66v-13Z\" />\n      <path d=\"M14.5,16H10.34a1.5,1.5,0,0,1-1.5-1.5V11.79a1.5,1.5,0,0,1,1.5-1.5H14.5a1.5,1.5,0,0,1,1.5,1.5V14.5A1.5,1.5,0,0,1,14.5,16Zm0-4.21H10.34V14.5H14.5Z\" />\n      <path d=\"M14.5,8.62H10.34a1.5,1.5,0,0,1-1.5-1.5V1.5A1.5,1.5,0,0,1,10.34,0H14.5A1.5,1.5,0,0,1,16,1.5V7.12A1.5,1.5,0,0,1,14.5,8.62ZM10.34,1.5V7.12H14.5V1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconDashboard.displayName = 'IconDashboard';\n\nexport {IconDashboard};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconDocs = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,15.27a.76.76,0,0,1-.75-.75V2.06a.75.75,0,0,1,1.5,0V14.52A.76.76,0,0,1,8,15.27Z\" />\n      <path d=\"M5.74,5.38H2.93a.75.75,0,0,1,0-1.5H5.74a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M5.74,7.89H2.93a.75.75,0,0,1,0-1.5H5.74a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M13.07,5.38H10.26a.75.75,0,0,1,0-1.5h2.81a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M13.07,7.89H10.26a.75.75,0,0,1,0-1.5h2.81a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M15.25,14.62h-.07a76.54,76.54,0,0,0-14.36,0,.67.67,0,0,1-.57-.19A.73.73,0,0,1,0,13.87V2.06a.76.76,0,0,1,.75-.75h14.5a.76.76,0,0,1,.75.75V13.87a.73.73,0,0,1-.25.55A.7.7,0,0,1,15.25,14.62ZM8,12.77c2.23,0,4.41.09,6.5.27V2.81H1.5V13C3.59,12.86,5.77,12.77,8,12.77Z\" />\n    </SvgIcon>\n  );\n});\n\nIconDocs.displayName = 'IconDocs';\n\nexport {IconDocs};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconExclamation = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <g>\n        <path d=\"M8.88588 1.41773L8.88588 10.0778C8.88588 10.4386 8.53153 10.6552 8.05907 10.6552C7.5866 10.6552 7.11414 10.4386 7.11414 10.0778L7.11414 1.41773C7.11414 1.12906 7.46848 0.840389 8.05907 0.840388C8.64965 0.840388 8.88588 1.12906 8.88588 1.41773Z\" />\n        <path d=\"M7.99999 12.9559C7.32513 12.9559 6.77805 13.5018 6.77805 14.1752C6.77805 14.8485 7.32513 15.3944 7.99998 15.3944C8.67484 15.3944 9.22192 14.8485 9.22192 14.1752C9.22192 13.5018 8.67484 12.9559 7.99999 12.9559Z\" />\n      </g>\n    </SvgIcon>\n  );\n});\n\nIconExclamation.displayName = 'IconExclamation';\n\nexport {IconExclamation};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconFatal = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M5.38,10.29A1.73,1.73,0,1,1,7.11,8.57,1.72,1.72,0,0,1,5.38,10.29Zm0-1.95a.22.22,0,0,0-.22.23c0,.25.45.25.45,0A.23.23,0,0,0,5.38,8.34Z\" />\n      <path d=\"M10.62,10.78a2.22,2.22,0,1,1,2.21-2.21A2.21,2.21,0,0,1,10.62,10.78Zm0-2.93a.72.72,0,1,0,.71.72A.72.72,0,0,0,10.62,7.85Z\" />\n      <path d=\"M11.71,16H4.29a.75.75,0,0,1-.75-.75V13.2A2.74,2.74,0,0,1,.59,10.55a2.47,2.47,0,0,1,.3-1.19,7,7,0,0,1-.69-3C.2,2.54,3.33,0,8,0s7.8,2.54,7.8,6.32a7,7,0,0,1-.69,3,2.47,2.47,0,0,1,.3,1.19,2.75,2.75,0,0,1-2.95,2.65v2.06A.75.75,0,0,1,11.71,16Zm-5.56-1.5V11.63a.75.75,0,0,1,1.5,0v2.88h.7V13.06a.75.75,0,0,1,1.5,0v1.45H11V12.24a.76.76,0,0,1,.36-.64.74.74,0,0,1,.72,0,1.38,1.38,0,0,0,.6.13,1.21,1.21,0,0,0,1.27-1.15,1.07,1.07,0,0,0-.22-.63.77.77,0,0,1-.1-.88,5.55,5.55,0,0,0,.71-2.72C14.3,2.76,10.91,1.5,8,1.5S1.7,2.76,1.7,6.32A5.55,5.55,0,0,0,2.41,9a.76.76,0,0,1-.11.88,1.13,1.13,0,0,0-.21.63A1.21,1.21,0,0,0,3.36,11.7a1.46,1.46,0,0,0,.55-.11.5.5,0,0,1,.2-.08A.75.75,0,0,1,5,11.9a.9.9,0,0,1,.08.36v2.25Z\" />\n    </SvgIcon>\n  );\n});\n\nIconFatal.displayName = 'IconFatal';\n\nexport {IconFatal};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconFile = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M13.34,16H2.67A1.75,1.75,0,0,1,.92,14.27V1.76A1.75,1.75,0,0,1,2.67,0H8.82a.75.75,0,0,1,.53.22l5.52,5.52a.75.75,0,0,1,.22.53v8A1.75,1.75,0,0,1,13.34,16ZM2.67,1.51a.25.25,0,0,0-.25.25V14.27a.25.25,0,0,0,.25.25H13.34a.25.25,0,0,0,.25-.25V6.59L8.51,1.51Z\" />\n      <path d=\"M14.34,7H9.82A1.75,1.75,0,0,1,8.07,5.28V.76a.75.75,0,1,1,1.5,0V5.28a.25.25,0,0,0,.25.25h4.52a.75.75,0,0,1,0,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconFile.displayName = 'IconFile';\n\nexport {IconFile};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst FIRE_SVG_PATH =\n  'M8.08,15.92A6.58,6.58,0,0,1,1.51,9.34a4.88,4.88,0,0,1,2.2-4.25.74.74,0,0,1,1,.34,6,6,0,0,1,4-5.3A.74.74,0,0,1,9.4.22a.73.73,0,0,1,.33.61v.31A15.07,15.07,0,0,0,10,4.93a3.72,3.72,0,0,1,2.3-1.7.74.74,0,0,1,.66.12.75.75,0,0,1,.3.6A6.21,6.21,0,0,0,14,6.79a5.78,5.78,0,0,1,.68,2.55A6.58,6.58,0,0,1,8.08,15.92ZM3.59,7.23A4.25,4.25,0,0,0,3,9.34a5.07,5.07,0,1,0,10.14,0,4.6,4.6,0,0,0-.54-1.94,8,8,0,0,1-.76-2.32A2,2,0,0,0,11.07,7a.75.75,0,0,1-1.32.58C8.4,6,8.25,4.22,8.23,2c-2,1.29-2.15,3.58-2.09,5.85A7.52,7.52,0,0,1,6.14,9a.74.74,0,0,1-.46.63.77.77,0,0,1-.76-.11A4.56,4.56,0,0,1,3.59,7.23Z';\n\nconst IconFire = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d={FIRE_SVG_PATH} />\n    </SvgIcon>\n  );\n});\n\nIconFire.displayName = 'IconFire';\n\nexport {FIRE_SVG_PATH, IconFire};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconFix = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M2.68,16a2.64,2.64,0,0,1-1.86-.77,2.61,2.61,0,0,1-.77-1.86,2.58,2.58,0,0,1,.77-1.86L5.71,6.57l0-.05a4.74,4.74,0,0,1,.79-5.25A4.76,4.76,0,0,1,11.75.5.73.73,0,0,1,12.2,1a.74.74,0,0,1-.2.68L9.72,4l.61,1.67L12,6.28,14.28,4A.74.74,0,0,1,15,3.8a.73.73,0,0,1,.54.45,4.76,4.76,0,0,1-.77,5.27,4.76,4.76,0,0,1-5.28.78h0L4.54,15.18A2.62,2.62,0,0,1,2.68,16Zm6.9-14.4a2.86,2.86,0,0,0-2,.78A3.32,3.32,0,0,0,7.09,6l.19.53a.73.73,0,0,1-.18.78L1.88,12.52a1.13,1.13,0,0,0,0,1.6,1.15,1.15,0,0,0,1.6,0L8.71,8.9a.73.73,0,0,1,.78-.18l.5.18a3.32,3.32,0,0,0,3.68-.44A2.93,2.93,0,0,0,14.42,6l-1.7,1.7a.73.73,0,0,1-.79.17L9.49,7a.69.69,0,0,1-.44-.44l-.9-2.44a.73.73,0,0,1,.17-.79L10,1.58Z\" />\n    </SvgIcon>\n  );\n});\n\nIconFix.displayName = 'IconFix';\n\nexport {IconFix};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconFlag = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M1.69,8.43V2.22H13.53l-2,2.65a.78.78,0,0,0,0,.92l2,2.64Zm0-7.7A.74.74,0,0,0,.94.09.75.75,0,0,0,.19.84V15.16a.75.75,0,0,0,1.5,0V9.93H15.06a.75.75,0,0,0,.59-1.21L13,5.33l2.62-3.4a.73.73,0,0,0,.08-.79.75.75,0,0,0-.67-.42H1.69\" />\n    </SvgIcon>\n  );\n});\n\nIconFlag.displayName = 'IconFlag';\n\nexport {IconFlag};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconGoogle = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M1,11.58A8,8,0,0,0,8.17,16a7.77,7.77,0,0,0,5.28-1.92c1.78-1.62,2.75-4.19,2.25-7.53H8.18V9.64h4.38a4.11,4.11,0,0,1-1.64,2.47,4.76,4.76,0,0,1-2.75.76A4.8,4.8,0,0,1,3.63,9.55,4.66,4.66,0,0,1,3.38,8a4.66,4.66,0,0,1,.25-1.55A4.8,4.8,0,0,1,8.17,3.13a4.44,4.44,0,0,1,3.07,1.21l2.29-2.27A7.92,7.92,0,0,0,8.17,0,8,8,0,0,0,1,11.58Z\" />\n    </SvgIcon>\n  );\n});\n\nIconGoogle.displayName = 'IconGoogle';\n\nexport {IconGoogle};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconHappy = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n      <circle cx=\"4.84\" cy=\"6.79\" r=\"0.99\" />\n      <circle cx=\"11.32\" cy=\"6.79\" r=\"0.99\" />\n      <path d=\"M8,12.27a5,5,0,0,1-4.15-2.21.75.75,0,1,1,1.24-.84,3.5,3.5,0,0,0,5.87-.08.74.74,0,0,1,1-.23.76.76,0,0,1,.23,1A5,5,0,0,1,8,12.27Z\" />\n    </SvgIcon>\n  );\n});\n\nIconHappy.displayName = 'IconHappy';\n\nexport {IconHappy};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconIssues = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M13.24,16H2.74A2.75,2.75,0,0,1,0,13.26V2.76A2.75,2.75,0,0,1,2.74,0h10.5A2.75,2.75,0,0,1,16,2.76v10.5A2.75,2.75,0,0,1,13.24,16ZM2.74,1.51A1.25,1.25,0,0,0,1.49,2.76v10.5a1.25,1.25,0,0,0,1.25,1.25h10.5a1.25,1.25,0,0,0,1.25-1.25V2.76a1.25,1.25,0,0,0-1.25-1.25Z\" />\n      <rect x=\"0.74\" y=\"2.61\" width=\"14.5\" height=\"1.5\" />\n      <rect x=\"0.74\" y=\"5.26\" width=\"14.5\" height=\"1.5\" />\n      <path d=\"M10.79,12.08H5.19a1.25,1.25,0,0,1-1.25-1.25V9.42H.74V7.92h4.7v2.66h5.1V7.92h4.7v1.5H12v1.41A1.25,1.25,0,0,1,10.79,12.08Z\" />\n    </SvgIcon>\n  );\n});\n\nIconIssues.displayName = 'IconIssues';\n\nexport {IconIssues};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconLab = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,13.29a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,8,13.29Zm0-3.5a1,1,0,1,0,1,1A1,1,0,0,0,8,9.79Z\" />\n      <path d=\"M11.31,16H4.68a3.45,3.45,0,0,1-3.49-3.4,3.34,3.34,0,0,1,.58-1.88L5.12,5.83V3.89H5a1.51,1.51,0,0,1-1.51-1.5V1.51A1.52,1.52,0,0,1,5,0h6a1.52,1.52,0,0,1,1.51,1.51v.88A1.51,1.51,0,0,1,11,3.89h-.1V5.83l3.35,4.89a3.34,3.34,0,0,1,.58,1.88A3.46,3.46,0,0,1,11.31,16ZM5,1.5v.89h.88a.75.75,0,0,1,.75.75V6.07a.7.7,0,0,1-.13.42L3,11.57a1.82,1.82,0,0,0-.32,1,2,2,0,0,0,2,1.9h6.63a2,2,0,0,0,2-1.9,1.82,1.82,0,0,0-.32-1L9.51,6.49a.7.7,0,0,1-.13-.42V3.14a.75.75,0,0,1,.75-.75H11V1.51Z\" />\n    </SvgIcon>\n  );\n});\n\nIconLab.displayName = 'IconLab';\n\nexport {IconLab};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconLightning = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M3.81,16a1.21,1.21,0,0,1-.74-.26,1.19,1.19,0,0,1-.33-1.45L4.79,10,2.32,8.39a1,1,0,0,1-.07-1.58L10.67.26a1.19,1.19,0,0,1,1.8,1.46L10.41,6,12.9,7.64a1,1,0,0,1,.44.78,1,1,0,0,1-.38.8L4.54,15.74A1.15,1.15,0,0,1,3.81,16ZM3.76,7.53l2.4,1.56a.77.77,0,0,1,.27,1L4.65,13.76l6.81-5.27L9,6.91a.75.75,0,0,1-.26-1l1.78-3.71ZM12.08,8.9Zm-.95-8h0Z\" />\n    </SvgIcon>\n  );\n});\n\nIconLightning.displayName = 'IconLightning';\n\nexport {IconLightning};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconList = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M15.19,8.75H3.7a.75.75,0,1,1,0-1.5H15.19a.75.75,0,0,1,0,1.5Z\" />\n      <circle cx=\"0.75\" cy=\"8\" r=\"0.75\" />\n      <path d=\"M15.19,15H3.7a.75.75,0,1,1,0-1.5H15.19a.75.75,0,1,1,0,1.5Z\" />\n      <circle cx=\"0.75\" cy=\"14.25\" r=\"0.75\" />\n      <path d=\"M15.19,2.53H3.7A.75.75,0,0,1,3.7,1H15.19a.75.75,0,1,1,0,1.5Z\" />\n      <circle cx=\"0.75\" cy=\"1.75\" r=\"0.75\" />\n    </SvgIcon>\n  );\n});\n\nIconList.displayName = 'IconList';\n\nexport {IconList};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconLocation = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a.74.74,0,0,1-.45-.15c-4-3-6.09-6.16-6.09-9.29A6.55,6.55,0,0,1,8,0a6.54,6.54,0,0,1,6.54,6.54c0,3.14-2,6.26-6.09,9.29A.74.74,0,0,1,8,16ZM8,1.51a5,5,0,0,0-5,5c0,2.53,1.69,5.13,5,7.74,3.34-2.61,5-5.21,5-7.74a5,5,0,0,0-5-5Z\" />\n      <path d=\"M8,8.85a2.78,2.78,0,1,1,2.77-2.77A2.78,2.78,0,0,1,8,8.85Zm0-4A1.28,1.28,0,1,0,9.27,6.08,1.27,1.27,0,0,0,8,4.8Z\" />\n    </SvgIcon>\n  );\n});\n\nIconLocation.displayName = 'IconLocation';\n\nexport {IconLocation};\n","import {forwardRef, Fragment} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  isSolid?: boolean;\n}\n\nconst IconLock = forwardRef<SVGSVGElement, Props>(({isSolid = false, ...props}, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      {isSolid ? (\n        <Fragment>\n          <path d=\"M11.67,7.94a.75.75,0,0,1-.75-.75V4.34a2.84,2.84,0,1,0-5.67,0V7.19a.75.75,0,1,1-1.5,0V4.34a4.34,4.34,0,1,1,8.67,0V7.19A.76.76,0,0,1,11.67,7.94Z\" />\n          <path d=\"M14.72,6.44H1.44a.75.75,0,0,0-.75.75v8.06a.76.76,0,0,0,.75.75H14.72a.76.76,0,0,0,.75-.75V7.19A.75.75,0,0,0,14.72,6.44ZM8.83,12.19a.75.75,0,0,1-1.5,0V10.05a.75.75,0,0,1,1.5,0Z\" />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <path d=\"M4.5,7.94a.75.75,0,0,1-.75-.75V4.34a4.34,4.34,0,0,1,8.5-1.21.76.76,0,0,1-.52.93.74.74,0,0,1-.92-.51,2.84,2.84,0,0,0-5.56.79V7.19A.76.76,0,0,1,4.5,7.94Z\" />\n          <path d=\"M14.72,16H1.44a.76.76,0,0,1-.75-.75V7.19a.75.75,0,0,1,.75-.75H14.72a.75.75,0,0,1,.75.75v8.06A.76.76,0,0,1,14.72,16ZM2.19,14.5H14V7.94H2.19Z\" />\n          <path d=\"M8.08,12.94a.76.76,0,0,1-.75-.75V10.05a.75.75,0,0,1,1.5,0v2.14A.75.75,0,0,1,8.08,12.94Z\" />\n        </Fragment>\n      )}\n    </SvgIcon>\n  );\n});\n\nIconLock.displayName = 'IconLock';\n\nexport {IconLock};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconMail = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M15.25,14.09H.75A.76.76,0,0,1,0,13.34V2.66a.76.76,0,0,1,.75-.75h14.5a.76.76,0,0,1,.75.75V13.34A.76.76,0,0,1,15.25,14.09ZM1.5,12.59h13V3.41H1.5Z\" />\n      <path d=\"M8,9.92a.78.78,0,0,1-.5-.19L.25,3.22a.75.75,0,1,1,1-1.12L8,8.16,14.75,2.1a.75.75,0,1,1,1,1.12L8.5,9.73A.78.78,0,0,1,8,9.92Z\" />\n      <rect\n        x=\"-0.27\"\n        y=\"9.92\"\n        width=\"7.99\"\n        height=\"1.5\"\n        transform=\"translate(-6.17 5.21) rotate(-41.89)\"\n      />\n      <rect\n        x=\"11.52\"\n        y=\"6.67\"\n        width=\"1.5\"\n        height=\"7.99\"\n        transform=\"translate(-3.86 12.68) rotate(-48.09)\"\n      />\n    </SvgIcon>\n  );\n});\n\nIconMail.displayName = 'IconMail';\n\nexport {IconMail};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconMarkdown = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M12.21,12.31l1.26-1.26a.75.75,0,0,1,1.06,1.06l-2.6,2.6a.75.75,0,0,1-.53.22.79.79,0,0,1-.53-.22l-2.6-2.6a.75.75,0,0,1,1.07-1.06l1.25,1.26V4.54L7.94,9.66a1.42,1.42,0,0,1-.29.4.57.57,0,0,1-.4.14H6.6a.6.6,0,0,1-.41-.14,1.65,1.65,0,0,1-.29-.4L3.25,4.54V12.6a.44.44,0,0,1-.13.32.47.47,0,0,1-.33.14h-.7a.45.45,0,0,1-.32-.14.44.44,0,0,1-.13-.32v-11a.44.44,0,0,1,.13-.33.44.44,0,0,1,.32-.13h.65a.63.63,0,0,1,.47.17,1.39,1.39,0,0,1,.28.37L6.92,8.35,10.36,1.7a1.21,1.21,0,0,1,.28-.37.61.61,0,0,1,.46-.17h.65a.42.42,0,0,1,.32.13.45.45,0,0,1,.14.33Z\" />\n    </SvgIcon>\n  );\n});\n\nIconMarkdown.displayName = 'IconMarkdown';\n\nexport {IconMarkdown};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconMegaphone = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M12.53,12H9.92a.8.8,0,0,1-.42-.13L6.44,9.76H.76A.75.75,0,0,1,0,9V3A.75.75,0,0,1,.76,2.2H6.44L9.5.13A.8.8,0,0,1,9.92,0h2.61a.76.76,0,0,1,.75.75V11.21A.76.76,0,0,1,12.53,12Zm-2.38-1.5h1.63v-9H10.15L7.09,3.57a.77.77,0,0,1-.42.13H1.51V8.26H6.67a.77.77,0,0,1,.42.13Z\" />\n      <path d=\"M12.53,9.44V7.94a2,2,0,1,0,0-3.92V2.52a3.46,3.46,0,1,1,0,6.92Z\" />\n      <path d=\"M5.28,16H1.64a.76.76,0,0,1-.75-.75V9h1.5v5.53H4.53V9H6v6.28A.76.76,0,0,1,5.28,16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconMegaphone.displayName = 'IconMegaphone';\n\nexport {IconMegaphone};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconMeh = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n      <circle cx=\"4.84\" cy=\"6.79\" r=\"0.99\" />\n      <circle cx=\"11.32\" cy=\"6.79\" r=\"0.99\" />\n      <path d=\"M12.32,10.78H3.85a.75.75,0,1,1,0-1.5h8.47a.75.75,0,0,1,0,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconMeh.displayName = 'IconMeh';\n\nexport {IconMeh};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconMobile = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M11.63 16H4.37C3.90668 15.9974 3.46308 15.8122 3.13546 15.4845C2.80784 15.1569 2.62262 14.7133 2.62 14.25V1.75C2.62262 1.28668 2.80784 0.843085 3.13546 0.515464C3.46308 0.187842 3.90668 0.0026251 4.37 0L11.63 0C12.0933 0.0026251 12.5369 0.187842 12.8645 0.515464C13.1922 0.843085 13.3774 1.28668 13.38 1.75V14.25C13.3774 14.7133 13.1922 15.1569 12.8645 15.4845C12.5369 15.8122 12.0933 15.9974 11.63 16ZM4.37 1.5C4.30369 1.5 4.2401 1.52634 4.19322 1.57322C4.14633 1.62011 4.12 1.6837 4.12 1.75V14.25C4.12 14.3163 4.14633 14.3799 4.19322 14.4268C4.2401 14.4737 4.30369 14.5 4.37 14.5H11.63C11.6963 14.5 11.7599 14.4737 11.8068 14.4268C11.8537 14.3799 11.88 14.3163 11.88 14.25V1.75C11.88 1.6837 11.8537 1.62011 11.8068 1.57322C11.7599 1.52634 11.6963 1.5 11.63 1.5H4.37Z\" />\n      <path d=\"M10 2.66H6.19C5.99109 2.66 5.80032 2.58098 5.65967 2.44033C5.51902 2.29968 5.44 2.10891 5.44 1.91V0.75C5.44 0.551088 5.51902 0.360322 5.65967 0.21967C5.80032 0.0790176 5.99109 0 6.19 0C6.38891 0 6.57968 0.0790176 6.72033 0.21967C6.86098 0.360322 6.94 0.551088 6.94 0.75V1.16H9.23V0.75C9.23 0.551088 9.30902 0.360322 9.44967 0.21967C9.59032 0.0790176 9.78109 0 9.98 0C10.1789 0 10.3697 0.0790176 10.5103 0.21967C10.651 0.360322 10.73 0.551088 10.73 0.75V1.91C10.7276 2.10474 10.6505 2.29112 10.5147 2.43068C10.3788 2.57024 10.1946 2.65233 10 2.66Z\" />\n    </SvgIcon>\n  );\n});\n\nIconMobile.displayName = 'IconMobile';\n\nexport {IconMobile};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconNext = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M.75,15.48a.69.69,0,0,1-.37-.1A.73.73,0,0,1,0,14.73V1.27A.73.73,0,0,1,.38.62a.75.75,0,0,1,.74,0L12.78,7.35a.75.75,0,0,1,0,1.3L1.12,15.38A.69.69,0,0,1,.75,15.48ZM1.5,2.57V13.43L10.91,8Z\" />\n      <path d=\"M15.25,15.94a.76.76,0,0,1-.75-.75V.81a.75.75,0,1,1,1.5,0V15.19A.76.76,0,0,1,15.25,15.94Z\" />\n    </SvgIcon>\n  );\n});\n\nIconNext.displayName = 'IconNext';\n\nexport {IconNext};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconOpen = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M13.25,16H2.75A2.75,2.75,0,0,1,0,13.25V2.75A2.75,2.75,0,0,1,2.75,0h10.5A2.75,2.75,0,0,1,16,2.75v10.5A2.75,2.75,0,0,1,13.25,16ZM2.75,1.5A1.25,1.25,0,0,0,1.5,2.75v10.5A1.25,1.25,0,0,0,2.75,14.5h10.5a1.25,1.25,0,0,0,1.25-1.25V2.75A1.25,1.25,0,0,0,13.25,1.5Z\" />\n      <path d=\"M11.13,10.63a.74.74,0,0,1-.75-.75V5.62H6.12a.75.75,0,0,1,0-1.5h5a.76.76,0,0,1,.75.75v5A.75.75,0,0,1,11.13,10.63Z\" />\n      <path d=\"M4.87,11.88a.79.79,0,0,1-.53-.22.75.75,0,0,1,0-1.06L10.6,4.34A.75.75,0,0,1,11.66,5.4L5.4,11.66A.77.77,0,0,1,4.87,11.88Z\" />\n    </SvgIcon>\n  );\n});\n\nIconOpen.displayName = 'IconOpen';\n\nexport {IconOpen};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconPause = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M5.83,15.28H1.47a.76.76,0,0,1-.75-.75V1.47A.76.76,0,0,1,1.47.72H5.83a.76.76,0,0,1,.75.75V14.53A.76.76,0,0,1,5.83,15.28Zm-3.61-1.5H5.08V2.22H2.22Z\" />\n      <path d=\"M14.53,15.28H10.17a.76.76,0,0,1-.75-.75V1.47a.76.76,0,0,1,.75-.75h4.36a.76.76,0,0,1,.75.75V14.53A.76.76,0,0,1,14.53,15.28Zm-3.61-1.5h2.86V2.22H10.92Z\" />\n    </SvgIcon>\n  );\n});\n\nIconPause.displayName = 'IconPause';\n\nexport {IconPause};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconPlay = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M2.17,15.48a.69.69,0,0,1-.37-.1.73.73,0,0,1-.38-.65V1.27A.73.73,0,0,1,1.8.62a.77.77,0,0,1,.75,0L14.2,7.35a.75.75,0,0,1,0,1.3L2.55,15.38A.75.75,0,0,1,2.17,15.48ZM2.92,2.57V13.43L12.33,8Z\" />\n    </SvgIcon>\n  );\n});\n\nIconPlay.displayName = 'IconPlay';\n\nexport {IconPlay};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconPrevious = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M15.25,15.48a.69.69,0,0,1-.37-.1L3.22,8.65a.75.75,0,0,1,0-1.3L14.88.62a.75.75,0,0,1,.74,0,.73.73,0,0,1,.38.65V14.73a.73.73,0,0,1-.38.65A.69.69,0,0,1,15.25,15.48ZM5.09,8l9.41,5.43V2.57Z\" />\n      <path d=\"M.75,15.94A.76.76,0,0,1,0,15.19V.81A.76.76,0,0,1,.75.06.76.76,0,0,1,1.5.81V15.19A.76.76,0,0,1,.75,15.94Z\" />\n    </SvgIcon>\n  );\n});\n\nIconPrevious.displayName = 'IconPrevious';\n\nexport {IconPrevious};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconPrint = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M13.12,16H2.88a.76.76,0,0,1-.75-.75V6a.76.76,0,0,1,.75-.75H13.12a.76.76,0,0,1,.75.75v9.21A.76.76,0,0,1,13.12,16Zm-9.49-1.5h8.74V6.77H3.63Z\" />\n      <path d=\"M13.25,12.12h-.13v-1.5h.13A1.25,1.25,0,0,0,14.5,9.38V2.75A1.25,1.25,0,0,0,13.25,1.5H2.75A1.25,1.25,0,0,0,1.5,2.75V9.38a1.25,1.25,0,0,0,1.25,1.24h.13v1.5H2.75A2.75,2.75,0,0,1,0,9.38V2.75A2.75,2.75,0,0,1,2.75,0h10.5A2.75,2.75,0,0,1,16,2.75V9.38A2.75,2.75,0,0,1,13.25,12.12Z\" />\n      <path d=\"M11.08,10H4.92a.75.75,0,0,1,0-1.5h6.16a.75.75,0,1,1,0,1.5Z\" />\n      <path d=\"M4.43,3.61H2.88a.75.75,0,0,1,0-1.5H4.43a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M11.08,12.8H4.92a.75.75,0,1,1,0-1.5h6.16a.75.75,0,1,1,0,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconPrint.displayName = 'IconPrint';\n\nexport {IconPrint};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconProject = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M5.43,11.92a.73.73,0,0,1-.53-.22L3,9.82A.75.75,0,0,1,3,8.76L4.9,6.88A.75.75,0,0,1,6,7.94L4.61,9.29,6,10.64A.75.75,0,0,1,6,11.7.74.74,0,0,1,5.43,11.92Z\" />\n      <path d=\"M10.58,11.92a.74.74,0,0,1-.53-.22.75.75,0,0,1,0-1.06L11.4,9.29,10.05,7.94a.75.75,0,0,1,1.06-1.06L13,8.76a.74.74,0,0,1,0,1.06L11.11,11.7A.71.71,0,0,1,10.58,11.92Z\" />\n      <path d=\"M15.26,16H.76A.75.75,0,0,1,0,15.26V.76A.74.74,0,0,1,.76,0H5.12A2.75,2.75,0,0,1,6.77.56L8.51,1.87a1.3,1.3,0,0,0,.75.25h6a.76.76,0,0,1,.75.75V15.26A.76.76,0,0,1,15.26,16ZM1.51,14.51h13V3.62H9.26a2.75,2.75,0,0,1-1.65-.55L5.87,1.76h0a1.3,1.3,0,0,0-.75-.25H1.51Z\" />\n    </SvgIcon>\n  );\n});\n\nIconProject.displayName = 'IconProject';\n\nexport {IconProject};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconDiamond = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a.74.74,0,0,1-.53-.22L.21,8.53a.75.75,0,0,1,0-1.06L7.47.21a.75.75,0,0,1,1.06,0l7.26,7.26a.75.75,0,0,1,0,1.06L8.53,15.79A.74.74,0,0,1,8,16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconDiamond.displayName = 'IconDiamond';\n\nexport {IconDiamond};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconReleases = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M14.77,16H1.23A1.26,1.26,0,0,1,0,14.75V6.52A1.25,1.25,0,0,1,1.23,5.27H14.77A1.25,1.25,0,0,1,16,6.52v8.23A1.26,1.26,0,0,1,14.77,16ZM1.48,14.5h13V6.77h-13Z\" />\n      <path d=\"M14.71,6h-1.5V4.14H2.79V6H1.29V3.89A1.25,1.25,0,0,1,2.54,2.64H13.46a1.25,1.25,0,0,1,1.25,1.25Z\" />\n      <path d=\"M13.37,3.39h-1.5V1.5H4.13V3.39H2.63V1.25A1.26,1.26,0,0,1,3.88,0h8.24a1.26,1.26,0,0,1,1.25,1.25Z\" />\n    </SvgIcon>\n  );\n});\n\nIconReleases.displayName = 'IconReleases';\n\nexport {IconReleases};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSad = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n      <circle cx=\"4.84\" cy=\"6.79\" r=\"0.99\" />\n      <circle cx=\"11.32\" cy=\"6.79\" r=\"0.99\" />\n      <path d=\"M4.44,12.27a.72.72,0,0,1-.4-.12.76.76,0,0,1-.23-1A5,5,0,0,1,12.18,11a.75.75,0,1,1-1.24.84,3.5,3.5,0,0,0-5.87.08A.75.75,0,0,1,4.44,12.27Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSad.displayName = 'IconSad';\n\nexport {IconSad};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSentry = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M15.8,14.57a1.53,1.53,0,0,0,0-1.52L9.28,1.43a1.46,1.46,0,0,0-2.56,0L4.61,5.18l.54.32A10.43,10.43,0,0,1,8.92,9.39a10.84,10.84,0,0,1,1.37,4.67H8.81a9.29,9.29,0,0,0-1.16-3.91A9,9,0,0,0,4.41,6.81L3.88,6.5,1.91,10l.53.32a5.12,5.12,0,0,1,2.42,3.73H1.48a.25.25,0,0,1-.21-.12.24.24,0,0,1,0-.25L2.21,12a3.32,3.32,0,0,0-1.07-.63L.2,13.05a1.53,1.53,0,0,0,0,1.52,1.46,1.46,0,0,0,1.28.76H6.13V14.7a6.55,6.55,0,0,0-.82-3.16,6.31,6.31,0,0,0-1.73-2l.74-1.32a7.85,7.85,0,0,1,2.26,2.53,8,8,0,0,1,1,3.92v.63h3.94V14.7A12.14,12.14,0,0,0,10,8.75a11.8,11.8,0,0,0-3.7-4l1.5-2.67a.24.24,0,0,1,.42,0l6.52,11.63a.24.24,0,0,1,0,.25.24.24,0,0,1-.21.12H13c0,.43,0,.85,0,1.27h1.53a1.46,1.46,0,0,0,1.28-.76\" />\n    </SvgIcon>\n  );\n});\n\nIconSentry.displayName = 'IconSentry';\n\nexport {IconSentry};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconShow = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,14.16c-3.67,0-6.18-1.87-7.9-5.86a.78.78,0,0,1,0-.6c1.72-4,4.23-5.86,7.9-5.86s6.18,1.87,7.9,5.86a.78.78,0,0,1,0,.6C14.18,12.29,11.67,14.16,8,14.16ZM1.61,8C3.07,11.22,5.05,12.66,8,12.66S12.93,11.22,14.39,8C12.93,4.78,11,3.34,8,3.34S3.07,4.78,1.61,8Z\" />\n      <circle cx=\"8\" cy=\"8\" r=\"3.61\" />\n    </SvgIcon>\n  );\n});\n\nIconShow.displayName = 'IconShow';\n\nexport {IconShow};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSiren = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M14.74,16H1.26a.75.75,0,0,1-.75-.75V13.08a1.75,1.75,0,0,1,1.75-1.75H13.74a1.75,1.75,0,0,1,1.75,1.75v2.17A.75.75,0,0,1,14.74,16ZM2,14.5H14V13.08a.25.25,0,0,0-.25-.25H2.26a.25.25,0,0,0-.25.25Z\" />\n      <path d=\"M12.48,12.24,11.21,6.08a1.2,1.2,0,0,0-1.18-1H6a1.2,1.2,0,0,0-1.18,1L3.52,12.24l-1.46-.31L3.32,5.78A2.71,2.71,0,0,1,6,3.61H10a2.71,2.71,0,0,1,2.65,2.17l1.26,6.15Z\" />\n      <path d=\"M4,3.45a.75.75,0,0,1-.64-.36L2.56,1.77a.75.75,0,0,1,.24-1,.76.76,0,0,1,1,.24L4.65,2.3a.76.76,0,0,1-.24,1A.79.79,0,0,1,4,3.45Z\" />\n      <path d=\"M2.15,5.94H.77a.75.75,0,0,1,0-1.5H2.15a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M8,2.92a.76.76,0,0,1-.75-.75V.77a.75.75,0,1,1,1.5,0v1.4A.76.76,0,0,1,8,2.92Z\" />\n      <path d=\"M12,3.45a.79.79,0,0,1-.39-.11.76.76,0,0,1-.24-1L12.16,1a.76.76,0,0,1,1-.24.75.75,0,0,1,.24,1l-.82,1.32A.75.75,0,0,1,12,3.45Z\" />\n      <path d=\"M15.23,5.94H13.85a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M8,10.63a2,2,0,1,1,2-2A2,2,0,0,1,8,10.63ZM8,8.09a.52.52,0,1,0,.52.52A.52.52,0,0,0,8,8.09Z\" />\n      <rect x=\"7.25\" y=\"9.88\" width=\"1.5\" height=\"2.21\" />\n    </SvgIcon>\n  );\n});\n\nIconSiren.displayName = 'IconSiren';\n\nexport {IconSiren};\n","import {forwardRef} from 'react';\nimport {css} from '@emotion/react';\n\nimport theme from 'sentry/utils/theme';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  direction?: 'up' | 'right' | 'down' | 'left';\n}\n\nconst IconSliders = forwardRef<SVGSVGElement, Props>(\n  ({direction = 'up', ...props}, ref) => {\n    return (\n      <SvgIcon\n        {...props}\n        ref={ref}\n        css={\n          direction\n            ? css`\n                transform: rotate(${theme.iconDirections[direction]}deg);\n              `\n            : undefined\n        }\n      >\n        <path d=\"M4.33,14a2.86,2.86,0,1,1,2.86-2.85A2.86,2.86,0,0,1,4.33,14Zm0-4.21a1.36,1.36,0,1,0,1.36,1.36A1.35,1.35,0,0,0,4.33,9.75Z\" />\n        <path d=\"M11.71,7.75a2.86,2.86,0,1,1,2.85-2.86A2.86,2.86,0,0,1,11.71,7.75Zm0-4.21a1.36,1.36,0,1,0,1.35,1.35A1.36,1.36,0,0,0,11.71,3.54Z\" />\n        <path d=\"M15.19,11.86H6.44a.75.75,0,0,1,0-1.5h8.75a.75.75,0,0,1,0,1.5Z\" />\n        <path d=\"M2.23,11.86H.81a.75.75,0,0,1,0-1.5H2.23a.75.75,0,1,1,0,1.5Z\" />\n        <path d=\"M15.19,5.64H13.81a.75.75,0,0,1,0-1.5h1.38a.75.75,0,0,1,0,1.5Z\" />\n        <path d=\"M9.6,5.64H.81a.75.75,0,1,1,0-1.5H9.6a.75.75,0,0,1,0,1.5Z\" />\n      </SvgIcon>\n    );\n  }\n);\n\nIconSliders.displayName = 'IconSliders';\n\nexport {IconSliders};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSpan = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8.28,14.48h6.24V11.16H8.28ZM4.88,9.66h6.24V6.34H4.88Zm7.74,0h2.15A1.25,1.25,0,0,1,16,10.91v3.82A1.25,1.25,0,0,1,14.77,16H8a1.25,1.25,0,0,1-1.25-1.25V11.16H4.63A1.25,1.25,0,0,1,3.38,9.91V6.34H1.23A1.25,1.25,0,0,1,0,5.09V1.27A1.25,1.25,0,0,1,1.23,0H8A1.25,1.25,0,0,1,9.22,1.27V4.84h2.15a1.25,1.25,0,0,1,1.25,1.25ZM1.48,4.84H7.72V1.52H1.48Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSpan.displayName = 'IconSpan';\n\nexport {IconSpan};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconStack = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M8,9.87a.76.76,0,0,1-.38-.11L.39,5.59A.74.74,0,0,1,0,4.94a.77.77,0,0,1,.37-.65L7.62.12a.79.79,0,0,1,.76,0l7.23,4.17a.77.77,0,0,1,.37.65.74.74,0,0,1-.37.65L8.38,9.76A.76.76,0,0,1,8,9.87ZM2.27,4.94,8,8.25l5.73-3.31L8,1.64Z\" />\n      <path d=\"M8,12.93a.75.75,0,0,1-.38-.1L.39,8.66a.76.76,0,0,1-.27-1,.75.75,0,0,1,1-.27l6.86,4,6.86-3.95a.75.75,0,0,1,1,.27.76.76,0,0,1-.27,1L8.38,12.83A.75.75,0,0,1,8,12.93Z\" />\n      <path d=\"M8,16a.76.76,0,0,1-.38-.11L.39,11.72a.75.75,0,0,1,.75-1.3l6.86,4,6.86-4a.75.75,0,0,1,1,.28.75.75,0,0,1-.27,1L8.38,15.89A.76.76,0,0,1,8,16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconStack.displayName = 'IconStack';\n\nexport {IconStack};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconStats = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M13.25,16H2.75A2.75,2.75,0,0,1,0,13.25V2.75A2.75,2.75,0,0,1,2.75,0h10.5A2.75,2.75,0,0,1,16,2.75v10.5A2.75,2.75,0,0,1,13.25,16ZM2.75,1.5A1.25,1.25,0,0,0,1.5,2.75v10.5A1.25,1.25,0,0,0,2.75,14.5h10.5a1.25,1.25,0,0,0,1.25-1.25V2.75A1.25,1.25,0,0,0,13.25,1.5Z\" />\n      <path d=\"M3.59,15.65a.76.76,0,0,1-.75-.75V9.25a.75.75,0,0,1,1.5,0V14.9A.75.75,0,0,1,3.59,15.65Z\" />\n      <path d=\"M6.53,15.65a.76.76,0,0,1-.75-.75V9.25a.75.75,0,0,1,1.5,0V14.9A.76.76,0,0,1,6.53,15.65Z\" />\n      <path d=\"M9.47,15.65a.76.76,0,0,1-.75-.75V7.8a.75.75,0,1,1,1.5,0v7.1A.76.76,0,0,1,9.47,15.65Z\" />\n      <path d=\"M12.41,15.65a.75.75,0,0,1-.75-.75v-10a.75.75,0,1,1,1.5,0V14.9A.76.76,0,0,1,12.41,15.65Z\" />\n    </SvgIcon>\n  );\n});\n\nIconStats.displayName = 'IconStats';\n\nexport {IconStats};\n","import {forwardRef, Fragment} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\ninterface Props extends SVGIconProps {\n  isCircled?: boolean;\n}\n\nconst IconSubtract = forwardRef<SVGSVGElement, Props>(\n  ({isCircled = false, ...props}, ref) => {\n    return (\n      <SvgIcon {...props} data-test-id=\"icon-subtract\" ref={ref}>\n        {isCircled ? (\n          <Fragment>\n            <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,1.53A6.47,6.47,0,1,0,14.47,8,6.47,6.47,0,0,0,8,1.53Z\" />\n            <path d=\"M11.28,8.75H4.72a.75.75,0,1,1,0-1.5h6.56a.75.75,0,1,1,0,1.5Z\" />\n          </Fragment>\n        ) : (\n          <path d=\"M14,8.75H2a.75.75,0,0,1,0-1.5H14a.75.75,0,0,1,0,1.5Z\" />\n        )}\n      </SvgIcon>\n    );\n  }\n);\n\nIconSubtract.displayName = 'IconSubtract';\n\nexport {IconSubtract};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSupport = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M9.9,15.61H6.1a.74.74,0,0,1-.75-.75v-2.6a.74.74,0,0,1,.75-.75H9.9a.74.74,0,0,1,.75.75v2.6A.74.74,0,0,1,9.9,15.61Zm-3.05-1.5h2.3V13H6.85Z\" />\n      <path d=\"M6.1,14.31H5.37a2.75,2.75,0,0,1-2.75-2.75V3.14A2.75,2.75,0,0,1,5.37.39h5.26a2.75,2.75,0,0,1,2.75,2.75V9.4h-1.5V3.14a1.25,1.25,0,0,0-1.25-1.25H5.37A1.25,1.25,0,0,0,4.12,3.14v8.42a1.25,1.25,0,0,0,1.25,1.25H6.1Z\" />\n      <path d=\"M3.37,10.16H2.2A2.25,2.25,0,0,1,0,7.91V7A2.25,2.25,0,0,1,2.2,4.74H3.37v1.5H2.2A.74.74,0,0,0,1.45,7v.92a.75.75,0,0,0,.75.75H3.37Z\" />\n      <path d=\"M13.8,10.16H12.63V8.66H13.8a.75.75,0,0,0,.75-.75V7a.74.74,0,0,0-.75-.75H12.63V4.74H13.8A2.25,2.25,0,0,1,16.05,7v.92A2.25,2.25,0,0,1,13.8,10.16Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSupport.displayName = 'IconSupport';\n\nexport {IconSupport};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconSync = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M14.42,15.9a.75.75,0,0,1-.75-.75V11.89H10.41a.75.75,0,0,1,0-1.5h4a.75.75,0,0,1,.75.75v4A.76.76,0,0,1,14.42,15.9Z\" />\n      <path d=\"M8,15.9A7.91,7.91,0,0,1,.11,8a.76.76,0,0,1,.75-.75A.76.76,0,0,1,1.61,8a6.39,6.39,0,0,0,12.14,2.81.75.75,0,0,1,1.35.66A7.86,7.86,0,0,1,8,15.9Z\" />\n      <path d=\"M5.61,5.61h-4a.75.75,0,0,1-.75-.75v-4a.75.75,0,0,1,1.5,0V4.11H5.61a.75.75,0,0,1,0,1.5Z\" />\n      <path d=\"M15.15,8.75A.76.76,0,0,1,14.4,8,6.39,6.39,0,0,0,2.26,5.19.75.75,0,0,1,.91,4.53,7.9,7.9,0,0,1,15.9,8,.75.75,0,0,1,15.15,8.75Z\" />\n    </SvgIcon>\n  );\n});\n\nIconSync.displayName = 'IconSync';\n\nexport {IconSync};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconTelescope = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M4.66,16a.76.76,0,0,1-.73-1l1.24-4.38a.75.75,0,1,1,1.45.41L5.38,15.46A.77.77,0,0,1,4.66,16Z\" />\n      <path d=\"M11,16a.77.77,0,0,1-.63-.33L6.8,10.4a.75.75,0,0,1,1.25-.83l3.53,5.27a.74.74,0,0,1-.21,1A.71.71,0,0,1,11,16Z\" />\n      <path d=\"M3.68,12.77A1.6,1.6,0,0,1,2.29,12L.57,9a1.63,1.63,0,0,1,.62-2.22L6.74,3.56l.75,1.3L2,8.09c-.08.05-.11.13-.09.17l1.73,3a.24.24,0,0,0,.19,0L9.32,8l.75,1.3L4.53,12.54A1.72,1.72,0,0,1,3.68,12.77Z\" />\n      <path d=\"M10.88,10.53A1.68,1.68,0,0,1,9.43,9.7L6.12,4a1.67,1.67,0,0,1,.61-2.29L9.29.23a1.7,1.7,0,0,1,2.28.6l3.31,5.7a1.66,1.66,0,0,1,.17,1.27,1.62,1.62,0,0,1-.78,1L11.71,10.3A1.62,1.62,0,0,1,10.88,10.53Zm-.75-9L7.48,3a.16.16,0,0,0-.08.1.19.19,0,0,0,0,.13l3.31,5.7A.17.17,0,0,0,11,9l2.56-1.48a.18.18,0,0,0,.08-.11.13.13,0,0,0,0-.12l-3.3-5.71A.18.18,0,0,0,10.13,1.5Z\" />\n      <path d=\"M14.24,6.82,13.4,5.58a1.7,1.7,0,0,0-1-3.1,1.59,1.59,0,0,0-.74.18L11,1.31A3.14,3.14,0,0,1,12.45,1a3.2,3.2,0,0,1,1.79,5.84Z\" />\n    </SvgIcon>\n  );\n});\n\nIconTelescope.displayName = 'IconTelescope';\n\nexport {IconTelescope};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconTerminal = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M.76,13.54a.74.74,0,0,1-.53-.22.75.75,0,0,1,0-1.06L4.75,7.74.23,3.22A.75.75,0,0,1,1.29,2.16L6.34,7.21a.75.75,0,0,1,0,1.06l-5,5.05A.74.74,0,0,1,.76,13.54Z\" />\n      <path d=\"M15.24,13.8H6.79a.75.75,0,1,1,0-1.5h8.45a.75.75,0,0,1,0,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconTerminal.displayName = 'IconTerminal';\n\nexport {IconTerminal};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconToggle = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <circle cx=\"5.36\" cy=\"8\" r=\"3.08\" />\n      <path d=\"M10.68,13.34H5.32a5.34,5.34,0,0,1,0-10.68h5.36a5.34,5.34,0,0,1,0,10.68ZM5.32,4.16a3.84,3.84,0,0,0,0,7.68h5.36a3.84,3.84,0,0,0,0-7.68Z\" />\n    </SvgIcon>\n  );\n});\n\nIconToggle.displayName = 'IconToggle';\n\nexport {IconToggle};\n","import {forwardRef} from 'react';\n\nimport SvgIcon, {SVGIconProps} from './svgIcon';\n\nconst IconUpgrade = forwardRef<SVGSVGElement, SVGIconProps>((props, ref) => {\n  return (\n    <SvgIcon {...props} ref={ref}>\n      <path d=\"M11.54,7.5A.79.79,0,0,1,11,7.28l-3-3-3,3a.75.75,0,0,1-1.06,0,.74.74,0,0,1,0-1.06L7.47,2.67a.77.77,0,0,1,1.06,0l3.54,3.55a.74.74,0,0,1,0,1.06A.77.77,0,0,1,11.54,7.5Z\" />\n      <path d=\"M8,12.8a.76.76,0,0,1-.75-.75V3.2a.75.75,0,1,1,1.5,0v8.85A.76.76,0,0,1,8,12.8Z\" />\n      <path d=\"M13.25,16H2.75A2.75,2.75,0,0,1,0,13.25V2.75A2.75,2.75,0,0,1,2.75,0h10.5A2.75,2.75,0,0,1,16,2.75v10.5A2.75,2.75,0,0,1,13.25,16ZM2.75,1.5A1.25,1.25,0,0,0,1.5,2.75v10.5A1.25,1.25,0,0,0,2.75,14.5h10.5a1.25,1.25,0,0,0,1.25-1.25V2.75A1.25,1.25,0,0,0,13.25,1.5Z\" />\n    </SvgIcon>\n  );\n});\n\nIconUpgrade.displayName = 'IconUpgrade';\n\nexport {IconUpgrade};\n","import {forwardRef} from 'react';\nimport {useTheme} from '@emotion/react';\n\nimport {Aliases, Color, IconSize} from 'sentry/utils/theme';\n\nexport interface SVGIconProps extends React.SVGAttributes<SVGSVGElement> {\n  className?: string;\n  color?: Color | keyof Aliases;\n  // TODO (Priscila): make size prop theme icon size only\n  size?: IconSize | string;\n}\n\nconst SvgIcon = forwardRef<SVGSVGElement, SVGIconProps>(function SvgIcon(\n  {\n    color: providedColor = 'currentColor',\n    size: providedSize = 'sm',\n    viewBox = '0 0 16 16',\n    ...props\n  },\n  ref\n) {\n  const theme = useTheme();\n  const color = theme[providedColor] ?? providedColor;\n  const size = theme.iconSizes[providedSize] ?? providedSize;\n\n  return (\n    <svg {...props} viewBox={viewBox} fill={color} height={size} width={size} ref={ref} />\n  );\n});\n\nexport default SvgIcon;\n","import {Component} from 'react';\nimport isFunction from 'lodash/isFunction';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {FormState, GenericField} from 'sentry/components/deprecatedforms';\nimport {t} from 'sentry/locale';\n\nconst callbackWithArgs = function (context: any, callback: any, ...args: any) {\n  return isFunction(callback) ? callback.bind(context, ...args) : undefined;\n};\n\ntype GenericFieldProps = Parameters<typeof GenericField>[0];\n\ntype Props = {};\n\ntype State = {state: GenericFieldProps['formState']};\n\nclass PluginComponentBase<\n  P extends Props = Props,\n  S extends State = State\n> extends Component<P, S> {\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    [\n      'onLoadSuccess',\n      'onLoadError',\n      'onSave',\n      'onSaveSuccess',\n      'onSaveError',\n      'onSaveComplete',\n      'renderField',\n    ].map(method => (this[method] = this[method].bind(this)));\n\n    if (this.fetchData) {\n      this.fetchData = this.onLoad.bind(this, this.fetchData.bind(this));\n    }\n    if (this.onSubmit) {\n      this.onSubmit = this.onSave.bind(this, this.onSubmit.bind(this));\n    }\n    this.state = {\n      state: FormState.READY,\n    } as Readonly<S>;\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    window.clearTimeout(this.successMessageTimeout);\n    window.clearTimeout(this.errorMessageTimeout);\n  }\n\n  successMessageTimeout: number | undefined = undefined;\n  errorMessageTimeout: number | undefined = undefined;\n\n  api = new Client();\n\n  fetchData() {\n    // Allow children to implement this\n  }\n\n  onSubmit() {\n    // Allow children to implement this\n  }\n\n  onLoad(callback, ...args) {\n    this.setState(\n      {\n        state: FormState.LOADING,\n      },\n      callbackWithArgs(this, callback, ...args)\n    );\n  }\n\n  onLoadSuccess() {\n    this.setState({\n      state: FormState.READY,\n    });\n  }\n\n  onLoadError(callback, ...args) {\n    this.setState(\n      {\n        state: FormState.ERROR,\n      },\n      callbackWithArgs(this, callback, ...args)\n    );\n    addErrorMessage(t('An error occurred.'));\n  }\n\n  onSave(callback, ...args) {\n    if (this.state.state === FormState.SAVING) {\n      return;\n    }\n    callback = callbackWithArgs(this, callback, ...args);\n    this.setState(\n      {\n        state: FormState.SAVING,\n      },\n      () => {\n        addLoadingMessage(t('Saving changes\\u2026'));\n        callback && callback();\n      }\n    );\n  }\n\n  onSaveSuccess(callback, ...args) {\n    callback = callbackWithArgs(this, callback, ...args);\n    this.setState(\n      {\n        state: FormState.READY,\n      },\n      () => callback && callback()\n    );\n\n    window.clearTimeout(this.successMessageTimeout);\n    this.successMessageTimeout = window.setTimeout(() => {\n      addSuccessMessage(t('Success!'));\n    }, 0);\n  }\n\n  onSaveError(callback, ...args) {\n    callback = callbackWithArgs(this, callback, ...args);\n    this.setState(\n      {\n        state: FormState.ERROR,\n      },\n      () => callback && callback()\n    );\n\n    window.clearTimeout(this.errorMessageTimeout);\n    this.errorMessageTimeout = window.setTimeout(() => {\n      addErrorMessage(t('Unable to save changes. Please try again.'));\n    }, 0);\n  }\n\n  onSaveComplete(callback, ...args) {\n    clearIndicators();\n    callback = callbackWithArgs(this, callback, ...args);\n    callback && callback();\n  }\n\n  renderField(props: Omit<GenericFieldProps, 'formState'>): React.ReactNode {\n    props = {...props};\n    const newProps = {\n      ...props,\n      formState: this.state.state,\n    };\n    return <GenericField key={newProps.config?.name} {...newProps} />;\n  }\n}\n\nexport default PluginComponentBase;\n","import styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport PluginComponentBase from 'sentry/components/bases/pluginComponentBase';\nimport {Form, FormState} from 'sentry/components/deprecatedforms';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Plugin, Project} from 'sentry/types';\nimport {parseRepo} from 'sentry/utils';\nimport {IntegrationAnalyticsKey} from 'sentry/utils/analytics/integrations';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  organization: Organization;\n  plugin: Plugin;\n  project: Project;\n} & PluginComponentBase['props'];\n\ntype Field = Parameters<typeof PluginComponentBase.prototype.renderField>[0]['config'];\n\ntype BackendField = Field & {defaultValue?: any; value?: any};\n\ntype State = {\n  errors: Record<string, any>;\n  fieldList: Field[] | null;\n  formData: Record<string, any>;\n  initialData: Record<string, any> | null;\n  rawData: Record<string, any>;\n  wasConfiguredOnPageLoad: boolean;\n} & PluginComponentBase['state'];\n\nclass PluginSettings<\n  P extends Props = Props,\n  S extends State = State\n> extends PluginComponentBase<P, S> {\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    Object.assign(this.state, {\n      fieldList: null,\n      initialData: null,\n      formData: null,\n      errors: {},\n      rawData: {},\n      // override default FormState.READY if api requests are\n      // necessary to even load the form\n      state: FormState.LOADING,\n      wasConfiguredOnPageLoad: false,\n    });\n  }\n\n  trackPluginEvent = (eventKey: IntegrationAnalyticsKey) => {\n    trackIntegrationAnalytics(eventKey, {\n      integration: this.props.plugin.id,\n      integration_type: 'plugin',\n      view: 'plugin_details',\n      already_installed: this.state.wasConfiguredOnPageLoad,\n      organization: this.props.organization,\n    });\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getPluginEndpoint() {\n    const org = this.props.organization;\n    const project = this.props.project;\n    return `/projects/${org.slug}/${project.slug}/plugins/${this.props.plugin.id}/`;\n  }\n\n  changeField(name: string, value: any) {\n    const formData: State['formData'] = this.state.formData;\n    formData[name] = value;\n    // upon changing a field, remove errors\n    const errors = this.state.errors;\n    delete errors[name];\n    this.setState({formData, errors});\n  }\n\n  onSubmit() {\n    if (!this.state.wasConfiguredOnPageLoad) {\n      // Users cannot install plugins like other integrations but we need the events for the funnel\n      // we will treat a user saving a plugin that wasn't already configured as an installation event\n      this.trackPluginEvent('integrations.installation_start');\n    }\n\n    let repo = this.state.formData.repo;\n    repo = repo && parseRepo(repo);\n    const parsedFormData = {...this.state.formData, repo};\n    this.api.request(this.getPluginEndpoint(), {\n      data: parsedFormData,\n      method: 'PUT',\n      success: this.onSaveSuccess.bind(this, data => {\n        const formData = {};\n        const initialData = {};\n        data.config.forEach(field => {\n          formData[field.name] = field.value || field.defaultValue;\n          initialData[field.name] = field.value;\n        });\n        this.setState({\n          fieldList: data.config,\n          formData,\n          initialData,\n          errors: {},\n        });\n        this.trackPluginEvent('integrations.config_saved');\n\n        if (!this.state.wasConfiguredOnPageLoad) {\n          this.trackPluginEvent('integrations.installation_complete');\n        }\n      }),\n      error: this.onSaveError.bind(this, error => {\n        this.setState({\n          errors: (error.responseJSON || {}).errors || {},\n        });\n      }),\n      complete: this.onSaveComplete,\n    });\n  }\n\n  fetchData() {\n    this.api.request(this.getPluginEndpoint(), {\n      success: data => {\n        if (!data.config) {\n          this.setState(\n            {\n              rawData: data,\n            },\n            this.onLoadSuccess\n          );\n          return;\n        }\n        let wasConfiguredOnPageLoad = false;\n        const formData = {};\n        const initialData = {};\n        data.config.forEach((field: BackendField) => {\n          formData[field.name] = field.value || field.defaultValue;\n          initialData[field.name] = field.value;\n          // for simplicity sake, we will consider a plugin was configured if we have any value that is stored in the DB\n          wasConfiguredOnPageLoad = wasConfiguredOnPageLoad || !!field.value;\n        });\n        this.setState(\n          {\n            fieldList: data.config,\n            formData,\n            initialData,\n            wasConfiguredOnPageLoad,\n            // call this here to prevent FormState.READY from being\n            // set before fieldList is\n          },\n          this.onLoadSuccess\n        );\n      },\n      error: this.onLoadError,\n    });\n  }\n\n  render() {\n    if (this.state.state === FormState.LOADING) {\n      return <LoadingIndicator />;\n    }\n    const isSaving = this.state.state === FormState.SAVING;\n    const hasChanges = !isEqual(this.state.initialData, this.state.formData);\n\n    const data = this.state.rawData;\n    if (data.config_error) {\n      let authUrl = data.auth_url;\n      if (authUrl.indexOf('?') === -1) {\n        authUrl += '?next=' + encodeURIComponent(document.location.pathname);\n      } else {\n        authUrl += '&next=' + encodeURIComponent(document.location.pathname);\n      }\n      return (\n        <div className=\"m-b-1\">\n          <div className=\"alert alert-warning m-b-1\">{data.config_error}</div>\n          <a className=\"btn btn-primary\" href={authUrl}>\n            {t('Associate Identity')}\n          </a>\n        </div>\n      );\n    }\n\n    if (this.state.state === FormState.ERROR && !this.state.fieldList) {\n      return (\n        <div className=\"alert alert-error m-b-1\">\n          {tct('An unknown error occurred. Need help with this? [link:Contact support]', {\n            link: <a href=\"https://sentry.io/support/\" />,\n          })}\n        </div>\n      );\n    }\n\n    const fieldList: State['fieldList'] = this.state.fieldList;\n\n    if (!fieldList?.length) {\n      return null;\n    }\n    return (\n      <Form\n        css={{width: '100%'}}\n        onSubmit={this.onSubmit}\n        submitDisabled={isSaving || !hasChanges}\n      >\n        <Flex>\n          {this.state.errors.__all__ && (\n            <div className=\"alert alert-block alert-error\">\n              <ul>\n                <li>{this.state.errors.__all__}</li>\n              </ul>\n            </div>\n          )}\n          {this.state.fieldList?.map(f =>\n            this.renderField({\n              config: f,\n              formData: this.state.formData,\n              formErrors: this.state.errors,\n              onChange: this.changeField.bind(this, f.name),\n            })\n          )}\n        </Flex>\n      </Form>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default PluginSettings;\n","import Settings from 'sentry/plugins/components/settings';\nimport {Organization, Plugin, Project} from 'sentry/types';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n};\n\nclass BasePlugin {\n  plugin: Plugin;\n  constructor(data: Plugin) {\n    this.plugin = data;\n  }\n\n  renderSettings(props: Props) {\n    return <Settings plugin={this.plugin} {...props} />;\n  }\n}\n\nexport default BasePlugin;\n","import GroupActions from 'sentry/actions/groupActions';\nimport PluginComponentBase from 'sentry/components/bases/pluginComponentBase';\nimport {Form, FormState} from 'sentry/components/deprecatedforms';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {Group, Organization, Plugin, Project} from 'sentry/types';\n\ntype Field = {\n  depends?: string[];\n  has_autocomplete?: boolean;\n} & Parameters<typeof PluginComponentBase.prototype.renderField>[0]['config'];\n\ntype ActionType = 'link' | 'create' | 'unlink';\ntype FieldStateValue = typeof FormState[keyof typeof FormState];\n\ntype Props = {\n  actionType: ActionType;\n  group: Group;\n  organization: Organization;\n  plugin: Plugin & {\n    issue?: {\n      issue_id: string;\n      label: string;\n      url: string;\n    };\n  };\n  project: Project;\n  onError?: (data: any) => void;\n  onSuccess?: (data: any) => void;\n};\n\ntype State = {\n  createFormData: Record<string, any>;\n  dependentFieldState: Record<string, FieldStateValue>;\n  linkFormData: Record<string, any>;\n  unlinkFormData: Record<string, any>;\n  createFieldList?: Field[];\n  error?: {\n    message: string;\n    auth_url?: string;\n    error_type?: string;\n    errors?: Record<string, string>;\n    has_auth_configured?: boolean;\n    required_auth_settings?: string[];\n  };\n  linkFieldList?: Field[];\n  loading?: boolean;\n  unlinkFieldList?: Field[];\n} & PluginComponentBase['state'];\n\nclass IssueActions extends PluginComponentBase<Props, State> {\n  constructor(props: Props, context) {\n    super(props, context);\n\n    this.createIssue = this.onSave.bind(this, this.createIssue.bind(this));\n    this.linkIssue = this.onSave.bind(this, this.linkIssue.bind(this));\n    this.unlinkIssue = this.onSave.bind(this, this.unlinkIssue.bind(this));\n    this.onSuccess = this.onSaveSuccess.bind(this, this.onSuccess.bind(this));\n    this.errorHandler = this.onLoadError.bind(this, this.errorHandler.bind(this));\n\n    this.state = {\n      ...this.state,\n      loading: ['link', 'create'].includes(this.props.actionType),\n      state: ['link', 'create'].includes(this.props.actionType)\n        ? FormState.LOADING\n        : FormState.READY,\n      createFormData: {},\n      linkFormData: {},\n      dependentFieldState: {},\n    };\n  }\n\n  getGroup() {\n    return this.props.group;\n  }\n\n  getProject() {\n    return this.props.project;\n  }\n\n  getOrganization() {\n    return this.props.organization;\n  }\n\n  getFieldListKey() {\n    switch (this.props.actionType) {\n      case 'link':\n        return 'linkFieldList';\n      case 'unlink':\n        return 'unlinkFieldList';\n      case 'create':\n        return 'createFieldList';\n      default:\n        throw new Error('Unexpeced action type');\n    }\n  }\n\n  getFormDataKey(actionType?: ActionType) {\n    switch (actionType || this.props.actionType) {\n      case 'link':\n        return 'linkFormData';\n      case 'unlink':\n        return 'unlinkFormData';\n      case 'create':\n        return 'createFormData';\n      default:\n        throw new Error('Unexpeced action type');\n    }\n  }\n\n  getFormData() {\n    const key = this.getFormDataKey();\n    return this.state[key] || {};\n  }\n\n  getFieldList() {\n    const key = this.getFieldListKey();\n    return this.state[key] || [];\n  }\n\n  componentDidMount() {\n    const plugin = this.props.plugin;\n    if (!plugin.issue && this.props.actionType !== 'unlink') {\n      this.fetchData();\n    }\n  }\n\n  getPluginCreateEndpoint() {\n    return (\n      '/issues/' + this.getGroup().id + '/plugins/' + this.props.plugin.slug + '/create/'\n    );\n  }\n\n  getPluginLinkEndpoint() {\n    return (\n      '/issues/' + this.getGroup().id + '/plugins/' + this.props.plugin.slug + '/link/'\n    );\n  }\n\n  getPluginUnlinkEndpoint() {\n    return (\n      '/issues/' + this.getGroup().id + '/plugins/' + this.props.plugin.slug + '/unlink/'\n    );\n  }\n\n  setDependentFieldState(fieldName, state) {\n    const dependentFieldState = {...this.state.dependentFieldState, [fieldName]: state};\n    this.setState({dependentFieldState});\n  }\n\n  loadOptionsForDependentField = async field => {\n    const formData = this.getFormData();\n\n    const groupId = this.getGroup().id;\n    const pluginSlug = this.props.plugin.slug;\n    const url = `/issues/${groupId}/plugins/${pluginSlug}/options/`;\n\n    // find the fields that this field is dependent on\n    const dependentFormValues = Object.fromEntries(\n      field.depends.map(fieldKey => [fieldKey, formData[fieldKey]])\n    );\n    const query = {\n      option_field: field.name,\n      ...dependentFormValues,\n    };\n    try {\n      this.setDependentFieldState(field.name, FormState.LOADING);\n      const result = await this.api.requestPromise(url, {query});\n      this.updateOptionsOfDependentField(field, result[field.name]);\n      this.setDependentFieldState(field.name, FormState.READY);\n    } catch (err) {\n      this.setDependentFieldState(field.name, FormState.ERROR);\n      this.errorHandler(err);\n    }\n  };\n\n  updateOptionsOfDependentField = (field: Field, choices: Field['choices']) => {\n    const formListKey = this.getFieldListKey();\n    let fieldList = this.state[formListKey];\n    if (!fieldList) {\n      return;\n    }\n\n    // find the location of the field in our list and replace it\n    const indexOfField = fieldList.findIndex(({name}) => name === field.name);\n    field = {...field, choices};\n\n    // make a copy of the array to avoid mutation\n    fieldList = fieldList.slice();\n    fieldList[indexOfField] = field;\n\n    this.setState(prevState => ({...prevState, [formListKey]: fieldList}));\n  };\n\n  resetOptionsOfDependentField = (field: Field) => {\n    this.updateOptionsOfDependentField(field, []);\n    const formDataKey = this.getFormDataKey();\n    const formData = {...this.state[formDataKey]};\n    formData[field.name] = '';\n    this.setState(prevState => ({...prevState, [formDataKey]: formData}));\n    this.setDependentFieldState(field.name, FormState.DISABLED);\n  };\n\n  getInputProps(field: Field) {\n    const props: {isLoading?: boolean; readonly?: boolean} = {};\n\n    // special logic for fields that have dependencies\n    if (field.depends && field.depends.length > 0) {\n      switch (this.state.dependentFieldState[field.name]) {\n        case FormState.LOADING:\n          props.isLoading = true;\n          props.readonly = true;\n          break;\n        case FormState.DISABLED:\n        case FormState.ERROR:\n          props.readonly = true;\n          break;\n        default:\n          break;\n      }\n    }\n\n    return props;\n  }\n\n  setError(error, defaultMessage: string) {\n    let errorBody;\n    if (error.status === 400 && error.responseJSON) {\n      errorBody = error.responseJSON;\n    } else {\n      errorBody = {message: defaultMessage};\n    }\n    this.setState({error: errorBody});\n  }\n\n  errorHandler(error) {\n    const state: Pick<State, 'loading' | 'error'> = {\n      loading: false,\n    };\n    if (error.status === 400 && error.responseJSON) {\n      state.error = error.responseJSON;\n    } else {\n      state.error = {message: t('An unknown error occurred.')};\n    }\n    this.setState(state);\n  }\n\n  onLoadSuccess() {\n    super.onLoadSuccess();\n\n    // dependent fields need to be set to disabled upon loading\n    const fieldList = this.getFieldList();\n    fieldList.forEach(field => {\n      if (field.depends && field.depends.length > 0) {\n        this.setDependentFieldState(field.name, FormState.DISABLED);\n      }\n    });\n  }\n\n  fetchData() {\n    if (this.props.actionType === 'create') {\n      this.api.request(this.getPluginCreateEndpoint(), {\n        success: data => {\n          const createFormData = {};\n          data.forEach(field => {\n            createFormData[field.name] = field.default;\n          });\n          this.setState(\n            {\n              createFieldList: data,\n              error: undefined,\n              loading: false,\n              createFormData,\n            },\n            this.onLoadSuccess\n          );\n        },\n        error: this.errorHandler,\n      });\n    } else if (this.props.actionType === 'link') {\n      this.api.request(this.getPluginLinkEndpoint(), {\n        success: data => {\n          const linkFormData = {};\n          data.forEach(field => {\n            linkFormData[field.name] = field.default;\n          });\n          this.setState(\n            {\n              linkFieldList: data,\n              error: undefined,\n              loading: false,\n              linkFormData,\n            },\n            this.onLoadSuccess\n          );\n        },\n        error: this.errorHandler,\n      });\n    }\n  }\n\n  onSuccess(data) {\n    GroupActions.updateSuccess(null, [this.getGroup().id], {stale: true});\n    this.props.onSuccess && this.props.onSuccess(data);\n  }\n\n  createIssue() {\n    this.api.request(this.getPluginCreateEndpoint(), {\n      data: this.state.createFormData,\n      success: this.onSuccess,\n      error: this.onSaveError.bind(this, error => {\n        this.setError(error, t('There was an error creating the issue.'));\n      }),\n      complete: this.onSaveComplete,\n    });\n  }\n\n  linkIssue() {\n    this.api.request(this.getPluginLinkEndpoint(), {\n      data: this.state.linkFormData,\n      success: this.onSuccess,\n      error: this.onSaveError.bind(this, error => {\n        this.setError(error, t('There was an error linking the issue.'));\n      }),\n      complete: this.onSaveComplete,\n    });\n  }\n\n  unlinkIssue() {\n    this.api.request(this.getPluginUnlinkEndpoint(), {\n      success: this.onSuccess,\n      error: this.onSaveError.bind(this, error => {\n        this.setError(error, t('There was an error unlinking the issue.'));\n      }),\n      complete: this.onSaveComplete,\n    });\n  }\n\n  changeField(action: ActionType, name: string, value: any) {\n    const formDataKey = this.getFormDataKey(action);\n\n    // copy so we don't mutate\n    const formData = {...this.state[formDataKey]};\n    const fieldList = this.getFieldList();\n\n    formData[name] = value;\n\n    let callback = () => {};\n\n    // only works with one impacted field\n    const impactedField = fieldList.find(({depends}) => {\n      if (!depends || !depends.length) {\n        return false;\n      }\n      // must be dependent on the field we just set\n      return depends.includes(name);\n    });\n\n    if (impactedField) {\n      // if every dependent field is set, then search\n      if (!impactedField.depends?.some(dependentField => !formData[dependentField])) {\n        callback = () => this.loadOptionsForDependentField(impactedField);\n      } else {\n        // otherwise reset the options\n        callback = () => this.resetOptionsOfDependentField(impactedField);\n      }\n    }\n    this.setState(prevState => ({...prevState, [formDataKey]: formData}), callback);\n  }\n\n  renderForm(): React.ReactNode {\n    switch (this.props.actionType) {\n      case 'create':\n        if (this.state.createFieldList) {\n          return (\n            <Form\n              onSubmit={this.createIssue}\n              submitLabel={t('Create Issue')}\n              footerClass=\"\"\n            >\n              {this.state.createFieldList.map(field => {\n                if (field.has_autocomplete) {\n                  field = Object.assign(\n                    {\n                      url:\n                        '/api/0/issues/' +\n                        this.getGroup().id +\n                        '/plugins/' +\n                        this.props.plugin.slug +\n                        '/autocomplete',\n                    },\n                    field\n                  );\n                }\n                return (\n                  <div key={field.name}>\n                    {this.renderField({\n                      config: {...field, ...this.getInputProps(field)},\n                      formData: this.state.createFormData,\n                      onChange: this.changeField.bind(this, 'create', field.name),\n                    })}\n                  </div>\n                );\n              })}\n            </Form>\n          );\n        }\n        break;\n      case 'link':\n        if (this.state.linkFieldList) {\n          return (\n            <Form onSubmit={this.linkIssue} submitLabel={t('Link Issue')} footerClass=\"\">\n              {this.state.linkFieldList.map(field => {\n                if (field.has_autocomplete) {\n                  field = Object.assign(\n                    {\n                      url:\n                        '/api/0/issues/' +\n                        this.getGroup().id +\n                        '/plugins/' +\n                        this.props.plugin.slug +\n                        '/autocomplete',\n                    },\n                    field\n                  );\n                }\n                return (\n                  <div key={field.name}>\n                    {this.renderField({\n                      config: {...field, ...this.getInputProps(field)},\n                      formData: this.state.linkFormData,\n                      onChange: this.changeField.bind(this, 'link', field.name),\n                    })}\n                  </div>\n                );\n              })}\n            </Form>\n          );\n        }\n        break;\n      case 'unlink':\n        return (\n          <div>\n            <p>{t('Are you sure you want to unlink this issue?')}</p>\n            <button onClick={this.unlinkIssue} className=\"btn btn-danger\">\n              {t('Unlink Issue')}\n            </button>\n          </div>\n        );\n      default:\n        return null;\n    }\n    return null;\n  }\n\n  getPluginConfigureUrl() {\n    const org = this.getOrganization();\n    const project = this.getProject();\n    const plugin = this.props.plugin;\n    return '/' + org.slug + '/' + project.slug + '/settings/plugins/' + plugin.slug;\n  }\n\n  renderError() {\n    const error = this.state.error;\n    if (!error) {\n      return null;\n    }\n    if (error.error_type === 'auth') {\n      let authUrl = error.auth_url;\n      if (authUrl?.indexOf('?') === -1) {\n        authUrl += '?next=' + encodeURIComponent(document.location.pathname);\n      } else {\n        authUrl += '&next=' + encodeURIComponent(document.location.pathname);\n      }\n      return (\n        <div>\n          <div className=\"alert alert-warning m-b-1\">\n            {'You need to associate an identity with ' +\n              this.props.plugin.name +\n              ' before you can create issues with this service.'}\n          </div>\n          <a className=\"btn btn-primary\" href={authUrl}>\n            Associate Identity\n          </a>\n        </div>\n      );\n    }\n    if (error.error_type === 'config') {\n      return (\n        <div className=\"alert alert-block\">\n          {!error.has_auth_configured ? (\n            <div>\n              <p>\n                {'Your server administrator will need to configure authentication with '}\n                <strong>{this.props.plugin.name}</strong>\n                {' before you can use this integration.'}\n              </p>\n              <p>The following settings must be configured:</p>\n              <ul>\n                {error.required_auth_settings?.map((setting, i) => (\n                  <li key={i}>\n                    <code>{setting}</code>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : (\n            <p>\n              You still need to{' '}\n              <a href={this.getPluginConfigureUrl()}>configure this plugin</a> before you\n              can use it.\n            </p>\n          )}\n        </div>\n      );\n    }\n    if (error.error_type === 'validation') {\n      const errors: React.ReactElement[] = [];\n      for (const name in error.errors) {\n        errors.push(<p key={name}>{error.errors[name]}</p>);\n      }\n      return <div className=\"alert alert-error alert-block\">{errors}</div>;\n    }\n    if (error.message) {\n      return (\n        <div className=\"alert alert-error alert-block\">\n          <p>{error.message}</p>\n        </div>\n      );\n    }\n    return <LoadingError />;\n  }\n\n  render() {\n    if (this.state.state === FormState.LOADING) {\n      return <LoadingIndicator />;\n    }\n    return (\n      <div>\n        {this.renderError()}\n        {this.renderForm()}\n      </div>\n    );\n  }\n}\n\nexport default IssueActions;\n","import BasePlugin from 'sentry/plugins/basePlugin';\nimport IssueActions from 'sentry/plugins/components/issueActions';\nimport {Group, Organization, Plugin, Project} from 'sentry/types';\n\ntype Props = {\n  actionType: 'create' | 'link';\n  group: Group;\n  onSuccess: (data: any) => void;\n  organization: Organization;\n  plugin: Plugin;\n  project: Project;\n};\n\nexport class DefaultIssuePlugin extends BasePlugin {\n  renderGroupActions(props: Props) {\n    return <IssueActions {...props} />;\n  }\n}\n\nexport default DefaultIssuePlugin;\n","import BasePlugin from 'sentry/plugins/basePlugin';\n\nclass DefaultPlugin extends BasePlugin {\n  static displayName = 'DefaultPlugin';\n  // should never be be called since this is a non-issue plugin\n  renderGroupActions() {\n    return null;\n  }\n}\n\nexport {DefaultPlugin};\n","import {Component} from 'react';\nimport {findDOMNode} from 'react-dom';\n\nconst ASPECT_RATIO = 16 / 9;\n\ntype Props = {\n  data: {\n    session_url?: string;\n  };\n};\n\ntype State = {\n  showIframe: boolean;\n  height?: number;\n  width?: number;\n};\n\nclass SessionStackContextType extends Component<Props, State> {\n  state: State = {\n    showIframe: false,\n  };\n\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const domNode = findDOMNode(this) as HTMLElement;\n    this.parentNode = domNode.parentNode as HTMLElement;\n    window.addEventListener('resize', () => this.setIframeSize(), false);\n    this.setIframeSize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.setIframeSize(), false);\n  }\n  parentNode?: HTMLElement;\n\n  getTitle = () => 'SessionStack';\n\n  setIframeSize() {\n    if (this.state.showIframe || !this.parentNode) {\n      return;\n    }\n\n    const parentWidth = this.parentNode.clientWidth;\n\n    this.setState({\n      width: parentWidth,\n      height: parentWidth / ASPECT_RATIO,\n    });\n  }\n\n  playSession() {\n    this.setState({\n      showIframe: true,\n    });\n\n    this.setIframeSize();\n  }\n\n  render() {\n    const {session_url} = this.props.data;\n\n    if (!session_url) {\n      return <h4>Session not found.</h4>;\n    }\n\n    return (\n      <div className=\"panel-group\">\n        {this.state.showIframe ? (\n          <iframe\n            src={session_url}\n            sandbox=\"allow-scripts allow-same-origin\"\n            width={this.state.width}\n            height={this.state.height}\n          />\n        ) : (\n          <button\n            className=\"btn btn-default\"\n            type=\"button\"\n            onClick={() => this.playSession()}\n          >\n            Play session\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SessionStackContextType;\n","import {Form, FormState} from 'sentry/components/deprecatedforms';\nimport DefaultIssueActions from 'sentry/plugins/components/issueActions';\nimport {Writable} from 'sentry/types';\n\nclass IssueActions extends DefaultIssueActions {\n  changeField = (\n    action: DefaultIssueActions['props']['actionType'],\n    name: string,\n    value: any\n  ) => {\n    const key = this.getFormDataKey(action);\n    const formData = {\n      ...this.state[key],\n      [name]: value,\n    };\n    const state: Pick<Writable<DefaultIssueActions['state']>, 'state' | typeof key> = {\n      ...this.state,\n      [key]: formData,\n    };\n    if (name === 'issuetype') {\n      state.state = FormState.LOADING;\n      this.setState(\n        state,\n        this.onLoad.bind(this, () => {\n          this.api.request(\n            this.getPluginCreateEndpoint() + '?issuetype=' + encodeURIComponent(value),\n            {\n              success: (data: DefaultIssueActions['state']['unlinkFieldList']) => {\n                // Try not to change things the user might have edited\n                // unless they're no longer valid\n                const oldData = this.state.createFormData;\n                const createFormData = {};\n                data?.forEach(field => {\n                  let val;\n                  if (\n                    field.choices &&\n                    !field.choices.find(c => c[0] === oldData[field.name])\n                  ) {\n                    val = field.default;\n                  } else {\n                    val = oldData[field.name] || field.default;\n                  }\n                  createFormData[field.name] = val;\n                });\n                this.setState(\n                  {\n                    createFieldList: data,\n                    error: undefined,\n                    loading: false,\n                    createFormData,\n                  },\n                  this.onLoadSuccess\n                );\n              },\n              error: this.errorHandler,\n            }\n          );\n        })\n      );\n      return;\n    }\n    this.setState(state);\n  };\n\n  renderForm(): React.ReactNode {\n    let form: React.ReactNode = null;\n\n    // For create form, split into required and optional fields\n    if (this.props.actionType === 'create') {\n      if (this.state.createFieldList) {\n        const renderField = field => {\n          if (field.has_autocomplete) {\n            field = Object.assign(\n              {\n                url:\n                  '/api/0/issues/' +\n                  this.getGroup().id +\n                  '/plugins/' +\n                  this.props.plugin.slug +\n                  '/autocomplete',\n              },\n              field\n            );\n          }\n          return (\n            <div key={field.name}>\n              {this.renderField({\n                config: field,\n                formData: this.state.createFormData,\n                onChange: this.changeField.bind(this, 'create', field.name),\n              })}\n            </div>\n          );\n        };\n        const isRequired = f => (f.required !== null ? f.required : true);\n\n        const fields = this.state.createFieldList;\n        const requiredFields = fields.filter(f => isRequired(f)).map(f => renderField(f));\n        const optionalFields = fields\n          .filter(f => !isRequired(f))\n          .map(f => renderField(f));\n        form = (\n          <Form onSubmit={this.createIssue} submitLabel=\"Create Issue\" footerClass=\"\">\n            <h5>Required Fields</h5>\n            {requiredFields}\n            {optionalFields.length ? <h5>Optional Fields</h5> : null}\n            {optionalFields}\n          </Form>\n        );\n      }\n    } else {\n      form = super.renderForm();\n    }\n\n    return form;\n  }\n}\n\nexport default IssueActions;\n","import isEqual from 'lodash/isEqual';\n\nimport {Form, FormState} from 'sentry/components/deprecatedforms';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport DefaultSettings from 'sentry/plugins/components/settings';\n\ntype Field = Parameters<typeof DefaultSettings.prototype.renderField>[0]['config'];\n\ntype FieldWithValues = Field & {defaultValue?: any; value?: any};\n\ntype ApiData = {config: FieldWithValues[]; default_project?: string};\n\ntype Props = DefaultSettings['props'];\n\ntype State = DefaultSettings['state'] & {\n  page: number;\n  editing?: boolean;\n};\n\nconst PAGE_FIELD_LIST = {\n  0: ['instance_url', 'username', 'password'],\n  1: ['default_project'],\n  2: ['ignored_fields', 'default_priority', 'default_issue_type', 'auto_create'],\n};\n\nclass Settings extends DefaultSettings<Props, State> {\n  constructor(props: Props, context: any) {\n    super(props, context);\n\n    Object.assign(this.state, {\n      page: 0,\n    });\n  }\n\n  isConfigured() {\n    return !!(this.state.formData && this.state.formData.default_project);\n  }\n\n  isLastPage = () => {\n    return this.state.page === 2;\n  };\n\n  fetchData() {\n    // This is mostly copy paste of parent class\n    // except for setting edit state\n    this.api.request(this.getPluginEndpoint(), {\n      success: (data: ApiData) => {\n        const formData: Record<string, any> = {};\n        const initialData = {};\n        data.config.forEach(field => {\n          formData[field.name] = field.value || field.defaultValue;\n          initialData[field.name] = field.value;\n        });\n        this.setState(\n          {\n            fieldList: data.config,\n            formData,\n            initialData,\n            // start off in edit mode if there isn't a project set\n            editing: !(formData && formData.default_project),\n            // call this here to prevent FormState.READY from being\n            // set before fieldList is\n          },\n          this.onLoadSuccess\n        );\n      },\n      error: this.onLoadError,\n    });\n  }\n\n  startEditing = () => {\n    this.setState({editing: true});\n  };\n\n  onSubmit() {\n    if (isEqual(this.state.initialData, this.state.formData)) {\n      if (this.isLastPage()) {\n        this.setState({editing: false, page: 0});\n      } else {\n        this.setState({page: this.state.page + 1});\n      }\n      this.onSaveSuccess(this.onSaveComplete);\n      return;\n    }\n    const body = Object.assign({}, this.state.formData);\n    // if the project has changed, it's likely these values aren't valid anymore\n    if (body.default_project !== this.state.initialData?.default_project) {\n      body.default_issue_type = null;\n      body.default_priority = null;\n    }\n    this.api.request(this.getPluginEndpoint(), {\n      data: body,\n      method: 'PUT',\n      success: this.onSaveSuccess.bind(this, (data: ApiData) => {\n        const formData = {};\n        const initialData = {};\n        data.config.forEach(field => {\n          formData[field.name] = field.value || field.defaultValue;\n          initialData[field.name] = field.value;\n        });\n        const state = {\n          formData,\n          initialData,\n          errors: {},\n          fieldList: data.config,\n          page: this.state.page,\n          editing: this.state.editing,\n        };\n        if (this.isLastPage()) {\n          state.editing = false;\n          state.page = 0;\n        } else {\n          state.page = this.state.page + 1;\n        }\n        this.setState(state);\n      }),\n      error: this.onSaveError.bind(this, error => {\n        this.setState({\n          errors: (error.responseJSON || {}).errors || {},\n        });\n      }),\n      complete: this.onSaveComplete,\n    });\n  }\n\n  back = (ev: React.MouseEvent) => {\n    ev.preventDefault();\n    if (this.state.state === FormState.SAVING) {\n      return;\n    }\n    this.setState({\n      page: this.state.page - 1,\n    });\n  };\n\n  render() {\n    if (this.state.state === FormState.LOADING) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.state === FormState.ERROR && !this.state.fieldList) {\n      return (\n        <div className=\"alert alert-error m-b-1\">\n          An unknown error occurred. Need help with this?{' '}\n          <a href=\"https://sentry.io/support/\">Contact support</a>\n        </div>\n      );\n    }\n\n    const isSaving = this.state.state === FormState.SAVING;\n\n    let fields: Field[] | undefined;\n    let onSubmit: () => void;\n    let submitLabel: string;\n    if (this.state.editing) {\n      fields = this.state.fieldList?.filter(f =>\n        PAGE_FIELD_LIST[this.state.page].includes(f.name)\n      );\n      onSubmit = this.onSubmit;\n      submitLabel = this.isLastPage() ? 'Finish' : 'Save and Continue';\n    } else {\n      fields = this.state.fieldList?.map(f => ({...f, readonly: true}));\n      onSubmit = this.startEditing;\n      submitLabel = 'Edit';\n    }\n    return (\n      <Form\n        onSubmit={onSubmit}\n        submitDisabled={isSaving}\n        submitLabel={submitLabel}\n        extraButton={\n          this.state.page === 0 ? null : (\n            <a\n              href=\"#\"\n              className={'btn btn-default pull-left' + (isSaving ? ' disabled' : '')}\n              onClick={this.back}\n            >\n              Back\n            </a>\n          )\n        }\n      >\n        {this.state.errors.__all__ && (\n          <div className=\"alert alert-block alert-error\">\n            <ul>\n              <li>{this.state.errors.__all__}</li>\n            </ul>\n          </div>\n        )}\n        {fields?.map(f =>\n          this.renderField({\n            config: f,\n            formData: this.state.formData,\n            formErrors: this.state.errors,\n            onChange: this.changeField.bind(this, f.name),\n          })\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default Settings;\n","import isEqual from 'lodash/isEqual';\n\nimport {Form, FormState} from 'sentry/components/deprecatedforms';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport DefaultSettings from 'sentry/plugins/components/settings';\n\ntype Props = DefaultSettings['props'];\n\ntype State = DefaultSettings['state'] & {\n  // NB: \"On-premises\" here refers to on-premises SessionStack, not Sentry.\n  // That said, we only support connecting to an on-premises SessionStack from\n  // a self-hosted Sentry: https://docs.sessionstack.com/docs/sentry.\n\n  showOnPremisesConfiguration?: boolean;\n};\n\nclass Settings extends DefaultSettings<Props, State> {\n  REQUIRED_FIELDS = ['account_email', 'api_token', 'website_id'];\n  ON_PREMISES_FIELDS = ['api_url', 'player_url'];\n\n  renderFields(fields: State['fieldList']) {\n    return fields?.map(f =>\n      this.renderField({\n        config: f,\n        formData: this.state.formData,\n        formErrors: this.state.errors,\n        onChange: this.changeField.bind(this, f.name),\n      })\n    );\n  }\n\n  filterFields(fields: State['fieldList'], fieldNames: string[]) {\n    return fields?.filter(field => fieldNames.includes(field.name)) ?? [];\n  }\n\n  toggleOnPremisesConfiguration = () => {\n    this.setState({\n      showOnPremisesConfiguration: !this.state.showOnPremisesConfiguration,\n    });\n  };\n\n  render() {\n    if (this.state.state === FormState.LOADING) {\n      return <LoadingIndicator />;\n    }\n\n    if (this.state.state === FormState.ERROR && !this.state.fieldList) {\n      return (\n        <div className=\"alert alert-error m-b-1\">\n          An unknown error occurred. Need help with this?{' '}\n          <a href=\"https://sentry.io/support/\">Contact support</a>\n        </div>\n      );\n    }\n\n    const isSaving = this.state.state === FormState.SAVING;\n    const hasChanges = !isEqual(this.state.initialData, this.state.formData);\n\n    const requiredFields = this.filterFields(this.state.fieldList, this.REQUIRED_FIELDS);\n    const onPremisesFields = this.filterFields(\n      this.state.fieldList,\n      this.ON_PREMISES_FIELDS\n    );\n\n    return (\n      <Form onSubmit={this.onSubmit} submitDisabled={isSaving || !hasChanges}>\n        {this.state.errors.__all__ && (\n          <div className=\"alert alert-block alert-error\">\n            <ul>\n              <li>{this.state.errors.__all__}</li>\n            </ul>\n          </div>\n        )}\n        {this.renderFields(requiredFields)}\n        {onPremisesFields.length > 0 ? (\n          <div className=\"control-group\">\n            <button\n              className=\"btn btn-default\"\n              type=\"button\"\n              onClick={this.toggleOnPremisesConfiguration}\n            >\n              Configure on-premises\n            </button>\n          </div>\n        ) : null}\n        {this.state.showOnPremisesConfiguration\n          ? this.renderFields(onPremisesFields)\n          : null}\n      </Form>\n    );\n  }\n}\n\nexport default Settings;\n","import BasePlugin from 'sentry/plugins/basePlugin';\nimport DefaultIssuePlugin from 'sentry/plugins/defaultIssuePlugin';\nimport Registry from 'sentry/plugins/registry';\n\nimport SessionStackContextType from './sessionstack/contexts/sessionstack';\nimport Jira from './jira';\nimport SessionStackPlugin from './sessionstack';\n\nconst contexts: Record<string, React.ElementType> = {};\nconst registry = new Registry();\n\n// Register legacy plugins\n\n// Sessionstack\nregistry.add('sessionstack', SessionStackPlugin);\ncontexts.sessionstack = SessionStackContextType;\n\n// Jira\nregistry.add('jira', Jira);\n\nexport {BasePlugin, DefaultIssuePlugin, registry};\n\nconst add: typeof registry.add = registry.add.bind(registry);\nconst get: typeof registry.get = registry.get.bind(registry);\nconst isLoaded: typeof registry.isLoaded = registry.isLoaded.bind(registry);\nconst load: typeof registry.load = registry.load.bind(registry);\n\nconst plugins = {\n  BasePlugin,\n  DefaultIssuePlugin,\n\n  add,\n  addContext: function (id: string, component: React.ElementType) {\n    contexts[id] = component;\n  },\n  contexts,\n  get,\n  isLoaded,\n  load,\n};\n\nexport default plugins;\n","/* eslint no-console:0 */\nimport {DefaultIssuePlugin} from 'sentry/plugins/defaultIssuePlugin';\nimport {DefaultPlugin} from 'sentry/plugins/defaultPlugin';\nimport SessionStackPlugin from 'sentry/plugins/sessionstack';\nimport {Plugin} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype PluginComponent =\n  | typeof DefaultIssuePlugin\n  | typeof DefaultPlugin\n  | typeof SessionStackPlugin;\n\nexport default class Registry {\n  plugins: Record<string, PluginComponent> = {};\n  assetCache: Record<string, HTMLScriptElement> = {};\n\n  isLoaded(data: Plugin) {\n    return defined(this.plugins[data.id]);\n  }\n\n  load(\n    data: Plugin,\n    callback: (instance: DefaultIssuePlugin | DefaultPlugin | SessionStackPlugin) => void\n  ) {\n    let remainingAssets = data.assets.length;\n    // TODO(dcramer): we should probably register all valid plugins\n    const finishLoad = () => {\n      if (!defined(this.plugins[data.id])) {\n        if (data.type === 'issue-tracking') {\n          this.plugins[data.id] = DefaultIssuePlugin;\n        } else {\n          this.plugins[data.id] = DefaultPlugin;\n        }\n      }\n      console.info(\n        '[plugins] Loaded ' + data.id + ' as {' + this.plugins[data.id].name + '}'\n      );\n      callback(this.get(data));\n    };\n\n    if (remainingAssets === 0) {\n      finishLoad();\n      return;\n    }\n\n    const onAssetLoaded = function () {\n      remainingAssets--;\n      if (remainingAssets === 0) {\n        finishLoad();\n      }\n    };\n\n    const onAssetFailed = function (asset: {url: string}) {\n      remainingAssets--;\n      console.error('[plugins] Failed to load asset ' + asset.url);\n      if (remainingAssets === 0) {\n        finishLoad();\n      }\n    };\n\n    // TODO(dcramer): what do we do on failed asset loading?\n    data.assets.forEach(asset => {\n      if (!defined(this.assetCache[asset.url])) {\n        console.info('[plugins] Loading asset for ' + data.id + ': ' + asset.url);\n        const s = document.createElement('script');\n        s.src = asset.url;\n        s.onload = onAssetLoaded.bind(this);\n        s.onerror = onAssetFailed.bind(this, asset);\n        s.async = true;\n        document.body.appendChild(s);\n        this.assetCache[asset.url] = s;\n      } else {\n        onAssetLoaded();\n      }\n    });\n  }\n\n  get(data: Plugin) {\n    const cls = this.plugins[data.id];\n    if (!defined(cls)) {\n      throw new Error('Attempted to ``get`` an unloaded plugin: ' + data.id);\n    }\n    return new cls(data);\n  }\n\n  add(id: string, cls: PluginComponent) {\n    this.plugins[id] = cls;\n  }\n}\n","import BasePlugin from 'sentry/plugins/basePlugin';\n\nimport Settings from './components/settings';\n\nclass SessionStackPlugin extends BasePlugin {\n  displayName = 'SessionStack';\n  // should never be be called since this is a non-issue plugin\n  renderGroupActions() {\n    return null;\n  }\n\n  renderSettings(props: Parameters<typeof BasePlugin.prototype.renderSettings>[0]) {\n    return <Settings plugin={this.plugin} {...props} />;\n  }\n}\n\nexport default SessionStackPlugin;\n","import BasePlugin from 'sentry/plugins/basePlugin';\nimport DefaultIssuePlugin from 'sentry/plugins/defaultIssuePlugin';\n\nimport IssueActions from './components/issueActions';\nimport Settings from './components/settings';\n\nclass Jira extends DefaultIssuePlugin {\n  displayName = 'Jira';\n  renderSettings(props: Parameters<typeof BasePlugin.prototype.renderSettings>[0]) {\n    return <Settings plugin={this.plugin} {...props} />;\n  }\n\n  renderGroupActions(\n    props: Parameters<typeof DefaultIssuePlugin.prototype.renderGroupActions>[0]\n  ) {\n    return <IssueActions {...props} />;\n  }\n}\n\nexport default Jira;\n","import isArray from 'lodash/isArray';\nimport isUndefined from 'lodash/isUndefined';\nimport {createStore, StoreDefinition} from 'reflux';\n\nimport GroupActions from 'sentry/actions/groupActions';\nimport {t} from 'sentry/locale';\nimport IndicatorStore from 'sentry/stores/indicatorStore';\nimport {\n  Activity,\n  BaseGroup,\n  Group,\n  GroupCollapseRelease,\n  GroupRelease,\n  GroupStats,\n} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nfunction showAlert(msg, type) {\n  IndicatorStore.addMessage(msg, type, {duration: 4000});\n}\n\n// TODO(ts) Type this any better.\ntype Change = [string, string, any];\n\nclass PendingChangeQueue {\n  changes: Change[] = [];\n\n  getForItem(itemId: string) {\n    return this.changes.filter((change: Change) => change[1] === itemId);\n  }\n\n  push(changeId: string, itemId: string, data: any) {\n    this.changes.push([changeId, itemId, data]);\n  }\n\n  remove(changeId: string, itemId?: string) {\n    this.changes = this.changes.filter(\n      change => change[0] !== changeId || change[1] !== itemId\n    );\n  }\n\n  forEach(...args: any[]) {\n    this.changes.forEach.apply(this.changes, args);\n  }\n}\n\ntype Item = BaseGroup | Group | GroupCollapseRelease;\n\ninterface InternalDefinition {\n  addActivity: (groupId: string, data: Activity, index?: number) => void;\n  indexOfActivity: (groupId: string, id: string) => number;\n  items: Item[];\n\n  pendingChanges: PendingChangeQueue;\n  removeActivity: (groupId: string, id: string) => number;\n  statuses: Record<string, Record<string, boolean>>;\n  updateActivity: (groupId: string, id: string, data: Partial<Activity>) => void;\n}\n\ninterface GroupStoreDefinition extends StoreDefinition, InternalDefinition {\n  add: (items: Item[]) => void;\n  addStatus: (id: string, status: string) => void;\n  clearStatus: (id: string, status: string) => void;\n  get: (id: string) => Item | undefined;\n  getAllItemIds: () => string[];\n  getAllItems: () => Item[];\n  hasStatus: (id: string, status: string) => boolean;\n  init: () => void;\n  loadInitialData: (items: Item[]) => void;\n  onAssignTo: (changeId: string, itemId: string, data: any) => void;\n  onAssignToError: (changeId: string, itemId: string, error: Error) => void;\n  onAssignToSuccess: (changeId: string, itemId: string, response: any) => void;\n  onDelete: (changeId: string, itemIds: string[]) => void;\n  onDeleteError: (changeId: string, itemIds: string[], error: Error) => void;\n  onDeleteSuccess: (changeId: string, itemIds: string[], response: any) => void;\n  onDiscard: (changeId: string, itemId: string) => void;\n  onDiscardError: (changeId: string, itemId: string, response: any) => void;\n  onDiscardSuccess: (changeId: string, itemId: string, response: any) => void;\n  onMerge: (changeId: string, itemIds: string[]) => void;\n  onMergeError: (changeId: string, itemIds: string[], response: any) => void;\n  onMergeSuccess: (changeId: string, itemIds: string[], response: any) => void;\n  onPopulateReleases: (itemId: string, releaseData: GroupRelease) => void;\n  onPopulateStats: (itemIds: string[], response: GroupStats[]) => void;\n  onUpdate: (changeId: string, itemIds: string[], data: any) => void;\n  onUpdateError: (\n    changeId: string,\n    itemIds: string[],\n    error: Error,\n    silent: boolean\n  ) => void;\n  onUpdateSuccess: (\n    changeId: string,\n    itemIds: string[],\n    response: Partial<Group>\n  ) => void;\n  remove: (itemIds: string[]) => void;\n  reset: () => void;\n}\n\nconst storeConfig: GroupStoreDefinition = {\n  listenables: [GroupActions],\n  pendingChanges: new PendingChangeQueue(),\n  items: [],\n  statuses: {},\n\n  init() {\n    this.reset();\n  },\n\n  reset() {\n    this.pendingChanges = new PendingChangeQueue();\n    this.items = [];\n    this.statuses = {};\n  },\n\n  // TODO(dcramer): this should actually come from an action of some sorts\n  loadInitialData(items) {\n    this.reset();\n\n    const itemIds = new Set<string>();\n    items.forEach(item => {\n      itemIds.add(item.id);\n      this.items.push(item);\n    });\n\n    this.trigger(itemIds);\n  },\n\n  add(items) {\n    if (!isArray(items)) {\n      items = [items];\n    }\n\n    const itemsById = {};\n    const itemIds = new Set<string>();\n    items.forEach(item => {\n      itemsById[item.id] = item;\n      itemIds.add(item.id);\n    });\n\n    // See if any existing items are updated by this new set of items\n    this.items.forEach((item, idx) => {\n      if (itemsById[item.id]) {\n        this.items[idx] = {\n          ...item,\n          ...itemsById[item.id],\n        };\n        delete itemsById[item.id];\n      }\n    });\n\n    // New items\n    for (const itemId in itemsById) {\n      this.items.push(itemsById[itemId]);\n    }\n\n    this.trigger(itemIds);\n  },\n\n  remove(itemIds) {\n    this.items = this.items.filter(item => !itemIds.includes(item.id));\n\n    this.trigger(new Set(itemIds));\n  },\n\n  addStatus(id, status) {\n    if (isUndefined(this.statuses[id])) {\n      this.statuses[id] = {};\n    }\n    this.statuses[id][status] = true;\n  },\n\n  clearStatus(id, status) {\n    if (isUndefined(this.statuses[id])) {\n      return;\n    }\n    this.statuses[id][status] = false;\n  },\n\n  hasStatus(id, status) {\n    if (isUndefined(this.statuses[id])) {\n      return false;\n    }\n    return this.statuses[id][status] || false;\n  },\n\n  indexOfActivity(group_id, id) {\n    const group = this.get(group_id);\n    if (!group) {\n      return -1;\n    }\n\n    for (let i = 0; i < group.activity.length; i++) {\n      if (group.activity[i].id === id) {\n        return i;\n      }\n    }\n    return -1;\n  },\n\n  addActivity(id, data, index = -1) {\n    const group = this.get(id);\n    if (!group) {\n      return;\n    }\n\n    // insert into beginning by default\n    if (index === -1) {\n      group.activity.unshift(data);\n    } else {\n      group.activity.splice(index, 0, data);\n    }\n    if (data.type === 'note') {\n      group.numComments++;\n    }\n\n    this.trigger(new Set([id]));\n  },\n\n  updateActivity(group_id, id, data) {\n    const group = this.get(group_id);\n    if (!group) {\n      return;\n    }\n\n    const index = this.indexOfActivity(group_id, id);\n    if (index === -1) {\n      return;\n    }\n\n    // Here, we want to merge the new `data` being passed in\n    // into the existing `data` object. This effectively\n    // allows passing in an object of only changes.\n    group.activity[index].data = Object.assign(group.activity[index].data, data);\n    this.trigger(new Set([group.id]));\n  },\n\n  removeActivity(group_id, id) {\n    const group = this.get(group_id);\n    if (!group) {\n      return -1;\n    }\n\n    const index = this.indexOfActivity(group.id, id);\n    if (index === -1) {\n      return -1;\n    }\n\n    const activity = group.activity.splice(index, 1);\n\n    if (activity[0].type === 'note') {\n      group.numComments--;\n    }\n\n    this.trigger(new Set([group.id]));\n    return index;\n  },\n\n  get(id) {\n    // TODO(ts) This needs to be constrained further. It was left as any\n    // because the PendingChanges signatures and this were not aligned.\n    const pendingForId: any[] = [];\n    this.pendingChanges.forEach(change => {\n      if (change.id === id) {\n        pendingForId.push(change);\n      }\n    });\n\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].id === id) {\n        let rItem = this.items[i];\n        if (pendingForId.length) {\n          // copy the object so dirty state doesnt mutate original\n          rItem = {...rItem};\n\n          for (let c = 0; c < pendingForId.length; c++) {\n            rItem = {\n              ...rItem,\n              ...pendingForId[c].params,\n            };\n          }\n        }\n        return rItem;\n      }\n    }\n    return undefined;\n  },\n\n  getAllItemIds() {\n    return this.items.map(item => item.id);\n  },\n\n  getAllItems() {\n    // regroup pending changes by their itemID\n    const pendingById = {};\n    this.pendingChanges.forEach(change => {\n      if (isUndefined(pendingById[change.id])) {\n        pendingById[change.id] = [];\n      }\n      pendingById[change.id].push(change);\n    });\n\n    return this.items.map(item => {\n      let rItem = item;\n      if (!isUndefined(pendingById[item.id])) {\n        // copy the object so dirty state doesnt mutate original\n        rItem = {...rItem};\n        pendingById[item.id].forEach(change => {\n          rItem = {\n            ...rItem,\n            ...change.params,\n          };\n        });\n      }\n      return rItem;\n    });\n  },\n\n  onAssignTo(_changeId, itemId, _data) {\n    this.addStatus(itemId, 'assignTo');\n    this.trigger(new Set([itemId]));\n  },\n\n  // TODO(dcramer): This is not really the best place for this\n  onAssignToError(_changeId, itemId, _error) {\n    this.clearStatus(itemId, 'assignTo');\n    showAlert(t('Unable to change assignee. Please try again.'), 'error');\n  },\n\n  onAssignToSuccess(_changeId, itemId, response) {\n    const item = this.get(itemId);\n    if (!item) {\n      return;\n    }\n    item.assignedTo = response.assignedTo;\n    this.clearStatus(itemId, 'assignTo');\n    this.trigger(new Set([itemId]));\n  },\n\n  onDelete(_changeId, itemIds) {\n    itemIds = this._itemIdsOrAll(itemIds);\n    itemIds.forEach(itemId => {\n      this.addStatus(itemId, 'delete');\n    });\n    this.trigger(new Set(itemIds));\n  },\n\n  onDeleteError(_changeId, itemIds, _response) {\n    showAlert(t('Unable to delete events. Please try again.'), 'error');\n\n    if (!itemIds) {\n      return;\n    }\n\n    itemIds.forEach(itemId => {\n      this.clearStatus(itemId, 'delete');\n    });\n    this.trigger(new Set(itemIds));\n  },\n\n  onDeleteSuccess(_changeId, itemIds, _response) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    if (itemIds.length > 1) {\n      showAlert(t(`Deleted ${itemIds.length} Issues`), 'success');\n    } else {\n      const shortId = itemIds.map(item => GroupStore.get(item)?.shortId).join('');\n      showAlert(t(`Deleted ${shortId}`), 'success');\n    }\n\n    const itemIdSet = new Set(itemIds);\n    itemIds.forEach(itemId => {\n      delete this.statuses[itemId];\n      this.clearStatus(itemId, 'delete');\n    });\n    this.items = this.items.filter(item => !itemIdSet.has(item.id));\n    this.trigger(new Set(itemIds));\n  },\n\n  onDiscard(_changeId, itemId) {\n    this.addStatus(itemId, 'discard');\n    this.trigger(new Set([itemId]));\n  },\n\n  onDiscardError(_changeId, itemId, _response) {\n    this.clearStatus(itemId, 'discard');\n    showAlert(t('Unable to discard event. Please try again.'), 'error');\n    this.trigger(new Set([itemId]));\n  },\n\n  onDiscardSuccess(_changeId, itemId, _response) {\n    delete this.statuses[itemId];\n    this.clearStatus(itemId, 'discard');\n    this.items = this.items.filter(item => item.id !== itemId);\n    showAlert(t('Similar events will be filtered and discarded.'), 'success');\n    this.trigger(new Set([itemId]));\n  },\n\n  onMerge(_changeId, itemIds) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    itemIds.forEach(itemId => {\n      this.addStatus(itemId, 'merge');\n    });\n    // XXX(billy): Not sure if this is a bug or not but do we need to publish all itemIds?\n    // Seems like we only need to publish parent id\n    this.trigger(new Set(itemIds));\n  },\n\n  onMergeError(_changeId, itemIds, _response) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    itemIds.forEach(itemId => {\n      this.clearStatus(itemId, 'merge');\n    });\n    showAlert(t('Unable to merge events. Please try again.'), 'error');\n    this.trigger(new Set(itemIds));\n  },\n\n  onMergeSuccess(_changeId, mergedIds, response) {\n    mergedIds = this._itemIdsOrAll(mergedIds); // everything on page\n\n    mergedIds.forEach(itemId => {\n      this.clearStatus(itemId, 'merge');\n    });\n\n    // Remove all but parent id (items were merged into this one)\n    const mergedIdSet = new Set(mergedIds);\n\n    // Looks like the `PUT /api/0/projects/:orgId/:projectId/issues/` endpoint\n    // actually returns a 204, so there is no `response` body\n    this.items = this.items.filter(\n      item =>\n        !mergedIdSet.has(item.id) ||\n        (response && response.merge && item.id === response.merge.parent)\n    );\n\n    showAlert(t(`Merged ${mergedIds.length} Issues`), 'success');\n    this.trigger(new Set(mergedIds));\n  },\n\n  /**\n   * If itemIds is undefined, returns all ids in the store\n   */\n  _itemIdsOrAll(itemIds) {\n    if (isUndefined(itemIds)) {\n      itemIds = this.items.map(item => item.id);\n    }\n    return itemIds;\n  },\n\n  onUpdate(changeId, itemIds, data) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    itemIds.forEach(itemId => {\n      this.addStatus(itemId, 'update');\n      this.pendingChanges.push(changeId, itemId, data);\n    });\n    this.trigger(new Set(itemIds));\n  },\n\n  onUpdateError(changeId, itemIds, _error, failSilently) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    this.pendingChanges.remove(changeId);\n    itemIds.forEach(itemId => {\n      this.clearStatus(itemId, 'update');\n    });\n    if (!failSilently) {\n      showAlert(t('Unable to update events. Please try again.'), 'error');\n    }\n    this.trigger(new Set(itemIds));\n  },\n\n  onUpdateSuccess(changeId, itemIds, response) {\n    itemIds = this._itemIdsOrAll(itemIds);\n\n    this.items.forEach((item, idx) => {\n      if (itemIds.indexOf(item.id) !== -1) {\n        this.items[idx] = {\n          ...item,\n          ...response,\n        };\n        this.clearStatus(item.id, 'update');\n      }\n    });\n    this.pendingChanges.remove(changeId);\n    this.trigger(new Set(itemIds));\n  },\n\n  onPopulateStats(itemIds: string[], response: GroupStats[]) {\n    // Organize stats by id\n    const groupStatsMap = response.reduce((map, stats) => {\n      map[stats.id] = stats;\n      return map;\n    }, {});\n\n    this.items.forEach((item, idx) => {\n      if (itemIds.includes(item.id)) {\n        this.items[idx] = {\n          ...item,\n          ...groupStatsMap[item.id],\n        };\n      }\n    });\n    this.trigger(new Set(this.items.map(item => item.id)));\n  },\n\n  onPopulateReleases(itemId: string, releaseData: GroupRelease) {\n    this.items.forEach((item, idx) => {\n      if (item.id === itemId) {\n        this.items[idx] = {\n          ...item,\n          ...releaseData,\n        };\n      }\n    });\n    this.trigger(new Set([itemId]));\n  },\n};\n\nconst GroupStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default GroupStore;\n","import isUndefined from 'lodash/isUndefined';\nimport {createStore, StoreDefinition} from 'reflux';\n\nimport {HookName, Hooks} from 'sentry/types/hooks';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface Internals {\n  // XXX(epurkhiser): We could type this as {[H in HookName]?:\n  // Array<Hooks[H]>}, however this causes typescript to produce a complex\n  // union that it complains is 'too complex'\n  hooks: any;\n}\n\ninterface HookStoreDefinition extends StoreDefinition, Internals {\n  add<H extends HookName>(hookName: H, callback: Hooks[H]): void;\n  get<H extends HookName>(hookName: H): Array<Hooks[H]>;\n  remove<H extends HookName>(hookName: H, callback: Hooks[H]): void;\n}\n\nconst storeConfig: HookStoreDefinition = {\n  hooks: {},\n\n  init() {\n    this.hooks = {};\n  },\n\n  add(hookName, callback) {\n    if (isUndefined(this.hooks[hookName])) {\n      this.hooks[hookName] = [];\n    }\n\n    this.hooks[hookName].push(callback);\n    this.trigger(hookName, this.hooks[hookName]);\n  },\n\n  remove(hookName, callback) {\n    if (isUndefined(this.hooks[hookName])) {\n      return;\n    }\n    this.hooks[hookName] = this.hooks[hookName]!.filter(cb => cb !== callback);\n    this.trigger(hookName, this.hooks[hookName]);\n  },\n\n  get(hookName) {\n    return this.hooks[hookName]! || [];\n  },\n};\n\n/**\n * HookStore is used to allow extensibility into Sentry's frontend via\n * registration of 'hook functions'.\n *\n * This functionality is primarily used by the SASS sentry.io product.\n */\n\nconst HookStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default HookStore;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport {OnboardingState} from 'sentry/views/onboarding/targetedOnboarding/types';\n\nimport OrganizationStore from './organizationStore';\nimport {useLegacyStore} from './useLegacyStore';\n\ntype PersistedStore = Readonly<{\n  onboarding: Partial<OnboardingState> | null;\n}>;\n\nexport const DefaultPersistedStore: PersistedStore = {\n  onboarding: null,\n};\n\nexport const DefaultLoadedPersistedStore: PersistedStore = {\n  onboarding: {},\n};\n\ntype PersistedStoreContextValue = [\n  PersistedStore,\n  React.Dispatch<React.SetStateAction<PersistedStore>>\n];\n\nexport const PersistedStoreContext = createContext<PersistedStoreContextValue | null>(\n  null\n);\n\nfunction usePersistedStore(): PersistedStoreContextValue {\n  const context = useContext(PersistedStoreContext);\n\n  if (!context) {\n    throw new Error('usePersistedStore was called outside of PersistedStoreProvider');\n  }\n\n  return context;\n}\n\n// Client-only state with TTL persisted on the server side in a redis store.\nexport function PersistedStoreProvider(props: {children: React.ReactNode}) {\n  const [state, setState] = useState<PersistedStore>(DefaultPersistedStore);\n\n  const api = useApi();\n  const {organization} = useLegacyStore(OrganizationStore);\n\n  useEffect(() => {\n    if (!organization) {\n      return undefined;\n    }\n\n    let shouldCancelRequest = false;\n    api\n      .requestPromise(`/organizations/${organization.slug}/client-state/`)\n      .then((response: PersistedStore) => {\n        if (shouldCancelRequest) {\n          return;\n        }\n        setState({...DefaultLoadedPersistedStore, ...response});\n      })\n      .catch(() => {\n        setState(DefaultPersistedStore);\n      });\n\n    return () => {\n      shouldCancelRequest = true;\n    };\n  }, [organization]);\n\n  return (\n    <PersistedStoreContext.Provider value={[state, setState]}>\n      {props.children}\n    </PersistedStoreContext.Provider>\n  );\n}\n\ntype UsePersistedCategory<T> = [T | null, (nextState: T | null) => void];\nexport function usePersistedStoreCategory<C extends keyof PersistedStore>(\n  category: C\n): UsePersistedCategory<PersistedStore[C]> {\n  const api = useApi({persistInFlight: true});\n  const organization = useOrganization();\n  const [state, setState] = usePersistedStore();\n\n  const setCategoryState = useCallback(\n    (val: PersistedStore[C] | null) => {\n      setState(oldState => ({...oldState, [category]: val}));\n\n      // If a state is set with null, we can clear it from the server.\n      const endpointLocation = `/organizations/${organization.slug}/client-state/${category}/`;\n      if (val === null) {\n        api.requestPromise(endpointLocation, {\n          method: 'DELETE',\n        });\n        return;\n      }\n\n      // Else we want to sync our state with the server\n      api.requestPromise(endpointLocation, {\n        method: 'PUT',\n        data: val,\n      });\n    },\n    [category, organization]\n  );\n\n  const stableState: UsePersistedCategory<PersistedStore[C]> = useMemo(() => {\n    return [state[category] ?? null, setCategoryState];\n  }, [state[category], setCategoryState]);\n\n  return stableState;\n}\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Project} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface ProjectsStatsStoreDefinition extends StoreDefinition {\n  getAll(): ProjectsStatsStoreDefinition['itemsBySlug'];\n\n  getBySlug(slug: string): Project;\n  getInitialState(): ProjectsStatsStoreDefinition['itemsBySlug'];\n  itemsBySlug: Record<string, Project>;\n  reset(): void;\n}\n\n/**\n * This is a store specifically used by the dashboard, so that we can\n * clear the store when the Dashboard unmounts\n * (as to not disrupt ProjectsStore which a lot more components use)\n */\nconst storeConfig: ProjectsStatsStoreDefinition = {\n  itemsBySlug: {},\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadStatsForProjectSuccess, this.onStatsLoadSuccess)\n    );\n    this.unsubscribeListeners.push(this.listenTo(ProjectActions.update, this.onUpdate));\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateError, this.onUpdateError)\n    );\n  },\n\n  getInitialState() {\n    return this.itemsBySlug;\n  },\n\n  reset() {\n    this.itemsBySlug = {};\n    this.updatingItems = new Map();\n  },\n\n  onStatsLoadSuccess(projects: Project[]) {\n    projects.forEach(project => {\n      this.itemsBySlug[project.slug] = project;\n    });\n    this.trigger(this.itemsBySlug);\n  },\n\n  /**\n   * Optimistic updates\n   * @param projectSlug Project slug\n   * @param data Project data\n   */\n  onUpdate(projectSlug: string, data: Project) {\n    const project = this.getBySlug(projectSlug);\n    this.updatingItems.set(projectSlug, project);\n    if (!project) {\n      return;\n    }\n\n    const newProject: Project = {\n      ...project,\n      ...data,\n    };\n\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: newProject,\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  onUpdateSuccess(data: Project) {\n    // Remove project from updating map\n    this.updatingItems.delete(data.slug);\n  },\n\n  /**\n   * Revert project data when there was an error updating project details\n   * @param err Error object\n   * @param data Previous project data\n   */\n  onUpdateError(_err: Error, projectSlug: string) {\n    const project = this.updatingItems.get(projectSlug);\n    if (!project) {\n      return;\n    }\n\n    this.updatingItems.delete(projectSlug);\n    // Restore old project\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: {...project},\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  getAll() {\n    return this.itemsBySlug;\n  },\n\n  getBySlug(slug) {\n    return this.itemsBySlug[slug];\n  },\n};\n\nconst ProjectsStatsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ProjectsStatsStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport GroupStore from 'sentry/stores/groupStore';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface InternalDefinition {\n  records: Record<string, boolean>;\n}\n\ninterface SelectedGroupStoreDefinition extends StoreDefinition, InternalDefinition {\n  add(ids: string[]): void;\n  allSelected(): boolean;\n  anySelected(): boolean;\n  deselectAll(): void;\n  getSelectedIds(): Set<string>;\n  init(): void;\n  isSelected(itemId: string): boolean;\n  multiSelected(): boolean;\n  numSelected(): number;\n  onGroupChange(itemIds: string[]): void;\n  prune(): void;\n  toggleSelect(itemId: string): void;\n  toggleSelectAll(): void;\n}\n\nconst storeConfig: SelectedGroupStoreDefinition = {\n  records: {},\n  unsubscribeListeners: [],\n\n  init() {\n    this.records = {};\n\n    this.unsubscribeListeners.push(\n      this.listenTo(GroupStore, this.onGroupChange, this.onGroupChange)\n    );\n  },\n\n  onGroupChange(itemIds) {\n    this.prune();\n    this.add(itemIds);\n    this.trigger();\n  },\n\n  add(ids) {\n    const allSelected = this.allSelected();\n    ids.forEach(id => {\n      if (!this.records.hasOwnProperty(id)) {\n        this.records[id] = allSelected;\n      }\n    });\n  },\n\n  prune() {\n    const existingIds = new Set(GroupStore.getAllItemIds());\n\n    // Remove ids that no longer exist\n    for (const itemId in this.records) {\n      if (!existingIds.has(itemId)) {\n        delete this.records[itemId];\n      }\n    }\n  },\n\n  allSelected() {\n    const itemIds = this.getSelectedIds();\n    const numRecords = this.numSelected();\n\n    return itemIds.size > 0 && itemIds.size === numRecords;\n  },\n\n  numSelected() {\n    return Object.keys(this.records).length;\n  },\n\n  anySelected() {\n    const itemIds = this.getSelectedIds();\n    return itemIds.size > 0;\n  },\n\n  multiSelected() {\n    const itemIds = this.getSelectedIds();\n    return itemIds.size > 1;\n  },\n\n  getSelectedIds() {\n    const selected = new Set<string>();\n    for (const itemId in this.records) {\n      if (this.records[itemId]) {\n        selected.add(itemId);\n      }\n    }\n    return selected;\n  },\n\n  isSelected(itemId) {\n    return this.records[itemId] === true;\n  },\n\n  deselectAll() {\n    for (const itemId in this.records) {\n      this.records[itemId] = false;\n    }\n    this.trigger();\n  },\n\n  toggleSelect(itemId) {\n    if (!this.records.hasOwnProperty(itemId)) {\n      return;\n    }\n    this.records[itemId] = !this.records[itemId];\n    this.trigger();\n  },\n\n  toggleSelectAll() {\n    const allSelected = !this.allSelected();\n\n    for (const itemId in this.records) {\n      this.records[itemId] = allSelected;\n    }\n\n    this.trigger();\n  },\n};\n\nconst SelectedGroupStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SelectedGroupStore;\n","import {createStore} from 'reflux';\n\nimport {SidebarPanelKey} from 'sentry/components/sidebar/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nimport {CommonStoreDefinition} from './types';\n\ntype ActivePanelType = SidebarPanelKey | '';\n\ninterface SidebarPanelStoreDefinition extends CommonStoreDefinition<ActivePanelType> {\n  activatePanel(panel: SidebarPanelKey): void;\n\n  activePanel: ActivePanelType;\n  hidePanel(): void;\n  togglePanel(panel: SidebarPanelKey): void;\n}\n\nconst storeConfig: SidebarPanelStoreDefinition = {\n  activePanel: '',\n  unsubscribeListeners: [],\n\n  activatePanel(panel: SidebarPanelKey) {\n    this.activePanel = panel;\n    this.trigger(this.activePanel);\n  },\n\n  togglePanel(panel: SidebarPanelKey) {\n    if (this.activePanel === panel) {\n      this.hidePanel();\n    } else {\n      this.activatePanel(panel);\n    }\n  },\n\n  hidePanel() {\n    this.activePanel = '';\n    this.trigger(this.activePanel);\n  },\n\n  getState() {\n    return this.activePanel;\n  },\n};\n\n/**\n * This store is used to hold local user preferences\n * Side-effects (like reading/writing to cookies) are done in associated actionCreators\n */\nconst SidebarPanelStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SidebarPanelStore;\n","import {keyframes} from '@emotion/react';\n\nimport {Theme} from 'sentry/utils/theme';\n\nexport const growIn = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(0.75);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nexport const growDown = (height: string) => keyframes`\n  0% {\n    height: 0;\n  }\n  100% {\n    height: ${height};\n  }\n`;\n\nexport const fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const fadeOut = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport const pulse = (size: number) => keyframes`\n  0% {\n    transform: scale(1,1);\n  }\n  50% {\n    transform: scale(${size}, ${size});\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n`;\n\nexport const expandOut = keyframes`\n  0% {\n    transform: scale(1, 1);\n    opacity: 1;\n  }\n\n  100% {\n    transform: scale(5, 5);\n    opacity: 0;\n  }\n`;\n\nexport const slideInRight = keyframes`\n  0% {\n    transform: translateX(20px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nexport const slideInLeft = keyframes`\n  0% {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nexport const slideInUp = keyframes`\n  0% {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nexport const highlight = (color: string) => keyframes`\n  0%,\n  100% {\n    background: rgba(255, 255, 255, 0);\n  }\n\n  25% {\n    background: ${color};\n  }\n`;\n\n// TODO(ts): priority should be pulled from `keyof typeof theme.alert`\nexport const alertHighlight = (priority: string, theme: Theme) => keyframes`\n  0%,\n  100% {\n    background: rgba(255, 255, 255, 0);\n    border-color: transparent;\n  }\n\n  25% {\n    background: ${theme.alert[priority].backgroundLight};\n    border-color: ${theme.alert[priority].border};\n  }\n`;\n","import {css, keyframes} from '@emotion/react';\n\nimport {Theme} from 'sentry/utils/theme';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(0.1);\n    opacity: 1\n  }\n\n  40%, 100% {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n`;\n\nconst pulsingIndicatorStyles = (p: {theme: Theme}) => css`\n  height: 8px;\n  width: 8px;\n  border-radius: 50%;\n  background: ${p.theme.pink300};\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    height: 100px;\n    width: 100px;\n    border-radius: 50%;\n    top: -46px;\n    left: -46px;\n    border: 4px solid ${p.theme.pink200};\n    transform-origin: center;\n    animation: ${pulse} 3s ease-out infinite;\n  }\n`;\n\nexport default pulsingIndicatorStyles;\n","import {css} from '@emotion/react';\n\nconst textStyles = () => css`\n  /* stylelint-disable no-descending-specificity */\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  ul,\n  ol,\n  table,\n  dl,\n  blockquote,\n  form,\n  pre,\n  .auto-select-text,\n  .section,\n  [class^='highlight-'] {\n    margin-bottom: 20px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  /* stylelint-enable */\n`;\n\nexport default textStyles;\n","import type u2f from 'u2f-api';\n\nimport type {Field} from 'sentry/components/forms/type';\n\nimport type {Organization} from './organization';\n\nexport type AuthenticatorDevice = {\n  authId: string;\n  key_handle: string;\n  name: string;\n  timestamp?: string;\n};\n\nexport type Authenticator = {\n  /**\n   * Allows multiple enrollments to authenticator\n   */\n  allowMultiEnrollment: boolean;\n  /**\n   * Allows authenticator's secret to be rotated without disabling\n   */\n  allowRotationInPlace: boolean;\n  canValidateOtp: boolean;\n  codes: string[];\n  /**\n   * String to display on button for additional information about authenticator\n   */\n  configureButton: string;\n  createdAt: string | null;\n  /**\n   * Description of the authenticator\n   */\n  description: string;\n  devices: AuthenticatorDevice[];\n  /**\n   * String used to display on button for user as CTA to enroll\n   */\n  enrollButton: string;\n  /**\n   * Is this used as a backup interface?\n   */\n  isBackupInterface: boolean;\n  /**\n   * Is user enrolled to this authenticator\n   */\n  isEnrolled: boolean;\n  lastUsedAt: string | null;\n  /**\n   * Display name for the authenticator\n   */\n  name: string;\n  /**\n   * String to display on button for user to remove authenticator\n   */\n  removeButton: string | null;\n  rotationWarning: string | null;\n  status: string;\n  /**\n   * The form configuration for the authenticator is present during enrollment\n   */\n  form?: Field[];\n  phone?: string;\n  secret?: string;\n} & Partial<EnrolledAuthenticator> &\n  (\n    | {\n        id: 'sms';\n      }\n    | {\n        id: 'totp';\n        qrcode: string;\n      }\n    | {\n        challenge: ChallengeData;\n        id: 'u2f';\n      }\n  );\n\nexport type ChallengeData = {\n  // will have only authenticateRequest or registerRequest\n  authenticateRequests: u2f.SignRequest;\n  registerRequests: u2f.RegisterRequest;\n  registeredKeys: u2f.RegisteredKey[];\n  webAuthnAuthenticationData: string;\n  // for WebAuthn register\n  webAuthnRegisterData: string;\n};\n\nexport type EnrolledAuthenticator = {\n  authId: string;\n  createdAt: string;\n  lastUsedAt: string | null;\n  name: string;\n};\n\n/**\n * This is an authenticator that a user is enrolled in\n */\nexport type UserEnrolledAuthenticator = {\n  dateCreated: EnrolledAuthenticator['createdAt'];\n  dateUsed: EnrolledAuthenticator['lastUsedAt'];\n  id: EnrolledAuthenticator['authId'];\n  name: EnrolledAuthenticator['name'];\n  type: Authenticator['id'];\n};\n\n/**\n * XXX(ts): This actually all comes from getsentry. We should definitely\n * refactor this into a more proper 'hook' mechanism in the future\n */\nexport type AuthConfig = {\n  canRegister: boolean;\n  githubLoginLink: string;\n  googleLoginLink: string;\n  hasNewsletter: boolean;\n  serverHostname: string;\n  vstsLoginLink: string;\n};\n\nexport type AuthProvider = {\n  disables2FA: boolean;\n  key: string;\n  name: string;\n  requiredFeature: string;\n};\n\nexport enum UserIdentityCategory {\n  SOCIAL_IDENTITY = 'social-identity',\n  GLOBAL_IDENTITY = 'global-identity',\n  ORG_IDENTITY = 'org-identity',\n}\n\nexport enum UserIdentityStatus {\n  CAN_DISCONNECT = 'can_disconnect',\n  NEEDED_FOR_GLOBAL_AUTH = 'needed_for_global_auth',\n  NEEDED_FOR_ORG_AUTH = 'needed_for_org_auth',\n}\n\nexport type UserIdentityProvider = {\n  key: string;\n  name: string;\n};\n\n/**\n * UserIdentityConfig is used in Account Identities\n */\nexport type UserIdentityConfig = {\n  category: UserIdentityCategory;\n  dateAdded: string | null;\n  dateSynced: string | null;\n  dateVerified: string | null;\n  id: string;\n  isLogin: boolean;\n  name: string;\n  organization: Organization | null;\n  provider: UserIdentityProvider;\n  status: UserIdentityStatus;\n};\n","import type {PlatformKey} from 'sentry/data/platformCategories';\n\nimport type {Actor, TimeseriesValue} from './core';\nimport type {Event, EventMetadata, EventOrGroupType, Level} from './event';\nimport type {Commit, PullRequest} from './integrations';\nimport type {Team} from './organization';\nimport type {Project} from './project';\nimport type {Release} from './release';\nimport type {AvatarUser, User} from './user';\n\nexport type EntryData = Record<string, any | Array<any>>;\n\n/**\n * Saved issues searches\n */\nexport type RecentSearch = {\n  dateCreated: string;\n  id: string;\n  lastSeen: string;\n  organizationId: string;\n  query: string;\n  type: SavedSearchType;\n};\n\n// XXX: Deprecated Sentry 9 attributes are not included here.\nexport type SavedSearch = {\n  dateCreated: string;\n  id: string;\n  isGlobal: boolean;\n  isOrgCustom: boolean;\n  isPinned: boolean;\n  name: string;\n  query: string;\n  sort: string;\n  type: SavedSearchType;\n};\n\nexport enum SavedSearchType {\n  ISSUE = 0,\n  EVENT = 1,\n  SESSION = 2,\n}\n\n// endpoint: /api/0/issues/:issueId/attachments/?limit=50\nexport type IssueAttachment = {\n  dateCreated: string;\n  event_id: string;\n  headers: Object;\n  id: string;\n  mimetype: string;\n  name: string;\n  sha1: string;\n  size: number;\n  type: string;\n};\n\n// endpoint: /api/0/projects/:orgSlug/:projSlug/events/:eventId/attachments/\nexport type EventAttachment = Omit<IssueAttachment, 'event_id'>;\n\n/**\n * Issue Tags\n */\nexport type Tag = {\n  key: string;\n  name: string;\n  isInput?: boolean;\n  /**\n   * How many values should be suggested in autocomplete.\n   * Overrides SmartSearchBar's `maxSearchItems` prop.\n   */\n  maxSuggestedValues?: number;\n  predefined?: boolean;\n  totalValues?: number;\n  values?: string[];\n};\n\nexport type TagCollection = Record<string, Tag>;\n\nexport type TagValue = {\n  count: number;\n  firstSeen: string;\n  lastSeen: string;\n  name: string;\n  value: string;\n  email?: string;\n  identifier?: string;\n  ipAddress?: string;\n  key?: string;\n  query?: string;\n  username?: string;\n} & AvatarUser;\n\ntype Topvalue = {\n  count: number;\n  firstSeen: string;\n  key: string;\n  lastSeen: string;\n  name: string;\n  value: string;\n  // Might not actually exist.\n  query?: string;\n};\n\nexport type TagWithTopValues = {\n  key: string;\n  name: string;\n  topValues: Array<Topvalue>;\n  totalValues: number;\n  uniqueValues: number;\n  canDelete?: boolean;\n};\n\n/**\n * Inbox, issue owners and Activity\n */\nexport type InboxReasonDetails = {\n  count?: number | null;\n  until?: string | null;\n  user_count?: number | null;\n  user_window?: number | null;\n  window?: number | null;\n};\n\nexport type InboxDetails = {\n  reason_details: InboxReasonDetails;\n  date_added?: string;\n  reason?: number;\n};\n\nexport type SuggestedOwnerReason = 'suspectCommit' | 'ownershipRule';\n\n// Received from the backend to denote suggested owners of an issue\nexport type SuggestedOwner = {\n  date_added: string;\n  owner: string;\n  type: SuggestedOwnerReason;\n};\n\nexport type IssueOwnership = {\n  autoAssignment: boolean;\n  dateCreated: string;\n  fallthrough: boolean;\n  isActive: boolean;\n  lastUpdated: string;\n  raw: string;\n};\n\nexport enum GroupActivityType {\n  NOTE = 'note',\n  SET_RESOLVED = 'set_resolved',\n  SET_RESOLVED_BY_AGE = 'set_resolved_by_age',\n  SET_RESOLVED_IN_RELEASE = 'set_resolved_in_release',\n  SET_RESOLVED_IN_COMMIT = 'set_resolved_in_commit',\n  SET_RESOLVED_IN_PULL_REQUEST = 'set_resolved_in_pull_request',\n  SET_UNRESOLVED = 'set_unresolved',\n  SET_IGNORED = 'set_ignored',\n  SET_PUBLIC = 'set_public',\n  SET_PRIVATE = 'set_private',\n  SET_REGRESSION = 'set_regression',\n  CREATE_ISSUE = 'create_issue',\n  UNMERGE_SOURCE = 'unmerge_source',\n  UNMERGE_DESTINATION = 'unmerge_destination',\n  FIRST_SEEN = 'first_seen',\n  ASSIGNED = 'assigned',\n  UNASSIGNED = 'unassigned',\n  MERGE = 'merge',\n  REPROCESS = 'reprocess',\n  MARK_REVIEWED = 'mark_reviewed',\n}\n\ntype GroupActivityBase = {\n  dateCreated: string;\n  id: string;\n  project: Project;\n  assignee?: string;\n  issue?: Group;\n  user?: null | User;\n};\n\ntype GroupActivityNote = GroupActivityBase & {\n  data: {\n    text: string;\n  };\n  type: GroupActivityType.NOTE;\n};\n\ntype GroupActivitySetResolved = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.SET_RESOLVED;\n};\n\ntype GroupActivitySetUnresolved = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.SET_UNRESOLVED;\n};\n\ntype GroupActivitySetPublic = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.SET_PUBLIC;\n};\n\ntype GroupActivitySetPrivate = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.SET_PRIVATE;\n};\n\ntype GroupActivitySetByAge = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.SET_RESOLVED_BY_AGE;\n};\n\ntype GroupActivityUnassigned = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.UNASSIGNED;\n};\n\ntype GroupActivityFirstSeen = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.FIRST_SEEN;\n};\n\ntype GroupActivityMarkReviewed = GroupActivityBase & {\n  data: Record<string, any>;\n  type: GroupActivityType.MARK_REVIEWED;\n};\n\ntype GroupActivityRegression = GroupActivityBase & {\n  data: {\n    version?: string;\n  };\n  type: GroupActivityType.SET_REGRESSION;\n};\n\nexport type GroupActivitySetByResolvedInRelease = GroupActivityBase & {\n  data: {\n    current_release_version?: string;\n    version?: string;\n  };\n  type: GroupActivityType.SET_RESOLVED_IN_RELEASE;\n};\n\ntype GroupActivitySetByResolvedInCommit = GroupActivityBase & {\n  data: {\n    commit: Commit;\n  };\n  type: GroupActivityType.SET_RESOLVED_IN_COMMIT;\n};\n\ntype GroupActivitySetByResolvedInPullRequest = GroupActivityBase & {\n  data: {\n    pullRequest: PullRequest;\n  };\n  type: GroupActivityType.SET_RESOLVED_IN_PULL_REQUEST;\n};\n\nexport type GroupActivitySetIgnored = GroupActivityBase & {\n  data: {\n    ignoreCount?: number;\n    ignoreDuration?: number;\n    ignoreUntil?: string;\n    ignoreUserCount?: number;\n    ignoreUserWindow?: number;\n    ignoreWindow?: number;\n  };\n  type: GroupActivityType.SET_IGNORED;\n};\n\nexport type GroupActivityReprocess = GroupActivityBase & {\n  data: {\n    eventCount: number;\n    newGroupId: number;\n    oldGroupId: number;\n  };\n  type: GroupActivityType.REPROCESS;\n};\n\ntype GroupActivityUnmergeDestination = GroupActivityBase & {\n  data: {\n    fingerprints: Array<string>;\n    source?: {\n      id: string;\n      shortId: string;\n    };\n  };\n  type: GroupActivityType.UNMERGE_DESTINATION;\n};\n\ntype GroupActivityUnmergeSource = GroupActivityBase & {\n  data: {\n    fingerprints: Array<string>;\n    destination?: {\n      id: string;\n      shortId: string;\n    };\n  };\n  type: GroupActivityType.UNMERGE_SOURCE;\n};\n\ntype GroupActivityMerge = GroupActivityBase & {\n  data: {\n    issues: Array<any>;\n  };\n  type: GroupActivityType.MERGE;\n};\n\nexport type GroupActivityAssigned = GroupActivityBase & {\n  data: {\n    assignee: string;\n    assigneeType: string;\n    user: Team | User;\n    assigneeEmail?: string;\n  };\n  type: GroupActivityType.ASSIGNED;\n};\n\nexport type GroupActivityCreateIssue = GroupActivityBase & {\n  data: {\n    location: string;\n    provider: string;\n    title: string;\n  };\n  type: GroupActivityType.CREATE_ISSUE;\n};\n\nexport type GroupActivity =\n  | GroupActivityNote\n  | GroupActivitySetResolved\n  | GroupActivitySetUnresolved\n  | GroupActivitySetIgnored\n  | GroupActivitySetByAge\n  | GroupActivitySetByResolvedInRelease\n  | GroupActivitySetByResolvedInCommit\n  | GroupActivitySetByResolvedInPullRequest\n  | GroupActivityFirstSeen\n  | GroupActivityMerge\n  | GroupActivityReprocess\n  | GroupActivityUnassigned\n  | GroupActivityMarkReviewed\n  | GroupActivityUnmergeDestination\n  | GroupActivitySetPublic\n  | GroupActivitySetPrivate\n  | GroupActivityRegression\n  | GroupActivityUnmergeSource\n  | GroupActivityAssigned\n  | GroupActivityCreateIssue;\n\nexport type Activity = GroupActivity;\n\ntype GroupFiltered = {\n  count: string;\n  firstSeen: string;\n  lastSeen: string;\n  stats: Record<string, TimeseriesValue[]>;\n  userCount: number;\n};\n\nexport type GroupStats = GroupFiltered & {\n  filtered: GroupFiltered | null;\n  id: string;\n  lifetime?: GroupFiltered;\n  sessionCount?: string | null;\n};\n\nexport type BaseGroupStatusReprocessing = {\n  status: 'reprocessing';\n  statusDetails: {\n    info: {\n      dateCreated: string;\n      totalEvents: number;\n    } | null;\n    pendingEvents: number;\n  };\n};\n\n/**\n * Issue Resolution\n */\nexport enum ResolutionStatus {\n  RESOLVED = 'resolved',\n  UNRESOLVED = 'unresolved',\n  IGNORED = 'ignored',\n}\nexport type ResolutionStatusDetails = {\n  actor?: AvatarUser;\n  autoResolved?: boolean;\n  ignoreCount?: number;\n  // Sent in requests. ignoreUntil is used in responses.\n  ignoreDuration?: number;\n  ignoreUntil?: string;\n  ignoreUserCount?: number;\n  ignoreUserWindow?: number;\n  ignoreWindow?: number;\n  inCommit?: Commit;\n  inNextRelease?: boolean;\n  inRelease?: string;\n};\n\nexport type UpdateResolutionStatus = {\n  status: ResolutionStatus;\n  statusDetails?: ResolutionStatusDetails;\n};\n\ntype BaseGroupStatusResolution = {\n  status: ResolutionStatus;\n  statusDetails: ResolutionStatusDetails;\n};\n\nexport type GroupRelease = {\n  firstRelease: Release;\n  lastRelease: Release;\n};\n\n// TODO(ts): incomplete\nexport type BaseGroup = {\n  activity: GroupActivity[];\n  annotations: string[];\n  assignedTo: Actor;\n  culprit: string;\n  firstSeen: string;\n  hasSeen: boolean;\n  id: string;\n  isBookmarked: boolean;\n  isPublic: boolean;\n  isSubscribed: boolean;\n  isUnhandled: boolean;\n  lastSeen: string;\n  latestEvent: Event;\n  level: Level;\n  logger: string;\n  metadata: EventMetadata;\n  numComments: number;\n  participants: User[];\n  permalink: string;\n  platform: PlatformKey;\n  pluginActions: any[]; // TODO(ts)\n  pluginContexts: any[]; // TODO(ts)\n  pluginIssues: any[]; // TODO(ts)\n  project: Project;\n  seenBy: User[];\n  shareId: string;\n  shortId: string;\n  status: string;\n  subscriptionDetails: {disabled?: boolean; reason?: string} | null;\n  tags: Pick<Tag, 'key' | 'name' | 'totalValues'>[];\n  title: string;\n  type: EventOrGroupType;\n  userReportCount: number;\n  inbox?: InboxDetails | null | false;\n  owners?: SuggestedOwner[] | null;\n} & GroupRelease;\n\nexport type GroupReprocessing = BaseGroup & GroupStats & BaseGroupStatusReprocessing;\nexport type GroupResolution = BaseGroup & GroupStats & BaseGroupStatusResolution;\nexport type Group = GroupResolution | GroupReprocessing;\nexport type GroupCollapseRelease = Omit<Group, keyof GroupRelease> &\n  Partial<GroupRelease>;\n\nexport type GroupTombstone = {\n  actor: AvatarUser;\n  culprit: string;\n  id: string;\n  level: Level;\n  metadata: EventMetadata;\n  title: string;\n};\n\nexport type ProcessingIssueItem = {\n  checksum: string;\n  data: {\n    // TODO(ts) This type is likely incomplete, but this is what\n    // project processing issues settings uses.\n    _scope: string;\n    image_arch: string;\n    image_path: string;\n    image_uuid: string;\n  };\n  id: string;\n  lastSeen: string;\n  numEvents: number;\n  type: string;\n};\n\nexport type ProcessingIssue = {\n  hasIssues: boolean;\n  hasMoreResolveableIssues: boolean;\n  issuesProcessing: number;\n  lastSeen: string;\n  numIssues: number;\n  project: string;\n  resolveableIssues: number;\n  signedLink: string;\n  issues?: ProcessingIssueItem[];\n};\n\n/**\n * Datascrubbing\n */\nexport type Meta = {\n  chunks: Array<ChunkType>;\n  err: Array<MetaError>;\n  len: number;\n  rem: Array<MetaRemark>;\n};\n\nexport type MetaError = string | [string, any];\nexport type MetaRemark = Array<string | number>;\n\nexport type ChunkType = {\n  rule_id: string | number;\n  text: string;\n  type: string;\n  remark?: string | number;\n};\n\n/**\n * User Feedback\n */\nexport type UserReport = {\n  comments: string;\n  dateCreated: string;\n  email: string;\n  event: {eventID: string; id: string};\n  eventID: string;\n  id: string;\n  issue: Group;\n  name: string;\n  user: User;\n};\n\nexport type KeyValueListData = {\n  key: string;\n  subject: string;\n  actionButton?: React.ReactNode;\n  meta?: Meta;\n  subjectDataTestId?: string;\n  subjectIcon?: React.ReactNode;\n  value?: React.ReactNode;\n}[];\n\n// Response from ShortIdLookupEndpoint\n// /organizations/${orgId}/shortids/${query}/\nexport type ShortIdResponse = {\n  group: Group;\n  groupId: string;\n  organizationSlug: string;\n  projectSlug: string;\n  shortId: string;\n};\n\n/**\n * Note used in Group Activity and Alerts for users to comment\n */\nexport type Note = {\n  /**\n   * Array of [id, display string] tuples used for @-mentions\n   */\n  mentions: [string, string][];\n\n  /**\n   * Note contents (markdown allowed)\n   */\n  text: string;\n};\n","import type Alert from 'sentry/components/alert';\nimport type {Field} from 'sentry/components/forms/type';\nimport type {PlatformKey} from 'sentry/data/platformCategories';\nimport type {\n  DISABLED as DISABLED_STATUS,\n  INSTALLED,\n  NOT_INSTALLED,\n  PENDING,\n} from 'sentry/views/organizationIntegrations/constants';\n\nimport type {Avatar, Choice, Choices, ObjectStatus, Scope} from './core';\nimport type {BaseRelease} from './release';\nimport type {User} from './user';\n\nexport type PermissionValue = 'no-access' | 'read' | 'write' | 'admin';\n\nexport type Permissions = {\n  Event: PermissionValue;\n  Member: PermissionValue;\n  Organization: PermissionValue;\n  Project: PermissionValue;\n  Release: PermissionValue;\n  Team: PermissionValue;\n};\n\nexport type PermissionResource = keyof Permissions;\n\nexport type ExternalActorMapping = {\n  externalName: string;\n  id: string;\n  sentryName: string;\n  teamId?: string;\n  userId?: string;\n};\n\nexport type ExternalActorSuggestion = {\n  externalName: string;\n  teamId?: string;\n  userId?: string;\n};\n\nexport type ExternalActorMappingOrSuggestion =\n  | ExternalActorMapping\n  | ExternalActorSuggestion;\n\nexport type ExternalUser = {\n  externalName: string;\n  id: string;\n  integrationId: string;\n  memberId: string;\n  provider: string;\n};\n\nexport type ExternalTeam = {\n  externalName: string;\n  id: string;\n  integrationId: string;\n  provider: string;\n  teamId: string;\n};\n\n/**\n * Repositories, pull requests, and commits\n */\nexport enum RepositoryStatus {\n  ACTIVE = 'active',\n  DISABLED = 'disabled',\n  HIDDEN = 'hidden',\n  PENDING_DELETION = 'pending_deletion',\n  DELETION_IN_PROGRESS = 'deletion_in_progress',\n}\n\nexport type Repository = {\n  dateCreated: string;\n  externalSlug: string;\n  id: string;\n  integrationId: string;\n  name: string;\n  provider: {id: string; name: string};\n  status: RepositoryStatus;\n  url: string;\n};\n\nexport type Commit = {\n  dateCreated: string;\n  id: string;\n  message: string | null;\n  releases: BaseRelease[];\n  author?: User;\n  repository?: Repository;\n};\n\nexport type Committer = {\n  author: User;\n  commits: Commit[];\n};\n\nexport type CommitAuthor = {\n  email?: string;\n  name?: string;\n};\n\nexport type CommitFile = {\n  author: CommitAuthor;\n  commitMessage: string;\n  filename: string;\n  id: string;\n  orgId: number;\n  repoName: string;\n  type: string;\n};\n\nexport type PullRequest = {\n  externalUrl: string;\n  id: string;\n  repository: Repository;\n  title: string;\n};\n\n/**\n * Sentry Apps\n */\nexport type SentryAppStatus = 'unpublished' | 'published' | 'internal';\n\nexport type SentryAppSchemaIssueLink = {\n  create: {\n    required_fields: any[];\n    uri: string;\n    optional_fields?: any[];\n  };\n  link: {\n    required_fields: any[];\n    uri: string;\n    optional_fields?: any[];\n  };\n  type: 'issue-link';\n};\n\nexport type SentryAppSchemaStacktraceLink = {\n  type: 'stacktrace-link';\n  uri: string;\n  url: string;\n  params?: Array<string>;\n};\n\nexport type SentryAppSchemaElement =\n  | SentryAppSchemaIssueLink\n  | SentryAppSchemaStacktraceLink;\n\nexport type SentryApp = {\n  author: string;\n  events: WebhookEvent[];\n  featureData: IntegrationFeature[];\n  isAlertable: boolean;\n  name: string;\n  overview: string | null;\n  // possible null params\n  popularity: number | null;\n  redirectUrl: string | null;\n  schema: {\n    elements?: SentryAppSchemaElement[];\n  };\n  scopes: Scope[];\n  slug: string;\n  status: SentryAppStatus;\n  uuid: string;\n  verifyInstall: boolean;\n  webhookUrl: string | null;\n  avatars?: Avatar[];\n  clientId?: string;\n  clientSecret?: string;\n  // optional params below\n  datePublished?: string;\n  owner?: {\n    id: number;\n    slug: string;\n  };\n};\n\n// Minimal Sentry App representation for use with avatars\nexport type AvatarSentryApp = {\n  name: string;\n  slug: string;\n  uuid: string;\n  avatars?: Avatar[];\n};\n\nexport type SentryAppInstallation = {\n  app: {\n    slug: string;\n    uuid: string;\n  };\n  organization: {\n    slug: string;\n  };\n  status: 'installed' | 'pending';\n  uuid: string;\n  code?: string;\n};\n\nexport type SentryAppComponent = {\n  schema: SentryAppSchemaStacktraceLink;\n  sentryApp: {\n    avatars: Avatar[];\n    name: string;\n    slug: string;\n    uuid: string;\n  };\n  type: 'issue-link' | 'alert-rule-action' | 'issue-media' | 'stacktrace-link';\n  uuid: string;\n};\n\nexport type SentryAppWebhookRequest = {\n  date: string;\n  eventType: string;\n  responseCode: number;\n  sentryAppSlug: string;\n  webhookUrl: string;\n  errorUrl?: string;\n  organization?: {\n    name: string;\n    slug: string;\n  };\n};\n\n/**\n * Organization Integrations\n */\nexport type IntegrationType = 'document' | 'plugin' | 'first_party' | 'sentry_app';\n\nexport type IntegrationFeature = {\n  description: string;\n  featureGate: string;\n  featureId: number;\n};\n\nexport type IntegrationInstallationStatus =\n  | typeof INSTALLED\n  | typeof NOT_INSTALLED\n  | typeof PENDING\n  | typeof DISABLED_STATUS;\n\ntype IntegrationDialog = {\n  actionText: string;\n  body: string;\n};\n\nexport type DocIntegration = {\n  author: string;\n  description: string;\n  isDraft: boolean;\n  name: string;\n  popularity: number;\n  slug: string;\n  url: string;\n  avatar?: Avatar;\n  features?: IntegrationFeature[];\n  resources?: Array<{title: string; url: string}>;\n};\n\ntype IntegrationAspects = {\n  alerts?: Array<\n    React.ComponentProps<typeof Alert> & {text: string; icon?: string | React.ReactNode}\n  >;\n  configure_integration?: {\n    title: string;\n  };\n  disable_dialog?: IntegrationDialog;\n  externalInstall?: {\n    buttonText: string;\n    noticeText: string;\n    url: string;\n  };\n  removal_dialog?: IntegrationDialog;\n};\n\ntype BaseIntegrationProvider = {\n  canAdd: boolean;\n  canDisable: boolean;\n  features: string[];\n  key: string;\n  name: string;\n  slug: string;\n};\n\nexport type IntegrationProvider = BaseIntegrationProvider & {\n  metadata: {\n    aspects: IntegrationAspects;\n    author: string;\n    description: string;\n    features: IntegrationFeature[];\n    issue_url: string;\n    noun: string;\n    source_url: string;\n  };\n  setupDialog: {height: number; url: string; width: number};\n};\n\ntype OrganizationIntegrationProvider = BaseIntegrationProvider & {\n  aspects: IntegrationAspects;\n};\n\nexport type Integration = {\n  accountType: string;\n  domainName: string;\n  gracePeriodEnd: string;\n  icon: string;\n  id: string;\n  name: string;\n  organizationIntegrationStatus: ObjectStatus;\n  provider: OrganizationIntegrationProvider;\n  status: ObjectStatus;\n  dynamicDisplayInformation?: {\n    configure_integration?: {\n      instructions: string[];\n    };\n    integration_detail?: {\n      uninstallationUrl?: string;\n    };\n  };\n  scopes?: string[];\n};\n\ntype ConfigData = {\n  installationType?: string;\n};\n\nexport type OrganizationIntegration = {\n  accountType: string | null;\n  configData: ConfigData | null;\n  configOrganization: Field[];\n  domainName: string | null;\n  externalId: string;\n  gracePeriodEnd: string;\n  icon: string | null;\n  id: string;\n  name: string;\n  organizationId: string;\n  organizationIntegrationStatus: ObjectStatus;\n  provider: OrganizationIntegrationProvider;\n  status: ObjectStatus;\n};\n\n// we include the configOrganization when we need it\nexport type IntegrationWithConfig = Integration & {\n  configData: ConfigData;\n  configOrganization: Field[];\n};\n\n/**\n * Integration & External issue links\n */\nexport type IntegrationExternalIssue = {\n  description: string;\n  displayName: string;\n  id: string;\n  key: string;\n  title: string;\n  url: string;\n};\n\nexport type GroupIntegration = Integration & {\n  externalIssues: IntegrationExternalIssue[];\n};\n\nexport type PlatformExternalIssue = {\n  displayName: string;\n  id: string;\n  issueId: string;\n  serviceType: string;\n  webUrl: string;\n};\n\n/**\n * The issue config form fields we get are basically the form fields we use in\n * the UI but with some extra information. Some fields marked optional in the\n * form field are guaranteed to exist so we can mark them as required here\n */\nexport type IssueConfigField = Field & {\n  name: string;\n  choices?: Choices;\n  default?: string | number | Choice;\n  multiple?: boolean;\n  url?: string;\n};\n\nexport type IntegrationIssueConfig = {\n  domainName: string;\n  icon: string[];\n  name: string;\n  provider: IntegrationProvider;\n  status: ObjectStatus;\n  createIssueConfig?: IssueConfigField[];\n  linkIssueConfig?: IssueConfigField[];\n};\n\n/**\n * Project Plugins\n */\nexport type PluginNoProject = {\n  assets: Array<{url: string}>;\n  canDisable: boolean;\n  // TODO(ts)\n  contexts: any[];\n  doc: string;\n  featureDescriptions: IntegrationFeature[];\n  features: string[];\n  hasConfiguration: boolean;\n  id: string;\n  isDeprecated: boolean;\n  isHidden: boolean;\n  isTestable: boolean;\n  metadata: any;\n  name: string;\n  shortName: string;\n  slug: string;\n  // TODO(ts)\n  status: string;\n  type: string;\n  altIsSentryApp?: boolean;\n  author?: {name: string; url: string};\n  deprecationDate?: string;\n  description?: string;\n  firstPartyAlternative?: string;\n  resourceLinks?: Array<{title: string; url: string}>;\n  version?: string;\n};\n\nexport type Plugin = PluginNoProject & {\n  enabled: boolean;\n};\n\nexport type PluginProjectItem = {\n  configured: boolean;\n  enabled: boolean;\n  projectId: string;\n  projectName: string;\n  projectPlatform: PlatformKey;\n  projectSlug: string;\n};\n\nexport type PluginWithProjectList = PluginNoProject & {\n  projectList: PluginProjectItem[];\n};\n\nexport type AppOrProviderOrPlugin =\n  | SentryApp\n  | IntegrationProvider\n  | PluginWithProjectList\n  | DocIntegration;\n\n/**\n * Webhooks and servicehooks\n */\nexport type WebhookEvent = 'issue' | 'error' | 'comment';\n\nexport type ServiceHook = {\n  dateCreated: string;\n  events: string[];\n  id: string;\n  secret: string;\n  status: string;\n  url: string;\n};\n\n/**\n * Codeowners and repository path mappings.\n */\nexport type CodeOwner = {\n  codeMappingId: string;\n  dateCreated: string;\n  dateUpdated: string;\n  errors: {\n    missing_external_teams: string[];\n    missing_external_users: string[];\n    missing_user_emails: string[];\n    teams_without_access: string[];\n    users_without_access: string[];\n  };\n  id: string;\n  provider: 'github' | 'gitlab';\n  raw: string;\n  codeMapping?: RepositoryProjectPathConfig;\n  ownershipSyntax?: string;\n};\n\nexport type CodeownersFile = {\n  filepath: string;\n  html_url: string;\n  raw: string;\n};\n\nexport type FilesByRepository = {\n  [repoName: string]: {\n    authors?: {[email: string]: CommitAuthor};\n    types?: Set<string>;\n  };\n};\n\ntype BaseRepositoryProjectPathConfig = {\n  id: string;\n  projectId: string;\n  projectSlug: string;\n  repoId: string;\n  repoName: string;\n  sourceRoot: string;\n  stackRoot: string;\n  defaultBranch?: string;\n};\n\nexport type RepositoryProjectPathConfig = BaseRepositoryProjectPathConfig & {\n  integrationId: string | null;\n  provider: BaseIntegrationProvider | null;\n};\n\nexport type RepositoryProjectPathConfigWithIntegration =\n  BaseRepositoryProjectPathConfig & {\n    integrationId: string;\n    provider: BaseIntegrationProvider;\n  };\n\nexport type ServerlessFunction = {\n  enabled: boolean;\n  name: string;\n  outOfDate: boolean;\n  runtime: string;\n  version: number;\n};\n","import {Organization, Project} from 'sentry/types';\nimport {OnboardingState} from 'sentry/views/onboarding/targetedOnboarding/types';\n\nimport type {AvatarUser} from './user';\n\nexport enum OnboardingTaskKey {\n  FIRST_PROJECT = 'create_project',\n  FIRST_EVENT = 'send_first_event',\n  INVITE_MEMBER = 'invite_member',\n  SECOND_PLATFORM = 'setup_second_platform',\n  USER_CONTEXT = 'setup_user_context',\n  RELEASE_TRACKING = 'setup_release_tracking',\n  SOURCEMAPS = 'setup_sourcemaps',\n  USER_REPORTS = 'setup_user_reports',\n  ISSUE_TRACKER = 'setup_issue_tracker',\n  ALERT_RULE = 'setup_alert_rules',\n  FIRST_TRANSACTION = 'setup_transactions',\n  METRIC_ALERT = 'setup_metric_alert_rules',\n  USER_SELECTED_PROJECTS = 'setup_userselected_projects',\n  /// Customized card that shows the selected integrations during onboarding\n  INTEGRATIONS = 'integrations',\n  /// Regular card that tells the user to setup integrations if no integrations were selected during onboarding\n  FIRST_INTEGRATION = 'setup_integrations',\n}\n\nexport type OnboardingSupplementComponentProps = {\n  onCompleteTask: () => void;\n  task: OnboardingTask;\n};\n\nexport type OnboardingCustomComponentProps = {\n  onboardingState: OnboardingState | null;\n  organization: Organization;\n  projects: Project[];\n  setOnboardingState: (state: OnboardingState | null) => void;\n  task: OnboardingTask;\n};\n\nexport type OnboardingTaskDescriptor = {\n  description: string;\n  /**\n   * Should the onboarding task currently be displayed\n   */\n  display: boolean;\n  /**\n   * A list of require task keys that must have been completed before these\n   * tasks may be completed.\n   */\n  requisites: OnboardingTaskKey[];\n  /**\n   * Can this task be skipped?\n   */\n  skippable: boolean;\n  task: OnboardingTaskKey;\n  title: string;\n  /**\n   * An extra component that may be rendered within the onboarding task item.\n   */\n  SupplementComponent?: React.ComponentType<OnboardingSupplementComponentProps>;\n  /**\n   * If a render function was provided, it will be used to render the entire card,\n   * and the card will be rendered before any other cards regardless of completion status.\n   * the render function is therefore responsible for determining the completion status\n   * of the card by returning null when it's completed.\n   *\n   * Note that this should not be given a react component.\n   */\n  renderCard?: (props: OnboardingCustomComponentProps) => JSX.Element | null;\n  /**\n   * Joins with this task id for server-side onboarding state.\n   * This allows you to create alias for exising onboarding tasks or create multiple\n   * tasks for the same server-side task.\n   */\n  serverTask?: string;\n} & (\n  | {\n      actionType: 'app' | 'external';\n      location: string;\n    }\n  | {\n      action: () => void;\n      actionType: 'action';\n    }\n);\n\nexport type OnboardingTaskStatus = {\n  status: 'skipped' | 'pending' | 'complete';\n  task: OnboardingTaskKey;\n  completionSeen?: string;\n  data?: {[key: string]: string};\n  dateCompleted?: string;\n  user?: AvatarUser | null;\n};\n\nexport type OnboardingTask = OnboardingTaskStatus &\n  OnboardingTaskDescriptor & {\n    /**\n     * Onboarding tasks that are currently incomplete and must be completed\n     * before this task should be completed.\n     */\n    requisiteTasks: OnboardingTask[];\n  };\n","import type {Actor, Avatar, ObjectStatus, Scope} from './core';\nimport type {OrgExperiments} from './experiments';\nimport type {ExternalTeam} from './integrations';\nimport type {OnboardingTaskStatus} from './onboarding';\nimport type {Relay} from './relay';\nimport type {User} from './user';\n\n/**\n * Organization summaries are sent when you request a\n * list of all organizations\n */\nexport type OrganizationSummary = {\n  avatar: Avatar;\n  dateCreated: string;\n  features: string[];\n  id: string;\n  isEarlyAdopter: boolean;\n  name: string;\n  require2FA: boolean;\n  slug: string;\n  status: {\n    id: ObjectStatus;\n    name: string;\n  };\n};\n\n/**\n * Detailed organization (e.g. when requesting details for a single org)\n */\nexport type Organization = OrganizationSummary & {\n  access: Scope[];\n  alertsMemberWrite: boolean;\n  allowJoinRequests: boolean;\n  allowSharedIssues: boolean;\n  attachmentsRole: string;\n  availableRoles: {id: string; name: string}[];\n  dataScrubber: boolean;\n  dataScrubberDefaults: boolean;\n  debugFilesRole: string;\n  defaultRole: string;\n  enhancedPrivacy: boolean;\n  eventsMemberAdmin: boolean;\n  experiments: Partial<OrgExperiments>;\n  isDefault: boolean;\n  onboardingTasks: OnboardingTaskStatus[];\n  openMembership: boolean;\n  pendingAccessRequests: number;\n  quota: {\n    accountLimit: number | null;\n    maxRate: number | null;\n    maxRateInterval: number | null;\n    projectLimit: number | null;\n  };\n  relayPiiConfig: string;\n  safeFields: string[];\n  scrapeJavaScript: boolean;\n  scrubIPAddresses: boolean;\n  sensitiveFields: string[];\n  storeCrashReports: number;\n  trustedRelays: Relay[];\n  role?: string;\n};\n\nexport type Team = {\n  avatar: Avatar;\n  externalTeams: ExternalTeam[];\n  hasAccess: boolean;\n  id: string;\n  isMember: boolean;\n  isPending: boolean;\n  memberCount: number;\n  name: string;\n  slug: string;\n};\n\nexport type MemberRole = {\n  desc: string;\n  id: string;\n  name: string;\n  allowed?: boolean;\n\n  isGlobal?: boolean;\n  isRetired?: boolean;\n  minimumTeamRole?: string;\n};\n\n/**\n * Returned from /organizations/org/users/\n */\nexport type Member = {\n  dateCreated: string;\n  email: string;\n  expired: boolean;\n  flags: {\n    'member-limit:restricted': boolean;\n    'sso:invalid': boolean;\n    'sso:linked': boolean;\n  };\n  id: string;\n  inviteStatus: 'approved' | 'requested_to_be_invited' | 'requested_to_join';\n  invite_link: string | null;\n  inviterName: string | null;\n  isOnlyOwner: boolean;\n  name: string;\n  pending: boolean | undefined;\n  projects: string[];\n  role: string;\n  roleName: string;\n  roles: MemberRole[]; // TODO(ts): This is not present from API call\n  teams: string[];\n  user: User;\n};\n\n/**\n * Minimal organization shape used on shared issue views.\n */\nexport type SharedViewOrganization = {\n  slug: string;\n  features?: Array<string>;\n  id?: string;\n};\n\nexport type AuditLog = {\n  actor: User;\n  data: any;\n  dateCreated: string;\n  event: string;\n  id: string;\n  ipAddress: string;\n  note: string;\n  targetObject: number;\n  targetUser: Actor | null;\n};\n\nexport type AccessRequest = {\n  id: string;\n  member: Member;\n  team: Team;\n  requester?: Partial<{\n    email: string;\n    name: string;\n    username: string;\n  }>;\n};\n\n/**\n * Discover queries and result sets.\n */\nexport type SavedQueryVersions = 1 | 2;\n\nexport type NewQuery = {\n  fields: Readonly<string[]>;\n  id: string | undefined;\n  name: string;\n  // GlobalSelectionHeader\n  projects: Readonly<number[]>;\n\n  version: SavedQueryVersions;\n  createdBy?: User;\n  display?: string;\n  end?: string;\n  environment?: Readonly<string[]>;\n\n  expired?: boolean;\n  orderby?: string;\n  // Query and Table\n  query?: string;\n  range?: string;\n  start?: string;\n\n  teams?: Readonly<('myteams' | number)[]>;\n  topEvents?: string;\n  utc?: boolean | string;\n  widths?: Readonly<string[]>;\n\n  // Graph\n  yAxis?: string[];\n};\n\nexport type SavedQuery = NewQuery & {\n  dateCreated: string;\n  dateUpdated: string;\n  id: string;\n};\n\nexport type SavedQueryState = {\n  hasError: boolean;\n  isLoading: boolean;\n  savedQueries: SavedQuery[];\n};\n\nexport type EventsStatsData = [number, {count: number; comparisonCount?: number}[]][];\nexport type EventsGeoData = {count: number; 'geo.country_code': string}[];\n\n// API response format for a single series\nexport type EventsStats = {\n  data: EventsStatsData;\n  end?: number;\n  isMetricsData?: boolean;\n  order?: number;\n  start?: number;\n  totals?: {count: number};\n};\n\n// API response format for multiple series\nexport type MultiSeriesEventsStats = {\n  [seriesName: string]: EventsStats;\n};\n\n/**\n * Session API types.\n */\n// Base type for series style API response\nexport type SeriesApi = {\n  groups: {\n    by: Record<string, string | number>;\n    series: Record<string, number[]>;\n    totals: Record<string, number>;\n  }[];\n  intervals: string[];\n};\n\nexport type SessionApiResponse = SeriesApi & {\n  end: string;\n  query: string;\n  start: string;\n};\n\nexport enum SessionFieldWithOperation {\n  SESSIONS = 'sum(session)',\n  USERS = 'count_unique(user)',\n  DURATION = 'p50(session.duration)',\n}\n\nexport enum SessionStatus {\n  HEALTHY = 'healthy',\n  ABNORMAL = 'abnormal',\n  ERRORED = 'errored',\n  CRASHED = 'crashed',\n}\n","import type {PlatformKey} from 'sentry/data/platformCategories';\n\nimport type {TimeseriesValue} from './core';\nimport type {Commit} from './integrations';\nimport type {User} from './user';\n\nexport enum ReleaseStatus {\n  Active = 'open',\n  Archived = 'archived',\n}\n\nexport type SourceMapsArchive = {\n  date: string;\n  fileCount: number;\n  id: number;\n  name: string;\n  type: 'release';\n};\n\nexport type Artifact = {\n  dateCreated: string;\n  dist: string | null;\n  headers: {'Content-Type': string};\n  id: string;\n  name: string;\n  sha1: string;\n  size: number;\n};\n\nexport type Deploy = {\n  dateFinished: string;\n  dateStarted: string;\n  environment: string;\n  id: string;\n  name: string;\n  url: string;\n  version: string;\n};\n\nexport type VersionInfo = {\n  buildHash: string | null;\n  description: string;\n  package: string | null;\n  version: {raw: string};\n};\n\nexport type BaseRelease = {\n  dateCreated: string;\n  dateReleased: string;\n  ref: string;\n  shortVersion: string;\n  status: ReleaseStatus;\n  url: string;\n  version: string;\n};\n\nexport type Release = BaseRelease &\n  ReleaseData & {\n    projects: ReleaseProject[];\n  };\n\nexport type ReleaseWithHealth = BaseRelease &\n  ReleaseData & {\n    projects: Required<ReleaseProject>[];\n  };\n\ntype ReleaseData = {\n  authors: User[];\n  commitCount: number;\n  currentProjectMeta: {\n    firstReleaseVersion: string | null;\n    lastReleaseVersion: string | null;\n    nextReleaseVersion: string | null;\n    prevReleaseVersion: string | null;\n    sessionsLowerBound: string | null;\n    sessionsUpperBound: string | null;\n  };\n  data: {};\n  deployCount: number;\n  fileCount: number | null;\n  firstEvent: string;\n  lastEvent: string;\n  // TODO(ts)\n  newGroups: number;\n  versionInfo: VersionInfo;\n  adoptionStages?: Record<\n    'string',\n    {\n      adopted: string | null;\n      stage: string | null;\n      unadopted: string | null;\n    }\n  >;\n  lastCommit?: Commit;\n  lastDeploy?: Deploy;\n  owner?: any;\n};\n\nexport type CurrentRelease = {\n  environment: string;\n  firstSeen: string;\n  lastSeen: string;\n  release: Release;\n  stats: {\n    // 24h/30d is hardcoded in GroupReleaseWithStatsSerializer\n    '24h': TimeseriesValue[];\n    '30d': TimeseriesValue[];\n  };\n};\n\nexport type ReleaseProject = {\n  hasHealthData: boolean;\n  id: number;\n  name: string;\n  newGroups: number;\n  platform: PlatformKey;\n  platforms: PlatformKey[];\n  slug: string;\n  healthData?: Health;\n};\n\nexport type ReleaseMeta = {\n  commitCount: number;\n  commitFilesChanged: number;\n  deployCount: number;\n  projects: ReleaseProject[];\n  releaseFileCount: number;\n  released: string;\n  version: string;\n  versionInfo: VersionInfo;\n};\n\n/**\n * Release health\n */\nexport type Health = {\n  adoption: number | null;\n  crashFreeSessions: number | null;\n  crashFreeUsers: number | null;\n  durationP50: number | null;\n  durationP90: number | null;\n  hasHealthData: boolean;\n  sessionsAdoption: number | null;\n  sessionsCrashed: number;\n  sessionsErrored: number;\n  stats: HealthGraphData;\n  totalProjectSessions24h: number | null;\n  totalProjectUsers24h: number | null;\n  totalSessions: number;\n  totalSessions24h: number | null;\n  totalUsers: number;\n  totalUsers24h: number | null;\n};\n\nexport type HealthGraphData = Record<string, TimeseriesValue[]>;\n\nexport enum ReleaseComparisonChartType {\n  CRASH_FREE_USERS = 'crashFreeUsers',\n  HEALTHY_USERS = 'healthyUsers',\n  ABNORMAL_USERS = 'abnormalUsers',\n  ERRORED_USERS = 'erroredUsers',\n  CRASHED_USERS = 'crashedUsers',\n  CRASH_FREE_SESSIONS = 'crashFreeSessions',\n  HEALTHY_SESSIONS = 'healthySessions',\n  ABNORMAL_SESSIONS = 'abnormalSessions',\n  ERRORED_SESSIONS = 'erroredSessions',\n  CRASHED_SESSIONS = 'crashedSessions',\n  SESSION_COUNT = 'sessionCount',\n  USER_COUNT = 'userCount',\n  ERROR_COUNT = 'errorCount',\n  TRANSACTION_COUNT = 'transactionCount',\n  FAILURE_RATE = 'failureRate',\n  SESSION_DURATION = 'sessionDuration',\n}\n\nexport enum HealthStatsPeriodOption {\n  AUTO = 'auto',\n  TWENTY_FOUR_HOURS = '24h',\n}\n\nexport type CrashFreeTimeBreakdown = {\n  crashFreeSessions: number | null;\n  crashFreeUsers: number | null;\n  date: string;\n  totalSessions: number;\n  totalUsers: number;\n}[];\n","import type {FocusTrap} from 'focus-trap';\n\nimport type exportGlobals from 'sentry/bootstrap/exportGlobals';\nimport {Theme} from 'sentry/utils/theme';\n\nimport type {User} from './user';\n\nexport enum SentryInitRenderReactComponent {\n  INDICATORS = 'Indicators',\n  SETUP_WIZARD = 'SetupWizard',\n  SYSTEM_ALERTS = 'SystemAlerts',\n  U2F_SIGN = 'U2fSign',\n  SU_ACCESS_FORM = 'SuperuserAccessForm',\n}\n\nexport type OnSentryInitConfiguration =\n  | {\n      element: string;\n      input: string;\n      name: 'passwordStrength';\n    }\n  | {\n      component: SentryInitRenderReactComponent;\n      container: string;\n      name: 'renderReact';\n      props?: Record<string, any>;\n    }\n  | {\n      name: 'onReady';\n      onReady: (globals: typeof exportGlobals) => void;\n    };\n\ndeclare global {\n  interface Window {\n    /**\n     * Primary entrypoint for rendering the sentry app. This is typically\n     * called in the django templates, or in the case of the EXPERIMENTAL_SPA,\n     * after config hydration.\n     */\n    SentryRenderApp: () => void;\n    /**\n     * Used to close tooltips for testing purposes.\n     */\n    __closeAllTooltips: () => void;\n\n    /**\n     * The config object provided by the backend.\n     */\n    __initialData: Config;\n\n    /**\n     * This allows our server-rendered templates to push configuration that should be\n     * run after we render our main application.\n     *\n     * An example of this is dynamically importing the `passwordStrength` module only\n     * on the organization login page.\n     */\n    __onSentryInit:\n      | OnSentryInitConfiguration[]\n      | {\n          push: (config: OnSentryInitConfiguration) => void;\n        };\n\n    /**\n     * Used to open tooltips for testing purposes.\n     */\n    __openAllTooltips: () => void;\n    /**\n     * Pipeline\n     */\n    __pipelineInitialData: PipelineInitialData;\n    /**\n     * Assets public location\n     */\n    __sentryGlobalStaticPrefix: string;\n    /**\n     * This is used for testing purposes as an interem while we translate tests\n     * to React Testing Library.\n     *\n     * See the useLegacyStore hook for more unformation about this.\n     */\n    _legacyStoreHookUpdate: (update: () => void) => void;\n    // typing currently used for demo add on\n    // TODO: improve typing\n    SentryApp?: {\n      ConfigStore: any;\n      HookStore: any;\n      Modal: any;\n      getModalPortal: () => HTMLElement;\n      modalFocusTrap?: {\n        current?: FocusTrap;\n      };\n    };\n    /**\n     * Sentrys version string\n     */\n    __SENTRY__VERSION?: string;\n    /**\n     * Set to true if adblock could be installed.\n     * See sentry/js/ads.js for how this global is disabled.\n     */\n    adblockSuspected?: boolean;\n    /**\n     * The CSRF cookie ised on the backend\n     */\n    csrfCookieName?: string;\n\n    sentryEmbedCallback?: ((embed: any) => void) | null;\n  }\n}\n\nexport interface Config {\n  apmSampling: number;\n  csrfCookieName: string;\n  demoMode: boolean;\n  distPrefix: string;\n  dsn: string;\n  dsn_requests: string;\n  enableAnalytics: boolean;\n  features: Set<string>;\n  gravatarBaseUrl: string;\n  invitesEnabled: boolean;\n\n  isAuthenticated: boolean;\n  // Maintain isOnPremise key for backcompat (plugins?).\n  isOnPremise: boolean;\n  isSelfHosted: boolean;\n  languageCode: string;\n  lastOrganization: string | null;\n  /**\n   * This comes from django (django.contrib.messages)\n   */\n  messages: {level: keyof Theme['alert']; message: string}[];\n  needsUpgrade: boolean;\n\n  privacyUrl: string | null;\n  sentryConfig: {\n    dsn: string;\n    release: string;\n    whitelistUrls: string[];\n  };\n  singleOrganization: boolean;\n  supportEmail: string;\n  termsUrl: string | null;\n  theme: 'light' | 'dark';\n  urlPrefix: string;\n  user: User;\n  userIdentity: {\n    email: string;\n    id: string;\n    ip_address: string;\n    isStaff: boolean;\n  };\n  validateSUForm: boolean;\n  version: {\n    build: string;\n    current: string;\n    latest: string;\n    upgradeAvailable: boolean;\n  };\n  statuspage?: {\n    api_host: string;\n    id: string;\n  };\n}\n\nexport type PipelineInitialData = {\n  name: string;\n  props: Record<string, any>;\n};\n\nexport type Broadcast = {\n  cta: string;\n  dateCreated: string;\n  dateExpires: string;\n  hasSeen: boolean;\n  id: string;\n  isActive: boolean;\n  link: string;\n  message: string;\n  title: string;\n};\n\nexport type SentryServiceIncident = {\n  affectedComponents: Array<{\n    name: string;\n    status: 'degraded_performance' | 'partial_outage' | 'major_outage' | 'operational';\n    updatedAt: string;\n  }>;\n  createdAt: string;\n  id: string;\n  name: string;\n  status: string;\n  updates: Array<{\n    body: string;\n    status: string;\n    updatedAt: string;\n  }>;\n  url: string;\n};\n\nexport type SentryServiceStatus = {\n  incidents: SentryServiceIncident[];\n  indicator: 'major' | 'minor' | 'none';\n  url: string;\n};\n\nexport type PromptActivity = {\n  dismissedTime?: number;\n  snoozedTime?: number;\n};\n","export enum SamplingRuleType {\n  /**\n   * The rule applies to traces (transaction events considered in the context of a trace)\n   */\n  TRACE = 'trace',\n  /**\n   *  The rule applies to transaction events considered independently\n   */\n  TRANSACTION = 'transaction',\n}\n\nexport enum SamplingConditionOperator {\n  /**\n   * Combine multiple sub-conditions with the operator 'and'\n   */\n  AND = 'and',\n}\n\nexport enum SamplingRuleOperator {\n  /**\n   * The first rule on the list\n   */\n  IF = 'if',\n  /**\n   * All other rules, except rules without a condition\n   */\n  ELSE_IF = 'else_if',\n  /**\n   * Rules without a condition. In this case the rule cannot be reordered and is “pinned” at the bottom of the list\n   */\n  ELSE = 'else',\n}\n\nexport enum SamplingInnerOperator {\n  /**\n   * It uses glob matches for checking (e.g. releases use glob matching \"1.1.*\" will match release 1.1.1 and 1.1.2)\n   */\n  GLOB_MATCH = 'glob',\n  /**\n   * It uses simple equality for checking\n   */\n  EQUAL = 'eq',\n  /**\n   * Custom Operation\n   */\n  CUSTOM = 'custom',\n}\n\n/**\n * String of the sampling category that's used on the backend.\n * Default naming strategy should be based on the path in the event, prefixed with `event.`.\n * To see the path in the event, click on the JSON button on the issue details page.\n */\nexport enum SamplingInnerName {\n  TRACE_RELEASE = 'trace.release',\n  TRACE_ENVIRONMENT = 'trace.environment',\n  TRACE_USER_ID = 'trace.user.id',\n  TRACE_USER_SEGMENT = 'trace.user.segment',\n  TRACE_TRANSACTION = 'trace.transaction',\n  EVENT_RELEASE = 'event.release',\n  EVENT_ENVIRONMENT = 'event.environment',\n  EVENT_USER_ID = 'event.user.id',\n  EVENT_USER_SEGMENT = 'event.user.segment',\n  EVENT_LOCALHOST = 'event.is_local_ip',\n  EVENT_WEB_CRAWLERS = 'event.web_crawlers',\n  EVENT_BROWSER_EXTENSIONS = 'event.has_bad_browser_extensions',\n  EVENT_TRANSACTION = 'event.transaction',\n  EVENT_OS_NAME = 'event.contexts.os.name',\n  EVENT_OS_VERSION = 'event.contexts.os.version',\n  EVENT_DEVICE_NAME = 'event.contexts.device.name',\n  EVENT_DEVICE_FAMILY = 'event.contexts.device.family',\n  // Custom operators\n  EVENT_IP_ADDRESSES = 'event.client_ip',\n  EVENT_LEGACY_BROWSER = 'event.legacy_browser',\n  EVENT_ERROR_MESSAGES = 'event.error_messages',\n  EVENT_CSP = 'event.csp',\n  EVENT_CUSTOM_TAG = 'event.custom_tag', // used for the fresh new custom tag condition (gets replaced once you choose tag key)\n}\n\nexport enum LegacyBrowser {\n  IE_PRE_9 = 'ie_pre_9',\n  IE9 = 'ie9',\n  IE10 = 'ie10',\n  IE11 = 'ie11',\n  SAFARI_PRE_6 = 'safari_pre_6',\n  OPERA_PRE_15 = 'opera_pre_15',\n  OPERA_MINI_PRE_8 = 'opera_mini_pre_8',\n  ANDROID_PRE_4 = 'android_pre_4',\n}\n\ntype SamplingConditionLogicalInnerGlob = {\n  name:\n    | SamplingInnerName.EVENT_RELEASE\n    | SamplingInnerName.TRACE_RELEASE\n    | SamplingInnerName.EVENT_TRANSACTION\n    | SamplingInnerName.TRACE_TRANSACTION\n    | SamplingInnerName.EVENT_OS_NAME\n    | SamplingInnerName.EVENT_OS_VERSION\n    | SamplingInnerName.EVENT_DEVICE_FAMILY\n    | SamplingInnerName.EVENT_DEVICE_NAME\n    | SamplingInnerName.EVENT_CUSTOM_TAG\n    | string; // for custom tags\n  op: SamplingInnerOperator.GLOB_MATCH;\n  value: Array<string>;\n};\n\ntype SamplingConditionLogicalInnerEq = {\n  name:\n    | SamplingInnerName.EVENT_ENVIRONMENT\n    | SamplingInnerName.TRACE_ENVIRONMENT\n    | SamplingInnerName.EVENT_USER_ID\n    | SamplingInnerName.TRACE_USER_ID\n    | SamplingInnerName.EVENT_USER_SEGMENT\n    | SamplingInnerName.TRACE_USER_SEGMENT;\n  op: SamplingInnerOperator.EQUAL;\n  options: {\n    ignoreCase: boolean;\n  };\n  value: Array<string>;\n};\n\ntype SamplingConditionLogicalInnerEqBoolean = {\n  name:\n    | SamplingInnerName.EVENT_BROWSER_EXTENSIONS\n    | SamplingInnerName.EVENT_LOCALHOST\n    | SamplingInnerName.EVENT_WEB_CRAWLERS;\n  op: SamplingInnerOperator.EQUAL;\n  value: boolean;\n};\n\ntype SamplingConditionLogicalInnerCustom = {\n  name:\n    | SamplingInnerName.EVENT_CSP\n    | SamplingInnerName.EVENT_ERROR_MESSAGES\n    | SamplingInnerName.EVENT_IP_ADDRESSES;\n  op: SamplingInnerOperator.CUSTOM;\n  value: Array<string>;\n};\n\ntype SamplingConditionLogicalInnerCustomLegacyBrowser = {\n  name: SamplingInnerName.EVENT_LEGACY_BROWSER;\n  op: SamplingInnerOperator.CUSTOM;\n  value: Array<LegacyBrowser>;\n};\n\nexport type SamplingConditionLogicalInner =\n  | SamplingConditionLogicalInnerGlob\n  | SamplingConditionLogicalInnerEq\n  | SamplingConditionLogicalInnerEqBoolean\n  | SamplingConditionLogicalInnerCustom\n  | SamplingConditionLogicalInnerCustomLegacyBrowser;\n\nexport type SamplingCondition = {\n  inner: Array<SamplingConditionLogicalInner>;\n  op: SamplingConditionOperator.AND;\n};\n\nexport type SamplingRule = {\n  /**\n   * It is a possibly empty list of conditions to which the rule applies.\n   * The conditions are combined using the and operator (so all the conditions must be satisfied for the rule to apply).\n   * If the conditions field is an empty list the rule applies for all events that satisfy the projectIds and the ty fields.\n   */\n  condition: SamplingCondition;\n  /**\n   * This is a unique number within a project\n   */\n  id: number;\n  /**\n   * It is the sampling rate that will be applied if the rule is selected\n   */\n  sampleRate: number;\n  /**\n   * Describes the type of rule\n   */\n  type: SamplingRuleType;\n  /**\n   * A rule can be disabled if it doesn't contain a condition (Else case)\n   */\n  disabled?: boolean;\n};\n\nexport type SamplingRules = Array<SamplingRule>;\n","import type {Frame} from './event';\n\nexport enum STACK_VIEW {\n  RAW = 'raw',\n  FULL = 'full',\n  APP = 'app',\n}\n\nexport enum STACK_TYPE {\n  ORIGINAL = 'original',\n  MINIFIED = 'minified',\n}\n\nexport type StacktraceType = {\n  framesOmitted: any;\n  hasSystemFrames: boolean;\n  registers: Record<string, any> | null;\n  frames?: Array<Frame>;\n};\n\nexport type RawStacktrace = StacktraceType | null;\n\ntype MechanismMeta = {\n  errno?: {\n    number: number;\n    name?: string;\n  };\n  mach_exception?: {\n    code: number;\n    exception: number;\n    subcode: number;\n    name?: string;\n  };\n  signal?: {\n    number: number;\n    code?: number;\n    code_name?: string;\n    name?: string;\n  };\n};\n\nexport type StackTraceMechanism = {\n  handled: boolean;\n  synthetic: boolean;\n  type: string;\n  data?: object;\n  description?: string;\n  help_link?: string;\n  meta?: MechanismMeta;\n};\n","import {Query} from 'history';\nimport isArray from 'lodash/isArray';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport isUndefined from 'lodash/isUndefined';\n\nimport {Project} from 'sentry/types';\nimport {EventTag} from 'sentry/types/event';\nimport {appendTagCondition} from 'sentry/utils/queryString';\n\nfunction arrayIsEqual(arr?: any[], other?: any[], deep?: boolean): boolean {\n  // if the other array is a falsy value, return\n  if (!arr && !other) {\n    return true;\n  }\n\n  if (!arr || !other) {\n    return false;\n  }\n\n  // compare lengths - can save a lot of time\n  if (arr.length !== other.length) {\n    return false;\n  }\n\n  return arr.every((val, idx) => valueIsEqual(val, other[idx], deep));\n}\n\nexport function valueIsEqual(value?: any, other?: any, deep?: boolean): boolean {\n  if (value === other) {\n    return true;\n  }\n  if (isArray(value) || isArray(other)) {\n    if (arrayIsEqual(value, other, deep)) {\n      return true;\n    }\n  } else if (isObject(value) || isObject(other)) {\n    if (objectMatchesSubset(value, other, deep)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction objectMatchesSubset(obj?: object, other?: object, deep?: boolean): boolean {\n  let k: string;\n\n  if (obj === other) {\n    return true;\n  }\n\n  if (!obj || !other) {\n    return false;\n  }\n\n  if (deep !== true) {\n    for (k in other) {\n      if (obj[k] !== other[k]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  for (k in other) {\n    if (!valueIsEqual(obj[k], other[k], deep)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function intcomma(x: number): string {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport function lastOfArray<T extends Array<unknown> | ReadonlyArray<unknown>>(\n  t: T\n): T[number] {\n  return t[t.length - 1];\n}\n\nexport function sortArray<T>(arr: Array<T>, score_fn: (entry: T) => string): Array<T> {\n  arr.sort((a, b) => {\n    const a_score = score_fn(a),\n      b_score = score_fn(b);\n\n    for (let i = 0; i < a_score.length; i++) {\n      if (a_score[i] > b_score[i]) {\n        return 1;\n      }\n      if (a_score[i] < b_score[i]) {\n        return -1;\n      }\n    }\n    return 0;\n  });\n\n  return arr;\n}\n\nexport function objectIsEmpty(obj = {}): boolean {\n  for (const prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function trim(str: string): string {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Replaces slug special chars with a space\n */\nexport function explodeSlug(slug: string): string {\n  return trim(slug.replace(/[-_]+/g, ' '));\n}\n\nexport function defined<T>(item: T): item is Exclude<T, null | undefined> {\n  return !isUndefined(item) && item !== null;\n}\n\nexport function nl2br(str: string): string {\n  return str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n}\n\n/**\n * This function has a critical security impact, make sure to check all usages before changing this function.\n * In some parts of our code we rely on that this only really is a string starting with http(s).\n */\nexport function isUrl(str: any): boolean {\n  return (\n    !!str &&\n    isString(str) &&\n    (str.indexOf('http://') === 0 || str.indexOf('https://') === 0)\n  );\n}\n\nexport function escape(str: string): string {\n  return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\n\nexport function percent(value: number, totalValue: number): number {\n  // prevent division by zero\n  if (totalValue === 0) {\n    return 0;\n  }\n\n  return (value / totalValue) * 100;\n}\n\nexport function toTitleCase(str: string): string {\n  return str.replace(\n    /\\w\\S*/g,\n    txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n  );\n}\n\n/**\n * Note the difference between *a-bytes (base 10) vs *i-bytes (base 2), which\n * means that:\n * - 1000 megabytes is equal to 1 gigabyte\n * - 1024 mebibytes is equal to 1 gibibytes\n *\n * We will use base 10 throughout billing for attachments. This function formats\n * quota/usage values for display.\n *\n * For storage/memory/file sizes, please take a look at formatBytesBase2\n */\nexport function formatBytesBase10(bytes: number, u: number = 0) {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const threshold = 1000;\n\n  while (bytes >= threshold) {\n    bytes /= threshold;\n    u += 1;\n  }\n\n  return bytes.toLocaleString(undefined, {maximumFractionDigits: 2}) + ' ' + units[u];\n}\n\n/**\n * Note the difference between *a-bytes (base 10) vs *i-bytes (base 2), which\n * means that:\n * - 1000 megabytes is equal to 1 gigabyte\n * - 1024 mebibytes is equal to 1 gibibytes\n *\n * We will use base 2 to display storage/memory/file sizes as that is commonly\n * used by Windows or RAM or CPU cache sizes, and it is more familiar to the user\n *\n * For billing-related code around attachments. please take a look at\n * formatBytesBase10\n */\nexport function formatBytesBase2(bytes: number, fixPoints: number = 1): string {\n  const units = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  const thresh = 1024;\n  if (bytes < thresh) {\n    return bytes + ' B';\n  }\n\n  let u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (bytes >= thresh);\n  return bytes.toFixed(fixPoints) + ' ' + units[u];\n}\n\nexport function getShortCommitHash(hash: string): string {\n  if (hash.match(/^[a-f0-9]{40}$/)) {\n    hash = hash.substr(0, 7);\n  }\n  return hash;\n}\n\nexport function parseRepo<T>(repo: T): T {\n  if (typeof repo === 'string') {\n    const re = /(?:github\\.com|bitbucket\\.org)\\/([^\\/]+\\/[^\\/]+)/i;\n    const match = repo.match(re);\n    const parsedRepo = match ? match[1] : repo;\n    return parsedRepo as any;\n  }\n\n  return repo;\n}\n\n/**\n * Converts a multi-line textarea input value into an array,\n * eliminating empty lines\n */\nexport function extractMultilineFields(value: string): Array<string> {\n  return value\n    .split('\\n')\n    .map(f => trim(f))\n    .filter(f => f !== '');\n}\n\n/**\n * If the value is of type Array, converts it to type string, keeping the line breaks, if there is any\n */\nexport function convertMultilineFieldValue<T extends string | Array<string>>(\n  value: T\n): string {\n  if (Array.isArray(value)) {\n    return value.join('\\n');\n  }\n\n  if (typeof value === 'string') {\n    return value.split('\\n').join('\\n');\n  }\n\n  return '';\n}\n\nfunction projectDisplayCompare(a: Project, b: Project): number {\n  if (a.isBookmarked !== b.isBookmarked) {\n    return a.isBookmarked ? -1 : 1;\n  }\n  return a.slug.localeCompare(b.slug);\n}\n\n// Sort a list of projects by bookmarkedness, then by id\nexport function sortProjects(projects: Array<Project>): Array<Project> {\n  return projects.sort(projectDisplayCompare);\n}\n\n// build actorIds\nexport const buildUserId = (id: string) => `user:${id}`;\nexport const buildTeamId = (id: string) => `team:${id}`;\n\n/**\n * Removes the organization / project scope prefix on feature names.\n */\nexport function descopeFeatureName<T>(feature: T): T | string {\n  if (typeof feature !== 'string') {\n    return feature;\n  }\n\n  const results = feature.match(/(?:^(?:projects|organizations):)?(.*)/);\n\n  if (results && results.length > 0) {\n    return results.pop()!;\n  }\n\n  return feature;\n}\n\nexport function isWebpackChunkLoadingError(error: Error): boolean {\n  return (\n    error &&\n    typeof error.message === 'string' &&\n    error.message.toLowerCase().includes('loading chunk')\n  );\n}\n\nexport function deepFreeze<T>(object: T) {\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n  // Freeze properties before freezing self\n  for (const name of propNames) {\n    const value = object[name];\n\n    object[name] = value && typeof value === 'object' ? deepFreeze(value) : value;\n  }\n\n  return Object.freeze(object);\n}\n\nexport function generateQueryWithTag(prevQuery: Query, tag: EventTag): Query {\n  const query = {...prevQuery};\n\n  // some tags are dedicated query strings since other parts of the app consumes this,\n  // for example, the global selection header.\n  switch (tag.key) {\n    case 'environment':\n      query.environment = tag.value;\n      break;\n    case 'project':\n      query.project = tag.value;\n      break;\n    default:\n      query.query = appendTagCondition(query.query, tag.key, tag.value);\n  }\n\n  return query;\n}\n\nexport const isFunction = (value: any): value is Function => typeof value === 'function';\n\n// NOTE: only escapes a \" if it's not already escaped\nexport function escapeDoubleQuotes(str: string) {\n  return str.replace(/\\\\([\\s\\S])|(\")/g, '\\\\$1$2');\n}\n","import * as Sentry from '@sentry/react';\nimport {Transaction} from '@sentry/types';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {Hooks} from 'sentry/types/hooks';\n\n/**\n * Analytics and metric tracking functionality.\n *\n * These are primarily driven through hooks provided through the hookstore. For\n * sentry.io these are currently mapped to our in-house analytics backend\n * 'Reload' and the Amplitude service.\n *\n * NOTE: sentry.io contributors, you will need to ensure that the eventKey\n *       passed exists as an event key in the Reload events.py configuration:\n *\n *       https://github.com/getsentry/reload/blob/master/reload_app/events.py\n *\n * NOTE: sentry.io contributors, if you are using `gauge` or `increment` the\n *       name must be added to the Reload metrics module:\n *\n *       https://github.com/getsentry/reload/blob/master/reload_app/metrics/__init__.py\n */\n\n/**\n * This should be with all analytics events regardless of the analytics destination\n * which includes Reload, Amplitude, and Google Analytics.\n * All events go to Reload. If eventName is defined, events also go to Amplitude.\n * For more details, refer to the API defined in hooks.\n *\n * Should NOT be used directly.\n * Instead, use makeAnalyticsFunction to generate an analytics function.\n */\nexport const trackAnalyticsEventV2: Hooks['analytics:track-event-v2'] = (data, options) =>\n  HookStore.get('analytics:track-event-v2').forEach(cb => cb(data, options));\n\n/**\n * @deprecated Use trackAdvancedAnalyticsEvent or another function generated by makeAnalyticsFunction\n */\nexport const trackAnalyticsEvent: Hooks['analytics:track-event'] = options =>\n  HookStore.get('analytics:track-event').forEach(cb => cb(options));\n\n/**\n * @deprecated Use trackAdvancedAnalyticsEvent or another function generated by makeAnalyticsFunction\n */\nexport const trackAdhocEvent: Hooks['analytics:track-adhoc-event'] = options =>\n  HookStore.get('analytics:track-adhoc-event').forEach(cb => cb(options));\n\n/**\n * This should be used to log when a `organization.experiments` experiment\n * variant is checked in the application.\n *\n * Refer for the backend implementation provided through HookStore for more\n * details.\n */\nexport const logExperiment: Hooks['analytics:log-experiment'] = options =>\n  HookStore.get('analytics:log-experiment').forEach(cb => cb(options));\n\n/**\n * Legacy analytics tracking.\n *\n * @deprecated Use trackAdvancedAnalyticsEvent or another function generated by makeAnalyticsFunction\n */\nexport const analytics: Hooks['analytics:event'] = (name, data) =>\n  HookStore.get('analytics:event').forEach(cb => cb(name, data));\n\ntype RecordMetric = Hooks['metrics:event'] & {\n  endTransaction: (opts: {\n    /**\n     * Name of the transaction to end\n     */\n    name: string;\n  }) => void;\n\n  mark: (opts: {\n    /**\n     * Name of the metric event\n     */\n    name: string;\n    /**\n     * Additional data that will be sent with measure()\n     * This is useful if you want to track initial state\n     */\n    data?: object;\n  }) => void;\n\n  measure: (opts: {\n    /**\n     * Additional data to send with metric event.\n     * If a key collide with the data in mark(), this will overwrite them\n     */\n    data?: object;\n    /**\n     * Name of ending mark\n     */\n    end?: string;\n    /**\n     * Name of the metric event\n     */\n    name?: string;\n    /**\n     * Do not clean up marks and measurements when completed\n     */\n    noCleanup?: boolean;\n    /**\n     * Name of starting mark\n     */\n    start?: string;\n  }) => void;\n\n  startTransaction: (opts: {\n    /**\n     * Name of transaction\n     */\n    name: string;\n    /**\n     * Optional op code\n     */\n    op?: string;\n    /**\n     * Optional trace id, defaults to current tx trace\n     */\n    traceId?: string;\n  }) => Transaction;\n};\n\n/**\n * Used to pass data between metric.mark() and metric.measure()\n */\nconst metricDataStore = new Map<string, object>();\n\n/**\n * Record metrics.\n */\nexport const metric: RecordMetric = (name, value, tags) =>\n  HookStore.get('metrics:event').forEach(cb => cb(name, value, tags));\n\n// JSDOM implements window.performance but not window.performance.mark\nconst CAN_MARK =\n  window.performance &&\n  typeof window.performance.mark === 'function' &&\n  typeof window.performance.measure === 'function' &&\n  typeof window.performance.getEntriesByName === 'function' &&\n  typeof window.performance.clearMeasures === 'function';\n\nmetric.mark = function metricMark({name, data = {}}) {\n  // Just ignore if browser is old enough that it doesn't support this\n  if (!CAN_MARK) {\n    return;\n  }\n\n  if (!name) {\n    throw new Error('Invalid argument provided to `metric.mark`');\n  }\n\n  window.performance.mark(name);\n  metricDataStore.set(name, data);\n};\n\n/**\n * Performs a measurement between `start` and `end` (or now if `end` is not\n * specified) Calls `metric` with `name` and the measured time difference.\n */\nmetric.measure = function metricMeasure({name, start, end, data = {}, noCleanup} = {}) {\n  // Just ignore if browser is old enough that it doesn't support this\n  if (!CAN_MARK) {\n    return;\n  }\n\n  if (!name || !start) {\n    throw new Error('Invalid arguments provided to `metric.measure`');\n  }\n\n  let endMarkName = end;\n\n  // Can't destructure from performance\n  const {performance} = window;\n\n  // NOTE: Edge REQUIRES an end mark if it is given a start mark\n  // If we don't have an end mark, create one now.\n  if (!end) {\n    endMarkName = `${start}-end`;\n    performance.mark(endMarkName);\n  }\n\n  // Check if starting mark exists\n  if (!performance.getEntriesByName(start, 'mark').length) {\n    return;\n  }\n\n  performance.measure(name, start, endMarkName);\n  const startData = metricDataStore.get(start) || {};\n\n  // Retrieve measurement entries\n  performance\n    .getEntriesByName(name, 'measure')\n    .forEach(measurement =>\n      metric(measurement.name, measurement.duration, {...startData, ...data})\n    );\n\n  // By default, clean up measurements\n  if (!noCleanup) {\n    performance.clearMeasures(name);\n    performance.clearMarks(start);\n    performance.clearMarks(endMarkName);\n    metricDataStore.delete(start);\n  }\n};\n\n/**\n * Used to pass data between startTransaction and endTransaction\n */\nconst transactionDataStore = new Map<string, object>();\n\nconst getCurrentTransaction = () => {\n  return Sentry.getCurrentHub().getScope()?.getTransaction();\n};\n\nmetric.startTransaction = ({name, traceId, op}) => {\n  if (!traceId) {\n    traceId = getCurrentTransaction()?.traceId;\n  }\n  const transaction = Sentry.startTransaction({name, op, traceId});\n  transactionDataStore[name] = transaction;\n  return transaction;\n};\n\nmetric.endTransaction = ({name}) => {\n  const transaction = transactionDataStore[name];\n  if (transaction) {\n    transaction.finish();\n  }\n};\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters &\n  SamplingEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n  ...samplingEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","// Checks if `fn` is a function and calls it with `args`\nexport function callIfFunction(fn: any, ...args: any[]): any {\n  return typeof fn === 'function' && fn(...args);\n}\n","export function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n","import {Location, Query} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport uniqBy from 'lodash/uniqBy';\nimport moment from 'moment';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {COL_WIDTH_UNDEFINED} from 'sentry/components/gridEditable';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {DEFAULT_PER_PAGE} from 'sentry/constants';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {NewQuery, PageFilters, SavedQuery, SelectValue, User} from 'sentry/types';\nimport {\n  aggregateOutputType,\n  Column,\n  ColumnType,\n  Field,\n  generateFieldAsString,\n  getAggregateAlias,\n  getEquation,\n  isAggregateEquation,\n  isAggregateField,\n  isEquation,\n  isLegalYAxisType,\n  Sort,\n  WebVital,\n} from 'sentry/utils/discover/fields';\nimport {\n  CHART_AXIS_OPTIONS,\n  DISPLAY_MODE_FALLBACK_OPTIONS,\n  DISPLAY_MODE_OPTIONS,\n  DisplayModes,\n  TOP_N,\n} from 'sentry/utils/discover/types';\nimport {decodeList, decodeScalar} from 'sentry/utils/queryString';\nimport {\n  FieldValueKind,\n  TableColumn,\n  TableColumnSort,\n} from 'sentry/views/eventsV2/table/types';\nimport {decodeColumnOrder} from 'sentry/views/eventsV2/utils';\nimport {SpanOperationBreakdownFilter} from 'sentry/views/performance/transactionSummary/filter';\nimport {EventsDisplayFilterName} from 'sentry/views/performance/transactionSummary/transactionEvents/utils';\n\nimport {statsPeriodToDays} from '../dates';\nimport {MutableSearch} from '../tokenizeSearch';\n\nimport {getSortField} from './fieldRenderers';\n\n// Metadata mapping for discover results.\nexport type MetaType = Record<string, ColumnType> & {isMetricsData?: boolean};\nexport type EventsMetaType = {fields: Record<string, ColumnType>} & {\n  isMetricsData?: boolean;\n};\n\n// Data in discover results.\nexport type EventData = Record<string, any>;\n\nexport type LocationQuery = {\n  cursor?: string | string[] | null;\n  end?: string | string[] | null;\n  start?: string | string[] | null;\n  statsPeriod?: string | string[] | null;\n  utc?: string | string[] | null;\n};\n\nconst DATETIME_QUERY_STRING_KEYS = ['start', 'end', 'utc', 'statsPeriod'] as const;\n\nconst EXTERNAL_QUERY_STRING_KEYS: Readonly<Array<keyof LocationQuery>> = [\n  ...DATETIME_QUERY_STRING_KEYS,\n  'cursor',\n];\n\nconst setSortOrder = (sort: Sort, kind: 'desc' | 'asc'): Sort => ({\n  kind,\n  field: sort.field,\n});\n\nconst reverseSort = (sort: Sort): Sort => ({\n  kind: sort.kind === 'desc' ? 'asc' : 'desc',\n  field: sort.field,\n});\n\nconst isSortEqualToField = (\n  sort: Sort,\n  field: Field,\n  tableMeta: MetaType | undefined\n): boolean => {\n  const sortKey = getSortKeyFromField(field, tableMeta);\n  return sort.field === sortKey;\n};\n\nconst fieldToSort = (\n  field: Field,\n  tableMeta: MetaType | undefined,\n  kind?: 'desc' | 'asc',\n  useFunctionFormat?: boolean\n): Sort | undefined => {\n  const sortKey = getSortKeyFromField(field, tableMeta, useFunctionFormat);\n\n  if (!sortKey) {\n    return void 0;\n  }\n\n  return {\n    kind: kind || 'desc',\n    field: sortKey,\n  };\n};\n\nfunction getSortKeyFromField(\n  field: Field,\n  tableMeta?: MetaType,\n  useFunctionFormat?: boolean\n): string | null {\n  const fieldString = useFunctionFormat ? field.field : getAggregateAlias(field.field);\n  return getSortField(fieldString, tableMeta);\n}\n\nexport function isFieldSortable(field: Field, tableMeta?: MetaType): boolean {\n  return !!getSortKeyFromField(field, tableMeta);\n}\n\nconst decodeFields = (location: Location): Array<Field> => {\n  const {query} = location;\n  if (!query || !query.field) {\n    return [];\n  }\n\n  const fields = decodeList(query.field);\n  const widths = decodeList(query.widths);\n\n  const parsed: Field[] = [];\n  fields.forEach((field, i) => {\n    const w = Number(widths[i]);\n    const width = !isNaN(w) ? w : COL_WIDTH_UNDEFINED;\n\n    parsed.push({field, width});\n  });\n\n  return parsed;\n};\n\nconst parseSort = (sort: string): Sort => {\n  sort = sort.trim();\n\n  if (sort.startsWith('-')) {\n    return {\n      kind: 'desc',\n      field: sort.substring(1),\n    };\n  }\n\n  return {\n    kind: 'asc',\n    field: sort,\n  };\n};\n\nexport const fromSorts = (sorts: string | string[] | undefined): Array<Sort> => {\n  if (sorts === undefined) {\n    return [];\n  }\n\n  sorts = isString(sorts) ? [sorts] : sorts;\n\n  // NOTE: sets are iterated in insertion order\n  const uniqueSorts = [...new Set(sorts)];\n\n  return uniqueSorts.reduce((acc: Array<Sort>, sort: string) => {\n    acc.push(parseSort(sort));\n    return acc;\n  }, []);\n};\n\nconst decodeSorts = (location: Location): Array<Sort> => {\n  const {query} = location;\n\n  if (!query || !query.sort) {\n    return [];\n  }\n\n  const sorts = decodeList(query.sort);\n\n  return fromSorts(sorts);\n};\n\nexport const encodeSort = (sort: Sort): string => {\n  switch (sort.kind) {\n    case 'desc': {\n      return `-${sort.field}`;\n    }\n    case 'asc': {\n      return String(sort.field);\n    }\n    default: {\n      throw new Error('Unexpected sort type');\n    }\n  }\n};\n\nconst encodeSorts = (sorts: Readonly<Array<Sort>>): Array<string> =>\n  sorts.map(encodeSort);\n\nconst collectQueryStringByKey = (query: Query, key: string): Array<string> => {\n  const needle = query[key];\n  const collection = decodeList(needle);\n  return collection.reduce((acc: Array<string>, item: string) => {\n    item = item.trim();\n\n    if (item.length > 0) {\n      acc.push(item);\n    }\n\n    return acc;\n  }, []);\n};\n\nconst decodeQuery = (location: Location): string => {\n  if (!location.query || !location.query.query) {\n    return '';\n  }\n\n  const queryParameter = location.query.query;\n\n  return decodeScalar(queryParameter, '').trim();\n};\n\nconst decodeTeam = (value: string): 'myteams' | number => {\n  if (value === 'myteams') {\n    return value;\n  }\n  return parseInt(value, 10);\n};\n\nconst decodeTeams = (location: Location): ('myteams' | number)[] => {\n  if (!location.query || !location.query.team) {\n    return [];\n  }\n  const value = location.query.team;\n  return (Array.isArray(value) ? value.map(decodeTeam) : [decodeTeam(value)]).filter(\n    team => team === 'myteams' || !isNaN(team)\n  );\n};\n\nconst decodeProjects = (location: Location): number[] => {\n  if (!location.query || !location.query.project) {\n    return [];\n  }\n\n  const value = location.query.project;\n  return Array.isArray(value) ? value.map(i => parseInt(i, 10)) : [parseInt(value, 10)];\n};\n\nconst queryStringFromSavedQuery = (saved: NewQuery | SavedQuery): string => {\n  if (saved.query) {\n    return saved.query || '';\n  }\n  return '';\n};\n\nfunction validateTableMeta(tableMeta: MetaType | undefined): MetaType | undefined {\n  return tableMeta && Object.keys(tableMeta).length > 0 ? tableMeta : undefined;\n}\n\nclass EventView {\n  id: string | undefined;\n  name: string | undefined;\n  fields: Readonly<Field[]>;\n  sorts: Readonly<Sort[]>;\n  query: string;\n  team: Readonly<('myteams' | number)[]>;\n  project: Readonly<number[]>;\n  start: string | undefined;\n  end: string | undefined;\n  statsPeriod: string | undefined;\n  utc?: string | boolean | undefined;\n  environment: Readonly<string[]>;\n  yAxis: string | undefined;\n  display: string | undefined;\n  topEvents: string | undefined;\n  interval: string | undefined;\n  expired?: boolean;\n  createdBy: User | undefined;\n  additionalConditions: MutableSearch; // This allows views to always add additional conditins to the query to get specific data. It should not show up in the UI unless explicitly called.\n\n  constructor(props: {\n    additionalConditions: MutableSearch;\n    createdBy: User | undefined;\n    display: string | undefined;\n    end: string | undefined;\n    environment: Readonly<string[]>;\n    fields: Readonly<Field[]>;\n    id: string | undefined;\n    name: string | undefined;\n    project: Readonly<number[]>;\n    query: string;\n    sorts: Readonly<Sort[]>;\n    start: string | undefined;\n    statsPeriod: string | undefined;\n    team: Readonly<('myteams' | number)[]>;\n    topEvents: string | undefined;\n    yAxis: string | undefined;\n    expired?: boolean;\n    interval?: string;\n    utc?: string | boolean | undefined;\n  }) {\n    const fields: Field[] = Array.isArray(props.fields) ? props.fields : [];\n    let sorts: Sort[] = Array.isArray(props.sorts) ? props.sorts : [];\n    const team = Array.isArray(props.team) ? props.team : [];\n    const project = Array.isArray(props.project) ? props.project : [];\n    const environment = Array.isArray(props.environment) ? props.environment : [];\n\n    // only include sort keys that are included in the fields\n    let equations = 0;\n    const sortKeys = fields\n      .map(field => {\n        if (field.field && isEquation(field.field)) {\n          const sortKey = getSortKeyFromField(\n            {field: `equation[${equations}]`},\n            undefined\n          );\n          equations += 1;\n          return sortKey;\n        }\n        return getSortKeyFromField(field, undefined);\n      })\n      .filter((sortKey): sortKey is string => !!sortKey);\n\n    const sort = sorts.find(currentSort => sortKeys.includes(currentSort.field));\n    sorts = sort ? [sort] : [];\n\n    const id = props.id !== null && props.id !== void 0 ? String(props.id) : void 0;\n\n    this.id = id;\n    this.name = props.name;\n    this.fields = fields;\n    this.sorts = sorts;\n    this.query = typeof props.query === 'string' ? props.query : '';\n    this.team = team;\n    this.project = project;\n    this.start = props.start;\n    this.end = props.end;\n    this.statsPeriod = props.statsPeriod;\n    this.utc = props.utc;\n    this.environment = environment;\n    this.yAxis = props.yAxis;\n    this.display = props.display;\n    this.topEvents = props.topEvents;\n    this.interval = props.interval;\n    this.createdBy = props.createdBy;\n    this.expired = props.expired;\n    this.additionalConditions = props.additionalConditions\n      ? props.additionalConditions.copy()\n      : new MutableSearch([]);\n  }\n\n  static fromLocation(location: Location): EventView {\n    const {start, end, statsPeriod} = normalizeDateTimeParams(location.query);\n\n    return new EventView({\n      id: decodeScalar(location.query.id),\n      name: decodeScalar(location.query.name),\n      fields: decodeFields(location),\n      sorts: decodeSorts(location),\n      query: decodeQuery(location),\n      team: decodeTeams(location),\n      project: decodeProjects(location),\n      start: decodeScalar(start),\n      end: decodeScalar(end),\n      statsPeriod: decodeScalar(statsPeriod),\n      environment: collectQueryStringByKey(location.query, 'environment'),\n      yAxis: decodeScalar(location.query.yAxis),\n      display: decodeScalar(location.query.display),\n      topEvents: decodeScalar(location.query.topEvents),\n      interval: decodeScalar(location.query.interval),\n      createdBy: undefined,\n      additionalConditions: new MutableSearch([]),\n    });\n  }\n\n  static fromNewQueryWithLocation(newQuery: NewQuery, location: Location): EventView {\n    const query = location.query;\n\n    // apply global selection header values from location whenever possible\n    const environment: string[] =\n      Array.isArray(newQuery.environment) && newQuery.environment.length > 0\n        ? newQuery.environment\n        : collectQueryStringByKey(query, 'environment');\n\n    const project: number[] =\n      Array.isArray(newQuery.projects) && newQuery.projects.length > 0\n        ? newQuery.projects\n        : decodeProjects(location);\n\n    const saved: NewQuery = {\n      ...newQuery,\n\n      environment,\n      projects: project,\n\n      // datetime selection\n      start: newQuery.start || decodeScalar(query.start),\n      end: newQuery.end || decodeScalar(query.end),\n      range: newQuery.range || decodeScalar(query.statsPeriod),\n    };\n\n    return EventView.fromSavedQuery(saved);\n  }\n\n  static getFields(saved: NewQuery | SavedQuery) {\n    return saved.fields.map((field, i) => {\n      const width =\n        saved.widths && saved.widths[i] ? Number(saved.widths[i]) : COL_WIDTH_UNDEFINED;\n\n      return {field, width};\n    });\n  }\n\n  static fromSavedQuery(saved: NewQuery | SavedQuery): EventView {\n    const fields = EventView.getFields(saved);\n    // normalize datetime selection\n    const {start, end, statsPeriod, utc} = normalizeDateTimeParams({\n      start: saved.start,\n      end: saved.end,\n      statsPeriod: saved.range,\n      utc: saved.utc,\n    });\n\n    return new EventView({\n      id: saved.id,\n      name: saved.name,\n      fields,\n      query: queryStringFromSavedQuery(saved),\n      team: saved.teams ?? [],\n      project: saved.projects,\n      start: decodeScalar(start),\n      end: decodeScalar(end),\n      statsPeriod: decodeScalar(statsPeriod),\n      utc,\n      sorts: fromSorts(saved.orderby),\n      environment: collectQueryStringByKey(\n        {\n          environment: saved.environment as string[],\n        },\n        'environment'\n      ),\n      // Workaround to only use the first yAxis since eventView yAxis doesn't accept string[]\n      yAxis: Array.isArray(saved.yAxis) ? saved.yAxis[0] : saved.yAxis,\n      display: saved.display,\n      topEvents: saved.topEvents ? saved.topEvents.toString() : undefined,\n      createdBy: saved.createdBy,\n      expired: saved.expired,\n      additionalConditions: new MutableSearch([]),\n    });\n  }\n\n  static fromSavedQueryOrLocation(\n    saved: SavedQuery | undefined,\n    location: Location\n  ): EventView {\n    let fields = decodeFields(location);\n    const {start, end, statsPeriod, utc} = normalizeDateTimeParams(location.query);\n    const id = decodeScalar(location.query.id);\n    const teams = decodeTeams(location);\n    const projects = decodeProjects(location);\n    const sorts = decodeSorts(location);\n    const environments = collectQueryStringByKey(location.query, 'environment');\n\n    if (saved) {\n      if (fields.length === 0) {\n        fields = EventView.getFields(saved);\n      }\n      return new EventView({\n        id: id || saved.id,\n        name: decodeScalar(location.query.name) || saved.name,\n        fields,\n        query:\n          'query' in location.query\n            ? decodeQuery(location)\n            : queryStringFromSavedQuery(saved),\n        sorts: sorts.length === 0 ? fromSorts(saved.orderby) : sorts,\n        yAxis:\n          decodeScalar(location.query.yAxis) ||\n          // Workaround to only use the first yAxis since eventView yAxis doesn't accept string[]\n          (Array.isArray(saved.yAxis) ? saved.yAxis[0] : saved.yAxis),\n        display: decodeScalar(location.query.display) || saved.display,\n        topEvents: (\n          decodeScalar(location.query.topEvents) ||\n          saved.topEvents ||\n          TOP_N\n        ).toString(),\n        interval: decodeScalar(location.query.interval),\n        createdBy: saved.createdBy,\n        expired: saved.expired,\n        additionalConditions: new MutableSearch([]),\n        // Always read team from location since they can be set by other parts\n        // of the UI\n        team: teams,\n        // Always read project and environment from location since they can\n        // be set by the GlobalSelectionHeaders.\n        project: projects,\n        environment: environments,\n        start: decodeScalar(start),\n        end: decodeScalar(end),\n        statsPeriod: decodeScalar(statsPeriod),\n        utc,\n      });\n    }\n    return EventView.fromLocation(location);\n  }\n\n  isEqualTo(other: EventView): boolean {\n    const defaults = {\n      id: undefined,\n      name: undefined,\n      query: undefined,\n      statsPeriod: undefined,\n      fields: undefined,\n      sorts: undefined,\n      project: undefined,\n      environment: undefined,\n      yAxis: 'count()',\n      display: DisplayModes.DEFAULT,\n      topEvents: '5',\n    };\n    const keys = Object.keys(defaults);\n    for (const key of keys) {\n      const currentValue = this[key] ?? defaults[key];\n      const otherValue = other[key] ?? defaults[key];\n\n      if (!isEqual(currentValue, otherValue)) {\n        return false;\n      }\n    }\n\n    // compare datetime selections using moment\n\n    const dateTimeKeys = ['start', 'end'];\n\n    for (const key of dateTimeKeys) {\n      const currentValue = this[key];\n      const otherValue = other[key];\n\n      if (currentValue && otherValue) {\n        const currentDateTime = moment.utc(currentValue);\n        const othereDateTime = moment.utc(otherValue);\n\n        if (!currentDateTime.isSame(othereDateTime)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  toNewQuery(): NewQuery {\n    const orderby = this.sorts.length > 0 ? encodeSorts(this.sorts)[0] : undefined;\n\n    const newQuery: NewQuery = {\n      version: 2,\n      id: this.id,\n      name: this.name || '',\n      fields: this.getFields(),\n      widths: this.getWidths().map(w => String(w)),\n      orderby,\n      query: this.query || '',\n      projects: this.project,\n      start: this.start,\n      end: this.end,\n      range: this.statsPeriod,\n      environment: this.environment,\n      yAxis: this.yAxis ? [this.yAxis] : undefined,\n      display: this.display,\n      topEvents: this.topEvents,\n    };\n\n    if (!newQuery.query) {\n      // if query is an empty string, then it cannot be saved, so we omit it\n      // from the payload\n      delete newQuery.query;\n    }\n\n    return newQuery;\n  }\n\n  getPageFilters(): PageFilters {\n    return {\n      projects: this.project as number[],\n      environments: this.environment as string[],\n      datetime: {\n        start: this.start ?? null,\n        end: this.end ?? null,\n        period: this.statsPeriod ?? null,\n        // TODO(tony) Add support for the Use UTC option from the global\n        // headers, currently, that option is not supported and all times are\n        // assumed to be UTC\n        utc: true,\n      },\n    };\n  }\n\n  getPageFiltersQuery(): Query {\n    const {\n      environments: environment,\n      projects,\n      datetime: {start, end, period, utc},\n    } = this.getPageFilters();\n    return {\n      project: projects.map(proj => proj.toString()),\n      environment,\n      utc: utc ? 'true' : 'false',\n\n      // since these values are from `getGlobalSelection`\n      // we know they have type `string | null`\n      start: (start ?? undefined) as string | undefined,\n      end: (end ?? undefined) as string | undefined,\n\n      // we can't use the ?? operator here as we want to\n      // convert the empty string to undefined\n      statsPeriod: period ? period : undefined,\n    };\n  }\n\n  generateBlankQueryStringObject(): Query {\n    const output = {\n      id: undefined,\n      name: undefined,\n      field: undefined,\n      widths: undefined,\n      sort: undefined,\n      tag: undefined,\n      query: undefined,\n      yAxis: undefined,\n      display: undefined,\n      topEvents: undefined,\n      interval: undefined,\n    };\n\n    for (const field of EXTERNAL_QUERY_STRING_KEYS) {\n      output[field] = undefined;\n    }\n\n    return output;\n  }\n\n  generateQueryStringObject(): Query {\n    const output = {\n      id: this.id,\n      name: this.name,\n      field: this.getFields(),\n      widths: this.getWidths(),\n      sort: encodeSorts(this.sorts),\n      environment: this.environment,\n      project: this.project,\n      query: this.query,\n      yAxis: this.yAxis || this.getYAxis(),\n      display: this.display,\n      topEvents: this.topEvents,\n      interval: this.interval,\n    };\n\n    for (const field of EXTERNAL_QUERY_STRING_KEYS) {\n      if (this[field] && this[field].length) {\n        output[field] = this[field];\n      }\n    }\n\n    return cloneDeep(output as any);\n  }\n\n  isValid(): boolean {\n    return this.fields.length > 0;\n  }\n\n  getWidths(): number[] {\n    const result = this.fields.map(field =>\n      field.width ? field.width : COL_WIDTH_UNDEFINED\n    );\n\n    while (result.length > 0) {\n      const width = result[result.length - 1];\n      if (width === COL_WIDTH_UNDEFINED) {\n        result.pop();\n        continue;\n      }\n      break;\n    }\n\n    return result;\n  }\n\n  getFields(): string[] {\n    return this.fields.map(field => field.field);\n  }\n\n  getEquations(): string[] {\n    return this.fields\n      .filter(field => isEquation(field.field))\n      .map(field => getEquation(field.field));\n  }\n\n  getAggregateFields(): Field[] {\n    return this.fields.filter(\n      field => isAggregateField(field.field) || isAggregateEquation(field.field)\n    );\n  }\n\n  hasAggregateField() {\n    return this.fields.some(field => isAggregateField(field.field));\n  }\n\n  hasIdField() {\n    return this.fields.some(field => field.field === 'id');\n  }\n\n  numOfColumns(): number {\n    return this.fields.length;\n  }\n\n  getColumns(useFullEquationAsKey?: boolean): TableColumn<React.ReactText>[] {\n    return decodeColumnOrder(this.fields, useFullEquationAsKey);\n  }\n\n  getDays(): number {\n    const statsPeriod = decodeScalar(this.statsPeriod);\n    return statsPeriodToDays(statsPeriod, this.start, this.end);\n  }\n\n  clone(): EventView {\n    // NOTE: We rely on usage of Readonly from TypeScript to ensure we do not mutate\n    //       the attributes of EventView directly. This enables us to quickly\n    //       clone new instances of EventView.\n\n    return new EventView({\n      id: this.id,\n      name: this.name,\n      fields: this.fields,\n      sorts: this.sorts,\n      query: this.query,\n      team: this.team,\n      project: this.project,\n      start: this.start,\n      end: this.end,\n      statsPeriod: this.statsPeriod,\n      environment: this.environment,\n      yAxis: this.yAxis,\n      display: this.display,\n      topEvents: this.topEvents,\n      interval: this.interval,\n      expired: this.expired,\n      createdBy: this.createdBy,\n      additionalConditions: this.additionalConditions.copy(),\n    });\n  }\n\n  withSorts(sorts: Sort[]): EventView {\n    const newEventView = this.clone();\n    const fields = newEventView.fields.map(field => getAggregateAlias(field.field));\n    newEventView.sorts = sorts.filter(sort => fields.includes(sort.field));\n\n    return newEventView;\n  }\n\n  withColumns(columns: Column[]): EventView {\n    const newEventView = this.clone();\n    const fields: Field[] = columns\n      .filter(\n        col =>\n          ((col.kind === 'field' || col.kind === FieldValueKind.EQUATION) && col.field) ||\n          (col.kind === 'function' && col.function[0])\n      )\n      .map(col => generateFieldAsString(col))\n      .map((field, i) => {\n        // newly added field\n        if (!newEventView.fields[i]) {\n          return {field, width: COL_WIDTH_UNDEFINED};\n        }\n        // Existing columns that were not re ordered should retain\n        // their old widths.\n        const existing = newEventView.fields[i];\n        const width =\n          existing.field === field && existing.width !== undefined\n            ? existing.width\n            : COL_WIDTH_UNDEFINED;\n        return {field, width};\n      });\n    newEventView.fields = fields;\n\n    // Update sorts as sorted fields may have been removed.\n    if (newEventView.sorts) {\n      // Filter the sort fields down to those that are still selected.\n      const sortKeys = fields.map(field => fieldToSort(field, undefined)?.field);\n      const newSort = newEventView.sorts.filter(\n        sort => sort && sortKeys.includes(sort.field)\n      );\n      // If the sort field was removed, try and find a new sortable column.\n      if (newSort.length === 0) {\n        const sortField = fields.find(field => isFieldSortable(field, undefined));\n        if (sortField) {\n          newSort.push({field: sortField.field, kind: 'desc'});\n        }\n      }\n      newEventView.sorts = newSort;\n    }\n\n    newEventView.yAxis = newEventView.getYAxis();\n\n    return newEventView;\n  }\n\n  withNewColumn(newColumn: Column): EventView {\n    const fieldAsString = generateFieldAsString(newColumn);\n    const newField: Field = {\n      field: fieldAsString,\n      width: COL_WIDTH_UNDEFINED,\n    };\n    const newEventView = this.clone();\n    newEventView.fields = [...newEventView.fields, newField];\n\n    return newEventView;\n  }\n\n  withResizedColumn(columnIndex: number, newWidth: number) {\n    const field = this.fields[columnIndex];\n    const newEventView = this.clone();\n    if (!field) {\n      return newEventView;\n    }\n\n    const updateWidth = field.width !== newWidth;\n    if (updateWidth) {\n      const fields = [...newEventView.fields];\n      fields[columnIndex] = {\n        ...field,\n        width: newWidth,\n      };\n      newEventView.fields = fields;\n    }\n\n    return newEventView;\n  }\n\n  withUpdatedColumn(\n    columnIndex: number,\n    updatedColumn: Column,\n    tableMeta: MetaType | undefined\n  ): EventView {\n    const columnToBeUpdated = this.fields[columnIndex];\n    const fieldAsString = generateFieldAsString(updatedColumn);\n\n    const updateField = columnToBeUpdated.field !== fieldAsString;\n    if (!updateField) {\n      return this;\n    }\n\n    // ensure tableMeta is non-empty\n    tableMeta = validateTableMeta(tableMeta);\n\n    const newEventView = this.clone();\n\n    const updatedField: Field = {\n      field: fieldAsString,\n      width: COL_WIDTH_UNDEFINED,\n    };\n\n    const fields = [...newEventView.fields];\n    fields[columnIndex] = updatedField;\n\n    newEventView.fields = fields;\n\n    // if the updated column is one of the sorted columns, we may need to remove\n    // it from the list of sorts\n    const needleSortIndex = this.sorts.findIndex(sort =>\n      isSortEqualToField(sort, columnToBeUpdated, tableMeta)\n    );\n\n    if (needleSortIndex >= 0) {\n      const needleSort = this.sorts[needleSortIndex];\n\n      const numOfColumns = this.fields.reduce((sum, currentField) => {\n        if (isSortEqualToField(needleSort, currentField, tableMeta)) {\n          return sum + 1;\n        }\n\n        return sum;\n      }, 0);\n\n      // do not bother deleting the sort key if there are more than one columns\n      // of it in the table.\n      if (numOfColumns <= 1) {\n        if (isFieldSortable(updatedField, tableMeta)) {\n          // use the current updated field as the sort key\n          const sort = fieldToSort(updatedField, tableMeta)!;\n\n          // preserve the sort kind\n          sort.kind = needleSort.kind;\n\n          const sorts = [...newEventView.sorts];\n          sorts[needleSortIndex] = sort;\n          newEventView.sorts = sorts;\n        } else {\n          const sorts = [...newEventView.sorts];\n          sorts.splice(needleSortIndex, 1);\n          newEventView.sorts = [...new Set(sorts)];\n        }\n      }\n\n      if (newEventView.sorts.length <= 0 && newEventView.fields.length > 0) {\n        // establish a default sort by finding the first sortable field\n\n        if (isFieldSortable(updatedField, tableMeta)) {\n          // use the current updated field as the sort key\n          const sort = fieldToSort(updatedField, tableMeta)!;\n\n          // preserve the sort kind\n          sort.kind = needleSort.kind;\n\n          newEventView.sorts = [sort];\n        } else {\n          const sortableFieldIndex = newEventView.fields.findIndex(currentField =>\n            isFieldSortable(currentField, tableMeta)\n          );\n          if (sortableFieldIndex >= 0) {\n            const fieldToBeSorted = newEventView.fields[sortableFieldIndex];\n            const sort = fieldToSort(fieldToBeSorted, tableMeta)!;\n            newEventView.sorts = [sort];\n          }\n        }\n      }\n    }\n\n    newEventView.yAxis = newEventView.getYAxis();\n\n    return newEventView;\n  }\n\n  withDeletedColumn(columnIndex: number, tableMeta: MetaType | undefined): EventView {\n    // Disallow removal of the orphan column, and check for out-of-bounds\n    if (this.fields.length <= 1 || this.fields.length <= columnIndex || columnIndex < 0) {\n      return this;\n    }\n\n    // ensure tableMeta is non-empty\n    tableMeta = validateTableMeta(tableMeta);\n\n    // delete the column\n    const newEventView = this.clone();\n    const fields = [...newEventView.fields];\n    fields.splice(columnIndex, 1);\n    newEventView.fields = fields;\n\n    // Ensure there is at least one auto width column\n    // To ensure a well formed table results.\n    const hasAutoIndex = fields.find(field => field.width === COL_WIDTH_UNDEFINED);\n    if (!hasAutoIndex) {\n      newEventView.fields[0].width = COL_WIDTH_UNDEFINED;\n    }\n\n    // if the deleted column is one of the sorted columns, we need to remove\n    // it from the list of sorts\n    const columnToBeDeleted = this.fields[columnIndex];\n    const needleSortIndex = this.sorts.findIndex(sort =>\n      isSortEqualToField(sort, columnToBeDeleted, tableMeta)\n    );\n\n    if (needleSortIndex >= 0) {\n      const needleSort = this.sorts[needleSortIndex];\n\n      const numOfColumns = this.fields.reduce((sum, field) => {\n        if (isSortEqualToField(needleSort, field, tableMeta)) {\n          return sum + 1;\n        }\n\n        return sum;\n      }, 0);\n\n      // do not bother deleting the sort key if there are more than one columns\n      // of it in the table.\n      if (numOfColumns <= 1) {\n        const sorts = [...newEventView.sorts];\n        sorts.splice(needleSortIndex, 1);\n        newEventView.sorts = [...new Set(sorts)];\n\n        if (newEventView.sorts.length <= 0 && newEventView.fields.length > 0) {\n          // establish a default sort by finding the first sortable field\n          const sortableFieldIndex = newEventView.fields.findIndex(field =>\n            isFieldSortable(field, tableMeta)\n          );\n\n          if (sortableFieldIndex >= 0) {\n            const fieldToBeSorted = newEventView.fields[sortableFieldIndex];\n            const sort = fieldToSort(fieldToBeSorted, tableMeta)!;\n            newEventView.sorts = [sort];\n          }\n        }\n      }\n    }\n\n    newEventView.yAxis = newEventView.getYAxis();\n\n    return newEventView;\n  }\n\n  withTeams(teams: ('myteams' | number)[]): EventView {\n    const newEventView = this.clone();\n    newEventView.team = teams;\n    return newEventView;\n  }\n\n  getSorts(): TableColumnSort<React.ReactText>[] {\n    return this.sorts.map(\n      sort =>\n        ({\n          key: sort.field,\n          order: sort.kind,\n        } as TableColumnSort<string>)\n    );\n  }\n\n  // returns query input for the search\n  getQuery(inputQuery: string | string[] | null | undefined): string {\n    const queryParts: string[] = [];\n\n    if (this.query) {\n      if (this.additionalConditions) {\n        queryParts.push(this.getQueryWithAdditionalConditions());\n      } else {\n        queryParts.push(this.query);\n      }\n    }\n\n    if (inputQuery) {\n      // there may be duplicate query in the query string\n      // e.g. query=hello&query=world\n      if (Array.isArray(inputQuery)) {\n        inputQuery.forEach(query => {\n          if (typeof query === 'string' && !queryParts.includes(query)) {\n            queryParts.push(query);\n          }\n        });\n      }\n\n      if (typeof inputQuery === 'string' && !queryParts.includes(inputQuery)) {\n        queryParts.push(inputQuery);\n      }\n    }\n\n    return queryParts.join(' ');\n  }\n\n  getFacetsAPIPayload(\n    location: Location\n  ): Exclude<EventQuery & LocationQuery, 'sort' | 'cursor'> {\n    const payload = this.getEventsAPIPayload(location);\n\n    const remove = [\n      'id',\n      'name',\n      'per_page',\n      'sort',\n      'cursor',\n      'field',\n      'equation',\n      'interval',\n    ];\n    for (const key of remove) {\n      delete payload[key];\n    }\n\n    return payload;\n  }\n\n  normalizeDateSelection(location: Location) {\n    const query = (location && location.query) || {};\n\n    // pick only the query strings that we care about\n    const picked = pickRelevantLocationQueryStrings(location);\n\n    const hasDateSelection = this.statsPeriod || (this.start && this.end);\n\n    // an eventview's date selection has higher precedence than the date selection in the query string\n    const dateSelection = hasDateSelection\n      ? {\n          start: this.start,\n          end: this.end,\n          statsPeriod: this.statsPeriod,\n        }\n      : {\n          start: picked.start,\n          end: picked.end,\n          period: decodeScalar(query.period),\n          statsPeriod: picked.statsPeriod,\n        };\n\n    // normalize datetime selection\n    return normalizeDateTimeParams({\n      ...dateSelection,\n      utc: decodeScalar(query.utc),\n    });\n  }\n\n  // Takes an EventView instance and converts it into the format required for the events API\n  getEventsAPIPayload(location: Location): EventQuery & LocationQuery {\n    // pick only the query strings that we care about\n    const picked = pickRelevantLocationQueryStrings(location);\n\n    // normalize datetime selection\n    const normalizedTimeWindowParams = this.normalizeDateSelection(location);\n\n    const sort =\n      this.sorts.length <= 0\n        ? undefined\n        : this.sorts.length > 1\n        ? encodeSorts(this.sorts)\n        : encodeSort(this.sorts[0]);\n    const fields = this.getFields();\n    const team = this.team.map(proj => String(proj));\n    const project = this.project.map(proj => String(proj));\n    const environment = this.environment as string[];\n\n    // generate event query\n    const eventQuery = Object.assign(\n      omit(picked, DATETIME_QUERY_STRING_KEYS),\n      normalizedTimeWindowParams,\n      {\n        team,\n        project,\n        environment,\n        field: [...new Set(fields)],\n        sort,\n        per_page: DEFAULT_PER_PAGE,\n        query: this.getQueryWithAdditionalConditions(),\n      }\n    ) as EventQuery & LocationQuery;\n\n    if (eventQuery.team && !eventQuery.team.length) {\n      delete eventQuery.team;\n    }\n\n    if (!eventQuery.sort) {\n      delete eventQuery.sort;\n    }\n\n    return eventQuery;\n  }\n\n  getResultsViewUrlTarget(slug: string): {pathname: string; query: Query} {\n    return {\n      pathname: `/organizations/${slug}/discover/results/`,\n      query: this.generateQueryStringObject(),\n    };\n  }\n\n  getResultsViewShortUrlTarget(slug: string): {pathname: string; query: Query} {\n    const output = {id: this.id};\n    for (const field of [...Object.values(URL_PARAM), 'cursor']) {\n      if (this[field] && this[field].length) {\n        output[field] = this[field];\n      }\n    }\n    return {\n      pathname: `/organizations/${slug}/discover/results/`,\n      query: cloneDeep(output as any),\n    };\n  }\n\n  getPerformanceTransactionEventsViewUrlTarget(\n    slug: string,\n    options: {\n      breakdown?: SpanOperationBreakdownFilter;\n      showTransactions?: EventsDisplayFilterName;\n      webVital?: WebVital;\n    }\n  ): {pathname: string; query: Query} {\n    const {showTransactions, breakdown, webVital} = options;\n    const output = {\n      sort: encodeSorts(this.sorts),\n      project: this.project,\n      query: this.query,\n      transaction: this.name,\n      showTransactions,\n      breakdown,\n      webVital,\n    };\n\n    for (const field of EXTERNAL_QUERY_STRING_KEYS) {\n      if (this[field] && this[field].length) {\n        output[field] = this[field];\n      }\n    }\n\n    const query = cloneDeep(output as any);\n    return {\n      pathname: `/organizations/${slug}/performance/summary/events/`,\n      query,\n    };\n  }\n\n  sortForField(field: Field, tableMeta: MetaType | undefined): Sort | undefined {\n    if (!tableMeta) {\n      return undefined;\n    }\n    return this.sorts.find(sort => isSortEqualToField(sort, field, tableMeta));\n  }\n\n  sortOnField(\n    field: Field,\n    tableMeta: MetaType,\n    kind?: 'desc' | 'asc',\n    useFunctionFormat?: boolean\n  ): EventView {\n    // check if field can be sorted\n    if (!isFieldSortable(field, tableMeta)) {\n      return this;\n    }\n\n    const needleIndex = this.sorts.findIndex(sort =>\n      isSortEqualToField(sort, field, tableMeta)\n    );\n\n    if (needleIndex >= 0) {\n      const newEventView = this.clone();\n\n      const currentSort = this.sorts[needleIndex];\n\n      const sorts = [...newEventView.sorts];\n      sorts[needleIndex] = kind\n        ? setSortOrder(\n            {...currentSort, ...(useFunctionFormat ? {field: field.field} : {})},\n            kind\n          )\n        : reverseSort({\n            ...currentSort,\n            ...(useFunctionFormat ? {field: field.field} : {}),\n          });\n\n      newEventView.sorts = sorts;\n\n      return newEventView;\n    }\n\n    // field is currently not sorted; so, we sort on it\n    const newEventView = this.clone();\n\n    // invariant: this is not falsey, since sortKey exists\n    const sort = fieldToSort(field, tableMeta, kind, useFunctionFormat)!;\n\n    newEventView.sorts = [sort];\n\n    return newEventView;\n  }\n\n  getYAxisOptions(): SelectValue<string>[] {\n    // Make option set and add the default options in.\n    return uniqBy(\n      this.getAggregateFields()\n        // Only include aggregates that make sense to be graphable (eg. not string or date)\n        .filter(\n          (field: Field) =>\n            isLegalYAxisType(aggregateOutputType(field.field)) ||\n            isAggregateEquation(field.field)\n        )\n        .map((field: Field) => ({\n          label: isEquation(field.field) ? getEquation(field.field) : field.field,\n          value: field.field,\n        }))\n        .concat(CHART_AXIS_OPTIONS),\n      'value'\n    );\n  }\n\n  getYAxis(): string {\n    const yAxisOptions = this.getYAxisOptions();\n\n    const yAxis = this.yAxis;\n    const defaultOption = yAxisOptions[0].value;\n\n    if (!yAxis) {\n      return defaultOption;\n    }\n\n    // ensure current selected yAxis is one of the items in yAxisOptions\n    const result = yAxisOptions.findIndex(\n      (option: SelectValue<string>) => option.value === yAxis\n    );\n\n    if (result >= 0) {\n      return yAxis;\n    }\n\n    return defaultOption;\n  }\n\n  getDisplayOptions(): SelectValue<string>[] {\n    return DISPLAY_MODE_OPTIONS.map(item => {\n      if (item.value === DisplayModes.PREVIOUS) {\n        if (this.start || this.end) {\n          return {...item, disabled: true};\n        }\n      }\n\n      if (item.value === DisplayModes.TOP5 || item.value === DisplayModes.DAILYTOP5) {\n        if (this.getAggregateFields().length === 0) {\n          return {\n            ...item,\n            disabled: true,\n            tooltip: t('Add a function that groups events to use this view.'),\n          };\n        }\n      }\n\n      if (item.value === DisplayModes.DAILY || item.value === DisplayModes.DAILYTOP5) {\n        if (this.getDays() < 1) {\n          return {\n            ...item,\n            disabled: true,\n            tooltip: t('Change the date rage to at least 1 day to use this view.'),\n          };\n        }\n      }\n\n      return item;\n    });\n  }\n\n  getDisplayMode() {\n    const mode = this.display ?? DisplayModes.DEFAULT;\n    const displayOptions = this.getDisplayOptions();\n\n    let display = (Object.values(DisplayModes) as string[]).includes(mode)\n      ? mode\n      : DisplayModes.DEFAULT;\n    const cond = option => option.value === display;\n\n    // Just in case we define a fallback chain that results in an infinite loop.\n    // The number 5 isn't anything special, its just larger than the longest fallback\n    // chain that exists and isn't too big.\n    for (let i = 0; i < 5; i++) {\n      const selectedOption = displayOptions.find(cond);\n      if (selectedOption && !selectedOption.disabled) {\n        return display;\n      }\n      display = DISPLAY_MODE_FALLBACK_OPTIONS[display];\n    }\n\n    // after trying to find an enabled display mode and failing to find one,\n    // we just use the default display mode\n    return DisplayModes.DEFAULT;\n  }\n\n  getQueryWithAdditionalConditions() {\n    const {query} = this;\n    if (this.additionalConditions.isEmpty()) {\n      return query;\n    }\n    const conditions = new MutableSearch(query);\n    Object.entries(this.additionalConditions.filters).forEach(([tag, tagValues]) => {\n      const existingTagValues = conditions.getFilterValues(tag);\n      const newTagValues = tagValues.filter(\n        tagValue => !existingTagValues.includes(tagValue)\n      );\n      if (newTagValues.length) {\n        conditions.addFilterValues(tag, newTagValues);\n      }\n    });\n    return conditions.formatString();\n  }\n}\n\nexport type ImmutableEventView = Readonly<Omit<EventView, 'additionalConditions'>>;\n\nconst isFieldsSimilar = (\n  currentValue: Array<string>,\n  otherValue: Array<string>\n): boolean => {\n  // For equation's their order matters because we alias them based on index\n  const currentEquations = currentValue.filter(isEquation);\n  const otherEquations = otherValue.filter(isEquation);\n\n  // Field orders don't matter, so using a set for comparison\n  const currentFields = new Set(currentValue.filter(value => !isEquation(value)));\n  const otherFields = new Set(otherValue.filter(value => !isEquation(value)));\n\n  if (!isEqual(currentEquations, otherEquations)) {\n    return false;\n  }\n  if (!isEqual(currentFields, otherFields)) {\n    return false;\n  }\n  return true;\n};\n\nexport const isAPIPayloadSimilar = (\n  current: EventQuery & LocationQuery,\n  other: EventQuery & LocationQuery\n): boolean => {\n  const currentKeys = new Set(Object.keys(current));\n  const otherKeys = new Set(Object.keys(other));\n\n  if (!isEqual(currentKeys, otherKeys)) {\n    return false;\n  }\n\n  for (const key of currentKeys) {\n    const currentValue = current[key];\n    const otherValue = other[key];\n    if (key === 'field') {\n      if (!isFieldsSimilar(currentValue, otherValue)) {\n        return false;\n      }\n    } else {\n      const currentTarget = Array.isArray(currentValue)\n        ? new Set(currentValue)\n        : currentValue;\n\n      const otherTarget = Array.isArray(otherValue) ? new Set(otherValue) : otherValue;\n\n      if (!isEqual(currentTarget, otherTarget)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport function pickRelevantLocationQueryStrings(location: Location) {\n  const query = location.query || {};\n  const picked = pick(query || {}, EXTERNAL_QUERY_STRING_KEYS);\n\n  return picked;\n}\n\nexport default EventView;\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\n\nexport const TOP_N = 5;\n\nexport enum DisplayModes {\n  DEFAULT = 'default',\n  PREVIOUS = 'previous',\n  TOP5 = 'top5',\n  DAILY = 'daily',\n  DAILYTOP5 = 'dailytop5',\n  WORLDMAP = 'worldmap',\n  BAR = 'bar',\n}\n\nexport const TOP_EVENT_MODES: string[] = [DisplayModes.TOP5, DisplayModes.DAILYTOP5];\n\nexport const DISPLAY_MODE_OPTIONS: SelectValue<string>[] = [\n  {value: DisplayModes.DEFAULT, label: t('Total Period')},\n  {value: DisplayModes.PREVIOUS, label: t('Previous Period')},\n  {value: DisplayModes.TOP5, label: t('Top 5 Period')},\n  {value: DisplayModes.DAILY, label: t('Total Daily')},\n  {value: DisplayModes.DAILYTOP5, label: t('Top 5 Daily')},\n  {value: DisplayModes.WORLDMAP, label: t('World Map')},\n  {value: DisplayModes.BAR, label: t('Bar Chart')},\n];\n\n/**\n * The chain of fallback display modes to try to use when one is disabled.\n *\n * Make sure that the chain always leads to a display mode that is enabled.\n * There is a fail safe to fall back to the default display mode, but it likely\n * won't be creating results you expect.\n */\nexport const DISPLAY_MODE_FALLBACK_OPTIONS = {\n  [DisplayModes.DEFAULT]: DisplayModes.DEFAULT,\n  [DisplayModes.PREVIOUS]: DisplayModes.DEFAULT,\n  [DisplayModes.TOP5]: DisplayModes.DEFAULT,\n  [DisplayModes.DAILY]: DisplayModes.DEFAULT,\n  [DisplayModes.DAILYTOP5]: DisplayModes.DAILY,\n  [DisplayModes.WORLDMAP]: DisplayModes.DEFAULT,\n  [DisplayModes.BAR]: DisplayModes.DEFAULT,\n};\n\n// default list of yAxis options\nexport const CHART_AXIS_OPTIONS = [\n  {label: 'count()', value: 'count()'},\n  {label: 'count_unique(user)', value: 'count_unique(user)'},\n];\n\nexport const MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES = [\n  DisplayModes.DEFAULT,\n  DisplayModes.DAILY,\n  DisplayModes.PREVIOUS,\n  DisplayModes.BAR,\n];\n","import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport {Group, Organization, Project} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport withApi from 'sentry/utils/withApi';\n\nconst DEFAULT_POLL_INTERVAL = 5000;\n\nconst recordAnalyticsFirstEvent = ({\n  key,\n  organization,\n  project,\n}: {\n  key: 'first_event_recieved' | 'first_transaction_recieved';\n  organization: Organization;\n  project: Project;\n}) =>\n  analytics(`onboarding_v2.${key}`, {\n    org_id: parseInt(organization.id, 10),\n    project: String(project.id),\n  });\n\n/**\n * Should no issue object be available (the first issue has expired) then it\n * will simply be boolean true. When no event has been received this will be\n * null. Otherwise it will be the group\n */\ntype FirstIssue = null | true | Group;\n\nexport interface EventWaiterProps {\n  api: Client;\n  children: (props: {firstIssue: FirstIssue}) => React.ReactNode;\n  eventType: 'error' | 'transaction';\n  organization: Organization;\n  project: Project;\n  disabled?: boolean;\n  onIssueReceived?: (props: {firstIssue: FirstIssue}) => void;\n  onTransactionReceived?: (props: {firstIssue: FirstIssue}) => void;\n  pollInterval?: number;\n}\n\ntype EventWaiterState = {\n  firstIssue: FirstIssue;\n};\n\n/**\n * This is a render prop component that can be used to wait for the first event\n * of a project to be received via polling.\n */\nclass EventWaiter extends Component<EventWaiterProps, EventWaiterState> {\n  state: EventWaiterState = {\n    firstIssue: null,\n  };\n\n  componentDidMount() {\n    this.pollHandler();\n    this.startPolling();\n  }\n\n  componentDidUpdate() {\n    this.stopPolling();\n    this.startPolling();\n  }\n\n  componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  pollingInterval: number | null = null;\n\n  pollHandler = async () => {\n    const {api, organization, project, eventType, onIssueReceived} = this.props;\n    let firstEvent = null;\n    let firstIssue: Group | boolean | null = null;\n\n    try {\n      const resp = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`\n      );\n      firstEvent = eventType === 'error' ? resp.firstEvent : resp.firstTransactionEvent;\n    } catch (resp) {\n      if (!resp) {\n        return;\n      }\n\n      // This means org or project does not exist, we need to stop polling\n      // Also stop polling on auth-related errors (403/401)\n      if ([404, 403, 401, 0].includes(resp.status)) {\n        // TODO: Add some UX around this... redirect? error message?\n        this.stopPolling();\n        return;\n      }\n\n      Sentry.setExtras({\n        status: resp.status,\n        detail: resp.responseJSON?.detail,\n      });\n      Sentry.captureException(new Error(`Error polling for first ${eventType} event`));\n    }\n\n    if (firstEvent === null || firstEvent === false) {\n      return;\n    }\n\n    if (eventType === 'error') {\n      // Locate the projects first issue group. The project.firstEvent field will\n      // *not* include sample events, while just looking at the issues list will.\n      // We will wait until the project.firstEvent is set and then locate the\n      // event given that event datetime\n      const issues: Group[] = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/issues/`\n      );\n\n      // The event may have expired, default to true\n      firstIssue = issues.find((issue: Group) => issue.firstSeen === firstEvent) || true;\n\n      // noinspection SpellCheckingInspection\n      recordAnalyticsFirstEvent({\n        key: 'first_event_recieved',\n        organization,\n        project,\n      });\n    } else {\n      firstIssue = firstEvent;\n      // noinspection SpellCheckingInspection\n      recordAnalyticsFirstEvent({\n        key: 'first_transaction_recieved',\n        organization,\n        project,\n      });\n    }\n\n    if (onIssueReceived) {\n      onIssueReceived({firstIssue});\n    }\n\n    this.stopPolling();\n    this.setState({firstIssue});\n  };\n\n  startPolling() {\n    const {disabled, organization, project} = this.props;\n\n    if (disabled || !organization || !project || this.state.firstIssue) {\n      return;\n    }\n\n    // Proactively clear interval just in case stopPolling was not called\n    if (this.pollingInterval) {\n      window.clearInterval(this.pollingInterval);\n    }\n\n    this.pollingInterval = window.setInterval(\n      this.pollHandler,\n      this.props.pollInterval || DEFAULT_POLL_INTERVAL\n    );\n  }\n\n  stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n\n  render() {\n    return this.props.children({firstIssue: this.state.firstIssue});\n  }\n}\n\nexport default withApi(EventWaiter);\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {Release} from '@sentry/release-parser';\nimport round from 'lodash/round';\n\nimport {t, tn} from 'sentry/locale';\nimport {CommitAuthor, User} from 'sentry/types';\n\nexport function userDisplayName(user: User | CommitAuthor, includeEmail = true): string {\n  let displayName = String(user?.name ?? t('Unknown author')).trim();\n\n  if (displayName.length <= 0) {\n    displayName = t('Unknown author');\n  }\n\n  const email = String(user?.email ?? '').trim();\n\n  if (email.length > 0 && email !== displayName && includeEmail) {\n    displayName += ' (' + email + ')';\n  }\n  return displayName;\n}\n\nexport const formatVersion = (rawVersion: string, withPackage = false) => {\n  try {\n    const parsedVersion = new Release(rawVersion);\n    const versionToDisplay = parsedVersion.describe();\n\n    if (versionToDisplay.length) {\n      return `${versionToDisplay}${\n        withPackage && parsedVersion.package ? `, ${parsedVersion.package}` : ''\n      }`;\n    }\n\n    return rawVersion;\n  } catch {\n    return rawVersion;\n  }\n};\n\nfunction roundWithFixed(\n  value: number,\n  fixedDigits: number\n): {label: string; result: number} {\n  const label = value.toFixed(fixedDigits);\n  const result = fixedDigits <= 0 ? Math.round(value) : value;\n\n  return {label, result};\n}\n\n// in milliseconds\nexport const MONTH = 2629800000;\nexport const WEEK = 604800000;\nexport const DAY = 86400000;\nexport const HOUR = 3600000;\nexport const MINUTE = 60000;\nexport const SECOND = 1000;\n\nexport function getDuration(\n  seconds: number,\n  fixedDigits: number = 0,\n  abbreviation: boolean = false,\n  extraShort: boolean = false\n): string {\n  // value in milliseconds\n  const msValue = seconds * 1000;\n  const value = Math.abs(msValue);\n\n  if (value >= MONTH && !extraShort) {\n    const {label, result} = roundWithFixed(msValue / MONTH, fixedDigits);\n    return `${label}${abbreviation ? t('mo') : ` ${tn('month', 'months', result)}`}`;\n  }\n\n  if (value >= WEEK) {\n    const {label, result} = roundWithFixed(msValue / WEEK, fixedDigits);\n    if (extraShort) {\n      return `${label}${t('w')}`;\n    }\n    if (abbreviation) {\n      return `${label}${t('wk')}`;\n    }\n    return `${label} ${tn('week', 'weeks', result)}`;\n  }\n\n  if (value >= DAY) {\n    const {label, result} = roundWithFixed(msValue / DAY, fixedDigits);\n    return `${label}${\n      abbreviation || extraShort ? t('d') : ` ${tn('day', 'days', result)}`\n    }`;\n  }\n\n  if (value >= HOUR) {\n    const {label, result} = roundWithFixed(msValue / HOUR, fixedDigits);\n    if (extraShort) {\n      return `${label}${t('h')}`;\n    }\n    if (abbreviation) {\n      return `${label}${t('hr')}`;\n    }\n    return `${label} ${tn('hour', 'hours', result)}`;\n  }\n\n  if (value >= MINUTE) {\n    const {label, result} = roundWithFixed(msValue / MINUTE, fixedDigits);\n    if (extraShort) {\n      return `${label}${t('m')}`;\n    }\n    if (abbreviation) {\n      return `${label}${t('min')}`;\n    }\n    return `${label} ${tn('minute', 'minutes', result)}`;\n  }\n\n  if (value >= SECOND) {\n    const {label, result} = roundWithFixed(msValue / SECOND, fixedDigits);\n    if (extraShort || abbreviation) {\n      return `${label}${t('s')}`;\n    }\n    return `${label} ${tn('second', 'seconds', result)}`;\n  }\n\n  const {label} = roundWithFixed(msValue, fixedDigits);\n\n  return label + t('ms');\n}\n\nexport function getExactDuration(seconds: number, abbreviation: boolean = false) {\n  const convertDuration = (secs: number, abbr: boolean): string => {\n    // value in milliseconds\n    const msValue = round(secs * 1000);\n    const value = round(Math.abs(secs * 1000));\n\n    const divideBy = (time: number) => {\n      return {\n        quotient: msValue < 0 ? Math.ceil(msValue / time) : Math.floor(msValue / time),\n        remainder: msValue % time,\n      };\n    };\n\n    if (value >= WEEK) {\n      const {quotient, remainder} = divideBy(WEEK);\n\n      return `${quotient}${\n        abbr ? t('wk') : ` ${tn('week', 'weeks', quotient)}`\n      } ${convertDuration(remainder / 1000, abbr)}`;\n    }\n    if (value >= DAY) {\n      const {quotient, remainder} = divideBy(DAY);\n\n      return `${quotient}${\n        abbr ? t('d') : ` ${tn('day', 'days', quotient)}`\n      } ${convertDuration(remainder / 1000, abbr)}`;\n    }\n    if (value >= HOUR) {\n      const {quotient, remainder} = divideBy(HOUR);\n\n      return `${quotient}${\n        abbr ? t('hr') : ` ${tn('hour', 'hours', quotient)}`\n      } ${convertDuration(remainder / 1000, abbr)}`;\n    }\n    if (value >= MINUTE) {\n      const {quotient, remainder} = divideBy(MINUTE);\n\n      return `${quotient}${\n        abbr ? t('min') : ` ${tn('minute', 'minutes', quotient)}`\n      } ${convertDuration(remainder / 1000, abbr)}`;\n    }\n    if (value >= SECOND) {\n      const {quotient, remainder} = divideBy(SECOND);\n\n      return `${quotient}${\n        abbr ? t('s') : ` ${tn('second', 'seconds', quotient)}`\n      } ${convertDuration(remainder / 1000, abbr)}`;\n    }\n\n    if (value === 0) {\n      return '';\n    }\n\n    return `${msValue}${abbr ? t('ms') : ` ${tn('millisecond', 'milliseconds', value)}`}`;\n  };\n\n  const result = convertDuration(seconds, abbreviation).trim();\n\n  if (result.length) {\n    return result;\n  }\n\n  return `0${abbreviation ? t('ms') : ` ${t('milliseconds')}`}`;\n}\n\nexport function formatFloat(number: number, places: number) {\n  const multi = Math.pow(10, places);\n  return parseInt((number * multi).toString(), 10) / multi;\n}\n\n/**\n * Format a value between 0 and 1 as a percentage\n */\nexport function formatPercentage(value: number, places: number = 2) {\n  if (value === 0) {\n    return '0%';\n  }\n  return (\n    round(value * 100, places).toLocaleString(undefined, {\n      maximumFractionDigits: places,\n    }) + '%'\n  );\n}\n\nconst numberFormats = [\n  [1000000000, 'b'],\n  [1000000, 'm'],\n  [1000, 'k'],\n] as const;\n\nexport function formatAbbreviatedNumber(number: number | string) {\n  number = Number(number);\n\n  let lookup: typeof numberFormats[number];\n\n  // eslint-disable-next-line no-cond-assign\n  for (let i = 0; (lookup = numberFormats[i]); i++) {\n    const [suffixNum, suffix] = lookup;\n    const shortValue = Math.floor(number / suffixNum);\n    const fitsBound = number % suffixNum;\n\n    if (shortValue <= 0) {\n      continue;\n    }\n\n    return shortValue / 10 > 1 || !fitsBound\n      ? `${shortValue}${suffix}`\n      : `${formatFloat(number / suffixNum, 1)}${suffix}`;\n  }\n\n  return number.toLocaleString();\n}\n","import {IS_ACCEPTANCE_TEST} from 'sentry/constants';\n\n/**\n * Return a specified \"fixed\" string when we are in a testing environment\n * (more specifically, when `IS_ACCEPTANCE_TEST` is true)\n */\nexport default function getDynamicText<Value, Fixed = Value>({\n  value,\n  fixed,\n}: {\n  fixed: Fixed;\n  value: Value;\n}): Value | Fixed {\n  return IS_ACCEPTANCE_TEST ? fixed : value;\n}\n","import memoize from 'lodash/memoize';\n\nconst getModalPortal = memoize(() => {\n  let portal = document.getElementById('modal-portal') as HTMLDivElement;\n  if (!portal) {\n    portal = document.createElement('div');\n    portal.setAttribute('id', 'modal-portal');\n    document.body.appendChild(portal);\n  }\n\n  return portal;\n});\n\nexport default getModalPortal;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {UpdateSdkSuggestion} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  sdk: Event['sdk'];\n  suggestion: NonNullable<Event['sdkUpdates']>[0];\n  capitalized?: boolean;\n  shortStyle?: boolean;\n};\n\nfunction getSdkUpdateSuggestion({\n  sdk,\n  suggestion,\n  shortStyle = false,\n  capitalized = false,\n}: Props) {\n  function getUpdateSdkContent({newSdkVersion, sdkName}: UpdateSdkSuggestion) {\n    if (capitalized) {\n      return sdk\n        ? shortStyle\n          ? tct('Update to [sdk-name]@v[new-sdk-version]', {\n              'sdk-name': sdkName,\n              'new-sdk-version': newSdkVersion,\n            })\n          : tct(\n              'Update your SDK from [sdk-name]@v[sdk-version] to [sdk-name]@v[new-sdk-version]',\n              {\n                'sdk-name': sdkName,\n                'sdk-version': sdk.version,\n                'new-sdk-version': newSdkVersion,\n              }\n            )\n        : t('Update your SDK version');\n    }\n\n    return sdk\n      ? shortStyle\n        ? tct('update to [sdk-name]@v[new-sdk-version]', {\n            'sdk-name': sdkName,\n            'new-sdk-version': newSdkVersion,\n          })\n        : tct(\n            'update your SDK from [sdk-name]@v[sdk-version] to [sdk-name]@v[new-sdk-version]',\n            {\n              'sdk-name': sdkName,\n              'sdk-version': sdk.version,\n              'new-sdk-version': newSdkVersion,\n            }\n          )\n      : t('update your SDK version');\n  }\n\n  const getTitleData = () => {\n    switch (suggestion.type) {\n      case 'updateSdk':\n        return {\n          href: suggestion?.sdkUrl,\n          content: getUpdateSdkContent(suggestion),\n        };\n      case 'changeSdk':\n        return {\n          href: suggestion?.sdkUrl,\n          content: capitalized\n            ? tct('Migrate to [recommended-sdk-version]', {\n                'recommended-sdk-version': suggestion.newSdkName,\n              })\n            : tct('migrate to [recommended-sdk-version]', {\n                'recommended-sdk-version': suggestion.newSdkName,\n              }),\n        };\n      case 'enableIntegration':\n        return {\n          href: suggestion?.integrationUrl,\n          content: capitalized\n            ? tct('Enable the [recommended-integration-name]', {\n                'recommended-integration-name': suggestion.integrationName,\n              })\n            : tct('enable the [recommended-integration-name] integration', {\n                'recommended-integration-name': suggestion.integrationName,\n              }),\n        };\n      default:\n        return null;\n    }\n  };\n\n  const getTitle = () => {\n    const titleData = getTitleData();\n\n    if (!titleData) {\n      return null;\n    }\n\n    const {href, content} = titleData;\n\n    if (!href) {\n      return content;\n    }\n\n    return <ExternalLink href={href}>{content}</ExternalLink>;\n  };\n\n  const title = <Fragment>{getTitle()}</Fragment>;\n\n  if (!suggestion.enables.length) {\n    return title;\n  }\n\n  const alertContent = suggestion.enables\n    .map((subSuggestion, index) => {\n      const subSuggestionContent = getSdkUpdateSuggestion({\n        suggestion: subSuggestion,\n        sdk,\n        capitalized,\n      });\n      if (!subSuggestionContent) {\n        return null;\n      }\n      return <ListItem key={index}>{subSuggestionContent}</ListItem>;\n    })\n    .filter(content => !!content);\n\n  if (!alertContent.length) {\n    return title;\n  }\n\n  return (\n    <span>\n      {tct('[title] so you can:', {title})}\n      <StyledList symbol=\"bullet\">{alertContent}</StyledList>\n    </span>\n  );\n}\n\nexport default getSdkUpdateSuggestion;\n\nconst StyledList = styled(List)`\n  margin-top: ${space(1)};\n`;\n","import capitalize from 'lodash/capitalize';\nimport * as qs from 'query-string';\n\nimport {Result} from 'sentry/components/forms/selectAsyncControl';\nimport {\n  IconAsana,\n  IconBitbucket,\n  IconGeneric,\n  IconGithub,\n  IconGitlab,\n  IconJira,\n  IconVsts,\n} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport HookStore from 'sentry/stores/hookStore';\nimport {\n  AppOrProviderOrPlugin,\n  DocIntegration,\n  ExternalActorMapping,\n  ExternalActorMappingOrSuggestion,\n  Integration,\n  IntegrationFeature,\n  IntegrationInstallationStatus,\n  IntegrationType,\n  Organization,\n  PluginWithProjectList,\n  SentryApp,\n  SentryAppInstallation,\n} from 'sentry/types';\nimport {Hooks} from 'sentry/types/hooks';\nimport {\n  integrationEventMap,\n  IntegrationEventParameters,\n} from 'sentry/utils/analytics/integrations';\nimport makeAnalyticsFunction from 'sentry/utils/analytics/makeAnalyticsFunction';\n\nconst mapIntegrationParams = analyticsParams => {\n  // Reload expects integration_status even though it's not relevant for non-sentry apps\n  // Passing in a dummy value of published in those cases\n  const fullParams = {...analyticsParams};\n  if (analyticsParams.integration && analyticsParams.integration_type !== 'sentry_app') {\n    fullParams.integration_status = 'published';\n  }\n  return fullParams;\n};\n\nexport const trackIntegrationAnalytics = makeAnalyticsFunction<\n  IntegrationEventParameters,\n  {organization: Organization} // org is required\n>(integrationEventMap, {\n  mapValuesFn: mapIntegrationParams,\n});\n\n/**\n * In sentry.io the features list supports rendering plan details. If the hook\n * is not registered for rendering the features list like this simply show the\n * features as a normal list.\n */\nconst generateFeaturesList = p => (\n  <ul>\n    {p.features.map((f, i) => (\n      <li key={i}>{f.description}</li>\n    ))}\n  </ul>\n);\n\nconst generateIntegrationFeatures = p =>\n  p.children({\n    disabled: false,\n    disabledReason: null,\n    ungatedFeatures: p.features,\n    gatedFeatureGroups: [],\n  });\n\nconst defaultFeatureGateComponents: ReturnType<Hooks['integrations:feature-gates']> = {\n  IntegrationFeatures: generateIntegrationFeatures,\n  FeatureList: generateFeaturesList,\n};\n\nexport const getIntegrationFeatureGate = () => {\n  const defaultHook = () => defaultFeatureGateComponents;\n  const featureHook = HookStore.get('integrations:feature-gates')[0] || defaultHook;\n  return featureHook();\n};\n\nexport const getSentryAppInstallStatus = (install: SentryAppInstallation | undefined) => {\n  if (install) {\n    return capitalize(install.status) as IntegrationInstallationStatus;\n  }\n  return 'Not Installed';\n};\n\nexport const getCategories = (features: IntegrationFeature[]): string[] => {\n  const transform = features.map(({featureGate}) => {\n    const feature = featureGate\n      .replace(/integrations/g, '')\n      .replace(/-/g, ' ')\n      .trim();\n    switch (feature) {\n      case 'actionable notification':\n        return 'notification action';\n      case 'issue basic':\n      case 'issue link':\n      case 'issue sync':\n      case 'project management':\n        return 'issue tracking';\n      case 'commits':\n        return 'source code management';\n      case 'chat unfurl':\n        return 'chat';\n      default:\n        return feature;\n    }\n  });\n\n  return [...new Set(transform)];\n};\n\nexport const getCategoriesForIntegration = (\n  integration: AppOrProviderOrPlugin\n): string[] => {\n  if (isSentryApp(integration)) {\n    return ['internal', 'unpublished'].includes(integration.status)\n      ? [integration.status]\n      : getCategories(integration.featureData);\n  }\n  if (isPlugin(integration)) {\n    return getCategories(integration.featureDescriptions);\n  }\n  if (isDocIntegration(integration)) {\n    return getCategories(integration.features ?? []);\n  }\n  return getCategories(integration.metadata.features);\n};\n\nexport function isSentryApp(\n  integration: AppOrProviderOrPlugin\n): integration is SentryApp {\n  return !!(integration as SentryApp).uuid;\n}\n\nexport function isPlugin(\n  integration: AppOrProviderOrPlugin\n): integration is PluginWithProjectList {\n  return integration.hasOwnProperty('shortName');\n}\n\nexport function isDocIntegration(\n  integration: AppOrProviderOrPlugin\n): integration is DocIntegration {\n  return integration.hasOwnProperty('isDraft');\n}\n\nexport function isExternalActorMapping(\n  mapping: ExternalActorMappingOrSuggestion\n): mapping is ExternalActorMapping {\n  return mapping.hasOwnProperty('id');\n}\n\nexport const getIntegrationType = (\n  integration: AppOrProviderOrPlugin\n): IntegrationType => {\n  if (isSentryApp(integration)) {\n    return 'sentry_app';\n  }\n  if (isPlugin(integration)) {\n    return 'plugin';\n  }\n  if (isDocIntegration(integration)) {\n    return 'document';\n  }\n  return 'first_party';\n};\n\nexport const convertIntegrationTypeToSnakeCase = (\n  type: 'plugin' | 'firstParty' | 'sentryApp' | 'docIntegration'\n) => {\n  switch (type) {\n    case 'firstParty':\n      return 'first_party';\n    case 'sentryApp':\n      return 'sentry_app';\n    case 'docIntegration':\n      return 'document';\n    default:\n      return type;\n  }\n};\n\nexport const safeGetQsParam = (param: string) => {\n  try {\n    const query = qs.parse(window.location.search) || {};\n    return query[param];\n  } catch {\n    return undefined;\n  }\n};\n\nexport const getIntegrationIcon = (integrationType?: string, size?: string) => {\n  const iconSize = size || 'md';\n  switch (integrationType) {\n    case 'asana':\n      return <IconAsana size={iconSize} />;\n    case 'bitbucket':\n      return <IconBitbucket size={iconSize} />;\n    case 'gitlab':\n      return <IconGitlab size={iconSize} />;\n    case 'github':\n    case 'github_enterprise':\n      return <IconGithub size={iconSize} />;\n    case 'jira':\n    case 'jira_server':\n      return <IconJira size={iconSize} />;\n    case 'vsts':\n      return <IconVsts size={iconSize} />;\n    default:\n      return <IconGeneric size={iconSize} />;\n  }\n};\n\n// used for project creation and onboarding\n// determines what integration maps to what project platform\nexport const platformToIntegrationMap = {\n  'node-awslambda': 'aws_lambda',\n  'python-awslambda': 'aws_lambda',\n};\n\nexport const isSlackIntegrationUpToDate = (integrations: Integration[]): boolean => {\n  return integrations.every(\n    integration =>\n      integration.provider.key !== 'slack' || integration.scopes?.includes('commands')\n  );\n};\n\nexport const getAlertText = (integrations?: Integration[]): string | undefined => {\n  return isSlackIntegrationUpToDate(integrations || [])\n    ? undefined\n    : t(\n        'Update to the latest version of our Slack app to get access to personal and team notifications.'\n      );\n};\n\n/**\n * Uses the mapping and baseEndpoint to derive the details for the mappings request.\n * @param baseEndpoint Must have a trailing slash, since the id is appended for PUT requests!\n * @param mapping The mapping or suggestion being sent to the endpoint\n * @returns An object containing the request method (apiMethod), and final endpoint (apiEndpoint)\n */\nexport const getExternalActorEndpointDetails = (\n  baseEndpoint: string,\n  mapping?: ExternalActorMappingOrSuggestion\n): {apiEndpoint: string; apiMethod: 'POST' | 'PUT'} => {\n  const isValidMapping = mapping && isExternalActorMapping(mapping);\n  return {\n    apiMethod: isValidMapping ? 'PUT' : 'POST',\n    apiEndpoint: isValidMapping ? `${baseEndpoint}${mapping.id}/` : baseEndpoint,\n  };\n};\n\nexport const sentryNameToOption = ({id, name}): Result => ({\n  value: id,\n  label: name,\n});\n","import {ResponseMeta} from 'sentry/api';\n\nexport default function parseApiError(resp: ResponseMeta): string {\n  const {detail} = (resp && resp.responseJSON) || ({} as object);\n\n  // return immediately if string\n  if (typeof detail === 'string') {\n    return detail;\n  }\n\n  if (detail && detail.message) {\n    return detail.message;\n  }\n\n  return 'Unknown API Error';\n}\n","import {Fragment, Profiler, ReactNode, useEffect, useRef} from 'react';\nimport {captureException, captureMessage} from '@sentry/react';\nimport * as Sentry from '@sentry/react';\nimport {IdleTransaction} from '@sentry/tracing';\nimport {Transaction} from '@sentry/types';\nimport {browserPerformanceTimeOrigin, timestampWithMs} from '@sentry/utils';\n\nimport getCurrentSentryReactTransaction from './getCurrentSentryReactTransaction';\n\nconst MIN_UPDATE_SPAN_TIME = 16; // Frame boundary @ 60fps\nconst WAIT_POST_INTERACTION = 50; // Leave a small amount of time for observers and onRenderCallback to log since they come in after they occur and not during.\nconst INTERACTION_TIMEOUT = 2 * 60_000; // 2min. Wrap interactions up after this time since we don't want transactions sticking around forever.\n\n/**\n * It depends on where it is called but the way we fetch transactions can be empty despite an ongoing transaction existing.\n * This will return an interaction-type transaction held onto by a class static if one exists.\n */\nexport function getPerformanceTransaction(): IdleTransaction | Transaction | undefined {\n  return PerformanceInteraction.getTransaction() ?? getCurrentSentryReactTransaction();\n}\n\n/**\n * Callback for React Profiler https://reactjs.org/docs/profiler.html\n */\nexport function onRenderCallback(\n  id: string,\n  phase: 'mount' | 'update',\n  actualDuration: number\n) {\n  try {\n    const transaction: Transaction | undefined = getPerformanceTransaction();\n    if (transaction && actualDuration > MIN_UPDATE_SPAN_TIME) {\n      const now = timestampWithMs();\n      transaction.startChild({\n        description: `<${id}>`,\n        op: `ui.react.${phase}`,\n        startTimestamp: now - actualDuration / 1000,\n        endTimestamp: now,\n      });\n    }\n  } catch (_) {\n    // Add defensive catch since this wraps all of App\n  }\n}\n\nexport class PerformanceInteraction {\n  private static interactionTransaction: Transaction | null = null;\n  private static interactionTimeoutId: number | undefined = undefined;\n\n  static getTransaction() {\n    return PerformanceInteraction.interactionTransaction;\n  }\n\n  static startInteraction(name: string, timeout = INTERACTION_TIMEOUT, immediate = true) {\n    try {\n      const currentIdleTransaction = getCurrentSentryReactTransaction();\n      if (currentIdleTransaction) {\n        // If interaction is started while idle still exists.\n        currentIdleTransaction.setTag('finishReason', 'sentry.interactionStarted'); // Override finish reason so we can capture if this has effects on idle timeout.\n        currentIdleTransaction.finish();\n      }\n      PerformanceInteraction.finishInteraction(immediate);\n\n      const txn = Sentry?.startTransaction({\n        name: `ui.${name}`,\n        op: 'interaction',\n      });\n\n      PerformanceInteraction.interactionTransaction = txn;\n\n      // Auto interaction timeout\n      PerformanceInteraction.interactionTimeoutId = window.setTimeout(() => {\n        if (!PerformanceInteraction.interactionTransaction) {\n          return;\n        }\n        PerformanceInteraction.interactionTransaction.setTag(\n          'ui.interaction.finish',\n          'timeout'\n        );\n        PerformanceInteraction.finishInteraction(true);\n      }, timeout);\n    } catch (e) {\n      captureMessage(e);\n    }\n  }\n\n  static async finishInteraction(immediate = false) {\n    try {\n      if (!PerformanceInteraction.interactionTransaction) {\n        return;\n      }\n      clearTimeout(PerformanceInteraction.interactionTimeoutId);\n\n      if (immediate) {\n        PerformanceInteraction.interactionTransaction?.finish();\n        PerformanceInteraction.interactionTransaction = null;\n        return;\n      }\n\n      // Add a slight wait if this isn't called as the result of another transaction starting.\n      await new Promise(resolve => setTimeout(resolve, WAIT_POST_INTERACTION));\n      PerformanceInteraction.interactionTransaction?.finish();\n      PerformanceInteraction.interactionTransaction = null;\n\n      return;\n    } catch (e) {\n      captureMessage(e);\n    }\n  }\n}\n\nexport class LongTaskObserver {\n  private static observer: PerformanceObserver;\n  private static longTaskCount = 0;\n  private static lastTransaction: IdleTransaction | Transaction | undefined;\n\n  static setLongTaskTags(t: IdleTransaction | Transaction) {\n    t.setTag('ui.longTaskCount', LongTaskObserver.longTaskCount);\n    const group =\n      [\n        1, 2, 5, 10, 25, 50, 100, 150, 200, 250, 300, 400, 500, 600, 700, 800, 900, 1001,\n      ].find(n => LongTaskObserver.longTaskCount <= n) || -1;\n    t.setTag('ui.longTaskCount.grouped', group < 1001 ? `<=${group}` : `>1000`);\n  }\n\n  static startPerformanceObserver(): PerformanceObserver | null {\n    try {\n      if (LongTaskObserver.observer) {\n        LongTaskObserver.observer.disconnect();\n        try {\n          LongTaskObserver.observer.observe({entryTypes: ['longtask']});\n        } catch (_) {\n          // Safari doesn't support longtask, ignore this error.\n        }\n        return LongTaskObserver.observer;\n      }\n      if (!window.PerformanceObserver || !browserPerformanceTimeOrigin) {\n        return null;\n      }\n\n      const timeOrigin = browserPerformanceTimeOrigin / 1000;\n\n      const observer = new PerformanceObserver(function (list) {\n        try {\n          const transaction = getPerformanceTransaction();\n          const perfEntries = list.getEntries();\n\n          if (!transaction) {\n            return;\n          }\n\n          if (transaction !== LongTaskObserver.lastTransaction) {\n            // If long tasks observer is active and is called while the transaction has changed.\n            if (LongTaskObserver.lastTransaction) {\n              LongTaskObserver.setLongTaskTags(LongTaskObserver.lastTransaction);\n            }\n            LongTaskObserver.longTaskCount = 0;\n            LongTaskObserver.lastTransaction = transaction;\n          }\n\n          perfEntries.forEach(entry => {\n            const startSeconds = timeOrigin + entry.startTime / 1000;\n            LongTaskObserver.longTaskCount++;\n            transaction.startChild({\n              description: `Long Task`,\n              op: `ui.sentry.long-task`,\n              startTimestamp: startSeconds,\n              endTimestamp: startSeconds + entry.duration / 1000,\n            });\n          });\n          LongTaskObserver.setLongTaskTags(transaction);\n        } catch (_) {\n          // Defensive catch.\n        }\n      });\n\n      if (!observer || !observer.observe) {\n        return null;\n      }\n      LongTaskObserver.observer = observer;\n      try {\n        LongTaskObserver.observer.observe({entryTypes: ['longtask']});\n      } catch (_) {\n        // Safari doesn't support longtask, ignore this error.\n      }\n\n      return LongTaskObserver.observer;\n    } catch (e) {\n      captureException(e);\n      // Defensive try catch.\n    }\n    return null;\n  }\n}\n\nexport const CustomerProfiler = ({id, children}: {children: ReactNode; id: string}) => {\n  return (\n    <Profiler id={id} onRender={onRenderCallback}>\n      {children}\n    </Profiler>\n  );\n};\n\nexport const VisuallyCompleteWithData = ({\n  id,\n  hasData,\n  children,\n}: {\n  children: ReactNode;\n  hasData: boolean;\n  id: string;\n}) => {\n  const isVisuallyCompleteSet = useRef(false);\n  const isDataCompleteSet = useRef(false);\n  const longTaskCount = useRef(0);\n\n  useEffect(() => {\n    let observer;\n    try {\n      if (!window.PerformanceObserver || !browserPerformanceTimeOrigin) {\n        return () => {};\n      }\n      observer = LongTaskObserver.startPerformanceObserver();\n    } catch (_) {\n      // Defensive since this is auxiliary code.\n    }\n    return () => {\n      if (observer && observer.disconnect) {\n        observer.disconnect();\n      }\n    };\n  }, []);\n\n  const num = useRef(1);\n\n  const isVCDSet = useRef(false);\n\n  if (isVCDSet && hasData && performance && performance.mark) {\n    performance.mark(`${id}-vcsd-start`);\n    isVCDSet.current = true;\n  }\n\n  useEffect(() => {\n    try {\n      const transaction: any = getCurrentSentryReactTransaction(); // Using any to override types for private api.\n      if (!transaction) {\n        return;\n      }\n\n      if (!isVisuallyCompleteSet.current) {\n        const time = performance.now();\n        transaction.registerBeforeFinishCallback((t: Transaction, _) => {\n          // Should be called after performance entries finish callback.\n          t.setMeasurement('visuallyComplete', time, 'ms');\n        });\n        isVisuallyCompleteSet.current = true;\n      }\n      if (!isDataCompleteSet.current && hasData) {\n        isDataCompleteSet.current = true;\n\n        performance.mark(`${id}-vcsd-end-pre-timeout`);\n\n        window.setTimeout(() => {\n          if (!browserPerformanceTimeOrigin) {\n            return;\n          }\n          performance.mark(`${id}-vcsd-end`);\n          const measureName = `VCD [${id}] #${num.current}`;\n          performance.measure(\n            `VCD [${id}] #${num.current}`,\n            `${id}-vcsd-start`,\n            `${id}-vcsd-end`\n          );\n          num.current = num.current++;\n          const [measureEntry] = performance.getEntriesByName(measureName);\n          if (!measureEntry) {\n            return;\n          }\n\n          transaction.registerBeforeFinishCallback((t: Transaction) => {\n            if (!browserPerformanceTimeOrigin) {\n              return;\n            }\n            // Should be called after performance entries finish callback.\n            const lcp = (t as any)._measurements.lcp?.value;\n\n            // Adjust to be relative to transaction.startTimestamp\n            const entryStartSeconds =\n              browserPerformanceTimeOrigin / 1000 + measureEntry.startTime / 1000;\n            const time = (entryStartSeconds - transaction.startTimestamp) * 1000;\n\n            if (lcp) {\n              t.setMeasurement('lcpDiffVCD', lcp - time, 'ms');\n            }\n\n            t.setTag('longTaskCount', longTaskCount.current);\n            t.setMeasurement('visuallyCompleteData', time, 'ms');\n          });\n        }, 0);\n      }\n    } catch (_) {\n      // Defensive catch since this code is auxiliary.\n    }\n  }, [hasData, id]);\n\n  return (\n    <Profiler id={id} onRender={onRenderCallback}>\n      <Fragment>{children}</Fragment>\n    </Profiler>\n  );\n};\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import isString from 'lodash/isString';\nimport * as qs from 'query-string';\n\nimport {escapeDoubleQuotes} from 'sentry/utils';\n\n// remove leading and trailing whitespace and remove double spaces\nexport function formatQueryString(query: string): string {\n  return query.trim().replace(/\\s+/g, ' ');\n}\n\nexport function addQueryParamsToExistingUrl(\n  origUrl: string,\n  queryParams: object\n): string {\n  let url;\n\n  try {\n    url = new URL(origUrl);\n  } catch {\n    return '';\n  }\n\n  const searchEntries = url.searchParams.entries();\n  // Order the query params alphabetically.\n  // Otherwise ``queryString`` orders them randomly and it's impossible to test.\n  const params = JSON.parse(JSON.stringify(queryParams));\n  const query = {...Object.fromEntries(searchEntries), ...params};\n\n  return `${url.protocol}//${url.host}${url.pathname}?${qs.stringify(query)}`;\n}\n\ntype QueryValue = string | string[] | undefined | null;\n\n/**\n * Append a tag key:value to a query string.\n *\n * Handles spacing and quoting if necessary.\n */\nexport function appendTagCondition(\n  query: QueryValue,\n  key: string,\n  value: null | string\n): string {\n  let currentQuery = Array.isArray(query) ? query.pop() : isString(query) ? query : '';\n\n  if (typeof value === 'string' && /[:\\s\\(\\)\\\\\"]/g.test(value)) {\n    value = `\"${escapeDoubleQuotes(value)}\"`;\n  }\n  if (currentQuery) {\n    currentQuery += ` ${key}:${value}`;\n  } else {\n    currentQuery = `${key}:${value}`;\n  }\n\n  return currentQuery;\n}\n\n// This function has multiple signatures to help with typing in callers.\nexport function decodeScalar(value: QueryValue): string | undefined;\nexport function decodeScalar(value: QueryValue, fallback: string): string;\n\nexport function decodeScalar(value: QueryValue, fallback?: string): string | undefined {\n  if (!value) {\n    return fallback;\n  }\n  const unwrapped =\n    Array.isArray(value) && value.length > 0\n      ? value[0]\n      : isString(value)\n      ? value\n      : fallback;\n  return isString(unwrapped) ? unwrapped : fallback;\n}\n\nexport function decodeList(value: string[] | string | undefined | null): string[] {\n  if (!value) {\n    return [];\n  }\n  return Array.isArray(value) ? value : isString(value) ? [value] : [];\n}\n\nexport function decodeInteger(value: QueryValue, fallback?: number): number | undefined {\n  const unwrapped = decodeScalar(value);\n\n  if (unwrapped === undefined) {\n    return fallback;\n  }\n\n  const parsed = parseInt(unwrapped, 10);\n  if (isFinite(parsed)) {\n    return parsed;\n  }\n  return fallback;\n}\n\nconst queryString = {\n  decodeInteger,\n  decodeList,\n  decodeScalar,\n  formatQueryString,\n  addQueryParamsToExistingUrl,\n  appendTagCondition,\n};\n\nexport default queryString;\n","import {useEffect} from 'react';\nimport {InjectedRouter} from 'react-router';\n\nimport {useNavigate} from './useNavigate';\n\ntype Props = {\n  to: string;\n  router?: InjectedRouter;\n};\n\n/**\n * Like react-router v4+'s <Redirect to=\"path/\" />, this component allows\n * redirects to be declarative.\n */\nfunction Redirect({to, router}: Props) {\n  const navigate = useNavigate();\n\n  // Redirect on mount.\n  useEffect(() => {\n    if (router) {\n      router.replace(to);\n    } else {\n      navigate(to, {replace: true});\n    }\n  }, [navigate, router, to]);\n\n  return null;\n}\n\nexport default Redirect;\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\ntype NavigateOptions = {\n  replace?: boolean;\n  state?: any;\n};\n\nexport function useNavigate() {\n  const route = useRouteContext();\n\n  const navigator = route.router;\n  const hasMountedRef = useRef(false);\n  useEffect(() => {\n    hasMountedRef.current = true;\n  });\n  const navigate = useCallback(\n    (to: string | number, options: NavigateOptions = {}) => {\n      if (!hasMountedRef.current) {\n        throw new Error(\n          `You should call navigate() in a React.useEffect(), not when your component is first rendered.`\n        );\n      }\n      if (typeof to === 'number') {\n        return navigator.go(to);\n      }\n\n      const nextState = {\n        pathname: to,\n        state: options.state,\n      };\n\n      if (options.replace) {\n        return navigator.replace(nextState);\n      }\n\n      return navigator.push(nextState);\n    },\n    [navigator]\n  );\n  return navigate;\n}\n","type Options = {\n  /** Max number of items to keep at once */\n  limit?: number;\n};\n\n/**\n * Minimal type shape for objects that can be managed inside StreamManager.\n */\ntype IdShape = {\n  id: string;\n};\n\nclass StreamManager {\n  private idList: string[] = [];\n  private limit: number;\n  private store: any;\n\n  // TODO(dcramer): this should listen to changes on GroupStore and remove\n  // items that are removed there\n  // TODO(ts) Add better typing for store. Generally this is GroupStore, but it could be other things.\n  constructor(store: any, options: Options = {}) {\n    this.store = store;\n    this.limit = options.limit || 100;\n  }\n\n  reset() {\n    this.idList = [];\n  }\n\n  trim() {\n    if (this.limit > this.idList.length) {\n      return;\n    }\n\n    const excess = this.idList.splice(this.limit, this.idList.length - this.limit);\n    this.store.remove(excess);\n  }\n\n  push(items: IdShape | IdShape[] = []) {\n    items = Array.isArray(items) ? items : [items];\n    if (items.length === 0) {\n      return;\n    }\n\n    items = items.filter(item => item.hasOwnProperty('id'));\n    const ids = items.map(item => item.id);\n    this.idList = this.idList.filter(id => !ids.includes(id));\n    this.idList = [...this.idList, ...ids];\n\n    this.trim();\n    this.store.add(items);\n  }\n\n  getAllItems() {\n    return this.store\n      .getAllItems()\n      .slice()\n      .sort((a, b) => this.idList.indexOf(a.id) - this.idList.indexOf(b.id));\n  }\n\n  unshift(items: IdShape | IdShape[] = []) {\n    items = Array.isArray(items) ? items : [items];\n    if (items.length === 0) {\n      return;\n    }\n\n    const ids = items.map(item => item.id);\n    this.idList = this.idList.filter(id => !ids.includes(id));\n    this.idList = [...ids, ...this.idList];\n\n    this.trim();\n    this.store.add(items);\n  }\n}\n\nexport default StreamManager;\n","/**\n * Trim slug name with a preference for preserving whole words. Only cut up\n * whole words if the last remaining words are still too long. For example:\n * \"javascript-project-backend\" --> \"javascript…backend\"\n * \"my-long-sentry-project-name\" --> \"my-long…project-name\"\n * \"javascriptproject-backend\" --> \"javascriptproj…ackend\"\n */\nexport function trimSlug(slug: string, maxLength: number = 20) {\n  // Return the original slug if it's already shorter than maxLength\n  if (slug.length <= maxLength) {\n    return slug;\n  }\n\n  /**\n   * Array of words inside the slug.\n   * E.g. \"my-project-name\" becomes [\"my\", \"project\", \"name\"]\n   */\n  const words: string[] = slug.split('-');\n\n  // If the string is too long but not hyphenated, return an end-trimmed\n  // string. E.g. \"javascriptfrontendproject\" --> \"javascriptfrontendp…\"\n  if (words.length === 1) {\n    return `${slug.slice(0, maxLength - 1)}\\u2026`;\n  }\n\n  /**\n   * Returns the length (total number of letters plus hyphens in between\n   * words) of the current words array.\n   */\n  function getLength(arr: string[]): number {\n    return arr.reduce((acc, cur) => acc + cur.length + 1, 0) - 1;\n  }\n\n  // Progressively remove words in the middle until we're below maxLength,\n  // or when only two words are left\n  while (getLength(words) > maxLength && words.length > 2) {\n    words.splice(Math.floor(words.length / 2 - 0.5), 1);\n  }\n\n  // If the remaining words array satisfies the maxLength requirement,\n  // return the trimmed result.\n  if (getLength(words) <= maxLength) {\n    const divider = Math.floor(words.length / 2);\n    return `${words.slice(0, divider).join('-')}\\u2026${words.slice(divider).join('-')}`;\n  }\n\n  // If the remaining 2 words are still too long, trim those words starting\n  // from the middle.\n  const debt = getLength(words) - maxLength;\n  const toTrimFromLeftWord = Math.ceil(debt / 2);\n  const leftWordLength = Math.max(words[0].length - toTrimFromLeftWord, 3);\n  const leftWord = words[0].slice(0, leftWordLength);\n  const rightWordLength = maxLength - leftWord.length;\n  const rightWord = words[1].slice(-rightWordLength);\n\n  return `${leftWord}\\u2026${rightWord}`;\n}\n","import {useEffect, useState} from 'react';\n\n/**\n * Hook that updates when a media query result changes\n */\nexport default function useMedia(query: string) {\n  const [state, setState] = useState(\n    () => window.matchMedia && window.matchMedia(query)?.matches\n  );\n\n  useEffect(() => {\n    let mounted = true;\n    if (!window.matchMedia) {\n      return undefined;\n    }\n\n    const mql = window.matchMedia(query);\n    const onChange = () => {\n      if (!mounted) {\n        return;\n      }\n      setState(!!mql.matches);\n    };\n\n    mql.addListener(onChange);\n    setState(mql.matches);\n\n    return () => {\n      mounted = false;\n      mql.removeListener(onChange);\n    };\n  }, [query]);\n\n  if (!window.matchMedia) {\n    return false;\n  }\n\n  return state;\n}\n","import {useContext} from 'react';\n\nimport {RouteContext} from 'sentry/views/routeContext';\n\nexport function useRouteContext() {\n  const route = useContext(RouteContext);\n  if (route === null) {\n    throw new Error(`useRouteContext called outside of routes provider`);\n  }\n  return route;\n}\n","import {useEffect, useRef} from 'react';\nimport {Location} from 'history';\n\ntype Options = {\n  location: Location;\n  /**\n   * Function to stop scrolling from happening if a certan condition is met\n   */\n  disable?: (location: Location, prevLocation: Location) => boolean;\n};\n\n/**\n * Automatically scrolls to the top of the page any time the location changes.\n */\nfunction useScrollToTop({location, disable}: Options) {\n  const lastLocation = useRef(location);\n\n  // Check if we should scroll to the top any time the location changes\n  useEffect(() => {\n    const shouldDisable = disable?.(location, lastLocation.current);\n    lastLocation.current = location;\n\n    if (shouldDisable) {\n      return;\n    }\n\n    window.scrollTo(0, 0);\n  }, [location, disable]);\n}\n\nexport default useScrollToTop;\n","import {useCallback, useEffect, useState} from 'react';\nimport assign from 'lodash/assign';\n\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport TagStore from 'sentry/stores/tagStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {TagCollection, Team, User} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\nexport interface WithIssueTagsProps {\n  tags: TagCollection;\n}\n\nconst uuidPattern = /[0-9a-f]{32}$/;\nconst getUsername = ({isManaged, username, email}: User) => {\n  // Users created via SAML receive unique UUID usernames. Use\n  // their email in these cases, instead.\n  if (username && uuidPattern.test(username)) {\n    return email;\n  }\n  return !isManaged && username ? username : email;\n};\n\ntype WrappedComponentState = {\n  tags: TagCollection;\n  teams: Team[];\n  users: User[];\n};\n/**\n * HOC for getting tags and many useful issue attributes as 'tags' for use\n * in autocomplete selectors or condition builders.\n */\nfunction withIssueTags<Props extends WithIssueTagsProps>(\n  WrappedComponent: React.ComponentType<Props>\n) {\n  function ComponentWithTags(props: Omit<Props, keyof WithIssueTagsProps>) {\n    const [state, setState] = useState<WrappedComponentState>({\n      tags: assign(\n        {},\n        TagStore.getAllTags(),\n        TagStore.getIssueAttributes(),\n        TagStore.getBuiltInTags()\n      ),\n      users: MemberListStore.getAll(),\n      teams: TeamStore.getAll(),\n    });\n\n    const setAssigned = useCallback(\n      (newState: Partial<WrappedComponentState>) => {\n        setState(oldState => {\n          const usernames: string[] = newState.users\n            ? newState.users.map(getUsername)\n            : oldState.users.map(getUsername);\n\n          const teamnames: string[] = (newState.teams ? newState.teams : oldState.teams)\n            .filter(team => team.isMember)\n            .map(team => `#${team.slug}`);\n\n          const allAssigned = ['[me, none]', ...usernames, ...teamnames];\n          allAssigned.unshift('me');\n          usernames.unshift('me');\n\n          return {\n            ...oldState,\n            ...newState,\n            tags: {\n              ...oldState.tags,\n              ...newState.tags,\n              assigned: {\n                ...(newState.tags?.assigned ?? oldState.tags?.assigned ?? {}),\n                values: allAssigned,\n              },\n              bookmarks: {\n                ...(newState.tags?.bookmarks ?? oldState.tags?.bookmarks ?? {}),\n                values: usernames,\n              },\n              assigned_or_suggested: {\n                ...(newState.tags?.assigned_or_suggested ??\n                  oldState.tags.assigned_or_suggested ??\n                  {}),\n                values: allAssigned,\n              },\n            },\n          };\n        });\n      },\n      [state]\n    );\n\n    // Listen to team store updates and cleanup listener on unmount\n    useEffect(() => {\n      const unsubscribeTeam = TeamStore.listen(() => {\n        setAssigned({teams: TeamStore.getAll()});\n      }, undefined);\n\n      return () => unsubscribeTeam();\n    }, []);\n\n    // Listen to tag store updates and cleanup listener on unmount\n    useEffect(() => {\n      const unsubscribeTags = TagStore.listen((storeTags: TagCollection) => {\n        const tags = assign(\n          {},\n          storeTags,\n          TagStore.getIssueAttributes(),\n          TagStore.getBuiltInTags()\n        );\n\n        setAssigned({tags});\n      }, undefined);\n\n      return () => unsubscribeTags();\n    }, []);\n\n    // Listen to member store updates and cleanup listener on unmount\n    useEffect(() => {\n      const unsubscribeMembers = MemberListStore.listen((users: User[]) => {\n        setAssigned({users});\n      }, undefined);\n\n      return () => unsubscribeMembers();\n    }, []);\n\n    return <WrappedComponent {...(props as Props)} tags={state.tags} />;\n  }\n  ComponentWithTags.displayName = `withIssueTags(${getDisplayName(WrappedComponent)})`;\n  return ComponentWithTags;\n}\n\nexport default withIssueTags;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {ProjectSdkUpdates} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype InternalDefinition = {\n  /**\n   * Org slug mapping to SDK updates\n   */\n  orgSdkUpdates: Map<string, ProjectSdkUpdates[]>;\n};\n\ninterface SdkUpdatesStoreDefinition extends StoreDefinition, InternalDefinition {\n  getUpdates(orgSlug: string): ProjectSdkUpdates[] | undefined;\n  isSdkUpdatesLoaded(orgSlug: string): boolean;\n  loadSuccess(orgSlug: string, data: ProjectSdkUpdates[]): void;\n}\n\nconst storeConfig: SdkUpdatesStoreDefinition = {\n  orgSdkUpdates: new Map(),\n  unsubscribeListeners: [],\n\n  loadSuccess(orgSlug, data) {\n    this.orgSdkUpdates.set(orgSlug, data);\n    this.trigger(this.orgSdkUpdates);\n  },\n\n  getUpdates(orgSlug) {\n    return this.orgSdkUpdates.get(orgSlug);\n  },\n\n  isSdkUpdatesLoaded(orgSlug) {\n    return this.orgSdkUpdates.has(orgSlug);\n  },\n};\n\nconst SdkUpdatesStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SdkUpdatesStore;\n","import {Component} from 'react';\n\nimport {loadSdkUpdates} from 'sentry/actionCreators/sdkUpdates';\nimport {Client} from 'sentry/api';\nimport SdkUpdatesStore from 'sentry/stores/sdkUpdatesStore';\nimport {Organization, ProjectSdkUpdates} from 'sentry/types';\n\nimport withApi from './withApi';\nimport withOrganization from './withOrganization';\n\ntype InjectedProps = {\n  /**\n   * List of (Project + SDK)s and potential update suggestions for each.\n   *\n   * Null when updates have not been loaded for this org.\n   */\n  sdkUpdates?: ProjectSdkUpdates[] | null;\n};\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  /**\n   * Project IDs to limit the updates query to\n   */\n  projectIds?: string[];\n};\n\ntype State = {\n  sdkUpdates: ProjectSdkUpdates[] | null;\n};\n\nfunction withSdkUpdates<P extends InjectedProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithProjectSdkSuggestions extends Component<\n    Omit<P, keyof InjectedProps> & Props,\n    State\n  > {\n    state: State = {sdkUpdates: []};\n\n    componentDidMount() {\n      const orgSlug = this.props.organization.slug;\n      const updates = SdkUpdatesStore.getUpdates(orgSlug);\n\n      // Load SdkUpdates\n      if (updates !== undefined) {\n        this.onSdkUpdatesUpdate();\n        return;\n      }\n\n      loadSdkUpdates(this.props.api, orgSlug);\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = SdkUpdatesStore.listen(() => this.onSdkUpdatesUpdate(), undefined);\n\n    onSdkUpdatesUpdate() {\n      const sdkUpdates = SdkUpdatesStore.getUpdates(this.props.organization.slug) ?? null;\n      this.setState({sdkUpdates});\n    }\n\n    render() {\n      // TODO(ts) This unknown cast isn't great but Typescript complains about arbitrary\n      // types being possible. I think this is related to the additional HoC wrappers causing type data to\n      // be lost.\n      return (\n        <WrappedComponent\n          {...(this.props as unknown as P)}\n          sdkUpdates={this.state.sdkUpdates}\n        />\n      );\n    }\n  }\n\n  return withOrganization(withApi(WithProjectSdkSuggestions));\n}\n\nexport default withSdkUpdates;\n","import {Client} from 'sentry/api';\nimport SdkUpdatesStore from 'sentry/stores/sdkUpdatesStore';\n\n/**\n * Load SDK Updates for a specific organization\n */\nexport async function loadSdkUpdates(api: Client, orgSlug: string) {\n  const updates = await api.requestPromise(`/organizations/${orgSlug}/sdk-updates/`);\n  SdkUpdatesStore.loadSuccess(orgSlug, updates);\n}\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport AlertStore from 'sentry/stores/alertStore';\n\ntype Props = {\n  alert: ReturnType<typeof AlertStore['getState']>[number];\n  system: boolean;\n};\n\nconst AlertMessage = ({alert, system}: Props) => {\n  const handleClose = () => AlertStore.closeAlert(alert);\n\n  const {url, message, type, opaque} = alert;\n\n  return (\n    <StyledAlert\n      type={type}\n      showIcon\n      system={system}\n      opaque={opaque}\n      trailingItems={\n        <StyledCloseButton\n          icon={<IconClose size=\"sm\" />}\n          aria-label={t('Close')}\n          onClick={alert.onClose ?? handleClose}\n          size=\"zero\"\n          borderless\n        />\n      }\n    >\n      {url ? <ExternalLink href={url}>{message}</ExternalLink> : message}\n    </StyledAlert>\n  );\n};\n\nexport default AlertMessage;\n\nconst StyledAlert = styled(Alert)`\n  margin: 0;\n`;\n\nconst StyledCloseButton = styled(Button)`\n  background-color: transparent;\n  transition: opacity 0.1s linear;\n\n  &:hover,\n  &:focus {\n    background-color: transparent;\n    opacity: 1;\n  }\n`;\n","import AlertStore from 'sentry/stores/alertStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\n\nimport AlertMessage from './alertMessage';\n\ntype Props = {className?: string};\n\nfunction SystemAlerts(props: Props) {\n  const alerts = useLegacyStore(AlertStore);\n\n  return (\n    <div {...props}>\n      {alerts.map((alert, index) => (\n        <AlertMessage alert={alert} key={`${alert.id}-${index}`} system />\n      ))}\n    </div>\n  );\n}\n\nexport default SystemAlerts;\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport Link from 'sentry/components/links/link';\nimport Panel from 'sentry/components/panels/panel';\nimport {IconSentry} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\nconst BODY_CLASSES = ['narrow'];\n\nfunction Layout({children}) {\n  useEffect(() => {\n    document.body.classList.add(...BODY_CLASSES);\n    return () => document.body.classList.remove(...BODY_CLASSES);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <AuthContainer>\n        <div className=\"pattern-bg\" />\n        <AuthPanel>\n          <AuthSidebar>\n            <SentryButton />\n          </AuthSidebar>\n          <div>{children}</div>\n        </AuthPanel>\n      </AuthContainer>\n    </div>\n  );\n}\n\nconst AuthContainer = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  padding-top: 5vh;\n`;\n\nconst AuthPanel = styled(Panel)`\n  min-width: 550px;\n  display: inline-grid;\n  grid-template-columns: 60px 1fr;\n`;\n\nconst AuthSidebar = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: ${space(3)};\n  border-radius: ${p => p.theme.borderRadius} 0 0 ${p => p.theme.borderRadius};\n  margin: -1px;\n  margin-right: 0;\n  background: #564f64;\n  background-image: linear-gradient(\n    -180deg,\n    rgba(52, 44, 62, 0) 0%,\n    rgba(52, 44, 62, 0.5) 100%\n  );\n`;\n\nconst SentryButton = styled(\n  (p: Omit<React.ComponentPropsWithoutRef<typeof Link>, 'to'>) => (\n    <Link to=\"/\" {...p}>\n      <IconSentry size=\"24px\" />\n    </Link>\n  )\n)`\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    color: #fff;\n  }\n`;\n\nexport default Layout;\n","import {Layout} from 'react-grid-layout';\n\nimport {User} from 'sentry/types';\n\n// Max widgets per dashboard we are currently willing\n// to allow to limit the load on snuba from the\n// parallel requests. Somewhat arbitrary\n// limit that can be changed if necessary.\nexport const MAX_WIDGETS = 30;\n\nexport const DEFAULT_TABLE_LIMIT = 5;\n\nexport enum DisplayType {\n  AREA = 'area',\n  BAR = 'bar',\n  LINE = 'line',\n  TABLE = 'table',\n  WORLD_MAP = 'world_map',\n  BIG_NUMBER = 'big_number',\n  TOP_N = 'top_n',\n}\n\nexport enum WidgetType {\n  DISCOVER = 'discover',\n  ISSUE = 'issue',\n  RELEASE = 'metrics', // TODO(dashboards): Rename this on backend and then change here\n}\n\nexport type WidgetQuery = {\n  aggregates: string[];\n  columns: string[];\n  conditions: string;\n  name: string;\n  orderby: string;\n  // Table column alias.\n  // We may want to have alias for y-axis in the future too\n  fieldAliases?: string[];\n  // Fields is replaced with aggregates + columns. It\n  // is currently used to track column order on table\n  // widgets.\n  fields?: string[];\n};\n\nexport type Widget = {\n  displayType: DisplayType;\n  interval: string;\n  queries: WidgetQuery[];\n  title: string;\n  id?: string;\n  layout?: WidgetLayout | null;\n  // Used to define 'topEvents' when fetching time-series data for a widget\n  limit?: number;\n  tempId?: string;\n  widgetType?: WidgetType;\n};\n\n// We store an explicit set of keys in the backend now\nexport type WidgetLayout = Pick<Layout, 'h' | 'w' | 'x' | 'y'> & {\n  minH: number;\n};\n\nexport type WidgetPreview = {\n  displayType: DisplayType;\n  layout: WidgetLayout | null;\n};\n\n/**\n * The response shape from dashboard list endpoint\n */\nexport type DashboardListItem = {\n  id: string;\n  title: string;\n  widgetDisplay: DisplayType[];\n  widgetPreview: WidgetPreview[];\n  createdBy?: User;\n  dateCreated?: string;\n};\n\n/**\n * Saved dashboard with widgets\n */\nexport type DashboardDetails = {\n  dateCreated: string;\n  id: string;\n  title: string;\n  widgets: Widget[];\n  createdBy?: User;\n};\n\nexport enum DashboardState {\n  VIEW = 'view',\n  EDIT = 'edit',\n  CREATE = 'create',\n  PENDING_DELETE = 'pending_delete',\n  PREVIEW = 'preview',\n}\n\n// where we launch the dashboard widget from\nexport enum DashboardWidgetSource {\n  DISCOVERV2 = 'discoverv2',\n  DASHBOARDS = 'dashboards',\n  LIBRARY = 'library',\n  ISSUE_DETAILS = 'issueDetail',\n}\n","import {t} from 'sentry/locale';\nimport {NewQuery} from 'sentry/types';\n\nexport const DEFAULT_EVENT_VIEW: Readonly<NewQuery> = {\n  id: undefined,\n  name: t('All Events'),\n  query: '',\n  projects: [],\n  fields: ['title', 'event.type', 'project', 'user.display', 'timestamp'],\n  orderby: '-timestamp',\n  version: 2,\n  range: '24h',\n};\n\nexport const TRANSACTION_VIEWS: Readonly<Array<NewQuery>> = [\n  {\n    id: undefined,\n    name: t('Transactions by Volume'),\n    fields: [\n      'transaction',\n      'project',\n      'count()',\n      'avg(transaction.duration)',\n      'p75()',\n      'p95()',\n    ],\n    orderby: '-count',\n    query: 'event.type:transaction',\n    projects: [],\n    version: 2,\n    range: '24h',\n  },\n];\n\nexport const WEB_VITALS_VIEWS: Readonly<Array<NewQuery>> = [\n  {\n    id: undefined,\n    name: t('Web Vitals'),\n    fields: [\n      'transaction',\n      'epm()',\n      'p75(measurements.fp)',\n      'p75(measurements.fcp)',\n      'p75(measurements.lcp)',\n      'p75(measurements.fid)',\n      'p75(measurements.cls)',\n    ],\n    orderby: '-epm',\n    query: 'event.type:transaction transaction.op:pageload',\n    projects: [],\n    version: 2,\n    range: '24h',\n    yAxis: ['epm()'],\n  },\n];\n\nexport const ALL_VIEWS: Readonly<Array<NewQuery>> = [\n  DEFAULT_EVENT_VIEW,\n  {\n    id: undefined,\n    name: t('Errors by Title'),\n    fields: ['title', 'count()', 'count_unique(user)', 'project'],\n    orderby: '-count',\n    query: 'event.type:error',\n    projects: [],\n    version: 2,\n    range: '24h',\n    display: 'top5',\n  },\n  {\n    id: undefined,\n    name: t('Errors by URL'),\n    fields: ['url', 'count()', 'count_unique(issue)'],\n    orderby: '-count',\n    query: 'event.type:error has:url',\n    projects: [],\n    version: 2,\n    range: '24h',\n    display: 'top5',\n  },\n];\n","import {\n  createSavedQuery,\n  deleteSavedQuery,\n  updateSavedQuery,\n} from 'sentry/actionCreators/discoverSavedQueries';\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {NewQuery, Organization, SavedQuery} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {DisplayModes} from 'sentry/utils/discover/types';\nimport {DisplayType} from 'sentry/views/dashboardsV2/types';\n\nexport function handleCreateQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView,\n  yAxis: string[],\n  // True if this is a brand new query being saved\n  // False if this is a modification from a saved query\n  isNewQuery: boolean = true\n): Promise<SavedQuery> {\n  const payload = eventView.toNewQuery();\n  payload.yAxis = yAxis;\n\n  trackAnalyticsEvent({\n    ...getAnalyticsCreateEventKeyName(isNewQuery, 'request'),\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = createSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then((savedQuery: SavedQuery) => {\n      addSuccessMessage(t('Query saved'));\n\n      trackAnalyticsEvent({\n        ...getAnalyticsCreateEventKeyName(isNewQuery, 'success'),\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n\n      return savedQuery;\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not saved'));\n\n      trackAnalyticsEvent({\n        ...getAnalyticsCreateEventKeyName(isNewQuery, 'failed'),\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error:\n          (err && err.message) ||\n          `Could not save a ${isNewQuery ? 'new' : 'existing'} query`,\n      });\n    });\n\n  return promise;\n}\n\nconst EVENT_NAME_EXISTING_MAP = {\n  request: 'Discoverv2: Request to save a saved query as a new query',\n  success: 'Discoverv2: Successfully saved a saved query as a new query',\n  failed: 'Discoverv2: Failed to save a saved query as a new query',\n};\nconst EVENT_NAME_NEW_MAP = {\n  request: 'Discoverv2: Request to save a new query',\n  success: 'Discoverv2: Successfully saved a new query',\n  failed: 'Discoverv2: Failed to save a new query',\n};\n\nexport function handleUpdateQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView,\n  yAxis: string[]\n): Promise<SavedQuery> {\n  const payload = eventView.toNewQuery();\n  payload.yAxis = yAxis;\n\n  if (!eventView.name) {\n    addErrorMessage(t('Please name your query'));\n    return Promise.reject();\n  }\n\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.update_query_request',\n    eventName: 'Discoverv2: Request to update a saved query',\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = updateSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then((savedQuery: SavedQuery) => {\n      addSuccessMessage(t('Query updated'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_success',\n        eventName: 'Discoverv2: Successfully updated a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n      // NOTE: there is no need to convert _saved into an EventView and push it\n      //       to the browser history, since this.props.eventView already\n      //       derives from location.\n\n      return savedQuery;\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not updated'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_failed',\n        eventName: 'Discoverv2: Failed to update a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error: (err && err.message) || 'Failed to update a query',\n      });\n    });\n\n  return promise;\n}\n\n/**\n * Essentially the same as handleUpdateQuery, but specifically for changing the\n * name of the query\n */\nexport function handleUpdateQueryName(\n  api: Client,\n  organization: Organization,\n  eventView: EventView\n) {\n  const payload = eventView.toNewQuery();\n\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.update_query_name_request',\n    eventName: \"Discoverv2: Request to update a saved query's name\",\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(payload),\n  });\n\n  const promise = updateSavedQuery(api, organization.slug, payload);\n\n  promise\n    .then(_saved => {\n      addSuccessMessage(t('Query name saved'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_name_success',\n        eventName: \"Discoverv2: Successfully updated a saved query's name\",\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n      });\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query name not saved'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.update_query_failed',\n        eventName: \"Discoverv2: Failed to update a saved query's name\",\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(payload),\n        error: (err && err.message) || 'Failed to update a query name',\n      });\n    });\n\n  return promise;\n}\n\nexport function handleDeleteQuery(\n  api: Client,\n  organization: Organization,\n  eventView: EventView\n): Promise<void> {\n  trackAnalyticsEvent({\n    eventKey: 'discover_v2.delete_query_request',\n    eventName: 'Discoverv2: Request to delete a saved query',\n    organization_id: parseInt(organization.id, 10),\n    ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n  });\n\n  const promise = deleteSavedQuery(api, organization.slug, eventView.id!);\n\n  promise\n    .then(() => {\n      addSuccessMessage(t('Query deleted'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.delete_query_success',\n        eventName: 'Discoverv2: Successfully deleted a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n      });\n    })\n    .catch((err: Error) => {\n      addErrorMessage(t('Query not deleted'));\n\n      trackAnalyticsEvent({\n        eventKey: 'discover_v2.delete_query_failed',\n        eventName: 'Discoverv2: Failed to delete a saved query',\n        organization_id: parseInt(organization.id, 10),\n        ...extractAnalyticsQueryFields(eventView.toNewQuery()),\n        error: (err && err.message) || 'Failed to delete query',\n      });\n    });\n\n  return promise;\n}\n\nexport function getAnalyticsCreateEventKeyName(\n  // True if this is a brand new query being saved\n  // False if this is a modification from a saved query\n  isNewQuery: boolean,\n  type: 'request' | 'success' | 'failed'\n) {\n  const eventKey = isNewQuery\n    ? 'discover_v2.save_new_query_' + type\n    : 'discover_v2.save_existing_query_' + type;\n\n  const eventName = isNewQuery ? EVENT_NAME_NEW_MAP[type] : EVENT_NAME_EXISTING_MAP[type];\n\n  return {\n    eventKey,\n    eventName,\n  };\n}\n\n/**\n * Takes in a DiscoverV2 NewQuery object and returns a Partial containing\n * the desired fields to populate into reload analytics\n */\nexport function extractAnalyticsQueryFields(payload: NewQuery): Partial<NewQuery> {\n  const {projects, fields, query} = payload;\n  return {\n    projects,\n    fields,\n    query,\n  };\n}\n\nexport function displayModeToDisplayType(displayMode: DisplayModes): DisplayType {\n  switch (displayMode) {\n    case DisplayModes.BAR:\n      return DisplayType.BAR;\n    case DisplayModes.WORLDMAP:\n      return DisplayType.WORLD_MAP;\n    case DisplayModes.TOP5:\n      return DisplayType.TOP_N;\n    default:\n      return DisplayType.LINE;\n  }\n}\n","import ActionLink from 'sentry/components/actions/actionLink';\nimport {IconIssues} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  onUpdate: (data: {inbox: boolean}) => void;\n  disabled?: boolean;\n};\n\nfunction ReviewAction({disabled, onUpdate}: Props) {\n  return (\n    <ActionLink\n      type=\"button\"\n      disabled={disabled}\n      onAction={() => onUpdate({inbox: false})}\n      title={t('Mark Reviewed')}\n      icon={<IconIssues size=\"xs\" />}\n    >\n      {t('Mark Reviewed')}\n    </ActionLink>\n  );\n}\n\nexport default ReviewAction;\n","import {Component, Fragment, lazy, Suspense} from 'react';\nimport styled from '@emotion/styled';\n\nimport congratsRobotsPlaceholder from 'sentry-images/spot/congrats-robots-placeholder.jpg';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nconst Placeholder = () => (\n  <PlaceholderImage\n    alt={t('Congrats, you have no unresolved issues')}\n    src={congratsRobotsPlaceholder}\n  />\n);\n\nconst Message = ({\n  title,\n  subtitle,\n}: {\n  subtitle: React.ReactNode;\n  title: React.ReactNode;\n}) => (\n  <Fragment>\n    <EmptyMessage>{title}</EmptyMessage>\n    <p>{subtitle}</p>\n  </Fragment>\n);\n\nconst CongratsRobotsVideo = lazy(() => import('./congratsRobots'));\n\ntype State = {hasError: boolean};\n\n/**\n * Error boundary for loading the robots video.\n * This can error because of the file size of the video\n *\n * Silently ignore the error, this isn't really important enough to\n * capture in Sentry\n */\nclass ErrorBoundary extends Component<{children: React.ReactNode}, State> {\n  static getDerivedStateFromError(): State {\n    return {\n      hasError: true,\n    };\n  }\n\n  state: State = {\n    hasError: false,\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <Placeholder />;\n    }\n\n    return this.props.children;\n  }\n}\n\nconst NoUnresolvedIssues = ({\n  title,\n  subtitle,\n}: {\n  subtitle: React.ReactNode;\n  title: React.ReactNode;\n}) => (\n  <Wrapper>\n    <ErrorBoundary>\n      <Suspense fallback={<Placeholder />}>\n        <CongratsRobotsVideo />\n      </Suspense>\n    </ErrorBoundary>\n    <Message title={title} subtitle={subtitle} />\n  </Wrapper>\n);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  padding: ${space(4)} ${space(4)};\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  color: ${p => p.theme.subText};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    font-size: ${p => p.theme.fontSizeMedium};\n  }\n`;\n\nconst EmptyMessage = styled('div')`\n  font-weight: 600;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    font-size: ${p => p.theme.fontSizeExtraLarge};\n  }\n`;\n\nconst PlaceholderImage = styled('img')`\n  max-height: 320px; /* This should be same height as video in CongratsRobots */\n`;\n\nexport default NoUnresolvedIssues;\n","import {Component, lazy, Suspense} from 'react';\n\nimport {Client} from 'sentry/api';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Placeholder from 'sentry/components/placeholder';\nimport {DEFAULT_QUERY} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {Query} from 'sentry/views/issueList/utils';\n\nimport NoUnresolvedIssues from './noUnresolvedIssues';\n\ntype Props = {\n  api: Client;\n  groupIds: string[];\n  organization: Organization;\n  query: string;\n  emptyMessage?: React.ReactNode;\n  selectedProjectIds?: number[];\n};\n\ntype State = {\n  fetchingSentFirstEvent: boolean;\n  firstEventProjects?: Project[] | null;\n  sentFirstEvent?: boolean;\n};\n\n/**\n * Component which is rendered when no groups/issues were found. This could\n * either be caused by having no first events, having resolved all issues, or\n * having no issues be returned from a query. This component will conditionally\n * render one of those states.\n */\nclass NoGroupsHandler extends Component<Props, State> {\n  state: State = {\n    fetchingSentFirstEvent: true,\n    sentFirstEvent: false,\n    firstEventProjects: null,\n  };\n\n  componentDidMount() {\n    this.fetchSentFirstEvent();\n    this._isMounted = true;\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  /**\n   * This is a bit hacky, but this is causing flakiness in frontend tests\n   * `issueList/overview` is being unmounted during tests before the requests\n   * in `this.fetchSentFirstEvent` are completed and causing this React warning:\n   *\n   * Warning: Can't perform a React state update on an unmounted component.\n   * This is a no-op, but it indicates a memory leak in your application.\n   * To fix, cancel all subscriptions and asynchronous tasks in the\n   * componentWillUnmount method.\n   *\n   * This is something to revisit if we refactor API client\n   */\n  private _isMounted: boolean = false;\n\n  async fetchSentFirstEvent() {\n    this.setState({\n      fetchingSentFirstEvent: true,\n    });\n\n    const {organization, selectedProjectIds, api} = this.props;\n    let sentFirstEvent = false;\n    let projects = [];\n\n    // If no projects are selected, then we must check every project the user is a\n    // member of and make sure there are no first events for all of the projects\n    let firstEventQuery = {};\n    const projectsQuery: {per_page: number; query?: string} = {per_page: 1};\n\n    if (!selectedProjectIds || !selectedProjectIds.length) {\n      firstEventQuery = {is_member: true};\n    } else {\n      firstEventQuery = {project: selectedProjectIds};\n      projectsQuery.query = selectedProjectIds.map(id => `id:${id}`).join(' ');\n    }\n\n    [{sentFirstEvent}, projects] = await Promise.all([\n      // checks to see if selection has sent a first event\n      api.requestPromise(`/organizations/${organization.slug}/sent-first-event/`, {\n        query: firstEventQuery,\n      }),\n      // retrieves a single project to feed to the ErrorRobot from renderStreamBody\n      api.requestPromise(`/organizations/${organization.slug}/projects/`, {\n        query: projectsQuery,\n      }),\n    ]);\n\n    // See comment where this property is initialized\n    // FIXME\n    if (!this._isMounted) {\n      return;\n    }\n\n    this.setState({\n      fetchingSentFirstEvent: false,\n      sentFirstEvent,\n      firstEventProjects: projects,\n    });\n  }\n\n  renderLoading() {\n    return <LoadingIndicator />;\n  }\n\n  renderAwaitingEvents(projects: State['firstEventProjects']) {\n    const {organization, groupIds} = this.props;\n\n    const project = projects && projects.length > 0 ? projects[0] : undefined;\n    const sampleIssueId = groupIds.length > 0 ? groupIds[0] : undefined;\n\n    const ErrorRobot = lazy(() => import('sentry/components/errorRobot'));\n\n    return (\n      <Suspense fallback={<Placeholder height=\"260px\" />}>\n        <ErrorRobot\n          org={organization}\n          project={project}\n          sampleIssueId={sampleIssueId}\n          gradient\n        />\n      </Suspense>\n    );\n  }\n\n  renderEmpty() {\n    const {emptyMessage} = this.props;\n    return (\n      <EmptyStateWarning>\n        <p>{emptyMessage ?? t('Sorry, no issues match your filters.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  render() {\n    const {fetchingSentFirstEvent, sentFirstEvent, firstEventProjects} = this.state;\n    const {query} = this.props;\n\n    if (fetchingSentFirstEvent) {\n      return this.renderLoading();\n    }\n    if (!sentFirstEvent) {\n      return this.renderAwaitingEvents(firstEventProjects);\n    }\n    if (query === DEFAULT_QUERY) {\n      return (\n        <NoUnresolvedIssues\n          title={t(\"We couldn't find any issues that matched your filters.\")}\n          subtitle={t('Get out there and write some broken code!')}\n        />\n      );\n    }\n\n    if (query === Query.FOR_REVIEW) {\n      return (\n        <NoUnresolvedIssues\n          title={t('Well, would you look at that.')}\n          subtitle={t(\n            'No more issues to review. Better get back out there and write some broken code.'\n          )}\n        />\n      );\n    }\n\n    return this.renderEmpty();\n  }\n}\n\nexport default NoGroupsHandler;\n","import {Component} from 'react';\n\nimport {fetchRecentSearches} from 'sentry/actionCreators/savedSearches';\nimport {Client} from 'sentry/api';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {\n  makePinSearchAction,\n  makeSaveSearchAction,\n  makeSearchBuilderAction,\n} from 'sentry/components/smartSearchBar/actions';\nimport {ItemType, SearchItem} from 'sentry/components/smartSearchBar/types';\nimport {t} from 'sentry/locale';\nimport {Organization, SavedSearch, SavedSearchType, Tag} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport {TagValueLoader} from './types';\n\nconst SEARCH_ITEMS: SearchItem[] = [\n  {\n    title: t('Tag'),\n    desc: 'browser:\"Chrome 34\", has:browser',\n    value: 'browser:',\n    type: ItemType.DEFAULT,\n  },\n  {\n    title: t('Status'),\n    desc: 'is:resolved, unresolved, ignored, assigned, unassigned',\n    value: 'is:',\n    type: ItemType.DEFAULT,\n  },\n  {\n    title: t('Time or Count'),\n    desc: 'firstSeen, lastSeen, event.timestamp, timesSeen',\n    value: 'firstSeen:',\n    type: ItemType.DEFAULT,\n  },\n  {\n    title: t('Assigned'),\n    desc: 'assigned, assigned_or_suggested:[me|[me, none]|user@example.com|#team-example]',\n    value: 'assigned:',\n    type: ItemType.DEFAULT,\n  },\n  {\n    title: t('Bookmarked By'),\n    desc: 'bookmarks:[me|user@example.com]',\n    value: 'bookmarks:',\n    type: ItemType.DEFAULT,\n  },\n];\n\ntype Props = React.ComponentProps<typeof SmartSearchBar> & {\n  api: Client;\n  onSidebarToggle: (e: React.MouseEvent) => void;\n  organization: Organization;\n  sort: string;\n  tagValueLoader: TagValueLoader;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  projectIds?: string[];\n  savedSearch?: SavedSearch;\n};\n\ntype State = {\n  defaultSearchItems: [SearchItem[], SearchItem[]];\n  recentSearches: string[];\n};\n\nclass IssueListSearchBar extends Component<Props, State> {\n  state: State = {\n    defaultSearchItems: [SEARCH_ITEMS, []],\n    recentSearches: [],\n  };\n\n  componentDidMount() {\n    // Ideally, we would fetch on demand (e.g. when input gets focus)\n    // but `<SmartSearchBar>` is a bit complicated and this is the easiest route\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.props.api.clear();\n    const resp = await this.getRecentSearches();\n\n    this.setState({\n      defaultSearchItems: [\n        SEARCH_ITEMS,\n        resp\n          ? resp.map(query => ({\n              desc: query,\n              value: query,\n              type: ItemType.RECENT_SEARCH,\n            }))\n          : [],\n      ],\n      recentSearches: resp,\n    });\n  };\n\n  /**\n   * @returns array of tag values that substring match `query`\n   */\n  getTagValues = async (tag: Tag, query: string): Promise<string[]> => {\n    const {tagValueLoader} = this.props;\n\n    const values = await tagValueLoader(tag.key, query);\n    return values.map(({value}) => value);\n  };\n\n  getRecentSearches = async (): Promise<string[]> => {\n    const {api, organization} = this.props;\n    const recent = await fetchRecentSearches(\n      api,\n      organization.slug,\n      SavedSearchType.ISSUE\n    );\n    return recent?.map(({query}) => query) ?? [];\n  };\n\n  handleSavedRecentSearch = () => {\n    // Reset recent searches\n    this.fetchData();\n  };\n\n  render() {\n    const {tagValueLoader: _, savedSearch, sort, onSidebarToggle, ...props} = this.props;\n\n    const pinnedSearch = savedSearch?.isPinned ? savedSearch : undefined;\n\n    return (\n      <SmartSearchBar\n        searchSource=\"main_search\"\n        hasRecentSearches\n        maxSearchItems={5}\n        savedSearchType={SavedSearchType.ISSUE}\n        onGetTagValues={this.getTagValues}\n        defaultSearchItems={this.state.defaultSearchItems}\n        onSavedRecentSearch={this.handleSavedRecentSearch}\n        actionBarItems={[\n          makePinSearchAction({sort, pinnedSearch}),\n          makeSaveSearchAction({sort}),\n          makeSearchBuilderAction({onSidebarToggle}),\n        ]}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default withApi(withOrganization(IssueListSearchBar));\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport PluginIcon from 'sentry/plugins/components/pluginIcon';\nimport space from 'sentry/styles/space';\n\ntype Integration = {\n  description: string;\n  name: string;\n  slug: string;\n};\n// TODO: We might want to put this on the backend eventually for centralized source of truth.\nexport const onboardingIntegrations: Integration[] = [\n  {\n    slug: 'slack',\n    name: 'Slack',\n    description: 'Triage, resolve, and ignore Sentry issues directly from Slack.',\n  },\n  {\n    slug: 'github',\n    name: 'GitHub',\n    description: 'Automate issue assignment and release tracking with Github.',\n  },\n  {\n    slug: 'gitlab',\n    name: 'GitLab',\n    description: 'Iterate more efficiently with Sentry in your GitLab flow.',\n  },\n  {\n    slug: 'jira',\n    name: 'Jira',\n    description: 'Connect errors from Sentry with your Jira issues.',\n  },\n  {\n    slug: 'bitbucket',\n    name: 'Bitbucket',\n    description: 'Connect Sentry to Bitbucket Repos and Pipelines.',\n  },\n  {\n    slug: 'vercel',\n    name: 'Vercel',\n    description: 'Automatically notify Sentry of new deployments in Vercel.',\n  },\n  {\n    slug: 'msteams',\n    name: 'MS Teams',\n    description: 'Receive alerts when and where you want them, without disruption.',\n  },\n  {\n    slug: 'pagerduty',\n    name: 'Pagerduty',\n    description: 'Alert your team and triage in real time to avoid incidents.',\n  },\n  {\n    slug: 'vsts',\n    name: 'Azure DevOps',\n    description: 'Manage, sync, and track your issues with Azure DevOps commit data.',\n  },\n];\n\ntype Props = {\n  removeIntegration: (string) => void;\n  selectIntegration: (string) => void;\n  selectedIntegrations: string[];\n};\n\nexport default function IntegrationMultiSelect(props: Props) {\n  const selectedIntegrationSet = new Set(props.selectedIntegrations);\n  const oneIntegration = (integration: Integration) => {\n    const selected = selectedIntegrationSet.has(integration.slug);\n    return (\n      <IntegrationItem\n        key={integration.slug}\n        selected={selectedIntegrationSet.has(integration.slug)}\n        onClick={() => props.selectIntegration(integration.slug)}\n      >\n        <PluginIcon pluginId={integration.slug} size={36} />\n        <div>\n          <h6>{integration.name}</h6>\n          <p>{integration.description}</p>\n        </div>\n        {selected && (\n          <ClearButton\n            onClick={e => {\n              props.removeIntegration(integration.slug);\n              e.stopPropagation();\n            }}\n            aria-label={t('Clear')}\n          />\n        )}\n      </IntegrationItem>\n    );\n  };\n  return <Wrapper>{onboardingIntegrations.map(oneIntegration)}</Wrapper>;\n}\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fit,\n    minmax(min(100%, max(256px, calc(100% / 3 - ${space(2)}))), 1fr)\n  );\n  gap: ${space(2)};\n  justify-content: center;\n`;\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  min-height: 0;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xsmall',\n};\nconst IntegrationItem = styled('div')<{selected: boolean}>`\n  display: flex;\n  flex-direction: row;\n  border: 1px solid ${p => p.theme.gray200};\n  border-radius: ${p => p.theme.borderRadius};\n  padding: ${space(2)};\n  position: relative;\n  ${PluginIcon} {\n    flex-shrink: 0;\n    flex-grow: 0;\n    margin-right: ${space(2)};\n  }\n  h6 {\n    margin-bottom: ${space(1)};\n  }\n  p {\n    margin: 0;\n  }\n  cursor: pointer;\n  &:hover {\n    background-color: ${p => p.theme.alert.muted.backgroundLight};\n  }\n  ${p =>\n    p.selected &&\n    `\n    background-color: ${p.theme.alert.info.backgroundLight} !important;\n    `}\n`;\n","import {useMemo} from 'react';\n\nimport {usePersistedStoreCategory} from 'sentry/stores/persistedStore';\n\nimport {OnboardingState} from './types';\n\nexport function usePersistedOnboardingState(): [\n  OnboardingState | null,\n  (next: OnboardingState | null) => void\n] {\n  const [state, setState] = usePersistedStoreCategory('onboarding');\n  const stableState: [OnboardingState | null, (next: OnboardingState | null) => void] =\n    useMemo(() => {\n      const onboardingState = state\n        ? {\n            ...state,\n            platformToProjectIdMap: state.platformToProjectIdMap || {},\n            selectedPlatforms: state.selectedPlatforms || [],\n            selectedIntegrations: state.selectedIntegrations || [],\n          }\n        : null;\n      return [onboardingState, setState];\n    }, [state, setState]);\n  return stableState;\n}\n","export enum Tab {\n  DETAILS = 'details',\n  ACTIVITY = 'activity',\n  USER_FEEDBACK = 'user-feedback',\n  ATTACHMENTS = 'attachments',\n  TAGS = 'tags',\n  EVENTS = 'events',\n  MERGED = 'merged',\n  GROUPING = 'grouping',\n  SIMILAR_ISSUES = 'similar-issues',\n  REPLAYS = 'Replays',\n}\n","import {createContext} from 'react';\nimport {RouteContextInterface} from 'react-router';\n\n// TODO(nisanthan): Better types. Context will be the `props` arg from the RouterProps render method. This is typed as `any` by react-router\nexport const RouteContext = createContext<RouteContextInterface | null>(null);\n"],"names":["async","disconnectIdentity","identity","onSuccess","api","Client","requestPromise","category","id","method","addErrorMessage","addSuccessMessage","provider","name","updateUser","user","ConfigStore","options","theme","logout","removeAuthenticator","userId","authId","fetchSavedQuery","orgId","queryId","promise","catch","t","createSavedQuery","query","data","updateSavedQuery","updateSavedQueryVisit","deleteSavedQuery","removeIndicator","indicator","IndicatorActions","clearIndicators","addMessage","msg","type","duration","optionsDuration","append","rest","message","code","extra","Sentry","Error","DEFAULT_TOAST_DURATION","action","addMessageWithType","addLoadingMessage","isValidElement","PRETTY_VALUES","Map","undefined","saveOnBlurUndoMessage","change","model","fieldName","label","getDescriptor","prettifyValue","val","descriptor","fieldDescriptor","get","formatMessageValue","initialData","has","String","prettyFormString","showChangeText","tct","root","MessageContainer","FieldName","oldValue","FormValue","old","newValue","new","modelArg","undo","getValue","didUndo","saveResult","saveField","then","space","openModal","renderer","ModalStore","closeModal","openSudo","onClose","args","mod","default","Modal","deps","openEmailVerification","openDiffModal","modalCss","openCreateTeamModal","openCreateOwnershipRule","openEditOwnershipRules","backdrop","openCommandPalette","openRecoveryOptions","openTeamAccessRequestModal","redirectToProject","newProjectSlug","slug","openHelpSearchModal","openDebugFileSourceModal","restOptions","openInviteMembersModal","openAddDashboardWidgetModal","openWidgetBuilderOverwriteModal","openAddToDashboardModal","openReprocessEventModal","demoSignupModal","openDashboardWidgetQuerySelectorModal","openDashboardWidgetLibraryModal","openWidgetViewerModal","openCreateNewIntegrationModal","updateOnboardingTask","organization","updatedTask","hasExistingTask","onboardingTasks","find","task","map","OrganizationActions","getPreloadedDataPromise","fallback","isInitialFetch","window","__sentry_preload","orgSlug","toLowerCase","result","_","fetchProjectsAndTeams","uncancelableApi","projectsPromise","includeAllArgs","all_projects","collapse","teamsPromise","Promise","all","err","status","fetchOrganizationDetails","silent","ProjectActions","TeamActions","PageFiltersActions","org","detailed","replace","setActiveOrganization","fetchOrg","errMessage","responseJSON","detail","loadOrganization","projects","teams","resp","teamPageLinks","getResponseHeader","paginationObject","parseLinkHeader","hasMore","next","results","cursor","loadTeamsAndProjects","redirectToRemainingOrganization","removeOrg","allOrgs","OrganizationsStore","filter","length","browserHistory","firstRemainingOrg","switchOrganization","resetPageFilters","removeAndRedirectToRemainingOrganization","params","successMessage","errorMessage","endpoint","OrganizationsActions","remove","changeOrganizationSlug","prev","updateOrganization","fetchOrganizationByMember","memberId","addOrg","fetchOrgDetails","setActive","loadProjects","loadTeam","TeamStore","ProjectsStore","SIDEBAR_COOKIE_KEY","hideSidebar","PreferenceStore","Cookies","showSidebar","loadPreferencesState","collapsed","update","projectId","loadStats","request","success","error","_projectStatsToFetch","Set","_debouncedLoadStats","debounce","projectSet","storedProjects","ProjectsStatsStore","existingProjectStats","Object","values","Array","from","project","includes","clear","queries","chunk","chunkedProjects","additionalQuery","statsPeriod","join","_queryForStats","reduce","acc","concat","loadStatsForProject","add","setActiveProject","removeProject","transferProject","email","addTeamToProject","projectSlug","team","removeTeamFromProject","teamSlug","changeProjectSlug","createProject","platform","default_rules","defaultRules","loadDocs","fetchProjectsCount","fetchAnyReleaseExistence","per_page","createActions","Request","constructor","aborter","this","alive","cancel","abort","metric","ALLOWED_ANON_PAGES","globalErrorHandlers","initApiClientErrorHandling","push","pageAllowsAnon","regex","test","location","pathname","assign","loginUrl","EXPERIMENTAL_SPA","reload","hasProjectBeenRenamed","response","PROJECT_MOVED","baseUrl","activeRequests","wrapCallback","func","cleanup","req","isUndefined","apply","forEach","r","handleRequestError","textStatus","errorThrown","path","requestOptions","isSudoRequired","SUDO_REQUIRED","SUPERUSER_REQUIRED","didSuccessfullyRetry","isSuperuser","sudo","retryRequest","errorCb","fullUrl","qs","scope","setExtra","buildRequestUrl","JSON","stringify","queryString","indexOf","uniqueId","startMarker","successHandler","responseData","start","errorHandler","completeHandler","complete","AbortController","body","headers","Headers","Accept","absoluteUrl","URL","origin","isSameOrigin","csrfSafeMethod","set","getCsrfToken","fetchRequest","fetch","credentials","signal","responseText","statusText","ok","errorReason","clone","text","toString","responseContentType","isResponseJSON","json","SyntaxError","responseMeta","header","rawResponse","handler","Boolean","preservedError","resolve","reject","errorObjectToUse","createRequestError","stack","removeFrames","globals","PropTypes","React","Reflux","moment","Router","ReactRouter","ReactDOM","findDOMNode","render","SentryApp","Form","require","FormState","LoadingIndicator","plugins","addContext","BasePlugin","DefaultIssuePlugin","HookStore","GuideActionCreator","getModalPortal","keys","WrappedComponent","ErrorHandler","Component","hasError","componentDidCatch","_error","info","console","componentStack","state","props","ModalHeader","p","border","CloseButton","size","icon","translucentBorder","background","ModalBody","fontSizeMedium","ModalFooter","makeClosableHeader","ClosableHeader","closeButton","children","onClick","displayName","makeCloseButton","GlobalModal","visible","useCallback","actionCloseModal","handleEscapeClose","e","key","portal","focusTrap","useRef","modalFocusTrap","useEffect","current","createFocusTrap","preventScroll","escapeDeactivates","fallbackFocus","document","querySelector","getElementById","ROOT_ELEMENT","reset","style","removeProperty","removeAttribute","deactivate","removeEventListener","overflow","setAttribute","activate","addEventListener","renderedChild","Header","Body","Footer","allowClickClose","containerRef","createPortal","Fragment","Backdrop","opacity","pointerEvents","Container","ref","target","AnimatePresence","role","css","Content","fullPageCss","zIndex","modal","black","motion","defaultProps","initial","y","animate","exit","transition","testableTransition","dropShadowHeavy","GlobalModalContainer","modalStore","setState","componentWillUnmount","unlistener","InstallWizard","lazy","NewsletterConsent","App","useApi","config","useLegacyStore","useHotkeys","match","callback","preventDefault","loadOrganizations","member","checkInternalHealth","problems","problem","url","severity","AlertStore","opaque","messages","level","neverExpire","DEPLOY_PREVIEW_CONFIG","branch","commitSha","githubOrg","githubRepo","repoUrl","commitLink","href","slice","branchLink","noDuplicates","displayDeployPreviewAlert","cb","fetchGuides","needsUpgrade","newsletterConsentPrompt","flags","newsletter_consent_prompt","mainContainerRef","handleModalClose","focus","Profiler","onRender","onRenderCallback","MainContainer","tabIndex","className","Suspense","onConfigured","onSubmitSuccess","demo","headerSize","IssueListContainer","useOrganization","title","hideGlobalHeader","ProcessingIssueHint","issue","showProject","link","showButton","lastEvent","alertType","numIssues","tn","ago","date","lastSeen","issuesProcessing","resolveableIssues","StyledAlert","showIcon","trailingItems","StyledButton","to","Alert","Button","ProcessingIssueList","loading","issues","componentDidMount","fetchIssues","componentDidUpdate","prevProps","isEqual","projectIds","fetchProcessingIssues","hasIssues","some","idx","storeConfig","unsubscribeListeners","savedSearches","isLoading","init","startFetchSavedSearches","fetchSavedSearchesSuccess","fetchSavedSearchesError","createSavedSearchSuccess","deleteSavedSearchSuccess","pinSearch","pinSearchSuccess","resetSavedSearches","unpinSearch","SavedSearchesActions","listenTo","onStartFetchSavedSearches","onFetchSavedSearchesSuccess","onFetchSavedSearchesError","onReset","onCreateSavedSearchSuccess","onDeleteSavedSearchSuccess","onPinSearch","onPinSearchSuccess","onUnpinSearch","getFilteredSearches","existingSearchId","savedSearch","isPinned","isOrgCustom","isGlobal","updateExistingSearch","updateObj","index","findIndex","newSavedSearch","findByQuery","sort","trigger","isArray","_resp","search","item","existingSearch","newPinnedSearch","createStore","makeSafeRefluxStore","ExtraDescription","queryCount","BULK_LIMIT","bulkNumber","BULK_LIMIT_STR","toLocaleString","ConfirmAction","getBulkConfirmMessage","ResolveActionsContainer","anySelected","onShouldConfirm","onUpdate","hasReleases","latestRelease","confirm","loadingProjects","projectFetchError","resolveDisabled","resolveDropdownDisabled","hasRelease","shouldConfirm","RESOLVE","confirmMessage","confirmLabel","disabled","disableDropdown","getSortTooltip","IssueSortOptions","getSortOptions","sortKeys","hasTrendSort","combinedSortKeys","value","getSortLabel","tooltip","IssueListSortOptions","onSelect","sortKey","Query","features","hasFeature","onChange","opt","triggerProps","ActionSet","allInQuerySelected","multiSelected","onDelete","onMerge","selectedProjectSlug","onSortChange","canBeUndone","question","DELETE","MERGE","marginBottom","getConfirm","capitalized","capitalize","getLabel","mergeDisabled","selectedIssues","GroupStore","canMarkReviewed","inbox","canAddBookmark","isBookmarked","canRemoveBookmark","canSetUnresolved","useTheme","nestMergeAndReview","useMedia","breakpoints","xlarge","menuItems","hidden","onAction","openConfirmModal","bypass","onConfirm","confirmText","BOOKMARK","UNBOOKMARK","UNRESOLVE","ResolutionStatus","priority","disabledMenuItems","Wrapper","slugs","initiallyLoaded","fetchError","selectedProject","hasOwnProperty","IGNORE","items","showChevron","disabledKeys","isDisabled","small","large","selection","onSelectStatsPeriod","isReprocessingQuery","StartedColumn","EventsReprocessedColumn","ProgressColumn","GraphHeaderWrapper","GraphHeader","StyledToolbarHeader","datetime","period","GraphToggle","active","EventsOrUsersLabel","AssigneesLabel","ToolbarHeader","textColor","overflowEllipsis","IssueListActions","pageSelected","selectedIds","SelectedGroupStore","handleSelectedGroupChange","onMarkReviewed","onActionTaken","hasIssueListRemovalAction","actionSelectedGroups","itemIds","projectConstraints","bulkUpdate","environment","environments","bulkDelete","mergeGroups","selectedItems","callIfFunction","listener","itemIdSet","groupIds","itemId","deselectAll","group","uniqProjects","uniq","handleSelectAll","allResultsVisible","displayReprocessingActions","Sticky","StyledFlex","ActionsCheckbox","checked","handleDelete","handleMerge","handleUpdate","handleSelectStatsPeriod","SelectAllNotice","count","SelectAllLink","handleApplyToAll","issuesList","stickyHeader","backgroundSecondary","borderRadius","alertStyles","system","linkColor","withApi","IssueListFilters","isSearchDisabled","onSidebarToggle","onSearch","tagValueLoader","tags","SearchContainer","alignDropdown","excludeEnvironment","supportedTags","SavedSearchTab","isActive","savedSearchList","onSavedSearchSelect","onSavedSearchDelete","savedSearchValue","useMemo","globalSearches","getSearchOption","keyPrefix","details","Details","TooltipSearchQuery","tooltipOptions","delay","access","renderNoAccessMessage","stopPropagation","DeleteButton","borderless","trailingItemsSpanFullHeight","searchOptions","option","searchObj","s","StyledCompactSelect","renderWrapAs","StyledDropdownTrigger","defined","hideParens","max","offset","maxMenuHeight","CompactSelect","DropdownButtonV2","subText","familyMono","fontSizeExtraSmall","IssueListHeader","queryCounts","realtimeActive","onRealtimeChange","router","displayReprocessingTab","selectedProjectIds","useProjects","tabs","getTabs","visibleTabs","tab","savedSearchTabActive","tabQuery","page","__","queryParms","sortParam","selectedProjects","Number","noActionWrap","StyledLayoutTitle","gap","StyledGlobalEventProcessingAlert","underlined","queryName","tooltipTitle","tooltipHoverable","trackAnalyticsEvent","eventKey","eventName","organization_id","trackTabClick","position","isHoverable","TAB_MAX_COUNT","Layout","GlobalEventProcessingAlert","medium","IssueListTagFilter","textValue","tag","isInput","predefined","tagName","debouncedTextChange","handleChange","handleLoadOptions","valueObj","UNSAFE_componentWillReceiveProps","nextProps","handleChangeInput","clearable","placeholder","loadingMessage","handleChangeSelect","onInputChange","handleChangeSelectInput","onFocus","handleOpenMenu","noResultsText","IssueListSidebar","queryObj","queryToObj","textFilter","__text","newQuery","onQueryChange","evt","newQueryObj","objToQuery","onTextFilterSubmit","componentWillReceiveProps","StreamSidebar","onSubmit","onTextChange","StyledIconClose","onClearSearch","StyledHr","onSelectTag","IconClose","gray200","gray300","innerBorder","DEFAULT_SORT","DEFAULT_GRAPH_STATS_PERIOD","DYNAMIC_COUNTS_STATS_PERIODS","IssueListOverview","getInitialState","StreamManager","getQuery","end","getUtcDateString","getSort","groupStatsPeriod","getGroupStatsPeriod","pickBy","v","groups","requestParams","getEndpointParams","DEFAULT_STATS_PERIOD","_lastStatsRequest","getGroupStatsEndpoint","GroupActions","parseApiError","currentTransaction","getScope","getTransaction","op","finish","currentQueryCount","fetchAllCounts","_queryCounts","endpointParams","tabQueriesWithCounts","getTabsWithCounts","currentTabQuery","trackAdvancedAnalyticsEvent","analyticsName","num_issues","every","omit","_query","_lastFetchCountsRequest","getGroupCountsEndpoint","mapValues","actionTaken","_streamManager","issuesLoading","itemsRemoved","reviewedIds","isForReviewQuery","transaction","getCurrentSentryReactTransaction","setTag","limit","shortIdLookup","currentQuery","expand","_lastRequest","_poller","disable","getGroupListEndpoint","redirect","matchingEventId","extractSelectionParameters","fetchStats","hits","parseInt","maxHits","queryMaxCount","pageLinks","fetchCounts","forReview","search_type","search_source","resumePolling","links","previous","issueEndpoint","searchParams","delete","setEndpoint","decodeURIComponent","enable","realtime","queryPageInt","isNaN","transitionTo","_links","unshift","onGroupChange","fetchData","nextCursor","_path","delta","nextPage","isSidebarVisible","newParams","ids","topIssue","memberList","showInboxTime","hasGuideAnchor","members","showReprocessingTab","displayReprocessingLayout","useFilteredStats","fetchSavedSearches","deleteSavedSearch","actionTakenGroupData","shortId","inInboxCount","actionType","onUndo","getGlobalSearchProjectIds","fetchTagValues","realtimeActiveCookie","selectAllActive","tagsLoading","pollingEndpoint","getDelay","reqsWithoutData","Math","min","timeoutId","clearTimeout","lastRequest","setTimeout","poll","bind","linksHeader","onRealtimePoll","fetchTags","fetchMemberList","prevState","savedSearchLoading","prevQuery","selectionChanged","DEFAULT_QUERY","currentPeriod","fetchOrgMembers","indexMembersByProject","loadOrganizationTags","filteredItems","getAllItems","resolvedIds","ignoredIds","i","onIssueAction","renderLoading","renderStreamBody","hideMessage","onRetry","renderGroupNodes","pageBasedCount","pageCount","modifiedQueryCount","displayCount","total","StyledQueryCount","hideIfEmpty","layoutProps","fullWidth","StyledPageContent","hasData","StyledPagination","caption","onCursor","onCursorChange","onIssueListSidebarSearch","withPageFilters","WithSavedSearches","SavedSearchesStore","searchesState","unsubscribe","newState","savedSearchProp","savedSearchesProp","searchId","getDisplayName","withSavedSearches","withOrganization","withIssueTags","withProfiler","Pagination","QueryCount","PageContent","LoadingTriangle","LoadingTriangleWrapper","CircleBackground","src","white","SidebarPanelItem","hasSeen","cta","titleAction","SidebarPanelItemRoot","TitleWrapper","Title","Message","Text","fontSizeLarge","BroadcastSdkUpdates","sdkUpdates","list","suggestions","sdk","flattenSuggestions","renderUpdates","projectSdkUpdates","entries","groupBy","updates","isMember","sdkName","sdkVersion","isDeprecated","suggestion","SdkProjectBadge","SdkOutdatedVersion","OutdatedVersion","StyledList","getSdkUpdateSuggestion","version","shortStyle","deprecatedRavenSdkUpdates","otherSdkUpdates","partition","sdkUpdate","UpdatesList","withSdkUpdates","withProjects","gray400","ProjectBadge","fontSizeExtraLarge","List","LabelHook","HookOrDefault","hookName","defaultComponent","SidebarItem","badge","hasPanel","isNew","isBeta","orientation","isNewSeenKeySuffix","labelString","isActiveRouter","startsWith","isTop","placement","isNewSeenKey","showIsNew","localStorage","StyledSidebarItem","event","SidebarItemWrapper","SidebarItemIcon","SidebarItemLabel","noTooltip","CollapsedFeatureBadge","SidebarItemBadge","withRouter","getActiveStyle","Link","getCollapsedBadgeStyle","red300","sidebar","smallBadgeSize","boxShadow","badgeSize","FeatureBadge","variant","PanelContainer","slideInLeft","mobileHeight","collapsedWidth","expandedWidth","hidePanel","portalEl","createElement","appendChild","getSidebarPortal","panelCloseHandler","Element","contains","SidebarPanelHeader","PanelClose","SidebarPanelBody","hasHeader","Broadcasts","broadcasts","pollingTimeout","stopPolling","startPolling","markSeenTimeout","markSeen","onShowPanel","unseenBroadcastIds","unseenIds","idList","handleVisibilityChange","currentPanel","unseenPosts","SidebarPanelKey","handleShowPanel","SidebarMenuItemLink","SidebarOrgSummary","projectCount","PendingDeletionAvatar","Name","pendingDeletion","ProjectCount","menuSpacing","color","SidebarMenuItem","hasMenu","StyledSidebarMenuItemLink","MenuItemLabel","menuItemStyles","SidebarHelp","isOpen","getActorProps","getMenuProps","HelpRoot","HelpActor","HelpMenu","shouldForwardProp","SidebarDropdownMenu","chartLabel","textCss","AnimatedText","ProgressRing","minValue","maxValue","barWidth","animateText","progressColor","backgroundColor","progressEndcaps","radius","circumference","PI","progress","percent","progressOffset","TextComponent","textNode","RingSvg","height","width","RingBackground","cx","cy","RingBar","strokeDashoffset","strokeLinecap","ProgressHeader","allTasks","completedTasks","StyledProgressRing","gray100","HeaderTitle","Description","SkipConfirm","showConfirmation","onSkip","skip","toggleConfirm","Confirmation","handleSkip","onDismiss","SkipHelp","external","fadeIn","taskIsDone","findCompleteTasks","completionSeen","findActiveTasks","requisiteTasks","findUpcomingTasks","recordAnalytics","todo_id","todo_title","Task","onMarkComplete","forwardedRef","handleClick","open","navigateTo","completedOn","dateCompleted","TaskCard","CompleteTitle","StatusIndicator","CompleteIndicator","SkippedIndicator","DateCompleted","fromNow","TaskUserAvatar","hasTooltip","containerDisplayMode","TaskBlankAvatar","round","IncompleteMarker","requisite","isSolid","SupplementComponent","supplement","onCompleteTask","skipAction","skippable","interactive","IncompleteTitle","description","ActionBar","InProgressIndicator","Card","fontSizeSmall","pink300","variants","x","IconCheckmark","isCircled","completedItemAnimation","Avatar","LetterAvatar","WrappedTask","forwardRef","onboardingIntegrationSet","onboardingIntegrations","OnboardingIntegrationCard","onboardingState","setOnboardingState","finishedIntegrations","providers","integrationsToSetup","selectedIntegrations","OnboardingTaskProjectList","integration","OnboardingTaskProjectListItem","all_selected_integrations","OnboardingTaskProjectListItemInner","pluginId","StyledIconChevron","direction","StyledAndMoreIcon","num","layout","when","staggerChildren","z","IconChevron","PluginIcon","hover","IconEllipsis","OnboardingProjectsCard","allProjects","selectedPlatforms","platformToProjectIdMap","firstEvent","StyledPlatformIcon","PulsingIndicator","PulsingIndicatorText","purple300","marginTop","pulsingIndicatorStyles","PlatformIcon","hasPlatformWithSourceMaps","sourceMaps","getIssueAlertUrl","firstProjectWithEvents","getMetricAlertUrl","firstTransactionEvent","getMergedTasks","taskDescriptors","OnboardingTaskKey","requisites","display","eventType","onIssueReceived","EventWaitingIndicator","source","renderCard","experiments","TargetedOnboardingIntegrationSelectExperiment","serverTask","IntegrationCard","getOnboardingTasks","serverTasks","desc","task2","reqTask","Heading","customizedTasksHeading","completeNowHeading","upcomingTasksHeading","completedTasksHeading","OnboardingWizardSidebar","usePersistedOnboardingState","markCompletionTimeout","markCompletionSeenTimeout","seenTimeout","time","customTasks","upcoming","tasks","markTasksAsSeen","unseenTasks","markSeenOnOpen","makeTaskUpdater","renderItem","AnimatedTaskItem","completeList","CompleteList","customizedCards","card","TaskSidebarPanel","TopRight","HighlightTopRight","TaskList","SidebarPanel","isDone","progressTextCss","OnboardingStatus","allDisplayedTasks","doneTasks","numberRemaining","pendingCompletionSeen","displayedTask","Remaining","PendingSeenIndicator","hoverCss","green200","RingText","COMPONENT_STATUS_SORT","ServiceIncidents","serviceStatus","setServiceStatus","useState","cfg","api_host","incidents","statuspageIncidents","isMajor","impact","createdAt","created_at","incident_updates","updatedAt","updated_at","affectedComponents","components","componentUpdate","shortlink","getIncidentsFromIncidentResponse","loadIncidents","setLevel","setFingerprint","IS_ACCEPTANCE_TEST","isEmpty","incident","AffectedServices","timeAgo","ComponentList","sortBy","ComponentStatus","padding","symbol","getStatusSymbol","UpdateHeading","StatusTitle","startCase","StatusDate","dangerouslySetInnerHTML","__html","marked","skipWrapper","alpha","string","headingColor","fontSizeRelativeSmall","ListItem","SwitchOrganization","organizations","canCreateOrganization","isNestedDropdown","SwitchOrganizationMenuActor","SubMenuCaret","SwitchOrganizationMenu","OrganizationList","alignItems","MenuItemLabelWithIcon","StyledIconAdd","withOrganizations","IconAdd","SidebarDropdown","hideOrgLinks","handleLogout","hasOrganization","hasUser","hasOrgRead","hasMemberRead","hasTeamRead","canCreateOrg","avatar","StyledAvatar","SentryLink","getRootProps","SidebarDropdownRoot","SidebarDropdownActor","OrgAndUserWrapper","OrgOrUserName","UserNameOrEmail","OrgAndUserMenu","singleOrganization","UserSummary","UserBadgeNoOverflow","avatarSize","IdBadge","TextOverflow","orgAndUserMenu","SidebarOverride","togglePanel","panel","SidebarPanelStore","Sidebar","preferences","PreferencesStore","activePanel","horizontal","bcl","classList","hash","sidebarItemProps","discover2","getDiscoverLandingUrl","performance","overideProps","releases","userFeedback","alerts","monitors","replays","dashboards","requireAll","profiling","activity","stats","settings","SidebarWrapper","SidebarSectionGroupPrimary","SidebarSection","PrimaryItems","SidebarSectionGroup","noMargin","noPadding","SidebarCollapseItem","responsiveFlex","sidebarGradient","sidebarBorder","ExpandedIcon","CollapsedIcon","OrganizationContextContainer","shouldRemount","getDefaultState","organizationsLoading","hasOrgIdAndChanged","hasOrgId","useLastOrganization","organizationLoadingChanged","isOrgStorePopulatedCorrectly","OrganizationStore","errorType","getOrganizationSlug","dirty","isOrgChanging","super","onProjectCreation","getChildContext","remountPrevProps","remountComponent","unlisteners","orgData","hooks","setContext","needsReload","route","getRouteStringFromRoutes","routes","getOrganizationDetailsEndpoint","getTitle","renderSidebar","includeSidebar","renderError","errorComponent","ORGANIZATION_FETCH_ERROR_TYPES","renderBody","ErrorWrapper","noSuffix","SentryTypes","DeletionInProgress","DeletionPending","isRestoring","setIsRestoring","cancelDeletion","OrganizationDetailsBody","OrganizationDetails","OrganizationRoot","setError","xhr","XMLHttpRequest","send","onload","responseURL","onerror","heading","hideSupportLinks","ProjectDetailsInner","getProjectId","hasProjectId","projectID","isString","getOrganizationId","childrenProps","organizationId","ProjectDetails","generateRedirectRoute","trackRedirect","nextRoute","payload","feature","org_id","analytics","routeProps","RouteNotFound","isMissingSlash","scrollDisable","newLocation","prevLocation","SettingsWrapper","useScrollToTop","StyledSettingsWrapper","lineHeightBody","Route","BaseRoute","IndexRoute","BaseIndexRoute","hook","SafeLazyLoad","LazyLoad","make","component","memoize","experimentalSpaRoutes","AuthLayout","rootRoutes","Redirect","IndexRedirect","accountSettingsRoutes","projectSettingsRoutes","SamplingRuleType","orgSettingsRoutes","legacySettingsRedirects","settingsRoutes","projectsRoutes","ProjectEventRedirect","dashboardRoutes","alertRoutes","monitorsRoutes","replayRoutes","releasesRoutes","activityRoutes","statsRoutes","discoverRoutes","performanceRoutes","userFeedbackRoutes","issueListRoutes","issueDetailsRoutes","currentTab","Tab","isEventRoute","adminManageRoutes","legacyOrganizationRootRoutes","legacyGettingStartedRoutes","legacyOrgRedirects","redirectDeprecatedProjectRoute","profilingRoutes","organizationRoutes","legacyRedirectRoutes","renderDom","container","rootEl","COMPONENT_MAP","SentryInitRenderReactComponent","processItem","initConfig","renderOnDomReady","onReady","exportGlobals","input","element","attachTo","DemoHeader","sandboxData","SandboxData","extraSearchParams","extraQueryParameter","StyledLogoSentry","StyledExternalLink","urlAttachQueryParams","openInNewTab","RequestDemoBtn","rel","GetStarted","extraQueryParameterWithEmail","GetStartedTextLong","GetStartedTextShort","shortTitle","settingsSidebarNav","LogoSentry","BaseButton","ExternalLink","Main","history","RouterContext","renderMain","initializeApp","commonInitialization","initializeSdk","__onSentryInit","queued","processInitQueue","addSelectorEventListener","selector","HTMLElement","matches","triggerElement","targetSelector","getAttribute","targetPanel","parentElement","closest","targetTab","lastActiveTab","demoComponent","installText","featureName","f","FeatureDisabled","alert","hideHelpToggle","showHelp","setShowHelp","renderHelp","HelpText","configFile","configLink","CONFIG_DOCS_URL","hideUnsupported","CopyButton","Pre","selectText","showDescription","FeatureDisabledMessage","ToggleButton","HelpDescription","AlertComponent","activeHover","ButtonLabel","ConfirmableAction","StyledAction","StyledActionButton","ActionButton","hasDropdown","borderRadiusLeft","ActionLink","confirmPriority","actionCommonProps","classNames","CustomIgnoreCountModal","countName","windowName","statusDetails","onSelected","countLabel","windowOptions","inline","flexibleControlStateSize","stacked","required","allowClear","help","handleSubmit","CustomIgnoreDurationModal","dateWarning","createRef","dateStr","snoozeDateInputRef","timeStr","snoozeTimeInputRef","selectedDate","isValid","now","diff","minutes","selectedIgnoreMinutes","ignoreDuration","defaultDate","Date","setDate","getDate","setSeconds","setMilliseconds","defaultDateVal","sprintf","getUTCFullYear","getUTCMonth","getUTCDate","defaultTimeVal","getUTCHours","defaultValue","snoozeClicked","IGNORE_DURATIONS","IGNORE_COUNTS","IGNORE_WINDOWS","IgnoreActions","isIgnored","onIgnore","onCustomIgnore","dropdownItems","isSubmenu","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","merged","IgnoreButton","tooltipProps","triggerRef","DropdownTrigger","menuTitle","borderRadiusRight","CustomResolutionModal","release","anchor","dateCreated","inRelease","onResults","onAsyncFieldResults","onQuery","marginRight","isResolved","isAutoResolved","ResolveActions","inNextRelease","handleAnotherExistingReleaseResolution","renderResolved","renderDropdownMenu","actionTitle","onActionOrConfirm","handleNextReleaseResolution","showDividers","formatVersion","handleCurrentReleaseResolution","openCustomReleaseModal","ResolveButton","DEFAULT_TYPE","isExpanded","setIsExpanded","showExpand","showTrailingItems","hoverProps","iconHoverProps","isHovered","iconIsHovered","useHover","messageHoverProps","messageIsHovered","Wrap","hovered","IconWrapper","getIcon","ContentWrapper","TrailingItemsWrap","TrailingItems","ExpandIconWrap","ExpandContainer","alertColors","backgroundLight","iconColor","borderHover","iconHoverColor","ButtonBar","shouldCheckActive","ButtonGrid","Children","child","childProps","childWithoutProps","barId","cloneElement","MergedStyles","hoverStyle","MarkPoint","MiniBarChart","markers","emphasisColors","series","hideDelay","tooltipFormatter","colors","labelYAxisExtents","showMarkLineLabel","_ref","barChartProps","colorList","chartSeries","original","updated","barMinHeight","barGap","markerTooltip","show","formatter","getFormattedDate","coord","local","utc","truncationFormatter","xAxis","truncate","markPoint","marker","symbolSize","itemStyle","borderColor","yAxisOptions","showMinLabel","showMaxLabel","interval","Infinity","axisLabel","formatAbbreviatedNumber","chartOptions","valueFormatter","yAxis","splitLine","grid","top","bottom","left","right","axisLine","axisTick","alignWithLabel","axisPointer","lineStyle","animation","Collapsible","collapseButton","expandButton","maxVisibleItems","isCollapsed","setCollapsed","handleCollapseToggle","visibleItems","numberOfHiddenItems","showDefault","onExpand","onCollapse","DatePageFilter","resetParamsOnChange","desyncedFilters","usePageFilters","relative","timePeriodUpdate","startEndUtc","newTimePeriod","updateDateTime","save","resetParams","customDropdownButton","startTimeFormatted","endTimeFormatted","format","DEFAULT_DAY_START_TIME","DEFAULT_DAY_END_TIME","toUpperCase","detached","hideBottomBorder","highlighted","DropdownTitle","TitleContainer","showPin","context","onSubmitError","errors","resetOnError","getContext","form","onFieldChange","isSaving","hideErrors","requireChanges","hasChanges","isError","nonFieldErrors","non_field_errors","StyledForm","footerClass","submitDisabled","submitLabel","onCancel","marginLeft","cancelLabel","extraButton","createContext","FormField","PureComponent","setValue","finalValue","coerceValue","nextContext","newError","getError","getId","getField","getClassName","getFinalClassNames","renderDisabledReason","disabledReason","hideErrorMessage","shouldShowErrorMessage","htmlFor","ErrorMessage","FormContext","ApiForm","omitDisabled","getEnabledData","submitLoadingMessage","apiEndpoint","apiMethod","submitErrorMessage","BooleanField","InputField","initialValue","getType","EmailField","NumberField","intValue","getAttributes","SelectAsyncField","SelectField","autocomplete_query","autocomplete_field","SelectCreatableField","getOptions","coercedValue","convertFromSelect2Choices","choices","StyledSelectControl","creatable","multiple","isMultiple","SelectControl","TextareaField","formData","formErrors","formState","fieldProps","readonly","selectProps","has_autocomplete","selectFieldProps","MultipleCheckboxField","_value","allValues","setValues","hideLabelDivider","labelCx","shouldShowDisabledReason","borderBottom","choiceLabel","autoComplete","inputStyle","onBlur","onKeyPress","onKeyDown","step","PasswordField","editing","hasSavedValue","cancelEdit","prefix","startEdit","RadioBooleanField","yesOption","fontWeight","yesLabel","noOption","noLabel","yesFirst","multi","TextField","spellCheck","Menu","maxHeight","emptyMessage","searchPlaceholder","blendCorner","alignMenu","minWidth","hideInput","disableLabelPadding","busy","busyItemsStillVisible","subPanel","itemSize","virtualizedHeight","virtualizedLabelHeight","menuProps","noResultsMessage","inputProps","rootClassName","emptyHidesInput","menuHeader","filterValue","menuFooter","onScroll","inputActions","onOpen","closeOnSelect","dataTestId","hasItems","itemsLoading","showInput","stableItemFilter","filterValueOrInput","autoCompleteFilter","getFilteredItems","inputIsActor","resetInputOnClose","getInputProps","getItemProps","registerItemCount","registerVisibleItem","inputValue","selectedItem","highlightedIndex","actions","autoCompleteResults","hasResults","showNoItems","showNoResultsMessage","itemCount","groupLabel","renderedFooter","AutoCompleteRoot","StyledDropdownBubble","DropdownMainContent","mini","InputWrapper","StyledInput","autoFocus","InputLoadingWrapper","LabelWithPadding","ItemList","EmptyMessage","BusyMessage","Input","DropdownBubble","EnvironmentPageFilter","maxTitleLength","projectsLoaded","isReady","customLoadingIndicator","updateEnvironments","environmentsToShow","summary","env","trimSlug","NotFound","NotFoundAlert","ShortId","AvatarWrapper","IdWrapper","TimesTag","firstSeen","StyledIconClock","getDynamicText","suffix","shorten","fixed","Separator","IconClock","EventOrGroupExtraDetails","showAssignee","subscriptionDetails","numComments","logger","assignedTo","annotations","lifetime","isUnhandled","issuesPath","GroupExtra","showDateAdded","ShadowlessProjectBadge","hideName","CommentsLink","reason","LoggerAnnotation","annotation","AnnotationNoMargin","EventAnnotation","BaseFooter","LeftLinks","isSelfHosted","Build","build","substring","privacyUrl","FooterLink","termsUrl","LogoLink","RightLinks","demoMode","blue300","onError","_onSubmit","_apiMethod","_apiEndpoint","otherProps","CheckboxField","helpElement","FieldLayout","ControlWrapper","orientInline","RadioGroup","groupDisabled","disabledChoices","disabledChoice","choiceId","disabledChoiceReason","content","RadioLineItem","RadioLineText","isPropValid","FormModel","skipPreventDefault","onPreSubmit","getData","saveForm","submitSuccess","submitError","saveOnBlur","allowUndo","setInitialData","setFormOptions","preventFormResetOnUnmount","contextData","footerStyle","submitPriority","hideFooter","shouldShowFooter","isRenderFunc","StyledFooter","DefaultButtons","formChanged","Panel","defaultField","formFieldProps","_children","otherFieldProps","field","ClearIndicator","DropdownIndicator","MultiValueRemove","SelectLoadingIndicator","isCompact","isSearchable","maxMenuWidth","indicatorStyles","_padding","provided","defaultStyles","control","lineHeight","formText","dropShadowLight","minHeight","isFocused","focusBorder","menu","fontSize","dropdown","backgroundElevated","maxWidth","margin","paddingTop","menuList","menuPortal","transform","valueContainer","singleValue","formPlaceholder","multiValue","multiValueLabel","paddingLeft","multiValueRemove","borderLeft","indicatorsContainer","gridAutoFlow","gridGap","clearIndicator","dropdownIndicator","loadingIndicator","groupHeading","paddingBottom","getFieldLabelStyle","styles","inFieldLabel","choicesOrOptions","mappedValue","flatOptions","maybe","flatMap","inFieldLabelStyles","base","labelOrDefaultStyles","mergeStyles","mappedStyles","replacedComponents","IndicatorSeparator","Option","SelectPicker","isClearable","backspaceRemovesValue","isMulti","openMenuOnFocus","blurInputOnSelect","closeMenuOnSelect","hideSelectedOptions","tabSelectsValue","AsyncCreatable","Async","Creatable","ReactSelect","optionObj","alignRight","_required","previousValue","allowEmpty","escapeMarkup","getChoices","choice","sentryStatusPageLink","projectsInTheLowPriorityQueue","eventProcessing","symbolicationDegraded","projectSlugs","InboxReason","reason_details","reasonDetails","date_added","dateAdded","relativeDateAdded","getRelativeDate","getCountText","getTooltipDescription","until","user_count","userCount","user_window","userWindow","dateOnly","getDuration","tooltipText","tooltipDescription","reasonBadgeText","tagType","getReasonDetails","TooltipWrapper","TooltipDescription","StyledTag","extraShort","disabledAbsoluteTooltip","Tag","UnhandledTag","UnhandledTagWrapper","StyledIconFatal","IconFatal","Hook","HookComponent","handleHooks","defaultComponentPromise","HookOrDefaultComponent","DefaultComponent","hookExists","componentFromHook","UserBadge","hideEmail","displayEmail","username","ipAddress","ip_address","StyledUserBadge","StyledNameAndEmail","StyledName","StyledEmail","UserAvatar","Toasts","toast","Indicators","IndicatorStore","LazyComponent","fn","retries","tryLoad","isWebpackChunkLoadingError","retryableImport","ErrorBoundary","LoadingContainer","errorInfo","LoadingErrorContainer","handleRetry","anchorProps","NoProjectMessage","superuserNeedsToBeProjectMember","canCreateProject","canJoinTeam","orgHasProjects","hasAccess","joinTeamAction","createProjectAction","HeightWrapper","img","alt","StyledPageHeading","HelpMessage","Actions","PageHeading","EnvironmentSelector","forceEnvironment","selectedEnvs","setSelectedEnvs","lastSelectedEnvs","didQuickSelect","handleMenuClose","handleClear","handleQuickSelect","selectedEnvironments","unsortedEnvironments","ALL_ACCESS_PROJECTS","uniqueEnvironments","validatedValue","StyledHeaderItem","locked","hasSelected","StyledDropdownAutoComplete","allowActorToggle","StyledPinButton","close","handleSave","searchKey","onCheckClick","willRemove","updatedSelectedEnvs","toggleCheckbox","onClear","HeaderItem","DropdownAutoComplete","borderRadiusBottom","PageFilterPinButton","lockedMessage","settingsLink","hint","textColorProps","IconContainer","StyledContent","SettingsIconLink","Hint","StyledClose","ChevronWrapper","StyledChevron","StyledLock","getColor","IconLock","MultipleSelectorSubmitRow","SubmitButtonContainer","SubmitButton","growIn","condensed","defaultRenderCheckbox","checkbox","PageFilterRow","renderCheckbox","rowId","domId","MultiselectCheckbox","isChecked","Label","CheckboxFancy","DesyncedFilterAlert","hideAlert","setHideAlert","RevertButton","revertToPinnedFilters","purple200","getMediaQueryForSpacer","isSpacer","TimeRangeRoot","GlobalSelectionHeader","searchQuery","onChangeTime","newValueObj","getUpdateOptions","onUpdateTime","onUpdateEnvironments","onChangeProjects","updateProjects","onUpdateProjects","BackButtonWrapper","leading","trailing","shouldForceProject","forceProject","isGlobalSelectionReady","showAbsolute","showRelative","showDateSelector","showEnvironmentSelector","memberProjects","nonMemberProjects","showIssueStreamLink","showProjectSettingsLink","lockedMessageSubject","timeRangeHint","specificProjectSlugs","disableMultipleProjectSelection","projectsFooterMessage","defaultSelection","relativeDateOptions","maxPickableDays","defaultPeriod","getBackButton","fetching","paginatedProjectSelectorCallbacks","clientHeight","scrollHeight","scrollTop","scrollFetchDispatcher","onFilterChange","searchDispatcher","searching","paginated","handleChangeProjects","onApplyChange","handleUpdateProjects","footerMessage","handleUpdateEnvironments","handleChangeTime","handleUpdateTime","relativeOptions","globalSelectionHeader","headerBackground","skipLoadLastUsed","skipInitializeUrlParams","isOrgAdmin","enforceSingleProject","specifiedProjects","otherProjects","additionalProps","doInitialization","initializeUrlState","queryParams","shouldEnforceSingleProject","lastQuery","oldSelectionQuery","newSelectionQuery","oldState","getStateFromQuery","allowEmptyPeriod","allowAbsoluteDatetime","defaultStatsPeriod","newEnvironments","newDateState","getDatetimeFromState","oldDateState","noProjectChange","noEnvironmentChange","noDatetimeChange","DropdownButton","purple100","pinnedFilters","pinned","PinButton","pin","pinFilter","PageFilterPinIndicator","IndicatorWrap","StyledIconLock","getDefaultSelection","pick","URL_PARAM","isSelectionEqual","other","ProjectSelectorFooter","selected","onApply","onShowAllProjects","onShowMyProjects","hasGlobalRole","hasOpenMembership","allSelected","canShowAllProjects","onProjectClick","buttonText","hasProjectWrite","newProjectUrl","FooterContainer","hasMessage","FooterMessage","FooterActions","renderDisabled","renderShowAllButton","onButtonClick","ProjectSelectorItem","onMultiSelect","renderDisabledCheckbox","ProjectFilterRow","BadgeWrapper","avatarProps","consistentWidth","disableLink","ActionBookmark","onToggle","bookmarked","BookmarkStar","ProjectSelector","extraProps","setHasChanges","lastSelected","doApplyChange","handleClose","projectName","StyledLink","subject","platforms","listSort","handleMultiSelect","selectedProjectsMap","selectedList","getProjectItem","hideGroupLabel","StyledDropdownAutocomplete","InputActions","button_type","reverse","TimePicker","focused","shouldComponentUpdate","onChangeStart","onChangeEnd","handleFocus","handleBlur","DateRangePicker","getTimeStringFromDate","MAX_PICKABLE_DAYS","BaseDateRange","hasStartErrors","hasEndErrors","changeProps","startDate","endDate","getEndOfDay","startTime","isValidTime","hasDateRangeErrors","newTime","setDateToTime","field_changed","endTime","showTimePicker","onChangeUtc","minDate","getStartOfPeriodAgo","maxDate","rangeColors","ranges","toDate","handleSelectDateRange","TimeAndUtcPicker","handleChangeStart","handleChangeEnd","UtcPicker","DateRange","withTheme","DateSummary","formatDate","formatTime","withSeconds","shouldShowTimes","DateGroupWrapper","hasTime","DateGroup","Time","DateRangeDivider","DateRangeHook","SelectorItemsHook","relativePeriods","shouldShowRelative","shouldShowAbsolute","relativeArr","DEFAULT_RELATIVE_PERIODS","itemLabel","TimeRangeSelector","getDateWithTimezoneInUtc","callCallback","handleSelectRelative","handleAbsoluteClick","defaultAbsolute","newDateTime","getPeriodAgo","parsePeriodToHours","getLocalToSystem","getUtcToSystem","getInternalDate","getUserTimezone","_prevProps","onToggleSelector","currState","isAbsoluteSelected","getRelativeSummary","handleOpen","handleCloseMenu","handleSelect","AbsoluteRangeWrap","handleUseUtc","SubmitRow","pageTitle","withMargins","withPadding","textStyles","PanelTable","disablePadding","emptyAction","loader","stickyHeaders","shouldShowLoading","shouldShowEmptyMessage","shouldShowContent","columns","hasRows","PanelTableHeader","sticky","LoadingWrapper","TableEmptyStateWarning","getContent","EmptyStateWarning","getVariantStyle","progressBackground","progressBar","ProjectPageFilter","currentSelectedProjects","setCurrentSelectedProjects","newProjects","projectsToShow","proj","onStepComplete","StyledBadge","Badge","isBookmarkedProp","yellow400","countOrMax","SectionContent","GroupCheckBox","isSelected","onSelectedGroupChange","_nextProps","nextState","DEFAULT_STREAM_GROUP_STATS_PERIOD","canSelect","withChart","useTintRow","narrowGroups","StreamGroup","group_id","sharedAnalytics","_assignee","suggestedAssignee","did_assign_suggestion","assigned_suggestion_reason","suggestedReason","assigned_type","targetElement","filtered","reviewed","valueIsEqual","owners","was_shown_suggestion","getDiscoverUrl","isFiltered","customStatsPeriod","hasDiscoverQuery","queryTerms","queryTag","DISCOVER_EXCLUSION_FIELDS","queryVal","commonQuery","discoverQuery","fields","orderby","toISOString","range","EventView","getResultsViewUrlTarget","renderReprocessingColumns","pendingEvents","totalEvents","remainingEventsToReprocess","remainingEventsToReprocessPercent","queryFilterDescription","primaryCount","secondaryCount","primaryUserCount","secondaryUserCount","showSecondaryPoints","toggleSelect","unresolved","GroupCheckBoxWrapper","GroupSummary","includeLink","trackClick","ChartWrapper","showMarkLine","EventUserWrapper","topLevelCx","PrimaryCount","SecondaryCount","StyledDropdownList","StyledMenuItem","MenuItemText","MenuItemCount","divider","dark","AssigneeWrapper","onAssign","trackAssign","PanelItem","bodyBackground","Count","primaryStatStyle","secondaryStatStyle","hovercard","noAnchor","menuItemStatStyles","gray500","GroupChart","secondaryStats","markLinePoint","point","formattedMarkLine","seriesName","markLine","MarkLine","fontFamily","isGroupedByDate","showTimeInTooltip","DEFAULT_APP_ROUTE","API_ACCESS_SCOPES","DEFAULT_API_ACCESS_SCOPES","MEMBER_ROLES","allowed","RELEASE_ADOPTION_STAGES","SENTRY_APP_PERMISSIONS","resource","scopes","read","write","admin","DEFAULT_DEBOUNCE_DURATION","ALL_ENVIRONMENTS_KEY","AVATAR_URL_MAP","sentryAppColor","sentryAppSimple","docIntegration","MENU_CLOSE_DELAY","DATA_CATEGORY_NAMES","DataCategory","NEGATION_OPERATOR","SEARCH_WILDCARD","MAX_AUTOCOMPLETE_RECENT_SEARCHES","MAX_AUTOCOMPLETE_RELEASES","DEFAULT_PER_PAGE","MAX_QUERY_LENGTH","process","FILTER_MASK","ORG_NOT_FOUND","ORG_NO_ACCESS","DISCOVER2_DOCS_URL","NODE_ENV","DISABLE_RR_WEB","SPA_DSN","SENTRY_RELEASE_VERSION","DEFAULT_ERROR_JSON","popularPlatformCategories","frontend","mobile","backend","serverless","desktop","categoryList","tracing","releaseHealth","filterAliases","native","d","IconDelete","IconDownload","IconEdit","IconInfo","IconQuestion","IconSearch","IconSort","rotated","IconUser","IconArrow","IconBell","IconBroadcast","IconChat","IconCommit","IconDashboard","IconDocs","IconExclamation","IconFile","IconFire","IconFix","IconFlag","IconGoogle","IconHappy","IconIssues","IconLab","IconLightning","IconList","IconLocation","IconMail","IconMarkdown","IconMegaphone","IconMeh","IconMobile","IconNext","IconOpen","IconPause","IconPlay","IconPrevious","IconPrint","IconProject","IconDiamond","IconReleases","IconSad","IconSentry","IconShow","IconSiren","IconSliders","IconSpan","IconStack","IconStats","IconSubtract","IconSupport","IconSync","IconTelescope","IconTerminal","IconToggle","IconUpgrade","providedColor","providedSize","viewBox","iconSizes","fill","callbackWithArgs","isFunction","PluginComponentBase","onLoad","onSave","successMessageTimeout","errorMessageTimeout","onLoadSuccess","onLoadError","onSaveSuccess","onSaveError","onSaveComplete","renderField","newProps","PluginSettings","trackIntegrationAnalytics","plugin","integration_type","view","already_installed","wasConfiguredOnPageLoad","fieldList","rawData","getPluginEndpoint","changeField","trackPluginEvent","repo","parseRepo","parsedFormData","config_error","authUrl","auth_url","encodeURIComponent","Flex","__all__","renderSettings","IssueActions","getFormData","getGroup","dependentFormValues","fromEntries","depends","fieldKey","option_field","setDependentFieldState","updateOptionsOfDependentField","formListKey","getFieldListKey","indexOfField","formDataKey","getFormDataKey","createIssue","linkIssue","unlinkIssue","createFormData","linkFormData","dependentFieldState","getProject","getOrganization","getFieldList","getPluginCreateEndpoint","getPluginLinkEndpoint","getPluginUnlinkEndpoint","defaultMessage","errorBody","createFieldList","linkFieldList","stale","impactedField","dependentField","resetOptionsOfDependentField","loadOptionsForDependentField","renderForm","getPluginConfigureUrl","error_type","has_auth_configured","required_auth_settings","setting","renderGroupActions","DefaultPlugin","SessionStackContextType","showIframe","domNode","parentNode","setIframeSize","parentWidth","clientWidth","playSession","session_url","sandbox","DefaultIssueActions","oldData","c","isRequired","requiredFields","optionalFields","PAGE_FIELD_LIST","Settings","DefaultSettings","ev","isConfigured","default_project","isLastPage","default_issue_type","default_priority","startEditing","back","showOnPremisesConfiguration","renderFields","filterFields","fieldNames","REQUIRED_FIELDS","onPremisesFields","ON_PREMISES_FIELDS","toggleOnPremisesConfiguration","contexts","registry","isLoaded","load","remainingAssets","assets","finishLoad","onAssetLoaded","onAssetFailed","asset","assetCache","cls","sessionstack","showAlert","PendingChangeQueue","getForItem","changes","changeId","listenables","pendingChanges","statuses","loadInitialData","itemsById","addStatus","clearStatus","hasStatus","indexOfActivity","addActivity","splice","updateActivity","removeActivity","pendingForId","rItem","getAllItemIds","pendingById","onAssignTo","_changeId","_data","onAssignToError","onAssignToSuccess","_itemIdsOrAll","onDeleteError","_response","onDeleteSuccess","onDiscard","onDiscardError","onDiscardSuccess","onMergeError","onMergeSuccess","mergedIds","mergedIdSet","merge","parent","onUpdateError","failSilently","onUpdateSuccess","onPopulateStats","groupStatsMap","onPopulateReleases","releaseData","DefaultPersistedStore","onboarding","DefaultLoadedPersistedStore","PersistedStoreContext","PersistedStoreProvider","shouldCancelRequest","Provider","usePersistedStoreCategory","persistInFlight","useContext","usePersistedStore","setCategoryState","endpointLocation","itemsBySlug","onStatsLoadSuccess","updatingItems","getBySlug","newProject","_err","getAll","records","prune","existingIds","getSelectedIds","numRecords","numSelected","toggleSelectAll","activatePanel","getState","keyframes","fadeOut","pulse","slideInUp","pink200","UserIdentityCategory","UserIdentityStatus","SavedSearchType","GroupActivityType","RepositoryStatus","SessionFieldWithOperation","SessionStatus","ReleaseStatus","ReleaseComparisonChartType","HealthStatsPeriodOption","SamplingConditionOperator","SamplingRuleOperator","SamplingInnerOperator","SamplingInnerName","LegacyBrowser","STACK_VIEW","STACK_TYPE","deep","arr","arrayIsEqual","isObject","obj","k","objectMatchesSubset","lastOfArray","objectIsEmpty","prop","trim","str","explodeSlug","nl2br","isUrl","escape","totalValue","toTitleCase","txt","charAt","substr","formatBytesBase10","bytes","u","units","threshold","maximumFractionDigits","formatBytesBase2","fixPoints","thresh","toFixed","getShortCommitHash","re","extractMultilineFields","split","convertMultilineFieldValue","projectDisplayCompare","a","b","localeCompare","sortProjects","buildUserId","buildTeamId","descopeFeatureName","pop","generateQueryWithTag","appendTagCondition","escapeDoubleQuotes","trackAnalyticsEventV2","trackAdhocEvent","logExperiment","metricDataStore","CAN_MARK","mark","measure","getEntriesByName","clearMeasures","noCleanup","endMarkName","startData","measurement","clearMarks","transactionDataStore","startTransaction","traceId","endTransaction","allEventMap","growthEventMap","issueEventMap","performanceEventMap","dashboardsEventMap","discoverEventMap","workflowEventMap","searchEventMap","settingsEventMap","coreUIEventMap","samplingEventMap","makeAnalyticsFunction","extraQueryString","URLSearchParams","getItem","DATETIME_QUERY_STRING_KEYS","EXTERNAL_QUERY_STRING_KEYS","isSortEqualToField","tableMeta","getSortKeyFromField","fieldToSort","kind","useFunctionFormat","fieldString","getAggregateAlias","getSortField","isFieldSortable","decodeFields","decodeList","widths","parsed","w","COL_WIDTH_UNDEFINED","fromSorts","sorts","parseSort","decodeSorts","encodeSort","encodeSorts","collectQueryStringByKey","needle","decodeQuery","queryParameter","decodeScalar","decodeTeam","decodeTeams","decodeProjects","queryStringFromSavedQuery","saved","validateTableMeta","equations","isEquation","currentSort","topEvents","createdBy","expired","additionalConditions","copy","MutableSearch","normalizeDateTimeParams","fromSavedQuery","getFields","TOP_N","fromLocation","isEqualTo","defaults","DisplayModes","currentValue","otherValue","dateTimeKeys","currentDateTime","othereDateTime","isSame","toNewQuery","getWidths","getPageFilters","getPageFiltersQuery","generateBlankQueryStringObject","output","generateQueryStringObject","getYAxis","cloneDeep","getEquations","getEquation","getAggregateFields","isAggregateField","isAggregateEquation","hasAggregateField","hasIdField","numOfColumns","getColumns","useFullEquationAsKey","decodeColumnOrder","getDays","statsPeriodToDays","withSorts","newEventView","withColumns","col","FieldValueKind","function","generateFieldAsString","existing","newSort","sortField","withNewColumn","newColumn","newField","withResizedColumn","columnIndex","newWidth","withUpdatedColumn","updatedColumn","columnToBeUpdated","fieldAsString","updatedField","needleSortIndex","needleSort","sum","currentField","sortableFieldIndex","fieldToBeSorted","withDeletedColumn","columnToBeDeleted","withTeams","getSorts","order","inputQuery","queryParts","getQueryWithAdditionalConditions","getFacetsAPIPayload","getEventsAPIPayload","normalizeDateSelection","picked","pickRelevantLocationQueryStrings","dateSelection","normalizedTimeWindowParams","eventQuery","getResultsViewShortUrlTarget","getPerformanceTransactionEventsViewUrlTarget","showTransactions","breakdown","webVital","sortForField","sortOnField","needleIndex","setSortOrder","reverseSort","getYAxisOptions","uniqBy","isLegalYAxisType","aggregateOutputType","CHART_AXIS_OPTIONS","defaultOption","getDisplayOptions","DISPLAY_MODE_OPTIONS","getDisplayMode","mode","displayOptions","cond","selectedOption","DISPLAY_MODE_FALLBACK_OPTIONS","conditions","filters","tagValues","existingTagValues","getFilterValues","newTagValues","tagValue","addFilterValues","formatString","isFieldsSimilar","currentEquations","otherEquations","currentFields","otherFields","isAPIPayloadSimilar","currentKeys","otherKeys","currentTarget","otherTarget","TOP_EVENT_MODES","TOP5","DAILYTOP5","DEFAULT","PREVIOUS","DAILY","WORLDMAP","BAR","MULTI_Y_AXIS_SUPPORTED_DISPLAY_MODES","recordAnalyticsFirstEvent","EventWaiter","firstIssue","pollHandler","pollingInterval","clearInterval","setInterval","pollInterval","isTombstone","getMessage","culprit","metadata","EventOrGroupType","getLocation","isNativePlatform","filename","getTreeLabelPartDetails","part","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","labelPart","grouping","customTitle","subtitle","isMobilePlatform","directive","uri","getShortEventId","eventId","userDisplayName","includeEmail","rawVersion","withPackage","parsedVersion","Release","versionToDisplay","describe","roundWithFixed","fixedDigits","MONTH","WEEK","DAY","HOUR","MINUTE","SECOND","abbreviation","msValue","abs","getExactDuration","convertDuration","secs","abbr","divideBy","quotient","ceil","floor","remainder","formatFloat","number","places","pow","formatPercentage","numberFormats","lookup","suffixNum","shortValue","fitsBound","getUpdateSdkContent","newSdkVersion","titleData","sdkUrl","newSdkName","integrationUrl","integrationName","getTitleData","enables","alertContent","subSuggestion","subSuggestionContent","integrationEventMap","mapValuesFn","analyticsParams","fullParams","integration_status","generateFeaturesList","defaultFeatureGateComponents","IntegrationFeatures","ungatedFeatures","gatedFeatureGroups","FeatureList","getIntegrationFeatureGate","getSentryAppInstallStatus","install","getCategories","featureGate","getCategoriesForIntegration","isSentryApp","featureData","isPlugin","featureDescriptions","isDocIntegration","uuid","isExternalActorMapping","mapping","convertIntegrationTypeToSnakeCase","safeGetQsParam","param","getIntegrationIcon","integrationType","iconSize","platformToIntegrationMap","getAlertText","integrations","isSlackIntegrationUpToDate","getExternalActorEndpointDetails","baseEndpoint","isValidMapping","sentryNameToOption","getPerformanceTransaction","PerformanceInteraction","phase","actualDuration","timestampWithMs","startChild","startTimestamp","endTimestamp","interactionTransaction","timeout","immediate","currentIdleTransaction","finishInteraction","txn","interactionTimeoutId","captureMessage","LongTaskObserver","longTaskCount","n","observer","disconnect","observe","entryTypes","PerformanceObserver","browserPerformanceTimeOrigin","timeOrigin","perfEntries","getEntries","lastTransaction","setLongTaskTags","entry","startSeconds","captureException","CustomerProfiler","VisuallyCompleteWithData","isVisuallyCompleteSet","isDataCompleteSet","startPerformanceObserver","isVCDSet","registerBeforeFinishCallback","setMeasurement","measureName","measureEntry","lcp","_measurements","addQueryParamsToExistingUrl","origUrl","searchEntries","parse","protocol","host","unwrapped","decodeInteger","isFinite","navigate","navigator","useRouteContext","hasMountedRef","go","useNavigate","store","excess","maxLength","words","getLength","cur","debt","toTrimFromLeftWord","leftWordLength","leftWord","rightWordLength","rightWord","matchMedia","mounted","mql","addListener","removeListener","RouteContext","lastLocation","shouldDisable","scrollTo","uuidPattern","getUsername","isManaged","ComponentWithTags","TagStore","users","MemberListStore","setAssigned","usernames","teamnames","allAssigned","assigned","bookmarks","assigned_or_suggested","unsubscribeTeam","unsubscribeTags","storeTags","unsubscribeMembers","orgSdkUpdates","loadSuccess","getUpdates","isSdkUpdatesLoaded","WithProjectSdkSuggestions","SdkUpdatesStore","onSdkUpdatesUpdate","loadSdkUpdates","AlertMessage","StyledCloseButton","SystemAlerts","BODY_CLASSES","AuthContainer","AuthPanel","AuthSidebar","SentryButton","MAX_WIDGETS","DEFAULT_TABLE_LIMIT","DisplayType","WidgetType","DashboardState","DashboardWidgetSource","DEFAULT_EVENT_VIEW","TRANSACTION_VIEWS","WEB_VITALS_VIEWS","ALL_VIEWS","handleCreateQuery","eventView","isNewQuery","getAnalyticsCreateEventKeyName","extractAnalyticsQueryFields","savedQuery","EVENT_NAME_EXISTING_MAP","failed","EVENT_NAME_NEW_MAP","handleUpdateQuery","handleUpdateQueryName","_saved","handleDeleteQuery","displayModeToDisplayType","displayMode","ReviewAction","Placeholder","PlaceholderImage","congratsRobotsPlaceholder","CongratsRobotsVideo","NoUnresolvedIssues","NoGroupsHandler","fetchingSentFirstEvent","sentFirstEvent","firstEventProjects","fetchSentFirstEvent","_isMounted","firstEventQuery","projectsQuery","is_member","renderAwaitingEvents","sampleIssueId","ErrorRobot","gradient","renderEmpty","SEARCH_ITEMS","ItemType","IssueListSearchBar","defaultSearchItems","recentSearches","getRecentSearches","recent","fetchRecentSearches","pinnedSearch","searchSource","hasRecentSearches","maxSearchItems","savedSearchType","onGetTagValues","getTagValues","onSavedRecentSearch","handleSavedRecentSearch","actionBarItems","makePinSearchAction","makeSaveSearchAction","makeSearchBuilderAction","IntegrationMultiSelect","selectedIntegrationSet","IntegrationItem","selectIntegration","ClearButton","removeIntegration","muted"],"sourceRoot":""}