{"version":3,"file":"chunks/app_components_alertLink_tsx-app_components_events_eventEntries_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/actions/menuItemActionLink.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/components/events/contexts/app/types.tsx","webpack:///./app/components/events/contexts/app/getAppKnownDataDetails.tsx","webpack:///./app/components/events/contexts/app/getAppKnownData.tsx","webpack:///./app/components/events/contexts/app/app.tsx","webpack:///./app/components/events/contexts/browser/types.tsx","webpack:///./app/components/events/contexts/browser/getBrowserKnownDataDetails.tsx","webpack:///./app/components/events/contexts/browser/getBrowserKnownData.tsx","webpack:///./app/components/events/contexts/browser/browser.tsx","webpack:///./app/components/events/contexts/contextBlock.tsx","webpack:///./app/components/events/contexts/default.tsx","webpack:///./app/components/events/contexts/device/types.tsx","webpack:///./app/components/events/contexts/device/utils.tsx","webpack:///./app/components/events/contexts/device/getDeviceKnownDataDetails.tsx","webpack:///./app/components/events/contexts/device/getDeviceKnownData.tsx","webpack:///./app/components/events/contexts/device/device.tsx","webpack:///./app/components/events/contexts/getUnknownData.tsx","webpack:///./app/components/events/contexts/gpu/types.tsx","webpack:///./app/components/events/contexts/gpu/getGPUKnownDataDetails.tsx","webpack:///./app/components/events/contexts/gpu/formatMemory.tsx","webpack:///./app/components/events/contexts/gpu/getGPUKnownData.tsx","webpack:///./app/components/events/contexts/gpu/gpu.tsx","webpack:///./app/components/events/contexts/operatingSystem/types.tsx","webpack:///./app/components/events/contexts/operatingSystem/getOperatingSystemKnownDataDetails.tsx","webpack:///./app/components/events/contexts/operatingSystem/getOperatingSystemKnownData.tsx","webpack:///./app/components/events/contexts/operatingSystem/operatingSystem.tsx","webpack:///./app/components/events/contexts/redux.tsx","webpack:///./app/components/events/contexts/runtime/types.tsx","webpack:///./app/components/events/contexts/runtime/getRuntimeKnownDataDetails.tsx","webpack:///./app/components/events/contexts/runtime/getRuntimeKnownData.tsx","webpack:///./app/components/events/contexts/runtime/runtime.tsx","webpack:///./app/components/events/contexts/state.tsx","webpack:///./app/components/events/contexts/trace/types.tsx","webpack:///./app/components/events/contexts/trace/getTraceKnownDataDetails.tsx","webpack:///./app/components/events/contexts/trace/getTraceKnownData.tsx","webpack:///./app/components/events/contexts/trace/trace.tsx","webpack:///./app/components/events/contexts/user/types.tsx","webpack:///./app/components/events/contexts/user/getUserKnownDataDetails.tsx","webpack:///./app/components/events/contexts/user/getUserKnownData.tsx","webpack:///./app/components/events/contexts/user/user.tsx","webpack:///./app/components/events/contexts/utils.tsx","webpack:///./app/components/events/eventAttachmentActions.tsx","webpack:///./app/components/events/contexts/chunk.tsx","webpack:///./app/components/events/contexts/index.tsx","webpack:///./app/components/events/contextSummary/item.tsx","webpack:///./app/components/events/contextSummary/contextSummaryNoSummary.tsx","webpack:///./app/components/events/contextSummary/generateClassName.tsx","webpack:///./app/components/events/contextSummary/contextSummaryDevice.tsx","webpack:///./app/components/events/contextSummary/contextSummaryGeneric.tsx","webpack:///./app/components/events/contextSummary/contextSummaryGPU.tsx","webpack:///./app/components/events/contextSummary/contextSummaryOS.tsx","webpack:///./app/components/events/contextSummary/contextSummaryUser.tsx","webpack:///./app/components/events/contextSummary/filterContexts.tsx","webpack:///./app/components/events/contextSummary/index.tsx","webpack:///./app/components/events/device.tsx","webpack:///./app/constants/eventErrors.tsx","webpack:///./app/components/events/errorItem.tsx","webpack:///./app/components/events/errors.tsx","webpack:///./app/components/events/attachmentViewers/utils.tsx","webpack:///./app/components/events/attachmentViewers/imageViewer.tsx","webpack:///./app/components/events/attachmentViewers/previewPanelItem.tsx","webpack:///./app/components/events/attachmentViewers/jsonViewer.tsx","webpack:///./app/components/events/attachmentViewers/logFileViewer.tsx","webpack:///./app/components/events/attachmentViewers/rrwebJsonViewer.tsx","webpack:///./app/components/events/eventAttachmentsCrashReportsNotice.tsx","webpack:///./app/components/events/eventAttachments.tsx","webpack:///./app/components/events/eventCause.tsx","webpack:///./app/components/events/eventCauseEmpty.tsx","webpack:///./app/components/events/eventExtraData/types.tsx","webpack:///./app/components/events/eventExtraData/getEventExtraDataKnownDataDetails.tsx","webpack:///./app/components/events/eventExtraData/getEventExtraDataKnownData.tsx","webpack:///./app/components/events/eventExtraData/eventDataContent.tsx","webpack:///./app/components/events/eventExtraData/eventExtraData.tsx","webpack:///./app/components/events/meta/metaData.tsx","webpack:///./app/components/events/meta/annotated.tsx","webpack:///./app/components/events/eventSdk.tsx","webpack:///./app/components/events/eventTags/eventTags.tsx","webpack:///./app/components/events/packageData.tsx","webpack:///./app/components/events/rrwebIntegration.tsx","webpack:///./app/components/events/sdkUpdates/index.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/getThreadException.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/level.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/category.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/summary.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/default.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/exception.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/http.tsx","webpack:///./app/utils/useSessionStorage.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/linkedEvent.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/data/index.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/time/utils.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/time/index.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumb/index.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/breadcrumbs.tsx","webpack:///./app/components/events/interfaces/breadcrumbs/index.tsx","webpack:///./app/components/events/interfaces/csp/content.tsx","webpack:///./app/components/events/interfaces/csp/help/effectiveDirectives.tsx","webpack:///./app/components/events/interfaces/csp/help/index.tsx","webpack:///./app/components/events/interfaces/csp/index.tsx","webpack:///./app/components/debugFileFeature.tsx","webpack:///./app/components/events/interfaces/debugMeta/debugImage.tsx","webpack:///./app/components/events/interfaces/debugMeta/imageForBar.tsx","webpack:///./app/components/events/interfaces/debugMeta/index.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImage/status.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/layout.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImage/index.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/index.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/mechanism.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/stackTrace.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/title.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/content.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/rawContent.tsx","webpack:///./app/components/events/interfaces/crashContent/exception/index.tsx","webpack:///./app/components/events/interfaces/crashContent/stackTrace/index.tsx","webpack:///./app/components/events/interfaces/crashContent/index.tsx","webpack:///./app/components/events/interfaces/crashHeader/crashActions.tsx","webpack:///./app/components/events/interfaces/crashHeader/crashTitle.tsx","webpack:///./app/components/events/interfaces/exception.tsx","webpack:///./app/components/events/interfaces/noStackTraceMessage.tsx","webpack:///./app/components/events/interfaces/exceptionV2.tsx","webpack:///./app/components/events/interfaces/generic.tsx","webpack:///./app/components/events/interfaces/message.tsx","webpack:///./app/components/events/interfaces/richHttpContent/getTransformedData.tsx","webpack:///./app/components/events/interfaces/richHttpContent/richHttpContentClippedBoxBodySection.tsx","webpack:///./app/components/events/interfaces/richHttpContent/richHttpContentClippedBoxKeyValueList.tsx","webpack:///./app/components/events/interfaces/richHttpContent/richHttpContent.tsx","webpack:///./app/components/events/interfaces/request.tsx","webpack:///./app/components/events/interfaces/stackTrace.tsx","webpack:///./app/components/events/interfaces/stackTraceV2.tsx","webpack:///./app/components/events/interfaces/template.tsx","webpack:///./app/components/events/interfaces/threads/content.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/getRelevantFrame.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/filterThreadInfo.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/trimFilename.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/styles.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/header.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/option.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/selectedOption.tsx","webpack:///./app/components/events/interfaces/threads/threadSelector/index.tsx","webpack:///./app/components/events/interfaces/threads/index.tsx","webpack:///./app/components/events/interfaces/threadsV2.tsx","webpack:///./app/components/events/eventEntry.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/dataSection.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/screenshot/imageVisualization.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/screenshot/modal.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/screenshot/index.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/tagsHighlight.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/tags.tsx","webpack:///./app/components/events/eventTagsAndScreenshot/index.tsx","webpack:///./app/components/events/eventEntries.tsx","webpack:///./app/components/events/interfaces/crashContent/stackTrace/rawContent.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImage/processingIcon.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImage/processings.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/processing/item.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/processing/list.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/utils.tsx","webpack:///./app/components/events/interfaces/searchBarAction.tsx","webpack:///./app/components/events/userFeedback.tsx","webpack:///./app/components/notAvailable.tsx","webpack:///./app/types/debugImage.tsx","webpack:///./app/utils/attachmentUrl.tsx","webpack:///./app/actions/committerActions.tsx","webpack:///./app/stores/committerStore.tsx","webpack:///./app/utils/useCommitters.tsx","webpack:///./app/actionCreators/committers.tsx","webpack:///./app/views/organizationGroupDetails/groupEventAttachments/groupEventAttachmentsFilter.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.availableRoles)) {\n    return false;\n  }\n\n  const roleIds = organization.availableRoles.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.role ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.role ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import styled from '@emotion/styled';\n\nimport ActionLink from 'sentry/components/actions/actionLink';\nimport MenuItem from 'sentry/components/menuItem';\n\nfunction MenuItemActionLink({\n  className,\n  ...props\n}: React.ComponentProps<typeof ActionLink>) {\n  return (\n    <MenuItem noAnchor withBorder disabled={props.disabled} className={className}>\n      <InnerActionLink {...props} />\n    </MenuItem>\n  );\n}\nconst InnerActionLink = styled(ActionLink)`\n  color: ${p => p.theme.textColor};\n  ${p => p.theme.overflowEllipsis}\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n\n  .dropdown-menu > li > &,\n  .dropdown-menu > span > li > & {\n    &.disabled:hover {\n      background: ${p => p.theme.background};\n    }\n  }\n`;\n\nexport default MenuItemActionLink;\n","import styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  children?: React.ReactNode;\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  openInNewTab: boolean;\n  priority: Priority;\n  size: Size;\n  withoutMarginBottom: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & Partial<DefaultProps> & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nfunction AlertLink({\n  size = 'normal',\n  priority = 'warning',\n  icon,\n  children,\n  onClick,\n  withoutMarginBottom = false,\n  openInNewTab = false,\n  to,\n  href,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  return (\n    <StyledLink\n      data-test-id={dataTestId}\n      to={to}\n      href={href}\n      onClick={onClick}\n      size={size}\n      priority={priority}\n      withoutMarginBottom={withoutMarginBottom}\n      openInNewTab={openInNewTab}\n    >\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      <AlertLinkText>{children}</AlertLinkText>\n      <IconLink>\n        <IconChevron direction=\"right\" />\n      </IconLink>\n    </StyledLink>\n  );\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  align-items: center;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  height: calc(${p => p.theme.fontSizeMedium} * ${p => p.theme.text.lineHeightBody});\n  margin-right: ${space(1)};\n  align-items: center;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin-right: 0;\n  margin-left: ${space(1)};\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: ${p => p.theme.text.lineHeightBody};\n  flex-grow: 1;\n`;\n","export enum AppKnownDataType {\n  ID = 'app_id',\n  START_TIME = 'app_start_time',\n  DEVICE_HASH = 'device_app_hash',\n  TYPE = 'build_type',\n  IDENTIFIER = 'app_identifier',\n  NAME = 'app_name',\n  VERSION = 'app_version',\n  BUILD = 'app_build',\n}\n\nexport type AppData = {\n  type: string;\n  app_build?: string;\n  app_id?: string;\n  app_identifier?: string;\n  app_name?: string;\n  app_start_time?: string;\n  app_version?: string;\n  build_type?: string;\n  device_app_hash?: string;\n};\n","import {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\nimport {getRelativeTimeFromEventDateCreated} from '../utils';\n\nimport {AppData, AppKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value?: React.ReactNode;\n};\n\nfunction getAppKnownDataDetails(\n  event: Event,\n  data: AppData,\n  type: AppKnownDataType\n): Output {\n  switch (type) {\n    case AppKnownDataType.ID:\n      return {\n        subject: t('ID'),\n        value: data.app_id,\n      };\n    case AppKnownDataType.START_TIME:\n      return {\n        subject: t('Start Time'),\n        value: getRelativeTimeFromEventDateCreated(\n          event.dateCreated ? event.dateCreated : event.dateReceived,\n          data.app_start_time\n        ),\n      };\n    case AppKnownDataType.DEVICE_HASH:\n      return {\n        subject: t('Device'),\n        value: data.device_app_hash,\n      };\n    case AppKnownDataType.TYPE:\n      return {\n        subject: t('Build Type'),\n        value: data.build_type,\n      };\n    case AppKnownDataType.IDENTIFIER:\n      return {\n        subject: t('Build ID'),\n        value: data.app_identifier,\n      };\n    case AppKnownDataType.NAME:\n      return {\n        subject: t('Build Name'),\n        value: data.app_name,\n      };\n    case AppKnownDataType.VERSION:\n      return {\n        subject: t('Version'),\n        value: data.app_version,\n      };\n    case AppKnownDataType.BUILD:\n      return {\n        subject: t('App Build'),\n        value: data.app_build,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type],\n      };\n  }\n}\n\nexport default getAppKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport getAppKnownDataDetails from './getAppKnownDataDetails';\nimport {AppData, AppKnownDataType} from './types';\n\nfunction getAppKnownData(\n  event: Event,\n  data: AppData,\n  appKnownDataValues: Array<AppKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = appKnownDataValues.filter(appKnownDataValue =>\n    defined(data[appKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getAppKnownDataDetails(event, data, key as AppKnownDataType);\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getAppKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport {Event} from 'sentry/types/event';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getAppKnownData from './getAppKnownData';\nimport {AppData, AppKnownDataType} from './types';\n\ntype Props = {\n  data: AppData;\n  event: Event;\n};\n\nconst appKnownDataValues = [\n  AppKnownDataType.ID,\n  AppKnownDataType.START_TIME,\n  AppKnownDataType.DEVICE_HASH,\n  AppKnownDataType.IDENTIFIER,\n  AppKnownDataType.NAME,\n  AppKnownDataType.VERSION,\n  AppKnownDataType.BUILD,\n];\n\nconst appIgnoredDataValues = [];\n\nconst App = ({data, event}: Props) => (\n  <Fragment>\n    <ContextBlock data={getAppKnownData(event, data, appKnownDataValues)} />\n    <ContextBlock\n      data={getUnknownData(data, [...appKnownDataValues, ...appIgnoredDataValues])}\n    />\n  </Fragment>\n);\n\nexport default App;\n","export enum BrowserKnownDataType {\n  NAME = 'name',\n  VERSION = 'version',\n}\n\nexport type BrowserKnownData = {\n  name: string;\n  version: string;\n};\n","import {t} from 'sentry/locale';\n\nimport {BrowserKnownData, BrowserKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value: React.ReactNode | null;\n};\n\nfunction getOperatingSystemKnownDataDetails(\n  data: BrowserKnownData,\n  type: BrowserKnownDataType\n): Output {\n  switch (type) {\n    case BrowserKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case BrowserKnownDataType.VERSION:\n      return {\n        subject: t('Version'),\n        value: `${data.version}`,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type] || null,\n      };\n  }\n}\n\nexport default getOperatingSystemKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getBrowserKnownDataDetails from './getBrowserKnownDataDetails';\nimport {BrowserKnownData, BrowserKnownDataType} from './types';\n\nfunction getBrowserKnownData(\n  data: BrowserKnownData,\n  operatingSystemKnownDataValues: Array<BrowserKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = operatingSystemKnownDataValues.filter(operatingSystemKnownDataValue =>\n    defined(data[operatingSystemKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getBrowserKnownDataDetails(\n      data,\n      key as BrowserKnownDataType\n    );\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getBrowserKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getBrowserKnownData from './getBrowserKnownData';\nimport {BrowserKnownData, BrowserKnownDataType} from './types';\n\ntype Props = {\n  data: BrowserKnownData;\n};\n\nconst browserKnownDataValues = [BrowserKnownDataType.NAME, BrowserKnownDataType.VERSION];\n\nconst Browser = ({data}: Props) => (\n  <Fragment>\n    <ContextBlock data={getBrowserKnownData(data, browserKnownDataValues)} />\n    <ContextBlock data={getUnknownData(data, [...browserKnownDataValues])} />\n  </Fragment>\n);\n\nexport default Browser;\n","import ErrorBoundary from 'sentry/components/errorBoundary';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {KeyValueListData} from 'sentry/types';\n\ntype Props = {\n  data: KeyValueListData;\n  raw?: boolean;\n};\n\nconst ContextBlock = ({data, raw = false}: Props) => {\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <ErrorBoundary mini>\n      <KeyValueList data={data} raw={raw} isContextData />\n    </ErrorBoundary>\n  );\n};\n\nexport default ContextBlock;\n","import startCase from 'lodash/startCase';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  alias: string;\n  data: Record<string, React.ReactNode | undefined>;\n  event: Event;\n};\n\nfunction getKnownData(data: Props['data']) {\n  return Object.entries(data)\n    .filter(([k]) => k !== 'type' && k !== 'title')\n    .map(([key, value]) => ({\n      key,\n      subject: startCase(key),\n      value,\n    }));\n}\n\nconst DefaultContextType = ({data}: Props) => <ContextBlock data={getKnownData(data)} />;\n\nexport default DefaultContextType;\n","export enum DeviceKnownDataType {\n  ARCH = 'arch',\n  ARCHS = 'archs',\n  BATTERY_LEVEL = 'battery_level',\n  BATTERY_STATUS = 'battery_status',\n  BRAND = 'brand',\n  BOOT_TIME = 'boot_time',\n  CONNECTION_TYPE = 'connection_type',\n  CHARGING = 'charging',\n  CPU_DESCRIPTION = 'cpu_description',\n  DEVICE_TYPE = 'device_type',\n  EXTERNAL_STORAGE_SIZE = 'external_storage_size',\n  EXTERNAL_FREE_STORAGE = 'external_free_storage',\n  FAMILY = 'family',\n  FREE_STORAGE = 'free_storage',\n  FREE_MEMORY = 'free_memory',\n  ID = 'id',\n  LANGUAGE = 'language',\n  LOW_MEMORY = 'low_memory',\n  MANUFACTURER = 'manufacturer',\n  MODEL = 'model',\n  MODEL_ID = 'model_id',\n  MEMORY = 'memory',\n  MEMORY_SIZE = 'memory_size',\n  NAME = 'name',\n  ONLINE = 'online',\n  ORIENTATION = 'orientation',\n  RENDERED_MODEL = 'renderedModel',\n  SIMULATOR = 'simulator',\n  SCREEN_DENSITY = 'screen_density',\n  SCREEN_DPI = 'screen_dpi',\n  SCREEN_HEIGHT_PIXELS = 'screen_height_pixels',\n  SCREEN_RESOLUTION = 'screen_resolution',\n  SCREEN_WIDTH_PIXELS = 'screen_width_pixels',\n  STORAGE_SIZE = 'storage_size',\n  STORAGE = 'storage',\n  TIMEZONE = 'timezone',\n  USABLE_MEMORY = 'usable_memory',\n}\n\n// TODO(ts): add correct types\nexport type DeviceData = {\n  device_type: string;\n  name: string;\n  arch?: string;\n  archs?: Array<string>;\n  battery_level?: number;\n  battery_status?: string;\n  boot_time?: string;\n  brand?: string;\n  charging?: boolean;\n  connection_type?: any;\n  cpu_description?: string;\n  external_free_storage?: number;\n  external_storage_size?: number;\n  family?: string;\n  free_memory?: number;\n  free_storage?: number;\n  id?: any;\n  language?: any;\n  low_memory?: boolean;\n  manufacturer?: string;\n  memory?: any;\n  memory_size?: number;\n  model?: string;\n  model_id?: string;\n  online?: boolean;\n  orientation?: string;\n  renderedModel?: any;\n  screen_density?: number;\n  screen_dpi?: number;\n  screen_height_pixels?: number;\n  screen_resolution?: string;\n  screen_width_pixels?: number;\n  simulator?: boolean;\n  storage?: any;\n  storage_size?: number;\n  timezone?: string;\n  type?: string;\n  usable_memory?: number;\n};\n","import {defined, formatBytesBase2} from 'sentry/utils';\n\nimport {DeviceData, DeviceKnownDataType} from './types';\n\nexport function formatMemory(\n  memory_size: number,\n  free_memory: number,\n  usable_memory: number\n) {\n  if (\n    !Number.isInteger(memory_size) ||\n    memory_size <= 0 ||\n    !Number.isInteger(free_memory) ||\n    free_memory <= 0\n  ) {\n    return null;\n  }\n\n  let memory = `Total: ${formatBytesBase2(memory_size)} / Free: ${formatBytesBase2(\n    free_memory\n  )}`;\n  if (Number.isInteger(usable_memory) && usable_memory > 0) {\n    memory = `${memory} / Usable: ${formatBytesBase2(usable_memory)}`;\n  }\n\n  return memory;\n}\n\nexport function formatStorage(\n  storage_size: number,\n  free_storage: number,\n  external_storage_size: number,\n  external_free_storage: number\n) {\n  if (!Number.isInteger(storage_size) || storage_size <= 0) {\n    return null;\n  }\n\n  let storage = `Total: ${formatBytesBase2(storage_size)}`;\n  if (Number.isInteger(free_storage) && free_storage > 0) {\n    storage = `${storage} / Free: ${formatBytesBase2(free_storage)}`;\n  }\n\n  if (\n    Number.isInteger(external_storage_size) &&\n    external_storage_size > 0 &&\n    Number.isInteger(external_free_storage) &&\n    external_free_storage > 0\n  ) {\n    storage = `${storage} (External Total: ${formatBytesBase2(\n      external_storage_size\n    )} / Free: ${formatBytesBase2(external_free_storage)})`;\n  }\n\n  return storage;\n}\n\n// List of common display resolutions taken from the source: https://en.wikipedia.org/wiki/Display_resolution#Common_display_resolutions\nexport const commonDisplayResolutions = {\n  '640x360': 'nHD',\n  '800x600': 'SVGA',\n  '1024x768': 'XGA',\n  '1280x720': 'WXGA',\n  '1280x800': 'WXGA',\n  '1280x1024': 'SXGA',\n  '1360x768': 'HD',\n  '1366x768': 'HD',\n  '1440x900': 'WXGA+',\n  '1536x864': 'NA',\n  '1600x900': 'HD+',\n  '1680x1050': 'WSXGA+',\n  '1920x1080': 'FHD',\n  '1920x1200': 'WUXGA',\n  '2048x1152': 'QWXGA',\n  '2560x1080': 'N/A',\n  '2560x1440': 'QHD',\n  '3440x1440': 'N/A',\n  '3840x2160': '4K UHD',\n};\n\nexport function getInferredData(data: DeviceData) {\n  const screenResolution = data[DeviceKnownDataType.SCREEN_RESOLUTION];\n  const screenWidth = data[DeviceKnownDataType.SCREEN_WIDTH_PIXELS];\n  const screenHeight = data[DeviceKnownDataType.SCREEN_HEIGHT_PIXELS];\n\n  if (screenResolution) {\n    const displayResolutionDescription = commonDisplayResolutions[screenResolution];\n\n    const commonData = {\n      ...data,\n      [DeviceKnownDataType.SCREEN_RESOLUTION]: displayResolutionDescription\n        ? `${screenResolution} (${displayResolutionDescription})`\n        : screenResolution,\n    };\n\n    if (!defined(screenWidth) && !defined(screenHeight)) {\n      const [width, height] = screenResolution.split('x');\n\n      if (width && height) {\n        return {\n          ...commonData,\n          [DeviceKnownDataType.SCREEN_WIDTH_PIXELS]: Number(width),\n          [DeviceKnownDataType.SCREEN_HEIGHT_PIXELS]: Number(height),\n        };\n      }\n    }\n\n    return commonData;\n  }\n\n  if (defined(screenWidth) && defined(screenHeight)) {\n    const displayResolution = `${screenWidth}x${screenHeight}`;\n    const displayResolutionDescription = commonDisplayResolutions[displayResolution];\n\n    return {\n      ...data,\n      [DeviceKnownDataType.SCREEN_RESOLUTION]: displayResolutionDescription\n        ? `${displayResolution} (${displayResolutionDescription})`\n        : displayResolution,\n    };\n  }\n\n  return data;\n}\n","import {DeviceName} from 'sentry/components/deviceName';\nimport FileSize from 'sentry/components/fileSize';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport {getFullLanguageDescription, getRelativeTimeFromEventDateCreated} from '../utils';\n\nimport {DeviceData, DeviceKnownDataType} from './types';\nimport {formatMemory, formatStorage} from './utils';\n\ntype Output = {\n  subject: string;\n  value?: React.ReactNode;\n};\n\nfunction getDeviceKnownDataDetails(\n  event: Event,\n  data: DeviceData,\n  type: DeviceKnownDataType\n): Output {\n  switch (type) {\n    case DeviceKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case DeviceKnownDataType.FAMILY:\n      return {\n        subject: t('Family'),\n        value: data.family,\n      };\n    case DeviceKnownDataType.MODEL_ID:\n      return {\n        subject: t('Model Id'),\n        value: data.model_id,\n      };\n    case DeviceKnownDataType.MODEL:\n      return {\n        subject: t('Model'),\n        value:\n          typeof data.model === 'string' ? (\n            <DeviceName\n              value={`${data.model} ${data?.model_id ? `(${data.model_id})` : ''}`}\n            />\n          ) : undefined,\n      };\n    case DeviceKnownDataType.RENDERED_MODEL:\n      return {\n        subject: t('Rendered Model'),\n        value: data.renderedModel,\n      };\n    case DeviceKnownDataType.CPU_DESCRIPTION:\n      return {\n        subject: t('CPU Description'),\n        value: data.cpu_description,\n      };\n    case DeviceKnownDataType.ARCH:\n      return {\n        subject: t('Architecture'),\n        value: data.arch,\n      };\n    case DeviceKnownDataType.BATTERY_LEVEL:\n      return {\n        subject: t('Battery Level'),\n        value: defined(data.battery_level) ? `${data.battery_level}%` : undefined,\n      };\n    case DeviceKnownDataType.BATTERY_STATUS:\n      return {\n        subject: t('Battery Status'),\n        value: data.battery_status,\n      };\n    case DeviceKnownDataType.ORIENTATION:\n      return {\n        subject: t('Orientation'),\n        value: data.orientation,\n      };\n    case DeviceKnownDataType.MEMORY:\n      const {memory_size, free_memory, usable_memory} = data;\n      return {\n        subject: t('Memory'),\n        value:\n          memory_size && free_memory && usable_memory\n            ? formatMemory(memory_size, free_memory, usable_memory)\n            : undefined,\n      };\n    case DeviceKnownDataType.STORAGE:\n      const {storage_size, free_storage, external_storage_size, external_free_storage} =\n        data;\n      return {\n        subject: t('Capacity'),\n        value:\n          storage_size && free_storage && external_storage_size && external_free_storage\n            ? formatStorage(\n                storage_size,\n                free_storage,\n                external_storage_size,\n                external_free_storage\n              )\n            : undefined,\n      };\n    case DeviceKnownDataType.FREE_STORAGE: {\n      return {\n        subject: t('Free Storage'),\n        value: data.free_storage ? <FileSize bytes={data.free_storage} /> : undefined,\n      };\n    }\n    case DeviceKnownDataType.STORAGE_SIZE: {\n      return {\n        subject: t('Storage Size'),\n        value: data.storage_size ? <FileSize bytes={data.storage_size} /> : undefined,\n      };\n    }\n    case DeviceKnownDataType.EXTERNAL_STORAGE_SIZE: {\n      return {\n        subject: t('External Storage Size'),\n        value: data.external_storage_size ? (\n          <FileSize bytes={data.external_storage_size} />\n        ) : undefined,\n      };\n    }\n    case DeviceKnownDataType.EXTERNAL_FREE_STORAGE: {\n      return {\n        subject: t('External Free Storage'),\n        value: data.external_free_storage ? (\n          <FileSize bytes={data.external_free_storage} />\n        ) : undefined,\n      };\n    }\n    case DeviceKnownDataType.SIMULATOR:\n      return {\n        subject: t('Simulator'),\n        value: data.simulator,\n      };\n    case DeviceKnownDataType.BOOT_TIME:\n      return {\n        subject: t('Boot Time'),\n        value: getRelativeTimeFromEventDateCreated(\n          event.dateCreated ? event.dateCreated : event.dateReceived,\n          data.boot_time\n        ),\n      };\n    case DeviceKnownDataType.TIMEZONE:\n      return {\n        subject: t('Timezone'),\n        value: data.timezone,\n      };\n    case DeviceKnownDataType.DEVICE_TYPE:\n      return {\n        subject: t('Device Type'),\n        value: data.device_type,\n      };\n    case DeviceKnownDataType.ARCHS:\n      return {\n        subject: t('Architectures'),\n        value: data.archs,\n      };\n    case DeviceKnownDataType.BRAND:\n      return {\n        subject: t('Brand'),\n        value: data.brand,\n      };\n    case DeviceKnownDataType.CHARGING:\n      return {\n        subject: t('Charging'),\n        value: data.charging,\n      };\n    case DeviceKnownDataType.CONNECTION_TYPE:\n      return {\n        subject: t('Connection Type'),\n        value: data.connection_type,\n      };\n    case DeviceKnownDataType.ID:\n      return {\n        subject: t('Id'),\n        value: data.id,\n      };\n    case DeviceKnownDataType.LANGUAGE:\n      return {\n        subject: t('Language'),\n        value: getFullLanguageDescription(data.language),\n      };\n    case DeviceKnownDataType.LOW_MEMORY:\n      return {\n        subject: t('Low Memory'),\n        value: data.low_memory,\n      };\n    case DeviceKnownDataType.FREE_MEMORY:\n      return {\n        subject: t('Free Memory'),\n        value: data.free_memory ? <FileSize bytes={data.free_memory} /> : undefined,\n      };\n    case DeviceKnownDataType.MEMORY_SIZE:\n      return {\n        subject: t('Memory Size'),\n        value: data.memory_size ? <FileSize bytes={data.memory_size} /> : undefined,\n      };\n    case DeviceKnownDataType.USABLE_MEMORY:\n      return {\n        subject: t('Usable Memory'),\n        value: data.usable_memory ? <FileSize bytes={data.usable_memory} /> : undefined,\n      };\n    case DeviceKnownDataType.MANUFACTURER:\n      return {\n        subject: t('Manufacturer'),\n        value: data.manufacturer,\n      };\n    case DeviceKnownDataType.ONLINE:\n      return {\n        subject: t('Online'),\n        value: data.online,\n      };\n    case DeviceKnownDataType.SCREEN_DENSITY:\n      return {\n        subject: t('Screen Density'),\n        value: data.screen_density,\n      };\n    case DeviceKnownDataType.SCREEN_DPI:\n      return {\n        subject: t('Screen DPI'),\n        value: data.screen_dpi,\n      };\n    case DeviceKnownDataType.SCREEN_HEIGHT_PIXELS:\n      return {\n        subject: t('Screen Height Pixels'),\n        value: data.screen_height_pixels,\n      };\n    case DeviceKnownDataType.SCREEN_RESOLUTION:\n      return {\n        subject: t('Screen Resolution'),\n        value: data.screen_resolution,\n      };\n    case DeviceKnownDataType.SCREEN_WIDTH_PIXELS:\n      return {\n        subject: t('Screen Width Pixels'),\n        value: data.screen_width_pixels,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type],\n      };\n  }\n}\n\nexport default getDeviceKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport getDeviceKnownDataDetails from './getDeviceKnownDataDetails';\nimport {DeviceData, DeviceKnownDataType} from './types';\n\nfunction getDeviceKnownData(\n  event: Event,\n  data: DeviceData,\n  deviceKnownDataValues: Array<DeviceKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = deviceKnownDataValues.filter(deviceKnownDataValue =>\n    defined(data[deviceKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getDeviceKnownDataDetails(\n      event,\n      data,\n      key as DeviceKnownDataType\n    );\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key as keyof DeviceData),\n      subjectDataTestId: `device-context-${key.toLowerCase()}-value`,\n    });\n  }\n\n  return knownData;\n}\n\nexport default getDeviceKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport {Event} from 'sentry/types/event';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getDeviceKnownData from './getDeviceKnownData';\nimport {DeviceData, DeviceKnownDataType} from './types';\nimport {getInferredData} from './utils';\n\ntype Props = {\n  data: DeviceData;\n  event: Event;\n};\n\nconst deviceKnownDataValues = [\n  DeviceKnownDataType.NAME,\n  DeviceKnownDataType.FAMILY,\n  DeviceKnownDataType.CPU_DESCRIPTION,\n  DeviceKnownDataType.ARCH,\n  DeviceKnownDataType.BATTERY_LEVEL,\n  DeviceKnownDataType.BATTERY_STATUS,\n  DeviceKnownDataType.ORIENTATION,\n  DeviceKnownDataType.MEMORY,\n  DeviceKnownDataType.MEMORY_SIZE,\n  DeviceKnownDataType.FREE_MEMORY,\n  DeviceKnownDataType.USABLE_MEMORY,\n  DeviceKnownDataType.LOW_MEMORY,\n  DeviceKnownDataType.STORAGE_SIZE,\n  DeviceKnownDataType.EXTERNAL_STORAGE_SIZE,\n  DeviceKnownDataType.EXTERNAL_FREE_STORAGE,\n  DeviceKnownDataType.STORAGE,\n  DeviceKnownDataType.FREE_STORAGE,\n  DeviceKnownDataType.SIMULATOR,\n  DeviceKnownDataType.BOOT_TIME,\n  DeviceKnownDataType.TIMEZONE,\n  DeviceKnownDataType.DEVICE_TYPE,\n  DeviceKnownDataType.ARCHS,\n  DeviceKnownDataType.BRAND,\n  DeviceKnownDataType.CHARGING,\n  DeviceKnownDataType.CONNECTION_TYPE,\n  DeviceKnownDataType.ID,\n  DeviceKnownDataType.LANGUAGE,\n  DeviceKnownDataType.MANUFACTURER,\n  DeviceKnownDataType.ONLINE,\n  DeviceKnownDataType.SCREEN_DENSITY,\n  DeviceKnownDataType.SCREEN_DPI,\n  DeviceKnownDataType.SCREEN_RESOLUTION,\n  DeviceKnownDataType.SCREEN_HEIGHT_PIXELS,\n  DeviceKnownDataType.SCREEN_WIDTH_PIXELS,\n  DeviceKnownDataType.MODEL,\n  DeviceKnownDataType.MODEL_ID,\n  DeviceKnownDataType.RENDERED_MODEL,\n];\n\nconst deviceIgnoredDataValues = [];\n\nfunction Device({data, event}: Props) {\n  const inferredData = getInferredData(data);\n\n  return (\n    <Fragment>\n      <ContextBlock\n        data={getDeviceKnownData(event, inferredData, deviceKnownDataValues)}\n      />\n      <ContextBlock\n        data={getUnknownData(inferredData, [\n          ...deviceKnownDataValues,\n          ...deviceIgnoredDataValues,\n        ])}\n      />\n    </Fragment>\n  );\n}\n\nexport default Device;\n","import startCase from 'lodash/startCase';\n\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\n\nfunction getUnknownData(\n  allData: Record<string, any>,\n  knownKeys: string[]\n): KeyValueListData {\n  return Object.entries(allData)\n    .filter(([key]) => key !== 'type' && key !== 'title')\n    .filter(([key]) => !knownKeys.includes(key))\n    .map(([key, value]) => ({\n      key,\n      value,\n      subject: startCase(key),\n      meta: getMeta(allData, key),\n    }));\n}\n\nexport default getUnknownData;\n","export enum GPUKnownDataType {\n  ID = 'id',\n  NAME = 'name',\n  VERSION = 'version',\n  VENDOR_NAME = 'vendor_name',\n  VENDOR_ID = 'vendor_id',\n  MEMORY = 'memory',\n  NPOT_SUPPORT = 'npot_support',\n  MULTI_THREAD_RENDERING = 'multi_threaded_rendering',\n  API_TYPE = 'api_type',\n}\n\nexport type GPUData = {\n  id: number;\n  vendor_id: number;\n  api_type?: string;\n  memory?: number;\n  memory_size?: number;\n  multi_threaded_rendering?: boolean;\n  name?: string;\n  npot_support?: string;\n  vendor_name?: string;\n  version?: string;\n};\n","import {t} from 'sentry/locale';\n\nimport formatMemory from './formatMemory';\nimport {GPUData, GPUKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value?: React.ReactNode;\n};\n\nfunction getGPUKnownDataDetails(data: GPUData, type: GPUKnownDataType): Output {\n  switch (type) {\n    case GPUKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case GPUKnownDataType.VERSION:\n      return {\n        subject: t('Version'),\n        value: data.version,\n      };\n    case GPUKnownDataType.MEMORY:\n      return {\n        subject: t('Memory'),\n        value: data.memory_size ? formatMemory(data.memory_size) : undefined,\n      };\n    case GPUKnownDataType.NPOT_SUPPORT:\n      return {\n        subject: t('NPOT Support'),\n        value: data.npot_support,\n      };\n    case GPUKnownDataType.VENDOR_NAME:\n      return {\n        subject: t('Vendor Name'),\n        value: data.vendor_name,\n      };\n    case GPUKnownDataType.MULTI_THREAD_RENDERING:\n      return {\n        subject: t('Multi-Thread rendering'),\n        value: data.multi_threaded_rendering,\n      };\n    case GPUKnownDataType.API_TYPE:\n      return {\n        subject: t('API Type'),\n        value: data.api_type,\n      };\n    case GPUKnownDataType.VENDOR_ID:\n      return {\n        subject: t('Vendor ID'),\n        value: data.vendor_id,\n      };\n    case GPUKnownDataType.ID:\n      return {\n        subject: t('GPU ID'),\n        value: data.id,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type],\n      };\n  }\n}\n\nexport default getGPUKnownDataDetails;\n","import {formatBytesBase2} from 'sentry/utils';\n\nconst MEGABYTE_IN_BYTES = 1048576;\n\nfunction formatMemory(memory_size: number) {\n  if (!Number.isInteger(memory_size) || memory_size <= 0) {\n    return null;\n  }\n\n  // 'usable_memory' is in defined in MB\n  return formatBytesBase2(memory_size * MEGABYTE_IN_BYTES);\n}\n\nexport default formatMemory;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getGpuKnownDataDetails from './getGPUKnownDataDetails';\nimport {GPUData, GPUKnownDataType} from './types';\n\nfunction getGPUKnownData(\n  data: GPUData,\n  gpuKnownDataValues: Array<GPUKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = gpuKnownDataValues.filter(gpuKnownDataValue =>\n    defined(data[gpuKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getGpuKnownDataDetails(data, key as GPUKnownDataType);\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getGPUKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getOperatingSystemKnownData from './getGPUKnownData';\nimport {GPUData, GPUKnownDataType} from './types';\n\ntype Props = {\n  data: GPUData;\n};\n\nconst gpuKnownDataValues = [\n  GPUKnownDataType.NAME,\n  GPUKnownDataType.VERSION,\n  GPUKnownDataType.VENDOR_NAME,\n  GPUKnownDataType.MEMORY,\n  GPUKnownDataType.NPOT_SUPPORT,\n  GPUKnownDataType.MULTI_THREAD_RENDERING,\n  GPUKnownDataType.API_TYPE,\n];\n\nconst gpuIgnoredDataValues = [];\n\nconst GPU = ({data}: Props) => {\n  if (data.vendor_id > 0) {\n    gpuKnownDataValues.unshift[GPUKnownDataType.VENDOR_ID];\n  }\n  if (data.id > 0) {\n    gpuKnownDataValues.unshift[GPUKnownDataType.ID];\n  }\n\n  return (\n    <Fragment>\n      <ContextBlock data={getOperatingSystemKnownData(data, gpuKnownDataValues)} />\n      <ContextBlock\n        data={getUnknownData(data, [...gpuKnownDataValues, ...gpuIgnoredDataValues])}\n      />\n    </Fragment>\n  );\n};\n\nexport default GPU;\n","export enum OperatingSystemKnownDataType {\n  NAME = 'name',\n  VERSION = 'version',\n  KERNEL_VERSION = 'kernel_version',\n  ROOTED = 'rooted',\n}\n\nexport enum OperatingSystemIgnoredDataType {\n  BUILD = 'build',\n}\n\nexport type OperatingSystemKnownData = {\n  build: string;\n  kernel_version: string;\n  name: string;\n  type: string;\n  rooted?: boolean;\n  version?: string;\n};\n","import {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\nimport {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value: React.ReactNode | null;\n};\n\nfunction getOperatingSystemKnownDataDetails(\n  data: OperatingSystemKnownData,\n  type: OperatingSystemKnownDataType\n): Output {\n  switch (type) {\n    case OperatingSystemKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case OperatingSystemKnownDataType.VERSION:\n      return {\n        subject: t('Version'),\n        value: `${data.version}${data.build ? `(${data.build})` : ''}`,\n      };\n    case OperatingSystemKnownDataType.KERNEL_VERSION:\n      return {\n        subject: t('Kernel Version'),\n        value: data.kernel_version,\n      };\n    case OperatingSystemKnownDataType.ROOTED:\n      return {\n        subject: t('Rooted'),\n        value: defined(data.rooted) ? (data.rooted ? t('yes') : t('no')) : null,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type] || null,\n      };\n  }\n}\n\nexport default getOperatingSystemKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getOperatingSystemKnownDataDetails from './getOperatingSystemKnownDataDetails';\nimport {OperatingSystemKnownData, OperatingSystemKnownDataType} from './types';\n\nfunction getOperatingSystemKnownData(\n  data: OperatingSystemKnownData,\n  operatingSystemKnownDataValues: Array<OperatingSystemKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = operatingSystemKnownDataValues.filter(operatingSystemKnownDataValue =>\n    defined(data[operatingSystemKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getOperatingSystemKnownDataDetails(\n      data,\n      key as OperatingSystemKnownDataType\n    );\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getOperatingSystemKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getOperatingSystemKnownData from './getOperatingSystemKnownData';\nimport {\n  OperatingSystemIgnoredDataType,\n  OperatingSystemKnownData,\n  OperatingSystemKnownDataType,\n} from './types';\n\ntype Props = {\n  data: OperatingSystemKnownData;\n};\n\nconst operatingSystemKnownDataValues = [\n  OperatingSystemKnownDataType.NAME,\n  OperatingSystemKnownDataType.VERSION,\n  OperatingSystemKnownDataType.KERNEL_VERSION,\n  OperatingSystemKnownDataType.ROOTED,\n];\n\nconst operatingSystemIgnoredDataValues = [OperatingSystemIgnoredDataType.BUILD];\n\nconst OperatingSystem = ({data}: Props) => (\n  <Fragment>\n    <ContextBlock\n      data={getOperatingSystemKnownData(data, operatingSystemKnownDataValues)}\n    />\n    <ContextBlock\n      data={getUnknownData(data, [\n        ...operatingSystemKnownDataValues,\n        ...operatingSystemIgnoredDataValues,\n      ])}\n    />\n  </Fragment>\n);\n\nexport default OperatingSystem;\n","import {Component} from 'react';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\n\ntype KeyValueListData = React.ComponentProps<typeof ContextBlock>['data'];\n\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  alias: string;\n  data: Record<string, any>;\n};\n\nclass ReduxContextType extends Component<Props> {\n  getKnownData(): KeyValueListData {\n    return [\n      {\n        key: 'value',\n        subject: t('Latest State'),\n        value: this.props.data,\n      },\n    ];\n  }\n\n  render() {\n    return (\n      <ClippedBox clipHeight={250}>\n        <ContextBlock data={this.getKnownData()} />\n      </ClippedBox>\n    );\n  }\n}\n\nexport default ReduxContextType;\n","export enum RuntimeKnownDataType {\n  NAME = 'name',\n  VERSION = 'version',\n}\n\nexport enum RuntimeIgnoredDataType {\n  BUILD = 'build',\n}\n\nexport type RuntimeData = {\n  build: string;\n  name: string;\n  type: string;\n  version?: string;\n};\n","import {t} from 'sentry/locale';\n\nimport {RuntimeData, RuntimeKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value?: React.ReactNode;\n};\n\nfunction getRuntimeKnownDataDetails(\n  data: RuntimeData,\n  type: RuntimeKnownDataType\n): Output {\n  switch (type) {\n    case RuntimeKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case RuntimeKnownDataType.VERSION:\n      return {\n        subject: t('Version'),\n        value: `${data.version}${data.build ? `(${data.build})` : ''}`,\n      };\n    default:\n      return {\n        subject: type,\n        value: data[type],\n      };\n  }\n}\n\nexport default getRuntimeKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getRuntimeKnownDataDetails from './getRuntimeKnownDataDetails';\nimport {RuntimeData, RuntimeKnownDataType} from './types';\n\nfunction getRuntimeKnownData(\n  data: RuntimeData,\n  runTimerKnownDataValues: Array<RuntimeKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = runTimerKnownDataValues.filter(runTimerKnownDataValue =>\n    defined(data[runTimerKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getRuntimeKnownDataDetails(\n      data,\n      key as RuntimeKnownDataType\n    );\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getRuntimeKnownData;\n","import {Fragment} from 'react';\n\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getRuntimeKnownData from './getRuntimeKnownData';\nimport {RuntimeData, RuntimeIgnoredDataType, RuntimeKnownDataType} from './types';\n\ntype Props = {\n  data: RuntimeData;\n};\n\nconst runtimeKnownDataValues = [RuntimeKnownDataType.NAME, RuntimeKnownDataType.VERSION];\n\nconst runtimeIgnoredDataValues = [RuntimeIgnoredDataType.BUILD];\n\nconst Runtime = ({data}: Props) => {\n  return (\n    <Fragment>\n      <ContextBlock data={getRuntimeKnownData(data, runtimeKnownDataValues)} />\n      <ContextBlock\n        data={getUnknownData(data, [\n          ...runtimeKnownDataValues,\n          ...runtimeIgnoredDataValues,\n        ])}\n      />\n    </Fragment>\n  );\n};\n\nexport default Runtime;\n","import {Component} from 'react';\nimport upperFirst from 'lodash/upperFirst';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\n\ntype KeyValueListData = React.ComponentProps<typeof ContextBlock>['data'];\n\ntype StateDescription = {\n  value: Record<string, any>;\n  type?: string;\n};\n\ntype Props = {\n  alias: string;\n  data: {\n    [state: string]: StateDescription;\n    state: StateDescription;\n  };\n};\n\nclass StateContextType extends Component<Props> {\n  getStateTitle(name: string, type?: string) {\n    return `${name}${type ? ` (${upperFirst(type)})` : ''}`;\n  }\n\n  getKnownData(): KeyValueListData {\n    const primaryState = this.props.data.state;\n\n    if (!primaryState) {\n      return [];\n    }\n\n    return [\n      {\n        key: 'state',\n        subject: this.getStateTitle(t('State'), primaryState.type),\n        value: primaryState.value,\n      },\n    ];\n  }\n\n  getUnknownData(): KeyValueListData {\n    const {data} = this.props;\n\n    return Object.entries(data)\n      .filter(([key]) => !['type', 'title', 'state'].includes(key))\n      .map(([name, state]) => ({\n        key: name,\n        value: state.value,\n        subject: this.getStateTitle(name, state.type),\n        meta: getMeta(data, name),\n      }));\n  }\n\n  render() {\n    return (\n      <ClippedBox clipHeight={250}>\n        <ContextBlock data={this.getKnownData()} />\n        <ContextBlock data={this.getUnknownData()} />\n      </ClippedBox>\n    );\n  }\n}\n\nexport default StateContextType;\n","export enum TraceKnownDataType {\n  TRACE_ID = 'trace_id',\n  SPAN_ID = 'span_id',\n  PARENT_SPAN_ID = 'parent_span_id',\n  OP_NAME = 'op',\n  STATUS = 'status',\n  TRANSACTION_NAME = 'transaction_name',\n}\n\nexport type TraceKnownData = {\n  op?: string;\n  parent_span_id?: string;\n  span_id?: string;\n  status?: string;\n  trace_id?: string;\n};\n","import Button from 'sentry/components/button';\nimport {generateTraceTarget} from 'sentry/components/quickTrace/utils';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport {TraceKnownData, TraceKnownDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value: React.ReactNode;\n  actionButton?: React.ReactNode;\n};\n\nfunction getUserKnownDataDetails(\n  data: TraceKnownData,\n  type: TraceKnownDataType,\n  event: Event,\n  organization: Organization\n): Output | undefined {\n  switch (type) {\n    case TraceKnownDataType.TRACE_ID: {\n      const traceId = data.trace_id || '';\n\n      if (!traceId) {\n        return undefined;\n      }\n\n      if (!organization.features.includes('discover-basic')) {\n        return {\n          subject: t('Trace ID'),\n          value: traceId,\n        };\n      }\n\n      return {\n        subject: t('Trace ID'),\n        value: traceId,\n        actionButton: (\n          <Button size=\"xsmall\" to={generateTraceTarget(event, organization)}>\n            {t('Search by Trace')}\n          </Button>\n        ),\n      };\n    }\n\n    case TraceKnownDataType.SPAN_ID: {\n      return {\n        subject: t('Span ID'),\n        value: data.span_id || '',\n      };\n    }\n\n    case TraceKnownDataType.PARENT_SPAN_ID: {\n      return {\n        subject: t('Parent Span ID'),\n        value: data.parent_span_id || '',\n      };\n    }\n\n    case TraceKnownDataType.OP_NAME: {\n      return {\n        subject: t('Operation Name'),\n        value: data.op || '',\n      };\n    }\n\n    case TraceKnownDataType.STATUS: {\n      return {\n        subject: t('Status'),\n        value: data.status || '',\n      };\n    }\n\n    case TraceKnownDataType.TRANSACTION_NAME: {\n      const eventTag = event?.tags.find(tag => {\n        return tag.key === 'transaction';\n      });\n\n      if (!eventTag || typeof eventTag.value !== 'string') {\n        return undefined;\n      }\n      const transactionName = eventTag.value;\n\n      const to = transactionSummaryRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: transactionName,\n        projectID: event.projectID,\n        query: {},\n      });\n\n      if (!organization.features.includes('performance-view')) {\n        return {\n          subject: t('Transaction'),\n          value: transactionName,\n        };\n      }\n\n      return {\n        subject: t('Transaction'),\n        value: transactionName,\n        actionButton: (\n          <Button size=\"xsmall\" to={to}>\n            {t('View Summary')}\n          </Button>\n        ),\n      };\n    }\n\n    default:\n      return undefined;\n  }\n}\n\nexport default getUserKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport getTraceKnownDataDetails from './getTraceKnownDataDetails';\nimport {TraceKnownData, TraceKnownDataType} from './types';\n\ntype TraceKnownDataKeys = Extract<keyof TraceKnownData, string>;\n\nfunction getTraceKnownData(\n  data: TraceKnownData,\n  traceKnownDataValues: Array<TraceKnownDataType>,\n  event: Event,\n  organization: Organization\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = traceKnownDataValues.filter(traceKnownDataValue => {\n    if (traceKnownDataValue === TraceKnownDataType.TRANSACTION_NAME) {\n      return event?.tags.find(tag => {\n        return tag.key === 'transaction';\n      });\n    }\n\n    return data[traceKnownDataValue];\n  });\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getTraceKnownDataDetails(data, key, event, organization);\n\n    if ((knownDataDetails && !defined(knownDataDetails.value)) || !knownDataDetails) {\n      continue;\n    }\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key as TraceKnownDataKeys),\n      subjectDataTestId: `trace-context-${key.toLowerCase()}-value`,\n    });\n  }\n\n  return knownData;\n}\n\nexport default getTraceKnownData;\n","import ErrorBoundary from 'sentry/components/errorBoundary';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getTraceKnownData from './getTraceKnownData';\nimport {TraceKnownData, TraceKnownDataType} from './types';\n\nconst traceKnownDataValues = [\n  TraceKnownDataType.STATUS,\n  TraceKnownDataType.TRACE_ID,\n  TraceKnownDataType.SPAN_ID,\n  TraceKnownDataType.PARENT_SPAN_ID,\n  TraceKnownDataType.TRANSACTION_NAME,\n  TraceKnownDataType.OP_NAME,\n];\n\nconst traceIgnoredDataValues = [];\n\ntype Props = {\n  data: TraceKnownData & Record<string, any>;\n  event: Event;\n  organization: Organization;\n};\n\nfunction Trace({event, data}: Props) {\n  const organization = useOrganization();\n\n  return (\n    <ErrorBoundary mini>\n      <KeyValueList\n        data={getTraceKnownData(data, traceKnownDataValues, event, organization)}\n        isSorted={false}\n        raw={false}\n        isContextData\n      />\n      <KeyValueList\n        data={getUnknownData(data, [...traceKnownDataValues, ...traceIgnoredDataValues])}\n        isSorted={false}\n        raw={false}\n        isContextData\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default Trace;\n","export enum UserKnownDataType {\n  ID = 'id',\n  EMAIL = 'email',\n  USERNAME = 'username',\n  IP_ADDRESS = 'ip_address',\n  NAME = 'name',\n}\n\nexport enum UserIgnoredDataType {\n  DATA = 'data',\n}\n","import ExternalLink from 'sentry/components/links/externalLink';\nimport {IconMail} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {AvatarUser as UserType} from 'sentry/types';\n\nimport {UserKnownDataType} from './types';\n\nconst EMAIL_REGEX = /[^@]+@[^\\.]+\\..+/;\n\ntype Output = {\n  subject: string;\n  value: string | null;\n  subjectIcon?: React.ReactNode;\n};\n\nfunction getUserKnownDataDetails(\n  data: UserType,\n  type: UserKnownDataType\n): Output | undefined {\n  switch (type) {\n    case UserKnownDataType.NAME:\n      return {\n        subject: t('Name'),\n        value: data.name,\n      };\n    case UserKnownDataType.USERNAME:\n      return {\n        subject: t('Username'),\n        value: data.username,\n      };\n    case UserKnownDataType.ID:\n      return {\n        subject: t('ID'),\n        value: data.id,\n      };\n    case UserKnownDataType.IP_ADDRESS:\n      return {\n        subject: t('IP Address'),\n        value: data.ip_address,\n      };\n    case UserKnownDataType.EMAIL:\n      return {\n        subject: t('Email'),\n        value: data.email,\n        subjectIcon: EMAIL_REGEX.test(data.email) && (\n          <ExternalLink href={`mailto:${data.email}`} className=\"external-icon\">\n            <IconMail size=\"xs\" />\n          </ExternalLink>\n        ),\n      };\n    default:\n      return undefined;\n  }\n}\n\nexport default getUserKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {AvatarUser as UserType, KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getUserKnownDataDetails from './getUserKnownDataDetails';\nimport {UserKnownDataType} from './types';\n\nfunction getUserKnownData(\n  data: UserType,\n  userKnownDataValues: Array<UserKnownDataType>\n): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = userKnownDataValues.filter(userKnownDataValue =>\n    defined(data[userKnownDataValue])\n  );\n\n  for (const key of dataKeys) {\n    const knownDataDetails = getUserKnownDataDetails(data, key as UserKnownDataType);\n    if ((knownDataDetails && !defined(knownDataDetails.value)) || !knownDataDetails) {\n      continue;\n    }\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n      subjectDataTestId: `user-context-${key.toLowerCase()}-value`,\n    });\n  }\n  return knownData;\n}\n\nexport default getUserKnownData;\n","import UserAvatar from 'sentry/components/avatar/userAvatar';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {removeFilterMaskedEntries} from 'sentry/components/events/interfaces/utils';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {AvatarUser as UserType} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport getUnknownData from '../getUnknownData';\n\nimport getUserKnownData from './getUserKnownData';\nimport {UserIgnoredDataType, UserKnownDataType} from './types';\n\ntype Props = {\n  data: Data;\n};\n\ntype Data = {\n  data: Record<string, string>;\n} & UserType;\n\nconst userKnownDataValues = [\n  UserKnownDataType.ID,\n  UserKnownDataType.EMAIL,\n  UserKnownDataType.USERNAME,\n  UserKnownDataType.IP_ADDRESS,\n  UserKnownDataType.NAME,\n];\n\nconst userIgnoredDataValues = [UserIgnoredDataType.DATA];\n\nfunction User({data}: Props) {\n  return (\n    <div className=\"user-widget\">\n      <div className=\"pull-left\">\n        <UserAvatar user={removeFilterMaskedEntries(data)} size={48} gravatar={false} />\n      </div>\n      <ContextBlock data={getUserKnownData(data, userKnownDataValues)} />\n      <ContextBlock\n        data={getUnknownData(data, [...userKnownDataValues, ...userIgnoredDataValues])}\n      />\n      {defined(data?.data) && (\n        <ErrorBoundary mini>\n          <KeyValueList\n            data={Object.entries(data.data).map(([key, value]) => ({\n              key,\n              value,\n              subject: key,\n              meta: getMeta(data.data, key),\n            }))}\n            isContextData\n          />\n        </ErrorBoundary>\n      )}\n    </div>\n  );\n}\n\nexport default User;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment-timezone';\n\nimport {t} from 'sentry/locale';\nimport plugins from 'sentry/plugins';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\n\nconst CONTEXT_TYPES = {\n  default: require('sentry/components/events/contexts/default').default,\n  app: require('sentry/components/events/contexts/app/app').default,\n  device: require('sentry/components/events/contexts/device/device').default,\n  os: require('sentry/components/events/contexts/operatingSystem/operatingSystem')\n    .default,\n  runtime: require('sentry/components/events/contexts/runtime/runtime').default,\n  browser: require('sentry/components/events/contexts/browser/browser').default,\n  user: require('sentry/components/events/contexts/user/user').default,\n  gpu: require('sentry/components/events/contexts/gpu/gpu').default,\n  trace: require('sentry/components/events/contexts/trace/trace').default,\n  // 'redux.state' will be replaced with more generic context called 'state'\n  'redux.state': require('sentry/components/events/contexts/redux').default,\n  state: require('sentry/components/events/contexts/state').default,\n};\n\nexport function getContextComponent(type: string) {\n  return CONTEXT_TYPES[type] || plugins.contexts[type] || CONTEXT_TYPES.default;\n}\n\nexport function getSourcePlugin(pluginContexts: Array<any>, contextType: string) {\n  if (CONTEXT_TYPES[contextType]) {\n    return null;\n  }\n  for (const plugin of pluginContexts) {\n    if (plugin.contexts.indexOf(contextType) >= 0) {\n      return plugin;\n    }\n  }\n  return null;\n}\n\nexport function getRelativeTimeFromEventDateCreated(\n  eventDateCreated: string,\n  timestamp?: string,\n  showTimestamp = true\n) {\n  if (!defined(timestamp)) {\n    return timestamp;\n  }\n\n  const dateTime = moment(timestamp);\n\n  if (!dateTime.isValid()) {\n    return timestamp;\n  }\n\n  const relativeTime = `(${dateTime.from(eventDateCreated, true)} ${t(\n    'before this event'\n  )})`;\n\n  if (!showTimestamp) {\n    return <RelativeTime>{relativeTime}</RelativeTime>;\n  }\n\n  return (\n    <Fragment>\n      {timestamp}\n      <RelativeTime>{relativeTime}</RelativeTime>\n    </Fragment>\n  );\n}\n\n// Typescript doesn't have types for DisplayNames yet and that's why the type assertion \"any\" is needed below.\n// There is currently an open PR that intends to introduce the types https://github.com/microsoft/TypeScript/pull/44022\nexport function getFullLanguageDescription(locale: string) {\n  const sentryAppLanguageCode = ConfigStore.get('languageCode');\n\n  const [languageAbbreviation, countryAbbreviation] = locale.includes('_')\n    ? locale.split('_')\n    : locale.split('-');\n\n  try {\n    const languageNames = new (Intl as any).DisplayNames(sentryAppLanguageCode, {\n      type: 'language',\n    });\n\n    const languageName = languageNames.of(languageAbbreviation);\n\n    if (countryAbbreviation) {\n      const regionNames = new (Intl as any).DisplayNames(sentryAppLanguageCode, {\n        type: 'region',\n      });\n\n      const countryName = regionNames.of(countryAbbreviation.toUpperCase());\n\n      return `${languageName} (${countryName})`;\n    }\n\n    return languageName;\n  } catch {\n    return locale;\n  }\n}\n\nconst RelativeTime = styled('span')`\n  color: ${p => p.theme.subText};\n  margin-left: ${space(0.5)};\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport {IconDelete, IconDownload, IconShow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  attachmentId: string;\n  onDelete: (attachmentId: string) => void;\n  url: string | null;\n  hasPreview?: boolean;\n  onPreview?: (attachmentId: string) => void;\n  previewIsOpen?: boolean;\n  withPreviewButton?: boolean;\n};\n\nclass EventAttachmentActions extends Component<Props> {\n  handlePreview() {\n    const {onPreview, attachmentId} = this.props;\n    if (onPreview) {\n      onPreview(attachmentId);\n    }\n  }\n\n  render() {\n    const {url, withPreviewButton, hasPreview, previewIsOpen, onDelete, attachmentId} =\n      this.props;\n\n    return (\n      <ButtonBar gap={1}>\n        <Confirm\n          confirmText={t('Delete')}\n          message={t('Are you sure you wish to delete this file?')}\n          priority=\"danger\"\n          onConfirm={() => onDelete(attachmentId)}\n          disabled={!url}\n        >\n          <Button\n            size=\"xsmall\"\n            icon={<IconDelete size=\"xs\" />}\n            aria-label={t('Delete')}\n            disabled={!url}\n            title={!url ? t('Insufficient permissions to delete attachments') : undefined}\n          />\n        </Confirm>\n\n        <DownloadButton\n          size=\"xsmall\"\n          icon={<IconDownload size=\"xs\" />}\n          href={url ? `${url}?download=1` : ''}\n          disabled={!url}\n          title={!url ? t('Insufficient permissions to download attachments') : undefined}\n          aria-label={t('Download')}\n        />\n\n        {withPreviewButton && (\n          <DownloadButton\n            size=\"xsmall\"\n            disabled={!url || !hasPreview}\n            priority={previewIsOpen ? 'primary' : 'default'}\n            icon={<IconShow size=\"xs\" />}\n            onClick={() => this.handlePreview()}\n            title={\n              !url\n                ? t('Insufficient permissions to preview attachments')\n                : !hasPreview\n                ? t('This attachment cannot be previewed')\n                : undefined\n            }\n          >\n            {t('Preview')}\n          </DownloadButton>\n        )}\n      </ButtonBar>\n    );\n  }\n}\n\nconst DownloadButton = styled(Button)`\n  margin-right: ${space(0.5)};\n`;\n\nexport default withApi(EventAttachmentActions);\n","import {Component, Fragment} from 'react';\n\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport plugins from 'sentry/plugins';\nimport {Group} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined, toTitleCase} from 'sentry/utils';\n\nimport {getContextComponent, getSourcePlugin} from './utils';\n\ntype Props = {\n  alias: string;\n  event: Event;\n  type: string;\n  group?: Group;\n  value?: Record<string, any>;\n};\n\ntype State = {\n  isLoading: boolean;\n  pluginLoading?: boolean;\n};\n\nclass Chunk extends Component<Props, State> {\n  state: State = {\n    isLoading: false,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.syncPlugin();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.type !== this.props.type ||\n      prevProps.group?.id !== this.props.group?.id\n    ) {\n      this.syncPlugin();\n    }\n  }\n\n  syncPlugin() {\n    const {group, type, alias} = this.props;\n    // If we don't have a grouped event we can't sync with plugins.\n    if (!group) {\n      return;\n    }\n\n    // Search using `alias` first because old plugins rely on it and type is set to \"default\"\n    // e.g. sessionstack\n    const sourcePlugin =\n      type === 'default'\n        ? getSourcePlugin(group.pluginContexts, alias) ||\n          getSourcePlugin(group.pluginContexts, type)\n        : getSourcePlugin(group.pluginContexts, type);\n\n    if (!sourcePlugin) {\n      this.setState({pluginLoading: false});\n      return;\n    }\n\n    this.setState(\n      {\n        pluginLoading: true,\n      },\n      () => {\n        plugins.load(sourcePlugin, () => {\n          this.setState({pluginLoading: false});\n        });\n      }\n    );\n  }\n\n  getTitle() {\n    const {value = {}, alias, type} = this.props;\n\n    if (defined(value.title) && typeof value.title !== 'object') {\n      return value.title;\n    }\n\n    if (!defined(type)) {\n      return toTitleCase(alias);\n    }\n\n    switch (type) {\n      case 'app':\n        return t('App');\n      case 'device':\n        return t('Device');\n      case 'os':\n        return t('Operating System');\n      case 'user':\n        return t('User');\n      case 'gpu':\n        return t('Graphics Processing Unit');\n      case 'runtime':\n        return t('Runtime');\n      case 'trace':\n        return t('Trace Details');\n      case 'default':\n        if (alias === 'state') {\n          return t('Application State');\n        }\n        return toTitleCase(alias);\n      default:\n        return toTitleCase(type);\n    }\n  }\n\n  render() {\n    const {pluginLoading} = this.state;\n\n    // if we are currently loading the plugin, just render nothing for now.\n    if (pluginLoading) {\n      return null;\n    }\n\n    const {type, alias, value = {}, event} = this.props;\n\n    // we intentionally hide reprocessing context to not imply it was sent by the SDK.\n    if (alias === 'reprocessing') {\n      return null;\n    }\n\n    const ContextComponent =\n      type === 'default'\n        ? getContextComponent(alias) || getContextComponent(type)\n        : getContextComponent(type);\n\n    const isObjectValueEmpty = Object.values(value).filter(v => defined(v)).length === 0;\n\n    // this can happen if the component does not exist\n    if (!ContextComponent || isObjectValueEmpty) {\n      return null;\n    }\n\n    return (\n      <EventDataSection\n        key={`context-${alias}`}\n        type={`context-${alias}`}\n        title={\n          <Fragment>\n            {this.getTitle()}\n            {defined(type) && type !== 'default' && alias !== type && (\n              <small>({alias})</small>\n            )}\n          </Fragment>\n        }\n      >\n        <ContextComponent alias={alias} event={event} data={value} />\n      </EventDataSection>\n    );\n  }\n}\n\nexport default Chunk;\n","import {Fragment} from 'react';\n\nimport {Group} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {objectIsEmpty} from 'sentry/utils';\n\nimport Chunk from './chunk';\n\ntype Props = {\n  event: Event;\n  group?: Group;\n};\n\nfunction Contexts({event, group}: Props) {\n  const {user, contexts} = event;\n\n  return (\n    <Fragment>\n      {user && !objectIsEmpty(user) && (\n        <Chunk\n          key=\"user\"\n          type=\"user\"\n          alias=\"user\"\n          group={group}\n          event={event}\n          value={user}\n        />\n      )}\n      {Object.entries(contexts).map(([key, value]) => (\n        <Chunk\n          key={key}\n          type={value?.type ?? ''}\n          alias={key}\n          group={group}\n          event={event}\n          value={value}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nexport default Contexts;\n","import styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  icon: React.ReactElement;\n  className?: string;\n};\n\nconst Item = ({children, icon, className}: Props) => (\n  <Wrapper className={classNames('context-item', className)} data-test-id=\"context-item\">\n    {icon}\n    {children && <Details>{children}</Details>}\n  </Wrapper>\n);\n\nexport default Item;\n\nconst Details = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 100%;\n  min-height: 48px;\n`;\n\nconst Wrapper = styled('div')`\n  border-top: 1px solid ${p => p.theme.innerBorder};\n  padding: ${space(0.5)} 0 ${space(0.5)} 40px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  min-width: 0;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    :not(:last-child) {\n      margin-right: ${space(3)};\n    }\n    max-width: 25%;\n    border: 0;\n    padding: 0px 0px 0px 42px;\n  }\n`;\n","import Item from './item';\n\ntype Props = {\n  title: string;\n};\n\nconst ContextSummaryNoSummary = ({title}: Props) => (\n  <Item icon={<span className=\"context-item-icon\" />}>\n    <h3 data-test-id=\"no-summary-title\">{title}</h3>\n  </Item>\n);\n\nexport default ContextSummaryNoSummary;\n","import {defined} from 'sentry/utils';\n\nfunction generateClassname(name?: string, version?: string): string {\n  if (!defined(name)) {\n    return '';\n  }\n\n  const lowerCaseName = name.toLowerCase();\n\n  // amazon fire tv device id changes with version: AFTT, AFTN, AFTS, AFTA, AFTVA (alexa), ...\n  if (lowerCaseName.startsWith('aft')) {\n    return 'amazon';\n  }\n\n  if (lowerCaseName.startsWith('sm-') || lowerCaseName.startsWith('st-')) {\n    return 'samsung';\n  }\n\n  if (lowerCaseName.startsWith('moto')) {\n    return 'motorola';\n  }\n\n  if (lowerCaseName.startsWith('pixel')) {\n    return 'google';\n  }\n\n  const formattedName = name\n    .split(/\\d/)[0]\n    .toLowerCase()\n    .replace(/[^a-z0-9\\-]+/g, '-')\n    .replace(/\\-+$/, '')\n    .replace(/^\\-+/, '');\n\n  if (formattedName === 'edge' && version) {\n    const majorVersion = version.split('.')[0];\n    const isLegacyEdge = majorVersion >= '12' && majorVersion <= '18';\n\n    if (isLegacyEdge) {\n      return 'legacy-edge';\n    }\n  }\n\n  return formattedName;\n}\n\nexport default generateClassname;\n","import styled from '@emotion/styled';\n\nimport {DeviceName} from 'sentry/components/deviceName';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta} from 'sentry/types';\n\nimport ContextSummaryNoSummary from './contextSummaryNoSummary';\nimport generateClassName from './generateClassName';\nimport Item from './item';\n\ntype Props = {\n  data: Data;\n};\n\ntype Data = {\n  arch?: string;\n  model?: string;\n  model_id?: string;\n};\n\ntype SubTitle = {\n  subject: string;\n  value: string;\n  meta?: Meta;\n};\n\nconst ContextSummaryDevice = ({data}: Props) => {\n  if (Object.keys(data).length === 0) {\n    return <ContextSummaryNoSummary title={t('Unknown Device')} />;\n  }\n\n  const renderName = () => {\n    if (!data.model) {\n      return t('Unknown Device');\n    }\n\n    const meta = getMeta(data, 'model');\n\n    return (\n      <DeviceName value={data.model}>\n        {deviceName => {\n          return <AnnotatedText value={deviceName} meta={meta} />;\n        }}\n      </DeviceName>\n    );\n  };\n\n  const getSubTitle = (): SubTitle | null => {\n    if (data.arch) {\n      return {\n        subject: t('Arch:'),\n        value: data.arch,\n        meta: getMeta(data, 'arch'),\n      };\n    }\n\n    if (data.model_id) {\n      return {\n        subject: t('Model:'),\n        value: data.model_id,\n        meta: getMeta(data, 'model_id'),\n      };\n    }\n\n    return null;\n  };\n\n  // TODO(dcramer): we need a better way to parse it\n  const className = generateClassName(data.model);\n  const subTitle = getSubTitle();\n\n  return (\n    <Item className={className} icon={<span className=\"context-item-icon\" />}>\n      <h3>{renderName()}</h3>\n      {subTitle && (\n        <TextOverflow isParagraph data-test-id=\"context-sub-title\">\n          <Subject>{subTitle.subject}</Subject>\n          <AnnotatedText value={subTitle.value} meta={subTitle.meta} />\n        </TextOverflow>\n      )}\n    </Item>\n  );\n};\n\nexport default ContextSummaryDevice;\n\nconst Subject = styled('strong')`\n  margin-right: ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport ContextSummaryNoSummary from './contextSummaryNoSummary';\nimport generateClassName from './generateClassName';\nimport Item from './item';\n\ntype Props = {\n  data: Data;\n  unknownTitle: string;\n};\n\ntype Data = {\n  name: string;\n  version?: string;\n};\n\nconst ContextSummaryGeneric = ({data, unknownTitle}: Props) => {\n  if (Object.keys(data).length === 0) {\n    return <ContextSummaryNoSummary title={unknownTitle} />;\n  }\n\n  const renderValue = (key: keyof Data) => {\n    const meta = getMeta(data, key);\n    return <AnnotatedText value={data[key]} meta={meta} />;\n  };\n\n  const className = generateClassName(data.name, data.version);\n\n  return (\n    <Item className={className} icon={<span className=\"context-item-icon\" />}>\n      <h3>{renderValue('name')}</h3>\n      <TextOverflow isParagraph>\n        <Subject>{t('Version:')}</Subject>\n        {!data.version ? t('Unknown') : renderValue('version')}\n      </TextOverflow>\n    </Item>\n  );\n};\n\nexport default ContextSummaryGeneric;\n\nconst Subject = styled('strong')`\n  margin-right: ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta} from 'sentry/types';\n\nimport ContextSummaryNoSummary from './contextSummaryNoSummary';\nimport generateClassName from './generateClassName';\nimport Item from './item';\n\ntype Props = {\n  data: Data;\n};\n\ntype Data = {\n  name: string;\n  vendor_name?: string;\n};\n\ntype VersionElement = {\n  subject: string;\n  value: string;\n  meta?: Meta;\n};\n\nconst ContextSummaryGPU = ({data}: Props) => {\n  if (Object.keys(data).length === 0 || !data.name) {\n    return <ContextSummaryNoSummary title={t('Unknown GPU')} />;\n  }\n\n  const renderName = () => {\n    const meta = getMeta(data, 'name');\n\n    return <AnnotatedText value={data.name} meta={meta} />;\n  };\n\n  let className = generateClassName(data.name);\n\n  const getVersionElement = (): VersionElement => {\n    if (data.vendor_name) {\n      className = generateClassName(data.vendor_name);\n      return {\n        subject: t('Vendor:'),\n        value: data.vendor_name,\n        meta: getMeta(data, 'vendor_name'),\n      };\n    }\n\n    return {\n      subject: t('Vendor:'),\n      value: t('Unknown'),\n    };\n  };\n\n  const versionElement = getVersionElement();\n\n  return (\n    <Item className={className} icon={<span className=\"context-item-icon\" />}>\n      <h3>{renderName()}</h3>\n      <TextOverflow isParagraph>\n        <Subject>{versionElement.subject}</Subject>\n        <AnnotatedText value={versionElement.value} meta={versionElement.meta} />\n      </TextOverflow>\n    </Item>\n  );\n};\n\nexport default ContextSummaryGPU;\n\nconst Subject = styled('strong')`\n  margin-right: ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta} from 'sentry/types';\n\nimport ContextSummaryNoSummary from './contextSummaryNoSummary';\nimport generateClassName from './generateClassName';\nimport Item from './item';\n\ntype Props = {\n  data: Data;\n};\n\ntype Data = {\n  name: string;\n  kernel_version?: string;\n  version?: string;\n};\n\ntype VersionElement = {\n  subject: string;\n  value: string;\n  meta?: Meta;\n};\n\nconst ContextSummaryOS = ({data}: Props) => {\n  if (Object.keys(data).length === 0 || !data.name) {\n    return <ContextSummaryNoSummary title={t('Unknown OS')} />;\n  }\n\n  const renderName = () => {\n    const meta = getMeta(data, 'name');\n    return <AnnotatedText value={data.name} meta={meta} />;\n  };\n\n  const getVersionElement = (): VersionElement => {\n    if (data.version) {\n      return {\n        subject: t('Version:'),\n        value: data.version,\n        meta: getMeta(data, 'version'),\n      };\n    }\n\n    if (data.kernel_version) {\n      return {\n        subject: t('Kernel:'),\n        value: data.kernel_version,\n        meta: getMeta(data, 'kernel_version'),\n      };\n    }\n\n    return {\n      subject: t('Version:'),\n      value: t('Unknown'),\n    };\n  };\n\n  const versionElement = getVersionElement();\n  const className = generateClassName(data.name);\n\n  return (\n    <Item className={className} icon={<span className=\"context-item-icon\" />}>\n      <h3>{renderName()}</h3>\n      <TextOverflow isParagraph data-test-id=\"context-sub-title\">\n        <Subject>{versionElement.subject}</Subject>\n        <AnnotatedText value={versionElement.value} meta={versionElement.meta} />\n      </TextOverflow>\n    </Item>\n  );\n};\n\nexport default ContextSummaryOS;\n\nconst Subject = styled('strong')`\n  margin-right: ${space(0.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport {removeFilterMaskedEntries} from 'sentry/components/events/interfaces/utils';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, Meta} from 'sentry/types';\nimport {EventUser} from 'sentry/types/event';\n\nimport ContextSummaryNoSummary from './contextSummaryNoSummary';\nimport Item from './item';\n\ntype Props = {\n  data: EventUser;\n};\n\ntype UserTitle = {\n  value: string;\n  meta?: Meta;\n};\n\ntype UserDetails = {\n  subject: string;\n  meta?: Meta;\n  value?: string;\n};\n\nconst ContextSummaryUser = ({data}: Props) => {\n  const user = removeFilterMaskedEntries(data);\n\n  if (Object.keys(user).length === 0) {\n    return <ContextSummaryNoSummary title={t('Unknown User')} />;\n  }\n\n  const renderUserDetails = (key: 'id' | 'username') => {\n    const userDetails: UserDetails = {\n      subject: t('Username:'),\n      value: user.username ?? '',\n      meta: getMeta(data, 'username'),\n    };\n\n    if (key === 'id') {\n      userDetails.subject = t('ID:');\n      userDetails.value = user.id;\n      userDetails.meta = getMeta(data, 'id');\n    }\n\n    return (\n      <TextOverflow isParagraph data-test-id=\"context-sub-title\">\n        <Subject>{userDetails.subject}</Subject>\n        <AnnotatedText value={userDetails.value} meta={userDetails.meta} />\n      </TextOverflow>\n    );\n  };\n\n  const getUserTitle = (): UserTitle | undefined => {\n    if (user.email) {\n      return {\n        value: user.email,\n        meta: getMeta(data, 'email'),\n      };\n    }\n\n    if (user.ip_address) {\n      return {\n        value: user.ip_address,\n        meta: getMeta(data, 'ip_address'),\n      };\n    }\n\n    if (user.id) {\n      return {\n        value: user.id,\n        meta: getMeta(data, 'id'),\n      };\n    }\n\n    if (user.username) {\n      return {\n        value: user.username,\n        meta: getMeta(data, 'username'),\n      };\n    }\n\n    return undefined;\n  };\n\n  const userTitle = getUserTitle();\n\n  if (!userTitle) {\n    return <ContextSummaryNoSummary title={t('Unknown User')} />;\n  }\n\n  const icon = userTitle ? (\n    <UserAvatar\n      user={user as AvatarUser}\n      size={32}\n      className=\"context-item-icon\"\n      gravatar={false}\n    />\n  ) : (\n    <span className=\"context-item-icon\" />\n  );\n\n  return (\n    <Item className=\"user\" icon={icon}>\n      {userTitle && (\n        <h3 data-test-id=\"user-title\">\n          <AnnotatedText value={userTitle.value} meta={userTitle.meta} />\n        </h3>\n      )}\n      {user.id && user.id !== userTitle?.value\n        ? renderUserDetails('id')\n        : user.username &&\n          user.username !== userTitle?.value &&\n          renderUserDetails('username')}\n    </Item>\n  );\n};\n\nexport default ContextSummaryUser;\n\nconst Subject = styled('strong')`\n  margin-right: ${space(0.5)};\n`;\n","import {Event} from 'sentry/types/event';\n\nimport {Context} from '.';\n\nfunction filterContexts(event: Event, context: Context) {\n  // if the operating system is macOS, we want to hide devices called \"Mac\" which don't have any additional info\n  if (context.keys.includes('device')) {\n    const {model, arch} = event.contexts?.device || {};\n    const {name: os} = event.contexts?.os || event.contexts?.client_os || {};\n\n    if (model === 'Mac' && !arch && os?.toLowerCase().includes('mac')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default filterContexts;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event} from 'sentry/types/event';\nimport {objectIsEmpty} from 'sentry/utils';\n\nimport ContextSummaryDevice from './contextSummaryDevice';\nimport ContextSummaryGeneric from './contextSummaryGeneric';\nimport ContextSummaryGPU from './contextSummaryGPU';\nimport ContextSummaryOS from './contextSummaryOS';\nimport ContextSummaryUser from './contextSummaryUser';\nimport filterContexts from './filterContexts';\n\nexport type Context = {\n  // TODO(ts): Refactor this component\n  Component: (props: any) => JSX.Element;\n  keys: string[];\n  unknownTitle?: string;\n};\n\nconst MIN_CONTEXTS = 3;\nconst MAX_CONTEXTS = 4;\nconst KNOWN_CONTEXTS: Context[] = [\n  {keys: ['user'], Component: ContextSummaryUser},\n  {\n    keys: ['browser'],\n    Component: ContextSummaryGeneric,\n    unknownTitle: t('Unknown Browser'),\n  },\n  {\n    keys: ['runtime'],\n    Component: ContextSummaryGeneric,\n    unknownTitle: t('Unknown Runtime'),\n  },\n  {keys: ['client_os', 'os'], Component: ContextSummaryOS},\n  {keys: ['device'], Component: ContextSummaryDevice},\n  {keys: ['gpu'], Component: ContextSummaryGPU},\n];\n\ntype Props = {\n  event: Event;\n};\n\nfunction ContextSummary({event}: Props) {\n  let contextCount = 0;\n\n  // Add defined contexts in the declared order, until we reach the limit\n  // defined by MAX_CONTEXTS.\n  let contexts = KNOWN_CONTEXTS.filter(context => filterContexts(event, context)).map(\n    ({keys, Component, unknownTitle}) => {\n      if (contextCount >= MAX_CONTEXTS) {\n        return null;\n      }\n\n      const [key, data] = keys\n        .map(k => [k, event.contexts[k] || event[k]])\n        .find(([_k, d]) => !objectIsEmpty(d)) || [null, null];\n\n      if (!key) {\n        return null;\n      }\n\n      contextCount += 1;\n      return <Component key={key} data={data} unknownTitle={unknownTitle} />;\n    }\n  );\n\n  // Bail out if all contexts are empty or only the user context is set\n  if (contextCount === 0 || (contextCount === 1 && contexts[0])) {\n    return null;\n  }\n\n  if (contextCount < MIN_CONTEXTS) {\n    // Add contents in the declared order until we have at least MIN_CONTEXTS\n    // contexts in our list.\n    contexts = KNOWN_CONTEXTS.filter(context => filterContexts(event, context)).map(\n      ({keys, Component, unknownTitle}, index) => {\n        if (contexts[index]) {\n          return contexts[index];\n        }\n        if (contextCount >= MIN_CONTEXTS) {\n          return null;\n        }\n        contextCount += 1;\n        return <Component key={keys[0]} data={{}} unknownTitle={unknownTitle} />;\n      }\n    );\n  }\n\n  return <Wrapper className=\"context-summary\">{contexts}</Wrapper>;\n}\n\nexport default ContextSummary;\n\nconst Wrapper = styled('div')`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    gap: ${space(3)};\n    margin-bottom: ${space(2)};\n  }\n`;\n","import ContextData from 'sentry/components/contextData';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n};\n\nconst DeviceInterface = ({event}: Props) => {\n  const data = event.device || {};\n  const extras = Object.entries<any>(data.data || {}).map(([key, value]) => {\n    return (\n      <tr key={key}>\n        <td className=\"key\">{key}</td>\n        <td className=\"value\">\n          <ContextData data={value} />\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <EventDataSection type=\"device\" title={t('Device')} wrapTitle>\n      <table className=\"table key-value\">\n        <tbody>\n          {data.name && (\n            <tr>\n              <td className=\"key\">Name</td>\n              <td className=\"value\">\n                <pre>{data.name}</pre>\n              </td>\n            </tr>\n          )}\n          {data.version && (\n            <tr>\n              <td className=\"key\">Version</td>\n              <td className=\"value\">\n                <pre>{data.version}</pre>\n              </td>\n            </tr>\n          )}\n          {data.build && (\n            <tr>\n              <td className=\"key\">Build</td>\n              <td className=\"value\">\n                <pre>{data.build}</pre>\n              </td>\n            </tr>\n          )}\n          {extras}\n        </tbody>\n      </table>\n    </EventDataSection>\n  );\n};\n\nexport default DeviceInterface;\n","export enum JavascriptProcessingErrors {\n  JS_GENERIC_FETCH_ERROR = 'js_generic_fetch_error',\n  JS_INVALID_HTTP_CODE = 'js_invalid_http_code',\n  JS_INVALID_CONTENT = 'js_invalid_content',\n  JS_NO_COLUMN = 'js_no_column',\n  JS_MISSING_SOURCE = 'js_no_source',\n  JS_INVALID_SOURCEMAP = 'js_invalid_source',\n  JS_TOO_MANY_REMOTE_SOURCES = 'js_too_many_sources',\n  JS_INVALID_SOURCE_ENCODING = 'js_invalid_source_encoding',\n  JS_INVALID_SOURCEMAP_LOCATION = 'js_invalid_sourcemap_location',\n  JS_TOO_LARGE = 'js_too_large',\n  JS_FETCH_TIMEOUT = 'js_fetch_timeout',\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport startCase from 'lodash/startCase';\nimport moment from 'moment';\n\nimport Button from 'sentry/components/button';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport ListItem from 'sentry/components/list/listItem';\nimport {JavascriptProcessingErrors} from 'sentry/constants/eventErrors';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport ExternalLink from '../links/externalLink';\n\ntype Error = {\n  message: React.ReactNode;\n  type: string;\n  data?: {\n    image_name?: string;\n    image_path?: string;\n    message?: string;\n    name?: string;\n    sdk_time?: string;\n    server_time?: string;\n    url?: string;\n  } & Record<string, any>;\n};\n\nconst keyMapping = {\n  image_uuid: 'Debug ID',\n  image_name: 'File Name',\n  image_path: 'File Path',\n};\n\ntype Props = {\n  error: Error;\n};\n\ntype State = {\n  isOpen: boolean;\n};\n\nclass ErrorItem extends Component<Props, State> {\n  state: State = {\n    isOpen: false,\n  };\n\n  shouldComponentUpdate(_nextProps: Props, nextState: State) {\n    return this.state.isOpen !== nextState.isOpen;\n  }\n\n  handleToggle = () => {\n    this.setState({isOpen: !this.state.isOpen});\n  };\n\n  cleanedData(errorData: NonNullable<Error['data']>) {\n    const data = {...errorData};\n\n    // The name is rendered as path in front of the message\n    if (typeof data.name === 'string') {\n      delete data.name;\n    }\n\n    if (data.message === 'None') {\n      // Python ensures a message string, but \"None\" doesn't make sense here\n      delete data.message;\n    }\n\n    if (typeof data.image_path === 'string') {\n      // Separate the image name for readability\n      const separator = /^([a-z]:\\\\|\\\\\\\\)/i.test(data.image_path) ? '\\\\' : '/';\n      const path = data.image_path.split(separator);\n      data.image_name = path.splice(-1, 1)[0];\n      data.image_path = path.length ? path.join(separator) + separator : '';\n    }\n\n    if (typeof data.server_time === 'string' && typeof data.sdk_time === 'string') {\n      data.message = t(\n        'Adjusted timestamps by %s',\n        moment\n          .duration(moment.utc(data.server_time).diff(moment.utc(data.sdk_time)))\n          .humanize()\n      );\n    }\n\n    return Object.entries(data).map(([key, value]) => ({\n      key,\n      value,\n      subject: keyMapping[key] || startCase(key),\n      meta: getMeta(data, key),\n    }));\n  }\n\n  renderPath(data: NonNullable<Error['data']>) {\n    const {name} = data;\n\n    if (!name || typeof name !== 'string') {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <strong>{name}</strong>\n        {': '}\n      </Fragment>\n    );\n  }\n\n  renderTroubleshootingLink(error: Error) {\n    if (\n      Object.values(JavascriptProcessingErrors).includes(\n        error.type as JavascriptProcessingErrors\n      )\n    ) {\n      return (\n        <Fragment>\n          {' '}\n          (\n          {tct('see [docsLink]', {\n            docsLink: (\n              <StyledExternalLink href=\"https://docs.sentry.io/platforms/javascript/sourcemaps/troubleshooting_js/\">\n                {t('Troubleshooting for JavaScript')}\n              </StyledExternalLink>\n            ),\n          })}\n          )\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {error} = this.props;\n    const {isOpen} = this.state;\n\n    const data = error?.data ?? {};\n    const cleanedData = this.cleanedData(data);\n\n    return (\n      <StyledListItem>\n        <OverallInfo>\n          <div>\n            {this.renderPath(data)}\n            {error.message}\n            {this.renderTroubleshootingLink(error)}\n          </div>\n          {!!cleanedData.length && (\n            <ToggleButton onClick={this.handleToggle} priority=\"link\" size=\"zero\">\n              {isOpen ? t('Collapse') : t('Expand')}\n            </ToggleButton>\n          )}\n        </OverallInfo>\n        {isOpen && <KeyValueList data={cleanedData} isContextData />}\n      </StyledListItem>\n    );\n  }\n}\n\nexport default ErrorItem;\n\nconst ToggleButton = styled(Button)`\n  margin-left: ${space(1.5)};\n  font-weight: 700;\n  color: ${p => p.theme.subText};\n  :hover,\n  :focus {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst StyledListItem = styled(ListItem)`\n  margin-bottom: ${space(0.75)};\n`;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  /* && is here to increase specificity to override default styles*/\n  && {\n    font-weight: inherit;\n    color: inherit;\n    text-decoration: underline;\n  }\n`;\n\nconst OverallInfo = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(auto, max-content));\n  word-break: break-all;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\nimport uniqWith from 'lodash/uniqWith';\n\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport ErrorItem from 'sentry/components/events/errorItem';\nimport List from 'sentry/components/list';\nimport {JavascriptProcessingErrors} from 'sentry/constants/eventErrors';\nimport {t, tn} from 'sentry/locale';\nimport {Artifact, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withApi from 'sentry/utils/withApi';\n\nimport {DataSection} from './styles';\n\nconst MAX_ERRORS = 100;\n\nexport type Error = ErrorItem['props']['error'];\n\ntype Props = {\n  api: Client;\n  event: Event;\n  orgSlug: Organization['slug'];\n  proGuardErrors: Array<Error>;\n  projectSlug: Project['slug'];\n};\n\ntype State = {\n  releaseArtifacts?: Array<Artifact>;\n};\n\nclass Errors extends Component<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    this.checkSourceCodeErrors();\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    return this.props.event.id !== nextProps.event.id;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.event.id !== prevProps.event.id) {\n      this.checkSourceCodeErrors();\n    }\n  }\n\n  async fetchReleaseArtifacts(query: string) {\n    const {api, orgSlug, event, projectSlug} = this.props;\n    const {release} = event;\n    const releaseVersion = release?.version;\n\n    if (!releaseVersion || !query) {\n      return;\n    }\n\n    try {\n      const releaseArtifacts = await api.requestPromise(\n        `/projects/${orgSlug}/${projectSlug}/releases/${encodeURIComponent(\n          releaseVersion\n        )}/files/?query=${query}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      this.setState({releaseArtifacts});\n    } catch (error) {\n      Sentry.captureException(error);\n      // do nothing, the UI will not display extra error details\n    }\n  }\n\n  checkSourceCodeErrors() {\n    const {event} = this.props;\n    const {errors} = event;\n\n    const sourceCodeErrors = (errors ?? []).filter(\n      error => error.type === 'js_no_source' && error.data.url\n    );\n\n    if (!sourceCodeErrors.length) {\n      return;\n    }\n\n    const pathNames: Array<string> = [];\n\n    for (const sourceCodeError of sourceCodeErrors) {\n      const url = sourceCodeError.data.url;\n      if (url) {\n        const pathName = this.getURLPathname(url);\n\n        if (pathName) {\n          pathNames.push(encodeURIComponent(pathName));\n        }\n      }\n    }\n\n    this.fetchReleaseArtifacts(pathNames.join('&query='));\n  }\n\n  getURLPathname(url: string) {\n    try {\n      return new URL(url).pathname;\n    } catch {\n      return undefined;\n    }\n  }\n\n  render() {\n    const {event, proGuardErrors} = this.props;\n    const {releaseArtifacts} = this.state;\n    const {dist: eventDistribution, errors: eventErrors = []} = event;\n\n    // XXX: uniqWith returns unique errors and is not performant with large datasets\n    const otherErrors: Array<Error> =\n      eventErrors.length > MAX_ERRORS ? eventErrors : uniqWith(eventErrors, isEqual);\n\n    const errors = [...otherErrors, ...proGuardErrors];\n\n    return (\n      <StyledDataSection>\n        <StyledAlert\n          type=\"error\"\n          showIcon\n          data-test-id=\"event-error-alert\"\n          expand={[\n            <ErrorList\n              key=\"event-error-details\"\n              data-test-id=\"event-error-details\"\n              symbol=\"bullet\"\n            >\n              {errors.map((error, errorIdx) => {\n                const data = error.data ?? {};\n                if (\n                  error.type === JavascriptProcessingErrors.JS_MISSING_SOURCE &&\n                  data.url &&\n                  !!releaseArtifacts?.length\n                ) {\n                  const releaseArtifact = releaseArtifacts.find(releaseArt => {\n                    const pathname = data.url ? this.getURLPathname(data.url) : undefined;\n\n                    if (pathname) {\n                      return releaseArt.name.includes(pathname);\n                    }\n                    return false;\n                  });\n\n                  const releaseArtifactDistribution = releaseArtifact?.dist ?? null;\n\n                  // Neither event nor file have dist -> matching\n                  // Event has dist, file doesn’t -> not matching\n                  // File has dist, event doesn’t -> not matching\n                  // Both have dist, same value -> matching\n                  // Both have dist, different values -> not matching\n                  if (releaseArtifactDistribution !== eventDistribution) {\n                    error.message = t(\n                      'Source code was not found because the distribution did not match'\n                    );\n                    data['expected-distribution'] = eventDistribution;\n                    data['current-distribution'] = releaseArtifactDistribution;\n                  }\n                }\n\n                return <ErrorItem key={errorIdx} error={{...error, data}} />;\n              })}\n            </ErrorList>,\n          ]}\n        >\n          {tn(\n            'There was %s problem processing this event',\n            'There were %s problems processing this event',\n            errors.length\n          )}\n        </StyledAlert>\n      </StyledDataSection>\n    );\n  }\n}\n\nconst StyledDataSection = styled(DataSection)`\n  border-top: none;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    padding-top: 0;\n  }\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst ErrorList = styled(List)`\n  li:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport default withApi(Errors);\n","import {EventAttachment} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nexport type ViewerProps = {\n  attachment: EventAttachment;\n  event: Event;\n  orgId: string;\n  projectId: string;\n  className?: string;\n};\n\nexport function getAttachmentUrl(props: ViewerProps, withPrefix?: boolean): string {\n  const {orgId, projectId, event, attachment} = props;\n  return `${withPrefix ? '/api/0' : ''}/projects/${orgId}/${projectId}/events/${\n    event.id\n  }/attachments/${attachment.id}/?download`;\n}\n","import styled from '@emotion/styled';\n\nimport {\n  getAttachmentUrl,\n  ViewerProps,\n} from 'sentry/components/events/attachmentViewers/utils';\nimport {PanelItem} from 'sentry/components/panels';\n\ntype Props = Omit<ViewerProps, 'attachment'> & {\n  attachment: Omit<ViewerProps['attachment'], 'event_id'> & {\n    event_id?: string;\n  };\n  onError?: React.ReactEventHandler<HTMLImageElement>;\n  onLoad?: React.ReactEventHandler<HTMLImageElement>;\n};\n\nfunction ImageViewer({className, onLoad, onError, ...props}: Props) {\n  return (\n    <Container className={className}>\n      <img src={getAttachmentUrl(props, true)} onLoad={onLoad} onError={onError} />\n    </Container>\n  );\n}\n\nexport default ImageViewer;\n\nconst Container = styled(PanelItem)`\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\n\nimport {PanelItem} from 'sentry/components/panels';\n\nconst PreviewPanelItem = styled(PanelItem)`\n  overflow: auto;\n  max-height: 500px;\n  padding: 0;\n`;\n\nexport default PreviewPanelItem;\n","import styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport ContextData from 'sentry/components/contextData';\nimport PreviewPanelItem from 'sentry/components/events/attachmentViewers/previewPanelItem';\nimport {\n  getAttachmentUrl,\n  ViewerProps,\n} from 'sentry/components/events/attachmentViewers/utils';\n\ntype Props = ViewerProps & AsyncComponent['props'];\n\ntype State = AsyncComponent['state'];\n\nexport default class JsonViewer extends AsyncComponent<Props, State> {\n  getEndpoints(): [string, string][] {\n    return [['attachmentJson', getAttachmentUrl(this.props)]];\n  }\n\n  renderBody() {\n    const {attachmentJson} = this.state;\n    if (!attachmentJson) {\n      return null;\n    }\n\n    let json;\n    try {\n      json = JSON.parse(attachmentJson);\n    } catch (e) {\n      json = null;\n    }\n\n    return (\n      <PreviewPanelItem>\n        <StyledContextData\n          data={json}\n          maxDefaultDepth={4}\n          preserveQuotes\n          style={{width: '100%'}}\n          jsonConsts\n        />\n      </PreviewPanelItem>\n    );\n  }\n}\n\nconst StyledContextData = styled(ContextData)`\n  margin-bottom: 0;\n`;\n","import styled from '@emotion/styled';\nimport ansicolor from 'ansicolor';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport PreviewPanelItem from 'sentry/components/events/attachmentViewers/previewPanelItem';\nimport {\n  getAttachmentUrl,\n  ViewerProps,\n} from 'sentry/components/events/attachmentViewers/utils';\nimport space from 'sentry/styles/space';\nimport theme from 'sentry/utils/theme';\n\ntype Props = ViewerProps & AsyncComponent['props'];\n\ntype State = AsyncComponent['state'];\n\nconst COLORS = {\n  black: theme.black,\n  white: theme.white,\n  redDim: theme.red200,\n  red: theme.red300,\n  greenDim: theme.green200,\n  green: theme.green300,\n  yellowDim: theme.pink200,\n  yellow: theme.pink300,\n  blueDim: theme.blue200,\n  blue: theme.blue300,\n  magentaDim: theme.pink200,\n  magenta: theme.pink300,\n  cyanDim: theme.blue200,\n  cyan: theme.blue300,\n};\n\nexport default class LogFileViewer extends AsyncComponent<Props, State> {\n  getEndpoints(): [string, string][] {\n    return [['attachmentText', getAttachmentUrl(this.props)]];\n  }\n\n  renderBody() {\n    const {attachmentText} = this.state;\n    if (!attachmentText) {\n      return null;\n    }\n\n    const spans = ansicolor\n      .parse(attachmentText)\n      .spans.map(({color, bgColor, text}, idx) => {\n        const style = {} as React.CSSProperties;\n        if (color) {\n          if (color.name) {\n            style.color =\n              COLORS[color.name + (color.dim ? 'Dim' : '')] || COLORS[color.name] || '';\n          }\n          if (color.bright) {\n            style.fontWeight = 500;\n          }\n        }\n        if (bgColor && bgColor.name) {\n          style.background =\n            COLORS[bgColor.name + (bgColor.dim ? 'Dim' : '')] ||\n            COLORS[bgColor.name] ||\n            '';\n        }\n        return (\n          <span style={style} key={idx}>\n            {text}\n          </span>\n        );\n      });\n\n    return (\n      <PreviewPanelItem>\n        <CodeWrapper>{spans}</CodeWrapper>\n      </PreviewPanelItem>\n    );\n  }\n}\n\nconst CodeWrapper = styled('pre')`\n  padding: ${space(1)} ${space(2)};\n  width: 100%;\n  margin-bottom: 0;\n  &:after {\n    content: '';\n  }\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport JsonViewer from 'sentry/components/events/attachmentViewers/jsonViewer';\nimport {ViewerProps} from 'sentry/components/events/attachmentViewers/utils';\nimport PanelAlert from 'sentry/components/panels/panelAlert';\nimport {tct} from 'sentry/locale';\n\ntype State = {\n  showRawJson: boolean;\n};\n\nexport default class RRWebJsonViewer extends Component<ViewerProps, State> {\n  state: State = {\n    showRawJson: false,\n  };\n\n  render() {\n    const {showRawJson} = this.state;\n\n    return (\n      <Fragment>\n        <StyledPanelAlert border={showRawJson} type=\"info\">\n          {tct(\n            'This is an attachment containing a session replay. [replayLink:View the replay] or [jsonLink:view the raw JSON].',\n            {\n              replayLink: <a href=\"#context-replay\" />,\n              jsonLink: (\n                <a\n                  onClick={() =>\n                    this.setState(state => ({\n                      showRawJson: !state.showRawJson,\n                    }))\n                  }\n                />\n              ),\n            }\n          )}\n        </StyledPanelAlert>\n        {showRawJson && <JsonViewer {...this.props} />}\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelAlert = styled(PanelAlert)<{border: boolean}>`\n  margin: 0;\n  border-bottom: ${p => (p.border ? `1px solid ${p.theme.border}` : null)};\n`;\n","import {Location} from 'history';\n\nimport {tct} from 'sentry/locale';\nimport {crashReportTypes} from 'sentry/views/organizationGroupDetails/groupEventAttachments/groupEventAttachmentsFilter';\n\nimport Alert from '../alert';\nimport Link from '../links/link';\n\ntype Props = {\n  groupId: string;\n  location: Location;\n  orgSlug: string;\n  projectSlug: string;\n};\n\nconst EventAttachmentsCrashReportsNotice = ({\n  orgSlug,\n  projectSlug,\n  location,\n  groupId,\n}: Props) => {\n  const settingsUrl = `/settings/${orgSlug}/projects/${projectSlug}/security-and-privacy/`;\n  const attachmentsUrl = {\n    pathname: `/organizations/${orgSlug}/issues/${groupId}/attachments/`,\n    query: {...location.query, types: crashReportTypes},\n  };\n\n  return (\n    <Alert type=\"info\" showIcon>\n      {tct(\n        'Your limit of stored crash reports has been reached for this issue. [attachmentsLink: View crashes] or [settingsLink: configure limit].',\n        {\n          attachmentsLink: <Link to={attachmentsUrl} />,\n          settingsLink: <Link to={settingsUrl} />,\n        }\n      )}\n    </Alert>\n  );\n};\n\nexport default EventAttachmentsCrashReportsNotice;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport ImageViewer from 'sentry/components/events/attachmentViewers/imageViewer';\nimport JsonViewer from 'sentry/components/events/attachmentViewers/jsonViewer';\nimport LogFileViewer from 'sentry/components/events/attachmentViewers/logFileViewer';\nimport RRWebJsonViewer from 'sentry/components/events/attachmentViewers/rrwebJsonViewer';\nimport EventAttachmentActions from 'sentry/components/events/eventAttachmentActions';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport FileSize from 'sentry/components/fileSize';\nimport {PanelTable} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {IssueAttachment} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport AttachmentUrl from 'sentry/utils/attachmentUrl';\nimport withApi from 'sentry/utils/withApi';\n\nimport EventAttachmentsCrashReportsNotice from './eventAttachmentsCrashReportsNotice';\n\ntype Props = {\n  api: Client;\n  attachments: IssueAttachment[];\n  event: Event;\n  location: Location;\n  onDeleteAttachment: (attachmentId: IssueAttachment['id']) => void;\n  orgId: string;\n  projectId: string;\n};\n\ntype State = {\n  attachmentPreviews: Record<string, boolean>;\n  expanded: boolean;\n};\n\nclass EventAttachments extends Component<Props, State> {\n  state: State = {\n    expanded: false,\n    attachmentPreviews: {},\n  };\n\n  getInlineAttachmentRenderer(attachment: IssueAttachment) {\n    switch (attachment.mimetype) {\n      case 'text/plain':\n        return attachment.size > 0 ? LogFileViewer : undefined;\n      case 'text/json':\n      case 'text/x-json':\n      case 'application/json':\n        if (attachment.name === 'rrweb.json' || attachment.name.startsWith('rrweb-')) {\n          return RRWebJsonViewer;\n        }\n        return JsonViewer;\n      case 'image/jpeg':\n      case 'image/png':\n      case 'image/gif':\n        return ImageViewer;\n      default:\n        return undefined;\n    }\n  }\n\n  hasInlineAttachmentRenderer(attachment: IssueAttachment): boolean {\n    return !!this.getInlineAttachmentRenderer(attachment);\n  }\n\n  attachmentPreviewIsOpen = (attachment: IssueAttachment) => {\n    return !!this.state.attachmentPreviews[attachment.id];\n  };\n\n  renderInlineAttachment(attachment: IssueAttachment) {\n    const AttachmentComponent = this.getInlineAttachmentRenderer(attachment);\n    if (!AttachmentComponent || !this.attachmentPreviewIsOpen(attachment)) {\n      return null;\n    }\n    return (\n      <AttachmentPreviewWrapper>\n        <AttachmentComponent\n          orgId={this.props.orgId}\n          projectId={this.props.projectId}\n          event={this.props.event}\n          attachment={attachment}\n        />\n      </AttachmentPreviewWrapper>\n    );\n  }\n\n  togglePreview(attachment: IssueAttachment) {\n    this.setState(({attachmentPreviews}) => ({\n      attachmentPreviews: {\n        ...attachmentPreviews,\n        [attachment.id]: !attachmentPreviews[attachment.id],\n      },\n    }));\n  }\n\n  render() {\n    const {event, projectId, orgId, location, attachments, onDeleteAttachment} =\n      this.props;\n    const crashFileStripped = event.metadata.stripped_crash;\n\n    if (!attachments.length && !crashFileStripped) {\n      return null;\n    }\n\n    const title = t('Attachments (%s)', attachments.length);\n\n    const lastAttachmentPreviewed =\n      attachments.length > 0 &&\n      this.attachmentPreviewIsOpen(attachments[attachments.length - 1]);\n\n    return (\n      <EventDataSection type=\"attachments\" title={title}>\n        {crashFileStripped && (\n          <EventAttachmentsCrashReportsNotice\n            orgSlug={orgId}\n            projectSlug={projectId}\n            groupId={event.groupID!}\n            location={location}\n          />\n        )}\n\n        {attachments.length > 0 && (\n          <StyledPanelTable\n            headers={[\n              <Name key=\"name\">{t('File Name')}</Name>,\n              <Size key=\"size\">{t('Size')}</Size>,\n              t('Actions'),\n            ]}\n          >\n            {attachments.map(attachment => (\n              <Fragment key={attachment.id}>\n                <Name>{attachment.name}</Name>\n                <Size>\n                  <FileSize bytes={attachment.size} />\n                </Size>\n                <AttachmentUrl\n                  projectId={projectId}\n                  eventId={event.id}\n                  attachment={attachment}\n                >\n                  {url => (\n                    <div>\n                      <EventAttachmentActions\n                        url={url}\n                        onDelete={onDeleteAttachment}\n                        onPreview={_attachmentId => this.togglePreview(attachment)}\n                        withPreviewButton\n                        previewIsOpen={this.attachmentPreviewIsOpen(attachment)}\n                        hasPreview={this.hasInlineAttachmentRenderer(attachment)}\n                        attachmentId={attachment.id}\n                      />\n                    </div>\n                  )}\n                </AttachmentUrl>\n                {this.renderInlineAttachment(attachment)}\n                {/* XXX: hack to deal with table grid borders */}\n                {lastAttachmentPreviewed && (\n                  <Fragment>\n                    <div style={{display: 'none'}} />\n                    <div style={{display: 'none'}} />\n                  </Fragment>\n                )}\n              </Fragment>\n            ))}\n          </StyledPanelTable>\n        )}\n      </EventDataSection>\n    );\n  }\n}\n\nexport default withApi<Props>(EventAttachments);\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr auto auto;\n`;\n\nconst Name = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst Size = styled('div')`\n  text-align: right;\n`;\n\nconst AttachmentPreviewWrapper = styled('div')`\n  grid-column: auto / span 3;\n  border: none;\n  padding: 0;\n`;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\nimport flatMap from 'lodash/flatMap';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {CauseHeader, DataSection} from 'sentry/components/events/styles';\nimport {Panel} from 'sentry/components/panels';\nimport {IconAdd, IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport type {AvatarProject, Group} from 'sentry/types';\nimport type {Event} from 'sentry/types/event';\nimport useCommitters from 'sentry/utils/useCommitters';\n\ninterface Props {\n  event: Event;\n  project: AvatarProject;\n  group?: Group;\n}\n\nfunction EventCause({group, event, project}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const {committers} = useCommitters({\n    group,\n    eventId: event.id,\n    projectSlug: project.slug,\n  });\n\n  function getUniqueCommitsWithAuthors() {\n    // Get a list of commits with author information attached\n    const commitsWithAuthors = flatMap(committers, ({commits, author}) =>\n      commits.map(commit => ({\n        ...commit,\n        author,\n      }))\n    );\n\n    // Remove duplicate commits\n    return uniqBy(commitsWithAuthors, commit => commit.id);\n  }\n\n  if (!committers.length) {\n    return null;\n  }\n\n  const commits = getUniqueCommitsWithAuthors();\n\n  return (\n    <DataSection>\n      <CauseHeader>\n        <h3 data-test-id=\"event-cause\">\n          {t('Suspect Commits')} ({commits.length})\n        </h3>\n        {commits.length > 1 && (\n          <ExpandButton onClick={() => setIsExpanded(!isExpanded)}>\n            {isExpanded ? (\n              <Fragment>\n                {t('Show less')} <IconSubtract isCircled size=\"md\" />\n              </Fragment>\n            ) : (\n              <Fragment>\n                {t('Show more')} <IconAdd isCircled size=\"md\" />\n              </Fragment>\n            )}\n          </ExpandButton>\n        )}\n      </CauseHeader>\n      <Panel>\n        {commits.slice(0, isExpanded ? 100 : 1).map(commit => (\n          <CommitRow key={commit.id} commit={commit} />\n        ))}\n      </Panel>\n    </DataSection>\n  );\n}\n\nconst ExpandButton = styled('button')`\n  display: flex;\n  align-items: center;\n  & > svg {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport default EventCause;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport codesworth from 'sentry-images/spot/codesworth.svg';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {DataSection} from 'sentry/components/events/styles';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Commit, Organization, Project, RepositoryStatus} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {IssueEventKey} from 'sentry/utils/analytics/issueAnalyticsEvents';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {promptCanShow, promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport withApi from 'sentry/utils/withApi';\n\nconst EXAMPLE_COMMITS = ['dec0de', 'de1e7e', '5ca1ed'];\n\nconst DUMMY_COMMIT: Commit = {\n  id: getDynamicText({\n    value: EXAMPLE_COMMITS[Math.floor(Math.random() * EXAMPLE_COMMITS.length)],\n    fixed: '5ca1ed',\n  }),\n  author: {\n    id: '',\n    name: 'codesworth',\n    username: '',\n    email: 'codesworth@example.com',\n    ip_address: '',\n    lastSeen: '',\n    lastLogin: '',\n    isSuperuser: false,\n    isAuthenticated: false,\n    emails: [],\n    isManaged: false,\n    lastActive: '',\n    isStaff: false,\n    identities: [],\n    isActive: true,\n    has2fa: false,\n    canReset2fa: false,\n    authenticators: [],\n    dateJoined: '',\n    options: {\n      theme: 'system',\n      timezone: '',\n      stacktraceOrder: 1,\n      language: '',\n      clock24Hours: false,\n      avatarType: 'letter_avatar',\n    },\n    flags: {newsletter_consent_prompt: false},\n    hasPasswordAuth: true,\n    permissions: new Set([]),\n    experiments: {},\n  },\n  dateCreated: moment().subtract(3, 'day').format(),\n  repository: {\n    id: '',\n    integrationId: '',\n    name: '',\n    externalSlug: '',\n    url: '',\n    provider: {\n      id: 'integrations:github',\n      name: 'GitHub',\n    },\n    dateCreated: '',\n    status: RepositoryStatus.ACTIVE,\n  },\n  releases: [],\n  message: t('This example commit broke something'),\n};\n\nconst SUSPECT_COMMITS_FEATURE = 'suspect_commits';\n\ntype ClickPayload = {\n  action: 'snoozed' | 'dismissed';\n  eventKey: IssueEventKey;\n};\n\ntype Props = {\n  api: Client;\n  event: Event;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  shouldShow: boolean | undefined;\n};\n\nclass EventCauseEmpty extends Component<Props, State> {\n  state: State = {\n    shouldShow: undefined,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    const {shouldShow} = this.state;\n\n    if (!prevState.shouldShow && shouldShow) {\n      this.trackAnalytics('event_cause.viewed');\n    }\n  }\n\n  async fetchData() {\n    const {api, event, project, organization} = this.props;\n\n    if (!promptCanShow(SUSPECT_COMMITS_FEATURE, event.eventID)) {\n      this.setState({shouldShow: false});\n      return;\n    }\n\n    const data = await promptsCheck(api, {\n      projectId: project.id,\n      organizationId: organization.id,\n      feature: SUSPECT_COMMITS_FEATURE,\n    });\n\n    this.setState({shouldShow: !promptIsDismissed(data ?? {}, 7)});\n  }\n\n  handleClick({action, eventKey}: ClickPayload) {\n    const {api, project, organization} = this.props;\n\n    const data = {\n      projectId: project.id,\n      organizationId: organization.id,\n      feature: SUSPECT_COMMITS_FEATURE,\n      status: action,\n    };\n    promptsUpdate(api, data).then(() => this.setState({shouldShow: false}));\n    this.trackAnalytics(eventKey);\n  }\n\n  trackAnalytics(eventKey: IssueEventKey) {\n    const {project, organization} = this.props;\n\n    trackAdvancedAnalyticsEvent(eventKey, {\n      project_id: project.id,\n      platform: project.platform,\n      organization,\n    });\n  }\n\n  render() {\n    if (!this.state.shouldShow) {\n      return null;\n    }\n\n    return (\n      <DataSection data-test-id=\"loaded-event-cause-empty\">\n        <StyledPanel dashedBorder>\n          <BoxHeader>\n            <Description>\n              <h3>{t('Configure Suspect Commits')}</h3>\n              <p>{t('To identify which commit caused this issue')}</p>\n            </Description>\n            <ButtonList>\n              <DocsButton\n                size=\"small\"\n                priority=\"primary\"\n                href=\"https://docs.sentry.io/product/releases/setup/\"\n                onClick={() => this.trackAnalytics('event_cause.docs_clicked')}\n              >\n                {t('Read the docs')}\n              </DocsButton>\n\n              <div>\n                <SnoozeButton\n                  title={t('Remind me next week')}\n                  size=\"small\"\n                  onClick={() =>\n                    this.handleClick({\n                      action: 'snoozed',\n                      eventKey: 'event_cause.snoozed',\n                    })\n                  }\n                >\n                  {t('Snooze')}\n                </SnoozeButton>\n                <DismissButton\n                  title={t('Dismiss for this project')}\n                  size=\"small\"\n                  onClick={() =>\n                    this.handleClick({\n                      action: 'dismissed',\n                      eventKey: 'event_cause.dismissed',\n                    })\n                  }\n                >\n                  {t('Dismiss')}\n                </DismissButton>\n              </div>\n            </ButtonList>\n          </BoxHeader>\n          <ExampleCommitPanel>\n            <CommitRow\n              key={DUMMY_COMMIT.id}\n              commit={DUMMY_COMMIT}\n              customAvatar={<CustomAvatar src={codesworth} />}\n            />\n          </ExampleCommitPanel>\n        </StyledPanel>\n      </DataSection>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  padding: ${space(3)};\n  padding-bottom: 0;\n  background: none;\n`;\n\nconst Description = styled('div')`\n  h3 {\n    font-size: 14px;\n    text-transform: uppercase;\n    margin-bottom: ${space(0.25)};\n    color: ${p => p.theme.gray300};\n  }\n\n  p {\n    font-size: 13px;\n    font-weight: bold;\n    color: ${p => p.theme.textColor};\n    margin-bottom: ${space(1.5)};\n  }\n`;\n\nconst ButtonList = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n  justify-self: end;\n  margin-bottom: 16px;\n`;\n\nconst DocsButton = styled(Button)`\n  &:focus {\n    color: ${p => p.theme.white};\n  }\n`;\n\nconst SnoozeButton = styled(Button)`\n  border-right: 0;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n`;\n\nconst DismissButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n\nconst ExampleCommitPanel = styled(Panel)`\n  overflow: hidden;\n  pointer-events: none;\n  position: relative;\n  padding-right: ${space(3)};\n\n  &:after {\n    display: block;\n    content: 'Example';\n    position: absolute;\n    top: 16px;\n    right: -24px;\n    text-transform: uppercase;\n    background: #e46187;\n    padding: 4px 26px;\n    line-height: 11px;\n    font-size: 11px;\n    color: ${p => p.theme.white};\n    transform: rotate(45deg);\n  }\n`;\n\nconst CustomAvatar = styled('img')`\n  height: 48px;\n  padding-right: 12px;\n  margin: -6px 0px -6px -2px;\n`;\n\nconst BoxHeader = styled('div')`\n  display: grid;\n  align-items: start;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n`;\n\nexport default withApi(EventCauseEmpty);\n","export enum EventExtraDataType {\n  CRASHED_PROCESS = 'crashed_process',\n}\n\nexport type EventExtraData = {\n  [key: string]: any;\n};\n","import {t} from 'sentry/locale';\n\nimport {EventExtraData, EventExtraDataType} from './types';\n\ntype Output = {\n  subject: string;\n  value?: React.ReactNode;\n};\n\nconst getEventExtraDataKnownDataDetails = (\n  data: EventExtraData,\n  key: EventExtraDataType\n): Output => {\n  switch (key) {\n    case EventExtraDataType.CRASHED_PROCESS:\n      return {\n        subject: t('Crashed Process'),\n        value: data[key],\n      };\n    default:\n      return {\n        subject: key,\n        value: data[key],\n      };\n  }\n};\n\nexport default getEventExtraDataKnownDataDetails;\n","import {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueListData} from 'sentry/types';\n\nimport getEventExtraDataKnownDataDetails from './getEventExtraDataKnownDataDetails';\nimport {EventExtraData, EventExtraDataType} from './types';\n\nfunction getEventExtraDataKnownData(data: EventExtraData): KeyValueListData {\n  const knownData: KeyValueListData = [];\n\n  const dataKeys = Object.keys(data);\n  for (const key of dataKeys) {\n    const knownDataDetails = getEventExtraDataKnownDataDetails(\n      data,\n      key as EventExtraDataType\n    );\n\n    knownData.push({\n      key,\n      ...knownDataDetails,\n      meta: getMeta(data, key),\n    });\n  }\n  return knownData;\n}\n\nexport default getEventExtraDataKnownData;\n","import ContextBlock from 'sentry/components/events/contexts/contextBlock';\nimport {defined} from 'sentry/utils';\n\nimport getEventExtraDataKnownData from './getEventExtraDataKnownData';\n\ntype Props = {\n  raw: boolean;\n  data?: Record<string, any>;\n};\n\nconst EventDataContent = ({data, raw}: Props) => {\n  if (!defined(data)) {\n    return null;\n  }\n\n  return <ContextBlock data={getEventExtraDataKnownData(data)} raw={raw} />;\n};\n\nexport default EventDataContent;\n","import {memo, useState} from 'react';\n\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\nimport EventDataContent from './eventDataContent';\n\ntype Props = {\n  event: Event;\n};\n\nconst EventExtraData = memo(\n  ({event}: Props) => {\n    const [raw, setRaw] = useState(false);\n    return (\n      <EventDataSection\n        type=\"extra\"\n        title={t('Additional Data')}\n        toggleRaw={() => setRaw(!raw)}\n        raw={raw}\n      >\n        <EventDataContent raw={raw} data={event.context} />\n      </EventDataSection>\n    );\n  },\n  (prevProps: Props, nextProps: Props) => prevProps.event.id !== nextProps.event.id\n);\n\nexport default EventExtraData;\n","import isNil from 'lodash/isNil';\n\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {Meta} from 'sentry/types';\n\ntype Props<Values, K extends Extract<keyof Values, string>> = {\n  /**\n   * Render prop that is called with these args:\n   *  value: The actual value,\n   *  meta: metadata object if it exists, otherwise undefined,\n   */\n  children: (value: Values[K], meta?: Meta) => React.ReactNode;\n  object: Values;\n  prop: K;\n  required: boolean;\n};\n\n/**\n * Retrieves metadata from an object (object should be a proxy that\n * has been decorated using `app/components/events/meta/metaProxy/withMeta`\n */\nconst MetaData = <Values extends {}>({\n  children,\n  object,\n  prop,\n  required,\n}: Props<Values, Extract<keyof Values, string>>) => {\n  const value = object[prop];\n  const meta = getMeta(object, prop);\n\n  if (required && isNil(value) && !meta) {\n    return null;\n  }\n\n  return <ErrorBoundary mini>{children(value, meta)}</ErrorBoundary>;\n};\n\nexport default MetaData;\n","import AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport MetaData from 'sentry/components/events/meta/metaData';\nimport {isFunction} from 'sentry/utils';\n\ntype Props<Values> = {\n  children: (value: string | null | React.ReactNode) => React.ReactNode | string;\n  object: Values;\n  objectKey: Extract<keyof Values, string>;\n  required?: boolean;\n};\n\n/**\n * Returns the value of `object[prop]` and returns an annotated component if\n * there is meta data\n */\nconst Annotated = <Values extends {}>({\n  children,\n  object,\n  objectKey,\n  required = false,\n}: Props<Values>) => {\n  return (\n    <MetaData object={object} prop={objectKey} required={required}>\n      {(value, meta) => {\n        const toBeReturned = <AnnotatedText value={value} meta={meta} />;\n        return isFunction(children) ? children(toBeReturned) : toBeReturned;\n      }}\n    </MetaData>\n  );\n};\n\nexport default Annotated;\n","import EventDataSection from 'sentry/components/events/eventDataSection';\nimport Annotated from 'sentry/components/events/meta/annotated';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  sdk: NonNullable<Event['sdk']>;\n};\n\nconst EventSdk = ({sdk}: Props) => (\n  <EventDataSection type=\"sdk\" title={t('SDK')}>\n    <table className=\"table key-value\">\n      <tbody>\n        <tr key=\"name\">\n          <td className=\"key\">{t('Name')}</td>\n          <td className=\"value\">\n            <Annotated object={sdk} objectKey=\"name\">\n              {value => <pre className=\"val-string\">{value}</pre>}\n            </Annotated>\n          </td>\n        </tr>\n        <tr key=\"version\">\n          <td className=\"key\">{t('Version')}</td>\n          <td className=\"value\">\n            <Annotated object={sdk} objectKey=\"version\">\n              {value => <pre className=\"val-string\">{value}</pre>}\n            </Annotated>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </EventDataSection>\n);\n\nexport default EventSdk;\n","import {Location} from 'history';\n\nimport Pills from 'sentry/components/pills';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined, generateQueryWithTag} from 'sentry/utils';\n\nimport EventTagsPill from './eventTagsPill';\n\ntype Props = {\n  event: Event;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n};\n\nconst EventTags = ({event: {tags = []}, organization, projectId, location}: Props) => {\n  if (!tags.length) {\n    return null;\n  }\n\n  const orgSlug = organization.slug;\n  const streamPath = `/organizations/${orgSlug}/issues/`;\n\n  return (\n    <Pills>\n      {tags.map((tag, index) => (\n        <EventTagsPill\n          key={!defined(tag.key) ? `tag-pill-${index}` : tag.key}\n          tag={tag}\n          projectId={projectId}\n          organization={organization}\n          query={generateQueryWithTag(location.query, tag)}\n          streamPath={streamPath}\n        />\n      ))}\n    </Pills>\n  );\n};\n\nexport default EventTags;\n","import {Component} from 'react';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n};\n\nclass EventPackageData extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    return this.props.event.id !== nextProps.event.id;\n  }\n\n  render() {\n    const {event} = this.props;\n    let longKeys: boolean, title: string;\n    const packages = Object.entries(event.packages || {}).map(([key, value]) => ({\n      key,\n      value,\n      subject: key,\n      meta: getMeta(event.packages, key),\n    }));\n\n    switch (event.platform) {\n      case 'csharp':\n        longKeys = true;\n        title = t('Assemblies');\n        break;\n      default:\n        longKeys = false;\n        title = t('Packages');\n    }\n\n    return (\n      <EventDataSection type=\"packages\" title={title}>\n        <ClippedBox>\n          <ErrorBoundary mini>\n            <KeyValueList data={packages} longKeys={longKeys} />\n          </ErrorBoundary>\n        </ClippedBox>\n      </EventDataSection>\n    );\n  }\n}\n\nexport default EventPackageData;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport LazyLoad from 'sentry/components/lazyLoad';\nimport {IssueAttachment, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n  orgId: Organization['id'];\n  projectId: Project['id'];\n  renderer?: Function;\n} & AsyncComponent['props'];\n\ntype State = {\n  attachmentList: Array<IssueAttachment> | null;\n} & AsyncComponent['state'];\n\nclass RRWebIntegration extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, event} = this.props;\n    return [\n      [\n        'attachmentList',\n        `/projects/${orgId}/${projectId}/events/${event.id}/attachments/`,\n\n        // This was changed from `rrweb.json`, so that we can instead\n        // support incremental rrweb events as attachments. This is to avoid\n        // having clients uploading a single, large sized replay.\n        //\n        // Note: This will include all attachments that contain `rrweb`\n        // anywhere its name. We need to maintain compatibility with existing\n        // rrweb plugin users (single replay), but also support incremental\n        // replays as well. I can't think of a reason why someone would have\n        // a non-rrweb replay containing the string `rrweb`, but people have\n        // surprised me before.\n        {query: {query: 'rrweb'}},\n      ],\n    ];\n  }\n\n  renderLoading() {\n    // hide loading indicator\n    return null;\n  }\n\n  renderBody() {\n    const {attachmentList} = this.state;\n    const renderer = this.props.renderer || (children => children);\n\n    if (!attachmentList?.length) {\n      return null;\n    }\n\n    const {orgId, projectId, event} = this.props;\n\n    function createAttachmentUrl(attachment: IssueAttachment) {\n      return `/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${attachment.id}/?download`;\n    }\n\n    return renderer(\n      <LazyLoad\n        component={() => import('./rrwebReplayer')}\n        urls={attachmentList.map(createAttachmentUrl)}\n      />\n    );\n  }\n}\n\nexport default RRWebIntegration;\n","import Alert from 'sentry/components/alert';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t, tct} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\nimport getSdkUpdateSuggestion from 'sentry/utils/getSdkUpdateSuggestion';\n\ntype Props = {\n  event: Omit<Event, 'sdkUpdates'> & {\n    sdkUpdates: NonNullable<Event['sdkUpdates']>;\n  };\n};\n\nconst SdkUpdates = ({event}: Props) => {\n  const {sdkUpdates} = event;\n\n  const eventDataSectinContent = sdkUpdates\n    .map((sdkUpdate, index) => {\n      const suggestion = getSdkUpdateSuggestion({suggestion: sdkUpdate, sdk: event.sdk});\n\n      if (!suggestion) {\n        return null;\n      }\n\n      return (\n        <Alert key={index} type=\"info\" showIcon>\n          {tct('We recommend you [suggestion] ', {suggestion})}\n          {sdkUpdate.type === 'updateSdk' &&\n            t('(All sentry packages should be updated and their versions should match)')}\n        </Alert>\n      );\n    })\n    .filter(alert => !!alert);\n\n  if (!eventDataSectinContent.length) {\n    return null;\n  }\n\n  return (\n    <EventDataSection title={null} type=\"sdk-updates\">\n      {eventDataSectinContent}\n    </EventDataSection>\n  );\n};\n\nexport default SdkUpdates;\n","import {Event, ExceptionType, ExceptionValue, Thread} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nfunction getException(\n  exceptionData: ExceptionType,\n  exceptionDataValues: ExceptionValue[],\n  thread: Thread\n) {\n  if (exceptionDataValues.length === 1 && !exceptionDataValues[0].stacktrace) {\n    return {\n      ...exceptionData,\n      values: [\n        {\n          ...exceptionDataValues[0],\n          stacktrace: thread.stacktrace,\n          rawStacktrace: thread.rawStacktrace,\n        },\n      ],\n    };\n  }\n\n  const exceptionHasAtLeastOneStacktrace = !!exceptionDataValues.find(\n    exceptionDataValue => exceptionDataValue.stacktrace\n  );\n\n  if (!!exceptionHasAtLeastOneStacktrace) {\n    return exceptionData as Required<ExceptionType>;\n  }\n\n  return undefined;\n}\n\nfunction getThreadException(\n  event: Event,\n  thread?: Thread\n): Required<ExceptionType> | undefined {\n  const exceptionEntry = event.entries.find(entry => entry.type === 'exception');\n\n  if (!exceptionEntry) {\n    return undefined;\n  }\n\n  const exceptionData = exceptionEntry.data as ExceptionType;\n  const exceptionDataValues = exceptionData.values;\n\n  if (!exceptionDataValues?.length || !thread) {\n    return undefined;\n  }\n\n  const matchedStacktraceAndExceptionThread = exceptionDataValues.find(\n    exceptionDataValue => exceptionDataValue.threadId === thread.id\n  );\n\n  if (matchedStacktraceAndExceptionThread) {\n    return getException(exceptionData, exceptionDataValues, thread);\n  }\n\n  if (\n    exceptionDataValues.every(\n      exceptionDataValue => !defined(exceptionDataValue.threadId)\n    ) &&\n    thread.crashed\n  ) {\n    return getException(exceptionData, exceptionDataValues, thread);\n  }\n\n  return undefined;\n}\n\nexport default getThreadException;\n","import {memo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Highlight from 'sentry/components/highlight';\nimport Tag, {Background} from 'sentry/components/tag';\nimport {t} from 'sentry/locale';\nimport {BreadcrumbLevelType} from 'sentry/types/breadcrumbs';\n\ntype Props = {\n  level: BreadcrumbLevelType;\n  searchTerm?: string;\n};\n\nconst Level = memo(function Level({level, searchTerm = ''}: Props) {\n  switch (level) {\n    case BreadcrumbLevelType.FATAL:\n      return (\n        <LevelTag type=\"error\">\n          <Highlight text={searchTerm}>{t('Fatal')}</Highlight>\n        </LevelTag>\n      );\n    case BreadcrumbLevelType.ERROR:\n      return (\n        <LevelTag type=\"error\">\n          <Highlight text={searchTerm}>{t('Error')}</Highlight>\n        </LevelTag>\n      );\n    case BreadcrumbLevelType.INFO:\n      return (\n        <LevelTag type=\"info\">\n          <Highlight text={searchTerm}>{t('Info')}</Highlight>\n        </LevelTag>\n      );\n    case BreadcrumbLevelType.WARNING:\n      return (\n        <LevelTag type=\"warning\">\n          <Highlight text={searchTerm}>{t('Warning')}</Highlight>\n        </LevelTag>\n      );\n    default:\n      return (\n        <LevelTag>\n          <Highlight text={searchTerm}>{level || t('Undefined')}</Highlight>\n        </LevelTag>\n      );\n  }\n});\n\nexport default Level;\n\nconst LevelTag = styled(Tag)`\n  height: 24px;\n  display: flex;\n  align-items: center;\n  ${Background} {\n    overflow: hidden;\n  }\n`;\n","import {memo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Highlight from 'sentry/components/highlight';\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\ntype Props = {\n  searchTerm: string;\n  category?: string | null;\n};\n\nconst Category = memo(function Category({category, searchTerm}: Props) {\n  const title = !defined(category) ? t('generic') : category;\n  return (\n    <Wrapper title={title}>\n      <Highlight text={searchTerm}>{title}</Highlight>\n    </Wrapper>\n  );\n});\n\nexport default Category;\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 700;\n`;\n","import styled from '@emotion/styled';\n\nimport ContextData from 'sentry/components/contextData';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  kvData?: Record<string, any>;\n};\n\nfunction Summary({kvData, children}: Props) {\n  if (!kvData || !Object.keys(kvData).length) {\n    if (!children) {\n      return <div />;\n    }\n\n    return (\n      <Wrapper>\n        <StyledCode>{children}</StyledCode>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper>\n      {children && <StyledCode>{children}</StyledCode>}\n      <ContextDataWrapper>\n        <ContextData data={kvData} withAnnotatedText />\n      </ContextDataWrapper>\n    </Wrapper>\n  );\n}\n\nexport default Summary;\n\nconst Wrapper = styled('div')`\n  word-break: break-all;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-family: ${p => p.theme.text.familyMono};\n  display: grid;\n  gap: ${space(0.5)};\n  overflow: hidden;\n`;\n\nconst ContextDataWrapper = styled('div')`\n  padding: ${space(1)};\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  overflow: hidden;\n\n  pre {\n    background: ${p => p.theme.backgroundSecondary};\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    overflow-y: auto;\n    max-height: 100%;\n  }\n`;\n\nconst StyledCode = styled('code')`\n  font-size: inherit;\n  white-space: pre-wrap;\n  background: none;\n  padding: 0;\n  > * {\n    vertical-align: middle;\n  }\n`;\n","import AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport Highlight from 'sentry/components/highlight';\nimport Link from 'sentry/components/links/link';\nimport {Organization, Project} from 'sentry/types';\nimport {BreadcrumbTypeDefault, BreadcrumbTypeNavigation} from 'sentry/types/breadcrumbs';\nimport {Event} from 'sentry/types/event';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport Summary from './summary';\n\ntype Props = {\n  breadcrumb: BreadcrumbTypeDefault | BreadcrumbTypeNavigation;\n  orgSlug: Organization['slug'];\n  searchTerm: string;\n  event?: Event;\n  linkedEvent?: React.ReactElement;\n};\n\nfunction Default({breadcrumb, event, orgSlug, searchTerm, linkedEvent}: Props) {\n  const {message} = breadcrumb;\n  return (\n    <Summary kvData={breadcrumb.data}>\n      {linkedEvent}\n      {message && (\n        <AnnotatedText\n          value={\n            <FormatMessage\n              searchTerm={searchTerm}\n              event={event}\n              orgSlug={orgSlug}\n              breadcrumb={breadcrumb}\n              message={message}\n            />\n          }\n          meta={getMeta(breadcrumb, 'message')}\n        />\n      )}\n    </Summary>\n  );\n}\n\nexport default Default;\n\nfunction isEventId(maybeEventId: string): boolean {\n  // maybeEventId is an event id if it's a hex string of 32 characters long\n  return /^[a-fA-F0-9]{32}$/.test(maybeEventId);\n}\n\nconst FormatMessage = withProjects(function FormatMessageInner({\n  searchTerm,\n  event,\n  message,\n  breadcrumb,\n  projects,\n  loadingProjects,\n  orgSlug,\n}: {\n  breadcrumb: BreadcrumbTypeDefault | BreadcrumbTypeNavigation;\n  loadingProjects: boolean;\n  message: string;\n  orgSlug: Organization['slug'];\n  projects: Project[];\n  searchTerm: string;\n  event?: Event;\n}) {\n  const content = <Highlight text={searchTerm}>{message}</Highlight>;\n  if (\n    !loadingProjects &&\n    breadcrumb.category === 'sentry.transaction' &&\n    isEventId(message)\n  ) {\n    const maybeProject = projects.find(project => {\n      return event && project.id === event.projectID;\n    });\n\n    if (!maybeProject) {\n      return content;\n    }\n\n    const projectSlug = maybeProject.slug;\n    const eventSlug = generateEventSlug({project: projectSlug, id: message});\n\n    return <Link to={getTransactionDetailsUrl(orgSlug, eventSlug)}>{content}</Link>;\n  }\n\n  return content;\n});\n","import omit from 'lodash/omit';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport Highlight from 'sentry/components/highlight';\nimport {BreadcrumbTypeDefault} from 'sentry/types/breadcrumbs';\nimport {defined} from 'sentry/utils';\n\nimport Summary from './summary';\n\ntype Props = {\n  breadcrumb: BreadcrumbTypeDefault;\n  searchTerm: string;\n  linkedEvent?: React.ReactElement;\n};\n\nfunction Exception({breadcrumb, searchTerm, linkedEvent}: Props) {\n  const {data, message} = breadcrumb;\n  const dataValue = data?.value;\n\n  return (\n    <Summary kvData={omit(data, ['type', 'value'])}>\n      {linkedEvent}\n      {data?.type && (\n        <AnnotatedText\n          value={\n            <strong>\n              <Highlight text={searchTerm}>{`${data.type}: `}</Highlight>\n            </strong>\n          }\n          meta={getMeta(data, 'type')}\n        />\n      )}\n      {defined(dataValue) && (\n        <AnnotatedText\n          value={\n            <Highlight text={searchTerm}>\n              {breadcrumb?.message ? `${dataValue}. ` : dataValue}\n            </Highlight>\n          }\n          meta={getMeta(data, 'value')}\n        />\n      )}\n      {message && (\n        <AnnotatedText\n          value={<Highlight text={searchTerm}>{message}</Highlight>}\n          meta={getMeta(breadcrumb, 'message')}\n        />\n      )}\n    </Summary>\n  );\n}\n\nexport default Exception;\n","import omit from 'lodash/omit';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport Highlight from 'sentry/components/highlight';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t} from 'sentry/locale';\nimport {BreadcrumbTypeHTTP} from 'sentry/types/breadcrumbs';\nimport {defined} from 'sentry/utils';\n\nimport Summary from './summary';\n\ntype Props = {\n  breadcrumb: BreadcrumbTypeHTTP;\n  searchTerm: string;\n  linkedEvent?: React.ReactElement;\n};\n\nfunction Http({breadcrumb, searchTerm, linkedEvent}: Props) {\n  const {data} = breadcrumb;\n\n  const renderUrl = (url: any) => {\n    if (typeof url === 'string') {\n      const content = <Highlight text={searchTerm}>{url}</Highlight>;\n      return url.match(/^https?:\\/\\//) ? (\n        <ExternalLink data-test-id=\"http-renderer-external-link\" href={url}>\n          {content}\n        </ExternalLink>\n      ) : (\n        <span>{content}</span>\n      );\n    }\n\n    try {\n      return <Highlight text={searchTerm}>{JSON.stringify(url)}</Highlight>;\n    } catch {\n      return t('Invalid URL');\n    }\n  };\n\n  const statusCode = data?.status_code;\n\n  return (\n    <Summary kvData={omit(data, ['method', 'url', 'status_code'])}>\n      {linkedEvent}\n      {data?.method && (\n        <AnnotatedText\n          value={\n            <strong>\n              <Highlight text={searchTerm}>{`${data.method} `}</Highlight>\n            </strong>\n          }\n          meta={getMeta(data, 'method')}\n        />\n      )}\n      {data?.url && (\n        <AnnotatedText value={renderUrl(data.url)} meta={getMeta(data, 'url')} />\n      )}\n      {defined(statusCode) && (\n        <AnnotatedText\n          value={\n            <Highlight\n              data-test-id=\"http-renderer-status-code\"\n              text={searchTerm}\n            >{` [${statusCode}]`}</Highlight>\n          }\n          meta={getMeta(data, 'status_code')}\n        />\n      )}\n    </Summary>\n  );\n}\n\nexport default Http;\n","import {Dispatch, SetStateAction, useEffect, useState} from 'react';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction useSessionStorage<T>(\n  key: string,\n  initialValue?: T\n): [T | undefined, Dispatch<SetStateAction<T | undefined>>, () => void] {\n  const [state, setState] = useState<T | undefined>(() => {\n    try {\n      // Get from session storage by key\n      const sessionStorageValue = sessionStorage.getItem(key);\n\n      if (sessionStorageValue === 'undefined') {\n        return initialValue;\n      }\n\n      // Parse stored json or if none return initialValue\n      return sessionStorageValue ? JSON.parse(sessionStorageValue) : initialValue;\n    } catch {\n      // If user is in private mode or has storage restriction\n      // sessionStorage can throw. JSON.parse and JSON.stringify\n      // can throw, too.\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    try {\n      const serializedState = JSON.stringify(state);\n      sessionStorage.setItem(key, serializedState);\n    } catch {\n      // If user is in private mode or has storage restriction\n      // sessionStorage can throw. Also JSON.stringify can throw.\n    }\n  }, [state]);\n\n  function removeItem() {\n    sessionStorage.removeItem(key);\n    setState(undefined);\n  }\n\n  if (!isBrowser) {\n    return [initialValue, () => {}, () => {}];\n  }\n\n  return [state, setState, removeItem];\n}\n\nexport default useSessionStorage;\n","import {useEffect, useState} from 'react';\nimport {InjectedRouter, PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Placeholder from 'sentry/components/placeholder';\nimport ShortId from 'sentry/components/shortId';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {EventIdResponse, Group, Organization, Project} from 'sentry/types';\nimport handleXhrErrorResponse from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\nimport useSessionStorage from 'sentry/utils/useSessionStorage';\n\ntype StoredLinkedEvent = {\n  groupId: string;\n  orgSlug: Organization['slug'];\n  project: Project;\n  shortId: string;\n};\n\ntype Props = {\n  eventId: string;\n  orgSlug: Organization['slug'];\n  route: PlainRoute;\n  router: InjectedRouter;\n};\n\nconst errorMessage = t(\n  'An error occurred while fetching the data of the breadcrumb event link'\n);\n\nfunction LinkedEvent({orgSlug, eventId, route, router}: Props) {\n  const [storedLinkedEvent, setStoredLinkedEvent, removeStoredLinkedEvent] =\n    useSessionStorage<undefined | StoredLinkedEvent>(eventId);\n\n  const [eventIdLookup, setEventIdLookup] = useState<undefined | EventIdResponse>();\n  const [hasError, setHasError] = useState(false);\n\n  const api = useApi();\n\n  useEffect(() => {\n    fetchEventById();\n    router.setRouteLeaveHook(route, onRouteLeave);\n  }, []);\n\n  useEffect(() => {\n    fetchIssueByGroupId();\n  }, [eventIdLookup]);\n\n  function onRouteLeave() {\n    removeStoredLinkedEvent();\n  }\n\n  async function fetchEventById() {\n    if (!!storedLinkedEvent) {\n      return;\n    }\n\n    try {\n      const response = await api.requestPromise(\n        `/organizations/${orgSlug}/eventids/${eventId}/`\n      );\n\n      setEventIdLookup(response);\n    } catch (error) {\n      setHasError(true);\n\n      if (error.status === 404) {\n        return;\n      }\n\n      addErrorMessage(errorMessage);\n      handleXhrErrorResponse(errorMessage)(error);\n\n      // do nothing. The link won't be displayed\n    }\n  }\n\n  async function fetchIssueByGroupId() {\n    if (!!storedLinkedEvent || !eventIdLookup) {\n      return;\n    }\n\n    try {\n      const response = await api.requestPromise(\n        `/organizations/${orgSlug}/issues/${eventIdLookup.groupId}/`\n      );\n\n      const {project, shortId} = response as Group;\n      const {groupId} = eventIdLookup;\n      setStoredLinkedEvent({shortId, project, groupId, orgSlug});\n    } catch (error) {\n      setHasError(true);\n\n      if (error.status === 404) {\n        return;\n      }\n\n      addErrorMessage(errorMessage);\n      handleXhrErrorResponse('An error occurred while fetching an issue')(error);\n\n      // do nothing. The link won't be displayed\n    }\n  }\n\n  if (hasError) {\n    return null;\n  }\n\n  if (!storedLinkedEvent) {\n    return <StyledPlaceholder height=\"16px\" width=\"109px\" />;\n  }\n\n  const {shortId, project, groupId} = storedLinkedEvent;\n\n  return (\n    <StyledShortId\n      shortId={shortId}\n      avatar={<ProjectBadge project={project} avatarSize={16} hideName />}\n      to={`/${orgSlug}/${project.slug}/issues/${groupId}/events/${eventId}/`}\n    />\n  );\n}\n\nexport default LinkedEvent;\n\nconst StyledShortId = styled(ShortId)`\n  font-weight: 700;\n  display: inline-grid;\n  margin-right: ${space(1)};\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  display: inline-flex;\n  margin-right: ${space(1)};\n`;\n","import {Organization} from 'sentry/types';\nimport {BreadcrumbType, RawCrumb} from 'sentry/types/breadcrumbs';\nimport {Event} from 'sentry/types/event';\n\nimport Default from './default';\nimport Exception from './exception';\nimport Http from './http';\nimport LinkedEvent from './linkedEvent';\n\ntype Props = Pick<React.ComponentProps<typeof LinkedEvent>, 'route' | 'router'> & {\n  breadcrumb: RawCrumb;\n  event: Event;\n  organization: Organization;\n  searchTerm: string;\n};\n\nfunction Data({breadcrumb, event, organization, searchTerm, route, router}: Props) {\n  const orgSlug = organization.slug;\n\n  const linkedEvent =\n    !!organization.features?.includes('breadcrumb-linked-event') &&\n    breadcrumb.event_id ? (\n      <LinkedEvent\n        orgSlug={orgSlug}\n        eventId={breadcrumb.event_id}\n        route={route}\n        router={router}\n      />\n    ) : undefined;\n\n  if (breadcrumb.type === BreadcrumbType.HTTP) {\n    return (\n      <Http breadcrumb={breadcrumb} searchTerm={searchTerm} linkedEvent={linkedEvent} />\n    );\n  }\n\n  if (\n    breadcrumb.type === BreadcrumbType.WARNING ||\n    breadcrumb.type === BreadcrumbType.ERROR\n  ) {\n    return (\n      <Exception\n        breadcrumb={breadcrumb}\n        searchTerm={searchTerm}\n        linkedEvent={linkedEvent}\n      />\n    );\n  }\n\n  return (\n    <Default\n      event={event}\n      orgSlug={orgSlug}\n      breadcrumb={breadcrumb}\n      searchTerm={searchTerm}\n      linkedEvent={linkedEvent}\n    />\n  );\n}\n\nexport default Data;\n","import moment from 'moment';\n\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport {shouldUse24Hours} from 'sentry/utils/dates';\nimport {getDuration} from 'sentry/utils/formatters';\n\nconst timeFormat = 'HH:mm:ss';\nconst timeDateFormat = `ll ${timeFormat}`;\n\nconst getRelativeTime = (\n  parsedTime: ReturnType<typeof moment>,\n  parsedTimeToCompareWith: ReturnType<typeof moment>,\n  displayRelativeTime?: boolean\n) => {\n  // ll is necessary here, otherwise moment(x).from will throw an error\n  const formattedTime = moment(parsedTime.format(timeDateFormat));\n  const formattedTimeToCompareWith = parsedTimeToCompareWith.format(timeDateFormat);\n  const timeDiff = Math.abs(formattedTime.diff(formattedTimeToCompareWith));\n\n  const shortRelativeTime = getDuration(Math.round(timeDiff / 1000), 0, true).replace(\n    /\\s/g,\n    ''\n  );\n\n  if (timeDiff !== 0) {\n    return displayRelativeTime\n      ? `-${shortRelativeTime}`\n      : t('%s before', shortRelativeTime);\n  }\n\n  return `\\xA0${shortRelativeTime}`;\n};\n\nconst getAbsoluteTimeFormat = (format: string) => {\n  if (shouldUse24Hours()) {\n    return format;\n  }\n  return `${format} A`;\n};\n\nconst getFormattedTimestamp = (\n  timestamp: string,\n  relativeTimestamp: string,\n  displayRelativeTime?: boolean\n) => {\n  const parsedTimestamp = moment(timestamp);\n  const date = parsedTimestamp.format('ll');\n\n  const displayMilliSeconds = defined(parsedTimestamp.milliseconds());\n\n  const relativeTime = getRelativeTime(\n    parsedTimestamp,\n    moment(relativeTimestamp),\n    displayRelativeTime\n  );\n\n  if (!displayRelativeTime) {\n    return {\n      date: `${date} ${parsedTimestamp.format(getAbsoluteTimeFormat('HH:mm'))}`,\n      time: relativeTime,\n      displayTime: parsedTimestamp.format(timeFormat),\n    };\n  }\n\n  return {\n    date,\n    time: parsedTimestamp.format(\n      getAbsoluteTimeFormat(displayMilliSeconds ? `${timeFormat}.SSS` : timeFormat)\n    ),\n    displayTime: relativeTime,\n  };\n};\n\nexport {getFormattedTimestamp};\n","import {memo} from 'react';\nimport styled from '@emotion/styled';\n\nimport Highlight from 'sentry/components/highlight';\nimport Tooltip from 'sentry/components/tooltip';\nimport {defined} from 'sentry/utils';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nimport {getFormattedTimestamp} from './utils';\n\ntype Props = {\n  searchTerm: string;\n  displayRelativeTime?: boolean;\n  relativeTime?: string;\n  timestamp?: string;\n};\n\nconst Time = memo(function Time({\n  timestamp,\n  relativeTime,\n  displayRelativeTime,\n  searchTerm,\n}: Props) {\n  if (!(defined(timestamp) && defined(relativeTime))) {\n    return <div />;\n  }\n\n  const {date, time, displayTime} = getFormattedTimestamp(\n    timestamp,\n    relativeTime,\n    displayRelativeTime\n  );\n\n  return (\n    <Wrapper>\n      <Tooltip\n        title={\n          <div>\n            <div>{date}</div>\n            {time !== '\\u2014' && <div>{time}</div>}\n          </div>\n        }\n        containerDisplayMode=\"inline-flex\"\n        disableForVisualTest\n      >\n        {getDynamicText({\n          value: <Highlight text={searchTerm}>{displayTime}</Highlight>,\n          fixed: '00:00:00',\n        })}\n      </Tooltip>\n    </Wrapper>\n  );\n});\n\nexport default Time;\n\nconst Wrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.textColor};\n`;\n","import {memo} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {BreadcrumbType, Crumb} from 'sentry/types/breadcrumbs';\nimport {Event} from 'sentry/types/event';\n\nimport Category from './category';\nimport Data from './data';\nimport Level from './level';\nimport Time from './time';\nimport Type from './type';\n\ntype Props = Pick<React.ComponentProps<typeof Data>, 'route' | 'router'> & {\n  breadcrumb: Crumb;\n  ['data-test-id']: string;\n  displayRelativeTime: boolean;\n  event: Event;\n  onLoad: () => void;\n  organization: Organization;\n  relativeTime: string;\n  scrollbarSize: number;\n  searchTerm: string;\n  style: React.CSSProperties;\n  height?: string;\n};\n\nconst Breadcrumb = memo(function Breadcrumb({\n  organization,\n  event,\n  breadcrumb,\n  relativeTime,\n  displayRelativeTime,\n  searchTerm,\n  onLoad,\n  scrollbarSize,\n  style,\n  route,\n  router,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  const {type, description, color, level, category, timestamp} = breadcrumb;\n  const error = breadcrumb.type === BreadcrumbType.ERROR;\n\n  return (\n    <Wrapper\n      style={style}\n      error={error}\n      onLoad={onLoad}\n      data-test-id={dataTestId}\n      scrollbarSize={scrollbarSize}\n    >\n      <Type type={type} color={color} description={description} error={error} />\n      <Category category={category} searchTerm={searchTerm} />\n      <Data\n        event={event}\n        organization={organization}\n        breadcrumb={breadcrumb}\n        searchTerm={searchTerm}\n        route={route}\n        router={router}\n      />\n      <div>\n        <Level level={level} searchTerm={searchTerm} />\n      </div>\n      <Time\n        timestamp={timestamp}\n        relativeTime={relativeTime}\n        displayRelativeTime={displayRelativeTime}\n        searchTerm={searchTerm}\n      />\n    </Wrapper>\n  );\n});\n\nexport default Breadcrumb;\n\nconst Wrapper = styled('div')<{error: boolean; scrollbarSize: number}>`\n  display: grid;\n  grid-template-columns: 64px 140px 1fr 106px 100px ${p => p.scrollbarSize}px;\n\n  > * {\n    padding: ${space(1)} ${space(2)};\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-rows: repeat(2, auto);\n    grid-template-columns: max-content 1fr 74px 82px ${p => p.scrollbarSize}px;\n\n    > * {\n      padding: ${space(1)};\n\n      /* Type */\n      :nth-child(5n-4) {\n        grid-row: 1/-1;\n        padding-right: 0;\n        padding-left: 0;\n        margin-left: ${space(2)};\n        margin-right: ${space(1)};\n      }\n\n      /* Data */\n      :nth-child(5n-2) {\n        grid-row: 2/2;\n        grid-column: 2/-1;\n        padding-top: 0;\n        padding-right: ${space(2)};\n      }\n\n      /* Level */\n      :nth-child(5n-1) {\n        padding-right: 0;\n        display: flex;\n        justify-content: flex-end;\n        align-items: flex-start;\n      }\n\n      /* Time */\n      :nth-child(5n) {\n        padding: ${space(1)} ${space(2)};\n      }\n    }\n  }\n\n  word-break: break-all;\n  white-space: pre-wrap;\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => (p.error ? p.theme.red300 : p.theme.innerBorder)};\n  }\n\n  ${p =>\n    p.error &&\n    css`\n      :after {\n        content: '';\n        position: absolute;\n        top: -1px;\n        left: 0;\n        height: 1px;\n        width: 100%;\n        background: ${p.theme.red300};\n      }\n    `}\n`;\n","import {useEffect, useRef, useState} from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowProps,\n} from 'react-virtualized';\nimport styled from '@emotion/styled';\n\nimport {PanelTable} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconSort} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Crumb} from 'sentry/types/breadcrumbs';\n\nimport Breadcrumb from './breadcrumb';\n\nconst PANEL_MAX_HEIGHT = 400;\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true,\n  minHeight: 42,\n});\n\ntype Props = Pick<\n  React.ComponentProps<typeof Breadcrumb>,\n  | 'event'\n  | 'organization'\n  | 'searchTerm'\n  | 'relativeTime'\n  | 'displayRelativeTime'\n  | 'router'\n  | 'route'\n> & {\n  breadcrumbs: Crumb[];\n  emptyMessage: Pick<\n    React.ComponentProps<typeof PanelTable>,\n    'emptyMessage' | 'emptyAction'\n  >;\n  onSwitchTimeFormat: () => void;\n};\n\nfunction Breadcrumbs({\n  breadcrumbs,\n  displayRelativeTime,\n  onSwitchTimeFormat,\n  organization,\n  searchTerm,\n  event,\n  relativeTime,\n  emptyMessage,\n  route,\n  router,\n}: Props) {\n  const [scrollToIndex, setScrollToIndex] = useState<number | undefined>(undefined);\n  const [scrollbarSize, setScrollbarSize] = useState(0);\n\n  let listRef: List | null = null;\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    updateGrid();\n  }, []);\n\n  useEffect(() => {\n    if (!!breadcrumbs.length && !scrollToIndex) {\n      setScrollToIndex(breadcrumbs.length - 1);\n      return;\n    }\n\n    updateGrid();\n  }, [breadcrumbs]);\n\n  useEffect(() => {\n    if (scrollToIndex !== undefined) {\n      updateGrid();\n    }\n  }, [scrollToIndex]);\n\n  function updateGrid() {\n    if (listRef) {\n      cache.clearAll();\n      listRef.forceUpdateGrid();\n    }\n  }\n\n  function renderRow({index, key, parent, style}: ListRowProps) {\n    const breadcrumb = breadcrumbs[index];\n    const isLastItem = breadcrumbs[breadcrumbs.length - 1].id === breadcrumb.id;\n    const {height} = style;\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        {({measure}) => (\n          <Breadcrumb\n            data-test-id={isLastItem ? 'last-crumb' : 'crumb'}\n            style={style}\n            onLoad={measure}\n            organization={organization}\n            searchTerm={searchTerm}\n            breadcrumb={breadcrumb}\n            event={event}\n            relativeTime={relativeTime}\n            displayRelativeTime={displayRelativeTime}\n            height={height ? String(height) : undefined}\n            scrollbarSize={\n              (contentRef?.current?.offsetHeight ?? 0) < PANEL_MAX_HEIGHT\n                ? scrollbarSize\n                : 0\n            }\n            router={router}\n            route={route}\n          />\n        )}\n      </CellMeasurer>\n    );\n  }\n\n  return (\n    <StyledPanelTable\n      scrollbarSize={scrollbarSize}\n      headers={[\n        t('Type'),\n        t('Category'),\n        t('Description'),\n        t('Level'),\n        <Time key=\"time\" onClick={onSwitchTimeFormat}>\n          <Tooltip\n            containerDisplayMode=\"inline-flex\"\n            title={\n              displayRelativeTime ? t('Switch to absolute') : t('Switch to relative')\n            }\n          >\n            <StyledIconSort size=\"xs\" rotated />\n          </Tooltip>\n\n          {t('Time')}\n        </Time>,\n        '',\n      ]}\n      isEmpty={!breadcrumbs.length}\n      {...emptyMessage}\n    >\n      <Content ref={contentRef}>\n        <AutoSizer disableHeight onResize={updateGrid}>\n          {({width}) => (\n            <StyledList\n              ref={(el: List | null) => {\n                listRef = el;\n              }}\n              deferredMeasurementCache={cache}\n              height={PANEL_MAX_HEIGHT}\n              overscanRowCount={5}\n              rowCount={breadcrumbs.length}\n              rowHeight={cache.rowHeight}\n              rowRenderer={renderRow}\n              width={width}\n              onScrollbarPresenceChange={({size}) => setScrollbarSize(size)}\n              // when the component mounts, it scrolls to the last item\n              scrollToIndex={scrollToIndex}\n              scrollToAlignment={scrollToIndex ? 'end' : undefined}\n            />\n          )}\n        </AutoSizer>\n      </Content>\n    </StyledPanelTable>\n  );\n}\n\nexport default Breadcrumbs;\n\nconst StyledPanelTable = styled(PanelTable)<{scrollbarSize: number}>`\n  display: grid;\n  grid-template-columns: 64px 140px 1fr 106px 100px ${p => `${p.scrollbarSize}px`};\n\n  > * {\n    :nth-child(-n + 6) {\n      border-bottom: 1px solid ${p => p.theme.border};\n      border-radius: 0;\n      /* This is to fix a small issue with the border not being fully visible on smaller devices */\n      margin-bottom: 1px;\n\n      /* Type */\n      :nth-child(6n-5) {\n        text-align: center;\n      }\n    }\n\n    /* Content */\n    :nth-child(n + 7) {\n      grid-column: 1/-1;\n      ${p =>\n        !p.isEmpty &&\n        `\n          padding: 0;\n        `}\n    }\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.small}) {\n    grid-template-columns: 48px 1fr 74px 82px ${p => `${p.scrollbarSize}px`};\n    > * {\n      :nth-child(-n + 6) {\n        /* Type, Category & Level */\n        :nth-child(6n-5),\n        :nth-child(6n-4),\n        :nth-child(6n-2) {\n          color: transparent;\n        }\n\n        /* Description & Scrollbar */\n        :nth-child(6n-3) {\n          display: none;\n        }\n      }\n    }\n  }\n\n  overflow: hidden;\n`;\n\nconst Time = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  cursor: pointer;\n`;\n\nconst StyledIconSort = styled(IconSort)`\n  transition: 0.15s color;\n  :hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst Content = styled('div')`\n  max-height: ${PANEL_MAX_HEIGHT}px;\n  overflow: hidden;\n`;\n\n// XXX(ts): Emotion11 has some trouble with List's defaultProps\n//\n// It gives the list have a dynamic height; otherwise, in the case of filtered\n// options, a list will be displayed with an empty space\nconst StyledList = styled(List as any)<React.ComponentProps<typeof List>>`\n  height: auto !important;\n  max-height: ${p => p.height}px;\n  outline: none;\n`;\n","import {useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {BreadcrumbLevelType, Crumb, RawCrumb} from 'sentry/types/breadcrumbs';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport SearchBarAction from '../searchBarAction';\n\nimport Level from './breadcrumb/level';\nimport Type from './breadcrumb/type';\nimport Breadcrumbs from './breadcrumbs';\nimport {getVirtualCrumb, transformCrumbs} from './utils';\n\ntype FilterOptions = NonNullable<\n  React.ComponentProps<typeof SearchBarAction>['filterOptions']\n>;\n\ntype FilterOptionWithLevels = FilterOptions[0] & {levels?: BreadcrumbLevelType[]};\n\ntype Props = Pick<React.ComponentProps<typeof Breadcrumbs>, 'route' | 'router'> & {\n  data: {\n    values: Array<RawCrumb>;\n  };\n  event: Event;\n  organization: Organization;\n  type: string;\n};\n\ntype State = {\n  breadcrumbs: Crumb[];\n  displayRelativeTime: boolean;\n  filterOptions: FilterOptions;\n  filterSelections: FilterOptions;\n  filteredByFilter: Crumb[];\n  filteredBySearch: Crumb[];\n  searchTerm: string;\n  relativeTime?: string;\n};\n\nfunction BreadcrumbsContainer({\n  data,\n  event,\n  organization,\n  type: eventType,\n  route,\n  router,\n}: Props) {\n  const [state, setState] = useState<State>({\n    searchTerm: '',\n    breadcrumbs: [],\n    filteredByFilter: [],\n    filteredBySearch: [],\n    filterOptions: [],\n    filterSelections: [],\n    displayRelativeTime: false,\n  });\n\n  const {\n    filterOptions,\n    breadcrumbs,\n    searchTerm,\n    filteredBySearch,\n    displayRelativeTime,\n    relativeTime,\n    filteredByFilter,\n  } = state;\n\n  useEffect(() => {\n    loadBreadcrumbs();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function loadBreadcrumbs() {\n    let crumbs = data.values;\n\n    // Add the (virtual) breadcrumb based on the error or message event if possible.\n    const virtualCrumb = getVirtualCrumb(event);\n\n    if (virtualCrumb) {\n      crumbs = [...crumbs, virtualCrumb];\n    }\n\n    const transformedCrumbs = transformCrumbs(crumbs);\n\n    setState({\n      ...state,\n      relativeTime: transformedCrumbs[transformedCrumbs.length - 1]?.timestamp,\n      breadcrumbs: transformedCrumbs,\n      filteredByFilter: transformedCrumbs,\n      filteredBySearch: transformedCrumbs,\n      filterOptions: getFilterOptions(transformedCrumbs),\n    });\n  }\n\n  function getFilterOptions(crumbs: ReturnType<typeof transformCrumbs>) {\n    const typeOptions = getFilterTypes(crumbs);\n    const levels = getFilterLevels(typeOptions);\n\n    const options: FilterOptions = [];\n\n    if (!!typeOptions.length) {\n      options.push({\n        value: 'types',\n        label: t('Types'),\n        options: typeOptions.map(typeOption => omit(typeOption, 'levels')),\n      });\n    }\n\n    if (!!levels.length) {\n      options.push({\n        value: 'levels',\n        label: t('Levels'),\n        options: levels,\n      });\n    }\n\n    return options;\n  }\n\n  function getFilterTypes(crumbs: ReturnType<typeof transformCrumbs>) {\n    const filterTypes: FilterOptionWithLevels[] = [];\n\n    for (const index in crumbs) {\n      const breadcrumb = crumbs[index];\n      const foundFilterType = filterTypes.findIndex(\n        f => f.value === `type-${breadcrumb.type}`\n      );\n\n      if (foundFilterType === -1) {\n        filterTypes.push({\n          value: `type-${breadcrumb.type}`,\n          leadingItems: <Type type={breadcrumb.type} color={breadcrumb.color} />,\n          label: breadcrumb.description,\n          levels: breadcrumb?.level ? [breadcrumb.level] : [],\n        });\n        continue;\n      }\n\n      if (\n        breadcrumb?.level &&\n        !filterTypes[foundFilterType].levels?.includes(breadcrumb.level)\n      ) {\n        filterTypes[foundFilterType].levels?.push(breadcrumb.level);\n      }\n    }\n\n    return filterTypes;\n  }\n\n  function getFilterLevels(types: FilterOptionWithLevels[]) {\n    const filterLevels: FilterOptions = [];\n\n    for (const indexType in types) {\n      for (const indexLevel in types[indexType].levels) {\n        const level = types[indexType].levels?.[indexLevel];\n\n        if (filterLevels.some(f => f.value === `level-${level}`)) {\n          continue;\n        }\n\n        filterLevels.push({\n          value: `level-${level}`,\n          label: (\n            <LevelWrap>\n              <Level level={level} />\n            </LevelWrap>\n          ),\n        });\n      }\n    }\n\n    return filterLevels;\n  }\n\n  function filterBySearch(newSearchTerm: string, crumbs: Crumb[]) {\n    if (!newSearchTerm.trim()) {\n      return crumbs;\n    }\n\n    // Slightly hacky, but it works\n    // the string is being `stringfy`d here in order to match exactly the same `stringfy`d string of the loop\n    const searchFor = JSON.stringify(newSearchTerm)\n      // it replaces double backslash generate by JSON.stringfy with single backslash\n      .replace(/((^\")|(\"$))/g, '')\n      .toLocaleLowerCase();\n\n    return crumbs.filter(obj =>\n      Object.keys(\n        pick(obj, ['type', 'category', 'message', 'level', 'timestamp', 'data'])\n      ).some(key => {\n        const info = obj[key];\n\n        if (!defined(info) || !String(info).trim()) {\n          return false;\n        }\n\n        return JSON.stringify(info)\n          .replace(/((^\")|(\"$))/g, '')\n          .toLocaleLowerCase()\n          .trim()\n          .includes(searchFor);\n      })\n    );\n  }\n\n  function getFilteredCrumbsByFilter(selectedFilterOptions: FilterOptions) {\n    const checkedTypeOptions = new Set(\n      selectedFilterOptions\n        .filter(option => option.value.startsWith('type-'))\n        .map(option => option.value.split('-')[1])\n    );\n\n    const checkedLevelOptions = new Set(\n      selectedFilterOptions\n        .filter(option => option.value.startsWith('level-'))\n        .map(option => option.value.split('-')[1])\n    );\n\n    if (!![...checkedTypeOptions].length && !![...checkedLevelOptions].length) {\n      return breadcrumbs.filter(\n        filteredCrumb =>\n          checkedTypeOptions.has(filteredCrumb.type) &&\n          checkedLevelOptions.has(filteredCrumb.level)\n      );\n    }\n\n    if (!![...checkedTypeOptions].length) {\n      return breadcrumbs.filter(filteredCrumb =>\n        checkedTypeOptions.has(filteredCrumb.type)\n      );\n    }\n\n    if (!![...checkedLevelOptions].length) {\n      return breadcrumbs.filter(filteredCrumb =>\n        checkedLevelOptions.has(filteredCrumb.level)\n      );\n    }\n\n    return breadcrumbs;\n  }\n\n  function handleSearch(value: string) {\n    setState({\n      ...state,\n      searchTerm: value,\n      filteredBySearch: filterBySearch(value, filteredByFilter),\n    });\n  }\n\n  function handleFilter(newfilterOptions: FilterOptions) {\n    const newfilteredByFilter = getFilteredCrumbsByFilter(newfilterOptions);\n    setState({\n      ...state,\n      filterSelections: newfilterOptions,\n      filteredByFilter: newfilteredByFilter,\n      filteredBySearch: filterBySearch(searchTerm, newfilteredByFilter),\n    });\n  }\n\n  function handleSwitchTimeFormat() {\n    setState({\n      ...state,\n      displayRelativeTime: !displayRelativeTime,\n    });\n  }\n\n  function handleResetFilter() {\n    setState({\n      ...state,\n      filterSelections: [],\n      filteredByFilter: breadcrumbs,\n      filteredBySearch: filterBySearch(searchTerm, breadcrumbs),\n    });\n  }\n\n  function handleResetSearchBar() {\n    setState({\n      ...state,\n      searchTerm: '',\n      filteredBySearch: breadcrumbs,\n    });\n  }\n\n  function getEmptyMessage() {\n    if (!!filteredBySearch.length) {\n      return {};\n    }\n\n    if (searchTerm && !filteredBySearch.length) {\n      const hasActiveFilter = state.filterSelections.length > 0;\n\n      return {\n        emptyMessage: t('Sorry, no breadcrumbs match your search query'),\n        emptyAction: hasActiveFilter ? (\n          <Button onClick={handleResetFilter} priority=\"primary\">\n            {t('Reset filter')}\n          </Button>\n        ) : (\n          <Button onClick={handleResetSearchBar} priority=\"primary\">\n            {t('Clear search bar')}\n          </Button>\n        ),\n      };\n    }\n\n    return {\n      emptyMessage: t('There are no breadcrumbs to be displayed'),\n    };\n  }\n\n  return (\n    <EventDataSection\n      type={eventType}\n      title={\n        <GuideAnchor target=\"breadcrumbs\" position=\"right\">\n          <h3>{t('Breadcrumbs')}</h3>\n        </GuideAnchor>\n      }\n      actions={\n        <StyledSearchBarAction\n          placeholder={t('Search breadcrumbs')}\n          onChange={handleSearch}\n          query={searchTerm}\n          filterOptions={filterOptions}\n          filterSelections={state.filterSelections}\n          onFilterChange={handleFilter}\n        />\n      }\n      wrapTitle={false}\n      isCentered\n    >\n      <ErrorBoundary>\n        <Breadcrumbs\n          router={router}\n          route={route}\n          emptyMessage={getEmptyMessage()}\n          breadcrumbs={filteredBySearch}\n          event={event}\n          organization={organization}\n          onSwitchTimeFormat={handleSwitchTimeFormat}\n          displayRelativeTime={displayRelativeTime}\n          searchTerm={searchTerm}\n          relativeTime={relativeTime!} // relativeTime has to be always available, as the last item timestamp is the event created time\n        />\n      </ErrorBoundary>\n    </EventDataSection>\n  );\n}\n\nexport default BreadcrumbsContainer;\n\nconst StyledSearchBarAction = styled(SearchBarAction)`\n  z-index: 2;\n`;\n\nconst LevelWrap = styled('span')`\n  height: ${p => p.theme.text.lineHeightBody}em;\n  display: flex;\n  align-items: center;\n`;\n","import KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\n\ntype Props = {\n  data: Record<string, any>;\n};\n\nfunction Content({data}: Props) {\n  return (\n    <div>\n      <h4>\n        <span>{data.effective_directive}</span>\n      </h4>\n      <KeyValueList\n        data={Object.entries(data).map(([key, value]) => ({\n          key,\n          subject: key,\n          value,\n          meta: getMeta(data, key),\n        }))}\n        isContextData\n      />\n    </div>\n  );\n}\n\nexport default Content;\n","import {t} from 'sentry/locale';\n\nconst effectiveDirectives = {\n  'base-uri': t(\n    `The <code>base-uri</code> directive defines the URIs that a user agent\n  may use as the document base URL. If this value is absent, then any URI\n  is allowed. If this directive is absent, the user agent will use the\n  value in the <code>&lt;base&gt;</code> element.`\n  ),\n  'child-src': t(\n    `The <code>child-src</code> directive defines the valid sources for\n  web workers and nested browsing contexts loaded using elements such as\n  <code>&lt;frame&gt;</code> and <code>&lt;iframe&gt;</code>.`\n  ),\n  'connect-src': t(\n    `The <code>connect-src</code> directive defines valid sources for fetch,\n  <code>XMLHttpRequest</code>, <code>WebSocket</code>, and\n  <code>EventSource</code> connections.`\n  ),\n  'font-src': t(\n    `The <code>font-src</code> directive specifies valid sources for fonts\n  loaded using <code>@font-face</code>.`\n  ),\n  'form-action': t(\n    `The <code>form-action</code> directive specifies valid endpoints for\n  <code>&lt;form&gt;</code> submissions.`\n  ),\n  'frame-ancestors': t(\n    `The <code>frame-ancestors</code> directive specifies valid parents that\n  may embed a page using the <code>&lt;frame&gt;</code> and\n  <code>&lt;iframe&gt;</code> elements.`\n  ),\n  'img-src': t(\n    `The <code>img-src</code> directive specifies valid sources of images and\n  favicons.`\n  ),\n  'prefetch-src': t(\n    `The <code>prefetch-src</code> directive restricts the URLs\n      from which resources may be prefetched or prerendered.`\n  ),\n  'manifest-src': t(\n    `The <code>manifest-src</code> directive specifies which manifest can be\n  applied to the resource.`\n  ),\n  'media-src': t(\n    `The <code>media-src</code> directive specifies valid sources for loading\n  media using the <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>\n  elements.`\n  ),\n  'object-src': t(\n    `The <code>object-src</code> directive specifies valid sources for the\n  <code>&lt;object&gt;</code>, <code>&lt;embed&gt;</code>, and\n  <code>&lt;applet&gt;</code> elements.`\n  ),\n  'plugin-types': t(\n    `The <code>plugin-types</code> directive specifies the valid plugins that\n  the user agent may invoke.`\n  ),\n  referrer: t(\n    `The <code>referrer</code> directive specifies information in the\n  <code>Referer</code> header for links away from a page.`\n  ),\n  'script-src': t(\n    `The <code>script-src</code> directive specifies valid sources\n  for JavaScript. When either the <code>script-src</code> or the\n  <code>default-src</code> directive is included, inline script and\n  <code>eval()</code> are disabled unless you specify 'unsafe-inline'\n  and 'unsafe-eval', respectively.`\n  ),\n  'script-src-elem': t(\n    `The <code>script-src-elem</code> directive applies to all script requests\n      and element contents. It does not apply to scripts defined in attributes.`\n  ),\n  'script-src-attr': t(\n    `The <code>script-src-attr</code> directive applies to event handlers and, if present,\n      it will override the <code>script-src</code> directive for relevant checks.`\n  ),\n  'style-src': t(\n    `The <code>style-src</code> directive specifies valid sources for\n  stylesheets. This includes both externally-loaded stylesheets and inline\n  use of the <code>&lt;style&gt;</code> element and HTML style attributes.\n  Stylesheets from sources that aren't included in the source list are not\n  requested or loaded. When either the <code>style-src</code> or the\n  <code>default-src</code> directive is included, inline use of the\n  <code>&lt;style&gt;</code> element and HTML style attributes are disabled\n  unless you specify 'unsafe-inline'.`\n  ),\n  'style-src-elem': t(\n    `The <code>style-src-elem</code> directive applies to all styles except\n      those defined in inline attributes.`\n  ),\n  'style-src-attr': t(\n    `The <code>style-src-attr</code> directive applies to inline style attributes and, if present,\n      it will override the <code>style-src</code> directive for relevant checks.`\n  ),\n  'frame-src': t(\n    `The <code>frame-src</code> directive specifies valid sources for nested\n  browsing contexts loading using elements such as\n  <code>&lt;frame&gt;</code> and <code>&lt;iframe&gt;</code>.`\n  ),\n  'worker-src': t(\n    `The <code>worker-src</code> directive specifies valid sources for\n  <code>Worker<code>, <code>SharedWorker</code>, or\n  <code>ServiceWorker</code> scripts.`\n  ),\n};\n\nexport default effectiveDirectives;\n","import styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconOpen} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\nimport effectiveDirectives from './effectiveDirectives';\n\ntype EffectiveDirective = keyof typeof effectiveDirectives;\n\nconst linkOverrides = {'script-src': 'script-src_2'};\n\ntype Props = {\n  data: {\n    effective_directive: EffectiveDirective;\n  };\n};\n\nconst CSPHelp = ({data: {effective_directive: key}}: Props) => {\n  const getHelp = () => ({\n    __html: effectiveDirectives[key],\n  });\n\n  const getLinkHref = () => {\n    const baseLink =\n      'https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives#';\n\n    if (key in linkOverrides) {\n      return `${baseLink}${linkOverrides[key]}`;\n    }\n\n    return `${baseLink}${key}`;\n  };\n\n  const getLink = () => {\n    const href = getLinkHref();\n\n    return (\n      <StyledExternalLink href={href}>\n        {'developer.mozilla.org'}\n        <IconOpen size=\"xs\" className=\"external-icon\" />\n      </StyledExternalLink>\n    );\n  };\n\n  return (\n    <div>\n      <h4>\n        <code>{key}</code>\n      </h4>\n      <blockquote dangerouslySetInnerHTML={getHelp()} />\n      <StyledP>\n        <span>{'\\u2014 MDN ('}</span>\n        <span>{getLink()}</span>\n        <span>{')'}</span>\n      </StyledP>\n    </div>\n  );\n};\n\nexport default CSPHelp;\n\nconst StyledP = styled('p')`\n  text-align: right;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  gap: ${space(0.25)};\n`;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  display: inline-flex;\n  align-items: center;\n`;\n","import {Component} from 'react';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport {Event} from 'sentry/types/event';\n\nimport Content from './content';\nimport Help from './help';\n\nfunction getView(view, data) {\n  switch (view) {\n    case 'report':\n      return <Content data={data} />;\n    case 'raw':\n      return <pre>{JSON.stringify({'csp-report': data}, null, 2)}</pre>;\n    case 'help':\n      return <Help data={data} />;\n    default:\n      throw new TypeError(`Invalid view: ${view}`);\n  }\n}\n\ntype Props = {\n  data: Record<string, any>;\n  event: Event;\n};\n\ntype State = {\n  view: string;\n};\n\nclass CspInterface extends Component<Props, State> {\n  state: State = {view: 'report'};\n\n  toggleView = value => {\n    this.setState({\n      view: value,\n    });\n  };\n\n  render() {\n    const {view} = this.state;\n    const {data} = this.props;\n\n    const cleanData =\n      data.original_policy !== 'string'\n        ? data\n        : {\n            ...data,\n            // Hide the report-uri since this is redundant and silly\n            original_policy: data.original_policy.replace(/(;\\s+)?report-uri [^;]+/, ''),\n          };\n\n    const actions = (\n      <ButtonBar merged active={view}>\n        <Button\n          barId=\"report\"\n          size=\"xsmall\"\n          onClick={this.toggleView.bind(this, 'report')}\n        >\n          {t('Report')}\n        </Button>\n        <Button barId=\"raw\" size=\"xsmall\" onClick={this.toggleView.bind(this, 'raw')}>\n          {t('Raw')}\n        </Button>\n        <Button barId=\"help\" size=\"xsmall\" onClick={this.toggleView.bind(this, 'help')}>\n          {t('Help')}\n        </Button>\n      </ButtonBar>\n    );\n\n    const children = getView(view, cleanData);\n\n    return (\n      <EventDataSection\n        type=\"csp\"\n        title={<h3>{t('CSP Report')}</h3>}\n        actions={actions}\n        wrapTitle={false}\n      >\n        {children}\n      </EventDataSection>\n    );\n  }\n}\n\nexport default CspInterface;\n","import styled from '@emotion/styled';\n\nimport Tag from 'sentry/components/tag';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nconst FEATURE_TOOLTIPS = {\n  symtab: t(\n    'Symbol tables are used as a fallback when full debug information is not available'\n  ),\n  debug: t(\n    'Debug information provides function names and resolves inlined frames during symbolication'\n  ),\n  unwind: t(\n    'Stack unwinding information improves the quality of stack traces extracted from minidumps'\n  ),\n  sources: t(\n    'Source code information allows Sentry to display source code context for stack frames'\n  ),\n};\n\ntype Props = {\n  feature: 'symtab' | 'debug' | 'unwind' | 'sources';\n  available?: boolean;\n};\n\nconst DebugFileFeature = ({available = true, feature}: Props) => {\n  const tooltipText = FEATURE_TOOLTIPS[feature];\n  if (available === true) {\n    return (\n      <StyledTag type=\"success\" tooltipText={tooltipText} icon={<IconCheckmark />}>\n        {feature}\n      </StyledTag>\n    );\n  }\n\n  return (\n    <StyledTag type=\"error\" tooltipText={tooltipText} icon={<IconClose />}>\n      {feature}\n    </StyledTag>\n  );\n};\nexport default DebugFileFeature;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n","import {Fragment, memo} from 'react';\nimport styled from '@emotion/styled';\nimport isNil from 'lodash/isNil';\n\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport DebugFileFeature from 'sentry/components/debugFileFeature';\nimport {formatAddress, getImageRange} from 'sentry/components/events/interfaces/utils';\nimport {PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconCircle, IconFlag, IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\n\nimport {DebugImage as DebugImageType, DebugStatus} from './types';\nimport {combineStatus, getFileName} from './utils';\n\ntype Status = ReturnType<typeof combineStatus>;\n\nconst IMAGE_ADDR_LEN = 12;\n\nfunction getImageStatusText(status: Status) {\n  switch (status) {\n    case 'found':\n      return t('ok');\n    case 'unused':\n      return t('unused');\n    case 'missing':\n      return t('missing');\n    case 'malformed':\n    case 'fetching_failed':\n    case 'timeout':\n    case 'other':\n      return t('failed');\n    default:\n      return null;\n  }\n}\n\nfunction getImageStatusDetails(status: Status) {\n  switch (status) {\n    case 'found':\n      return t('Debug information for this image was found and successfully processed.');\n    case 'unused':\n      return t('The image was not required for processing the stack trace.');\n    case 'missing':\n      return t('No debug information could be found in any of the specified sources.');\n    case 'malformed':\n      return t('The debug information file for this image failed to process.');\n    case 'timeout':\n    case 'fetching_failed':\n      return t('The debug information file for this image could not be downloaded.');\n    case 'other':\n      return t('An internal error occurred while handling this image.');\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  image: DebugImageType;\n  organization: Organization;\n  projectId: Project['id'];\n  showDetails: boolean;\n  style?: React.CSSProperties;\n};\n\nconst DebugImage = memo(({image, organization, projectId, showDetails, style}: Props) => {\n  const orgSlug = organization.slug;\n\n  const getSettingsLink = () => {\n    if (!orgSlug || !projectId || !image.debug_id) {\n      return null;\n    }\n    return `/settings/${orgSlug}/projects/${projectId}/debug-symbols/?query=${image.debug_id}`;\n  };\n\n  const renderStatus = (title: string, status: DebugStatus) => {\n    if (isNil(status)) {\n      return null;\n    }\n\n    const text = getImageStatusText(status);\n    if (!text) {\n      return null;\n    }\n\n    return (\n      <SymbolicationStatus>\n        <Tooltip title={getImageStatusDetails(status)}>\n          <span>\n            <ImageProp>{title}</ImageProp>: {text}\n          </span>\n        </Tooltip>\n      </SymbolicationStatus>\n    );\n  };\n\n  const combinedStatus = combineStatus(image.debug_status, image.unwind_status);\n  const [startAddress, endAddress] = getImageRange(image);\n\n  const renderIconElement = () => {\n    switch (combinedStatus) {\n      case 'unused':\n        return (\n          <IconWrapper>\n            <IconCircle />\n          </IconWrapper>\n        );\n      case 'found':\n        return (\n          <IconWrapper>\n            <IconCheckmark isCircled color=\"green300\" />\n          </IconWrapper>\n        );\n      default:\n        return (\n          <IconWrapper>\n            <IconFlag color=\"red300\" />\n          </IconWrapper>\n        );\n    }\n  };\n\n  const codeFile = getFileName(image.code_file);\n  const debugFile = image.debug_file && getFileName(image.debug_file);\n\n  // The debug file is only realistically set on Windows. All other platforms\n  // either leave it empty or set it to a filename that's equal to the code\n  // file name. In this case, do not show it.\n  const showDebugFile = debugFile && codeFile !== debugFile;\n\n  // Availability only makes sense if the image is actually referenced.\n  // Otherwise, the processing pipeline does not resolve this kind of\n  // information and it will always be false.\n  const showAvailability = !isNil(image.features) && combinedStatus !== 'unused';\n\n  // The code id is sometimes missing, and sometimes set to the equivalent of\n  // the debug id (e.g. for Mach symbols). In this case, it is redundant\n  // information and we do not want to show it.\n  const showCodeId = !!image.code_id && image.code_id !== image.debug_id;\n\n  // Old versions of the event pipeline did not store the symbolication\n  // status. In this case, default to display the debug_id instead of stack\n  // unwind information.\n  const legacyRender = isNil(image.debug_status);\n\n  const debugIdElement = (\n    <ImageSubtext>\n      <ImageProp>{t('Debug ID')}</ImageProp>: <Formatted>{image.debug_id}</Formatted>\n    </ImageSubtext>\n  );\n\n  const formattedImageStartAddress = startAddress ? (\n    <Formatted>{formatAddress(startAddress, IMAGE_ADDR_LEN)}</Formatted>\n  ) : null;\n\n  const formattedImageEndAddress = endAddress ? (\n    <Formatted>{formatAddress(endAddress, IMAGE_ADDR_LEN)}</Formatted>\n  ) : null;\n\n  return (\n    <DebugImageItem style={style}>\n      <ImageInfoGroup>{renderIconElement()}</ImageInfoGroup>\n\n      <ImageInfoGroup>\n        {startAddress && endAddress ? (\n          <Fragment>\n            {formattedImageStartAddress}\n            {' \\u2013 '}\n            <AddressDivider />\n            {formattedImageEndAddress}\n          </Fragment>\n        ) : null}\n      </ImageInfoGroup>\n\n      <ImageInfoGroup fullWidth>\n        <ImageTitle>\n          <Tooltip title={image.code_file}>\n            <CodeFile>{codeFile}</CodeFile>\n          </Tooltip>\n          {showDebugFile && <DebugFile> ({debugFile})</DebugFile>}\n        </ImageTitle>\n\n        {legacyRender ? (\n          debugIdElement\n        ) : (\n          <StatusLine>\n            {renderStatus(t('Stack Unwinding'), image.unwind_status)}\n            {renderStatus(t('Symbolication'), image.debug_status)}\n          </StatusLine>\n        )}\n\n        {showDetails && (\n          <Fragment>\n            {showAvailability && (\n              <ImageSubtext>\n                <ImageProp>{t('Availability')}</ImageProp>:\n                <DebugFileFeature\n                  feature=\"symtab\"\n                  available={image.features?.has_symbols}\n                />\n                <DebugFileFeature\n                  feature=\"debug\"\n                  available={image.features?.has_debug_info}\n                />\n                <DebugFileFeature\n                  feature=\"unwind\"\n                  available={image.features?.has_unwind_info}\n                />\n                <DebugFileFeature\n                  feature=\"sources\"\n                  available={image.features?.has_sources}\n                />\n              </ImageSubtext>\n            )}\n\n            {!legacyRender && debugIdElement}\n\n            {showCodeId && (\n              <ImageSubtext>\n                <ImageProp>{t('Code ID')}</ImageProp>:{' '}\n                <Formatted>{image.code_id}</Formatted>\n              </ImageSubtext>\n            )}\n\n            {!!image.arch && (\n              <ImageSubtext>\n                <ImageProp>{t('Architecture')}</ImageProp>: {image.arch}\n              </ImageSubtext>\n            )}\n          </Fragment>\n        )}\n      </ImageInfoGroup>\n\n      <Access access={['project:releases']}>\n        {({hasAccess}) => {\n          if (!hasAccess) {\n            return null;\n          }\n          const settingsUrl = getSettingsLink();\n          if (!settingsUrl) {\n            return null;\n          }\n\n          return (\n            <ImageActions>\n              <Button\n                size=\"xsmall\"\n                icon={<IconSearch size=\"xs\" />}\n                to={settingsUrl}\n                title={t('Search for debug files in settings')}\n                aria-label={t('Search for debug files in settings')}\n              />\n            </ImageActions>\n          );\n        }}\n      </Access>\n    </DebugImageItem>\n  );\n});\n\nexport default DebugImage;\n\nconst DebugImageItem = styled(PanelItem)`\n  font-size: ${p => p.theme.fontSizeSmall};\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n    gap: ${space(1)};\n    position: relative;\n  }\n`;\n\nconst Formatted = styled('span')`\n  font-family: ${p => p.theme.text.familyMono};\n`;\n\nconst ImageInfoGroup = styled('div')<{fullWidth?: boolean}>`\n  margin-left: 1em;\n  flex-grow: ${p => (p.fullWidth ? 1 : null)};\n\n  &:first-child {\n    @media (min-width: ${p => p.theme.breakpoints.small}) {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst ImageActions = styled(ImageInfoGroup)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    position: absolute;\n    top: 15px;\n    right: 20px;\n  }\n  display: flex;\n  align-items: center;\n`;\n\nconst ImageTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst CodeFile = styled('span')`\n  font-weight: bold;\n`;\n\nconst DebugFile = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst ImageSubtext = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst ImageProp = styled('span')`\n  font-weight: bold;\n`;\n\nconst StatusLine = styled(ImageSubtext)`\n  display: flex;\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n  }\n`;\n\nconst AddressDivider = styled('br')`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: none;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: inline-block;\n  margin-top: ${space(0.5)};\n  height: 16px;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: ${space(0.25)};\n  }\n`;\n\nconst SymbolicationStatus = styled('span')`\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-right: 1em;\n\n  svg {\n    margin-left: 0.66ex;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport FunctionName from 'sentry/components/events/interfaces/frame/functionName';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Frame} from 'sentry/types';\n\ntype Props = {\n  frame: Frame;\n  onShowAllImages: (filter: string) => void;\n};\n\nconst ImageForBar = ({frame, onShowAllImages}: Props) => {\n  const handleShowAllImages = () => {\n    onShowAllImages('');\n  };\n\n  return (\n    <Wrapper>\n      <MatchedFunctionWrapper>\n        <MatchedFunctionCaption>{t('Image for: ')}</MatchedFunctionCaption>\n        <FunctionName frame={frame} />\n      </MatchedFunctionWrapper>\n      <ResetAddressFilterCaption onClick={handleShowAllImages}>\n        {t('Show all images')}\n      </ResetAddressFilterCaption>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  padding: ${space(0.5)} ${space(2)};\n  background: ${p => p.theme.backgroundSecondary};\n  border-bottom: 1px solid ${p => p.theme.border};\n  font-weight: 700;\n  code {\n    color: ${p => p.theme.blue300};\n    font-size: ${p => p.theme.fontSizeSmall};\n    background: ${p => p.theme.backgroundSecondary};\n  }\n  a {\n    color: ${p => p.theme.blue300};\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst MatchedFunctionWrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n`;\n\nconst MatchedFunctionCaption = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 400;\n  color: ${p => p.theme.gray300};\n  flex-shrink: 0;\n`;\n\nconst ResetAddressFilterCaption = styled('a')`\n  display: flex;\n  flex-shrink: 0;\n  padding-left: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: 400;\n  color: ${p => p.theme.gray300} !important;\n  &:hover {\n    color: ${p => p.theme.gray300} !important;\n  }\n`;\n\nexport default ImageForBar;\n","import {createRef, Fragment, PureComponent} from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowProps,\n} from 'react-virtualized';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport isNil from 'lodash/isNil';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport Checkbox from 'sentry/components/checkbox';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {getImageRange, parseAddress} from 'sentry/components/events/interfaces/utils';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport DebugMetaStore, {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Frame, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport {shouldSkipSection} from '../debugMeta-v2/utils';\n\nimport DebugImage from './debugImage';\nimport ImageForBar from './imageForBar';\nimport {getFileName} from './utils';\n\nconst MIN_FILTER_LEN = 3;\nconst PANEL_MAX_HEIGHT = 400;\n\ntype Image = React.ComponentProps<typeof DebugImage>['image'];\n\ntype DefaultProps = {\n  data: {\n    images: Array<Image>;\n  };\n};\n\ntype Props = DefaultProps & {\n  event: Event;\n  organization: Organization;\n  projectId: Project['id'];\n};\n\ntype State = {\n  debugImages: Array<Image>;\n  filter: string;\n  filteredImages: Array<Image>;\n  showDetails: boolean;\n  showUnused: boolean;\n  foundFrame?: Frame;\n  panelBodyHeight?: number;\n};\n\nfunction normalizeId(id: string | undefined): string {\n  return id ? id.trim().toLowerCase().replace(/[- ]/g, '') : '';\n}\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true,\n  defaultHeight: 81,\n});\n\nclass DebugMeta extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    data: {images: []},\n  };\n\n  state: State = {\n    filter: '',\n    debugImages: [],\n    filteredImages: [],\n    showUnused: false,\n    showDetails: false,\n  };\n\n  componentDidMount() {\n    this.unsubscribeFromStore = DebugMetaStore.listen(this.onStoreChange, undefined);\n    cache.clearAll();\n    this.filterImages();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      prevState.showUnused !== this.state.showUnused ||\n      prevState.filter !== this.state.filter\n    ) {\n      this.filterImages();\n    }\n\n    if (\n      !isEqual(prevState.foundFrame, this.state.foundFrame) ||\n      this.state.showDetails !== prevState.showDetails ||\n      prevState.showUnused !== this.state.showUnused ||\n      (prevState.filter && !this.state.filter)\n    ) {\n      this.updateGrid();\n    }\n\n    if (prevState.filteredImages.length === 0 && this.state.filteredImages.length > 0) {\n      this.getPanelBodyHeight();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribeFromStore) {\n      this.unsubscribeFromStore();\n    }\n  }\n\n  unsubscribeFromStore: any;\n\n  panelBodyRef = createRef<HTMLDivElement>();\n  listRef: List | null = null;\n\n  updateGrid() {\n    cache.clearAll();\n    this.listRef?.forceUpdateGrid();\n  }\n\n  getPanelBodyHeight() {\n    const panelBodyHeight = this.panelBodyRef?.current?.offsetHeight;\n\n    if (!panelBodyHeight) {\n      return;\n    }\n\n    this.setState({panelBodyHeight});\n  }\n\n  onStoreChange = (store: {filter: string}) => {\n    this.setState({\n      filter: store.filter,\n    });\n  };\n\n  filterImage(image: Image) {\n    const {showUnused, filter} = this.state;\n\n    const searchTerm = filter.trim().toLowerCase();\n\n    if (searchTerm.length < MIN_FILTER_LEN) {\n      if (showUnused) {\n        return true;\n      }\n\n      // A debug status of `null` indicates that this information is not yet\n      // available in an old event. Default to showing the image.\n      if (image.debug_status !== 'unused') {\n        return true;\n      }\n\n      // An unwind status of `null` indicates that symbolicator did not unwind.\n      // Ignore the status in this case.\n      if (!isNil(image.unwind_status) && image.unwind_status !== 'unused') {\n        return true;\n      }\n\n      return false;\n    }\n\n    // When searching for an address, check for the address range of the image\n    // instead of an exact match.  Note that images cannot be found by index\n    // if they are at 0x0.  For those relative addressing has to be used.\n    if (searchTerm.indexOf('0x') === 0) {\n      const needle = parseAddress(searchTerm);\n      if (needle > 0 && image.image_addr !== '0x0') {\n        const [startAddress, endAddress] = getImageRange(image);\n        return needle >= startAddress && needle < endAddress;\n      }\n    }\n\n    // the searchTerm ending at \"!\" is the end of the ID search.\n    const relMatch = searchTerm.match(/^\\s*(.*?)!/); // debug_id!address\n    const idSearchTerm = normalizeId(relMatch?.[1] || searchTerm);\n\n    return (\n      // Prefix match for identifiers\n      normalizeId(image.code_id).indexOf(idSearchTerm) === 0 ||\n      normalizeId(image.debug_id).indexOf(idSearchTerm) === 0 ||\n      // Any match for file paths\n      (image.code_file?.toLowerCase() || '').indexOf(searchTerm) >= 0 ||\n      (image.debug_file?.toLowerCase() || '').indexOf(searchTerm) >= 0\n    );\n  }\n\n  filterImages() {\n    const foundFrame = this.getFrame();\n    // skip null values indicating invalid debug images\n    const debugImages = this.getDebugImages();\n\n    if (!debugImages.length) {\n      return;\n    }\n\n    const filteredImages = debugImages.filter(image => this.filterImage(image));\n\n    this.setState({debugImages, filteredImages, foundFrame});\n  }\n\n  isValidImage(image: Image) {\n    // in particular proguard images do not have a code file, skip them\n    if (image === null || image.code_file === null || image.type === 'proguard') {\n      return false;\n    }\n\n    if (getFileName(image.code_file) === 'dyld_sim') {\n      // this is only for simulator builds\n      return false;\n    }\n\n    return true;\n  }\n\n  getFrame(): Frame | undefined {\n    const {\n      event: {entries},\n    } = this.props;\n\n    const frames: Array<Frame> | undefined = entries.find(\n      ({type}) => type === 'exception'\n    )?.data?.values?.[0]?.stacktrace?.frames;\n\n    if (!frames) {\n      return undefined;\n    }\n\n    const searchTerm = normalizeId(this.state.filter);\n    const relMatch = searchTerm.match(/^\\s*(.*?)!(.*)$/); // debug_id!address\n\n    if (relMatch) {\n      const debugImages = this.getDebugImages().map(\n        (image, idx) => [idx, image] as [number, Image]\n      );\n      const filteredImages = debugImages.filter(([_, image]) => this.filterImage(image));\n      if (filteredImages.length === 1) {\n        return frames.find(\n          frame =>\n            frame.addrMode === `rel:${filteredImages[0][0]}` &&\n            frame.instructionAddr?.toLowerCase() === relMatch[2]\n        );\n      }\n\n      return undefined;\n    }\n\n    return frames.find(frame => frame.instructionAddr?.toLowerCase() === searchTerm);\n  }\n\n  getDebugImages() {\n    const {\n      data: {images},\n    } = this.props;\n\n    // There are a bunch of images in debug_meta that are not relevant to this\n    // component. Filter those out to reduce the noise. Most importantly, this\n    // includes proguard images, which are rendered separately.\n    const filtered = images.filter(image => this.isValidImage(image));\n\n    // Sort images by their start address. We assume that images have\n    // non-overlapping ranges. Each address is given as hex string (e.g.\n    // \"0xbeef\").\n    filtered.sort((a, b) => parseAddress(a.image_addr) - parseAddress(b.image_addr));\n\n    return filtered;\n  }\n\n  getNoImagesMessage() {\n    const {filter, showUnused, debugImages} = this.state;\n\n    if (debugImages.length === 0) {\n      return t('No loaded images available.');\n    }\n\n    if (!showUnused && !filter) {\n      return tct(\n        'No images are referenced in the stack trace. [toggle: Show Unreferenced]',\n        {\n          toggle: (\n            <Button\n              priority=\"link\"\n              onClick={this.handleShowUnused}\n              aria-label={t('Show Unreferenced')}\n            />\n          ),\n        }\n      );\n    }\n\n    return t('Sorry, no images match your query.');\n  }\n\n  renderToolbar() {\n    const {filter, showDetails, showUnused} = this.state;\n    return (\n      <ToolbarWrapper>\n        <Label>\n          <Checkbox checked={showDetails} onChange={this.handleChangeShowDetails} />\n          {t('details')}\n        </Label>\n\n        <Label>\n          <Checkbox\n            checked={showUnused || !!filter}\n            disabled={!!filter}\n            onChange={this.handleChangeShowUnused}\n          />\n          {t('show unreferenced')}\n        </Label>\n        <SearchInputWrapper>\n          <StyledSearchBar\n            onChange={this.handleChangeFilter}\n            query={filter}\n            placeholder={t('Search images\\u2026')}\n          />\n        </SearchInputWrapper>\n      </ToolbarWrapper>\n    );\n  }\n\n  renderRow = ({index, key, parent, style}: ListRowProps) => {\n    const {organization, projectId} = this.props;\n    const {filteredImages, showDetails} = this.state;\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <DebugImage\n          style={style}\n          image={filteredImages[index]}\n          organization={organization}\n          projectId={projectId}\n          showDetails={showDetails}\n        />\n      </CellMeasurer>\n    );\n  };\n\n  getListHeight() {\n    const {showUnused, showDetails, panelBodyHeight} = this.state;\n\n    if (\n      !panelBodyHeight ||\n      panelBodyHeight > PANEL_MAX_HEIGHT ||\n      showUnused ||\n      showDetails\n    ) {\n      return PANEL_MAX_HEIGHT;\n    }\n\n    return panelBodyHeight;\n  }\n\n  renderImageList() {\n    const {filteredImages, showDetails, panelBodyHeight} = this.state;\n    const {organization, projectId} = this.props;\n\n    if (!panelBodyHeight) {\n      return filteredImages.map(filteredImage => (\n        <DebugImage\n          key={filteredImage.debug_id}\n          image={filteredImage}\n          organization={organization}\n          projectId={projectId}\n          showDetails={showDetails}\n        />\n      ));\n    }\n\n    return (\n      <AutoSizer disableHeight>\n        {({width}) => (\n          <StyledList\n            ref={(el: List | null) => {\n              this.listRef = el;\n            }}\n            deferredMeasurementCache={cache}\n            height={this.getListHeight()}\n            overscanRowCount={5}\n            rowCount={filteredImages.length}\n            rowHeight={cache.rowHeight}\n            rowRenderer={this.renderRow}\n            width={width}\n            isScrolling={false}\n          />\n        )}\n      </AutoSizer>\n    );\n  }\n\n  handleChangeShowUnused = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const showUnused = event.target.checked;\n    this.setState({showUnused});\n  };\n\n  handleShowUnused = () => {\n    this.setState({showUnused: true});\n  };\n\n  handleChangeShowDetails = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const showDetails = event.target.checked;\n    this.setState({showDetails});\n  };\n\n  handleChangeFilter = (value = '') => {\n    DebugMetaActions.updateFilter(value);\n  };\n\n  render() {\n    const {filteredImages, foundFrame} = this.state;\n    const {data} = this.props;\n    const {images} = data;\n\n    if (shouldSkipSection(filteredImages, images)) {\n      return null;\n    }\n\n    return (\n      <EventDataSection\n        type=\"images-loaded\"\n        title={\n          <GuideAnchor target=\"images-loaded\" position=\"bottom\">\n            <h3>{t('Images Loaded')}</h3>\n          </GuideAnchor>\n        }\n        actions={this.renderToolbar()}\n        wrapTitle={false}\n        isCentered\n      >\n        <DebugImagesPanel>\n          {filteredImages.length > 0 ? (\n            <Fragment>\n              {foundFrame && (\n                <ImageForBar\n                  frame={foundFrame}\n                  onShowAllImages={this.handleChangeFilter}\n                />\n              )}\n              <PanelBody ref={this.panelBodyRef}>{this.renderImageList()}</PanelBody>\n            </Fragment>\n          ) : (\n            <EmptyMessage icon={<IconWarning size=\"xl\" />}>\n              {this.getNoImagesMessage()}\n            </EmptyMessage>\n          )}\n        </DebugImagesPanel>\n      </EventDataSection>\n    );\n  }\n}\n\nexport default DebugMeta;\n\n// XXX(ts): Emotion11 has some trouble with List's defaultProps\n//\n// It gives the list have a dynamic height; otherwise, in the case of filtered\n// options, a list will be displayed with an empty space\nconst StyledList = styled(List as any)<React.ComponentProps<typeof List>>`\n  height: auto !important;\n  max-height: ${p => p.height}px;\n  outline: none;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  margin-right: 1em;\n  margin-bottom: 0;\n  white-space: nowrap;\n\n  > input {\n    margin-right: 1ex;\n  }\n`;\n\nconst DebugImagesPanel = styled(Panel)`\n  margin-bottom: ${space(1)};\n  max-height: ${PANEL_MAX_HEIGHT}px;\n  overflow: hidden;\n`;\n\nconst ToolbarWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    flex-wrap: wrap;\n    margin-top: ${space(1)};\n  }\n`;\n\nconst SearchInputWrapper = styled('div')`\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: 100%;\n    max-width: 100%;\n    margin-top: ${space(1)};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) and (max-width: ${p =>\n      p.theme.breakpoints.xlarge}) {\n    max-width: 180px;\n    display: inline-block;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.xlarge}) {\n    width: 330px;\n    max-width: none;\n  }\n\n  @media (min-width: 1550px) {\n    width: 510px;\n  }\n`;\n// TODO(matej): remove this once we refactor SearchBar to not use css classes\n// - it could accept size as a prop\nconst StyledSearchBar = styled(SearchBar)`\n  .search-input {\n    height: 30px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport Tag from 'sentry/components/tag';\nimport {t} from 'sentry/locale';\nimport {ImageStatus} from 'sentry/types/debugImage';\n\ntype Props = {\n  status: ImageStatus;\n};\n\nfunction Status({status}: Props) {\n  switch (status) {\n    case ImageStatus.OTHER:\n    case ImageStatus.FETCHING_FAILED:\n    case ImageStatus.MALFORMED:\n    case ImageStatus.TIMEOUT: {\n      return <StyledTag type=\"error\">{t('Error')}</StyledTag>;\n    }\n    case ImageStatus.MISSING: {\n      return <StyledTag type=\"error\">{t('Missing')}</StyledTag>;\n    }\n    case ImageStatus.FOUND: {\n      return <StyledTag type=\"success\">{t('Ok')}</StyledTag>;\n    }\n    case ImageStatus.UNUSED: {\n      return <StyledTag>{t('Unreferenced')}</StyledTag>;\n    }\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(new Error('Unknown image status'));\n      });\n      return <StyledTag>{t('Unknown')}</StyledTag>; // This shall not happen\n    }\n  }\n}\n\nexport default Status;\n\nconst StyledTag = styled(Tag)`\n  &,\n  span div {\n    max-width: 100%;\n  }\n`;\n","import {Theme} from 'sentry/utils/theme';\n\nconst layout = (theme: Theme, scrollbarWidth?: number) => `\ndisplay: grid;\n\n> * {\n  :nth-child(4n) {\n    text-align: right;\n  }\n  :nth-child(4n-1) {\n    display: none;\n  }\n}\n\ngrid-template-columns: 1fr 1.5fr 0.7fr ${scrollbarWidth ? `${scrollbarWidth}px` : `0fr`};\n\n@media (min-width: ${theme.breakpoints.small}) {\n  > *:nth-child(4n-1) {\n    display: flex;\n  }\n  grid-template-columns: 1fr 2fr 1.5fr 0.6fr ${\n    scrollbarWidth ? `${scrollbarWidth}px` : `0fr`\n  };\n}\n\n@media (min-width: ${theme.breakpoints.xlarge}) {\n  grid-template-columns: 1fr 1.5fr 1.5fr 0.6fr ${\n    scrollbarWidth ? `${scrollbarWidth}px` : `0fr`\n  };\n}\n\n@media (min-width: ${theme.breakpoints.xxlarge}) {\n  grid-template-columns: 0.5fr 1.5fr 1fr 0.5fr ${\n    scrollbarWidth ? `${scrollbarWidth}px` : `0fr`\n  };\n}\n\n`;\n\nexport default layout;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport NotAvailable from 'sentry/components/notAvailable';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Image, ImageStatus} from 'sentry/types/debugImage';\n\nimport layout from '../layout';\nimport {getFileName, getImageAddress} from '../utils';\n\nimport Processings from './processings';\nimport Status from './status';\n\ntype Props = {\n  image: Image & {status: ImageStatus};\n  onOpenImageDetailsModal: (\n    code_id: Image['code_id'],\n    debug_id: Image['debug_id']\n  ) => void;\n  style?: React.CSSProperties;\n};\n\nfunction DebugImage({image, onOpenImageDetailsModal, style}: Props) {\n  const {unwind_status, debug_status, debug_file, debug_id, code_file, code_id, status} =\n    image;\n\n  const codeFilename = getFileName(code_file);\n  const debugFilename = getFileName(debug_file);\n  const imageAddress = getImageAddress(image);\n\n  return (\n    <Wrapper style={style}>\n      <StatusColumn>\n        <Status status={status} />\n      </StatusColumn>\n      <ImageColumn>\n        <div>\n          {codeFilename && (\n            <FileName>\n              <Tooltip title={code_file}>{codeFilename}</Tooltip>\n            </FileName>\n          )}\n          {codeFilename !== debugFilename && debugFilename && (\n            <CodeFilename>{`(${debugFilename})`}</CodeFilename>\n          )}\n        </div>\n        {imageAddress && <ImageAddress>{imageAddress}</ImageAddress>}\n      </ImageColumn>\n      <Column>\n        {unwind_status || debug_status ? (\n          <Processings unwind_status={unwind_status} debug_status={debug_status} />\n        ) : (\n          <NotAvailable />\n        )}\n      </Column>\n      <DebugFilesColumn>\n        <Button size=\"xsmall\" onClick={() => onOpenImageDetailsModal(code_id, debug_id)}>\n          {t('View')}\n        </Button>\n      </DebugFilesColumn>\n    </Wrapper>\n  );\n}\n\nexport default DebugImage;\n\nconst Wrapper = styled('div')`\n  :not(:last-child) {\n    > * {\n      border-bottom: 1px solid ${p => p.theme.border};\n    }\n  }\n  ${p => layout(p.theme)};\n`;\n\nconst Column = styled('div')`\n  padding: ${space(2)};\n  display: flex;\n  align-items: center;\n`;\n\nconst StatusColumn = styled(Column)`\n  max-width: 100%;\n  overflow: hidden;\n`;\n\nconst FileName = styled('span')`\n  color: ${p => p.theme.textColor};\n  font-family: ${p => p.theme.text.family};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(0.5)};\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nconst CodeFilename = styled('span')`\n  color: ${p => p.theme.subText};\n`;\n\nconst ImageColumn = styled(Column)`\n  font-family: ${p => p.theme.text.familyMono};\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst ImageAddress = styled('div')`\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nconst DebugFilesColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n","import {createRef, Fragment, PureComponent} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowProps,\n} from 'react-virtualized';\nimport styled from '@emotion/styled';\n\nimport {openModal, openReprocessEventModal} from 'sentry/actionCreators/modal';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport {getImageRange, parseAddress} from 'sentry/components/events/interfaces/utils';\nimport {PanelTable} from 'sentry/components/panels';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {t} from 'sentry/locale';\nimport DebugMetaStore, {DebugMetaActions} from 'sentry/stores/debugMetaStore';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, Project} from 'sentry/types';\nimport {Image, ImageStatus} from 'sentry/types/debugImage';\nimport {Event} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport SearchBarAction from '../searchBarAction';\n\nimport Status from './debugImage/status';\nimport DebugImage from './debugImage';\nimport layout from './layout';\nimport {\n  combineStatus,\n  getFileName,\n  IMAGE_AND_CANDIDATE_LIST_MAX_HEIGHT,\n  normalizeId,\n  shouldSkipSection,\n} from './utils';\n\nconst IMAGE_INFO_UNAVAILABLE = '-1';\n\ntype DefaultProps = {\n  data: {\n    images: Array<Image | null>;\n  };\n};\n\ntype FilterOptions = NonNullable<\n  React.ComponentProps<typeof SearchBarAction>['filterOptions']\n>;\n\ntype Images = Array<React.ComponentProps<typeof DebugImage>['image']>;\n\ntype Props = DefaultProps &\n  WithRouterProps & {\n    event: Event;\n    organization: Organization;\n    projectId: Project['id'];\n    groupId?: Group['id'];\n  };\n\ntype State = {\n  filterOptions: FilterOptions;\n  filterSelections: FilterOptions;\n  filteredImages: Images;\n  filteredImagesByFilter: Images;\n  filteredImagesBySearch: Images;\n  isOpen: boolean;\n  scrollbarWidth: number;\n  searchTerm: string;\n  panelTableHeight?: number;\n};\n\nconst cache = new CellMeasurerCache({\n  fixedWidth: true,\n  defaultHeight: 81,\n});\n\nclass DebugMeta extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    data: {images: []},\n  };\n\n  state: State = {\n    searchTerm: '',\n    scrollbarWidth: 0,\n    isOpen: false,\n    filterOptions: [],\n    filterSelections: [],\n    filteredImages: [],\n    filteredImagesByFilter: [],\n    filteredImagesBySearch: [],\n  };\n\n  componentDidMount() {\n    this.unsubscribeFromDebugMetaStore = DebugMetaStore.listen(\n      this.onDebugMetaStoreChange,\n      undefined\n    );\n\n    cache.clearAll();\n    this.getRelevantImages();\n    this.openImageDetailsModal();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (\n      this.state.isOpen ||\n      (prevState.filteredImages.length === 0 && this.state.filteredImages.length > 0)\n    ) {\n      this.getPanelBodyHeight();\n    }\n\n    this.openImageDetailsModal();\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribeFromDebugMetaStore) {\n      this.unsubscribeFromDebugMetaStore();\n    }\n  }\n\n  unsubscribeFromDebugMetaStore: any;\n\n  panelTableRef = createRef<HTMLDivElement>();\n  listRef: List | null = null;\n\n  onDebugMetaStoreChange = (store: {filter: string}) => {\n    const {searchTerm} = this.state;\n\n    if (store.filter !== searchTerm) {\n      this.setState({searchTerm: store.filter}, this.filterImagesBySearchTerm);\n    }\n  };\n\n  getScrollbarWidth() {\n    const panelTableWidth = this.panelTableRef?.current?.clientWidth ?? 0;\n\n    const gridInnerWidth =\n      this.panelTableRef?.current?.querySelector(\n        '.ReactVirtualized__Grid__innerScrollContainer'\n      )?.clientWidth ?? 0;\n\n    const scrollbarWidth = panelTableWidth - gridInnerWidth;\n\n    if (scrollbarWidth !== this.state.scrollbarWidth) {\n      this.setState({scrollbarWidth});\n    }\n  }\n\n  updateGrid = () => {\n    if (this.listRef) {\n      cache.clearAll();\n      this.listRef.forceUpdateGrid();\n      this.getScrollbarWidth();\n    }\n  };\n\n  isValidImage(image: Image | null) {\n    // in particular proguard images do not have a code file, skip them\n    if (image === null || image.code_file === null || image.type === 'proguard') {\n      return false;\n    }\n\n    if (getFileName(image.code_file) === 'dyld_sim') {\n      // this is only for simulator builds\n      return false;\n    }\n\n    return true;\n  }\n\n  filterImage(image: Image, searchTerm: string) {\n    // When searching for an address, check for the address range of the image\n    // instead of an exact match.  Note that images cannot be found by index\n    // if they are at 0x0.  For those relative addressing has to be used.\n    if (searchTerm.indexOf('0x') === 0) {\n      const needle = parseAddress(searchTerm);\n      if (needle > 0 && image.image_addr !== '0x0') {\n        const [startAddress, endAddress] = getImageRange(image as any); // TODO(PRISCILA): remove any\n        return needle >= startAddress && needle < endAddress;\n      }\n    }\n\n    // the searchTerm ending at \"!\" is the end of the ID search.\n    const relMatch = searchTerm.match(/^\\s*(.*?)!/); // debug_id!address\n    const idSearchTerm = normalizeId(relMatch?.[1] || searchTerm);\n\n    return (\n      // Prefix match for identifiers\n      normalizeId(image.code_id).indexOf(idSearchTerm) === 0 ||\n      normalizeId(image.debug_id).indexOf(idSearchTerm) === 0 ||\n      // Any match for file paths\n      (image.code_file?.toLowerCase() || '').indexOf(searchTerm) >= 0 ||\n      (image.debug_file?.toLowerCase() || '').indexOf(searchTerm) >= 0\n    );\n  }\n\n  filterImagesBySearchTerm() {\n    const {filteredImages, filterSelections, searchTerm} = this.state;\n    const filteredImagesBySearch = filteredImages.filter(image =>\n      this.filterImage(image, searchTerm.toLowerCase())\n    );\n\n    const filteredImagesByFilter = this.getFilteredImagesByFilter(\n      filteredImagesBySearch,\n      filterSelections\n    );\n\n    this.setState(\n      {\n        filteredImagesBySearch,\n        filteredImagesByFilter,\n      },\n      this.updateGrid\n    );\n  }\n\n  openImageDetailsModal = async () => {\n    const {filteredImages} = this.state;\n\n    if (!filteredImages.length) {\n      return;\n    }\n\n    const {location, organization, projectId: projSlug, groupId, event} = this.props;\n    const {query} = location;\n\n    const {imageCodeId, imageDebugId} = query;\n\n    if (!imageCodeId && !imageDebugId) {\n      return;\n    }\n\n    const image =\n      imageCodeId !== IMAGE_INFO_UNAVAILABLE || imageDebugId !== IMAGE_INFO_UNAVAILABLE\n        ? filteredImages.find(\n            ({code_id, debug_id}) => code_id === imageCodeId || debug_id === imageDebugId\n          )\n        : undefined;\n\n    const mod = await import(\n      'sentry/components/events/interfaces/debugMeta-v2/debugImageDetails'\n    );\n\n    const {default: Modal, modalCss} = mod;\n\n    openModal(\n      deps => (\n        <Modal\n          {...deps}\n          image={image}\n          organization={organization}\n          projSlug={projSlug}\n          event={event}\n          onReprocessEvent={\n            defined(groupId) ? this.handleReprocessEvent(groupId) : undefined\n          }\n        />\n      ),\n      {\n        modalCss,\n        onClose: this.handleCloseImageDetailsModal,\n      }\n    );\n  };\n\n  toggleImagesLoaded = () => {\n    this.setState(state => ({\n      isOpen: !state.isOpen,\n    }));\n  };\n\n  getPanelBodyHeight() {\n    const panelTableHeight = this.panelTableRef?.current?.offsetHeight;\n\n    if (!panelTableHeight) {\n      return;\n    }\n\n    this.setState({panelTableHeight});\n  }\n\n  getRelevantImages() {\n    const {data} = this.props;\n    const {images} = data;\n\n    // There are a bunch of images in debug_meta that are not relevant to this\n    // component. Filter those out to reduce the noise. Most importantly, this\n    // includes proguard images, which are rendered separately.\n\n    const relevantImages = images.filter(this.isValidImage);\n\n    if (!relevantImages.length) {\n      return;\n    }\n\n    const formattedRelevantImages = relevantImages.map(releventImage => {\n      const {debug_status, unwind_status} = releventImage as Image;\n      return {\n        ...releventImage,\n        status: combineStatus(debug_status, unwind_status),\n      };\n    }) as Images;\n\n    // Sort images by their start address. We assume that images have\n    // non-overlapping ranges. Each address is given as hex string (e.g.\n    // \"0xbeef\").\n    formattedRelevantImages.sort(\n      (a, b) => parseAddress(a.image_addr) - parseAddress(b.image_addr)\n    );\n\n    const unusedImages: Images = [];\n\n    const usedImages = formattedRelevantImages.filter(image => {\n      if (image.debug_status === ImageStatus.UNUSED) {\n        unusedImages.push(image as Images[0]);\n        return false;\n      }\n      return true;\n    }) as Images;\n\n    const filteredImages = [...usedImages, ...unusedImages];\n\n    const filterOptions = this.getFilterOptions(filteredImages);\n    const defaultFilterSelections = (filterOptions[0].options ?? []).filter(\n      opt => opt.value !== ImageStatus.UNUSED\n    );\n\n    this.setState({\n      filteredImages,\n      filterOptions,\n      filterSelections: defaultFilterSelections,\n      filteredImagesByFilter: this.getFilteredImagesByFilter(\n        filteredImages,\n        defaultFilterSelections\n      ),\n      filteredImagesBySearch: filteredImages,\n    });\n  }\n\n  getFilterOptions(images: Images): FilterOptions {\n    return [\n      {\n        value: 'status',\n        label: t('Status'),\n        options: [...new Set(images.map(image => image.status))].map(status => ({\n          value: status,\n          label: <Status status={status} />,\n        })),\n      },\n    ];\n  }\n\n  getFilteredImagesByFilter(filteredImages: Images, filterOptions: FilterOptions) {\n    const checkedOptions = new Set(filterOptions.map(option => option.value));\n\n    if (![...checkedOptions].length) {\n      return filteredImages;\n    }\n\n    return filteredImages.filter(image => checkedOptions.has(image.status));\n  }\n\n  handleChangeFilter = (filterSelections: FilterOptions) => {\n    const {filteredImagesBySearch} = this.state;\n    const filteredImagesByFilter = this.getFilteredImagesByFilter(\n      filteredImagesBySearch,\n      filterSelections\n    );\n\n    this.setState({filterSelections, filteredImagesByFilter}, this.updateGrid);\n  };\n\n  handleChangeSearchTerm = (searchTerm = '') => {\n    DebugMetaActions.updateFilter(searchTerm);\n  };\n\n  handleResetFilter = () => {\n    this.setState({filterSelections: []}, this.filterImagesBySearchTerm);\n  };\n\n  handleResetSearchBar = () => {\n    this.setState(prevState => ({\n      searchTerm: '',\n      filteredImagesByFilter: prevState.filteredImages,\n      filteredImagesBySearch: prevState.filteredImages,\n    }));\n  };\n\n  handleOpenImageDetailsModal = (\n    code_id: Image['code_id'],\n    debug_id: Image['debug_id']\n  ) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {\n        ...location.query,\n        imageCodeId: code_id ?? IMAGE_INFO_UNAVAILABLE,\n        imageDebugId: debug_id ?? IMAGE_INFO_UNAVAILABLE,\n      },\n    });\n  };\n\n  handleCloseImageDetailsModal = () => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, imageCodeId: undefined, imageDebugId: undefined},\n    });\n  };\n\n  handleReprocessEvent = (groupId: Group['id']) => () => {\n    const {organization} = this.props;\n    openReprocessEventModal({\n      organization,\n      groupId,\n      onClose: this.openImageDetailsModal,\n    });\n  };\n\n  renderRow = ({index, key, parent, style}: ListRowProps) => {\n    const {filteredImagesByFilter: images} = this.state;\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <DebugImage\n          style={style}\n          image={images[index]}\n          onOpenImageDetailsModal={this.handleOpenImageDetailsModal}\n        />\n      </CellMeasurer>\n    );\n  };\n\n  renderList() {\n    const {filteredImagesByFilter: images, panelTableHeight} = this.state;\n\n    if (!panelTableHeight) {\n      return images.map((image, index) => (\n        <DebugImage\n          key={index}\n          image={image}\n          onOpenImageDetailsModal={this.handleOpenImageDetailsModal}\n        />\n      ));\n    }\n\n    return (\n      <AutoSizer disableHeight onResize={this.updateGrid}>\n        {({width}) => (\n          <StyledList\n            ref={(el: List | null) => {\n              this.listRef = el;\n            }}\n            deferredMeasurementCache={cache}\n            height={IMAGE_AND_CANDIDATE_LIST_MAX_HEIGHT}\n            overscanRowCount={5}\n            rowCount={images.length}\n            rowHeight={cache.rowHeight}\n            rowRenderer={this.renderRow}\n            width={width}\n            isScrolling={false}\n          />\n        )}\n      </AutoSizer>\n    );\n  }\n\n  getEmptyMessage() {\n    const {searchTerm, filteredImagesByFilter: images, filterSelections} = this.state;\n\n    if (!!images.length) {\n      return {};\n    }\n\n    if (searchTerm && !images.length) {\n      const hasActiveFilter = filterSelections.length > 0;\n\n      return {\n        emptyMessage: t('Sorry, no images match your search query'),\n        emptyAction: hasActiveFilter ? (\n          <Button onClick={this.handleResetFilter} priority=\"primary\">\n            {t('Reset filter')}\n          </Button>\n        ) : (\n          <Button onClick={this.handleResetSearchBar} priority=\"primary\">\n            {t('Clear search bar')}\n          </Button>\n        ),\n      };\n    }\n\n    return {\n      emptyMessage: t('There are no images to be displayed'),\n    };\n  }\n\n  render() {\n    const {\n      searchTerm,\n      filterOptions,\n      scrollbarWidth,\n      isOpen,\n      filterSelections,\n      filteredImagesByFilter: filteredImages,\n    } = this.state;\n    const {data} = this.props;\n    const {images} = data;\n\n    if (shouldSkipSection(filteredImages, images)) {\n      return null;\n    }\n\n    const showFilters = filterOptions.some(section => (section.options ?? []).length > 1);\n\n    const actions = (\n      <ToggleButton onClick={this.toggleImagesLoaded} priority=\"link\">\n        {isOpen ? t('Hide Details') : t('Show Details')}\n      </ToggleButton>\n    );\n\n    return (\n      <EventDataSection\n        type=\"images-loaded\"\n        title={\n          <TitleWrapper>\n            <GuideAnchor target=\"images-loaded\" position=\"bottom\">\n              <Title>{t('Images Loaded')}</Title>\n            </GuideAnchor>\n            <QuestionTooltip\n              size=\"xs\"\n              position=\"top\"\n              title={t(\n                'A list of dynamic librarys or shared objects loaded into process memory at the time of the crash. Images contribute application code that is referenced in stack traces.'\n              )}\n            />\n          </TitleWrapper>\n        }\n        actions={actions}\n        wrapTitle={false}\n        isCentered\n      >\n        {isOpen && (\n          <Fragment>\n            <StyledSearchBarAction\n              placeholder={t('Search images loaded')}\n              onChange={value => this.handleChangeSearchTerm(value)}\n              query={searchTerm}\n              filterOptions={showFilters ? filterOptions : undefined}\n              onFilterChange={this.handleChangeFilter}\n              filterSelections={filterSelections}\n            />\n            <StyledPanelTable\n              isEmpty={!filteredImages.length}\n              scrollbarWidth={scrollbarWidth}\n              headers={[t('Status'), t('Image'), t('Processing'), t('Details'), '']}\n              {...this.getEmptyMessage()}\n            >\n              <div ref={this.panelTableRef}>{this.renderList()}</div>\n            </StyledPanelTable>\n          </Fragment>\n        )}\n      </EventDataSection>\n    );\n  }\n}\n\nexport default withRouter(DebugMeta);\n\nconst StyledPanelTable = styled(PanelTable)<{scrollbarWidth?: number}>`\n  overflow: hidden;\n  > * {\n    :nth-child(-n + 5) {\n      ${p => p.theme.overflowEllipsis};\n      border-bottom: 1px solid ${p => p.theme.border};\n      :nth-child(5n) {\n        height: 100%;\n        ${p => !p.scrollbarWidth && `display: none`}\n      }\n    }\n\n    :nth-child(n + 6) {\n      grid-column: 1/-1;\n      ${p =>\n        !p.isEmpty &&\n        `\n          display: grid;\n          padding: 0;\n        `}\n    }\n  }\n\n  ${p => layout(p.theme, p.scrollbarWidth)}\n`;\n\nconst TitleWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(0.5)};\n  align-items: center;\n  padding: ${space(0.75)} 0;\n`;\n\nconst Title = styled('h3')`\n  margin-bottom: 0;\n  padding: 0 !important;\n  height: 14px;\n`;\n\n// XXX(ts): Emotion11 has some trouble with List's defaultProps\nconst StyledList = styled(List as any)<React.ComponentProps<typeof List>>`\n  height: auto !important;\n  max-height: ${p => p.height}px;\n  overflow-y: auto !important;\n  outline: none;\n`;\n\nconst StyledSearchBarAction = styled(SearchBarAction)`\n  z-index: 1;\n  margin-bottom: ${space(1)};\n`;\n\nconst ToggleButton = styled(Button)`\n  font-weight: 700;\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.textColor};\n  }\n`;\n","import {Component} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport forOwn from 'lodash/forOwn';\nimport isNil from 'lodash/isNil';\nimport isObject from 'lodash/isObject';\n\nimport {Hovercard} from 'sentry/components/hovercard';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pill from 'sentry/components/pill';\nimport Pills from 'sentry/components/pills';\nimport {IconInfo, IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {StackTraceMechanism} from 'sentry/types/stacktrace';\nimport {isUrl} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  data: StackTraceMechanism;\n};\n\nclass Mechanism extends Component<Props> {\n  render() {\n    const mechanism = this.props.data;\n    const {type, description, help_link, handled, meta = {}, data = {}} = mechanism;\n    const {errno, signal, mach_exception} = meta;\n\n    const linkElement = help_link && isUrl(help_link) && (\n      <StyledExternalLink href={help_link}>\n        <IconOpen size=\"xs\" />\n      </StyledExternalLink>\n    );\n\n    const descriptionElement = description && (\n      <Hovercard\n        header={\n          <span>\n            <Details>{t('Details')}</Details> {linkElement}\n          </span>\n        }\n        body={description}\n      >\n        <StyledIconInfo size=\"14px\" />\n      </Hovercard>\n    );\n\n    const pills = [\n      <Pill key=\"mechanism\" name=\"mechanism\" value={type || 'unknown'}>\n        {descriptionElement || linkElement}\n      </Pill>,\n    ];\n\n    if (!isNil(handled)) {\n      pills.push(<Pill key=\"handled\" name=\"handled\" value={handled} />);\n    }\n\n    if (errno) {\n      const value = errno.name || errno.number;\n      pills.push(<Pill key=\"errno\" name=\"errno\" value={value} />);\n    }\n\n    if (mach_exception) {\n      const value = mach_exception.name || mach_exception.exception;\n      pills.push(<Pill key=\"mach\" name=\"mach exception\" value={value} />);\n    }\n\n    if (signal) {\n      const code = signal.code_name || `${t('code')} ${signal.code}`;\n      const name = signal.name || signal.number;\n      const value = isNil(signal.code) ? name : `${name} (${code})`;\n      pills.push(<Pill key=\"signal\" name=\"signal\" value={value} />);\n    }\n\n    forOwn(data, (value, key) => {\n      if (!isObject(value)) {\n        pills.push(<Pill key={`data:${key}`} name={key} value={value} />);\n      }\n    });\n\n    return (\n      <Wrapper>\n        <StyledPills>{pills}</StyledPills>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Mechanism;\n\nconst Wrapper = styled('div')`\n  margin: ${space(2)} 0;\n`;\n\nconst iconStyle = (p: {theme: Theme}) => css`\n  transition: 0.1s linear color;\n  color: ${p.theme.gray300};\n  :hover {\n    color: ${p.theme.gray500};\n  }\n`;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  display: inline-flex !important;\n  ${iconStyle};\n`;\n\nconst Details = styled('span')`\n  margin-right: ${space(1)};\n`;\n\nconst StyledPills = styled(Pills)`\n  span:nth-of-type(2) {\n    display: inline;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst StyledIconInfo = styled(IconInfo)`\n  display: flex;\n  ${iconStyle};\n`;\n","import {useContext} from 'react';\n\nimport {Panel} from 'sentry/components/panels';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {ExceptionValue, Group, PlatformType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_VIEW} from 'sentry/types/stacktrace';\nimport {defined} from 'sentry/utils';\nimport {isNativePlatform} from 'sentry/utils/platform';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport StackTraceContent from '../stackTrace/content';\nimport StacktraceContentV2 from '../stackTrace/contentV2';\nimport StacktraceContentV3 from '../stackTrace/contentV3';\n\ntype Props = {\n  chainedException: boolean;\n  data: ExceptionValue['stacktrace'];\n  event: Event;\n  hasHierarchicalGrouping: boolean;\n  platform: PlatformType;\n  stacktrace: ExceptionValue['stacktrace'];\n  expandFirstFrame?: boolean;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  newestFirst?: boolean;\n  stackView?: STACK_VIEW;\n};\n\nfunction StackTrace({\n  stackView,\n  stacktrace,\n  chainedException,\n  platform,\n  newestFirst,\n  groupingCurrentLevel,\n  hasHierarchicalGrouping,\n  data,\n  expandFirstFrame,\n  event,\n}: Props) {\n  // Organization context may be unavailable for the shared event view, so we\n  // avoid using the `useOrganization` hook here and directly useContext\n  // instead.\n  const organization = useContext(OrganizationContext);\n\n  if (!defined(stacktrace)) {\n    return null;\n  }\n\n  if (\n    stackView === STACK_VIEW.APP &&\n    (stacktrace.frames ?? []).filter(frame => frame.inApp).length === 0 &&\n    !chainedException\n  ) {\n    return (\n      <Panel dashedBorder>\n        <EmptyMessage\n          icon={<IconWarning size=\"xl\" />}\n          title={\n            hasHierarchicalGrouping\n              ? t('No relevant stack trace has been found!')\n              : t('No app only stack trace has been found!')\n          }\n        />\n      </Panel>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const includeSystemFrames =\n    stackView === STACK_VIEW.FULL ||\n    (chainedException && data.frames?.every(frame => !frame.inApp));\n\n  /**\n   * Armin, Markus:\n   * If all frames are in app, then no frame is in app.\n   * This normally does not matter for the UI but when chained exceptions\n   * are used this causes weird behavior where one exception appears to not have a stack trace.\n   *\n   * It is easier to fix the UI logic to show a non-empty stack trace for chained exceptions\n   */\n\n  if (\n    !!organization?.features?.includes('native-stack-trace-v2') &&\n    isNativePlatform(platform)\n  ) {\n    return (\n      <StacktraceContentV3\n        data={data}\n        expandFirstFrame={expandFirstFrame}\n        includeSystemFrames={includeSystemFrames}\n        groupingCurrentLevel={groupingCurrentLevel}\n        platform={platform}\n        newestFirst={newestFirst}\n        event={event}\n      />\n    );\n  }\n\n  if (hasHierarchicalGrouping) {\n    return (\n      <StacktraceContentV2\n        data={data}\n        expandFirstFrame={expandFirstFrame}\n        includeSystemFrames={includeSystemFrames}\n        groupingCurrentLevel={groupingCurrentLevel}\n        platform={platform}\n        newestFirst={newestFirst}\n        event={event}\n      />\n    );\n  }\n\n  return (\n    <StackTraceContent\n      data={data}\n      expandFirstFrame={expandFirstFrame}\n      includeSystemFrames={includeSystemFrames}\n      platform={platform}\n      newestFirst={newestFirst}\n      event={event}\n    />\n  );\n}\n\nexport default StackTrace;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\n\ntype Props = {\n  type: string;\n  exceptionModule?: string | null;\n};\n\nconst ExceptionTitle = ({type, exceptionModule}: Props) => {\n  if (defined(exceptionModule)) {\n    return (\n      <Tooltip title={tct('from [exceptionModule]', {exceptionModule})}>\n        <Title>{type}</Title>\n      </Tooltip>\n    );\n  }\n\n  return <Title>{type}</Title>;\n};\n\nexport default ExceptionTitle;\n\nconst Title = styled('h5')`\n  margin-bottom: ${space(0.5)};\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n`;\n","import styled from '@emotion/styled';\n\nimport Annotated from 'sentry/components/events/meta/annotated';\nimport space from 'sentry/styles/space';\nimport {ExceptionType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE} from 'sentry/types/stacktrace';\n\nimport Mechanism from './mechanism';\nimport StackTrace from './stackTrace';\nimport ExceptionTitle from './title';\n\ntype StackTraceProps = React.ComponentProps<typeof StackTrace>;\n\ntype Props = {\n  event: Event;\n  platform: StackTraceProps['platform'];\n  type: STACK_TYPE;\n  newestFirst?: boolean;\n  stackView?: StackTraceProps['stackView'];\n} & Pick<ExceptionType, 'values'> &\n  Pick<\n    React.ComponentProps<typeof StackTrace>,\n    'groupingCurrentLevel' | 'hasHierarchicalGrouping'\n  >;\n\nfunction Content({\n  newestFirst,\n  event,\n  stackView,\n  groupingCurrentLevel,\n  hasHierarchicalGrouping,\n  platform,\n  values,\n  type,\n}: Props) {\n  if (!values) {\n    return null;\n  }\n\n  const children = values.map((exc, excIdx) => (\n    <div key={excIdx} className=\"exception\">\n      <ExceptionTitle type={exc.type} exceptionModule={exc?.module} />\n      <Annotated object={exc} objectKey=\"value\" required>\n        {value => <StyledPre className=\"exc-message\">{value}</StyledPre>}\n      </Annotated>\n      {exc.mechanism && <Mechanism data={exc.mechanism} />}\n      <StackTrace\n        data={\n          type === STACK_TYPE.ORIGINAL\n            ? exc.stacktrace\n            : exc.rawStacktrace || exc.stacktrace\n        }\n        stackView={stackView}\n        stacktrace={exc.stacktrace}\n        expandFirstFrame={excIdx === values.length - 1}\n        platform={platform}\n        newestFirst={newestFirst}\n        event={event}\n        chainedException={values.length > 1}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n        groupingCurrentLevel={groupingCurrentLevel}\n      />\n    </div>\n  ));\n\n  if (newestFirst) {\n    children.reverse();\n  }\n\n  return <div>{children}</div>;\n}\n\nexport default Content;\n\nconst StyledPre = styled('pre')`\n  margin-bottom: ${space(1)};\n  margin-top: 0;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport {ExceptionType, Organization, PlatformType, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport rawStacktraceContent from '../stackTrace/rawContent';\n\ntype Props = {\n  api: Client;\n  eventId: Event['id'];\n  platform: PlatformType;\n  projectId: Project['id'];\n  type: 'original' | 'minified';\n  // XXX: Organization is NOT available for Shared Issues!\n  organization?: Organization;\n} & Pick<ExceptionType, 'values'>;\n\ntype State = {\n  crashReport: string;\n  error: boolean;\n  loading: boolean;\n};\n\nclass RawContent extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n    crashReport: '',\n  };\n\n  componentDidMount() {\n    if (this.isNative()) {\n      this.fetchAppleCrashReport();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.isNative() && this.props.type !== prevProps.type) {\n      this.fetchAppleCrashReport();\n    }\n  }\n\n  isNative() {\n    const {platform} = this.props;\n    return platform === 'cocoa' || platform === 'native';\n  }\n\n  getAppleCrashReportEndpoint(organization: Organization) {\n    const {type, projectId, eventId} = this.props;\n\n    const minified = type === 'minified';\n    return `/projects/${organization.slug}/${projectId}/events/${eventId}/apple-crash-report?minified=${minified}`;\n  }\n\n  getContent(isNative: boolean, exc: any) {\n    const {type} = this.props;\n\n    const output = {\n      downloadButton: null,\n      content: exc.stacktrace\n        ? rawStacktraceContent(\n            type === 'original' ? exc.stacktrace : exc.rawStacktrace,\n            this.props.platform,\n            exc\n          )\n        : null,\n    };\n\n    if (!isNative) {\n      return output;\n    }\n\n    const {loading, error, crashReport} = this.state;\n\n    if (loading) {\n      return {\n        ...output,\n        content: <LoadingIndicator />,\n      };\n    }\n\n    if (error) {\n      return {\n        ...output,\n        content: <LoadingError />,\n      };\n    }\n\n    if (!loading && !!crashReport) {\n      const {api, organization} = this.props;\n      let downloadButton: React.ReactElement | null = null;\n\n      if (organization) {\n        const appleCrashReportEndpoint = this.getAppleCrashReportEndpoint(organization);\n\n        downloadButton = (\n          <DownloadBtnWrapper>\n            <Button\n              size=\"xsmall\"\n              href={`${api.baseUrl}${appleCrashReportEndpoint}&download=1`}\n            >\n              {t('Download')}\n            </Button>\n          </DownloadBtnWrapper>\n        );\n      }\n\n      return {\n        downloadButton,\n        content: <ClippedBox clipHeight={250}>{crashReport}</ClippedBox>,\n      };\n    }\n\n    return output;\n  }\n\n  async fetchAppleCrashReport() {\n    const {api, organization} = this.props;\n\n    // Shared issues do not have access to organization\n    if (!organization) {\n      return;\n    }\n\n    this.setState({\n      loading: true,\n      error: false,\n      crashReport: '',\n    });\n\n    try {\n      const data = await api.requestPromise(\n        this.getAppleCrashReportEndpoint(organization)\n      );\n      this.setState({\n        error: false,\n        loading: false,\n        crashReport: data,\n      });\n    } catch {\n      this.setState({error: true, loading: false});\n    }\n  }\n\n  render() {\n    const {values, organization} = this.props;\n    const isNative = this.isNative();\n\n    if (!values) {\n      return null;\n    }\n\n    const hasNativeStackTraceV2 = !!organization?.features?.includes(\n      'native-stack-trace-v2'\n    );\n\n    return (\n      <Fragment>\n        {values.map((exc, excIdx) => {\n          const {downloadButton, content} = this.getContent(isNative, exc);\n          if (!downloadButton && !content) {\n            return null;\n          }\n          return (\n            <div key={excIdx} data-test-id=\"raw-stack-trace\">\n              {!hasNativeStackTraceV2 ? downloadButton : null}\n              <pre className=\"traceback plain\">{content}</pre>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(withOrganization(RawContent));\n\nconst DownloadBtnWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n","import ErrorBoundary from 'sentry/components/errorBoundary';\nimport {ExceptionType, Group, PlatformType, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE, STACK_VIEW} from 'sentry/types/stacktrace';\n\nimport Content from './content';\nimport RawContent from './rawContent';\n\ntype Props = {\n  event: Event;\n  hasHierarchicalGrouping: boolean;\n  newestFirst: boolean;\n  platform: PlatformType;\n  projectId: Project['id'];\n  stackType: STACK_TYPE;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  stackView?: STACK_VIEW;\n} & Pick<ExceptionType, 'values'>;\n\nfunction Exception({\n  stackView,\n  stackType,\n  projectId,\n  values,\n  event,\n  newestFirst,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n  platform = 'other',\n}: Props) {\n  return (\n    <ErrorBoundary mini>\n      {stackView === STACK_VIEW.RAW ? (\n        <RawContent\n          eventId={event.id}\n          projectId={projectId}\n          type={stackType}\n          values={values}\n          platform={platform}\n        />\n      ) : (\n        <Content\n          type={stackType}\n          stackView={stackView}\n          values={values}\n          platform={platform}\n          newestFirst={newestFirst}\n          event={event}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n          groupingCurrentLevel={groupingCurrentLevel}\n        />\n      )}\n    </ErrorBoundary>\n  );\n}\n\nexport default Exception;\n","import ErrorBoundary from 'sentry/components/errorBoundary';\nimport {PlatformType} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_VIEW, StacktraceType} from 'sentry/types/stacktrace';\nimport {isNativePlatform} from 'sentry/utils/platform';\n\nimport Content from './content';\nimport ContentV2 from './contentV2';\nimport ContentV3 from './contentV3';\nimport rawStacktraceContent from './rawContent';\n\ntype Props = Pick<React.ComponentProps<typeof ContentV2>, 'groupingCurrentLevel'> & {\n  event: Event;\n  hasHierarchicalGrouping: boolean;\n  newestFirst: boolean;\n  platform: PlatformType;\n  stacktrace: StacktraceType;\n  nativeV2?: boolean;\n  stackView?: STACK_VIEW;\n};\n\nfunction StackTrace({\n  stackView,\n  stacktrace,\n  event,\n  newestFirst,\n  platform,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n  nativeV2,\n}: Props) {\n  if (stackView === STACK_VIEW.RAW) {\n    return (\n      <ErrorBoundary mini>\n        <pre className=\"traceback plain\">\n          {rawStacktraceContent(stacktrace, event.platform)}\n        </pre>\n      </ErrorBoundary>\n    );\n  }\n\n  if (nativeV2 && isNativePlatform(platform)) {\n    return (\n      <ErrorBoundary mini>\n        <ContentV3\n          data={stacktrace}\n          includeSystemFrames={stackView === STACK_VIEW.FULL}\n          platform={platform}\n          event={event}\n          newestFirst={newestFirst}\n          groupingCurrentLevel={groupingCurrentLevel}\n        />\n      </ErrorBoundary>\n    );\n  }\n\n  if (hasHierarchicalGrouping) {\n    return (\n      <ErrorBoundary mini>\n        <ContentV2\n          data={stacktrace}\n          className=\"no-exception\"\n          includeSystemFrames={stackView === STACK_VIEW.FULL}\n          platform={platform}\n          event={event}\n          newestFirst={newestFirst}\n          groupingCurrentLevel={groupingCurrentLevel}\n        />\n      </ErrorBoundary>\n    );\n  }\n\n  return (\n    <ErrorBoundary mini>\n      <Content\n        data={stacktrace}\n        className=\"no-exception\"\n        includeSystemFrames={stackView === STACK_VIEW.FULL}\n        platform={platform}\n        event={event}\n        newestFirst={newestFirst}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default StackTrace;\n","import {ExceptionType, ExceptionValue, PlatformType} from 'sentry/types';\n\nimport Exception from './exception';\nimport Stacktrace from './stackTrace';\n\ntype ExceptionProps = React.ComponentProps<typeof Exception>;\ntype Props = Pick<\n  ExceptionProps,\n  | 'stackType'\n  | 'stackView'\n  | 'projectId'\n  | 'event'\n  | 'newestFirst'\n  | 'groupingCurrentLevel'\n  | 'hasHierarchicalGrouping'\n> & {\n  exception?: ExceptionType;\n  stacktrace?: ExceptionValue['stacktrace'];\n};\n\nfunction CrashContent({\n  event,\n  stackView,\n  stackType,\n  newestFirst,\n  projectId,\n  groupingCurrentLevel,\n  hasHierarchicalGrouping,\n  exception,\n  stacktrace,\n}: Props) {\n  const platform = (event.platform ?? 'other') as PlatformType;\n\n  if (exception) {\n    return (\n      <Exception\n        stackType={stackType}\n        stackView={stackView}\n        projectId={projectId}\n        newestFirst={newestFirst}\n        event={event}\n        platform={platform}\n        values={exception.values}\n        groupingCurrentLevel={groupingCurrentLevel}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n      />\n    );\n  }\n\n  if (stacktrace) {\n    return (\n      <Stacktrace\n        stacktrace={stacktrace}\n        stackView={stackView}\n        newestFirst={newestFirst}\n        event={event}\n        platform={platform}\n        groupingCurrentLevel={groupingCurrentLevel}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n      />\n    );\n  }\n\n  return null;\n}\n\nexport default CrashContent;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  ExceptionType,\n  ExceptionValue,\n  STACK_TYPE,\n  STACK_VIEW,\n  Thread,\n} from 'sentry/types';\n\ntype NotifyOptions = {\n  stackType?: STACK_TYPE;\n  stackView?: STACK_VIEW;\n};\n\ntype Props = {\n  hasHierarchicalGrouping: boolean;\n  exception?: ExceptionType;\n  onChange?: (notifyOptions: NotifyOptions) => void;\n  platform?: string;\n  stackType?: STACK_TYPE;\n  stackView?: STACK_VIEW;\n  stacktrace?: ExceptionValue['stacktrace'];\n  thread?: Thread;\n};\n\nconst CrashActions = ({\n  hasHierarchicalGrouping,\n  stackView,\n  stackType,\n  stacktrace,\n  thread,\n  exception,\n  platform,\n  onChange,\n}: Props) => {\n  const hasSystemFrames: boolean =\n    stacktrace?.hasSystemFrames ||\n    !!exception?.values?.find(value => !!value.stacktrace?.hasSystemFrames);\n\n  const hasMinified = !stackType\n    ? false\n    : !!exception?.values?.find(value => value.rawStacktrace) || !!thread?.rawStacktrace;\n\n  const notify = (options: NotifyOptions) => {\n    if (onChange) {\n      onChange(options);\n    }\n  };\n\n  const setStackType = (type: STACK_TYPE) => () => {\n    notify({stackType: type});\n  };\n\n  const setStackView = (view: STACK_VIEW) => () => {\n    notify({stackView: view});\n  };\n\n  const getOriginalButtonLabel = () => {\n    if (platform === 'javascript' || platform === 'node') {\n      return t('Original');\n    }\n\n    return t('Symbolicated');\n  };\n\n  const getMinifiedButtonLabel = () => {\n    if (platform === 'javascript' || platform === 'node') {\n      return t('Minified');\n    }\n    return t('Unsymbolicated');\n  };\n\n  return (\n    <ButtonGroupWrapper>\n      <ButtonBar active={stackView} merged>\n        {hasSystemFrames && (\n          <Button\n            barId={STACK_VIEW.APP}\n            size=\"xsmall\"\n            onClick={setStackView(STACK_VIEW.APP)}\n            title={\n              hasHierarchicalGrouping\n                ? t(\n                    'The stack trace only shows application frames and frames responsible for grouping this issue'\n                  )\n                : undefined\n            }\n          >\n            {hasHierarchicalGrouping ? t('Most Relevant') : t('App Only')}\n          </Button>\n        )}\n        <Button\n          barId={STACK_VIEW.FULL}\n          size=\"xsmall\"\n          onClick={setStackView(STACK_VIEW.FULL)}\n        >\n          {t('Full')}\n        </Button>\n        <Button\n          barId={STACK_VIEW.RAW}\n          onClick={setStackView(STACK_VIEW.RAW)}\n          size=\"xsmall\"\n        >\n          {t('Raw')}\n        </Button>\n      </ButtonBar>\n      {hasMinified && (\n        <ButtonBar active={stackType} merged>\n          <Button\n            barId={STACK_TYPE.ORIGINAL}\n            size=\"xsmall\"\n            onClick={setStackType(STACK_TYPE.ORIGINAL)}\n          >\n            {getOriginalButtonLabel()}\n          </Button>\n          <Button\n            barId={STACK_TYPE.MINIFIED}\n            size=\"xsmall\"\n            onClick={setStackType(STACK_TYPE.MINIFIED)}\n          >\n            {getMinifiedButtonLabel()}\n          </Button>\n        </ButtonBar>\n      )}\n    </ButtonGroupWrapper>\n  );\n};\n\nexport default CrashActions;\n\nconst ButtonGroupWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  > * {\n    padding: ${space(0.5)} 0;\n  }\n  > *:not(:last-child) {\n    margin-right: ${space(1)};\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  newestFirst: boolean;\n  title: string;\n  beforeTitle?: React.ReactNode;\n  hideGuide?: boolean;\n  onChange?: ({newestFirst}: {newestFirst: boolean}) => void;\n};\n\nconst CrashTitle = ({\n  title,\n  newestFirst,\n  beforeTitle,\n  hideGuide = false,\n  onChange,\n}: Props) => {\n  const handleToggleOrder = () => {\n    if (onChange) {\n      onChange({newestFirst: !newestFirst});\n    }\n  };\n\n  return (\n    <Wrapper>\n      {beforeTitle}\n      <StyledH3>\n        <GuideAnchor target=\"exception\" disabled={hideGuide} position=\"bottom\">\n          {title}\n        </GuideAnchor>\n        {onChange && (\n          <Tooltip showUnderline title={t('Toggle stack trace order')}>\n            <small>\n              (\n              <span onClick={handleToggleOrder}>\n                {newestFirst ? t('most recent call first') : t('most recent call last')}\n              </span>\n              )\n            </small>\n          </Tooltip>\n        )}\n      </StyledH3>\n    </Wrapper>\n  );\n};\n\nexport default CrashTitle;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  justify-content: flex-start;\n`;\n\nconst StyledH3 = styled('h3')`\n  margin-bottom: 0;\n  max-width: 100%;\n  white-space: nowrap;\n`;\n","import {useState} from 'react';\n\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport CrashContent from 'sentry/components/events/interfaces/crashContent';\nimport CrashActions from 'sentry/components/events/interfaces/crashHeader/crashActions';\nimport CrashTitle from 'sentry/components/events/interfaces/crashHeader/crashTitle';\nimport {t} from 'sentry/locale';\nimport {ExceptionType, Group} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE, STACK_VIEW} from 'sentry/types/stacktrace';\nimport {defined} from 'sentry/utils';\n\nimport {isStacktraceNewestFirst} from './utils';\n\ntype Props = {\n  data: ExceptionType;\n  event: Event;\n  hasHierarchicalGrouping: boolean;\n  projectId: string;\n  type: string;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  hideGuide?: boolean;\n};\n\nfunction Exception({\n  event,\n  type,\n  data,\n  projectId,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n  hideGuide = false,\n}: Props) {\n  const [stackView, setStackView] = useState<STACK_VIEW>(\n    data.hasSystemFrames ? STACK_VIEW.APP : STACK_VIEW.FULL\n  );\n  const [stackType, setStackType] = useState<STACK_TYPE>(STACK_TYPE.ORIGINAL);\n  const [newestFirst, setNewestFirst] = useState(isStacktraceNewestFirst());\n\n  const eventHasThreads = !!event.entries.find(entry => entry.type === 'threads');\n\n  /* in case there are threads in the event data, we don't render the\n   exception block.  Instead the exception is contained within the\n   thread interface. */\n  if (eventHasThreads) {\n    return null;\n  }\n\n  function handleChange({\n    stackView: newStackView,\n    stackType: newStackType,\n    newestFirst: newNewestFirst,\n  }: {\n    newestFirst?: boolean;\n    stackType?: STACK_TYPE;\n    stackView?: STACK_VIEW;\n  }) {\n    if (newStackView) {\n      setStackView(newStackView);\n    }\n\n    if (defined(newNewestFirst)) {\n      setNewestFirst(newNewestFirst);\n    }\n\n    if (newStackType) {\n      setStackType(newStackType);\n    }\n  }\n\n  const commonCrashHeaderProps = {\n    newestFirst,\n    hideGuide,\n    onChange: handleChange,\n  };\n\n  return (\n    <EventDataSection\n      type={type}\n      title={<CrashTitle title={t('Exception')} {...commonCrashHeaderProps} />}\n      actions={\n        <CrashActions\n          stackType={stackType}\n          stackView={stackView}\n          platform={event.platform}\n          exception={data}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n          {...commonCrashHeaderProps}\n        />\n      }\n      wrapTitle={false}\n    >\n      <CrashContent\n        projectId={projectId}\n        event={event}\n        stackType={stackType}\n        stackView={stackView}\n        newestFirst={newestFirst}\n        exception={data}\n        groupingCurrentLevel={groupingCurrentLevel}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n      />\n    </EventDataSection>\n  );\n}\n\nexport default Exception;\n","import Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  message?: React.ReactNode;\n};\n\nfunction NoStackTraceMessage({message}: Props) {\n  return <Alert type=\"error\">{message ?? t('No or unknown stacktrace')}</Alert>;\n}\n\nexport default NoStackTraceMessage;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport {ExceptionType, Group, PlatformType, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE, STACK_VIEW} from 'sentry/types/stacktrace';\n\nimport {TraceEventDataSection} from '../traceEventDataSection';\n\nimport CrashContentException from './crashContent/exception';\nimport NoStackTraceMessage from './noStackTraceMessage';\nimport {isStacktraceNewestFirst} from './utils';\n\ntype Props = {\n  data: ExceptionType;\n  event: Event;\n  hasHierarchicalGrouping: boolean;\n  projectId: Project['id'];\n  type: string;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  hideGuide?: boolean;\n};\n\nfunction Exception({\n  event,\n  type,\n  data,\n  projectId,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n}: Props) {\n  const eventHasThreads = !!event.entries.some(entry => entry.type === 'threads');\n\n  /* in case there are threads in the event data, we don't render the\n   exception block.  Instead the exception is contained within the\n   thread interface. */\n  if (eventHasThreads) {\n    return null;\n  }\n\n  function getPlatform(): PlatformType {\n    const dataValue = data.values?.find(\n      value => !!value.stacktrace?.frames?.some(frame => !!frame.platform)\n    );\n\n    if (dataValue) {\n      const framePlatform = dataValue.stacktrace?.frames?.find(frame => !!frame.platform);\n\n      if (framePlatform?.platform) {\n        return framePlatform.platform;\n      }\n    }\n\n    return event.platform ?? 'other';\n  }\n\n  const stackTraceNotFound = !(data.values ?? []).length;\n  const platform = getPlatform();\n\n  return (\n    <TraceEventDataSection\n      title={<Title>{t('Exception')}</Title>}\n      type={type}\n      stackType={STACK_TYPE.ORIGINAL}\n      projectId={projectId}\n      eventId={event.id}\n      recentFirst={isStacktraceNewestFirst()}\n      fullStackTrace={!data.hasSystemFrames}\n      platform={platform}\n      hasMinified={!!data.values?.some(value => value.rawStacktrace)}\n      hasVerboseFunctionNames={\n        !!data.values?.some(\n          value =>\n            !!value.stacktrace?.frames?.some(\n              frame =>\n                !!frame.rawFunction &&\n                !!frame.function &&\n                frame.rawFunction !== frame.function\n            )\n        )\n      }\n      hasAbsoluteFilePaths={\n        !!data.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => !!frame.filename)\n        )\n      }\n      hasAbsoluteAddresses={\n        !!data.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => !!frame.instructionAddr)\n        )\n      }\n      hasAppOnlyFrames={\n        !!data.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => frame.inApp !== true)\n        )\n      }\n      hasNewestFirst={\n        !!data.values?.some(value => (value.stacktrace?.frames ?? []).length > 1)\n      }\n      stackTraceNotFound={stackTraceNotFound}\n      showPermalink\n      wrapTitle={false}\n    >\n      {({recentFirst, display, fullStackTrace}) =>\n        stackTraceNotFound ? (\n          <NoStackTraceMessage />\n        ) : (\n          <CrashContentException\n            stackType={\n              display.includes('minified') ? STACK_TYPE.MINIFIED : STACK_TYPE.ORIGINAL\n            }\n            stackView={\n              display.includes('raw-stack-trace')\n                ? STACK_VIEW.RAW\n                : fullStackTrace\n                ? STACK_VIEW.FULL\n                : STACK_VIEW.APP\n            }\n            projectId={projectId}\n            newestFirst={recentFirst}\n            event={event}\n            platform={platform}\n            values={data.values}\n            groupingCurrentLevel={groupingCurrentLevel}\n            hasHierarchicalGrouping={hasHierarchicalGrouping}\n          />\n        )\n      }\n    </TraceEventDataSection>\n  );\n}\n\nexport default Exception;\n\nconst Title = styled('h3')`\n  margin-bottom: 0;\n`;\n","import {Component} from 'react';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\n\nfunction getView(view: View, data: State['data']) {\n  switch (view) {\n    case 'report':\n      return (\n        <KeyValueList\n          data={Object.entries(data).map(([key, value]) => ({\n            key,\n            value,\n            subject: key,\n            meta: getMeta(data, key),\n          }))}\n          isContextData\n        />\n      );\n    case 'raw':\n      return <pre>{JSON.stringify({'csp-report': data}, null, 2)}</pre>;\n    default:\n      throw new TypeError(`Invalid view: ${view}`);\n  }\n}\n\ntype Props = {\n  data: Record<string, any>;\n  type: string;\n};\n\ntype View = 'report' | 'raw';\n\ntype State = {\n  view: View;\n} & Pick<Props, 'data'>;\n\nexport default class GenericInterface extends Component<Props, State> {\n  state: State = {\n    view: 'report',\n    data: this.props.data,\n  };\n\n  toggleView = (value: View) => {\n    this.setState({\n      view: value,\n    });\n  };\n\n  render() {\n    const {view, data} = this.state;\n    const {type} = this.props;\n\n    const title = (\n      <div>\n        <ButtonBar merged active={view}>\n          <Button\n            barId=\"report\"\n            size=\"xsmall\"\n            onClick={this.toggleView.bind(this, 'report')}\n          >\n            {t('Report')}\n          </Button>\n          <Button barId=\"raw\" size=\"xsmall\" onClick={this.toggleView.bind(this, 'raw')}>\n            {t('Raw')}\n          </Button>\n        </ButtonBar>\n        <h3>{t('Report')}</h3>\n      </div>\n    );\n\n    const children = getView(view, data);\n\n    return (\n      <EventDataSection type={type} title={title} wrapTitle={false}>\n        {children}\n      </EventDataSection>\n    );\n  }\n}\n","import EventDataSection from 'sentry/components/events/eventDataSection';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport Annotated from 'sentry/components/events/meta/annotated';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\nimport {objectIsEmpty} from 'sentry/utils';\n\ntype Props = {\n  data: {\n    formatted: string;\n    params?: Record<string, any> | any[];\n  };\n};\n\nconst Message = ({data}: Props) => {\n  const renderParams = () => {\n    const params = data?.params;\n\n    if (!params || objectIsEmpty(params)) {\n      return null;\n    }\n\n    // NB: Always render params, regardless of whether they appear in the\n    // formatted string due to structured logging frameworks, like Serilog. They\n    // only format some parameters into the formatted string, but we want to\n    // display all of them.\n\n    if (Array.isArray(params)) {\n      const arrayData = params.map((value, i) => {\n        const key = `#${i}`;\n        return {\n          key,\n          value,\n          subject: key,\n        };\n      });\n\n      return <KeyValueList data={arrayData} isSorted={false} isContextData />;\n    }\n\n    const objectData = Object.entries(params).map(([key, value]) => ({\n      key,\n      value,\n      subject: key,\n      meta: getMeta(params, key),\n    }));\n\n    return <KeyValueList data={objectData} isSorted={false} isContextData />;\n  };\n\n  return (\n    <EventDataSection type=\"message\" title={t('Message')}>\n      <Annotated object={data} objectKey=\"formatted\">\n        {value => <pre className=\"plain\">{value}</pre>}\n      </Annotated>\n      {renderParams()}\n    </EventDataSection>\n  );\n};\n\nexport default Message;\n","import {defined} from 'sentry/utils';\n\nfunction getTransformedData(data: any): [string, string][] {\n  if (Array.isArray(data)) {\n    return data\n      .filter(dataValue => {\n        if (typeof dataValue === 'string') {\n          return !!dataValue;\n        }\n        return defined(dataValue);\n      })\n      .map(dataValue => {\n        if (Array.isArray(dataValue)) {\n          return dataValue;\n        }\n        if (typeof data === 'object') {\n          return Object.keys(dataValue).flatMap(key => [key, dataValue[key]]);\n        }\n        return dataValue;\n      });\n  }\n\n  if (typeof data === 'object') {\n    return Object.keys(data).map(key => [key, data[key]]);\n  }\n\n  return [];\n}\n\nexport default getTransformedData;\n","import ClippedBox from 'sentry/components/clippedBox';\nimport ContextData from 'sentry/components/contextData';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {t} from 'sentry/locale';\nimport {Meta} from 'sentry/types';\nimport {EntryRequest} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport getTransformedData from './getTransformedData';\n\ntype Props = {\n  data: EntryRequest['data']['data'];\n  inferredContentType: EntryRequest['data']['inferredContentType'];\n  meta?: Meta;\n};\n\nfunction RichHttpContentClippedBoxBodySection({data, meta, inferredContentType}: Props) {\n  if (!defined(data)) {\n    return null;\n  }\n\n  function getContent() {\n    switch (inferredContentType) {\n      case 'application/json':\n        return (\n          <ContextData\n            data-test-id=\"rich-http-content-body-context-data\"\n            data={data}\n            preserveQuotes\n          />\n        );\n      case 'application/x-www-form-urlencoded':\n      case 'multipart/form-data': {\n        const transformedData = getTransformedData(data).map(([key, v]) => ({\n          key,\n          subject: key,\n          value: v,\n          meta,\n        }));\n\n        if (!transformedData.length) {\n          return null;\n        }\n\n        return (\n          <KeyValueList\n            data-test-id=\"rich-http-content-body-key-value-list\"\n            data={transformedData}\n            isContextData\n          />\n        );\n      }\n\n      default:\n        return (\n          <pre data-test-id=\"rich-http-content-body-section-pre\">\n            <AnnotatedText\n              value={data && JSON.stringify(data, null, 2)}\n              meta={meta}\n              data-test-id=\"rich-http-content-body-context-data\"\n            />\n          </pre>\n        );\n    }\n  }\n\n  const content = getContent();\n\n  if (!content) {\n    return null;\n  }\n\n  return (\n    <ClippedBox title={t('Body')} defaultClipped>\n      <ErrorBoundary mini>{content}</ErrorBoundary>\n    </ClippedBox>\n  );\n}\n\nexport default RichHttpContentClippedBoxBodySection;\n","import ClippedBox from 'sentry/components/clippedBox';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport KeyValueList from 'sentry/components/events/interfaces/keyValueList';\nimport {Meta} from 'sentry/types';\nimport {EntryRequest} from 'sentry/types/event';\n\nimport getTransformedData from './getTransformedData';\n\ntype Data = EntryRequest['data']['data'];\n\ntype Props = {\n  data: Data;\n  title: string;\n  defaultCollapsed?: boolean;\n  isContextData?: boolean;\n  meta?: Meta;\n};\n\nconst RichHttpContentClippedBoxKeyValueList = ({\n  data,\n  title,\n  defaultCollapsed = false,\n  isContextData = false,\n  meta,\n}: Props) => {\n  const getContent = (transformedData: Array<[string, string]>) => {\n    // Sentry API abbreviates long query string values, sometimes resulting in\n    // an un-parsable querystring ... stay safe kids\n    try {\n      return (\n        <KeyValueList\n          data={transformedData.map(([key, value]) => ({\n            key,\n            subject: key,\n            value,\n            meta,\n          }))}\n          isContextData={isContextData}\n        />\n      );\n    } catch {\n      return <pre>{data}</pre>;\n    }\n  };\n\n  const transformedData = getTransformedData(data);\n\n  if (!transformedData.length) {\n    return null;\n  }\n\n  return (\n    <ClippedBox title={title} defaultClipped={defaultCollapsed}>\n      <ErrorBoundary mini>{getContent(transformedData)}</ErrorBoundary>\n    </ClippedBox>\n  );\n};\n\nexport default RichHttpContentClippedBoxKeyValueList;\n","import {Fragment} from 'react';\n\nimport ClippedBox from 'sentry/components/clippedBox';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {getMeta} from 'sentry/components/events/meta/metaProxy';\nimport {t} from 'sentry/locale';\nimport {EntryRequest} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\n\nimport RichHttpContentClippedBoxBodySection from './richHttpContentClippedBoxBodySection';\nimport RichHttpContentClippedBoxKeyValueList from './richHttpContentClippedBoxKeyValueList';\n\ntype Props = {\n  data: EntryRequest['data'];\n};\n\nconst RichHttpContent = ({data}: Props) => (\n  <Fragment>\n    {defined(data.query) && (\n      <RichHttpContentClippedBoxKeyValueList\n        title={t('Query String')}\n        data={data.query}\n        meta={getMeta(data, 'query')}\n        isContextData\n      />\n    )}\n    {defined(data.fragment) && (\n      <ClippedBox title={t('Fragment')}>\n        <ErrorBoundary mini>\n          <pre>{data.fragment}</pre>\n        </ErrorBoundary>\n      </ClippedBox>\n    )}\n    {defined(data.data) && (\n      <RichHttpContentClippedBoxBodySection\n        data={data.data}\n        meta={getMeta(data, 'data')}\n        inferredContentType={data.inferredContentType}\n      />\n    )}\n    {defined(data.cookies) && Object.keys(data.cookies).length > 0 && (\n      <RichHttpContentClippedBoxKeyValueList\n        defaultCollapsed\n        title={t('Cookies')}\n        data={data.cookies}\n        meta={getMeta(data, 'cookies')}\n      />\n    )}\n    {defined(data.headers) && (\n      <RichHttpContentClippedBoxKeyValueList\n        title={t('Headers')}\n        data={data.headers}\n        meta={getMeta(data, 'headers')}\n      />\n    )}\n    {defined(data.env) && (\n      <RichHttpContentClippedBoxKeyValueList\n        defaultCollapsed\n        title={t('Environment')}\n        data={data.env}\n        meta={getMeta(data, 'env')}\n      />\n    )}\n  </Fragment>\n);\nexport default RichHttpContent;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport RichHttpContent from 'sentry/components/events/interfaces/richHttpContent/richHttpContent';\nimport {getCurlCommand, getFullUrl} from 'sentry/components/events/interfaces/utils';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Truncate from 'sentry/components/truncate';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {EntryRequest, Event} from 'sentry/types/event';\nimport {isUrl} from 'sentry/utils';\n\ntype Props = {\n  data: EntryRequest['data'];\n  event: Event;\n  type: string;\n};\n\ntype State = {\n  view: string;\n};\n\nclass RequestInterface extends Component<Props, State> {\n  state: State = {\n    view: 'formatted',\n  };\n\n  isPartial = () =>\n    // We assume we only have a partial interface is we're missing\n    // an HTTP method. This means we don't have enough information\n    // to reliably construct a full HTTP request.\n    !this.props.data.method || !this.props.data.url;\n\n  toggleView = (value: string) => {\n    this.setState({\n      view: value,\n    });\n  };\n\n  render() {\n    const {data, type} = this.props;\n    const view = this.state.view;\n\n    let fullUrl = getFullUrl(data);\n    if (!isUrl(fullUrl)) {\n      // Check if the url passed in is a safe url to avoid XSS\n      fullUrl = undefined;\n    }\n\n    let parsedUrl: HTMLAnchorElement | null = null;\n    if (fullUrl) {\n      // use html tag to parse url, lol\n      parsedUrl = document.createElement('a');\n      parsedUrl.href = fullUrl;\n    }\n\n    let actions: React.ReactNode = null;\n    if (!this.isPartial() && fullUrl) {\n      actions = (\n        <ButtonBar merged active={view}>\n          <Button\n            barId=\"formatted\"\n            size=\"xsmall\"\n            onClick={this.toggleView.bind(this, 'formatted')}\n          >\n            {/* Translators: this means \"formatted\" rendering (fancy tables) */}\n            {t('Formatted')}\n          </Button>\n          <MonoButton\n            barId=\"curl\"\n            size=\"xsmall\"\n            onClick={this.toggleView.bind(this, 'curl')}\n          >\n            curl\n          </MonoButton>\n        </ButtonBar>\n      );\n    }\n\n    const title = (\n      <Header key=\"title\">\n        <ExternalLink href={fullUrl} title={fullUrl}>\n          <Path>\n            <strong>{data.method || 'GET'}</strong>\n            <Truncate\n              value={parsedUrl ? parsedUrl.pathname : ''}\n              maxLength={36}\n              leftTrim\n            />\n          </Path>\n          {fullUrl && <StyledIconOpen size=\"xs\" />}\n        </ExternalLink>\n        <small>{parsedUrl ? parsedUrl.hostname : ''}</small>\n      </Header>\n    );\n\n    return (\n      <EventDataSection\n        type={type}\n        title={title}\n        actions={actions}\n        wrapTitle={false}\n        className=\"request\"\n      >\n        {view === 'curl' ? (\n          <pre>{getCurlCommand(data)}</pre>\n        ) : (\n          <RichHttpContent data={data} />\n        )}\n      </EventDataSection>\n    );\n  }\n}\n\nconst MonoButton = styled(Button)`\n  font-family: ${p => p.theme.text.familyMono};\n`;\n\nconst Path = styled('span')`\n  color: ${p => p.theme.textColor};\n  text-transform: none;\n  font-weight: normal;\n\n  & strong {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst Header = styled('h3')`\n  display: flex;\n  align-items: center;\n`;\n\n// Nudge the icon down so it is centered. the `external-icon` class\n// doesn't quite get it in place.\nconst StyledIconOpen = styled(IconOpen)`\n  transition: 0.1s linear color;\n  margin: 0 ${space(0.5)};\n  color: ${p => p.theme.subText};\n  position: relative;\n  top: 1px;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default RequestInterface;\n","import {useState} from 'react';\n\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport CrashContent from 'sentry/components/events/interfaces/crashContent';\nimport CrashActions from 'sentry/components/events/interfaces/crashHeader/crashActions';\nimport CrashTitle from 'sentry/components/events/interfaces/crashHeader/crashTitle';\nimport {t} from 'sentry/locale';\nimport {Group, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE, STACK_VIEW} from 'sentry/types/stacktrace';\n\nimport NoStackTraceMessage from './noStackTraceMessage';\nimport {isStacktraceNewestFirst} from './utils';\n\ntype CrashContentProps = React.ComponentProps<typeof CrashContent>;\n\ntype Props = Pick<\n  CrashContentProps,\n  'groupingCurrentLevel' | 'hasHierarchicalGrouping'\n> & {\n  data: NonNullable<CrashContentProps['stacktrace']>;\n  event: Event;\n  projectId: Project['id'];\n  type: string;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  hideGuide?: boolean;\n};\n\nfunction StacktraceInterface({\n  hideGuide = false,\n  projectId,\n  event,\n  data,\n  type,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n}: Props) {\n  const [stackView, setStackView] = useState<STACK_VIEW>(\n    data.hasSystemFrames ? STACK_VIEW.APP : STACK_VIEW.FULL\n  );\n  const [newestFirst, setNewestFirst] = useState(isStacktraceNewestFirst());\n\n  const stackTraceNotFound = !(data.frames ?? []).length;\n\n  return (\n    <EventDataSection\n      type={type}\n      title={\n        <CrashTitle\n          title={t('Stack Trace')}\n          hideGuide={hideGuide}\n          newestFirst={newestFirst}\n          onChange={\n            !stackTraceNotFound ? value => setNewestFirst(value.newestFirst) : undefined\n          }\n        />\n      }\n      actions={\n        !stackTraceNotFound && (\n          <CrashActions\n            stackView={stackView}\n            platform={event.platform}\n            stacktrace={data}\n            hasHierarchicalGrouping={hasHierarchicalGrouping}\n            onChange={value => setStackView(value.stackView ?? stackView)}\n          />\n        )\n      }\n      wrapTitle={false}\n    >\n      {stackTraceNotFound ? (\n        <NoStackTraceMessage />\n      ) : (\n        <CrashContent\n          projectId={projectId}\n          event={event}\n          stackView={stackView}\n          newestFirst={newestFirst}\n          stacktrace={data}\n          stackType={STACK_TYPE.ORIGINAL}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      )}\n    </EventDataSection>\n  );\n}\n\nexport default StacktraceInterface;\n","import styled from '@emotion/styled';\n\nimport CrashContent from 'sentry/components/events/interfaces/crashContent';\nimport {t} from 'sentry/locale';\nimport {Group, PlatformType, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {STACK_TYPE, STACK_VIEW} from 'sentry/types/stacktrace';\n\nimport {TraceEventDataSection} from '../traceEventDataSection';\n\nimport CrashContentStackTrace from './crashContent/stackTrace';\nimport NoStackTraceMessage from './noStackTraceMessage';\nimport {isStacktraceNewestFirst} from './utils';\n\ntype CrashContentProps = React.ComponentProps<typeof CrashContent>;\n\ntype Props = Pick<\n  CrashContentProps,\n  'groupingCurrentLevel' | 'hasHierarchicalGrouping'\n> & {\n  data: NonNullable<CrashContentProps['stacktrace']>;\n  event: Event;\n  projectId: Project['id'];\n  type: string;\n  groupingCurrentLevel?: Group['metadata']['current_level'];\n  hideGuide?: boolean;\n};\n\nfunction StackTrace({\n  projectId,\n  event,\n  data,\n  type,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n}: Props) {\n  function getPlatform(): PlatformType {\n    const framePlatform = data.frames?.find(frame => !!frame.platform);\n    return framePlatform?.platform ?? event.platform ?? 'other';\n  }\n\n  const platform = getPlatform();\n  const stackTraceNotFound = !(data.frames ?? []).length;\n\n  return (\n    <TraceEventDataSection\n      type={type}\n      stackType={STACK_TYPE.ORIGINAL}\n      projectId={projectId}\n      eventId={event.id}\n      platform={platform}\n      stackTraceNotFound={stackTraceNotFound}\n      recentFirst={isStacktraceNewestFirst()}\n      fullStackTrace={!data.hasSystemFrames}\n      title={<Title>{t('Stack Trace')}</Title>}\n      wrapTitle={false}\n      hasMinified={false}\n      hasVerboseFunctionNames={\n        !!data.frames?.some(\n          frame =>\n            !!frame.rawFunction &&\n            !!frame.function &&\n            frame.rawFunction !== frame.function\n        )\n      }\n      hasAbsoluteFilePaths={!!data.frames?.some(frame => !!frame.filename)}\n      hasAbsoluteAddresses={!!data.frames?.some(frame => !!frame.instructionAddr)}\n      hasAppOnlyFrames={!!data.frames?.some(frame => frame.inApp !== true)}\n      hasNewestFirst={(data.frames ?? []).length > 1}\n      showPermalink\n    >\n      {({recentFirst, display, fullStackTrace}) =>\n        stackTraceNotFound ? (\n          <NoStackTraceMessage />\n        ) : (\n          <CrashContentStackTrace\n            event={event}\n            platform={platform}\n            stackView={\n              display.includes('raw-stack-trace')\n                ? STACK_VIEW.RAW\n                : fullStackTrace\n                ? STACK_VIEW.FULL\n                : STACK_VIEW.APP\n            }\n            newestFirst={recentFirst}\n            stacktrace={data}\n            groupingCurrentLevel={groupingCurrentLevel}\n            hasHierarchicalGrouping={hasHierarchicalGrouping}\n            nativeV2\n          />\n        )\n      }\n    </TraceEventDataSection>\n  );\n}\n\nexport default StackTrace;\n\nconst Title = styled('h3')`\n  margin-bottom: 0;\n`;\n","import {t} from 'sentry/locale';\nimport {Frame} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nimport EventDataSection from '../../events/eventDataSection';\n\nimport Line from './frame/line';\n\ntype Props = {\n  data: Frame;\n  event: Event;\n  type: string;\n};\n\nconst TemplateInterface = ({type, data, event}: Props) => (\n  <EventDataSection type={type} title={t('Template')}>\n    <div className=\"traceback no-exception\">\n      <ul>\n        <Line data={data} event={event} registers={{}} components={[]} isExpanded />\n      </ul>\n    </div>\n  </EventDataSection>\n);\nexport default TemplateInterface;\n","import isNil from 'lodash/isNil';\n\nimport CrashContent from 'sentry/components/events/interfaces/crashContent';\nimport Pill from 'sentry/components/pill';\nimport Pills from 'sentry/components/pills';\nimport {t} from 'sentry/locale';\nimport {Event, Project, STACK_TYPE, STACK_VIEW, Thread} from 'sentry/types';\n\nimport NoStackTraceMessage from '../noStackTraceMessage';\n\ntype CrashContentProps = React.ComponentProps<typeof CrashContent>;\n\ntype Props = {\n  event: Event;\n  newestFirst: boolean;\n  projectId: Project['id'];\n  stackTraceNotFound: boolean;\n  stackType: STACK_TYPE;\n  data?: Thread;\n  stackView?: STACK_VIEW;\n} & Pick<\n  CrashContentProps,\n  'exception' | 'stacktrace' | 'hasHierarchicalGrouping' | 'groupingCurrentLevel'\n>;\n\nconst Content = ({\n  event,\n  projectId,\n  data,\n  stackView,\n  groupingCurrentLevel,\n  stackType,\n  newestFirst,\n  exception,\n  stacktrace,\n  stackTraceNotFound,\n  hasHierarchicalGrouping,\n}: Props) => (\n  <div className=\"thread\">\n    {data && (!isNil(data?.id) || !!data?.name) && (\n      <Pills>\n        {!isNil(data.id) && <Pill name={t('id')} value={String(data.id)} />}\n        {!!data.name?.trim() && <Pill name={t('name')} value={data.name} />}\n        <Pill name={t('was active')} value={data.current} />\n        <Pill name={t('errored')} className={data.crashed ? 'false' : 'true'}>\n          {data.crashed ? t('yes') : t('no')}\n        </Pill>\n      </Pills>\n    )}\n\n    {stackTraceNotFound ? (\n      <NoStackTraceMessage message={data?.crashed ? t('Thread Errored') : undefined} />\n    ) : (\n      <CrashContent\n        event={event}\n        stackType={stackType}\n        stackView={stackView}\n        newestFirst={newestFirst}\n        projectId={projectId}\n        exception={exception}\n        stacktrace={stacktrace}\n        groupingCurrentLevel={groupingCurrentLevel}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n      />\n    )}\n  </div>\n);\n\nexport default Content;\n","import {Frame} from 'sentry/types';\n\n// TODO(ts): define correct stack trace type\nfunction getRelevantFrame(stacktrace: any): Frame {\n  if (!stacktrace.hasSystemFrames) {\n    return stacktrace.frames[stacktrace.frames.length - 1];\n  }\n  for (let i = stacktrace.frames.length - 1; i >= 0; i--) {\n    const frame = stacktrace.frames[i];\n    if (frame.inApp) {\n      return frame;\n    }\n  }\n  // this should not happen\n  return stacktrace.frames[stacktrace.frames.length - 1];\n}\n\nexport default getRelevantFrame;\n","import {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {\n  EntryData,\n  Event,\n  ExceptionType,\n  Frame,\n  StacktraceType,\n  Thread,\n} from 'sentry/types';\n\nimport getRelevantFrame from './getRelevantFrame';\nimport getThreadException from './getThreadException';\nimport getThreadStacktrace from './getThreadStacktrace';\nimport trimFilename from './trimFilename';\n\ntype ThreadInfo = {\n  crashedInfo?: EntryData;\n  filename?: string;\n  label?: string;\n};\n\nfunction filterThreadInfo(\n  event: Event,\n  thread: Thread,\n  exception?: Required<ExceptionType>\n): ThreadInfo {\n  const threadInfo: ThreadInfo = {};\n\n  let stacktrace: StacktraceType | undefined = getThreadStacktrace(false, thread);\n\n  if (thread.crashed) {\n    const threadException = exception ?? getThreadException(event, thread);\n\n    const matchedStacktraceAndExceptionThread = threadException?.values.find(\n      exceptionDataValue => exceptionDataValue.threadId === thread.id\n    );\n\n    if (matchedStacktraceAndExceptionThread) {\n      stacktrace = matchedStacktraceAndExceptionThread.stacktrace ?? undefined;\n    }\n\n    threadInfo.crashedInfo = threadException;\n  }\n\n  if (!stacktrace) {\n    return threadInfo;\n  }\n\n  const relevantFrame: Frame = getRelevantFrame(stacktrace);\n\n  if (relevantFrame.filename) {\n    threadInfo.filename = trimFilename(relevantFrame.filename);\n  }\n\n  if (relevantFrame.function) {\n    threadInfo.label = relevantFrame.function;\n    return threadInfo;\n  }\n\n  if (relevantFrame.package) {\n    threadInfo.label = trimPackage(relevantFrame.package);\n    return threadInfo;\n  }\n\n  if (relevantFrame.module) {\n    threadInfo.label = relevantFrame.module;\n    return threadInfo;\n  }\n\n  return threadInfo;\n}\n\nexport default filterThreadInfo;\n","function trimFilename(filename: string) {\n  const pieces = filename.split(/\\//g);\n  return pieces[pieces.length - 1];\n}\n\nexport default trimFilename;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst Grid = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  display: grid;\n  gap: ${space(1)};\n  align-items: center;\n  grid-template-columns: 16px repeat(2, 1fr) 3fr;\n`;\n\nconst GridCell = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nexport {Grid, GridCell};\n","import {t} from 'sentry/locale';\n\nimport {Grid, GridCell} from './styles';\n\nconst Header = () => (\n  <Grid>\n    <GridCell />\n    <GridCell>{t('Id')}</GridCell>\n    <GridCell>{t('Name')}</GridCell>\n    <GridCell>{t('Label')}</GridCell>\n  </Grid>\n);\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconFire} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {EntryData} from 'sentry/types';\nimport {Color} from 'sentry/utils/theme';\n\nimport {Grid, GridCell} from './styles';\n\ntype Props = {\n  details: ThreadInfo;\n  id: number;\n  crashed?: boolean;\n  crashedInfo?: EntryData;\n  name?: string | null;\n};\n\ntype ThreadInfo = {\n  filename?: string;\n  label?: string;\n};\n\nconst Option = ({id, details, name, crashed, crashedInfo}: Props) => {\n  const label = details.label ?? `<${t('unknown')}>`;\n  const optionName = name || `<${t('unknown')}>`;\n\n  return (\n    <Grid>\n      <GridCell>\n        {crashed && (\n          <InnerCell isCentered>\n            {crashedInfo ? (\n              <Tooltip\n                skipWrapper\n                title={tct('Errored with [crashedInfo]', {\n                  crashedInfo: crashedInfo.values[0].type,\n                })}\n                disabled={!crashedInfo}\n                position=\"top\"\n              >\n                <IconFire color=\"red300\" />\n              </Tooltip>\n            ) : (\n              <IconFire color=\"red300\" />\n            )}\n          </InnerCell>\n        )}\n      </GridCell>\n      <GridCell>\n        <InnerCell>\n          <Tooltip title={`#${id}`} position=\"top\">\n            <TextOverflow>{`#${id}`}</TextOverflow>\n          </Tooltip>\n        </InnerCell>\n      </GridCell>\n      <GridCell>\n        <InnerCell isBold>\n          <Tooltip title={optionName} position=\"top\">\n            <TextOverflow>{optionName}</TextOverflow>\n          </Tooltip>\n        </InnerCell>\n      </GridCell>\n      <GridCell>\n        <InnerCell color=\"blue300\">\n          <Tooltip title={label} position=\"top\">\n            <TextOverflow>{label}</TextOverflow>\n          </Tooltip>\n        </InnerCell>\n      </GridCell>\n    </Grid>\n  );\n};\n\nexport default Option;\n\nconst InnerCell = styled('div')<{color?: Color; isBold?: boolean; isCentered?: boolean}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${p => (p.isCentered ? 'center' : 'flex-start')};\n  font-weight: ${p => (p.isBold ? 600 : 400)};\n  ${p => p.color && `color: ${p.theme[p.color]}`}\n`;\n","import styled from '@emotion/styled';\n\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  details: ThreadInfo;\n  id: number;\n};\n\ntype ThreadInfo = {\n  filename?: string;\n  label?: string;\n};\n\nconst SelectedOption = ({id, details}: Props) => (\n  <Wrapper>\n    <ThreadId>{tct('Thread #[id]:', {id})}</ThreadId>\n    <Label>{details?.label || `<${t('unknown')}>`}</Label>\n  </Wrapper>\n);\n\nexport default SelectedOption;\n\nconst Wrapper = styled('div')`\n  grid-template-columns: auto 1fr;\n  display: grid;\n`;\n\nconst ThreadId = styled(TextOverflow)`\n  padding-right: ${space(1)};\n  max-width: 100%;\n  text-align: left;\n`;\n\nconst Label = styled(ThreadId)`\n  color: ${p => p.theme.blue300};\n`;\n","import {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport partition from 'lodash/partition';\n\nimport DropdownAutoComplete from 'sentry/components/dropdownAutoComplete';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {t} from 'sentry/locale';\nimport {Event, ExceptionType, Thread} from 'sentry/types';\nimport theme from 'sentry/utils/theme';\n\nimport filterThreadInfo from './filterThreadInfo';\nimport Header from './header';\nimport Option from './option';\nimport SelectedOption from './selectedOption';\n\ntype Props = {\n  activeThread: Thread;\n  event: Event;\n  threads: Array<Thread>;\n  exception?: Required<ExceptionType>;\n  fullWidth?: boolean;\n  onChange?: (thread: Thread) => void;\n};\n\nconst DROPDOWN_MAX_HEIGHT = 400;\n\nconst ThreadSelector = ({\n  threads,\n  event,\n  exception,\n  activeThread,\n  onChange,\n  fullWidth = false,\n}: Props) => {\n  const getDropDownItem = (thread: Thread) => {\n    const {label, filename, crashedInfo} = filterThreadInfo(event, thread, exception);\n    const threadInfo = {label, filename};\n    return {\n      value: `#${thread.id}: ${thread.name} ${label} ${filename}`,\n      threadInfo,\n      thread,\n      label: (\n        <Option\n          id={thread.id}\n          details={threadInfo}\n          name={thread.name}\n          crashed={thread.crashed}\n          crashedInfo={crashedInfo}\n        />\n      ),\n    };\n  };\n\n  const getItems = () => {\n    const [crashed, notCrashed] = partition(threads, thread => !!thread?.crashed);\n    return [...crashed, ...notCrashed].map(getDropDownItem);\n  };\n\n  const handleChange = (thread: Thread) => {\n    if (onChange) {\n      onChange(thread);\n    }\n  };\n\n  return (\n    <ClassNames>\n      {({css}) => (\n        <StyledDropdownAutoComplete\n          data-test-id=\"thread-selector\"\n          items={getItems()}\n          onSelect={item => {\n            handleChange(item.thread);\n          }}\n          maxHeight={DROPDOWN_MAX_HEIGHT}\n          searchPlaceholder={t('Filter Threads')}\n          emptyMessage={t('You have no threads')}\n          noResultsMessage={t('No threads found')}\n          menuHeader={<Header />}\n          rootClassName={\n            fullWidth\n              ? css`\n                  width: 100%;\n                `\n              : undefined\n          }\n          closeOnSelect\n          emptyHidesInput\n        >\n          {({isOpen, selectedItem}) => (\n            <StyledDropdownButton isOpen={isOpen} size=\"small\" align=\"left\">\n              {selectedItem ? (\n                <SelectedOption\n                  id={selectedItem.thread.id}\n                  details={selectedItem.threadInfo}\n                />\n              ) : (\n                <SelectedOption\n                  id={activeThread.id}\n                  details={filterThreadInfo(event, activeThread, exception)}\n                />\n              )}\n            </StyledDropdownButton>\n          )}\n        </StyledDropdownAutoComplete>\n      )}\n    </ClassNames>\n  );\n};\n\nexport default ThreadSelector;\n\nconst StyledDropdownAutoComplete = styled(DropdownAutoComplete)`\n  width: 100%;\n  min-width: 300px;\n  @media (min-width: ${theme.breakpoints.small}) {\n    width: 500px;\n  }\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    top: calc(100% - 2px);\n  }\n`;\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  > *:first-child {\n    grid-template-columns: 1fr 15px;\n  }\n  width: 100%;\n  min-width: 150px;\n  @media (min-width: ${props => props.theme.breakpoints.xlarge}) {\n    max-width: 420px;\n  }\n`;\n","import {useState} from 'react';\n\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport CrashActions from 'sentry/components/events/interfaces/crashHeader/crashActions';\nimport CrashTitle from 'sentry/components/events/interfaces/crashHeader/crashTitle';\nimport {t} from 'sentry/locale';\nimport {Event, Project, STACK_TYPE, STACK_VIEW, Thread} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport {isStacktraceNewestFirst} from '../utils';\n\nimport findBestThread from './threadSelector/findBestThread';\nimport getThreadException from './threadSelector/getThreadException';\nimport getThreadStacktrace from './threadSelector/getThreadStacktrace';\nimport Content from './content';\nimport ThreadSelector from './threadSelector';\n\ntype Props = Pick<\n  React.ComponentProps<typeof Content>,\n  'groupingCurrentLevel' | 'hasHierarchicalGrouping'\n> & {\n  data: {\n    values?: Array<Thread>;\n  };\n  event: Event;\n  projectId: Project['id'];\n  type: string;\n  hideGuide?: boolean;\n};\n\ntype State = {\n  newestFirst: boolean;\n  stackType: STACK_TYPE;\n  activeThread?: Thread;\n  stackView?: STACK_VIEW;\n};\n\nfunction getIntendedStackView(thread: Thread, event: Event) {\n  const exception = getThreadException(event, thread);\n  if (exception) {\n    return !!exception.values.find(value => !!value.stacktrace?.hasSystemFrames)\n      ? STACK_VIEW.APP\n      : STACK_VIEW.FULL;\n  }\n\n  const stacktrace = getThreadStacktrace(false, thread);\n\n  return stacktrace?.hasSystemFrames ? STACK_VIEW.APP : STACK_VIEW.FULL;\n}\n\nfunction Threads({\n  data,\n  event,\n  projectId,\n  type,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n  hideGuide = false,\n}: Props) {\n  const [state, setState] = useState<State>(() => {\n    const thread = defined(data.values) ? findBestThread(data.values) : undefined;\n    return {\n      activeThread: thread,\n      stackView: thread ? getIntendedStackView(thread, event) : undefined,\n      stackType: STACK_TYPE.ORIGINAL,\n      newestFirst: isStacktraceNewestFirst(),\n    };\n  });\n\n  if (!data.values) {\n    return null;\n  }\n\n  function handleSelectNewThread(thread: Thread) {\n    setState({\n      ...state,\n      activeThread: thread,\n      stackView:\n        state.stackView !== STACK_VIEW.RAW\n          ? getIntendedStackView(thread, event)\n          : state.stackView,\n      stackType: STACK_TYPE.ORIGINAL,\n    });\n  }\n\n  function handleChangeNewestFirst({newestFirst}: Pick<State, 'newestFirst'>) {\n    setState({...state, newestFirst});\n  }\n\n  function handleChangeStackView({\n    stackView,\n    stackType,\n  }: Partial<Pick<State, 'stackType' | 'stackView'>>) {\n    setState({\n      ...state,\n      stackView: stackView ?? state.stackView,\n      stackType: stackType ?? state.stackType,\n    });\n  }\n\n  const threads = data.values;\n  const {stackView, stackType, newestFirst, activeThread} = state;\n\n  const exception = getThreadException(event, activeThread);\n\n  const stacktrace = !exception\n    ? getThreadStacktrace(stackType !== STACK_TYPE.ORIGINAL, activeThread)\n    : undefined;\n\n  const stackTraceNotFound = !(exception || stacktrace);\n  const hasMoreThanOneThread = threads.length > 1;\n\n  return (\n    <EventDataSection\n      type={type}\n      title={\n        hasMoreThanOneThread ? (\n          <CrashTitle\n            title=\"\"\n            newestFirst={newestFirst}\n            hideGuide={hideGuide}\n            onChange={handleChangeNewestFirst}\n            beforeTitle={\n              activeThread && (\n                <ThreadSelector\n                  threads={threads}\n                  activeThread={activeThread}\n                  event={event}\n                  onChange={handleSelectNewThread}\n                  exception={exception}\n                />\n              )\n            }\n          />\n        ) : (\n          <CrashTitle\n            title={t('Stack Trace')}\n            newestFirst={newestFirst}\n            hideGuide={hideGuide}\n            onChange={!stackTraceNotFound ? handleChangeNewestFirst : undefined}\n          />\n        )\n      }\n      actions={\n        !stackTraceNotFound && (\n          <CrashActions\n            stackView={stackView}\n            platform={event.platform}\n            stacktrace={stacktrace}\n            stackType={stackType}\n            thread={hasMoreThanOneThread ? activeThread : undefined}\n            exception={exception}\n            onChange={handleChangeStackView}\n            hasHierarchicalGrouping={hasHierarchicalGrouping}\n          />\n        )\n      }\n      showPermalink={!hasMoreThanOneThread}\n      wrapTitle={false}\n    >\n      <Content\n        data={activeThread}\n        exception={exception}\n        stackView={stackView}\n        stackType={stackType}\n        stacktrace={stacktrace}\n        event={event}\n        newestFirst={newestFirst}\n        projectId={projectId}\n        groupingCurrentLevel={groupingCurrentLevel}\n        stackTraceNotFound={stackTraceNotFound}\n        hasHierarchicalGrouping={hasHierarchicalGrouping}\n      />\n    </EventDataSection>\n  );\n}\n\nexport default Threads;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\nimport isNil from 'lodash/isNil';\n\nimport Pill from 'sentry/components/pill';\nimport Pills from 'sentry/components/pills';\nimport {t} from 'sentry/locale';\nimport {\n  Event,\n  Frame,\n  PlatformType,\n  Project,\n  STACK_TYPE,\n  STACK_VIEW,\n  Thread,\n} from 'sentry/types';\n\nimport {TraceEventDataSection} from '../traceEventDataSection';\n\nimport Exception from './crashContent/exception';\nimport StackTrace from './crashContent/stackTrace';\nimport ThreadSelector from './threads/threadSelector';\nimport findBestThread from './threads/threadSelector/findBestThread';\nimport getThreadException from './threads/threadSelector/getThreadException';\nimport getThreadStacktrace from './threads/threadSelector/getThreadStacktrace';\nimport NoStackTraceMessage from './noStackTraceMessage';\nimport {isStacktraceNewestFirst} from './utils';\n\ntype ExceptionProps = React.ComponentProps<typeof Exception>;\n\ntype Props = Pick<ExceptionProps, 'groupingCurrentLevel' | 'hasHierarchicalGrouping'> & {\n  data: {\n    values?: Array<Thread>;\n  };\n  event: Event;\n  projectId: Project['id'];\n  type: string;\n};\n\ntype State = {\n  activeThread?: Thread;\n};\n\nfunction getIntendedStackView(thread: Thread, event: Event) {\n  const exception = getThreadException(event, thread);\n  if (exception) {\n    return !!exception.values.find(value => !!value.stacktrace?.hasSystemFrames)\n      ? STACK_VIEW.APP\n      : STACK_VIEW.FULL;\n  }\n\n  const stacktrace = getThreadStacktrace(false, thread);\n\n  return stacktrace?.hasSystemFrames ? STACK_VIEW.APP : STACK_VIEW.FULL;\n}\n\nfunction Threads({\n  data,\n  event,\n  projectId,\n  type,\n  hasHierarchicalGrouping,\n  groupingCurrentLevel,\n}: Props) {\n  const threads = data.values ?? [];\n\n  const [state, setState] = useState<State>(() => {\n    const thread = !!threads.length ? findBestThread(threads) : undefined;\n    return {activeThread: thread};\n  });\n\n  const stackTraceNotFound = !threads.length;\n  const {activeThread} = state;\n\n  const hasMoreThanOneThread = threads.length > 1;\n  const exception = getThreadException(event, activeThread);\n  const stackView = activeThread ? getIntendedStackView(activeThread, event) : undefined;\n\n  function getPlatform(): PlatformType {\n    let exceptionFramePlatform: Frame | undefined = undefined;\n\n    for (const value of exception?.values ?? []) {\n      exceptionFramePlatform = value.stacktrace?.frames?.find(frame => !!frame.platform);\n      if (exceptionFramePlatform) {\n        break;\n      }\n    }\n\n    if (exceptionFramePlatform?.platform) {\n      return exceptionFramePlatform.platform;\n    }\n\n    const threadFramePlatform = activeThread?.stacktrace?.frames?.find(\n      frame => !!frame.platform\n    );\n\n    if (threadFramePlatform?.platform) {\n      return threadFramePlatform.platform;\n    }\n\n    return event.platform ?? 'other';\n  }\n\n  function renderPills() {\n    const {id, name, current, crashed} = activeThread ?? {};\n\n    if (isNil(id) || !name) {\n      return null;\n    }\n\n    return (\n      <Pills>\n        {!isNil(id) && <Pill name={t('id')} value={String(id)} />}\n        {!!name?.trim() && <Pill name={t('name')} value={name} />}\n        {current !== undefined && <Pill name={t('was active')} value={current} />}\n        {crashed !== undefined && (\n          <Pill name={t('errored')} className={crashed ? 'false' : 'true'}>\n            {crashed ? t('yes') : t('no')}\n          </Pill>\n        )}\n      </Pills>\n    );\n  }\n\n  function renderContent({\n    display,\n    recentFirst,\n    fullStackTrace,\n  }: Parameters<React.ComponentProps<typeof TraceEventDataSection>['children']>[0]) {\n    const stackType = display.includes('minified')\n      ? STACK_TYPE.MINIFIED\n      : STACK_TYPE.ORIGINAL;\n\n    if (exception) {\n      return (\n        <Exception\n          stackType={stackType}\n          stackView={\n            display.includes('raw-stack-trace')\n              ? STACK_VIEW.RAW\n              : fullStackTrace\n              ? STACK_VIEW.FULL\n              : STACK_VIEW.APP\n          }\n          projectId={projectId}\n          newestFirst={recentFirst}\n          event={event}\n          platform={platform}\n          values={exception.values}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      );\n    }\n\n    const stackTrace = getThreadStacktrace(\n      stackType !== STACK_TYPE.ORIGINAL,\n      activeThread\n    );\n\n    if (stackTrace) {\n      return (\n        <StackTrace\n          stacktrace={stackTrace}\n          stackView={\n            display.includes('raw-stack-trace')\n              ? STACK_VIEW.RAW\n              : fullStackTrace\n              ? STACK_VIEW.FULL\n              : STACK_VIEW.APP\n          }\n          newestFirst={recentFirst}\n          event={event}\n          platform={platform}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n          nativeV2\n        />\n      );\n    }\n\n    return (\n      <NoStackTraceMessage\n        message={activeThread?.crashed ? t('Thread Errored') : undefined}\n      />\n    );\n  }\n\n  function getTitle() {\n    if (hasMoreThanOneThread && activeThread) {\n      return (\n        <ThreadSelector\n          threads={threads}\n          activeThread={activeThread}\n          event={event}\n          onChange={thread => {\n            setState({\n              ...state,\n              activeThread: thread,\n            });\n          }}\n          exception={exception}\n          fullWidth\n        />\n      );\n    }\n\n    return <Title>{t('Stack Trace')}</Title>;\n  }\n\n  const platform = getPlatform();\n\n  return (\n    <TraceEventDataSection\n      type={type}\n      stackType={STACK_TYPE.ORIGINAL}\n      projectId={projectId}\n      eventId={event.id}\n      recentFirst={isStacktraceNewestFirst()}\n      fullStackTrace={stackView === STACK_VIEW.FULL}\n      title={getTitle()}\n      platform={platform}\n      showPermalink={!hasMoreThanOneThread}\n      hasMinified={\n        !!exception?.values?.find(value => value.rawStacktrace) ||\n        !!activeThread?.rawStacktrace\n      }\n      hasVerboseFunctionNames={\n        !!exception?.values?.some(\n          value =>\n            !!value.stacktrace?.frames?.some(\n              frame =>\n                !!frame.rawFunction &&\n                !!frame.function &&\n                frame.rawFunction !== frame.function\n            )\n        ) ||\n        !!activeThread?.stacktrace?.frames?.some(\n          frame =>\n            !!frame.rawFunction &&\n            !!frame.function &&\n            frame.rawFunction !== frame.function\n        )\n      }\n      hasAbsoluteFilePaths={\n        !!exception?.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => !!frame.filename)\n        ) || !!activeThread?.stacktrace?.frames?.some(frame => !!frame.filename)\n      }\n      hasAbsoluteAddresses={\n        !!exception?.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => !!frame.instructionAddr)\n        ) || !!activeThread?.stacktrace?.frames?.some(frame => !!frame.instructionAddr)\n      }\n      hasAppOnlyFrames={\n        !!exception?.values?.some(\n          value => !!value.stacktrace?.frames?.some(frame => frame.inApp !== true)\n        ) || !!activeThread?.stacktrace?.frames?.some(frame => frame.inApp !== true)\n      }\n      hasNewestFirst={\n        !!exception?.values?.some(value => (value.stacktrace?.frames ?? []).length > 1) ||\n        (activeThread?.stacktrace?.frames ?? []).length > 1\n      }\n      stackTraceNotFound={stackTraceNotFound}\n      wrapTitle={false}\n    >\n      {childrenProps => (\n        <Fragment>\n          {renderPills()}\n          {renderContent(childrenProps)}\n        </Fragment>\n      )}\n    </TraceEventDataSection>\n  );\n}\n\nexport default Threads;\n\nconst Title = styled('h3')`\n  margin-bottom: 0;\n`;\n","import Breadcrumbs from 'sentry/components/events/interfaces/breadcrumbs';\nimport Csp from 'sentry/components/events/interfaces/csp';\nimport DebugMeta from 'sentry/components/events/interfaces/debugMeta';\nimport DebugMetaV2 from 'sentry/components/events/interfaces/debugMeta-v2';\nimport Exception from 'sentry/components/events/interfaces/exception';\nimport ExceptionV2 from 'sentry/components/events/interfaces/exceptionV2';\nimport Generic from 'sentry/components/events/interfaces/generic';\nimport Message from 'sentry/components/events/interfaces/message';\nimport Request from 'sentry/components/events/interfaces/request';\nimport Spans from 'sentry/components/events/interfaces/spans';\nimport StackTrace from 'sentry/components/events/interfaces/stackTrace';\nimport StackTraceV2 from 'sentry/components/events/interfaces/stackTraceV2';\nimport Template from 'sentry/components/events/interfaces/template';\nimport Threads from 'sentry/components/events/interfaces/threads';\nimport ThreadsV2 from 'sentry/components/events/interfaces/threadsV2';\nimport {Group, Organization, Project, SharedViewOrganization} from 'sentry/types';\nimport {Entry, EntryType, Event, EventTransaction} from 'sentry/types/event';\n\ntype Props = Pick<React.ComponentProps<typeof Breadcrumbs>, 'route' | 'router'> & {\n  entry: Entry;\n  event: Event;\n  organization: SharedViewOrganization | Organization;\n  projectSlug: Project['slug'];\n  group?: Group;\n};\n\nfunction EventEntry({\n  entry,\n  projectSlug,\n  event,\n  organization,\n  group,\n  route,\n  router,\n}: Props) {\n  const hasHierarchicalGrouping =\n    !!organization.features?.includes('grouping-stacktrace-ui') &&\n    !!(event.metadata.current_tree_label || event.metadata.finest_tree_label);\n\n  const hasNativeStackTraceV2 = !!organization.features?.includes(\n    'native-stack-trace-v2'\n  );\n\n  const groupingCurrentLevel = group?.metadata?.current_level;\n\n  switch (entry.type) {\n    case EntryType.EXCEPTION: {\n      const {data, type} = entry;\n      return hasNativeStackTraceV2 ? (\n        <ExceptionV2\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      ) : (\n        <Exception\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      );\n    }\n    case EntryType.MESSAGE: {\n      const {data} = entry;\n      return <Message data={data} />;\n    }\n    case EntryType.REQUEST: {\n      const {data, type} = entry;\n      return <Request type={type} event={event} data={data} />;\n    }\n    case EntryType.STACKTRACE: {\n      const {data, type} = entry;\n      return hasNativeStackTraceV2 ? (\n        <StackTraceV2\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      ) : (\n        <StackTrace\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      );\n    }\n    case EntryType.TEMPLATE: {\n      const {data, type} = entry;\n      return <Template type={type} event={event} data={data} />;\n    }\n    case EntryType.CSP: {\n      const {data} = entry;\n      return <Csp event={event} data={data} />;\n    }\n    case EntryType.EXPECTCT:\n    case EntryType.EXPECTSTAPLE:\n    case EntryType.HPKP: {\n      const {data, type} = entry;\n      return <Generic type={type} data={data} />;\n    }\n    case EntryType.BREADCRUMBS: {\n      const {data, type} = entry;\n      return (\n        <Breadcrumbs\n          type={type}\n          data={data}\n          organization={organization as Organization}\n          event={event}\n          router={router}\n          route={route}\n        />\n      );\n    }\n    case EntryType.THREADS: {\n      const {data, type} = entry;\n      return hasNativeStackTraceV2 ? (\n        <ThreadsV2\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      ) : (\n        <Threads\n          type={type}\n          event={event}\n          data={data}\n          projectId={projectSlug}\n          groupingCurrentLevel={groupingCurrentLevel}\n          hasHierarchicalGrouping={hasHierarchicalGrouping}\n        />\n      );\n    }\n    case EntryType.DEBUGMETA:\n      const {data} = entry;\n      const hasImagesLoadedV2Feature =\n        !!organization.features?.includes('images-loaded-v2');\n\n      if (hasImagesLoadedV2Feature) {\n        return (\n          <DebugMetaV2\n            event={event}\n            projectId={projectSlug}\n            groupId={group?.id}\n            organization={organization as Organization}\n            data={data as React.ComponentProps<typeof DebugMetaV2>['data']}\n          />\n        );\n      }\n\n      return (\n        <DebugMeta\n          event={event}\n          projectId={projectSlug}\n          organization={organization as Organization}\n          data={data}\n        />\n      );\n\n    case EntryType.SPANS:\n      return (\n        <Spans\n          event={event as EventTransaction}\n          organization={organization as Organization}\n        />\n      );\n    default:\n      // this should not happen\n      /* eslint no-console:0 */\n      window.console &&\n        console.error &&\n        console.error('Unregistered interface: ' + (entry as any).type);\n      return null;\n  }\n}\n\nexport default EventEntry;\n","import styled from '@emotion/styled';\nimport kebabCase from 'lodash/kebabCase';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport EventDataSection, {\n  SectionContents,\n} from 'sentry/components/events/eventDataSection';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  description: string;\n  title: string;\n  className?: string;\n};\n\nfunction DataSection({title, description, children, className, ...props}: Props) {\n  const type = kebabCase(title);\n  return (\n    <StyledEventDataSection\n      {...props}\n      className={className}\n      type={type}\n      title={\n        <TitleWrapper>\n          <GuideAnchor target={type} position=\"bottom\">\n            <Title>{title}</Title>\n          </GuideAnchor>\n          <QuestionTooltip size=\"xs\" position=\"top\" title={description} />\n        </TitleWrapper>\n      }\n      wrapTitle={false}\n      showPermalink={false}\n    >\n      {children}\n    </StyledEventDataSection>\n  );\n}\n\nexport default DataSection;\n\nconst TitleWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  gap: ${space(0.5)};\n  align-items: center;\n  padding: ${space(0.75)} 0;\n`;\n\nconst Title = styled('h3')`\n  margin-bottom: 0;\n  padding: 0 !important;\n  height: 14px;\n`;\n\nconst StyledEventDataSection = styled(EventDataSection)`\n  ${SectionContents} {\n    flex: 1;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport ImageViewer from 'sentry/components/events/attachmentViewers/imageViewer';\n\nconst ImageVisualization = styled(ImageViewer)`\n  padding: 0;\n  height: 100%;\n  img {\n    width: auto;\n    height: 100%;\n    flex: 1;\n  }\n`;\n\nexport default ImageVisualization;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport Buttonbar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport {getRelativeTimeFromEventDateCreated} from 'sentry/components/events/contexts/utils';\nimport NotAvailable from 'sentry/components/notAvailable';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {EventAttachment, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {defined, formatBytesBase2} from 'sentry/utils';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nimport ImageVisualization from './imageVisualization';\n\ntype Props = ModalRenderProps & {\n  downloadUrl: string;\n  event: Event;\n  eventAttachment: EventAttachment;\n  onDelete: () => void;\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n};\n\nfunction Modal({\n  eventAttachment,\n  orgSlug,\n  projectSlug,\n  Header,\n  Body,\n  Footer,\n  event,\n  onDelete,\n  downloadUrl,\n}: Props) {\n  const {dateCreated, size, mimetype} = eventAttachment;\n  return (\n    <Fragment>\n      <Header closeButton>{t('Screenshot')}</Header>\n      <Body>\n        <GeralInfo>\n          <Label coloredBg>{t('Date Created')}</Label>\n          <Value coloredBg>\n            {dateCreated ? (\n              <Fragment>\n                <DateTime\n                  date={getDynamicText({\n                    value: dateCreated,\n                    fixed: new Date(1508208080000),\n                  })}\n                />\n                {getRelativeTimeFromEventDateCreated(\n                  event.dateCreated ? event.dateCreated : event.dateReceived,\n                  dateCreated,\n                  false\n                )}\n              </Fragment>\n            ) : (\n              <NotAvailable />\n            )}\n          </Value>\n\n          <Label>{t('Size')}</Label>\n          <Value>{defined(size) ? formatBytesBase2(size) : <NotAvailable />}</Value>\n\n          <Label coloredBg>{t('MIME Type')}</Label>\n          <Value coloredBg>{mimetype ?? <NotAvailable />}</Value>\n        </GeralInfo>\n\n        <StyledImageVisualization\n          attachment={eventAttachment}\n          orgId={orgSlug}\n          projectId={projectSlug}\n          event={event}\n        />\n      </Body>\n      <Footer>\n        <Buttonbar gap={1}>\n          <Confirm\n            confirmText={t('Delete')}\n            header={t(\n              'Screenshots help identify what the user saw when the event happened'\n            )}\n            message={t('Are you sure you wish to delete this screenshot?')}\n            priority=\"danger\"\n            onConfirm={onDelete}\n          >\n            <Button priority=\"danger\">{t('Delete')}</Button>\n          </Confirm>\n          <Button href={downloadUrl}>{t('Download')}</Button>\n        </Buttonbar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport default Modal;\n\nconst GeralInfo = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  margin-bottom: ${space(3)};\n`;\n\nconst Label = styled('div')<{coloredBg?: boolean}>`\n  color: ${p => p.theme.textColor};\n  padding: ${space(1)} ${space(1.5)} ${space(1)} ${space(1)};\n  ${p => p.coloredBg && `background-color: ${p.theme.backgroundSecondary};`}\n`;\n\nconst Value = styled(Label)`\n  white-space: pre-wrap;\n  word-break: break-all;\n  color: ${p => p.theme.subText};\n  padding: ${space(1)};\n  font-family: ${p => p.theme.text.familyMono};\n  ${p => p.coloredBg && `background-color: ${p.theme.backgroundSecondary};`}\n`;\n\nconst StyledImageVisualization = styled(ImageVisualization)`\n  img {\n    border-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nexport const modalCss = css`\n  width: auto;\n  height: 100%;\n  max-width: 100%;\n`;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Role} from 'sentry/components/acl/role';\nimport MenuItemActionLink from 'sentry/components/actions/menuItemActionLink';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelFooter} from 'sentry/components/panels';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {EventAttachment, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nimport DataSection from '../dataSection';\n\nimport ImageVisualization from './imageVisualization';\nimport Modal, {modalCss} from './modal';\n\ntype Props = {\n  event: Event;\n  onDelete: (attachmentId: EventAttachment['id']) => void;\n  organization: Organization;\n  projectSlug: Project['slug'];\n  screenshot: EventAttachment;\n};\n\nfunction Screenshot({event, organization, screenshot, projectSlug, onDelete}: Props) {\n  const orgSlug = organization.slug;\n  const [loadingImage, setLoadingImage] = useState(true);\n\n  function handleOpenVisualizationModal(\n    eventAttachment: EventAttachment,\n    downloadUrl: string\n  ) {\n    openModal(\n      modalProps => (\n        <Modal\n          {...modalProps}\n          event={event}\n          orgSlug={orgSlug}\n          projectSlug={projectSlug}\n          eventAttachment={eventAttachment}\n          downloadUrl={downloadUrl}\n          onDelete={() => onDelete(eventAttachment.id)}\n        />\n      ),\n      {modalCss}\n    );\n  }\n\n  function renderContent(screenshotAttachment: EventAttachment) {\n    const downloadUrl = `/api/0/projects/${organization.slug}/${projectSlug}/events/${event.id}/attachments/${screenshotAttachment.id}/`;\n\n    return (\n      <Fragment>\n        <StyledPanelBody\n          onClick={() =>\n            handleOpenVisualizationModal(\n              screenshotAttachment,\n              `${downloadUrl}?download=1`\n            )\n          }\n        >\n          <StyledImageVisualization\n            attachment={screenshotAttachment}\n            orgId={orgSlug}\n            projectId={projectSlug}\n            event={event}\n            onLoad={() => setLoadingImage(false)}\n            onError={() => setLoadingImage(false)}\n          />\n          {loadingImage && <StyledLoadingIndicator mini />}\n        </StyledPanelBody>\n        <StyledPanelFooter>\n          <StyledButtonbar gap={1}>\n            <Button\n              size=\"xsmall\"\n              onClick={() =>\n                handleOpenVisualizationModal(\n                  screenshotAttachment,\n                  `${downloadUrl}?download=1`\n                )\n              }\n            >\n              {t('View screenshot')}\n            </Button>\n            <DropdownLink\n              caret={false}\n              customTitle={\n                <Button\n                  aria-label={t('Actions')}\n                  size=\"xsmall\"\n                  icon={<IconEllipsis size=\"xs\" />}\n                />\n              }\n              anchorRight\n            >\n              <MenuItemActionLink\n                shouldConfirm={false}\n                title={t('Download')}\n                href={`${downloadUrl}?download=1`}\n              >\n                {t('Download')}\n              </MenuItemActionLink>\n              <MenuItemActionLink\n                shouldConfirm\n                title={t('Delete')}\n                onAction={() => onDelete(screenshotAttachment.id)}\n                header={t(\n                  'This image was captured around the time that the event occurred.'\n                )}\n                message={t('Are you sure you wish to delete this image?')}\n              >\n                {t('Delete')}\n              </MenuItemActionLink>\n            </DropdownLink>\n          </StyledButtonbar>\n        </StyledPanelFooter>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Role organization={organization} role={organization.attachmentsRole}>\n      {({hasRole}) => {\n        if (!hasRole) {\n          return null;\n        }\n\n        return (\n          <DataSection\n            title={t('Screenshot')}\n            description={t(\n              'This image was captured around the time that the event occurred.'\n            )}\n          >\n            <StyledPanel>{renderContent(screenshot)}</StyledPanel>\n          </DataSection>\n        );\n      }}\n    </Role>\n  );\n}\n\nexport default Screenshot;\n\nconst StyledPanel = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 0;\n  max-width: 100%;\n  height: 100%;\n  border: 0;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    max-width: 175px;\n  }\n`;\n\nconst StyledPanelBody = styled(PanelBody)`\n  border: 1px solid ${p => p.theme.border};\n  border-top-left-radius: ${p => p.theme.borderRadius};\n  border-top-right-radius: ${p => p.theme.borderRadius};\n  width: 100%;\n  min-height: 48px;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n`;\n\nconst StyledPanelFooter = styled(PanelFooter)`\n  padding: ${space(1)};\n  width: 100%;\n  border: 1px solid ${p => p.theme.border};\n  border-top: 0;\n  border-bottom-left-radius: ${p => p.theme.borderRadius};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n`;\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n`;\n\nconst StyledImageVisualization = styled(ImageVisualization)`\n  width: 100%;\n  z-index: 1;\n  border: 0;\n`;\n\nconst StyledButtonbar = styled(ButtonBar)`\n  justify-content: space-between;\n  .dropdown {\n    height: 24px;\n  }\n`;\n","import {Event} from 'sentry/types/event';\n\nimport ContextSummary from '../contextSummary';\n\ntype Props = {\n  event: Event;\n};\n\nfunction TagsHighlight({event}: Props) {\n  return <ContextSummary event={event} />;\n}\n\nexport default TagsHighlight;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {SectionContents} from 'sentry/components/events/eventDataSection';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nimport EventTags from '../eventTags/eventTags';\n\nimport DataSection from './dataSection';\nimport TagsHighlight from './tagsHighlight';\n\ntype Props = {\n  event: Event;\n  hasContext: boolean;\n  location: Location;\n  organization: Organization;\n  projectSlug: Project['slug'];\n};\n\nfunction Tags({event, organization, projectSlug, location, hasContext}: Props) {\n  return (\n    <StyledDataSection\n      title={t('Tags')}\n      description={t(\n        'Tags help you quickly both access related events and view the tag distribution for a set of events'\n      )}\n      data-test-id=\"event-tags\"\n    >\n      {hasContext && <TagsHighlight event={event} />}\n      <EventTags\n        event={event}\n        organization={organization}\n        projectId={projectSlug}\n        location={location}\n      />\n    </StyledDataSection>\n  );\n}\n\nexport default Tags;\n\nconst StyledDataSection = styled(DataSection)`\n  overflow: hidden;\n  ${SectionContents} {\n    overflow: hidden;\n  }\n`;\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {DataSection} from 'sentry/components/events/styles';\nimport space from 'sentry/styles/space';\n\nimport Screenshot from './screenshot';\nimport Tags from './tags';\n\ntype ScreenshotProps = React.ComponentProps<typeof Screenshot>;\n\ntype Props = Omit<React.ComponentProps<typeof Tags>, 'projectSlug' | 'hasContext'> & {\n  attachments: ScreenshotProps['screenshot'][];\n  onDeleteScreenshot: ScreenshotProps['onDelete'];\n  projectId: string;\n  hasContext?: boolean;\n  isBorderless?: boolean;\n  isShare?: boolean;\n};\n\nfunction EventTagsAndScreenshots({\n  projectId: projectSlug,\n  location,\n  event,\n  attachments,\n  onDeleteScreenshot,\n  organization,\n  isShare = false,\n  isBorderless = false,\n  hasContext = false,\n}: Props) {\n  const {tags = []} = event;\n\n  const screenshot = attachments.find(\n    ({name}) => name === 'screenshot.jpg' || name === 'screenshot.png'\n  );\n\n  if (!tags.length && !hasContext && (isShare || !screenshot)) {\n    return null;\n  }\n\n  const showScreenshot = !isShare && !!screenshot;\n  const showTags = !!tags.length || hasContext;\n\n  return (\n    <Wrapper\n      isBorderless={isBorderless}\n      showScreenshot={showScreenshot}\n      showTags={showTags}\n    >\n      {showScreenshot && (\n        <Screenshot\n          organization={organization}\n          event={event}\n          projectSlug={projectSlug}\n          screenshot={screenshot}\n          onDelete={onDeleteScreenshot}\n        />\n      )}\n      {showScreenshot && showTags && <Divider />}\n      {showTags && (\n        <Tags\n          organization={organization}\n          event={event}\n          projectSlug={projectSlug}\n          hasContext={hasContext}\n          location={location}\n        />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default EventTagsAndScreenshots;\n\nconst Wrapper = styled(DataSection)<{\n  isBorderless: boolean;\n  showScreenshot: boolean;\n  showTags: boolean;\n}>`\n  > * {\n    :first-child,\n    :last-child {\n      border: 0;\n      padding: 0;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: grid;\n    grid-template-columns: ${p =>\n      p.showScreenshot && p.showTags ? 'max-content auto 1fr' : '1fr'};\n    padding-top: 0;\n    padding-bottom: 0;\n    && {\n      > * {\n        :first-child,\n        :last-child {\n          border: 0;\n          padding: ${space(3)} 0;\n        }\n      }\n    }\n  }\n\n  ${p =>\n    p.isBorderless &&\n    css`\n      && {\n        padding-left: 0;\n        padding-right: 0;\n      }\n    `}\n`;\n\nconst Divider = styled('div')`\n  background: ${p => p.theme.innerBorder};\n  height: 1px;\n  width: 100%;\n  margin: ${space(3)} 0;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    height: 100%;\n    width: 1px;\n    margin: 0 ${space(3)};\n  }\n`;\n","import {memo, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport uniq from 'lodash/uniq';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport EventContexts from 'sentry/components/events/contexts';\nimport EventContextSummary from 'sentry/components/events/contextSummary';\nimport EventDevice from 'sentry/components/events/device';\nimport EventErrors, {Error} from 'sentry/components/events/errors';\nimport EventAttachments from 'sentry/components/events/eventAttachments';\nimport EventCause from 'sentry/components/events/eventCause';\nimport EventCauseEmpty from 'sentry/components/events/eventCauseEmpty';\nimport EventDataSection from 'sentry/components/events/eventDataSection';\nimport EventExtraData from 'sentry/components/events/eventExtraData/eventExtraData';\nimport EventSdk from 'sentry/components/events/eventSdk';\nimport EventTags from 'sentry/components/events/eventTags/eventTags';\nimport EventGroupingInfo from 'sentry/components/events/groupingInfo';\nimport EventPackageData from 'sentry/components/events/packageData';\nimport RRWebIntegration from 'sentry/components/events/rrwebIntegration';\nimport EventSdkUpdates from 'sentry/components/events/sdkUpdates';\nimport {DataSection} from 'sentry/components/events/styles';\nimport EventUserFeedback from 'sentry/components/events/userFeedback';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Entry,\n  EntryType,\n  Event,\n  ExceptionValue,\n  Group,\n  IssueAttachment,\n  Organization,\n  Project,\n  SharedViewOrganization,\n  Thread,\n} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport {Image} from 'sentry/types/debugImage';\nimport {isNotSharedOrganization} from 'sentry/types/utils';\nimport {defined, objectIsEmpty} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {projectProcessingIssuesMessages} from 'sentry/views/settings/project/projectProcessingIssues';\n\nimport findBestThread from './interfaces/threads/threadSelector/findBestThread';\nimport getThreadException from './interfaces/threads/threadSelector/getThreadException';\nimport EventEntry from './eventEntry';\nimport EventTagsAndScreenshot from './eventTagsAndScreenshot';\n\nconst MINIFIED_DATA_JAVA_EVENT_REGEX_MATCH =\n  /^(([\\w\\$]\\.[\\w\\$]{1,2})|([\\w\\$]{2}\\.[\\w\\$]\\.[\\w\\$]))(\\.|$)/g;\n\ntype ProGuardErrors = Array<Error>;\n\ntype Props = Pick<React.ComponentProps<typeof EventEntry>, 'route' | 'router'> & {\n  api: Client;\n  location: Location;\n  /**\n   * The organization can be the shared view on a public issue view.\n   */\n  organization: Organization | SharedViewOrganization;\n  project: Project;\n  className?: string;\n  event?: Event;\n  group?: Group;\n  isBorderless?: boolean;\n  isShare?: boolean;\n  showExampleCommit?: boolean;\n  showTagSummary?: boolean;\n};\n\nconst EventEntries = memo(\n  ({\n    organization,\n    project,\n    location,\n    api,\n    event,\n    group,\n    className,\n    router,\n    route,\n    isShare = false,\n    showExampleCommit = false,\n    showTagSummary = true,\n    isBorderless = false,\n  }: Props) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [proGuardErrors, setProGuardErrors] = useState<ProGuardErrors>([]);\n    const [attachments, setAttachments] = useState<IssueAttachment[]>([]);\n\n    const orgSlug = organization.slug;\n    const projectSlug = project.slug;\n    const orgFeatures = organization?.features ?? [];\n\n    const hasEventAttachmentsFeature = orgFeatures.includes('event-attachments');\n\n    useEffect(() => {\n      checkProGuardError();\n      recordIssueError();\n      fetchAttachments();\n    }, []);\n\n    function recordIssueError() {\n      if (!event || !event.errors || !(event.errors.length > 0)) {\n        return;\n      }\n\n      const errors = event.errors;\n      const errorTypes = errors.map(errorEntries => errorEntries.type);\n      const errorMessages = errors.map(errorEntries => errorEntries.message);\n\n      const platform = project.platform;\n\n      // uniquify the array types\n      trackAdvancedAnalyticsEvent('issue_error_banner.viewed', {\n        organization: organization as Organization,\n        group: event?.groupID,\n        error_type: uniq(errorTypes),\n        error_message: uniq(errorMessages),\n        ...(platform && {platform}),\n      });\n    }\n\n    async function fetchProguardMappingFiles(query: string): Promise<Array<DebugFile>> {\n      try {\n        const proguardMappingFiles = await api.requestPromise(\n          `/projects/${orgSlug}/${projectSlug}/files/dsyms/`,\n          {\n            method: 'GET',\n            query: {\n              query,\n              file_formats: 'proguard',\n            },\n          }\n        );\n        return proguardMappingFiles;\n      } catch (error) {\n        Sentry.captureException(error);\n        // do nothing, the UI will not display extra error details\n        return [];\n      }\n    }\n\n    function isDataMinified(str: string | null) {\n      if (!str) {\n        return false;\n      }\n\n      return !![...str.matchAll(MINIFIED_DATA_JAVA_EVENT_REGEX_MATCH)].length;\n    }\n\n    function hasThreadOrExceptionMinifiedFrameData(\n      definedEvent: Event,\n      bestThread?: Thread\n    ) {\n      if (!bestThread) {\n        const exceptionValues: Array<ExceptionValue> =\n          definedEvent.entries?.find(e => e.type === EntryType.EXCEPTION)?.data?.values ??\n          [];\n\n        return !!exceptionValues.find(exceptionValue =>\n          exceptionValue.stacktrace?.frames?.find(frame => isDataMinified(frame.module))\n        );\n      }\n\n      const threadExceptionValues = getThreadException(definedEvent, bestThread)?.values;\n\n      return !!(threadExceptionValues\n        ? threadExceptionValues.find(threadExceptionValue =>\n            threadExceptionValue.stacktrace?.frames?.find(frame =>\n              isDataMinified(frame.module)\n            )\n          )\n        : bestThread?.stacktrace?.frames?.find(frame => isDataMinified(frame.module)));\n    }\n\n    async function checkProGuardError() {\n      if (!event || event.platform !== 'java') {\n        setIsLoading(false);\n        return;\n      }\n\n      const hasEventErrorsProGuardMissingMapping = event.errors?.find(\n        error => error.type === 'proguard_missing_mapping'\n      );\n\n      if (hasEventErrorsProGuardMissingMapping) {\n        setIsLoading(false);\n        return;\n      }\n\n      const newProGuardErrors: ProGuardErrors = [];\n\n      const debugImages = event.entries?.find(e => e.type === EntryType.DEBUGMETA)?.data\n        .images as undefined | Array<Image>;\n\n      // When debugImages contains a 'proguard' entry, it must always be only one entry\n      const proGuardImage = debugImages?.find(\n        debugImage => debugImage?.type === 'proguard'\n      );\n\n      const proGuardImageUuid = proGuardImage?.uuid;\n\n      // If an entry is of type 'proguard' and has 'uuid',\n      // it means that the Sentry Gradle plugin has been executed,\n      // otherwise the proguard id wouldn't be in the event.\n      // But maybe it failed to upload the mappings file\n      if (defined(proGuardImageUuid)) {\n        if (isShare) {\n          setIsLoading(false);\n          return;\n        }\n\n        const proguardMappingFiles = await fetchProguardMappingFiles(proGuardImageUuid);\n\n        if (!proguardMappingFiles.length) {\n          newProGuardErrors.push({\n            type: 'proguard_missing_mapping',\n            message: projectProcessingIssuesMessages.proguard_missing_mapping,\n            data: {mapping_uuid: proGuardImageUuid},\n          });\n        }\n\n        setProGuardErrors(newProGuardErrors);\n        setIsLoading(false);\n        return;\n      }\n\n      if (proGuardImage) {\n        Sentry.withScope(function (s) {\n          s.setLevel('warning');\n          if (event.sdk) {\n            s.setTag('offending.event.sdk.name', event.sdk.name);\n            s.setTag('offending.event.sdk.version', event.sdk.version);\n          }\n          Sentry.captureMessage('Event contains proguard image but not uuid');\n        });\n      }\n\n      const threads: Array<Thread> =\n        event.entries?.find(e => e.type === EntryType.THREADS)?.data?.values ?? [];\n\n      const bestThread = findBestThread(threads);\n      const hasThreadOrExceptionMinifiedData = hasThreadOrExceptionMinifiedFrameData(\n        event,\n        bestThread\n      );\n\n      if (hasThreadOrExceptionMinifiedData) {\n        newProGuardErrors.push({\n          type: 'proguard_potentially_misconfigured_plugin',\n          message: tct(\n            'Some frames appear to be minified. Did you configure the [plugin]?',\n            {\n              plugin: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/#gradle\">\n                  Sentry Gradle Plugin\n                </ExternalLink>\n              ),\n            }\n          ),\n        });\n      }\n\n      setProGuardErrors(newProGuardErrors);\n      setIsLoading(false);\n    }\n\n    async function fetchAttachments() {\n      if (!event || isShare || !hasEventAttachmentsFeature) {\n        return;\n      }\n\n      try {\n        const response = await api.requestPromise(\n          `/projects/${orgSlug}/${projectSlug}/events/${event.id}/attachments/`\n        );\n        setAttachments(response);\n      } catch (error) {\n        Sentry.captureException(error);\n        addErrorMessage('An error occurred while fetching attachments');\n      }\n    }\n\n    function renderEntries(definedEvent: Event) {\n      const entries = definedEvent.entries;\n\n      if (!Array.isArray(entries)) {\n        return null;\n      }\n\n      return (entries as Array<Entry>).map((entry, entryIdx) => (\n        <ErrorBoundary\n          key={`entry-${entryIdx}`}\n          customComponent={\n            <EventDataSection type={entry.type} title={entry.type}>\n              <p>{t('There was an error rendering this data.')}</p>\n            </EventDataSection>\n          }\n        >\n          <EventEntry\n            projectSlug={projectSlug}\n            group={group}\n            organization={organization}\n            event={definedEvent}\n            entry={entry}\n            route={route}\n            router={router}\n          />\n        </ErrorBoundary>\n      ));\n    }\n\n    async function handleDeleteAttachment(attachmentId: IssueAttachment['id']) {\n      if (!event) {\n        return;\n      }\n\n      try {\n        await api.requestPromise(\n          `/projects/${orgSlug}/${projectSlug}/events/${event.id}/attachments/${attachmentId}/`,\n          {\n            method: 'DELETE',\n          }\n        );\n\n        setAttachments(attachments.filter(attachment => attachment.id !== attachmentId));\n      } catch (error) {\n        Sentry.captureException(error);\n        addErrorMessage('An error occurred while deleteting the attachment');\n      }\n    }\n\n    if (!event) {\n      return (\n        <LatestEventNotAvailable>\n          <h3>{t('Latest Event Not Available')}</h3>\n        </LatestEventNotAvailable>\n      );\n    }\n\n    const hasMobileScreenshotsFeature = orgFeatures.includes('mobile-screenshots');\n    const hasContext = !objectIsEmpty(event.user ?? {}) || !objectIsEmpty(event.contexts);\n    const hasErrors = !objectIsEmpty(event.errors) || !!proGuardErrors.length;\n\n    return (\n      <div className={className} data-test-id={`event-entries-loading-${isLoading}`}>\n        {hasErrors && !isLoading && (\n          <EventErrors\n            event={event}\n            orgSlug={orgSlug}\n            projectSlug={projectSlug}\n            proGuardErrors={proGuardErrors}\n          />\n        )}\n        {!isShare &&\n          isNotSharedOrganization(organization) &&\n          (showExampleCommit ? (\n            <EventCauseEmpty\n              event={event}\n              organization={organization}\n              project={project}\n            />\n          ) : (\n            <EventCause project={project} event={event} group={group} />\n          ))}\n        {event.userReport && group && (\n          <StyledEventUserFeedback\n            report={event.userReport}\n            orgId={orgSlug}\n            issueId={group.id}\n            includeBorder={!hasErrors}\n          />\n        )}\n        {showTagSummary &&\n          (hasMobileScreenshotsFeature ? (\n            <EventTagsAndScreenshot\n              event={event}\n              organization={organization as Organization}\n              projectId={projectSlug}\n              location={location}\n              isShare={isShare}\n              hasContext={hasContext}\n              isBorderless={isBorderless}\n              attachments={attachments}\n              onDeleteScreenshot={handleDeleteAttachment}\n            />\n          ) : (\n            (!!(event.tags ?? []).length || hasContext) && (\n              <StyledEventDataSection title={t('Tags')} type=\"tags\">\n                {hasContext && <EventContextSummary event={event} />}\n                <EventTags\n                  event={event}\n                  organization={organization as Organization}\n                  projectId={projectSlug}\n                  location={location}\n                />\n              </StyledEventDataSection>\n            )\n          ))}\n        {renderEntries(event)}\n        {hasContext && <EventContexts group={group} event={event} />}\n        {event && !objectIsEmpty(event.context) && <EventExtraData event={event} />}\n        {event && !objectIsEmpty(event.packages) && <EventPackageData event={event} />}\n        {event && !objectIsEmpty(event.device) && <EventDevice event={event} />}\n        {!isShare && hasEventAttachmentsFeature && (\n          <EventAttachments\n            event={event}\n            orgId={orgSlug}\n            projectId={projectSlug}\n            location={location}\n            attachments={attachments}\n            onDeleteAttachment={handleDeleteAttachment}\n          />\n        )}\n        {event.sdk && !objectIsEmpty(event.sdk) && <EventSdk sdk={event.sdk} />}\n        {!isShare && event?.sdkUpdates && event.sdkUpdates.length > 0 && (\n          <EventSdkUpdates event={{sdkUpdates: event.sdkUpdates, ...event}} />\n        )}\n        {!isShare && event.groupID && (\n          <EventGroupingInfo\n            projectId={projectSlug}\n            event={event}\n            showGroupingConfig={orgFeatures.includes('set-grouping-config')}\n          />\n        )}\n        {!isShare && hasEventAttachmentsFeature && (\n          <RRWebIntegration\n            event={event}\n            orgId={orgSlug}\n            projectId={projectSlug}\n            renderer={children => (\n              <StyledReplayEventDataSection type=\"context-replay\" title={t('Replay')}>\n                {children}\n              </StyledReplayEventDataSection>\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nconst StyledEventDataSection = styled(EventDataSection)`\n  /* Hiding the top border because of the event section appears at this breakpoint */\n  @media (max-width: 767px) {\n    &:first-of-type {\n      border-top: none;\n    }\n  }\n`;\n\nconst LatestEventNotAvailable = styled('div')`\n  padding: ${space(2)} ${space(4)};\n`;\n\nconst ErrorContainer = styled('div')`\n  /*\n  Remove border on adjacent context summary box.\n  Once that component uses emotion this will be harder.\n  */\n  & + .context-summary {\n    border-top: none;\n  }\n`;\n\nconst BorderlessEventEntries = styled(EventEntries)`\n  & ${/* sc-selector */ DataSection} {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n    padding: ${space(3)} 0 0 0;\n  }\n  & ${/* sc-selector */ DataSection}:first-child {\n    padding-top: 0;\n    border-top: 0;\n  }\n  & ${/* sc-selector */ ErrorContainer} {\n    margin-bottom: ${space(2)};\n  }\n`;\n\ntype StyledEventUserFeedbackProps = {\n  includeBorder: boolean;\n};\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)<StyledEventUserFeedbackProps>`\n  border-radius: 0;\n  box-shadow: none;\n  padding: ${space(3)} ${space(4)} 0 40px;\n  border: 0;\n  ${p => (p.includeBorder ? `border-top: 1px solid ${p.theme.innerBorder};` : '')}\n  margin: 0;\n`;\n\nconst StyledReplayEventDataSection = styled(EventDataSection)`\n  overflow: hidden;\n  margin-bottom: ${space(3)};\n`;\n\n// TODO(ts): any required due to our use of SharedViewOrganization\nexport default withOrganization<any>(withApi(EventEntries));\nexport {BorderlessEventEntries};\n","import {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {ExceptionValue, Frame} from 'sentry/types';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport {defined, trim} from 'sentry/utils';\n\nfunction getJavaScriptFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.function)) {\n    result += '  at ' + frame.function + '(';\n  } else {\n    result += '  at ? (';\n  }\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += frame.module;\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  result += ')';\n  return result;\n}\n\nfunction getRubyFrame(frame: Frame): string {\n  let result = '  from ';\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += '(' + frame.module + ')';\n  } else {\n    result += '?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ':in `' + frame.function + \"'\";\n  }\n  return result;\n}\n\nexport function getPHPFrame(frame: Frame, idx: number): string {\n  const funcName = frame.function === 'null' ? '{main}' : frame.function;\n  return `#${idx} ${frame.filename || frame.module}(${frame.lineNo}): ${funcName}`;\n}\n\nexport function getPythonFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.filename)) {\n    result += '  File \"' + frame.filename + '\"';\n  } else if (defined(frame.module)) {\n    result += '  Module \"' + frame.module + '\"';\n  } else {\n    result += '  ?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ', line ' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ', col ' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ', in ' + frame.function;\n  }\n  if (defined(frame.context)) {\n    frame.context.forEach(item => {\n      if (item[0] === frame.lineNo) {\n        result += '\\n    ' + trim(item[1]);\n      }\n    });\n  }\n  return result;\n}\n\nexport function getJavaFrame(frame: Frame): string {\n  let result = '    at';\n  if (defined(frame.module)) {\n    result += ' ' + frame.module + '.';\n  }\n  if (defined(frame.function)) {\n    result += frame.function;\n  }\n  if (defined(frame.filename)) {\n    result += '(' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nfunction ljust(str: string, len: number) {\n  return str + Array(Math.max(0, len - str.length) + 1).join(' ');\n}\n\nexport function getNativeFrame(frame: Frame): string {\n  let result = '  ';\n  if (defined(frame.package)) {\n    result += ljust(trimPackage(frame.package), 20);\n  }\n  if (defined(frame.instructionAddr)) {\n    result += ljust(frame.instructionAddr, 12);\n  }\n  result += ' ' + (frame.function || frame.symbolAddr);\n  if (defined(frame.filename)) {\n    result += ' (' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nexport function getJavaPreamble(exception: ExceptionValue): string {\n  let result = `${exception.type}: ${exception.value}`;\n  if (exception.module) {\n    result = `${exception.module}.${result}`;\n  }\n  return result;\n}\n\nfunction getPreamble(exception: ExceptionValue, platform: string | undefined): string {\n  switch (platform) {\n    case 'java':\n      return getJavaPreamble(exception);\n    default:\n      return exception.type + ': ' + exception.value;\n  }\n}\n\nfunction getFrame(frame: Frame, frameIdx: number, platform: string | undefined): string {\n  if (frame.platform) {\n    platform = frame.platform;\n  }\n  switch (platform) {\n    case 'javascript':\n      return getJavaScriptFrame(frame);\n    case 'ruby':\n      return getRubyFrame(frame);\n    case 'php':\n      return getPHPFrame(frame, frameIdx);\n    case 'python':\n      return getPythonFrame(frame);\n    case 'java':\n      return getJavaFrame(frame);\n    case 'objc':\n    // fallthrough\n    case 'cocoa':\n    // fallthrough\n    case 'native':\n      return getNativeFrame(frame);\n    default:\n      return getPythonFrame(frame);\n  }\n}\n\nexport default function render(\n  data: StacktraceType,\n  platform?: string,\n  exception?: ExceptionValue\n) {\n  const frames: string[] = [];\n\n  (data?.frames ?? []).forEach((frame, frameIdx) => {\n    frames.push(getFrame(frame, frameIdx, platform));\n  });\n\n  if (platform !== 'python') {\n    frames.reverse();\n  }\n\n  if (exception) {\n    frames.unshift(getPreamble(exception, platform));\n  }\n\n  return frames.join('\\n');\n}\n","import * as Sentry from '@sentry/react';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconInfo, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {ImageStatus} from 'sentry/types/debugImage';\n\ntype Props = {\n  status: ImageStatus;\n};\n\nfunction ProcessingIcon({status}: Props) {\n  switch (status) {\n    case ImageStatus.TIMEOUT:\n    case ImageStatus.FETCHING_FAILED: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t('The debug information file for this image could not be downloaded')}\n        >\n          <IconWarning color=\"yellow300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case ImageStatus.MALFORMED: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t('The debug information file for this image failed to process')}\n        >\n          <IconWarning color=\"yellow300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case ImageStatus.MISSING: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t('No debug information could be found in any of the specified sources')}\n        >\n          <IconWarning color=\"yellow300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case ImageStatus.FOUND: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t(\n            'Debug information for this image was found and successfully processed'\n          )}\n        >\n          <IconCheckmark color=\"green300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case ImageStatus.UNUSED: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t('The image was not required for processing the stack trace')}\n        >\n          <IconInfo color=\"gray200\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case ImageStatus.OTHER: {\n      return (\n        <Tooltip\n          containerDisplayMode=\"inline-flex\"\n          title={t('An internal error occurred while handling this image')}\n        >\n          <IconWarning color=\"yellow300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(new Error('Unknown image ProcessingIcon status'));\n      });\n      return null; // This shall not happen\n    }\n  }\n}\n\nexport default ProcessingIcon;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {ImageStatus} from 'sentry/types/debugImage';\n\nimport ProcessingItem from '../processing/item';\nimport ProcessingList from '../processing/list';\n\nimport ProcessingIcon from './processingIcon';\n\ntype Props = {\n  debug_status?: ImageStatus | null;\n  unwind_status?: ImageStatus | null;\n};\n\nfunction Processings({unwind_status, debug_status}: Props) {\n  const items: React.ComponentProps<typeof ProcessingList>['items'] = [];\n\n  if (debug_status) {\n    items.push(\n      <StyledProcessingItem\n        key=\"symbolication\"\n        type=\"symbolication\"\n        icon={<ProcessingIcon status={debug_status} />}\n      />\n    );\n  }\n\n  if (unwind_status) {\n    items.push(\n      <StyledProcessingItem\n        key=\"stack_unwinding\"\n        type=\"stack_unwinding\"\n        icon={<ProcessingIcon status={unwind_status} />}\n      />\n    );\n  }\n\n  return <StyledProcessingList items={items} />;\n}\n\nexport default Processings;\n\nconst StyledProcessingList = styled(ProcessingList)`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: -${space(1)};\n`;\n\nconst StyledProcessingItem = styled(ProcessingItem)`\n  :not(:last-child) {\n    padding-right: ${space(2)};\n  }\n  padding-bottom: ${space(1)};\n`;\n","import styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  icon: React.ReactElement;\n  type: 'stack_unwinding' | 'symbolication';\n  className?: string;\n};\n\nfunction Item({type, icon, className}: Props) {\n  function getLabel() {\n    switch (type) {\n      case 'stack_unwinding':\n        return t('Stack Unwinding');\n      case 'symbolication':\n        return t('Symbolication');\n      default: {\n        Sentry.captureException(new Error('Unknown Images Loaded processing item type'));\n        return null; // This shall not happen\n      }\n    }\n  }\n\n  return (\n    <Wrapper className={className}>\n      {icon}\n      {getLabel()}\n    </Wrapper>\n  );\n}\n\nexport default Item;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(0.5)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  white-space: nowrap;\n`;\n","import styled from '@emotion/styled';\n\ntype Props = {\n  items: Array<React.ReactElement>;\n  className?: string;\n};\n\nfunction List({items, className}: Props) {\n  if (!items.length) {\n    return null;\n  }\n\n  return <Wrapper className={className}>{items}</Wrapper>;\n}\n\nexport default List;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n","import {Fragment} from 'react';\n\nimport {DebugImage} from 'sentry/components/events/interfaces/debugMeta/types';\nimport {formatAddress, getImageRange} from 'sentry/components/events/interfaces/utils';\nimport {Image, ImageStatus} from 'sentry/types/debugImage';\nimport {defined} from 'sentry/utils';\n\nconst IMAGE_ADDR_LEN = 12;\nexport const IMAGE_AND_CANDIDATE_LIST_MAX_HEIGHT = 400;\n\nexport function getStatusWeight(status?: ImageStatus | null) {\n  switch (status) {\n    case null:\n    case undefined:\n    case ImageStatus.UNUSED:\n      return 0;\n    case ImageStatus.FOUND:\n      return 1;\n    default:\n      return 2;\n  }\n}\n\nexport function combineStatus(\n  debugStatus?: ImageStatus | null,\n  unwindStatus?: ImageStatus | null\n): ImageStatus {\n  const debugWeight = getStatusWeight(debugStatus);\n  const unwindWeight = getStatusWeight(unwindStatus);\n\n  const combined = debugWeight >= unwindWeight ? debugStatus : unwindStatus;\n  return combined || ImageStatus.UNUSED;\n}\n\nexport function getFileName(path?: string | null) {\n  if (!path) {\n    return undefined;\n  }\n  const directorySeparator = /^([a-z]:\\\\|\\\\\\\\)/i.test(path) ? '\\\\' : '/';\n  return path.split(directorySeparator).pop();\n}\n\nexport function normalizeId(id?: string) {\n  return id?.trim().toLowerCase().replace(/[- ]/g, '') ?? '';\n}\n\n// TODO(ts): When replacing debugMeta with debugMetaV2, also replace {type: string} with the Image type defined in 'sentry/types/debugImage'\nexport function shouldSkipSection(\n  filteredImages: Array<{type: string}>,\n  images: Array<{type: string} | null>\n) {\n  if (!!filteredImages.length) {\n    return false;\n  }\n\n  const definedImages = images.filter(image => defined(image));\n\n  if (!definedImages.length) {\n    return true;\n  }\n\n  if ((definedImages as Array<Image>).every(image => image.type === 'proguard')) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function getImageAddress(image: Image) {\n  const [startAddress, endAddress] = getImageRange(image as DebugImage);\n\n  if (startAddress && endAddress) {\n    return (\n      <Fragment>\n        <span>{formatAddress(startAddress, IMAGE_ADDR_LEN)}</span>\n        {' \\u2013 '}\n        <span>{formatAddress(endAddress, IMAGE_ADDR_LEN)}</span>\n      </Fragment>\n    );\n  }\n\n  return undefined;\n}\n","import styled from '@emotion/styled';\n\nimport DropdownButtonV2 from 'sentry/components/dropdownButtonV2';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype FilterOption = React.ComponentProps<typeof CompactSelect>['options'][0];\n\ntype Props = {\n  onChange: (value: string) => void;\n  placeholder: string;\n  query: string;\n  className?: string;\n  filterOptions?: FilterOption[];\n  filterSelections?: FilterOption[];\n  onFilterChange?: (options: FilterOption[]) => void;\n};\n\nfunction SearchBarAction({\n  onChange,\n  query,\n  placeholder,\n  filterOptions,\n  filterSelections,\n  onFilterChange,\n  className,\n}: Props) {\n  const trigger: React.ComponentProps<typeof CompactSelect>['trigger'] = ({\n    props,\n    ref,\n  }) => (\n    <StyledTrigger\n      size=\"small\"\n      priority={filterSelections && filterSelections.length > 0 ? 'primary' : 'default'}\n      ref={ref}\n      {...props}\n    >\n      {filterSelections?.length\n        ? tn('%s Active Filter', '%s Active Filters', filterSelections.length)\n        : t('Filter By')}\n    </StyledTrigger>\n  );\n\n  return (\n    <Wrapper className={className}>\n      {filterOptions && (\n        <CompactSelect\n          multiple\n          maxMenuHeight={400}\n          options={filterOptions}\n          value={filterSelections?.map(f => f.value)}\n          onChange={onFilterChange}\n          trigger={trigger}\n        />\n      )}\n      <StyledSearchBar\n        onChange={onChange}\n        query={query}\n        placeholder={placeholder}\n        blendWithFilter={!!filterOptions}\n      />\n    </Wrapper>\n  );\n}\n\nexport default SearchBarAction;\n\nconst Wrapper = styled('div')`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: ${space(1)};\n    flex-direction: column;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    width: 400px;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    width: 600px;\n  }\n`;\n\n// TODO(matej): remove this once we refactor SearchBar to not use css classes\n// - it could accept size as a prop\nconst StyledSearchBar = styled(SearchBar)<{blendWithFilter?: boolean}>`\n  width: 100%;\n  position: relative;\n\n  .search-input {\n    height: 34px;\n  }\n  .search-clear-form,\n  .search-input-icon {\n    height: 32px;\n    display: flex;\n    align-items: center;\n  }\n\n  ${p =>\n    p.blendWithFilter &&\n    `\n      .search-input,\n      .search-input:focus {\n        border-radius: ${p.theme.borderRadiusRight};\n        border-left-width: 0;\n      }\n    `}\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    .search-input,\n    .search-input:focus {\n      border-radius: ${p => p.theme.borderRadius};\n      border-left-width: 1px;\n    }\n  }\n`;\n\nconst StyledTrigger = styled(DropdownButtonV2)`\n  border-radius: ${p => p.theme.borderRadiusLeft};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    border-radius: ${p => p.theme.borderRadius};\n    margin-bottom: ${space(1)};\n  }\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAuthor from 'sentry/components/activity/author';\nimport ActivityItem from 'sentry/components/activity/item';\nimport Clipboard from 'sentry/components/clipboard';\nimport Link from 'sentry/components/links/link';\nimport {IconCopy} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {UserReport} from 'sentry/types';\nimport {escape, nl2br} from 'sentry/utils';\n\ntype Props = {\n  issueId: string;\n  orgId: string;\n  report: UserReport;\n  className?: string;\n};\n\nclass EventUserFeedback extends Component<Props> {\n  getUrl() {\n    const {report, orgId, issueId} = this.props;\n\n    return `/organizations/${orgId}/issues/${issueId}/events/${report.eventID}/`;\n  }\n\n  render() {\n    const {className, report} = this.props;\n    const user = report.user || {\n      name: report.name,\n      email: report.email,\n      id: '',\n      username: '',\n      ip_address: '',\n    };\n\n    return (\n      <div className={className}>\n        <ActivityItem\n          date={report.dateCreated}\n          author={{type: 'user', user}}\n          header={\n            <div>\n              <ActivityAuthor>{report.name}</ActivityAuthor>\n              <Clipboard value={report.email}>\n                <Email>\n                  {report.email}\n                  <StyledIconCopy size=\"xs\" />\n                </Email>\n              </Clipboard>\n              {report.eventID && (\n                <ViewEventLink to={this.getUrl()}>{t('View event')}</ViewEventLink>\n              )}\n            </div>\n          }\n        >\n          <p\n            dangerouslySetInnerHTML={{\n              __html: nl2br(escape(report.comments)),\n            }}\n          />\n        </ActivityItem>\n      </div>\n    );\n  }\n}\n\nexport default EventUserFeedback;\n\nconst Email = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  cursor: pointer;\n  margin-left: ${space(1)};\n`;\n\nconst ViewEventLink = styled(Link)`\n  font-weight: 300;\n  margin-left: ${space(1)};\n  font-size: 0.9em;\n`;\n\nconst StyledIconCopy = styled(IconCopy)`\n  margin-left: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\n\ntype Props = {\n  className?: string;\n  tooltip?: React.ReactNode;\n};\n\nfunction NotAvailable({tooltip, className}: Props) {\n  return (\n    <Tooltip title={tooltip} skipWrapper disabled={tooltip === undefined}>\n      <Wrapper className={className}>{'\\u2014'}</Wrapper>\n    </Tooltip>\n  );\n}\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n\nexport default NotAvailable;\n","// Candidate Processing Info\nexport enum CandidateProcessingStatus {\n  OK = 'ok',\n  MALFORMED = 'malformed',\n  ERROR = 'error',\n}\n\nexport enum SymbolType {\n  UNKNOWN = 'unknown',\n  BREAKPAD = 'breakpad',\n  ELF = 'elf',\n  MACHO = 'macho',\n  PDB = 'pdb',\n  PE = 'pe',\n  SOURCEBUNDLE = 'sourcebundle',\n  WASM = 'wasm',\n  PROGUARD = 'proguard',\n}\n\nexport enum ImageFeature {\n  has_sources = 'has_sources',\n  has_debug_info = 'has_debug_info',\n  has_unwind_info = 'has_unwind_info',\n  has_symbols = 'has_symbols',\n}\n\ntype CandidateProcessingInfoOkStatus = {\n  status: CandidateProcessingStatus.OK;\n};\n\ntype CandidateProcessingInfoOtherStatus = {\n  status: CandidateProcessingStatus.MALFORMED | CandidateProcessingStatus.ERROR;\n  details?: string;\n};\n\nexport type CandidateProcessingInfo =\n  | CandidateProcessingInfoOkStatus\n  | CandidateProcessingInfoOtherStatus;\n\n// Candidate Download Status\nexport enum CandidateDownloadStatus {\n  OK = 'ok',\n  MALFORMED = 'malformed',\n  NOT_FOUND = 'notfound',\n  ERROR = 'error',\n  NO_PERMISSION = 'noperm',\n  DELETED = 'deleted',\n  UNAPPLIED = 'unapplied',\n}\n\ntype ImageFeatures = {\n  [ImageFeature.has_sources]: boolean;\n  [ImageFeature.has_debug_info]: boolean;\n  [ImageFeature.has_unwind_info]: boolean;\n  [ImageFeature.has_symbols]: boolean;\n};\n\ntype CandidateFeatures = ImageFeatures;\n\ntype CandidateDownloadOkStatus = {\n  features: CandidateFeatures;\n  status: CandidateDownloadStatus.OK;\n  details?: string;\n};\n\ntype CandidateDownloadDeletedStatus = {\n  features: CandidateFeatures;\n  status: CandidateDownloadStatus.DELETED;\n  details?: string;\n};\n\ntype CandidateDownloadNotFoundStatus = {\n  status: CandidateDownloadStatus.NOT_FOUND;\n  details?: string;\n};\n\ntype CandidateDownloadUnAppliedStatus = {\n  features: CandidateFeatures;\n  status: CandidateDownloadStatus.UNAPPLIED;\n};\n\ntype CandidateDownloadOtherStatus = {\n  status:\n    | CandidateDownloadStatus.MALFORMED\n    | CandidateDownloadStatus.NO_PERMISSION\n    | CandidateDownloadStatus.ERROR;\n  details?: string;\n};\n\nexport type CandidateDownload =\n  | CandidateDownloadNotFoundStatus\n  | CandidateDownloadOkStatus\n  | CandidateDownloadDeletedStatus\n  | CandidateDownloadUnAppliedStatus\n  | CandidateDownloadOtherStatus;\n\ntype ImageCandidateBase = {\n  source: string;\n  location?: string;\n  source_name?: string;\n};\n\ntype InternalSource = {\n  cpuName: string;\n  dateCreated: string;\n  fileType: string | null;\n  filename: string;\n  location: string;\n  size: number;\n  symbolType: SymbolType;\n};\n\nexport type ImageCandidateOk = ImageCandidateBase & {\n  download: CandidateDownloadOkStatus;\n  debug?: CandidateProcessingInfo;\n  unwind?: CandidateProcessingInfo;\n};\n\nexport type ImageCandidateInternalOk = ImageCandidateBase &\n  InternalSource & {\n    download: CandidateDownloadOkStatus;\n    debug?: CandidateProcessingInfo;\n    unwind?: CandidateProcessingInfo;\n  };\n\nexport type ImageCandidateUnApplied = ImageCandidateBase &\n  InternalSource & {\n    download: CandidateDownloadUnAppliedStatus;\n    source: string;\n    source_name?: string;\n  };\n\ntype ImageCandidateOthers = ImageCandidateBase & {\n  download:\n    | CandidateDownloadNotFoundStatus\n    | CandidateDownloadDeletedStatus\n    | CandidateDownloadOtherStatus;\n  source: string;\n  location?: string;\n  source_name?: string;\n};\n\nexport type ImageCandidate =\n  | ImageCandidateOk\n  | ImageCandidateInternalOk\n  | ImageCandidateUnApplied\n  | ImageCandidateOthers;\n\n// Debug Status\nexport enum ImageStatus {\n  FOUND = 'found',\n  UNUSED = 'unused',\n  MISSING = 'missing',\n  MALFORMED = 'malformed',\n  FETCHING_FAILED = 'fetching_failed',\n  TIMEOUT = 'timeout',\n  OTHER = 'other',\n}\n\nexport type Image = {\n  candidates: Array<ImageCandidate>;\n  features: ImageFeatures;\n  type: string;\n  arch?: string;\n  code_file?: string | null;\n  code_id?: string;\n  debug_file?: string;\n  debug_id?: string;\n  debug_status?: ImageStatus | null;\n  image_addr?: string;\n  image_size?: number;\n  unwind_status?: ImageStatus | null;\n  uuid?: string;\n};\n","import {memo} from 'react';\n\nimport {Role} from 'sentry/components/acl/role';\nimport {IssueAttachment, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  attachment: IssueAttachment;\n  children: (downloadUrl: string | null) => React.ReactElement | null;\n  eventId: string;\n  organization: Organization;\n  projectId: string;\n};\n\nfunction AttachmentUrl({attachment, organization, eventId, projectId, children}: Props) {\n  function getDownloadUrl() {\n    return `/api/0/projects/${organization.slug}/${projectId}/events/${eventId}/attachments/${attachment.id}/`;\n  }\n\n  return (\n    <Role role={organization.attachmentsRole}>\n      {({hasRole}) => children(hasRole ? getDownloadUrl() : null)}\n    </Role>\n  );\n}\n\nexport default withOrganization(memo(AttachmentUrl));\n","import {createActions} from 'reflux';\n\nconst ComitterActions = createActions(['reset', 'load', 'loadError', 'loadSuccess']);\n\nexport default ComitterActions;\n","import {createStore} from 'reflux';\n\nimport CommitterActions from 'sentry/actions/committerActions';\nimport {Committer} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ntype State = {\n  // Use `getCommitterStoreKey` to generate key\n  [key: string]: {\n    committers?: Committer[];\n    committersError?: Error;\n    committersLoading?: boolean;\n  };\n};\n\ninterface CommitterStoreDefinition extends Reflux.StoreDefinition {\n  get(\n    orgSlug: string,\n    projectSlug: string,\n    eventId: string\n  ): {\n    committers?: Committer[];\n    committersError?: Error;\n    committersLoading?: boolean;\n  };\n  getState(): State;\n\n  init(): void;\n\n  load(orgSlug: string, projectSlug: string, eventId: string): void;\n  loadError(orgSlug: string, projectSlug: string, eventId: string, error: Error): void;\n  loadSuccess(\n    orgSlug: string,\n    projectSlug: string,\n    eventId: string,\n    data: Committer[]\n  ): void;\n\n  state: State;\n}\n\nexport const storeConfig: CommitterStoreDefinition = {\n  listenables: CommitterActions,\n  state: {},\n\n  init() {\n    this.reset();\n  },\n\n  reset() {\n    this.state = {};\n    this.trigger(this.state);\n  },\n\n  load(orgSlug: string, projectSlug: string, eventId: string) {\n    const key = getCommitterStoreKey(orgSlug, projectSlug, eventId);\n    this.state = {\n      ...this.state,\n      [key]: {\n        committers: undefined,\n        committersLoading: true,\n        committersError: undefined,\n      },\n    };\n\n    this.trigger(this.state);\n  },\n\n  loadError(orgSlug: string, projectSlug: string, eventId: string, err: Error) {\n    const key = getCommitterStoreKey(orgSlug, projectSlug, eventId);\n    this.state = {\n      ...this.state,\n      [key]: {\n        committers: undefined,\n        committersLoading: false,\n        committersError: err,\n      },\n    };\n\n    this.trigger(this.state);\n  },\n\n  loadSuccess(orgSlug: string, projectSlug: string, eventId: string, data: Committer[]) {\n    const key = getCommitterStoreKey(orgSlug, projectSlug, eventId);\n    this.state = {\n      ...this.state,\n      [key]: {\n        committers: data,\n        committersLoading: false,\n        committersError: undefined,\n      },\n    };\n\n    this.trigger(this.state);\n  },\n\n  get(orgSlug: string, projectSlug: string, eventId: string) {\n    const key = getCommitterStoreKey(orgSlug, projectSlug, eventId);\n    return {...this.state[key]};\n  },\n\n  getState() {\n    return this.state;\n  },\n};\n\nexport function getCommitterStoreKey(\n  orgSlug: string,\n  projectSlug: string,\n  eventId: string\n): string {\n  return `${orgSlug} ${projectSlug} ${eventId}`;\n}\n\nconst CommitterStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default CommitterStore;\n","import {useCallback, useEffect} from 'react';\n\nimport {getCommitters} from 'sentry/actionCreators/committers';\nimport {Client} from 'sentry/api';\nimport CommitterStore, {getCommitterStoreKey} from 'sentry/stores/committerStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport type {Committer, Group, Organization} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\n\nimport useOrganization from './useOrganization';\n\ninterface Props {\n  eventId: string;\n  projectSlug: string;\n  group?: Group;\n}\n\ninterface Result {\n  committers: Committer[];\n  fetching: boolean;\n}\n\nasync function fetchCommitters(\n  api: Client,\n  organization: Organization,\n  projectSlug: string,\n  eventId: string\n) {\n  const repoData = CommitterStore.get(organization.slug, projectSlug, eventId);\n\n  if ((!repoData.committers && !repoData.committersLoading) || repoData.committersError) {\n    await getCommitters(api, {\n      orgSlug: organization.slug,\n      projectSlug,\n      eventId,\n    });\n  }\n}\n\nfunction useCommitters({group, eventId, projectSlug}: Props): Result {\n  const api = useApi();\n  const organization = useOrganization();\n  const store = useLegacyStore(CommitterStore);\n\n  const loadCommitters = useCallback(async () => {\n    await fetchCommitters(api, organization!, projectSlug, eventId);\n  }, [api, organization, projectSlug, eventId]);\n\n  useEffect(() => {\n    // No committers if group doesn't have any releases\n    if (!group?.firstRelease || !organization) {\n      return;\n    }\n\n    loadCommitters();\n  }, [eventId, group?.firstRelease, loadCommitters, organization]);\n\n  const key = getCommitterStoreKey(organization?.slug ?? '', projectSlug, eventId);\n  return {\n    committers: store[key]?.committers ?? [],\n    fetching: store[key]?.committersLoading ?? false,\n  };\n}\n\nexport default useCommitters;\n","import CommitterActions from 'sentry/actions/committerActions';\nimport {Client} from 'sentry/api';\nimport CommitterStore, {getCommitterStoreKey} from 'sentry/stores/committerStore';\nimport {Committer} from 'sentry/types';\n\ntype ParamsGet = {\n  eventId: string;\n  orgSlug: string;\n  projectSlug: string;\n};\n\nexport function getCommitters(api: Client, params: ParamsGet) {\n  const {orgSlug, projectSlug, eventId} = params;\n  const path = `/projects/${orgSlug}/${projectSlug}/events/${eventId}/committers/`;\n\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRepo for the same\n  // repo to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  const storeKey = getCommitterStoreKey(orgSlug, projectSlug, eventId);\n  CommitterStore.state[storeKey] = {\n    ...CommitterStore.state[storeKey],\n    committersLoading: true,\n  };\n  CommitterActions.load(orgSlug, projectSlug, eventId);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: {committers: Committer[]}) => {\n      CommitterActions.loadSuccess(orgSlug, projectSlug, eventId, res.committers);\n    })\n    .catch(err => {\n      // NOTE: Do not captureException here as EventFileCommittersEndpoint returns\n      // 404 Not Found if the project did not setup Releases or Commits\n      CommitterActions.loadError(orgSlug, projectSlug, eventId, err);\n    });\n}\n","import {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\nimport xor from 'lodash/xor';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nconst crashReportTypes = ['event.minidump', 'event.applecrashreport'];\n\nconst GroupEventAttachmentsFilter = (props: WithRouterProps) => {\n  const {query, pathname} = props.location;\n  const {types} = query;\n  const allAttachmentsQuery = omit(query, 'types');\n  const onlyCrashReportsQuery = {\n    ...query,\n    types: crashReportTypes,\n  };\n\n  let activeButton = '';\n\n  if (types === undefined) {\n    activeButton = 'all';\n  } else if (xor(crashReportTypes, types).length === 0) {\n    activeButton = 'onlyCrash';\n  }\n\n  return (\n    <FilterWrapper>\n      <ButtonBar merged active={activeButton}>\n        <Button barId=\"all\" size=\"small\" to={{pathname, query: allAttachmentsQuery}}>\n          {t('All Attachments')}\n        </Button>\n        <Button\n          barId=\"onlyCrash\"\n          size=\"small\"\n          to={{pathname, query: onlyCrashReportsQuery}}\n        >\n          {t('Only Crash Reports')}\n        </Button>\n      </ButtonBar>\n    </FilterWrapper>\n  );\n};\n\nconst FilterWrapper = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: ${space(3)};\n`;\n\nexport {crashReportTypes};\nexport default withRouter(GroupEventAttachmentsFilter);\n"],"names":["withOrganizationRole","withOrganization","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","availableRoles","roleIds","map","r","id","includes","requiredIndex","indexOf","checkUserRole","isRenderFunc","MenuItemActionLink","className","props","noAnchor","withBorder","disabled","InnerActionLink","ActionLink","p","theme","textColor","overflowEllipsis","background","AlertLink","size","priority","icon","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","linkProps","omit","alert","backgroundLight","fontSizeMedium","border","space","text","lineHeightBody","AppKnownDataType","event","data","type","ID","subject","t","value","app_id","START_TIME","getRelativeTimeFromEventDateCreated","dateCreated","dateReceived","app_start_time","DEVICE_HASH","device_app_hash","TYPE","build_type","IDENTIFIER","app_identifier","NAME","app_name","VERSION","app_version","BUILD","app_build","appKnownDataValues","knownData","dataKeys","filter","appKnownDataValue","defined","key","knownDataDetails","getAppKnownDataDetails","push","meta","getMeta","appIgnoredDataValues","App","Fragment","getAppKnownData","getUnknownData","BrowserKnownDataType","name","version","operatingSystemKnownDataValues","operatingSystemKnownDataValue","getBrowserKnownDataDetails","browserKnownDataValues","Browser","getBrowserKnownData","ContextBlock","raw","length","mini","isContextData","getKnownData","Object","entries","k","startCase","DefaultContextType","DeviceKnownDataType","formatMemory","memory_size","free_memory","usable_memory","Number","isInteger","memory","formatBytesBase2","formatStorage","storage_size","free_storage","external_storage_size","external_free_storage","storage","commonDisplayResolutions","FAMILY","family","MODEL_ID","model_id","MODEL","model","undefined","RENDERED_MODEL","renderedModel","CPU_DESCRIPTION","cpu_description","ARCH","arch","BATTERY_LEVEL","battery_level","BATTERY_STATUS","battery_status","ORIENTATION","orientation","MEMORY","STORAGE","FREE_STORAGE","bytes","STORAGE_SIZE","EXTERNAL_STORAGE_SIZE","EXTERNAL_FREE_STORAGE","SIMULATOR","simulator","BOOT_TIME","boot_time","TIMEZONE","timezone","DEVICE_TYPE","device_type","ARCHS","archs","BRAND","brand","CHARGING","charging","CONNECTION_TYPE","connection_type","LANGUAGE","getFullLanguageDescription","language","LOW_MEMORY","low_memory","FREE_MEMORY","MEMORY_SIZE","USABLE_MEMORY","MANUFACTURER","manufacturer","ONLINE","online","SCREEN_DENSITY","screen_density","SCREEN_DPI","screen_dpi","SCREEN_HEIGHT_PIXELS","screen_height_pixels","SCREEN_RESOLUTION","screen_resolution","SCREEN_WIDTH_PIXELS","screen_width_pixels","deviceKnownDataValues","deviceKnownDataValue","getDeviceKnownDataDetails","subjectDataTestId","toLowerCase","deviceIgnoredDataValues","Device","inferredData","screenResolution","screenWidth","screenHeight","displayResolutionDescription","commonData","width","height","split","displayResolution","getInferredData","getDeviceKnownData","allData","knownKeys","GPUKnownDataType","NPOT_SUPPORT","npot_support","VENDOR_NAME","vendor_name","MULTI_THREAD_RENDERING","multi_threaded_rendering","API_TYPE","api_type","VENDOR_ID","vendor_id","gpuKnownDataValues","gpuKnownDataValue","getGpuKnownDataDetails","gpuIgnoredDataValues","GPU","unshift","getOperatingSystemKnownData","OperatingSystemKnownDataType","OperatingSystemIgnoredDataType","build","KERNEL_VERSION","kernel_version","ROOTED","rooted","getOperatingSystemKnownDataDetails","operatingSystemIgnoredDataValues","OperatingSystem","ReduxContextType","Component","this","render","clipHeight","RuntimeKnownDataType","RuntimeIgnoredDataType","runTimerKnownDataValues","runTimerKnownDataValue","getRuntimeKnownDataDetails","runtimeKnownDataValues","runtimeIgnoredDataValues","Runtime","getRuntimeKnownData","StateContextType","getStateTitle","upperFirst","primaryState","state","TraceKnownDataType","TRACE_ID","traceId","trace_id","features","actionButton","generateTraceTarget","SPAN_ID","span_id","PARENT_SPAN_ID","parent_span_id","OP_NAME","op","STATUS","status","TRANSACTION_NAME","eventTag","tags","find","tag","transactionName","transactionSummaryRouteWithQuery","orgSlug","slug","transaction","projectID","query","traceKnownDataValues","traceKnownDataValue","getTraceKnownDataDetails","traceIgnoredDataValues","Trace","useOrganization","getTraceKnownData","isSorted","UserKnownDataType","UserIgnoredDataType","EMAIL_REGEX","USERNAME","username","IP_ADDRESS","ip_address","EMAIL","email","subjectIcon","test","userKnownDataValues","userKnownDataValue","getUserKnownDataDetails","userIgnoredDataValues","DATA","User","removeFilterMaskedEntries","gravatar","getUserKnownData","CONTEXT_TYPES","default","require","app","device","os","runtime","browser","gpu","trace","getContextComponent","plugins","getSourcePlugin","pluginContexts","contextType","plugin","contexts","eventDateCreated","timestamp","showTimestamp","dateTime","moment","isValid","relativeTime","from","RelativeTime","locale","sentryAppLanguageCode","languageAbbreviation","countryAbbreviation","languageName","Intl","DisplayNames","of","toUpperCase","subText","EventAttachmentActions","handlePreview","onPreview","attachmentId","url","withPreviewButton","hasPreview","previewIsOpen","onDelete","gap","confirmText","message","onConfirm","title","DownloadButton","Button","withApi","Chunk","isLoading","UNSAFE_componentWillMount","syncPlugin","componentDidUpdate","prevProps","group","alias","sourcePlugin","setState","pluginLoading","getTitle","toTitleCase","ContextComponent","isObjectValueEmpty","values","v","Contexts","objectIsEmpty","Item","Wrapper","classNames","Details","innerBorder","breakpoints","small","ContextSummaryNoSummary","lowerCaseName","startsWith","formattedName","replace","majorVersion","ContextSummaryDevice","keys","generateClassName","subTitle","deviceName","renderName","isParagraph","Subject","ContextSummaryGeneric","unknownTitle","renderValue","ContextSummaryGPU","versionElement","ContextSummaryOS","ContextSummaryUser","renderUserDetails","userDetails","userTitle","context","client_os","KNOWN_CONTEXTS","ContextSummary","contextCount","filterContexts","_k","d","index","DeviceInterface","extras","wrapTitle","JavascriptProcessingErrors","keyMapping","image_uuid","image_name","image_path","ErrorItem","isOpen","shouldComponentUpdate","_nextProps","nextState","cleanedData","errorData","separator","path","splice","join","server_time","sdk_time","diff","humanize","renderPath","renderTroubleshootingLink","error","tct","docsLink","StyledExternalLink","StyledListItem","OverallInfo","ToggleButton","handleToggle","ListItem","ExternalLink","Errors","componentDidMount","checkSourceCodeErrors","nextProps","api","projectSlug","release","releaseVersion","releaseArtifacts","requestPromise","encodeURIComponent","method","Sentry","errors","sourceCodeErrors","pathNames","sourceCodeError","pathName","getURLPathname","fetchReleaseArtifacts","URL","pathname","proGuardErrors","dist","eventDistribution","eventErrors","uniqWith","isEqual","StyledDataSection","StyledAlert","showIcon","expand","ErrorList","symbol","errorIdx","JS_MISSING_SOURCE","releaseArtifact","releaseArt","releaseArtifactDistribution","tn","DataSection","Alert","List","getAttachmentUrl","withPrefix","orgId","projectId","attachment","ImageViewer","onLoad","onError","Container","src","PanelItem","JsonViewer","AsyncComponent","getEndpoints","renderBody","attachmentJson","json","JSON","parse","e","StyledContextData","maxDefaultDepth","preserveQuotes","style","jsonConsts","ContextData","COLORS","black","white","redDim","red","greenDim","green","yellowDim","yellow","blueDim","blue","magentaDim","magenta","cyanDim","cyan","LogFileViewer","attachmentText","spans","ansicolor","idx","color","bgColor","dim","bright","fontWeight","CodeWrapper","RRWebJsonViewer","showRawJson","StyledPanelAlert","replayLink","jsonLink","PanelAlert","EventAttachmentsCrashReportsNotice","location","groupId","settingsUrl","attachmentsUrl","types","crashReportTypes","attachmentsLink","settingsLink","EventAttachments","expanded","attachmentPreviews","getInlineAttachmentRenderer","mimetype","hasInlineAttachmentRenderer","renderInlineAttachment","AttachmentComponent","attachmentPreviewIsOpen","AttachmentPreviewWrapper","togglePreview","attachments","onDeleteAttachment","crashFileStripped","metadata","stripped_crash","lastAttachmentPreviewed","groupID","StyledPanelTable","headers","Name","Size","eventId","_attachmentId","display","PanelTable","EventCause","project","isExpanded","setIsExpanded","useState","committers","useCommitters","commits","commitsWithAuthors","flatMap","author","commit","uniqBy","getUniqueCommitsWithAuthors","ExpandButton","isCircled","slice","EXAMPLE_COMMITS","DUMMY_COMMIT","getDynamicText","Math","floor","random","fixed","lastSeen","lastLogin","isSuperuser","isAuthenticated","emails","isManaged","lastActive","isStaff","identities","isActive","has2fa","canReset2fa","authenticators","dateJoined","options","stacktraceOrder","clock24Hours","avatarType","flags","newsletter_consent_prompt","hasPasswordAuth","permissions","Set","experiments","subtract","format","repository","integrationId","externalSlug","provider","RepositoryStatus","releases","SUSPECT_COMMITS_FEATURE","EventCauseEmpty","shouldShow","fetchData","_prevProps","prevState","trackAnalytics","promptCanShow","eventID","promptsCheck","organizationId","feature","promptIsDismissed","handleClick","action","eventKey","promptsUpdate","then","trackAdvancedAnalyticsEvent","project_id","platform","StyledPanel","dashedBorder","BoxHeader","Description","ButtonList","DocsButton","SnoozeButton","DismissButton","ExampleCommitPanel","customAvatar","CustomAvatar","Panel","gray300","EventExtraDataType","CRASHED_PROCESS","getEventExtraDataKnownDataDetails","EventDataContent","getEventExtraDataKnownData","EventExtraData","memo","setRaw","toggleRaw","MetaData","object","prop","required","isNil","Annotated","objectKey","toBeReturned","isFunction","EventSdk","sdk","EventTags","streamPath","generateQueryWithTag","EventPackageData","longKeys","packages","RRWebIntegration","renderLoading","attachmentList","renderer","component","urls","SdkUpdates","sdkUpdates","eventDataSectinContent","sdkUpdate","suggestion","getSdkUpdateSuggestion","thread","exceptionEntry","entry","exceptionData","exceptionDataValues","exceptionDataValue","threadId","every","crashed","stacktrace","rawStacktrace","getException","Level","level","searchTerm","BreadcrumbLevelType","LevelTag","Tag","Background","Category","category","fontSizeSmall","Summary","kvData","StyledCode","ContextDataWrapper","withAnnotatedText","familyMono","backgroundSecondary","borderRadius","Default","breadcrumb","linkedEvent","FormatMessage","withProjects","projects","loadingProjects","content","maybeProject","eventSlug","generateEventSlug","getTransactionDetailsUrl","Exception","dataValue","Http","statusCode","status_code","match","stringify","renderUrl","isBrowser","window","errorMessage","LinkedEvent","route","router","storedLinkedEvent","setStoredLinkedEvent","removeStoredLinkedEvent","initialValue","sessionStorageValue","sessionStorage","getItem","useEffect","serializedState","setItem","removeItem","useSessionStorage","eventIdLookup","setEventIdLookup","hasError","setHasError","useApi","onRouteLeave","async","response","addErrorMessage","handleXhrErrorResponse","fetchEventById","setRouteLeaveHook","shortId","fetchIssueByGroupId","StyledPlaceholder","StyledShortId","avatar","avatarSize","hideName","ShortId","Placeholder","Data","event_id","BreadcrumbType","timeFormat","timeDateFormat","getAbsoluteTimeFormat","shouldUse24Hours","Time","displayRelativeTime","date","time","displayTime","relativeTimestamp","parsedTimestamp","displayMilliSeconds","milliseconds","parsedTime","parsedTimeToCompareWith","formattedTime","formattedTimeToCompareWith","timeDiff","abs","shortRelativeTime","getDuration","round","getRelativeTime","getFormattedTimestamp","containerDisplayMode","disableForVisualTest","Breadcrumb","scrollbarSize","description","red300","css","cache","CellMeasurerCache","fixedWidth","minHeight","Breadcrumbs","breadcrumbs","onSwitchTimeFormat","emptyMessage","scrollToIndex","setScrollToIndex","setScrollbarSize","listRef","contentRef","useRef","updateGrid","clearAll","forceUpdateGrid","renderRow","parent","isLastItem","columnIndex","rowIndex","measure","String","current","offsetHeight","StyledIconSort","rotated","isEmpty","Content","ref","disableHeight","onResize","StyledList","el","deferredMeasurementCache","overscanRowCount","rowCount","rowHeight","rowRenderer","onScrollbarPresenceChange","scrollToAlignment","IconSort","BreadcrumbsContainer","eventType","filteredByFilter","filteredBySearch","filterOptions","filterSelections","getFilterOptions","crumbs","typeOptions","filterTypes","foundFilterType","findIndex","f","levels","leadingItems","label","getFilterTypes","filterLevels","indexType","indexLevel","some","LevelWrap","getFilterLevels","typeOption","filterBySearch","newSearchTerm","trim","searchFor","toLocaleLowerCase","obj","pick","info","handleResetFilter","handleResetSearchBar","virtualCrumb","getVirtualCrumb","transformedCrumbs","transformCrumbs","loadBreadcrumbs","target","position","actions","StyledSearchBarAction","placeholder","onChange","onFilterChange","newfilterOptions","newfilteredByFilter","selectedFilterOptions","checkedTypeOptions","option","checkedLevelOptions","filteredCrumb","has","getFilteredCrumbsByFilter","isCentered","hasActiveFilter","emptyAction","getEmptyMessage","SearchBarAction","effective_directive","referrer","linkOverrides","CSPHelp","dangerouslySetInnerHTML","__html","effectiveDirectives","StyledP","baseLink","getLinkHref","getLink","CspInterface","view","cleanData","original_policy","merged","active","barId","toggleView","bind","TypeError","getView","FEATURE_TOOLTIPS","symtab","debug","unwind","sources","DebugFileFeature","available","tooltipText","StyledTag","getImageStatusDetails","DebugImage","image","showDetails","renderStatus","getImageStatusText","SymbolicationStatus","ImageProp","combinedStatus","combineStatus","debug_status","unwind_status","startAddress","endAddress","getImageRange","codeFile","getFileName","code_file","debugFile","debug_file","showDebugFile","showAvailability","showCodeId","code_id","debug_id","legacyRender","debugIdElement","ImageSubtext","Formatted","formattedImageStartAddress","formatAddress","formattedImageEndAddress","DebugImageItem","ImageInfoGroup","renderIconElement","AddressDivider","fullWidth","ImageTitle","CodeFile","DebugFile","StatusLine","has_symbols","has_debug_info","has_unwind_info","has_sources","access","hasAccess","ImageActions","fontSizeLarge","ImageForBar","frame","onShowAllImages","MatchedFunctionWrapper","MatchedFunctionCaption","ResetAddressFilterCaption","blue300","normalizeId","defaultHeight","DebugMeta","PureComponent","debugImages","filteredImages","showUnused","createRef","store","checked","DebugMetaActions","unsubscribeFromStore","DebugMetaStore","onStoreChange","filterImages","foundFrame","getPanelBodyHeight","componentWillUnmount","panelBodyHeight","panelBodyRef","filterImage","needle","parseAddress","image_addr","relMatch","idSearchTerm","getFrame","getDebugImages","isValidImage","frames","_","addrMode","instructionAddr","images","filtered","sort","a","b","getNoImagesMessage","toggle","handleShowUnused","renderToolbar","ToolbarWrapper","Label","handleChangeShowDetails","handleChangeShowUnused","SearchInputWrapper","StyledSearchBar","handleChangeFilter","getListHeight","renderImageList","isScrolling","filteredImage","shouldSkipSection","DebugImagesPanel","xlarge","SearchBar","ImageStatus","scope","setLevel","Error","scrollbarWidth","xxlarge","onOpenImageDetailsModal","codeFilename","debugFilename","imageAddress","getImageAddress","StatusColumn","ImageColumn","FileName","CodeFilename","ImageAddress","Column","DebugFilesColumn","layout","IMAGE_INFO_UNAVAILABLE","filteredImagesByFilter","filteredImagesBySearch","filterImagesBySearchTerm","getScrollbarWidth","projSlug","imageCodeId","imageDebugId","mod","Modal","modalCss","openModal","deps","onReprocessEvent","handleReprocessEvent","onClose","handleCloseImageDetailsModal","getFilteredImagesByFilter","openReprocessEventModal","openImageDetailsModal","handleOpenImageDetailsModal","unsubscribeFromDebugMetaStore","onDebugMetaStoreChange","getRelevantImages","panelTableRef","clientWidth","querySelector","panelTableHeight","relevantImages","formattedRelevantImages","releventImage","unusedImages","defaultFilterSelections","opt","checkedOptions","renderList","IMAGE_AND_CANDIDATE_LIST_MAX_HEIGHT","showFilters","section","toggleImagesLoaded","TitleWrapper","Title","handleChangeSearchTerm","withRouter","Mechanism","mechanism","help_link","handled","errno","signal","mach_exception","linkElement","isUrl","descriptionElement","header","body","StyledIconInfo","pills","number","exception","code","code_name","forOwn","isObject","StyledPills","iconStyle","gray500","Pills","IconInfo","StackTrace","stackView","chainedException","newestFirst","groupingCurrentLevel","hasHierarchicalGrouping","expandFirstFrame","useContext","OrganizationContext","STACK_VIEW","inApp","includeSystemFrames","isNativePlatform","ExceptionTitle","exceptionModule","exc","excIdx","module","StyledPre","STACK_TYPE","reverse","RawContent","loading","crashReport","isNative","fetchAppleCrashReport","getAppleCrashReportEndpoint","minified","getContent","output","downloadButton","rawStacktraceContent","appleCrashReportEndpoint","DownloadBtnWrapper","baseUrl","hasNativeStackTraceV2","stackType","nativeV2","CrashActions","hasSystemFrames","hasMinified","notify","setStackType","setStackView","ButtonGroupWrapper","CrashTitle","beforeTitle","hideGuide","StyledH3","showUnderline","setNewestFirst","isStacktraceNewestFirst","commonCrashHeaderProps","newStackView","newStackType","newNewestFirst","NoStackTraceMessage","stackTraceNotFound","framePlatform","getPlatform","recentFirst","fullStackTrace","hasVerboseFunctionNames","rawFunction","function","hasAbsoluteFilePaths","filename","hasAbsoluteAddresses","hasAppOnlyFrames","hasNewestFirst","showPermalink","GenericInterface","Message","params","arrayData","i","objectData","renderParams","RichHttpContentClippedBoxBodySection","inferredContentType","transformedData","getTransformedData","defaultClipped","RichHttpContentClippedBoxKeyValueList","defaultCollapsed","RichHttpContent","fragment","cookies","env","RequestInterface","fullUrl","getFullUrl","parsedUrl","document","createElement","isPartial","MonoButton","Header","Path","maxLength","leftTrim","StyledIconOpen","hostname","getCurlCommand","IconOpen","StacktraceInterface","TemplateInterface","registers","components","threadInfo","getThreadStacktrace","threadException","getThreadException","matchedStacktraceAndExceptionThread","crashedInfo","relevantFrame","getRelevantFrame","pieces","trimFilename","package","trimPackage","Grid","GridCell","Option","details","optionName","InnerCell","skipWrapper","isBold","SelectedOption","ThreadId","TextOverflow","ThreadSelector","threads","activeThread","getDropDownItem","filterThreadInfo","getItems","notCrashed","partition","StyledDropdownAutoComplete","items","onSelect","item","maxHeight","searchPlaceholder","noResultsMessage","menuHeader","rootClassName","closeOnSelect","emptyHidesInput","selectedItem","StyledDropdownButton","align","DropdownAutoComplete","large","DropdownButton","getIntendedStackView","Threads","findBestThread","handleChangeNewestFirst","hasMoreThanOneThread","renderPills","renderContent","stackTrace","exceptionFramePlatform","threadFramePlatform","childrenProps","current_tree_label","finest_tree_label","current_level","EntryType","console","kebabCase","StyledEventDataSection","EventDataSection","SectionContents","eventAttachment","Body","Footer","downloadUrl","closeButton","GeralInfo","coloredBg","Value","Date","StyledImageVisualization","ImageVisualization","Screenshot","screenshot","loadingImage","setLoadingImage","handleOpenVisualizationModal","modalProps","screenshotAttachment","StyledPanelBody","StyledLoadingIndicator","StyledPanelFooter","StyledButtonbar","caret","customTitle","anchorRight","shouldConfirm","onAction","attachmentsRole","PanelBody","PanelFooter","LoadingIndicator","ButtonBar","TagsHighlight","Tags","hasContext","EventTagsAndScreenshots","onDeleteScreenshot","isShare","isBorderless","showScreenshot","showTags","Divider","MINIFIED_DATA_JAVA_EVENT_REGEX_MATCH","EventEntries","showExampleCommit","showTagSummary","setIsLoading","setProGuardErrors","setAttachments","orgFeatures","hasEventAttachmentsFeature","isDataMinified","str","matchAll","handleDeleteAttachment","newProGuardErrors","proGuardImage","debugImage","proGuardImageUuid","uuid","file_formats","fetchProguardMappingFiles","projectProcessingIssuesMessages","mapping_uuid","s","setTag","bestThread","definedEvent","exceptionValue","threadExceptionValues","threadExceptionValue","hasThreadOrExceptionMinifiedFrameData","checkProGuardError","errorTypes","errorEntries","errorMessages","error_type","uniq","error_message","recordIssueError","fetchAttachments","LatestEventNotAvailable","hasMobileScreenshotsFeature","hasErrors","isNotSharedOrganization","userReport","StyledEventUserFeedback","report","issueId","includeBorder","entryIdx","customComponent","renderEntries","showGroupingConfig","StyledReplayEventDataSection","ErrorContainer","BorderlessEventEntries","EventUserFeedback","ljust","len","max","frameIdx","result","lineNo","colNo","getJavaScriptFrame","getRubyFrame","funcName","getPHPFrame","forEach","getPythonFrame","getJavaFrame","symbolAddr","getNativeFrame","getJavaPreamble","getPreamble","Processings","StyledProcessingItem","StyledProcessingList","ProcessingList","ProcessingItem","getLabel","getStatusWeight","debugStatus","unwindStatus","directorySeparator","pop","definedImages","multiple","maxMenuHeight","trigger","StyledTrigger","blendWithFilter","medium","borderRadiusRight","DropdownButtonV2","borderRadiusLeft","getUrl","Email","StyledIconCopy","ViewEventLink","nl2br","escape","comments","Link","IconCopy","NotAvailable","tooltip","gray200","CandidateProcessingStatus","SymbolType","ImageFeature","CandidateDownloadStatus","AttachmentUrl","createActions","storeConfig","listenables","CommitterActions","init","reset","load","getCommitterStoreKey","committersLoading","committersError","loadError","err","loadSuccess","get","getState","createStore","makeSafeRefluxStore","useLegacyStore","CommitterStore","loadCommitters","useCallback","repoData","storeKey","res","catch","getCommitters","fetchCommitters","firstRelease","fetching","GroupEventAttachmentsFilter","allAttachmentsQuery","onlyCrashReportsQuery","activeButton","xor","FilterWrapper"],"sourceRoot":""}