{"version":3,"file":"chunks/app_components_charts_errorPanel_tsx-app_components_links_listLink_tsx-app_views_performance_-e7a6ab.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/markArea.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/performance/anomalies/anomaliesQuery.tsx","webpack:///./app/utils/performance/contexts/metricsEnhancedSetting.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/views/performance/landing/widgets/types.tsx","webpack:///./app/views/performance/landing/widgets/utils.tsx","webpack:///./app/views/performance/landing/widgets/widgetDefinitions.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/anomaliesTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/anomalyChart.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/index.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx"],"sourcesContent":["import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is avialable but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import 'echarts/lib/component/markArea';\n\nimport type {MarkAreaComponentOption} from 'echarts';\n\n/**\n * eCharts markArea\n *\n * See https://echarts.apache.org/en/option.html#series-line.markArea\n */\nexport default function MarkArea(\n  props: MarkAreaComponentOption\n): MarkAreaComponentOption {\n  return {\n    ...props,\n  };\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {EventsStatsData, Organization} from 'sentry/types';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\nimport {ANOMALY_FLAG} from 'sentry/views/performance/transactionSummary/transactionAnomalies/utils';\n\ntype AnomaliesProps = {};\ntype RequestProps = DiscoverQueryProps & AnomaliesProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<AnomaliesProps>, 'tableData'> & {\n  data: AnomalyPayload | null;\n};\n\ntype Props = Omit<RequestProps, 'orgSlug'> & {\n  children: (props: ChildrenProps) => React.ReactNode;\n  organization: Organization;\n};\n\nexport type AnomalyConfidence = 'high' | 'low';\n\n// Should match events stats data in format.\ntype AnomalyStatsData = {\n  data: EventsStatsData;\n  end?: number;\n  start?: number;\n};\n\n// Anomaly info describes what the anomaly service determines is an 'anomaly area'.\nexport type AnomalyInfo = {\n  confidence: AnomalyConfidence;\n  end: number;\n  expected: number;\n  id: string;\n  received: number;\n  start: number;\n};\n\nexport type AnomalyPayload = {\n  anomalies: AnomalyInfo[];\n  y: AnomalyStatsData;\n  yhat_lower: AnomalyStatsData;\n  yhat_upper: AnomalyStatsData;\n};\n\nfunction transformStatsTimes(stats: AnomalyStatsData) {\n  stats.data.forEach(d => (d[0] = d[0] * 1000));\n  return stats;\n}\nfunction transformAnomaliesTimes(anoms: AnomalyInfo[]) {\n  anoms.forEach(a => {\n    a.start = a.start * 1000;\n    a.end = a.end * 1000;\n  });\n  return anoms;\n}\n\nfunction transformPayload(payload: AnomalyPayload): AnomalyPayload {\n  const newPayload = {...payload};\n  if (!payload.y || !payload.yhat_lower || !payload.yhat_upper || !payload.anomalies) {\n    return newPayload;\n  }\n\n  newPayload.y = transformStatsTimes(payload.y);\n  newPayload.yhat_upper = transformStatsTimes(payload.yhat_upper);\n  newPayload.yhat_lower = transformStatsTimes(payload.yhat_lower);\n  newPayload.anomalies = transformAnomaliesTimes(payload.anomalies);\n  return newPayload;\n}\n\nfunction AnomaliesSeriesQuery(props: Props) {\n  if (!props.organization.features.includes(ANOMALY_FLAG)) {\n    return (\n      <div>\n        {props.children({data: null, isLoading: false, error: null, pageLinks: null})}\n      </div>\n    );\n  }\n\n  return (\n    <GenericDiscoverQuery<AnomalyPayload, {}>\n      route=\"transaction-anomaly-detection\"\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          data: tableData && tableData.y ? transformPayload(tableData) : null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(AnomaliesSeriesQuery);\n","import {Dispatch, ReactNode, useReducer} from 'react';\n\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricsEnhancedSettingContext {\n  autoSampleState: AutoSampleState;\n  hideSinceMetricsOnly: boolean;\n  memoizationKey: string;\n  metricSettingState: MEPState | null;\n  setAutoSampleState: Dispatch<AutoSampleState>;\n  setMetricSettingState: Dispatch<MEPState>;\n  shouldQueryProvideMEPMetricParams: boolean;\n  shouldQueryProvideMEPParams: boolean;\n  shouldQueryProvideMEPTransactionParams: boolean;\n}\n\nconst [_MEPSettingProvider, _useMEPSettingContext, _MEPSettingContext] =\n  createDefinedContext<MetricsEnhancedSettingContext>({\n    name: 'MetricsEnhancedSettingContext',\n  });\n\nexport const MEPConsumer = _MEPSettingContext.Consumer;\n\n/**\n * These will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n * \"Unset\" should be the initial state before any queries return for the first time.\n */\nexport enum AutoSampleState {\n  unset = 'unset',\n  metrics = 'metrics',\n  transactions = 'transactions',\n}\n\n/**\n * Metrics/transactions will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n */\nexport enum MEPState {\n  auto = 'auto',\n  metricsOnly = 'metricsOnly',\n  transactionsOnly = 'transactionsOnly',\n}\n\nconst storageKey = 'performance.metrics-enhanced-setting';\nexport class MEPSetting {\n  static get(): MEPState | null {\n    const value = localStorage.getItem(storageKey);\n    if (value) {\n      if (!(value in MEPState)) {\n        localStorage.removeItem(storageKey);\n        return null;\n      }\n      return MEPState[value];\n    }\n    return null;\n  }\n\n  static set(value: MEPState) {\n    localStorage.setItem(storageKey, value);\n  }\n}\n\nexport const MEPSettingProvider = ({\n  children,\n  _hasMEPState,\n}: {\n  children: ReactNode;\n  _hasMEPState?: MEPState;\n}) => {\n  const organization = useOrganization();\n  const canUseMEP = organization.features.includes('performance-use-metrics');\n\n  const isControlledMEP = typeof _hasMEPState !== 'undefined';\n\n  const [_metricSettingState, setMetricSettingState] = useReducer(\n    (_: MEPState, next: MEPState) => next,\n    MEPState.auto\n  );\n  const [autoSampleState, setAutoSampleState] = useReducer(\n    (_: AutoSampleState, next: AutoSampleState) => next,\n    AutoSampleState.unset\n  );\n\n  const metricSettingState = isControlledMEP ? _hasMEPState : _metricSettingState;\n\n  const hideSinceMetricsOnly =\n    canUseMEP &&\n    (metricSettingState === MEPState.metricsOnly || metricSettingState === MEPState.auto); // TODO(k-fish): Change this so auto includes data state.\n  const shouldQueryProvideMEPParams = canUseMEP && metricSettingState === MEPState.auto;\n  const shouldQueryProvideMEPMetricParams =\n    canUseMEP && metricSettingState === MEPState.metricsOnly;\n  const shouldQueryProvideMEPTransactionParams =\n    canUseMEP && metricSettingState === MEPState.transactionsOnly;\n\n  const memoizationKey = `${metricSettingState}`;\n\n  return (\n    <_MEPSettingProvider\n      value={{\n        autoSampleState,\n        metricSettingState,\n        hideSinceMetricsOnly,\n        shouldQueryProvideMEPParams,\n        shouldQueryProvideMEPMetricParams,\n        shouldQueryProvideMEPTransactionParams,\n        memoizationKey,\n        setMetricSettingState,\n        setAutoSampleState,\n      }}\n    >\n      {children}\n    </_MEPSettingProvider>\n  );\n};\n\nexport const useMEPSettingContext = _useMEPSettingContext;\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {RenderProps} from 'sentry/components/charts/eventsRequest';\nimport {DateString, Organization, OrganizationSummary} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\n\nimport {PerformanceWidgetContainerTypes} from './components/performanceWidgetContainer';\nimport {ChartDefinition, PerformanceWidgetSetting} from './widgetDefinitions';\n\nexport enum VisualizationDataState {\n  ERROR = 'error',\n  LOADING = 'loading',\n  EMPTY = 'empty',\n  DATA = 'data',\n}\n\nexport enum GenericPerformanceWidgetDataType {\n  histogram = 'histogram',\n  area = 'area',\n  vitals = 'vitals',\n  line_list = 'line_list',\n  trends = 'trends',\n}\n\nexport type PerformanceWidgetProps = {\n  ContainerActions: React.FC<{isLoading: boolean}>;\n  chartDefinition: ChartDefinition;\n  chartHeight: number;\n\n  chartSetting: PerformanceWidgetSetting;\n  eventView: EventView;\n  fields: string[];\n  location: Location;\n\n  organization: Organization;\n  title: string;\n  titleTooltip: string;\n\n  chartColor?: string;\n\n  withStaticFilters?: boolean;\n};\n\nexport interface WidgetDataResult {\n  hasData: boolean;\n  isErrored: boolean;\n  isLoading: boolean;\n}\nexport interface WidgetDataConstraint {\n  [dataKey: string]: WidgetDataResult | undefined;\n}\n\nexport type QueryChildren = {\n  children: (props: any) => React.ReactNode; // TODO(k-fish): Fix any type.\n};\nexport type QueryFC<T extends WidgetDataConstraint> = React.FC<\n  QueryChildren & {\n    eventView: EventView;\n    orgSlug: string;\n    organization: OrganizationSummary;\n    widgetData: T;\n    end?: DateString;\n    environment?: Readonly<string[]>;\n    fields?: string | string[];\n    period?: string | null;\n    project?: Readonly<number[]>;\n    query?: string;\n    referrer?: string;\n    start?: DateString;\n    team?: Readonly<string | string[]>;\n    yAxis?: string | string[];\n  }\n>;\n\nexport type QueryDefinition<\n  T extends WidgetDataConstraint,\n  S extends WidgetDataResult | undefined\n> = {\n  component: QueryFC<T>;\n  fields: string | string[];\n  transform: (\n    props: GenericPerformanceWidgetProps<T>,\n    results: any,\n    queryDefinition: QueryDefinitionWithKey<T>\n  ) => S; // TODO(k-fish): Fix any type.\n  enabled?: (data: T) => boolean;\n};\nexport type Queries<T extends WidgetDataConstraint> = Record<\n  string,\n  QueryDefinition<T, T[string]>\n>;\n\ntype Visualization<T> = {\n  component: React.FC<{\n    widgetData: T;\n    grid?: React.ComponentProps<typeof BaseChart>['grid'];\n    height?: number;\n    queryFields?: string;\n  }>;\n  height: number;\n  bottomPadding?: boolean;\n  dataState?: (data: T) => VisualizationDataState;\n  fields?: string;\n  noPadding?: boolean;\n  queryFields?: string[]; // Used to determine placeholder and loading sizes. Will also be passed to the component.\n};\n\ntype Visualizations<T extends WidgetDataConstraint> = Readonly<Visualization<T>[]>; // Readonly because of index being used for React key.\n\ntype HeaderActions<T> = React.FC<{\n  widgetData: T;\n}>;\n\ntype Subtitle<T> = React.FC<{\n  widgetData: T;\n}>;\n\nexport type GenericPerformanceWidgetProps<T extends WidgetDataConstraint> = {\n  Queries: Queries<T>;\n  Visualizations: Visualizations<T>;\n\n  chartDefinition: ChartDefinition;\n  chartHeight: number;\n\n  chartSetting: PerformanceWidgetSetting;\n  containerType: PerformanceWidgetContainerTypes;\n  eventView: EventView;\n\n  fields: string[];\n  location: Location;\n  organization: Organization;\n\n  // Header;\n  title: string;\n  titleTooltip: string;\n  EmptyComponent?: React.FC<{height?: number}>;\n\n  HeaderActions?: HeaderActions<T>;\n  // Components\n  Subtitle?: Subtitle<T>;\n};\n\nexport type GenericPerformanceWithData<T extends WidgetDataConstraint> =\n  GenericPerformanceWidgetProps<T> & WidgetDataProps<T>;\n\nexport type WidgetDataProps<T> = {\n  removeWidgetDataForKey: (dataKey: string) => void;\n  setWidgetDataForKey: (dataKey: string, result?: WidgetDataResult) => void;\n  widgetData: T;\n};\n\nexport type EventsRequestChildrenProps = RenderProps;\n\nexport type QueryDefinitionWithKey<T extends WidgetDataConstraint> = QueryDefinition<\n  T,\n  T[string]\n> & {queryKey: string};\n\nexport type QueryHandlerProps<T extends WidgetDataConstraint> = {\n  api: Client;\n  eventView: EventView;\n  queries: QueryDefinitionWithKey<T>[];\n  queryProps: WidgetPropUnion<T>;\n  children?: React.ReactNode;\n} & WidgetDataProps<T>;\n\nexport type WidgetPropUnion<T extends WidgetDataConstraint> =\n  GenericPerformanceWidgetProps<T>;\n","import {objectIsEmpty} from 'sentry/utils';\nimport localStorage from 'sentry/utils/localStorage';\nimport {MetricsEnhancedSettingContext} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\n\nimport {PROJECT_PERFORMANCE_TYPE} from '../../utils';\n\nimport {PerformanceWidgetSetting} from './widgetDefinitions';\n\nexport const eventsRequestQueryProps = [\n  'children',\n  'organization',\n  'yAxis',\n  'period',\n  'start',\n  'end',\n  'environment',\n  'project',\n  'referrer',\n] as const;\n\nfunction setWidgetStorageObject(localObject: Record<string, string>) {\n  localStorage.setItem(getContainerLocalStorageObjectKey, JSON.stringify(localObject));\n}\n\nexport function getMEPQueryParams(mepContext: MetricsEnhancedSettingContext) {\n  let queryParams = {};\n  const base = {preventMetricAggregates: '1'};\n  if (mepContext.shouldQueryProvideMEPParams) {\n    queryParams = {\n      ...queryParams,\n      ...base,\n      metricsEnhanced: '1',\n      dataset: 'metricsEnhanced',\n    };\n  }\n  if (mepContext.shouldQueryProvideMEPTransactionParams) {\n    queryParams = {...queryParams, ...base, dataset: 'discover'};\n  }\n  if (mepContext.shouldQueryProvideMEPMetricParams) {\n    queryParams = {...queryParams, ...base, dataset: 'metrics'};\n  }\n\n  // Disallow any performance request from using aggregates since they aren't currently possible in all visualizations and we don't want to mix modes.\n  return objectIsEmpty(queryParams) ? undefined : queryParams;\n}\n\nexport const WIDGET_MAP_DENY_LIST = [\n  PerformanceWidgetSetting.MOST_RELATED_ERRORS,\n  PerformanceWidgetSetting.MOST_RELATED_ISSUES,\n];\n\n/**\n * Some widgets, such as Related Issues, are inherently not possible w/ metrics at the moment since they use event.type:error under the hood.\n */\nexport function getMEPParamsIfApplicable(\n  mepContext: MetricsEnhancedSettingContext,\n  widget: PerformanceWidgetSetting\n) {\n  if (WIDGET_MAP_DENY_LIST.includes(widget)) {\n    return undefined;\n  }\n  return getMEPQueryParams(mepContext);\n}\n\nconst getContainerLocalStorageObjectKey = 'landing-chart-container';\nconst getContainerKey = (\n  index: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  height: number\n) => `landing-chart-container#${performanceType}#${height}#${index}`;\n\nfunction getWidgetStorageObject() {\n  const localObject = JSON.parse(\n    localStorage.getItem(getContainerLocalStorageObjectKey) || '{}'\n  );\n  return localObject;\n}\n\nexport const getChartSetting = (\n  index: number,\n  height: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  defaultType: PerformanceWidgetSetting,\n  forceDefaultChartSetting?: boolean // Used for testing.\n): PerformanceWidgetSetting => {\n  if (forceDefaultChartSetting) {\n    return defaultType;\n  }\n  const key = getContainerKey(index, performanceType, height);\n  const localObject = getWidgetStorageObject();\n  const value = localObject?.[key];\n\n  if (\n    value &&\n    Object.values(PerformanceWidgetSetting).includes(value as PerformanceWidgetSetting)\n  ) {\n    const _value: PerformanceWidgetSetting = value as PerformanceWidgetSetting;\n    return _value;\n  }\n  return defaultType;\n};\nexport const _setChartSetting = (\n  index: number,\n  height: number,\n  performanceType: PROJECT_PERFORMANCE_TYPE,\n  setting: PerformanceWidgetSetting\n) => {\n  const key = getContainerKey(index, performanceType, height);\n  const localObject = getWidgetStorageObject();\n  localObject[key] = setting;\n\n  setWidgetStorageObject(localObject);\n};\n","import CHART_PALETTE from 'sentry/constants/chartPalette';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\n\nimport {getTermHelp, PERFORMANCE_TERM} from '../../data';\n\nimport {GenericPerformanceWidgetDataType} from './types';\n\nexport interface ChartDefinition {\n  dataType: GenericPerformanceWidgetDataType;\n  fields: string[];\n\n  title: string;\n  titleTooltip: string; // The first field in the list will be treated as the primary field in most widgets (except for special casing).\n\n  chartColor?: string; // Optional. Will default to colors depending on placement in list or colors from the chart itself.\n\n  vitalStops?: {\n    meh: number;\n    poor: number;\n  };\n}\n\nexport enum PerformanceWidgetSetting {\n  DURATION_HISTOGRAM = 'duration_histogram',\n  LCP_HISTOGRAM = 'lcp_histogram',\n  FCP_HISTOGRAM = 'fcp_histogram',\n  FID_HISTOGRAM = 'fid_histogram',\n  APDEX_AREA = 'apdex_area',\n  P50_DURATION_AREA = 'p50_duration_area',\n  P75_DURATION_AREA = 'p75_duration_area',\n  P95_DURATION_AREA = 'p95_duration_area',\n  P99_DURATION_AREA = 'p99_duration_area',\n  P75_LCP_AREA = 'p75_lcp_area',\n  TPM_AREA = 'tpm_area',\n  FAILURE_RATE_AREA = 'failure_rate_area',\n  USER_MISERY_AREA = 'user_misery_area',\n  WORST_LCP_VITALS = 'worst_lcp_vitals',\n  WORST_FCP_VITALS = 'worst_fcp_vitals',\n  WORST_CLS_VITALS = 'worst_cls_vitals',\n  WORST_FID_VITALS = 'worst_fid_vitals',\n  MOST_IMPROVED = 'most_improved',\n  MOST_REGRESSED = 'most_regressed',\n  MOST_RELATED_ERRORS = 'most_related_errors',\n  MOST_RELATED_ISSUES = 'most_related_issues',\n  SLOW_HTTP_OPS = 'slow_http_ops',\n  SLOW_DB_OPS = 'slow_db_ops',\n  SLOW_RESOURCE_OPS = 'slow_resource_ops',\n  SLOW_BROWSER_OPS = 'slow_browser_ops',\n  COLD_STARTUP_AREA = 'cold_startup_area',\n  WARM_STARTUP_AREA = 'warm_startup_area',\n  SLOW_FRAMES_AREA = 'slow_frames_area',\n  FROZEN_FRAMES_AREA = 'frozen_frames_area',\n  MOST_SLOW_FRAMES = 'most_slow_frames',\n  MOST_FROZEN_FRAMES = 'most_frozen_frames',\n}\n\nconst WIDGET_PALETTE = CHART_PALETTE[5];\nexport const WIDGET_DEFINITIONS: ({\n  organization,\n}: {\n  organization: Organization;\n}) => Record<PerformanceWidgetSetting, ChartDefinition> = ({\n  organization,\n}: {\n  organization: Organization;\n}) => ({\n  [PerformanceWidgetSetting.DURATION_HISTOGRAM]: {\n    title: t('Duration Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['transaction.duration'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.LCP_HISTOGRAM]: {\n    title: t('LCP Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.lcp'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.FCP_HISTOGRAM]: {\n    title: t('FCP Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.fcp'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.FID_HISTOGRAM]: {\n    title: t('FID Distribution'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.DURATION_DISTRIBUTION),\n    fields: ['measurements.fid'],\n    dataType: GenericPerformanceWidgetDataType.histogram,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.WORST_LCP_VITALS]: {\n    title: t('Worst LCP Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.LCP),\n    fields: ['measurements.lcp'],\n    vitalStops: {\n      poor: 4000,\n      meh: 2500,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_FCP_VITALS]: {\n    title: t('Worst FCP Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FCP),\n    fields: ['measurements.fcp'],\n    vitalStops: {\n      poor: 3000,\n      meh: 1000,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_FID_VITALS]: {\n    title: t('Worst FID Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FID),\n    fields: ['measurements.fid'],\n    vitalStops: {\n      poor: 300,\n      meh: 100,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.WORST_CLS_VITALS]: {\n    title: t('Worst CLS Web Vitals'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.CLS),\n    fields: ['measurements.cls'],\n    vitalStops: {\n      poor: 0.25,\n      meh: 0.1,\n    },\n    dataType: GenericPerformanceWidgetDataType.vitals,\n  },\n  [PerformanceWidgetSetting.TPM_AREA]: {\n    title: t('Transactions Per Minute'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.TPM),\n    fields: ['tpm()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[1],\n  },\n  [PerformanceWidgetSetting.APDEX_AREA]: {\n    title: t('Apdex'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n    fields: ['apdex()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[4],\n  },\n  [PerformanceWidgetSetting.P50_DURATION_AREA]: {\n    title: t('p50 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P50),\n    fields: ['p50(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n  },\n  [PerformanceWidgetSetting.P75_DURATION_AREA]: {\n    title: t('p75 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n    fields: ['p75(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n  },\n  [PerformanceWidgetSetting.P95_DURATION_AREA]: {\n    title: t('p95 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P95),\n    fields: ['p95(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n  },\n  [PerformanceWidgetSetting.P99_DURATION_AREA]: {\n    title: t('p99 Duration'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P99),\n    fields: ['p99(transaction.duration)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n  },\n  [PerformanceWidgetSetting.P75_LCP_AREA]: {\n    title: t('p75 LCP'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n    fields: ['p75(measurements.lcp)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[1],\n  },\n  [PerformanceWidgetSetting.FAILURE_RATE_AREA]: {\n    title: t('Failure Rate'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n    fields: ['failure_rate()'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[2],\n  },\n  [PerformanceWidgetSetting.USER_MISERY_AREA]: {\n    title: t('User Misery'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.USER_MISERY),\n    fields: [`user_misery()`],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.COLD_STARTUP_AREA]: {\n    title: t('Cold Startup Time'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n    fields: ['p75(measurements.app_start_cold)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[4],\n  },\n  [PerformanceWidgetSetting.WARM_STARTUP_AREA]: {\n    title: t('Warm Startup Time'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n    fields: ['p75(measurements.app_start_warm)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[3],\n  },\n  [PerformanceWidgetSetting.SLOW_FRAMES_AREA]: {\n    title: t('Slow Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n    fields: ['p75(measurements.frames_slow_rate)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.FROZEN_FRAMES_AREA]: {\n    title: t('Frozen Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n    fields: ['p75(measurements.frames_frozen_rate)'],\n    dataType: GenericPerformanceWidgetDataType.area,\n    chartColor: WIDGET_PALETTE[5],\n  },\n  [PerformanceWidgetSetting.MOST_RELATED_ERRORS]: {\n    title: t('Most Related Errors'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.MOST_ERRORS),\n    fields: [`failure_count()`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_RELATED_ISSUES]: {\n    title: t('Most Related Issues'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.MOST_ISSUES),\n    fields: [`count()`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_HTTP_OPS]: {\n    title: t('Slow HTTP Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.http)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_BROWSER_OPS]: {\n    title: t('Slow Browser Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.browser)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_RESOURCE_OPS]: {\n    title: t('Slow Resource Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.resource)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.SLOW_DB_OPS]: {\n    title: t('Slow DB Ops'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_HTTP_SPANS),\n    fields: [`p75(spans.db)`],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_SLOW_FRAMES]: {\n    title: t('Most Slow Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n    fields: ['avg(measurements.frames_slow)'],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_FROZEN_FRAMES]: {\n    title: t('Most Frozen Frames'),\n    titleTooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n    fields: ['avg(measurements.frames_frozen)'],\n    dataType: GenericPerformanceWidgetDataType.line_list,\n    chartColor: WIDGET_PALETTE[0],\n  },\n  [PerformanceWidgetSetting.MOST_IMPROVED]: {\n    title: t('Most Improved'),\n    titleTooltip: t(\n      'This compares the baseline (%s) of the past with the present.',\n      'improved'\n    ),\n    fields: [],\n    dataType: GenericPerformanceWidgetDataType.trends,\n  },\n  [PerformanceWidgetSetting.MOST_REGRESSED]: {\n    title: t('Most Regressed'),\n    titleTooltip: t(\n      'This compares the baseline (%s) of the past with the present.',\n      'regressed'\n    ),\n    fields: [],\n    dataType: GenericPerformanceWidgetDataType.trends,\n  },\n});\n","import {ReactNode} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Count from 'sentry/components/count';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {AnomalyInfo} from 'sentry/utils/performance/anomalies/anomaliesQuery';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  anomalies?: AnomalyInfo[];\n};\n\nconst transformRow = (anom: AnomalyInfo): TableDataRowWithExtras => {\n  return {\n    anomaly: `#${anom.id}`,\n    confidence: anom.confidence,\n    timestamp: new Date(anom.start),\n    timeInterval: anom.end - anom.start,\n    expected: anom.expected,\n    received: anom.received,\n  };\n};\n\nexport default function AnomaliesTable(props: Props) {\n  const {location, organization, isLoading, anomalies} = props;\n\n  const data: TableDataRowWithExtras[] = anomalies?.map(transformRow) || [];\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={Object.values(COLUMNS)}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(location, organization),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(location: Location, organization: Organization) {\n  return (column: TableColumn, dataRow: TableDataRowWithExtras): React.ReactNode => {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'confidence') {\n      return (\n        <ConfidenceCell>\n          {dataRow.confidence === 'low' ? (\n            <LowConfidence>{t('Low Confidence')}</LowConfidence>\n          ) : (\n            <HighConfidence>{t('High Confidence')}</HighConfidence>\n          )}\n        </ConfidenceCell>\n      );\n    }\n    if (column.key === 'expected') {\n      return (\n        <NumberCell>\n          <Count value={dataRow.expected} />\n        </NumberCell>\n      );\n    }\n    if (column.key === 'received') {\n      return (\n        <NumberCell>\n          <Count value={dataRow.received} />\n          <IconArrow\n            size=\"sm\"\n            direction={dataRow.received > dataRow.expected ? 'up' : 'down'}\n          />\n        </NumberCell>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\nconst NumberCell = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nconst LowConfidence = styled('div')`\n  color: ${p => p.theme.yellow300};\n`;\nconst HighConfidence = styled('div')`\n  color: ${p => p.theme.red300};\n`;\n\nconst ConfidenceCell = styled('div')`\n  text-align: left;\n  justify-self: flex-end;\n  flex-grow: 1;\n`;\n\ntype TableColumnKey =\n  | 'anomaly'\n  | 'confidence'\n  | 'timeInterval'\n  | 'timestamp'\n  | 'expected'\n  | 'received';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  anomaly: {\n    key: 'anomaly',\n    name: t('Anomaly'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  confidence: {\n    key: 'confidence',\n    name: t('Confidence'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  timeInterval: {\n    key: 'timeInterval',\n    name: t('Time Interval'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  timestamp: {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  expected: {\n    key: 'expected',\n    name: t('Expected'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  received: {\n    key: 'received',\n    name: t('Received'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  anomaly: 'string',\n  confidence: 'string',\n  timeInterval: 'duration',\n  timestamp: 'date',\n  expected: 'number',\n  received: 'number',\n};\n","import {InjectedRouter, withRouter} from 'react-router';\nimport {Location} from 'history';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {DateString} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\n\ntype Props = {\n  data: Series[];\n  end: DateString;\n  location: Location;\n  router: InjectedRouter;\n  start: DateString;\n  statsPeriod: string | undefined;\n  height?: number;\n};\n\nconst _AnomalyChart = (props: Props) => {\n  const {\n    data,\n    location,\n    statsPeriod,\n    height,\n    router,\n    start: propsStart,\n    end: propsEnd,\n  } = props;\n\n  const start = propsStart ? getUtcToLocalDateObject(propsStart) : null;\n  const end = propsEnd ? getUtcToLocalDateObject(propsEnd) : null;\n  const {utc} = normalizeDateTimeParams(location.query);\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    legend: {\n      right: 10,\n      top: 5,\n      data: [t('High Confidence'), t('Low Confidence')],\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    height,\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: tooltipFormatter,\n    },\n    xAxis: undefined,\n    yAxis: {\n      axisLabel: {\n        // Coerces the axis to be count based\n        formatter: (value: number) => axisLabelFormatter(value, 'tpm()'),\n      },\n    },\n  };\n\n  return (\n    <ChartZoom\n      router={router}\n      period={statsPeriod}\n      start={start}\n      end={end}\n      utc={utc === 'true'}\n    >\n      {zoomRenderProps => (\n        <LineChart {...zoomRenderProps} series={data} {...chartOptions} />\n      )}\n    </ChartZoom>\n  );\n};\n\nexport const AnomalyChart = withRouter(_AnomalyChart);\n","import {Fragment, useMemo} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport MarkArea from 'sentry/components/charts/components/markArea';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartSeries} from 'sentry/components/charts/lineChart';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport AnomaliesQuery, {\n  AnomalyInfo,\n  AnomalyPayload,\n  ChildrenProps,\n} from 'sentry/utils/performance/anomalies/anomaliesQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport theme from 'sentry/utils/theme';\n\nimport {GenericPerformanceWidget} from '../../landing/widgets/components/performanceWidget';\nimport {WidgetEmptyStateWarning} from '../../landing/widgets/components/selectableList';\nimport {QueryDefinition, WidgetDataResult} from '../../landing/widgets/types';\nimport {\n  PerformanceWidgetSetting,\n  WIDGET_DEFINITIONS,\n} from '../../landing/widgets/widgetDefinitions';\nimport {SetStateAction} from '../types';\n\nimport AnomaliesTable from './anomaliesTable';\nimport {AnomalyChart} from './anomalyChart';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  setError: SetStateAction<string | undefined>;\n  transactionName: string;\n};\n\ntype AnomaliesSectionProps = Props & {\n  queryData: ChildrenProps;\n};\n\nconst anomalyAreaName = (anomaly: AnomalyInfo) => `#${anomaly.id}`;\nconst transformAnomalyToArea = (\n  anomaly: AnomalyInfo\n): [{name: string; xAxis: number}, {xAxis: number}] => [\n  {name: anomalyAreaName(anomaly), xAxis: anomaly.start},\n  {xAxis: anomaly.end},\n];\n\nconst transformAnomalyData = (\n  _: any,\n  results: {data: AnomalyPayload; error: null | string; isLoading: boolean}\n) => {\n  const data: LineChartSeries[] = [];\n  const resultData = results.data;\n\n  if (!resultData) {\n    return {\n      isLoading: results.isLoading,\n      isErrored: !!results.error,\n      data: undefined,\n      hasData: false,\n      loading: results.isLoading,\n    };\n  }\n\n  data.push({\n    seriesName: 'tpm()',\n    data: resultData.y.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n  data.push({\n    seriesName: 'tpm() lower bound',\n    data: resultData.yhat_lower.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n  data.push({\n    seriesName: 'tpm() upper bound',\n    data: resultData.yhat_upper.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n\n  const anomalies = results.data.anomalies;\n  const highConfidenceAreas = anomalies\n    .filter(a => a.confidence === 'high')\n    .map(transformAnomalyToArea);\n  const highConfidenceLines = anomalies\n    .filter(a => a.confidence === 'high')\n    .map(area => ({xAxis: area.start, name: anomalyAreaName(area)}));\n\n  const lowConfidenceAreas = anomalies\n    .filter(a => a.confidence === 'low')\n    .map(transformAnomalyToArea);\n  const lowConfidenceLines = anomalies\n    .filter(a => a.confidence === 'low')\n    .map(area => ({xAxis: area.start, name: anomalyAreaName(area)}));\n\n  data.push({\n    seriesName: 'High Confidence',\n    color: theme.red300,\n    data: [],\n    silent: true,\n    markLine: MarkLine({\n      animation: false,\n      lineStyle: {color: theme.red300, type: 'solid', width: 1, opacity: 1.0},\n      data: highConfidenceLines,\n      label: {\n        show: true,\n        rotate: 90,\n        color: theme.red300,\n        position: 'insideEndBottom',\n        fontSize: '10',\n        offset: [5, 5],\n        formatter: obj => `${(obj.data as any).name}`,\n      },\n    }),\n    markArea: MarkArea({\n      itemStyle: {\n        color: theme.red300,\n        opacity: 0.2,\n      },\n      label: {\n        show: false,\n      },\n      data: highConfidenceAreas,\n    }),\n  });\n\n  data.push({\n    seriesName: 'Low Confidence',\n    color: theme.yellow200,\n    data: [],\n    markLine: MarkLine({\n      animation: false,\n      lineStyle: {color: theme.yellow200, type: 'solid', width: 1, opacity: 1.0},\n      data: lowConfidenceLines,\n      label: {\n        show: true,\n        rotate: 90,\n        color: theme.yellow300,\n        position: 'insideEndBottom',\n        fontSize: '10',\n        offset: [5, 5],\n        formatter: obj => `${(obj.data as any).name}`,\n      },\n    }),\n    markArea: MarkArea({\n      itemStyle: {\n        color: theme.yellow200,\n        opacity: 0.2,\n      },\n      label: {\n        show: false,\n      },\n      data: lowConfidenceAreas,\n    }),\n  });\n\n  return {\n    isLoading: results.isLoading,\n    isErrored: !!results.error,\n    data,\n    hasData: true,\n    loading: results.isLoading,\n  };\n};\n\ntype AnomalyData = WidgetDataResult & ReturnType<typeof transformAnomalyData>;\n\ntype DataType = {\n  chart: AnomalyData;\n};\n\nfunction Anomalies(props: AnomaliesSectionProps) {\n  const height = 250;\n  const chartColor = theme.charts.colors[0];\n\n  const chart = useMemo<QueryDefinition<DataType, WidgetDataResult>>(() => {\n    return {\n      fields: '',\n      component: provided => <Fragment>{provided.children(props.queryData)}</Fragment>,\n      transform: transformAnomalyData,\n    };\n  }, [props.queryData]);\n\n  return (\n    <GenericPerformanceWidget<DataType>\n      {...props}\n      title={t('Transaction Count')}\n      titleTooltip={t(\n        'Represents transaction count across time, with added visualizations to highlight anomalies in your data.'\n      )}\n      fields={['']}\n      chartSetting={PerformanceWidgetSetting.TPM_AREA}\n      chartDefinition={WIDGET_DEFINITIONS[PerformanceWidgetSetting.TPM_AREA]}\n      Subtitle={() => <div />}\n      HeaderActions={() => <div />}\n      EmptyComponent={WidgetEmptyStateWarning}\n      Queries={{\n        chart,\n      }}\n      Visualizations={[\n        {\n          component: provided => {\n            const data =\n              provided.widgetData.chart.data?.map(series => {\n                if (series.seriesName !== 'tpm()') {\n                  series.lineStyle = {type: 'dashed', color: chartColor, width: 1.5};\n                }\n                if (series.seriesName === 'score') {\n                  series.lineStyle = {color: theme.red400};\n                }\n                return series;\n              }) ?? [];\n\n            return (\n              <AnomalyChart\n                {...provided}\n                data={data}\n                height={height}\n                statsPeriod={undefined}\n                start={null}\n                end={null}\n              />\n            );\n          },\n          height,\n        },\n      ]}\n    />\n  );\n}\n\nfunction AnomaliesContent(props: Props) {\n  const {location, organization, eventView} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  function handleChange(key: string) {\n    return function (value: string | undefined) {\n      const queryParams = normalizeDateTimeParams({\n        ...(location.query || {}),\n        [key]: value,\n      });\n\n      // do not propagate pagination when making a new search\n      const toOmit = ['cursor'];\n      if (!defined(value)) {\n        toOmit.push(key);\n      }\n      const searchQueryParams = omit(queryParams, toOmit);\n\n      browserHistory.push({\n        ...location,\n        query: searchQueryParams,\n      });\n    };\n  }\n  return (\n    <Layout.Main fullWidth>\n      <FilterActions>\n        <PageFilterBar condensed>\n          <EnvironmentPageFilter />\n          <DatePageFilter alignDropdown=\"left\" />\n        </PageFilterBar>\n        <SearchBar\n          organization={organization}\n          projectIds={eventView.project}\n          query={query}\n          fields={eventView.fields}\n          onSearch={handleChange('query')}\n        />\n      </FilterActions>\n      <AnomaliesQuery\n        organization={organization}\n        location={location}\n        eventView={eventView}\n      >\n        {queryData => (\n          <Fragment>\n            <Anomalies {...props} queryData={queryData} />\n            <AnomaliesTable\n              anomalies={queryData.data?.anomalies}\n              {...props}\n              isLoading={queryData.isLoading}\n            />\n          </Fragment>\n        )}\n      </AnomaliesQuery>\n    </Layout.Main>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr;\n  }\n`;\n\nexport default AnomaliesContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {MEPSettingProvider} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport AnomaliesContent from './content';\nimport {generateAnomaliesEventView} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionAnomalies(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <MEPSettingProvider>\n      <PageLayout\n        location={location}\n        organization={organization}\n        projects={projects}\n        tab={Tab.Anomalies}\n        generateEventView={generateAnomaliesEventView}\n        getDocumentTitle={getDocumentTitle}\n        childComponent={AnomaliesContent}\n      />\n    </MEPSettingProvider>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nexport default withProjects(withOrganization(TransactionAnomalies));\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n"],"names":["DEFAULT","realtime","showDetail","left","right","bottom","DataZoomSlider","props","Array","isArray","getDate","date","moment","format","ChartZoom","Component","constructor","super","this","currentPeriod","period","start","end","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","callIfFunction","zooming","newQuery","location","query","pageStart","getUtcDateString","undefined","pageEnd","pageStatsPeriod","qs","pathname","updateDateTime","getUtcToLocalDateObject","saveCurrentPeriod","chart","onChartReady","evt","length","setPeriod","onRestore","model","getModel","startValue","endValue","_payload","batch","previousPeriod","pop","onDataZoom","_props","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","onFinished","componentDidUpdate","disabled","render","utc","_utc","_start","_end","children","xAxisIndex","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","handleChartReady","DataZoomInside","showTimeInTooltip","toolBox","ToolBox","title","back","iconStyle","borderWidth","color","opacity","handleDataZoom","handleChartFinished","handleZoomRestore","zoomOnMouseWheel","zoomLock","throttle","MarkArea","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","p","height","theme","gray300","fontSizeExtraLarge","LineChart","series","seriesOptions","map","seriesName","data","dataArray","LineSeries","name","value","animation","animationThreshold","animationDuration","SortLink","align","canSort","generateSortLink","onClick","direction","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","forwardProps","omit","IconArrow","ListLink","_classNames","className","activeClassName","isActive","classNames","index","queryData","carriedProps","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","transformStatsTimes","stats","forEach","d","transformPayload","payload","newPayload","y","yhat_lower","yhat_upper","anomalies","anoms","a","AnomaliesSeriesQuery","organization","includes","ANOMALY_FLAG","route","tableData","rest","isLoading","error","pageLinks","withApi","_MEPSettingProvider","_useMEPSettingContext","_MEPSettingContext","createDefinedContext","MEPConsumer","Consumer","AutoSampleState","MEPState","MEPSettingProvider","_hasMEPState","canUseMEP","useOrganization","isControlledMEP","_metricSettingState","setMetricSettingState","useReducer","_","next","auto","autoSampleState","setAutoSampleState","unset","metricSettingState","hideSinceMetricsOnly","metricsOnly","shouldQueryProvideMEPParams","shouldQueryProvideMEPMetricParams","shouldQueryProvideMEPTransactionParams","transactionsOnly","memoizationKey","useMEPSettingContext","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","spanId","locationQuery","defined","hash","spanTargetHash","VisualizationDataState","GenericPerformanceWidgetDataType","eventsRequestQueryProps","getMEPQueryParams","mepContext","queryParams","base","preventMetricAggregates","metricsEnhanced","dataset","objectIsEmpty","WIDGET_MAP_DENY_LIST","PerformanceWidgetSetting","getMEPParamsIfApplicable","widget","getContainerLocalStorageObjectKey","getContainerKey","performanceType","getWidgetStorageObject","JSON","parse","localStorage","getChartSetting","defaultType","forceDefaultChartSetting","localObject","Object","values","_setChartSetting","setting","stringify","setWidgetStorageObject","WIDGET_PALETTE","CHART_PALETTE","WIDGET_DEFINITIONS","DURATION_HISTOGRAM","t","titleTooltip","getTermHelp","PERFORMANCE_TERM","fields","dataType","chartColor","LCP_HISTOGRAM","FCP_HISTOGRAM","FID_HISTOGRAM","WORST_LCP_VITALS","vitalStops","poor","meh","WORST_FCP_VITALS","WORST_FID_VITALS","WORST_CLS_VITALS","TPM_AREA","APDEX_AREA","P50_DURATION_AREA","P75_DURATION_AREA","P95_DURATION_AREA","P99_DURATION_AREA","P75_LCP_AREA","FAILURE_RATE_AREA","USER_MISERY_AREA","COLD_STARTUP_AREA","WARM_STARTUP_AREA","SLOW_FRAMES_AREA","FROZEN_FRAMES_AREA","MOST_RELATED_ERRORS","MOST_RELATED_ISSUES","SLOW_HTTP_OPS","SLOW_BROWSER_OPS","SLOW_RESOURCE_OPS","SLOW_DB_OPS","MOST_SLOW_FRAMES","MOST_FROZEN_FRAMES","MOST_IMPROVED","MOST_REGRESSED","transformRow","anom","anomaly","id","confidence","timestamp","Date","timeInterval","expected","received","AnomaliesTable","columnOrder","COLUMNS","columnSortBy","grid","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","column","_index","fieldAlignment","COLUMN_TYPE","dataRow","fieldRenderer","getFieldRenderer","ConfidenceCell","LowConfidence","HighConfidence","NumberCell","space","yellow300","red300","width","COL_WIDTH_UNDEFINED","_AnomalyChart","statsPeriod","propsStart","propsEnd","normalizeDateTimeParams","chartOptions","legend","showSymbol","tooltip","trigger","valueFormatter","tooltipFormatter","xAxis","yAxis","axisLabel","formatter","axisLabelFormatter","zoomRenderProps","AnomalyChart","anomalyAreaName","transformAnomalyToArea","transformAnomalyData","results","resultData","isErrored","hasData","loading","count","highConfidenceAreas","filter","highConfidenceLines","area","lowConfidenceAreas","lowConfidenceLines","silent","markLine","MarkLine","lineStyle","label","show","rotate","position","fontSize","offset","obj","markArea","itemStyle","Anomalies","useMemo","component","provided","Fragment","transform","chartSetting","chartDefinition","Subtitle","HeaderActions","EmptyComponent","WidgetEmptyStateWarning","Queries","Visualizations","widgetData","AnomaliesContent","eventView","decodeScalar","fullWidth","FilterActions","condensed","alignDropdown","projectIds","project","onSearch","toOmit","searchQueryParams","browserHistory","breakpoints","small","TransactionAnomalies","projects","tab","Tab","generateEventView","generateAnomaliesEventView","getDocumentTitle","childComponent","transactionName","String","trim","join","withProjects","withOrganization","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","MutableSearch","transactionSummaryRouteWithQuery","projectID","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","generateTransactionSummaryRoute","searchFilter","formatString","environment","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","generateEventSlug","slug","SidebarSpacer"],"sourceRoot":""}