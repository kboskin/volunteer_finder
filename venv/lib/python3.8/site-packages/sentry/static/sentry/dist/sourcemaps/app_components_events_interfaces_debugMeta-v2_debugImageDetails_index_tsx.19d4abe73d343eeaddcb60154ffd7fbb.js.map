{"version":3,"file":"chunks/app_components_events_interfaces_debugMeta-v2_debugImageDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/status/index.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/utils.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/status/statusTooltip.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/utils.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/actions.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/information/divider.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/information/features.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/information/processingIcon.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/information/index.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidate/index.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/candidates.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/generalInfo.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/reprocessAlert.tsx","webpack:///./app/components/events/interfaces/debugMeta-v2/debugImageDetails/index.tsx","webpack:///./app/types/debugFiles.tsx","webpack:///./app/utils/displayReprocessEventAction.tsx","webpack:///./app/views/settings/projectDebugFiles/utils.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\n\nimport Tag from 'sentry/components/tag';\nimport {t} from 'sentry/locale';\nimport {CandidateDownloadStatus} from 'sentry/types/debugImage';\n\ntype Props = {\n  status: CandidateDownloadStatus;\n};\n\nfunction Status({status}: Props) {\n  switch (status) {\n    case CandidateDownloadStatus.OK: {\n      return <Tag type=\"success\">{t('Ok')}</Tag>;\n    }\n    case CandidateDownloadStatus.ERROR:\n    case CandidateDownloadStatus.MALFORMED: {\n      return <Tag type=\"error\">{t('Failed')}</Tag>;\n    }\n    case CandidateDownloadStatus.NOT_FOUND: {\n      return <Tag>{t('Not Found')}</Tag>;\n    }\n    case CandidateDownloadStatus.NO_PERMISSION: {\n      return <Tag type=\"highlight\">{t('Permissions')}</Tag>;\n    }\n    case CandidateDownloadStatus.DELETED: {\n      return <Tag type=\"success\">{t('Deleted')}</Tag>;\n    }\n    case CandidateDownloadStatus.UNAPPLIED: {\n      return <Tag type=\"warning\">{t('Unapplied')}</Tag>;\n    }\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(new Error('Unknown image candidate download status'));\n      });\n      return <Tag>{t('Unknown')}</Tag>; // This shall not happen\n    }\n  }\n}\n\nexport default Status;\n","export const INTERNAL_SOURCE = 'sentry:project';\nexport const INTERNAL_SOURCE_LOCATION = 'sentry://project_debug_file/';\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport space from 'sentry/styles/space';\nimport {ImageCandidate} from 'sentry/types/debugImage';\n\nimport {getStatusTooltipDescription} from '../utils';\n\nimport Status from '.';\n\ntype Props = {\n  candidate: ImageCandidate;\n  hasReprocessWarning: boolean;\n};\n\nfunction StatusTooltip({candidate, hasReprocessWarning}: Props) {\n  const {download} = candidate;\n  const {label, description, disabled} = getStatusTooltipDescription(\n    candidate,\n    hasReprocessWarning\n  );\n\n  return (\n    <Tooltip\n      title={\n        label && (\n          <Title>\n            <Label>{label}</Label>\n            {description && <div>{description}</div>}\n          </Title>\n        )\n      }\n      disabled={disabled}\n    >\n      <Status status={download.status} />\n    </Tooltip>\n  );\n}\n\nexport default StatusTooltip;\n\nconst Title = styled('div')`\n  text-align: left;\n`;\n\nconst Label = styled('div')`\n  display: inline-block;\n  margin-bottom: ${space(0.25)};\n`;\n","import * as Sentry from '@sentry/react';\n\nimport {t} from 'sentry/locale';\nimport {BuiltinSymbolSource} from 'sentry/types/debugFiles';\nimport {\n  CandidateDownloadStatus,\n  ImageCandidate,\n  ImageFeature,\n} from 'sentry/types/debugImage';\n\nimport {INTERNAL_SOURCE} from '../utils';\n\nexport function getImageFeatureDescription(type: ImageFeature) {\n  switch (type) {\n    case ImageFeature.has_debug_info:\n      return {\n        label: t('debug'),\n        description: t(\n          'Debug information provides function names and resolves inlined frames during symbolication'\n        ),\n      };\n    case ImageFeature.has_sources:\n      return {\n        label: t('sources'),\n        description: t(\n          'Source code information allows Sentry to display source code context for stack frames'\n        ),\n      };\n    case ImageFeature.has_symbols:\n      return {\n        label: t('symtab'),\n        description: t(\n          'Symbol tables are used as a fallback when full debug information is not available'\n        ),\n      };\n    case ImageFeature.has_unwind_info:\n      return {\n        label: t('unwind'),\n        description: t(\n          'Stack unwinding information improves the quality of stack traces extracted from minidumps'\n        ),\n      };\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(new Error('Unknown image candidate feature'));\n      });\n      return {}; // this shall not happen\n    }\n  }\n}\n\nexport function getSourceTooltipDescription(\n  source: string,\n  builtinSymbolSources: Array<BuiltinSymbolSource> | null\n) {\n  if (source === INTERNAL_SOURCE) {\n    return t(\n      \"This debug information file is from Sentry's internal symbol server for this project\"\n    );\n  }\n\n  if (\n    builtinSymbolSources?.find(builtinSymbolSource => builtinSymbolSource.id === source)\n  ) {\n    return t('This debug information file is from a built-in symbol server');\n  }\n\n  return t('This debug information file is from a custom symbol server');\n}\n\nexport function getStatusTooltipDescription(\n  candidate: ImageCandidate,\n  hasReprocessWarning: boolean\n) {\n  const {download, location, source} = candidate;\n\n  switch (download.status) {\n    case CandidateDownloadStatus.OK: {\n      return {\n        label: t('Download Details'),\n        description: location,\n        disabled: !location || source === INTERNAL_SOURCE,\n      };\n    }\n\n    case CandidateDownloadStatus.ERROR:\n    case CandidateDownloadStatus.MALFORMED: {\n      const {details} = download;\n      return {\n        label: t('Download Details'),\n        description: details,\n        disabled: !details,\n      };\n    }\n    case CandidateDownloadStatus.NOT_FOUND: {\n      return {};\n    }\n    case CandidateDownloadStatus.NO_PERMISSION: {\n      const {details} = download;\n      return {\n        label: t('Permission Error'),\n        description: details,\n        disabled: !details,\n      };\n    }\n    case CandidateDownloadStatus.DELETED: {\n      return {\n        label: t('This file was deleted after the issue was processed.'),\n      };\n    }\n    case CandidateDownloadStatus.UNAPPLIED: {\n      return {\n        label: hasReprocessWarning\n          ? t(\n              'This issue was processed before this debug information file was available. To apply new debug information, reprocess this issue.'\n            )\n          : t(\n              'This issue was processed before this debug information file was available'\n            ),\n      };\n    }\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(new Error('Unknown image candidate download status'));\n      });\n      return {}; // This shall not happen\n    }\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport ActionButton from 'sentry/components/actions/button';\nimport MenuItemActionLink from 'sentry/components/actions/menuItemActionLink';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDelete, IconDownload, IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {CandidateDownloadStatus, ImageCandidate} from 'sentry/types/debugImage';\n\nconst noPermissionToDownloadDebugFilesInfo = t(\n  'You do not have permission to download debug files'\n);\n\nconst noPermissionToDeleteDebugFilesInfo = t(\n  'You do not have permission to delete debug files'\n);\n\nconst debugFileDeleteConfirmationInfo = t('Are you sure you wish to delete this file?');\n\ntype Props = {\n  baseUrl: string;\n  candidate: ImageCandidate;\n  isInternalSource: boolean;\n  onDelete: (debugFileId: string) => void;\n  organization: Organization;\n  projSlug: Project['slug'];\n};\n\nfunction Actions({\n  candidate,\n  organization,\n  isInternalSource,\n  baseUrl,\n  projSlug,\n  onDelete,\n}: Props) {\n  const {download, location: debugFileId} = candidate;\n  const {status} = download;\n\n  if (!debugFileId || !isInternalSource) {\n    return null;\n  }\n\n  const deleted = status === CandidateDownloadStatus.DELETED;\n  const downloadUrl = `${baseUrl}/projects/${organization.slug}/${projSlug}/files/dsyms/?id=${debugFileId}`;\n\n  const actions = (\n    <Role role={organization.debugFilesRole} organization={organization}>\n      {({hasRole}) => (\n        <Access access={['project:write']} organization={organization}>\n          {({hasAccess}) => (\n            <Fragment>\n              <StyledDropdownLink\n                caret={false}\n                customTitle={\n                  <ActionButton\n                    aria-label={t('Actions')}\n                    disabled={deleted}\n                    icon={<IconEllipsis size=\"sm\" />}\n                  />\n                }\n                anchorRight\n              >\n                <Tooltip disabled={hasRole} title={noPermissionToDownloadDebugFilesInfo}>\n                  <MenuItemActionLink\n                    shouldConfirm={false}\n                    icon={<IconDownload size=\"xs\" />}\n                    title={t('Download')}\n                    href={downloadUrl}\n                    onClick={event => {\n                      if (deleted) {\n                        event.preventDefault();\n                      }\n                    }}\n                    disabled={!hasRole || deleted}\n                  >\n                    {t('Download')}\n                  </MenuItemActionLink>\n                </Tooltip>\n                <Tooltip disabled={hasAccess} title={noPermissionToDeleteDebugFilesInfo}>\n                  <MenuItemActionLink\n                    onAction={() => onDelete(debugFileId)}\n                    message={debugFileDeleteConfirmationInfo}\n                    title={t('Delete')}\n                    disabled={!hasAccess || deleted}\n                    shouldConfirm\n                  >\n                    {t('Delete')}\n                  </MenuItemActionLink>\n                </Tooltip>\n              </StyledDropdownLink>\n              <StyledButtonBar gap={1}>\n                <Tooltip disabled={hasRole} title={noPermissionToDownloadDebugFilesInfo}>\n                  <Button\n                    size=\"xsmall\"\n                    icon={<IconDownload size=\"xs\" />}\n                    href={downloadUrl}\n                    disabled={!hasRole}\n                  >\n                    {t('Download')}\n                  </Button>\n                </Tooltip>\n                <Tooltip disabled={hasAccess} title={noPermissionToDeleteDebugFilesInfo}>\n                  <Confirm\n                    confirmText={t('Delete')}\n                    message={debugFileDeleteConfirmationInfo}\n                    onConfirm={() => onDelete(debugFileId)}\n                    disabled={!hasAccess}\n                  >\n                    <Button\n                      priority=\"danger\"\n                      icon={<IconDelete size=\"xs\" />}\n                      size=\"xsmall\"\n                      disabled={!hasAccess}\n                      aria-label={t('Delete')}\n                    />\n                  </Confirm>\n                </Tooltip>\n              </StyledButtonBar>\n            </Fragment>\n          )}\n        </Access>\n      )}\n    </Role>\n  );\n\n  if (!deleted) {\n    return actions;\n  }\n\n  return (\n    <Tooltip title={t('Actions not available because this debug file was deleted')}>\n      {actions}\n    </Tooltip>\n  );\n}\n\nexport default Actions;\n\nconst StyledDropdownLink = styled(DropdownLink)`\n  display: none;\n\n  @media (min-width: ${props => props.theme.breakpoints.xxlarge}) {\n    display: flex;\n    align-items: center;\n    transition: none;\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  @media (min-width: ${props => props.theme.breakpoints.xxlarge}) {\n    display: none;\n  }\n`;\n","import styled from '@emotion/styled';\n\nfunction Divider() {\n  return <Wrapper>{'|'}</Wrapper>;\n}\n\nexport default Divider;\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Tag from 'sentry/components/tag';\nimport {\n  CandidateDownload,\n  CandidateDownloadStatus,\n  ImageFeature,\n} from 'sentry/types/debugImage';\n\nimport {getImageFeatureDescription} from '../utils';\n\ntype Props = {\n  download: CandidateDownload;\n};\n\nfunction Features({download}: Props) {\n  let features: string[] = [];\n\n  if (\n    download.status === CandidateDownloadStatus.OK ||\n    download.status === CandidateDownloadStatus.DELETED ||\n    download.status === CandidateDownloadStatus.UNAPPLIED\n  ) {\n    features = Object.keys(download.features).filter(\n      feature => download.features[feature]\n    );\n  }\n\n  return (\n    <Fragment>\n      {Object.keys(ImageFeature).map(imageFeature => {\n        const {label, description} = getImageFeatureDescription(\n          imageFeature as ImageFeature\n        );\n\n        const isDisabled = !features.includes(imageFeature);\n\n        return (\n          <StyledTag\n            key={label}\n            disabled={isDisabled}\n            tooltipText={isDisabled ? undefined : description}\n          >\n            {label}\n          </StyledTag>\n        );\n      })}\n    </Fragment>\n  );\n}\n\nexport default Features;\n\nconst StyledTag = styled(Tag)<{disabled: boolean}>`\n  opacity: ${p => (p.disabled ? '0.35' : 1)};\n`;\n","import * as Sentry from '@sentry/react';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose, IconWarning} from 'sentry/icons';\nimport {\n  CandidateProcessingInfo,\n  CandidateProcessingStatus,\n} from 'sentry/types/debugImage';\n\ntype Props = {\n  processingInfo: CandidateProcessingInfo;\n};\n\nfunction ProcessingIcon({processingInfo}: Props) {\n  switch (processingInfo.status) {\n    case CandidateProcessingStatus.OK:\n      return <IconCheckmark color=\"green300\" size=\"xs\" />;\n    case CandidateProcessingStatus.ERROR: {\n      const {details} = processingInfo;\n      return (\n        <Tooltip title={details} disabled={!details}>\n          <IconClose color=\"red300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    case CandidateProcessingStatus.MALFORMED: {\n      const {details} = processingInfo;\n      return (\n        <Tooltip title={details} disabled={!details}>\n          <IconWarning color=\"yellow300\" size=\"xs\" />\n        </Tooltip>\n      );\n    }\n    default: {\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        Sentry.captureException(\n          new Error('Unknown image candidate ProcessingIcon status')\n        );\n      });\n      return null; // this shall never happen\n    }\n  }\n}\n\nexport default ProcessingIcon;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\nimport moment from 'moment-timezone';\n\nimport DateTime from 'sentry/components/dateTime';\nimport FileSize from 'sentry/components/fileSize';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  CandidateDownloadStatus,\n  ImageCandidate,\n  ImageCandidateInternalOk,\n  ImageCandidateOk,\n  ImageCandidateUnApplied,\n  SymbolType,\n} from 'sentry/types/debugImage';\n\nimport ProcessingItem from '../../../processing/item';\nimport ProcessingList from '../../../processing/list';\nimport {INTERNAL_SOURCE} from '../../utils';\n\nimport Divider from './divider';\nimport Features from './features';\nimport ProcessingIcon from './processingIcon';\n\ntype Props = {\n  candidate: ImageCandidate;\n  hasReprocessWarning: boolean;\n  isInternalSource: boolean;\n  eventDateReceived?: string;\n};\n\nfunction Information({\n  candidate,\n  isInternalSource,\n  hasReprocessWarning,\n  eventDateReceived,\n}: Props) {\n  const {source_name, source, location, download} = candidate;\n\n  function getFilenameOrLocation() {\n    if (\n      candidate.download.status === CandidateDownloadStatus.UNAPPLIED ||\n      (candidate.download.status === CandidateDownloadStatus.OK && isInternalSource)\n    ) {\n      const {symbolType, filename} = candidate as\n        | ImageCandidateUnApplied\n        | ImageCandidateInternalOk;\n\n      return symbolType === SymbolType.PROGUARD && filename === 'proguard-mapping'\n        ? null\n        : filename;\n    }\n\n    if (location && !isInternalSource) {\n      return location;\n    }\n\n    return null;\n  }\n\n  function getTimeSinceData(dateCreated: string) {\n    const dateTime = <DateTime date={dateCreated} />;\n\n    if (candidate.download.status !== CandidateDownloadStatus.UNAPPLIED) {\n      return {\n        tooltipDesc: dateTime,\n        displayIcon: false,\n      };\n    }\n\n    const uploadedBeforeEvent = moment(dateCreated).isBefore(eventDateReceived);\n\n    if (uploadedBeforeEvent) {\n      if (hasReprocessWarning) {\n        return {\n          tooltipDesc: (\n            <Fragment>\n              {tct(\n                'This debug file was uploaded [when] before this event. It takes up to 1 hour for new files to propagate. To apply new debug information, reprocess this issue.',\n                {\n                  when: moment(eventDateReceived).from(dateCreated, true),\n                }\n              )}\n              <DateTimeWrapper>{dateTime}</DateTimeWrapper>\n            </Fragment>\n          ),\n          displayIcon: true,\n        };\n      }\n\n      const uplodadedMinutesDiff = moment(eventDateReceived).diff(dateCreated, 'minutes');\n\n      if (uplodadedMinutesDiff >= 60) {\n        return {\n          tooltipDesc: dateTime,\n          displayIcon: false,\n        };\n      }\n\n      return {\n        tooltipDesc: (\n          <Fragment>\n            {tct(\n              'This debug file was uploaded [when] before this event. It takes up to 1 hour for new files to propagate.',\n              {\n                when: moment(eventDateReceived).from(dateCreated, true),\n              }\n            )}\n            <DateTimeWrapper>{dateTime}</DateTimeWrapper>\n          </Fragment>\n        ),\n        displayIcon: true,\n      };\n    }\n\n    if (hasReprocessWarning) {\n      return {\n        tooltipDesc: (\n          <Fragment>\n            {tct(\n              'This debug file was uploaded [when] after this event. To apply new debug information, reprocess this issue.',\n              {\n                when: moment(dateCreated).from(eventDateReceived, true),\n              }\n            )}\n            <DateTimeWrapper>{dateTime}</DateTimeWrapper>\n          </Fragment>\n        ),\n        displayIcon: true,\n      };\n    }\n\n    return {\n      tooltipDesc: (\n        <Fragment>\n          {tct('This debug file was uploaded [when] after this event.', {\n            when: moment(eventDateReceived).from(dateCreated, true),\n          })}\n          <DateTimeWrapper>{dateTime}</DateTimeWrapper>\n        </Fragment>\n      ),\n      displayIcon: true,\n    };\n  }\n\n  function renderProcessingInfo() {\n    if (\n      candidate.download.status !== CandidateDownloadStatus.OK &&\n      candidate.download.status !== CandidateDownloadStatus.DELETED\n    ) {\n      return null;\n    }\n\n    const items: React.ComponentProps<typeof ProcessingList>['items'] = [];\n\n    const {debug, unwind} = candidate as ImageCandidateOk;\n\n    if (debug) {\n      items.push(\n        <ProcessingItem\n          key=\"symbolication\"\n          type=\"symbolication\"\n          icon={<ProcessingIcon processingInfo={debug} />}\n        />\n      );\n    }\n\n    if (unwind) {\n      items.push(\n        <ProcessingItem\n          key=\"stack_unwinding\"\n          type=\"stack_unwinding\"\n          icon={<ProcessingIcon processingInfo={unwind} />}\n        />\n      );\n    }\n\n    if (!items.length) {\n      return null;\n    }\n\n    return (\n      <Fragment>\n        <StyledProcessingList items={items} />\n        <Divider />\n      </Fragment>\n    );\n  }\n\n  function renderExtraDetails() {\n    if (\n      (candidate.download.status !== CandidateDownloadStatus.UNAPPLIED &&\n        candidate.download.status !== CandidateDownloadStatus.OK) ||\n      source !== INTERNAL_SOURCE\n    ) {\n      return null;\n    }\n\n    const {symbolType, fileType, cpuName, size, dateCreated} = candidate as\n      | ImageCandidateInternalOk\n      | ImageCandidateUnApplied;\n\n    const {tooltipDesc, displayIcon} = getTimeSinceData(dateCreated);\n\n    return (\n      <Fragment>\n        <Tooltip title={tooltipDesc}>\n          <TimeSinceWrapper>\n            {displayIcon && <IconWarning color=\"red300\" size=\"xs\" />}\n            {tct('Uploaded [timesince]', {\n              timesince: <TimeSince disabledAbsoluteTooltip date={dateCreated} />,\n            })}\n          </TimeSinceWrapper>\n        </Tooltip>\n        <Divider />\n        <FileSize bytes={size} />\n        <Divider />\n        <span>\n          {symbolType === SymbolType.PROGUARD && cpuName === 'any'\n            ? t('proguard mapping')\n            : `${symbolType}${fileType ? ` ${fileType}` : ''}`}\n        </span>\n        <Divider />\n      </Fragment>\n    );\n  }\n\n  const filenameOrLocation = getFilenameOrLocation();\n\n  return (\n    <Wrapper>\n      <div>\n        <strong data-test-id=\"source_name\">\n          {source_name ? capitalize(source_name) : t('Unknown')}\n        </strong>\n        {filenameOrLocation && (\n          <FilenameOrLocation>{filenameOrLocation}</FilenameOrLocation>\n        )}\n      </div>\n      <Details>\n        {renderExtraDetails()}\n        {renderProcessingInfo()}\n        <Features download={download} />\n      </Details>\n    </Wrapper>\n  );\n}\n\nexport default Information;\n\nconst Wrapper = styled('div')`\n  white-space: pre-wrap;\n  word-break: break-all;\n  max-width: 100%;\n`;\n\nconst FilenameOrLocation = styled('span')`\n  padding-left: ${space(1)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n  gap: ${space(1)};\n  color: ${p => p.theme.gray400};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst TimeSinceWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  gap: ${space(0.5)};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst DateTimeWrapper = styled('div')`\n  padding-top: ${space(1)};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst StyledProcessingList = styled(ProcessingList)`\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n  gap: ${space(1)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Organization, Project} from 'sentry/types';\nimport {ImageCandidate} from 'sentry/types/debugImage';\n\nimport {INTERNAL_SOURCE} from '../utils';\n\nimport StatusTooltip from './status/statusTooltip';\nimport Actions from './actions';\nimport Information from './information';\n\ntype Props = {\n  baseUrl: string;\n  candidate: ImageCandidate;\n  hasReprocessWarning: boolean;\n  haveCandidatesAtLeastOneAction: boolean;\n  onDelete: (debugFileId: string) => void;\n  organization: Organization;\n  projSlug: Project['slug'];\n  eventDateReceived?: string;\n};\n\nfunction Candidate({\n  candidate,\n  organization,\n  projSlug,\n  baseUrl,\n  haveCandidatesAtLeastOneAction,\n  hasReprocessWarning,\n  onDelete,\n  eventDateReceived,\n}: Props) {\n  const {source} = candidate;\n  const isInternalSource = source === INTERNAL_SOURCE;\n\n  return (\n    <Fragment>\n      <Column>\n        <StatusTooltip candidate={candidate} hasReprocessWarning={hasReprocessWarning} />\n      </Column>\n\n      <InformationColumn>\n        <Information\n          candidate={candidate}\n          isInternalSource={isInternalSource}\n          eventDateReceived={eventDateReceived}\n          hasReprocessWarning={hasReprocessWarning}\n        />\n      </InformationColumn>\n\n      {haveCandidatesAtLeastOneAction && (\n        <ActionsColumn>\n          <Actions\n            onDelete={onDelete}\n            baseUrl={baseUrl}\n            projSlug={projSlug}\n            organization={organization}\n            candidate={candidate}\n            isInternalSource={isInternalSource}\n          />\n        </ActionsColumn>\n      )}\n    </Fragment>\n  );\n}\n\nexport default Candidate;\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst InformationColumn = styled(Column)`\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst ActionsColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PanelTable from 'sentry/components/panels/panelTable';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {CandidateDownloadStatus, Image, ImageStatus} from 'sentry/types/debugImage';\nimport {defined} from 'sentry/utils';\n\nimport SearchBarAction from '../../searchBarAction';\n\nimport Status from './candidate/status';\nimport Candidate from './candidate';\nimport {INTERNAL_SOURCE} from './utils';\n\nconst filterOptionCategories = {\n  status: t('Status'),\n  source: t('Source'),\n};\n\ntype FilterOptions = NonNullable<\n  React.ComponentProps<typeof SearchBarAction>['filterOptions']\n>;\n\ntype ImageCandidates = Image['candidates'];\n\ntype Props = {\n  baseUrl: string;\n  candidates: ImageCandidates;\n  hasReprocessWarning: boolean;\n  isLoading: boolean;\n  onDelete: (debugId: string) => void;\n  organization: Organization;\n  projSlug: Project['slug'];\n  eventDateReceived?: string;\n  imageStatus?: ImageStatus;\n};\n\ntype State = {\n  filterOptions: FilterOptions;\n  filterSelections: FilterOptions;\n  filteredCandidatesByFilter: ImageCandidates;\n  filteredCandidatesBySearch: ImageCandidates;\n  searchTerm: string;\n};\n\nclass Candidates extends Component<Props, State> {\n  state: State = {\n    searchTerm: '',\n    filterOptions: [],\n    filterSelections: [],\n    filteredCandidatesBySearch: [],\n    filteredCandidatesByFilter: [],\n  };\n\n  componentDidMount() {\n    this.getFilters();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (!isEqual(prevProps.candidates, this.props.candidates)) {\n      this.getFilters();\n      return;\n    }\n\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.doSearch();\n    }\n  }\n\n  filterCandidatesBySearch() {\n    const {searchTerm, filterSelections} = this.state;\n    const {candidates} = this.props;\n\n    if (!searchTerm.trim()) {\n      const filteredCandidatesByFilter = this.getFilteredCandidatedByFilter(\n        candidates,\n        filterSelections\n      );\n\n      this.setState({\n        filteredCandidatesBySearch: candidates,\n        filteredCandidatesByFilter,\n      });\n      return;\n    }\n\n    // Slightly hacky, but it works\n    // the string is being `stringfy`d here in order to match exactly the same `stringfy`d string of the loop\n    const searchFor = JSON.stringify(searchTerm)\n      // it replaces double backslash generate by JSON.stringfy with single backslash\n      .replace(/((^\")|(\"$))/g, '')\n      .toLocaleLowerCase();\n\n    const filteredCandidatesBySearch = candidates.filter(obj =>\n      Object.keys(pick(obj, ['source_name', 'location'])).some(key => {\n        const info = obj[key];\n\n        if (key === 'location' && typeof Number(info) === 'number') {\n          return false;\n        }\n\n        if (!defined(info) || !String(info).trim()) {\n          return false;\n        }\n\n        return JSON.stringify(info)\n          .replace(/((^\")|(\"$))/g, '')\n          .toLocaleLowerCase()\n          .trim()\n          .includes(searchFor);\n      })\n    );\n\n    const filteredCandidatesByFilter = this.getFilteredCandidatedByFilter(\n      filteredCandidatesBySearch,\n      filterSelections\n    );\n\n    this.setState({\n      filteredCandidatesBySearch,\n      filteredCandidatesByFilter,\n    });\n  }\n\n  doSearch = debounce(this.filterCandidatesBySearch, 300);\n\n  getFilters() {\n    const {imageStatus} = this.props;\n    const candidates = [...this.props.candidates];\n    const filterOptions = this.getFilterOptions(candidates);\n\n    const defaultFilterSelections = (\n      filterOptions.find(section => section.value === 'status')?.options ?? []\n    ).filter(\n      opt =>\n        opt.value !== `status-${CandidateDownloadStatus.NOT_FOUND}` ||\n        imageStatus === ImageStatus.MISSING\n    );\n\n    this.setState({\n      filterOptions,\n      filterSelections: defaultFilterSelections,\n      filteredCandidatesBySearch: candidates,\n      filteredCandidatesByFilter: this.getFilteredCandidatedByFilter(\n        candidates,\n        defaultFilterSelections\n      ),\n    });\n  }\n\n  getFilterOptions(candidates: ImageCandidates) {\n    const filterOptions: FilterOptions = [];\n\n    const candidateStatus = [\n      ...new Set(candidates.map(candidate => candidate.download.status)),\n    ];\n\n    if (candidateStatus.length > 1) {\n      filterOptions.push({\n        value: 'status',\n        label: filterOptionCategories.status,\n        options: candidateStatus.map(status => ({\n          value: `status-${status}`,\n          label: <Status status={status} />,\n        })),\n      });\n    }\n\n    const candidateSources = [\n      ...new Set(candidates.map(candidate => candidate.source_name ?? t('Unknown'))),\n    ];\n\n    if (candidateSources.length > 1) {\n      filterOptions.push({\n        value: 'source',\n        label: filterOptionCategories.source,\n        options: candidateSources.map(sourceName => ({\n          value: `source-${sourceName}`,\n          label: sourceName,\n        })),\n      });\n    }\n\n    return filterOptions as FilterOptions;\n  }\n\n  getFilteredCandidatedByFilter(\n    candidates: ImageCandidates,\n    filterOptions: FilterOptions\n  ) {\n    const checkedStatusOptions = new Set(\n      filterOptions\n        .filter(option => option.value.split('-')[0] === 'status')\n        .map(option => option.value.split('-')[1])\n    );\n\n    const checkedSourceOptions = new Set(\n      filterOptions\n        .filter(option => option.value.split('-')[0] === 'source')\n        .map(option => option.value.split('-')[1])\n    );\n\n    if (filterOptions.length === 0) {\n      return candidates;\n    }\n\n    if (checkedStatusOptions.size > 0) {\n      const filteredByStatus = candidates.filter(candidate =>\n        checkedStatusOptions.has(candidate.download.status)\n      );\n\n      if (checkedSourceOptions.size === 0) {\n        return filteredByStatus;\n      }\n\n      return filteredByStatus.filter(candidate =>\n        checkedSourceOptions.has(candidate?.source_name ?? '')\n      );\n    }\n\n    return candidates.filter(candidate =>\n      checkedSourceOptions.has(candidate?.source_name ?? '')\n    );\n  }\n\n  getEmptyMessage() {\n    const {searchTerm, filteredCandidatesByFilter: images, filterSelections} = this.state;\n\n    if (!!images.length) {\n      return {};\n    }\n\n    const hasActiveFilter = filterSelections.length > 0;\n\n    if (searchTerm || hasActiveFilter) {\n      return {\n        emptyMessage: t('Sorry, no debug files match your search query'),\n        emptyAction: hasActiveFilter ? (\n          <Button onClick={this.handleResetFilter} priority=\"primary\">\n            {t('Reset filter')}\n          </Button>\n        ) : (\n          <Button onClick={this.handleResetSearchBar} priority=\"primary\">\n            {t('Clear search bar')}\n          </Button>\n        ),\n      };\n    }\n\n    return {\n      emptyMessage: t('There are no debug files to be displayed'),\n    };\n  }\n\n  handleChangeSearchTerm = (searchTerm = '') => {\n    this.setState({searchTerm});\n  };\n\n  handleChangeFilter = (filterSelections: FilterOptions) => {\n    const {filteredCandidatesBySearch} = this.state;\n    const filteredCandidatesByFilter = this.getFilteredCandidatedByFilter(\n      filteredCandidatesBySearch,\n      filterSelections\n    );\n    this.setState({filterSelections, filteredCandidatesByFilter});\n  };\n\n  handleResetFilter = () => {\n    this.setState({filterSelections: []}, this.filterCandidatesBySearch);\n  };\n\n  handleResetSearchBar = () => {\n    const {candidates} = this.props;\n\n    this.setState({\n      searchTerm: '',\n      filteredCandidatesByFilter: candidates,\n      filteredCandidatesBySearch: candidates,\n    });\n  };\n\n  render() {\n    const {\n      organization,\n      projSlug,\n      baseUrl,\n      onDelete,\n      isLoading,\n      candidates,\n      eventDateReceived,\n      hasReprocessWarning,\n    } = this.props;\n\n    const {searchTerm, filterOptions, filterSelections, filteredCandidatesByFilter} =\n      this.state;\n\n    const haveCandidatesOkOrDeletedDebugFile = candidates.some(\n      candidate =>\n        (candidate.download.status === CandidateDownloadStatus.OK &&\n          candidate.source === INTERNAL_SOURCE) ||\n        candidate.download.status === CandidateDownloadStatus.DELETED\n    );\n    const haveCandidatesAtLeastOneAction =\n      haveCandidatesOkOrDeletedDebugFile || hasReprocessWarning;\n\n    return (\n      <Wrapper>\n        <Header>\n          <Title>\n            {t('Debug File Candidates')}\n            <QuestionTooltip\n              title={tct(\n                'These are the Debug Information Files (DIFs) corresponding to this image which have been looked up on [docLink:symbol servers] during the processing of the stacktrace.',\n                {\n                  docLink: (\n                    <ExternalLink href=\"https://docs.sentry.io/platforms/native/data-management/debug-files/symbol-servers/\" />\n                  ),\n                }\n              )}\n              size=\"xs\"\n              position=\"top\"\n              isHoverable\n            />\n          </Title>\n          {!!candidates.length && (\n            <StyledSearchBarAction\n              query={searchTerm}\n              onChange={value => this.handleChangeSearchTerm(value)}\n              placeholder={t('Search debug file candidates')}\n              filterOptions={filterOptions}\n              filterSelections={filterSelections}\n              onFilterChange={this.handleChangeFilter}\n            />\n          )}\n        </Header>\n        <StyledPanelTable\n          headers={\n            haveCandidatesAtLeastOneAction\n              ? [t('Status'), t('Information'), '']\n              : [t('Status'), t('Information')]\n          }\n          isEmpty={!filteredCandidatesByFilter.length}\n          isLoading={isLoading}\n          {...this.getEmptyMessage()}\n        >\n          {filteredCandidatesByFilter.map((candidate, index) => (\n            <Candidate\n              key={index}\n              candidate={candidate}\n              organization={organization}\n              baseUrl={baseUrl}\n              projSlug={projSlug}\n              eventDateReceived={eventDateReceived}\n              hasReprocessWarning={hasReprocessWarning}\n              haveCandidatesAtLeastOneAction={haveCandidatesAtLeastOneAction}\n              onDelete={onDelete}\n            />\n          ))}\n        </StyledPanelTable>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Candidates;\n\nconst Wrapper = styled('div')`\n  display: grid;\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    flex-wrap: wrap;\n    flex-direction: row;\n  }\n`;\n\nconst Title = styled('div')`\n  padding-right: ${space(4)};\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: repeat(2, max-content);\n  align-items: center;\n  font-weight: 600;\n  color: ${p => p.theme.gray400};\n  height: 32px;\n  flex: 1;\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    margin-bottom: ${space(1)};\n  }\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: ${p =>\n    p.headers.length === 3 ? 'max-content 1fr max-content' : 'max-content 1fr'};\n\n  height: 100%;\n\n  @media (min-width: ${props => props.theme.breakpoints.xxlarge}) {\n    overflow: visible;\n  }\n`;\n\nconst StyledSearchBarAction = styled(SearchBarAction)`\n  margin-bottom: ${space(1.5)};\n`;\n","import styled from '@emotion/styled';\n\nimport NotAvailable from 'sentry/components/notAvailable';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Image} from 'sentry/types/debugImage';\n\nimport Processings from '../debugImage/processings';\nimport {getImageAddress} from '../utils';\n\ntype Props = {\n  image?: Image;\n};\n\nfunction GeneralInfo({image}: Props) {\n  const {debug_id, debug_file, code_id, code_file, arch, unwind_status, debug_status} =\n    image ?? {};\n\n  const imageAddress = image ? getImageAddress(image) : undefined;\n\n  return (\n    <Wrapper>\n      <Label coloredBg>{t('Address Range')}</Label>\n      <Value coloredBg>{imageAddress ?? <NotAvailable />}</Value>\n\n      <Label>{t('Debug ID')}</Label>\n      <Value>{debug_id ?? <NotAvailable />}</Value>\n\n      <Label coloredBg>{t('Debug File')}</Label>\n      <Value coloredBg>{debug_file ?? <NotAvailable />}</Value>\n\n      <Label>{t('Code ID')}</Label>\n      <Value>{code_id ?? <NotAvailable />}</Value>\n\n      <Label coloredBg>{t('Code File')}</Label>\n      <Value coloredBg>{code_file ?? <NotAvailable />}</Value>\n\n      <Label>{t('Architecture')}</Label>\n      <Value>{arch ?? <NotAvailable />}</Value>\n\n      <Label coloredBg>{t('Processing')}</Label>\n      <Value coloredBg>\n        {unwind_status || debug_status ? (\n          <Processings unwind_status={unwind_status} debug_status={debug_status} />\n        ) : (\n          <NotAvailable />\n        )}\n      </Value>\n    </Wrapper>\n  );\n}\n\nexport default GeneralInfo;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n`;\n\nconst Label = styled('div')<{coloredBg?: boolean}>`\n  color: ${p => p.theme.textColor};\n  padding: ${space(1)} ${space(1.5)} ${space(1)} ${space(1)};\n  ${p => p.coloredBg && `background-color: ${p.theme.backgroundSecondary};`}\n`;\n\nconst Value = styled(Label)`\n  white-space: pre-wrap;\n  word-break: break-all;\n  color: ${p => p.theme.subText};\n  padding: ${space(1)};\n  font-family: ${p => p.theme.text.familyMono};\n  ${p => p.coloredBg && `background-color: ${p.theme.backgroundSecondary};`}\n`;\n","import {useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport AlertLink from 'sentry/components/alertLink';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nenum ReprocessableEventReason {\n  // It can have many reasons. The event is too old to be reprocessed (very unlikely!)\n  // or was not a native event.\n  UNPROCESSED_EVENT_NOT_FOUND = 'unprocessed_event.not_found',\n  // The event does not exist.\n  EVENT_NOT_FOUND = 'event.not_found',\n  // A required attachment, such as the original minidump, is missing.\n  ATTACHMENT_NOT_FOUND = 'attachment.not_found',\n}\n\ntype ReprocessableEvent = {\n  reprocessable: boolean;\n  reason?: ReprocessableEventReason;\n};\n\ntype Props = {\n  api: Client;\n  eventId: Event['id'];\n  onReprocessEvent: () => void;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n};\n\nfunction ReprocessAlert({onReprocessEvent, api, orgSlug, projSlug, eventId}: Props) {\n  const [reprocessableEvent, setReprocessableEvent] = useState<\n    undefined | ReprocessableEvent\n  >();\n\n  useEffect(() => {\n    checkEventReprocessable();\n  }, []);\n\n  async function checkEventReprocessable() {\n    try {\n      const response = await api.requestPromise(\n        `/projects/${orgSlug}/${projSlug}/events/${eventId}/reprocessable/`\n      );\n      setReprocessableEvent(response);\n    } catch {\n      // do nothing\n    }\n  }\n\n  if (!reprocessableEvent) {\n    return null;\n  }\n\n  const {reprocessable, reason} = reprocessableEvent;\n\n  if (reprocessable) {\n    return (\n      <AlertLink\n        priority=\"warning\"\n        size=\"small\"\n        onClick={onReprocessEvent}\n        withoutMarginBottom\n      >\n        {t(\n          'You’ve uploaded new debug files. Reprocess events in this issue to view a better stack trace'\n        )}\n      </AlertLink>\n    );\n  }\n\n  function getAlertInfoMessage() {\n    switch (reason) {\n      case ReprocessableEventReason.EVENT_NOT_FOUND:\n        return t('This event cannot be reprocessed because the event has not been found');\n      case ReprocessableEventReason.ATTACHMENT_NOT_FOUND:\n        return t(\n          'This event cannot be reprocessed because a required attachment is missing'\n        );\n      case ReprocessableEventReason.UNPROCESSED_EVENT_NOT_FOUND:\n      default:\n        return t('This event cannot be reprocessed');\n    }\n  }\n\n  return <StyledAlert type=\"info\">{getAlertInfoMessage()}</StyledAlert>;\n}\n\nexport default ReprocessAlert;\n\nconst StyledAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport partition from 'lodash/partition';\nimport sortBy from 'lodash/sortBy';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile, DebugFileFeature} from 'sentry/types/debugFiles';\nimport {CandidateDownloadStatus, Image, ImageStatus} from 'sentry/types/debugImage';\nimport {Event} from 'sentry/types/event';\nimport {displayReprocessEventAction} from 'sentry/utils/displayReprocessEventAction';\nimport theme from 'sentry/utils/theme';\nimport {getFileType} from 'sentry/views/settings/projectDebugFiles/utils';\n\nimport {getFileName} from '../utils';\n\nimport Candidates from './candidates';\nimport GeneralInfo from './generalInfo';\nimport ReprocessAlert from './reprocessAlert';\nimport {INTERNAL_SOURCE, INTERNAL_SOURCE_LOCATION} from './utils';\n\ntype ImageCandidates = Image['candidates'];\n\ntype Props = AsyncComponent['props'] &\n  ModalRenderProps & {\n    event: Event;\n    organization: Organization;\n    projSlug: Project['slug'];\n    image?: Image & {status: ImageStatus};\n    onReprocessEvent?: () => void;\n  };\n\ntype State = AsyncComponent['state'] & {\n  debugFiles: Array<DebugFile> | null;\n};\n\nclass DebugImageDetails extends AsyncComponent<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      debugFiles: [],\n    };\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (!prevProps.image && !!this.props.image) {\n      this.remountComponent();\n    }\n\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  getUplodedDebugFiles(candidates: ImageCandidates) {\n    return candidates.find(candidate => candidate.source === INTERNAL_SOURCE);\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, projSlug, image} = this.props;\n\n    if (!image) {\n      return [];\n    }\n\n    const {debug_id, candidates = []} = image;\n\n    const uploadedDebugFiles = this.getUplodedDebugFiles(candidates);\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [];\n\n    if (uploadedDebugFiles) {\n      endpoints.push([\n        'debugFiles',\n        `/projects/${organization.slug}/${projSlug}/files/dsyms/?debug_id=${debug_id}`,\n        {\n          query: {\n            file_formats: ['breakpad', 'macho', 'elf', 'pe', 'pdb', 'sourcebundle'],\n          },\n        },\n      ]);\n    }\n\n    return endpoints;\n  }\n\n  sortCandidates(\n    candidates: ImageCandidates,\n    unAppliedCandidates: ImageCandidates\n  ): ImageCandidates {\n    const [noPermissionCandidates, restNoPermissionCandidates] = partition(\n      candidates,\n      candidate => candidate.download.status === CandidateDownloadStatus.NO_PERMISSION\n    );\n\n    const [malFormedCandidates, restMalFormedCandidates] = partition(\n      restNoPermissionCandidates,\n      candidate => candidate.download.status === CandidateDownloadStatus.MALFORMED\n    );\n\n    const [errorCandidates, restErrorCandidates] = partition(\n      restMalFormedCandidates,\n      candidate => candidate.download.status === CandidateDownloadStatus.ERROR\n    );\n\n    const [okCandidates, restOKCandidates] = partition(\n      restErrorCandidates,\n      candidate => candidate.download.status === CandidateDownloadStatus.OK\n    );\n\n    const [deletedCandidates, notFoundCandidates] = partition(\n      restOKCandidates,\n      candidate => candidate.download.status === CandidateDownloadStatus.DELETED\n    );\n\n    return [\n      ...sortBy(noPermissionCandidates, ['source_name', 'location']),\n      ...sortBy(malFormedCandidates, ['source_name', 'location']),\n      ...sortBy(errorCandidates, ['source_name', 'location']),\n      ...sortBy(okCandidates, ['source_name', 'location']),\n      ...sortBy(deletedCandidates, ['source_name', 'location']),\n      ...sortBy(unAppliedCandidates, ['source_name', 'location']),\n      ...sortBy(notFoundCandidates, ['source_name', 'location']),\n    ];\n  }\n\n  getCandidates() {\n    const {debugFiles, loading} = this.state;\n    const {image} = this.props;\n    const {candidates = []} = image ?? {};\n\n    if (!debugFiles || loading) {\n      return candidates;\n    }\n\n    const debugFileCandidates = candidates.map(({location, ...candidate}) => ({\n      ...candidate,\n      location: location?.includes(INTERNAL_SOURCE_LOCATION)\n        ? location.split(INTERNAL_SOURCE_LOCATION)[1]\n        : location,\n    }));\n\n    const candidateLocations = new Set(\n      debugFileCandidates.map(({location}) => location).filter(location => !!location)\n    );\n\n    const [unAppliedDebugFiles, appliedDebugFiles] = partition(\n      debugFiles,\n      debugFile => !candidateLocations.has(debugFile.id)\n    );\n\n    const unAppliedCandidates = unAppliedDebugFiles.map(debugFile => {\n      const {\n        data,\n        symbolType,\n        objectName: filename,\n        id: location,\n        size,\n        dateCreated,\n        cpuName,\n      } = debugFile;\n\n      const features = data?.features ?? [];\n\n      return {\n        download: {\n          status: CandidateDownloadStatus.UNAPPLIED,\n          features: {\n            has_sources: features.includes(DebugFileFeature.SOURCES),\n            has_debug_info: features.includes(DebugFileFeature.DEBUG),\n            has_unwind_info: features.includes(DebugFileFeature.UNWIND),\n            has_symbols: features.includes(DebugFileFeature.SYMTAB),\n          },\n        },\n        cpuName,\n        location,\n        filename,\n        size,\n        dateCreated,\n        symbolType,\n        fileType: getFileType(debugFile),\n        source: INTERNAL_SOURCE,\n        source_name: t('Sentry'),\n      };\n    });\n\n    const [debugFileInternalOkCandidates, debugFileOtherCandidates] = partition(\n      debugFileCandidates,\n      debugFileCandidate =>\n        debugFileCandidate.download.status === CandidateDownloadStatus.OK &&\n        debugFileCandidate.source === INTERNAL_SOURCE\n    );\n\n    const convertedDebugFileInternalOkCandidates = debugFileInternalOkCandidates.map(\n      debugFileOkCandidate => {\n        const internalDebugFileInfo = appliedDebugFiles.find(\n          appliedDebugFile => appliedDebugFile.id === debugFileOkCandidate.location\n        );\n\n        if (!internalDebugFileInfo) {\n          return {\n            ...debugFileOkCandidate,\n            download: {\n              ...debugFileOkCandidate.download,\n              status: CandidateDownloadStatus.DELETED,\n            },\n          };\n        }\n\n        const {\n          symbolType,\n          objectName: filename,\n          id: location,\n          size,\n          dateCreated,\n          cpuName,\n        } = internalDebugFileInfo;\n\n        return {\n          ...debugFileOkCandidate,\n          cpuName,\n          location,\n          filename,\n          size,\n          dateCreated,\n          symbolType,\n          fileType: getFileType(internalDebugFileInfo),\n        };\n      }\n    );\n\n    return this.sortCandidates(\n      [\n        ...convertedDebugFileInternalOkCandidates,\n        ...debugFileOtherCandidates,\n      ] as ImageCandidates,\n      unAppliedCandidates as ImageCandidates\n    );\n  }\n\n  handleDelete = async (debugId: string) => {\n    const {organization, projSlug} = this.props;\n\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${projSlug}/files/dsyms/?id=${debugId}`,\n        {method: 'DELETE'}\n      );\n      this.fetchData();\n    } catch {\n      addErrorMessage(t('An error occurred while deleting the debug file.'));\n      this.setState({loading: false});\n    }\n  };\n\n  getDebugFilesSettingsLink() {\n    const {organization, projSlug, image} = this.props;\n    const orgSlug = organization.slug;\n    const debugId = image?.debug_id;\n\n    if (!orgSlug || !projSlug || !debugId) {\n      return undefined;\n    }\n\n    return `/settings/${orgSlug}/projects/${projSlug}/debug-symbols/?query=${debugId}`;\n  }\n\n  renderBody() {\n    const {Header, Body, Footer, image, organization, projSlug, event, onReprocessEvent} =\n      this.props;\n    const {loading} = this.state;\n\n    const {code_file, status} = image ?? {};\n    const debugFilesSettingsLink = this.getDebugFilesSettingsLink();\n    const candidates = this.getCandidates();\n    const baseUrl = this.api.baseUrl;\n    const fileName = getFileName(code_file);\n    const haveCandidatesUnappliedDebugFile = candidates.some(\n      candidate => candidate.download.status === CandidateDownloadStatus.UNAPPLIED\n    );\n    const hasReprocessWarning =\n      haveCandidatesUnappliedDebugFile &&\n      displayReprocessEventAction(organization.features, event) &&\n      !!onReprocessEvent;\n\n    return (\n      <Fragment>\n        <Header closeButton>\n          <Title>\n            {t('Image')}\n            <FileName>{fileName ?? t('Unknown')}</FileName>\n          </Title>\n        </Header>\n        <Body>\n          <Content>\n            <GeneralInfo image={image} />\n            {hasReprocessWarning && (\n              <ReprocessAlert\n                api={this.api}\n                orgSlug={organization.slug}\n                projSlug={projSlug}\n                eventId={event.id}\n                onReprocessEvent={onReprocessEvent}\n              />\n            )}\n            <Candidates\n              imageStatus={status}\n              candidates={candidates}\n              organization={organization}\n              projSlug={projSlug}\n              baseUrl={baseUrl}\n              isLoading={loading}\n              eventDateReceived={event.dateReceived}\n              onDelete={this.handleDelete}\n              hasReprocessWarning={hasReprocessWarning}\n            />\n          </Content>\n        </Body>\n        <Footer>\n          <StyledButtonBar gap={1}>\n            <Button\n              href=\"https://docs.sentry.io/platforms/native/data-management/debug-files/\"\n              external\n            >\n              {t('Read the docs')}\n            </Button>\n            {debugFilesSettingsLink && (\n              <Button\n                title={t(\n                  'Search for this debug file in all images for the %s project',\n                  projSlug\n                )}\n                to={debugFilesSettingsLink}\n              >\n                {t('Open in Settings')}\n              </Button>\n            )}\n          </StyledButtonBar>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default DebugImageDetails;\n\nconst Content = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst Title = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  max-width: calc(100% - 40px);\n  word-break: break-all;\n`;\n\nconst FileName = styled('span')`\n  font-family: ${p => p.theme.text.familyMono};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  white-space: nowrap;\n`;\n\nexport const modalCss = css`\n  [role='document'] {\n    overflow: initial;\n  }\n\n  @media (min-width: ${theme.breakpoints.small}) {\n    width: 90%;\n  }\n\n  @media (min-width: ${theme.breakpoints.xlarge}) {\n    width: 70%;\n  }\n\n  @media (min-width: ${theme.breakpoints.xxlarge}) {\n    width: 50%;\n  }\n`;\n","export enum DebugFileType {\n  EXE = 'exe',\n  DBG = 'dbg',\n  LIB = 'lib',\n}\n\nexport enum DebugFileFeature {\n  SYMTAB = 'symtab',\n  DEBUG = 'debug',\n  UNWIND = 'unwind',\n  SOURCES = 'sources',\n}\n\ntype Secret = {'hidden-secret': boolean};\n\nexport type BuiltinSymbolSource = {\n  hidden: boolean;\n  id: string;\n  name: string;\n  sentry_key: string;\n};\n\nexport type DebugFile = {\n  codeId: string;\n  cpuName: string;\n  dateCreated: string;\n  debugId: string;\n  headers: Record<string, string>;\n  id: string;\n  objectName: string;\n  sha1: string;\n  size: number;\n  symbolType: string;\n  uuid: string;\n  data?: {features: DebugFileFeature[]; type: DebugFileType};\n};\n\n// Custom Repository\nexport enum CustomRepoType {\n  HTTP = 'http',\n  S3 = 's3',\n  GCS = 'gcs',\n  APP_STORE_CONNECT = 'appStoreConnect',\n}\n\nexport type AppStoreConnectValidationError = {\n  code:\n    | 'app-connect-authentication-error'\n    | 'app-connect-forbidden-error'\n    | 'app-connect-multiple-sources-error';\n};\n\nexport type AppStoreConnectCredentialsStatus =\n  | {status: 'valid'}\n  | ({status: 'invalid'} & AppStoreConnectValidationError);\n\nexport type AppStoreConnectStatusData = {\n  credentials: AppStoreConnectCredentialsStatus;\n  lastCheckedBuilds: string | null;\n  /**\n   * The build number of the latest build recognized by sentry. This does not\n   * imply the dSYMs for this build have been fetched. The contents of this\n   * string is just a number. This will be null if no builds can be found.\n   */\n  latestBuildNumber: string | null;\n  /**\n   * A human-readable string representing the latest build recognized by\n   * sentry. i.e. 3.4.0. This does not imply the dSYMs for this build have been\n   * fetched. This will be null if no builds can be found.\n   */\n  latestBuildVersion: string | null;\n  /**\n   * Indicates the number of downloads waiting to be processed and completed,\n   * or the number of downloads waiting for valid credentials to be completed if applicable.\n   */\n  pendingDownloads: number;\n  updateAlertMessage?: string;\n};\n\nexport type CustomRepoAppStoreConnect = {\n  appId: string;\n  appName: string;\n  appconnectIssuer: string;\n  appconnectKey: string;\n  appconnectPrivateKey: Secret;\n  bundleId: string;\n  id: string;\n  name: string;\n  type: CustomRepoType.APP_STORE_CONNECT;\n  details?: AppStoreConnectStatusData;\n};\n\nexport type CustomRepoHttp = {\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  password: Secret;\n  type: CustomRepoType.HTTP;\n  url: string;\n  username: string;\n};\n\ntype CustomRepoS3 = {\n  access_key: string;\n  bucket: string;\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  region: string;\n  secret_key: Secret;\n  type: CustomRepoType.S3;\n};\n\ntype CustomRepoGCS = {\n  bucket: string;\n  client_email: string;\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  prefix: string;\n  private_key: Secret;\n  type: CustomRepoType.GCS;\n};\n\nexport type CustomRepo =\n  | CustomRepoAppStoreConnect\n  | CustomRepoHttp\n  | CustomRepoS3\n  | CustomRepoGCS;\n","import {\n  EntryException,\n  EntryType,\n  Event,\n  ExceptionValue,\n  PlatformType,\n  StacktraceType,\n  Thread,\n} from 'sentry/types';\n\nconst NATIVE_PLATFORMS = ['cocoa', 'native'] as Array<PlatformType>;\n\n// Finds all frames in a given data blob and returns it's platforms\nfunction getPlatforms(exceptionValue: ExceptionValue | StacktraceType | null) {\n  const frames = exceptionValue?.frames ?? [];\n  const stacktraceFrames = (exceptionValue as ExceptionValue)?.stacktrace?.frames ?? [];\n\n  if (!frames.length && !stacktraceFrames.length) {\n    return [];\n  }\n\n  return [...frames, ...stacktraceFrames]\n    .map(frame => frame.platform)\n    .filter(platform => !!platform);\n}\n\nfunction getStackTracePlatforms(event: Event, exceptionEntry: EntryException) {\n  // Fetch platforms in stack traces of an exception entry\n  const exceptionEntryPlatforms = (exceptionEntry.data.values ?? []).flatMap(\n    getPlatforms\n  );\n\n  // Fetch platforms in an exception entry\n  const stackTraceEntry = (event.entries.find(\n    entry => entry.type === EntryType.STACKTRACE\n  )?.data ?? {}) as StacktraceType;\n\n  // Fetch platforms in an exception entry\n  const stackTraceEntryPlatforms = Object.keys(stackTraceEntry).flatMap(key =>\n    getPlatforms(stackTraceEntry[key])\n  );\n\n  // Fetch platforms in an thread entry\n  const threadEntry = (event.entries.find(entry => entry.type === EntryType.THREADS)?.data\n    .values ?? []) as Array<Thread>;\n\n  // Fetch platforms in a thread entry\n  const threadEntryPlatforms = threadEntry.flatMap(({stacktrace}) =>\n    getPlatforms(stacktrace)\n  );\n\n  return new Set([\n    ...exceptionEntryPlatforms,\n    ...stackTraceEntryPlatforms,\n    ...threadEntryPlatforms,\n  ]);\n}\n\n// Checks whether an event indicates that it is a native event.\nfunction isNativeEvent(event: Event, exceptionEntry: EntryException) {\n  const {platform} = event;\n\n  if (platform && NATIVE_PLATFORMS.includes(platform)) {\n    return true;\n  }\n\n  const stackTracePlatforms = getStackTracePlatforms(event, exceptionEntry);\n\n  return NATIVE_PLATFORMS.some(nativePlatform => stackTracePlatforms.has(nativePlatform));\n}\n\n//  Checks whether an event indicates that it has an associated minidump.\nfunction isMinidumpEvent(exceptionEntry: EntryException) {\n  const {data} = exceptionEntry;\n  return (data.values ?? []).some(value => value.mechanism?.type === 'minidump');\n}\n\n// Checks whether an event indicates that it has an apple crash report.\nfunction isAppleCrashReportEvent(exceptionEntry: EntryException) {\n  const {data} = exceptionEntry;\n  return (data.values ?? []).some(value => value.mechanism?.type === 'applecrashreport');\n}\n\nexport function displayReprocessEventAction(orgFeatures: Array<string>, event?: Event) {\n  if (!event || !orgFeatures.includes('reprocessing-v2')) {\n    return false;\n  }\n\n  const {entries} = event;\n  const exceptionEntry = entries.find(entry => entry.type === EntryType.EXCEPTION) as\n    | EntryException\n    | undefined;\n\n  if (!exceptionEntry) {\n    return false;\n  }\n\n  // We want to show the reprocessing button if the issue in question is native or contains native frames.\n  // The logic is taken from the symbolication pipeline in Python, where it is used to determine whether reprocessing\n  // payloads should be stored:\n  // https://github.com/getsentry/sentry/blob/cb7baef414890336881d67b7a8433ee47198c701/src/sentry/lang/native/processing.py#L425-L426\n  // It is still not ideal as one can always merge native and non-native events together into one issue,\n  // but it's the best approximation we have.\n  if (\n    !isMinidumpEvent(exceptionEntry) &&\n    !isAppleCrashReportEvent(exceptionEntry) &&\n    !isNativeEvent(event, exceptionEntry)\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import {t} from 'sentry/locale';\nimport {DebugFile, DebugFileFeature, DebugFileType} from 'sentry/types/debugFiles';\n\nexport function getFileType(dsym: DebugFile) {\n  switch (dsym.data?.type) {\n    case DebugFileType.EXE:\n      return t('executable');\n    case DebugFileType.DBG:\n      return t('debug companion');\n    case DebugFileType.LIB:\n      return t('dynamic library');\n    default:\n      return null;\n  }\n}\n\nexport function getFeatureTooltip(feature: DebugFileFeature) {\n  switch (feature) {\n    case DebugFileFeature.SYMTAB:\n      return t(\n        'Symbol tables are used as a fallback when full debug information is not available'\n      );\n    case DebugFileFeature.DEBUG:\n      return t(\n        'Debug information provides function names and resolves inlined frames during symbolication'\n      );\n    case DebugFileFeature.UNWIND:\n      return t(\n        'Stack unwinding information improves the quality of stack traces extracted from minidumps'\n      );\n    case DebugFileFeature.SOURCES:\n      return t(\n        'Source code information allows Sentry to display source code context for stack frames'\n      );\n    default:\n      return null;\n  }\n}\n"],"names":["status","CandidateDownloadStatus","type","t","Sentry","scope","setLevel","Error","INTERNAL_SOURCE","INTERNAL_SOURCE_LOCATION","StatusTooltip","candidate","hasReprocessWarning","download","label","description","disabled","location","source","details","getStatusTooltipDescription","title","Title","Label","space","noPermissionToDownloadDebugFilesInfo","noPermissionToDeleteDebugFilesInfo","debugFileDeleteConfirmationInfo","Actions","organization","isInternalSource","baseUrl","projSlug","onDelete","debugFileId","deleted","downloadUrl","slug","actions","role","debugFilesRole","hasRole","access","hasAccess","Fragment","StyledDropdownLink","caret","customTitle","icon","size","anchorRight","shouldConfirm","href","onClick","event","preventDefault","onAction","message","StyledButtonBar","gap","confirmText","onConfirm","priority","DropdownLink","props","theme","breakpoints","xxlarge","ButtonBar","Divider","Wrapper","p","gray200","Features","features","Object","keys","filter","feature","ImageFeature","map","imageFeature","getImageFeatureDescription","isDisabled","includes","StyledTag","tooltipText","undefined","Tag","processingInfo","CandidateProcessingStatus","color","Information","eventDateReceived","source_name","filenameOrLocation","symbolType","filename","SymbolType","getFilenameOrLocation","capitalize","FilenameOrLocation","Details","fileType","cpuName","dateCreated","tooltipDesc","displayIcon","dateTime","date","moment","isBefore","tct","when","from","DateTimeWrapper","diff","getTimeSinceData","TimeSinceWrapper","timesince","disabledAbsoluteTooltip","bytes","renderExtraDetails","items","debug","unwind","push","length","StyledProcessingList","renderProcessingInfo","fontSizeSmall","gray400","ProcessingList","Candidate","haveCandidatesAtLeastOneAction","Column","InformationColumn","ActionsColumn","filterOptionCategories","Candidates","Component","searchTerm","filterOptions","filterSelections","filteredCandidatesBySearch","filteredCandidatesByFilter","debounce","this","filterCandidatesBySearch","setState","state","getFilteredCandidatedByFilter","candidates","componentDidMount","getFilters","componentDidUpdate","prevProps","prevState","isEqual","doSearch","trim","searchFor","JSON","stringify","replace","toLocaleLowerCase","obj","pick","some","key","info","Number","defined","String","imageStatus","getFilterOptions","defaultFilterSelections","find","section","value","options","opt","ImageStatus","candidateStatus","Set","candidateSources","sourceName","checkedStatusOptions","option","split","checkedSourceOptions","filteredByStatus","has","getEmptyMessage","images","hasActiveFilter","emptyMessage","emptyAction","handleResetFilter","handleResetSearchBar","render","isLoading","Header","docLink","position","isHoverable","StyledSearchBarAction","query","onChange","handleChangeSearchTerm","placeholder","onFilterChange","handleChangeFilter","StyledPanelTable","headers","isEmpty","index","small","PanelTable","SearchBarAction","GeneralInfo","image","debug_id","debug_file","code_id","code_file","arch","unwind_status","debug_status","imageAddress","getImageAddress","coloredBg","Value","textColor","backgroundSecondary","subText","text","familyMono","ReprocessableEventReason","ReprocessAlert","onReprocessEvent","api","orgSlug","eventId","reprocessableEvent","setReprocessableEvent","useState","useEffect","async","response","requestPromise","checkEventReprocessable","reprocessable","reason","withoutMarginBottom","StyledAlert","EVENT_NOT_FOUND","ATTACHMENT_NOT_FOUND","UNPROCESSED_EVENT_NOT_FOUND","getAlertInfoMessage","Alert","DebugImageDetails","AsyncComponent","loading","debugId","method","fetchData","addErrorMessage","getDefaultState","super","debugFiles","remountComponent","getUplodedDebugFiles","getEndpoints","endpoints","file_formats","sortCandidates","unAppliedCandidates","noPermissionCandidates","restNoPermissionCandidates","partition","malFormedCandidates","restMalFormedCandidates","errorCandidates","restErrorCandidates","okCandidates","restOKCandidates","deletedCandidates","notFoundCandidates","sortBy","getCandidates","debugFileCandidates","candidateLocations","unAppliedDebugFiles","appliedDebugFiles","debugFile","id","data","objectName","has_sources","DebugFileFeature","has_debug_info","has_unwind_info","has_symbols","getFileType","debugFileInternalOkCandidates","debugFileOtherCandidates","debugFileCandidate","convertedDebugFileInternalOkCandidates","debugFileOkCandidate","internalDebugFileInfo","appliedDebugFile","getDebugFilesSettingsLink","renderBody","Body","Footer","debugFilesSettingsLink","fileName","getFileName","displayReprocessEventAction","closeButton","FileName","Content","dateReceived","handleDelete","external","to","fontSizeMedium","fontSizeExtraLarge","modalCss","css","DebugFileType","CustomRepoType","NATIVE_PLATFORMS","getPlatforms","exceptionValue","frames","stacktraceFrames","stacktrace","frame","platform","orgFeatures","entries","exceptionEntry","entry","EntryType","values","mechanism","isMinidumpEvent","isAppleCrashReportEvent","stackTracePlatforms","exceptionEntryPlatforms","flatMap","stackTraceEntry","stackTraceEntryPlatforms","threadEntryPlatforms","getStackTracePlatforms","nativePlatform","isNativeEvent","dsym","getFeatureTooltip"],"sourceRoot":""}