{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_utils_performance_contexts_metricsEnhancedSetting_tsx-a-508e28.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/visualMap.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/utils/performance/contexts/metricsEnhancedSetting.tsx","webpack:///./app/utils/performance/segmentExplorer/tagKeyHistogramQuery.tsx","webpack:///./app/components/charts/heatMapChart.tsx","webpack:///./app/components/charts/series/heatMapSeries.tsx","webpack:///./app/utils/performance/segmentExplorer/tagTransactionsQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/tagsHeatMap.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/tagValueTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/tagsDisplay.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionTags/index.tsx"],"sourcesContent":["import 'echarts/lib/component/visualMap';\n\nimport type {VisualMapComponentOption} from 'echarts';\n\nexport default function VisualMap(\n  visualMap: VisualMapComponentOption\n): VisualMapComponentOption {\n  return visualMap;\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import {Dispatch, ReactNode, useReducer} from 'react';\n\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricsEnhancedSettingContext {\n  autoSampleState: AutoSampleState;\n  hideSinceMetricsOnly: boolean;\n  memoizationKey: string;\n  metricSettingState: MEPState | null;\n  setAutoSampleState: Dispatch<AutoSampleState>;\n  setMetricSettingState: Dispatch<MEPState>;\n  shouldQueryProvideMEPMetricParams: boolean;\n  shouldQueryProvideMEPParams: boolean;\n  shouldQueryProvideMEPTransactionParams: boolean;\n}\n\nconst [_MEPSettingProvider, _useMEPSettingContext, _MEPSettingContext] =\n  createDefinedContext<MetricsEnhancedSettingContext>({\n    name: 'MetricsEnhancedSettingContext',\n  });\n\nexport const MEPConsumer = _MEPSettingContext.Consumer;\n\n/**\n * These will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n * \"Unset\" should be the initial state before any queries return for the first time.\n */\nexport enum AutoSampleState {\n  unset = 'unset',\n  metrics = 'metrics',\n  transactions = 'transactions',\n}\n\n/**\n * Metrics/transactions will be called something else in the copy, but functionally the data is coming from metrics / transactions.\n */\nexport enum MEPState {\n  auto = 'auto',\n  metricsOnly = 'metricsOnly',\n  transactionsOnly = 'transactionsOnly',\n}\n\nconst storageKey = 'performance.metrics-enhanced-setting';\nexport class MEPSetting {\n  static get(): MEPState | null {\n    const value = localStorage.getItem(storageKey);\n    if (value) {\n      if (!(value in MEPState)) {\n        localStorage.removeItem(storageKey);\n        return null;\n      }\n      return MEPState[value];\n    }\n    return null;\n  }\n\n  static set(value: MEPState) {\n    localStorage.setItem(storageKey, value);\n  }\n}\n\nexport const MEPSettingProvider = ({\n  children,\n  _hasMEPState,\n}: {\n  children: ReactNode;\n  _hasMEPState?: MEPState;\n}) => {\n  const organization = useOrganization();\n  const canUseMEP = organization.features.includes('performance-use-metrics');\n\n  const isControlledMEP = typeof _hasMEPState !== 'undefined';\n\n  const [_metricSettingState, setMetricSettingState] = useReducer(\n    (_: MEPState, next: MEPState) => next,\n    MEPState.auto\n  );\n  const [autoSampleState, setAutoSampleState] = useReducer(\n    (_: AutoSampleState, next: AutoSampleState) => next,\n    AutoSampleState.unset\n  );\n\n  const metricSettingState = isControlledMEP ? _hasMEPState : _metricSettingState;\n\n  const hideSinceMetricsOnly =\n    canUseMEP &&\n    (metricSettingState === MEPState.metricsOnly || metricSettingState === MEPState.auto); // TODO(k-fish): Change this so auto includes data state.\n  const shouldQueryProvideMEPParams = canUseMEP && metricSettingState === MEPState.auto;\n  const shouldQueryProvideMEPMetricParams =\n    canUseMEP && metricSettingState === MEPState.metricsOnly;\n  const shouldQueryProvideMEPTransactionParams =\n    canUseMEP && metricSettingState === MEPState.transactionsOnly;\n\n  const memoizationKey = `${metricSettingState}`;\n\n  return (\n    <_MEPSettingProvider\n      value={{\n        autoSampleState,\n        metricSettingState,\n        hideSinceMetricsOnly,\n        shouldQueryProvideMEPParams,\n        shouldQueryProvideMEPMetricParams,\n        shouldQueryProvideMEPTransactionParams,\n        memoizationKey,\n        setMetricSettingState,\n        setAutoSampleState,\n      }}\n    >\n      {children}\n    </_MEPSettingProvider>\n  );\n};\n\nexport const useMEPSettingContext = _useMEPSettingContext;\n","import {EventQuery} from 'sentry/actionCreators/events';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\n/**\n * An individual row in a Segment explorer result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  count: number;\n  tags_key: string;\n  tags_value: string;\n};\n\nexport type HistogramTag = {\n  tags_value: string;\n};\n\nexport type TableData = {\n  histogram: {data: TableDataRow[]};\n  meta: {};\n  tags: {data: HistogramTag[]};\n};\n\n/**\n * A Segment Explorer result including rows and metadata.\n */\n\ntype ChildrenProps = Omit<GenericChildrenProps<TableData>, 'tableData'> & {\n  tableData: TableData | null;\n};\n\ntype QueryProps = DiscoverQueryProps & {\n  aggregateColumn: string;\n  children: (props: ChildrenProps) => React.ReactNode;\n  numBucketsPerKey: number;\n  sort: string | string[];\n  tagKey: string;\n};\n\ntype FacetQuery = LocationQuery &\n  EventQuery & {\n    aggregateColumn?: string;\n    numBucketsPerKey?: number;\n    sort?: string | string[];\n    tagKey?: string;\n  };\n\nexport function getRequestFunction(_props: QueryProps) {\n  const {aggregateColumn} = _props;\n  function getTagExplorerRequestPayload(props: DiscoverQueryProps) {\n    const {eventView} = props;\n    const apiPayload: FacetQuery = eventView.getEventsAPIPayload(props.location);\n    apiPayload.aggregateColumn = aggregateColumn;\n    apiPayload.sort = _props.sort;\n    apiPayload.tagKey = _props.tagKey;\n    apiPayload.numBucketsPerKey = _props.numBucketsPerKey;\n    return apiPayload;\n  }\n  return getTagExplorerRequestPayload;\n}\n\nfunction shouldRefetchData(prevProps: QueryProps, nextProps: QueryProps) {\n  return (\n    prevProps.aggregateColumn !== nextProps.aggregateColumn ||\n    prevProps.sort !== nextProps.sort ||\n    prevProps.tagKey !== nextProps.tagKey\n  );\n}\n\nfunction TagKeyHistogramQuery(props: QueryProps) {\n  return (\n    <GenericDiscoverQuery<TableData, QueryProps>\n      route=\"events-facets-performance-histogram\"\n      getRequestPayload={getRequestFunction(props)}\n      shouldRefetchData={shouldRefetchData}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(TagKeyHistogramQuery);\n","import './components/visualMap';\n\nimport {forwardRef} from 'react';\nimport type {HeatmapSeriesOption, VisualMapComponentOption} from 'echarts';\n\nimport {ReactEchartsRef, Series} from 'sentry/types/echarts';\n\nimport HeatMapSeries from './series/heatMapSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type HeatmapSeries = Series &\n  Omit<HeatmapSeriesOption, 'data' | 'name'> & {\n    dataArray?: HeatmapSeriesOption['data'];\n  };\n\ntype Props = Omit<ChartProps, 'series'> & {\n  series: HeatmapSeries[];\n  visualMaps: VisualMapComponentOption[];\n  seriesOptions?: HeatmapSeriesOption;\n};\n\nexport default forwardRef<ReactEchartsRef, Props>((props, ref) => {\n  const {series, seriesOptions, visualMaps, ...otherProps} = props;\n  return (\n    <BaseChart\n      ref={ref}\n      options={{\n        visualMap: visualMaps,\n      }}\n      {...otherProps}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        HeatMapSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data.map(({value, name}) => [name, value]),\n        })\n      )}\n    />\n  );\n});\n","import 'echarts/lib/chart/heatmap';\nimport 'echarts/lib/component/visualMap';\n\nimport type {HeatmapSeriesOption} from 'echarts';\n\nimport {SeriesDataUnit} from 'sentry/types/echarts';\n\nexport default function HeatMapSeries(\n  props: Omit<HeatmapSeriesOption, 'data'> & {\n    data?: SeriesDataUnit[] | HeatmapSeriesOption['data'];\n  } = {}\n): HeatmapSeriesOption {\n  const {data, ...rest} = props;\n  return {\n    data: data as HeatmapSeriesOption['data'],\n    ...rest,\n    type: 'heatmap',\n  };\n}\n","import {MetaType} from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\ntype QueryProps = DiscoverQueryProps & {\n  query: string;\n};\n\nfunction shouldRefetchData(prevProps: QueryProps, nextProps: QueryProps) {\n  return prevProps.query !== nextProps.query;\n}\n\nfunction TagTransactionsQuery(props: QueryProps) {\n  return (\n    <GenericDiscoverQuery<TableData, QueryProps>\n      route=\"events\"\n      shouldRefetchData={shouldRefetchData}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(TagTransactionsQuery);\n","import {Fragment, useRef, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Popper} from 'react-popper';\nimport styled from '@emotion/styled';\nimport {truncate} from '@sentry/utils';\nimport classNames from 'classnames';\nimport type {VisualMapComponentOption} from 'echarts';\nimport {Location} from 'history';\nimport memoize from 'lodash/memoize';\n\nimport HeatMapChart from 'sentry/components/charts/heatMapChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {Content} from 'sentry/components/dropdownControl';\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel} from 'sentry/components/panels';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {\n  DropdownContainer,\n  DropdownItem,\n  SectionSubtext,\n} from 'sentry/components/quickTrace/styles';\nimport Truncate from 'sentry/components/truncate';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {ReactEchartsRef, Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {\n  TableData as TagTableData,\n  TableDataRow,\n} from 'sentry/utils/performance/segmentExplorer/tagKeyHistogramQuery';\nimport TagTransactionsQuery from 'sentry/utils/performance/segmentExplorer/tagTransactionsQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {getPerformanceDuration} from '../../utils';\nimport {eventsRouteWithQuery} from '../transactionEvents/utils';\nimport {generateTransactionLink} from '../utils';\n\nimport {parseHistogramBucketInfo, trackTagPageInteraction} from './utils';\n\ntype Props = {\n  aggregateColumn: string;\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  transactionName: string;\n  tagKey?: string;\n};\n\nconst findRowKey = (row: TableDataRow) => {\n  return Object.keys(row).find(key => key.includes('histogram'));\n};\n\nclass VirtualReference {\n  boundingRect: DOMRect;\n\n  constructor(element: HTMLElement) {\n    this.boundingRect = element.getBoundingClientRect();\n  }\n\n  getBoundingClientRect() {\n    return this.boundingRect;\n  }\n\n  get clientWidth() {\n    return this.getBoundingClientRect().width;\n  }\n\n  get clientHeight() {\n    return this.getBoundingClientRect().height;\n  }\n}\n\nconst getPortal = memoize((): HTMLElement => {\n  let portal = document.getElementById('heatmap-portal');\n\n  if (portal) {\n    return portal;\n  }\n\n  portal = document.createElement('div');\n  portal.setAttribute('id', 'heatmap-portal');\n  document.body.appendChild(portal);\n\n  return portal;\n});\n\nconst TagsHeatMap = (\n  props: Props & {\n    isLoading: boolean;\n    tableData: TagTableData | null;\n  }\n) => {\n  const {\n    tableData,\n    isLoading,\n    organization,\n    eventView,\n    location,\n    tagKey,\n    transactionName,\n    aggregateColumn,\n  } = props;\n\n  const chartRef = useRef<ReactEchartsRef>(null);\n  const [chartElement, setChartElement] = useState<VirtualReference | undefined>();\n  const [transactionEventView, setTransactionEventView] = useState<\n    EventView | undefined\n  >();\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n\n  // TODO(k-fish): Replace with actual theme colors.\n  const purples = ['#D1BAFC', '#9282F3', '#6056BA', '#313087', '#021156'];\n\n  const xValues = new Set();\n\n  const histogramData =\n    tableData &&\n    tableData.histogram &&\n    tableData.histogram.data &&\n    tableData.histogram.data.length\n      ? tableData.histogram.data\n      : undefined;\n  const tagData =\n    tableData && tableData.tags && tableData.tags.data ? tableData.tags.data : undefined;\n\n  const rowKey = histogramData && findRowKey(histogramData[0]);\n\n  // Reverse since e-charts takes the axis labels in the opposite order.\n  const columnNames = tagData ? tagData.map(tag => tag.tags_value).reverse() : [];\n\n  let maxCount = 0;\n\n  const _data =\n    rowKey && histogramData\n      ? histogramData.map(row => {\n          const rawDuration = row[rowKey] as number;\n          const x = getPerformanceDuration(rawDuration);\n          const y = row.tags_value;\n          xValues.add(x);\n\n          maxCount = Math.max(maxCount, row.count);\n\n          return [x, y, row.count] as number[];\n        })\n      : null;\n\n  _data?.sort((a, b) => {\n    const i = b[0] === a[0] ? 1 : 0;\n    return b[i] - a[i];\n  });\n\n  // TODO(k-fish): Cleanup options\n  const chartOptions = {\n    height: 290,\n    animation: false,\n    colors: purples,\n    tooltip: {},\n    yAxis: {\n      type: 'category' as const,\n      data: Array.from(columnNames),\n      splitArea: {\n        show: true,\n      },\n      axisLabel: {\n        formatter: (value: string) => truncate(value, 30),\n      },\n    },\n    xAxis: {\n      type: 'category' as const,\n      splitArea: {\n        show: true,\n      },\n      data: Array.from(xValues),\n      axisLabel: {\n        show: true,\n        showMinLabel: true,\n        showMaxLabel: true,\n        formatter: (value: number) => axisLabelFormatter(value, 'Count'),\n      },\n      axisLine: {},\n      axisPointer: {\n        show: false,\n      },\n      axisTick: {\n        show: true,\n        interval: 0,\n        alignWithLabel: true,\n      },\n    },\n\n    grid: {\n      left: space(3),\n      right: space(3),\n      top: '25px', // Need to bump top spacing past space(3) so the chart title doesn't overlap.\n      bottom: space(4),\n    },\n  };\n\n  const visualMaps: VisualMapComponentOption[] = [\n    {\n      min: 0,\n      max: maxCount,\n      show: false,\n      orient: 'horizontal',\n      calculable: true,\n      inRange: {\n        color: purples,\n      },\n    },\n  ];\n\n  const series: Series[] = [];\n\n  if (_data) {\n    series.push({\n      seriesName: 'Count',\n      dataArray: _data,\n      label: {\n        show: true,\n        formatter: data => formatAbbreviatedNumber(data.value[2]),\n      },\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(0, 0, 0, 0.5)',\n        },\n      },\n    } as any); // TODO(k-fish): Fix heatmap data typing\n  }\n\n  const onOpenMenu = () => {\n    setIsMenuOpen(true);\n  };\n\n  const onCloseMenu = () => {\n    setIsMenuOpen(false);\n  };\n\n  const shouldIgnoreMenuClose = e => {\n    if (chartRef.current?.getEchartsInstance().getDom().contains(e.target)) {\n      // Ignore the menu being closed if the echart is being clicked.\n      return true;\n    }\n    return false;\n  };\n\n  const histogramBucketInfo = histogramData && parseHistogramBucketInfo(histogramData[0]);\n\n  return (\n    <StyledPanel>\n      <StyledHeaderTitleLegend>\n        {t('Heat Map')}\n        <QuestionTooltip\n          size=\"sm\"\n          position=\"top\"\n          title={t(\n            'This heatmap shows the frequency for each duration across the most common tag values'\n          )}\n        />\n      </StyledHeaderTitleLegend>\n\n      <TransitionChart loading={isLoading} reloading={isLoading}>\n        <TransparentLoadingMask visible={isLoading} />\n        <DropdownMenu\n          onOpen={onOpenMenu}\n          onClose={onCloseMenu}\n          shouldIgnoreClickOutside={shouldIgnoreMenuClose}\n        >\n          {({isOpen, getMenuProps, actions}) => {\n            const onChartClick = bucket => {\n              const htmlEvent = bucket.event.event;\n              // Make a copy of the dims because echarts can remove elements after this click happens.\n              // TODO(k-fish): Look at improving this to respond properly to resize events.\n              const virtualRef = new VirtualReference(htmlEvent.target);\n              setChartElement(virtualRef);\n\n              const newTransactionEventView = eventView.clone();\n\n              newTransactionEventView.fields = [{field: aggregateColumn}];\n              const [_, tagValue] = bucket.value;\n\n              if (histogramBucketInfo && histogramData) {\n                const row = histogramData[bucket.dataIndex];\n                const currentBucketStart = parseInt(\n                  `${row[histogramBucketInfo.histogramField]}`,\n                  10\n                );\n                const currentBucketEnd =\n                  currentBucketStart + histogramBucketInfo.bucketSize;\n\n                newTransactionEventView.additionalConditions.setFilterValues(\n                  aggregateColumn,\n                  [`>=${currentBucketStart}`, `<${currentBucketEnd}`]\n                );\n              }\n\n              if (tagKey) {\n                newTransactionEventView.additionalConditions.setFilterValues(tagKey, [\n                  tagValue,\n                ]);\n              }\n\n              setTransactionEventView(newTransactionEventView);\n              trackTagPageInteraction(organization);\n\n              if (!isMenuOpen) {\n                actions.open();\n              }\n            };\n\n            const portaledContent = !chartElement ? null : (\n              <Popper referenceElement={chartElement} placement=\"bottom\">\n                {({ref, style, placement}) => {\n                  const transactionInfo = !transactionEventView ? null : (\n                    <TagTransactionsQuery\n                      query={transactionEventView.getQueryWithAdditionalConditions()}\n                      location={location}\n                      eventView={transactionEventView}\n                      orgSlug={organization.slug}\n                      limit={4}\n                      referrer=\"api.performance.tag-page\"\n                    >\n                      {({\n                        isLoading: isTransactionsLoading,\n                        tableData: transactionTableData,\n                      }) => {\n                        if (isTransactionsLoading) {\n                          return (\n                            <LoadingContainer>\n                              <LoadingIndicator size={40} hideMessage />\n                            </LoadingContainer>\n                          );\n                        }\n\n                        const moreEventsTarget = eventsRouteWithQuery({\n                          orgSlug: organization.slug,\n                          transaction: transactionName,\n                          projectID: decodeScalar(location.query.project),\n                          query: {\n                            ...transactionEventView.generateQueryStringObject(),\n                            query:\n                              transactionEventView.getQueryWithAdditionalConditions(),\n                          },\n                        });\n\n                        return (\n                          <div>\n                            {!transactionTableData?.data.length ? <Placeholder /> : null}\n                            {[...transactionTableData?.data].slice(0, 3).map(row => {\n                              const target = generateTransactionLink(transactionName)(\n                                organization,\n                                row,\n                                location.query\n                              );\n\n                              return (\n                                <DropdownItem width=\"small\" key={row.id} to={target}>\n                                  <DropdownItemContainer>\n                                    <Truncate value={row.id} maxLength={12} />\n                                    <SectionSubtext>\n                                      <PerformanceDuration\n                                        milliseconds={row[aggregateColumn]}\n                                        abbreviation\n                                      />\n                                    </SectionSubtext>\n                                  </DropdownItemContainer>\n                                </DropdownItem>\n                              );\n                            })}\n                            {moreEventsTarget &&\n                            transactionTableData &&\n                            transactionTableData.data.length > 3 ? (\n                              <DropdownItem width=\"small\" to={moreEventsTarget}>\n                                <DropdownItemContainer>\n                                  {t('View all events')}\n                                </DropdownItemContainer>\n                              </DropdownItem>\n                            ) : null}\n                          </div>\n                        );\n                      }}\n                    </TagTransactionsQuery>\n                  );\n\n                  return (\n                    <StyledDropdownContainer\n                      ref={ref}\n                      style={style}\n                      className=\"anchor-middle\"\n                      data-placement={placement}\n                    >\n                      <StyledDropdownContent\n                        {...getMenuProps({\n                          className: classNames('dropdown-menu'),\n                        })}\n                        isOpen={isOpen}\n                        alignMenu=\"right\"\n                        blendCorner={false}\n                      >\n                        {transactionInfo}\n                      </StyledDropdownContent>\n                    </StyledDropdownContainer>\n                  );\n                }}\n              </Popper>\n            );\n\n            return (\n              <Fragment>\n                {createPortal(<div>{portaledContent}</div>, getPortal())}\n                {getDynamicText({\n                  value: (\n                    <HeatMapChart\n                      ref={chartRef}\n                      visualMaps={visualMaps}\n                      series={series}\n                      onClick={onChartClick}\n                      {...chartOptions}\n                    />\n                  ),\n                  fixed: <Placeholder height=\"290px\" testId=\"skeleton-ui\" />,\n                })}\n              </Fragment>\n            );\n          }}\n        </DropdownMenu>\n      </TransitionChart>\n    </StyledPanel>\n  );\n};\n\nconst LoadingContainer = styled('div')`\n  width: 200px;\n  height: 100px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst DropdownItemContainer = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n\n  justify-content: space-between;\n`;\n\nconst StyledDropdownContainer = styled(DropdownContainer)`\n  z-index: ${p => p.theme.zIndex.dropdown};\n`;\n\nconst StyledDropdownContent = styled(Content)`\n  right: auto;\n  transform: translate(-50%);\n\n  overflow: visible;\n`;\n\nconst StyledPanel = styled(Panel)`\n  padding: ${space(3)} ${space(3)} 0 ${space(3)};\n  margin-bottom: 0;\n  border-bottom: 0;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n`;\n\nconst StyledHeaderTitleLegend = styled(HeaderTitleLegend)``;\n\nexport default TagsHeatMap;\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, LocationDescriptorObject} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumn,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination, {CursorHandler} from 'sentry/components/pagination';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {IconAdd} from 'sentry/icons/iconAdd';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {fieldAlignment} from 'sentry/utils/discover/fields';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {\n  TableData,\n  TableDataRow,\n} from 'sentry/utils/performance/segmentExplorer/segmentExplorerQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport CellAction, {Actions, updateQuery} from 'sentry/views/eventsV2/table/cellAction';\nimport {TableColumn} from 'sentry/views/eventsV2/table/types';\n\nimport {TagValue} from '../transactionOverview/tagExplorer';\nimport {normalizeSearchConditions} from '../utils';\n\nimport {\n  TAGS_TABLE_COLUMN_ORDER,\n  TagsTableColumn,\n  TagsTableColumnKeys,\n} from './tagsDisplay';\nimport {trackTagPageInteraction} from './utils';\n\nconst TAGS_CURSOR_NAME = 'tags_cursor';\n\ntype Props = {\n  aggregateColumn: string;\n  eventView: EventView;\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  pageLinks: string | null;\n  projects: Project[];\n  tableData: TableData | null;\n  transactionName: string;\n  onCursor?: CursorHandler;\n  tagKey?: string;\n};\n\ntype State = {\n  widths: number[];\n};\n\nexport class TagValueTable extends Component<Props, State> {\n  state: State = {\n    widths: [],\n  };\n  renderHeadCell(\n    sortedEventView: EventView,\n    tableMeta: TableData['meta'],\n    column: TableColumn<TagsTableColumnKeys>,\n    columnInfo: TagsTableColumn\n  ): React.ReactNode {\n    const {location} = this.props;\n    const align = fieldAlignment(column.key, column.type, tableMeta);\n    const field = {field: column.key, width: column.width};\n\n    function generateSortLink(): LocationDescriptorObject | undefined {\n      if (!tableMeta) {\n        return undefined;\n      }\n\n      const nextEventView = sortedEventView.sortOnField(field, tableMeta);\n      const {sort} = nextEventView.generateQueryStringObject();\n\n      return {\n        ...location,\n        query: {...location.query, [TAGS_CURSOR_NAME]: undefined, tagSort: sort},\n      };\n    }\n    const currentSort = sortedEventView.sortForField(field, tableMeta);\n\n    const currentSortKind = currentSort ? currentSort.kind : undefined;\n\n    return (\n      <SortLink\n        align={align}\n        title={columnInfo.name}\n        direction={currentSortKind}\n        canSort\n        generateSortLink={generateSortLink}\n      />\n    );\n  }\n\n  renderHeadCellWithMeta = (\n    sortedEventView: EventView,\n    tableMeta: TableData['meta'],\n    columns: TagsTableColumn[]\n  ) => {\n    return (column: TableColumn<TagsTableColumnKeys>, index: number): React.ReactNode =>\n      this.renderHeadCell(sortedEventView, tableMeta, column, columns[index]);\n  };\n\n  handleTagValueClick = (location: Location, tagKey: string, tagValue: string) => {\n    const queryString = decodeScalar(location.query.query);\n    const conditions = new MutableSearch(queryString ?? '');\n\n    conditions.addFilterValues(tagKey, [tagValue]);\n\n    const query = conditions.formatString();\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        query: String(query).trim(),\n      },\n    });\n  };\n\n  handleCellAction = (\n    column: TableColumn<TagsTableColumnKeys>,\n    tagValue: React.ReactText,\n    actionRow: any\n  ) => {\n    return (action: Actions) => {\n      const {eventView, location, organization} = this.props;\n      trackTagPageInteraction(organization);\n\n      const searchConditions = normalizeSearchConditions(eventView.query);\n\n      updateQuery(searchConditions, action, {...column, name: actionRow.id}, tagValue);\n\n      browserHistory.push({\n        pathname: location.pathname,\n        query: {\n          ...location.query,\n          [TAGS_CURSOR_NAME]: undefined,\n          query: searchConditions.formatString(),\n        },\n      });\n    };\n  };\n\n  generateReleaseLocation = (release: string) => {\n    const {organization, location} = this.props;\n    const {project} = location.query;\n\n    return {\n      pathname: `/organizations/${organization.slug}/releases/${encodeURIComponent(\n        release\n      )}`,\n      query: {project},\n    };\n  };\n\n  handleReleaseLinkClicked = () => {\n    const {organization} = this.props;\n    trackAdvancedAnalyticsEvent('performance_views.tags.jump_to_release', {\n      organization,\n    });\n  };\n\n  renderBodyCell = (\n    parentProps: Props,\n    column: TableColumn<TagsTableColumnKeys>,\n    dataRow: TableDataRow\n  ): React.ReactNode => {\n    const value = dataRow[column.key];\n    const {location, eventView, organization} = parentProps;\n\n    if (column.key === 'key') {\n      return dataRow.tags_key;\n    }\n\n    const allowActions = [Actions.ADD, Actions.EXCLUDE];\n\n    if (column.key === 'tagValue') {\n      const actionRow = {...dataRow, id: dataRow.tags_key};\n\n      return (\n        <CellAction\n          column={column}\n          dataRow={actionRow}\n          handleCellAction={this.handleCellAction(column, dataRow.tags_value, actionRow)}\n          allowActions={allowActions}\n        >\n          {column.name === 'release' ? (\n            <Link\n              to={this.generateReleaseLocation(dataRow.tags_value)}\n              onClick={this.handleReleaseLinkClicked}\n            >\n              <TagValue row={dataRow} />\n            </Link>\n          ) : (\n            <TagValue row={dataRow} />\n          )}\n        </CellAction>\n      );\n    }\n\n    if (column.key === 'frequency') {\n      return <AlignRight>{formatPercentage(dataRow.frequency, 0)}</AlignRight>;\n    }\n\n    if (column.key === 'action') {\n      const searchConditions = new MutableSearch(eventView.query);\n      const disabled = searchConditions.hasFilter(dataRow.tags_key);\n      return (\n        <AlignRight>\n          <Link\n            disabled={disabled}\n            to=\"\"\n            onClick={() => {\n              trackTagPageInteraction(organization);\n              this.handleTagValueClick(location, dataRow.tags_key, dataRow.tags_value);\n            }}\n          >\n            <LinkContainer>\n              <IconAdd isCircled />\n              {t('Add to filter')}\n            </LinkContainer>\n          </Link>\n        </AlignRight>\n      );\n    }\n\n    if (column.key === 'comparison') {\n      const localValue = dataRow.comparison;\n      const pct = formatPercentage(localValue - 1, 0);\n      return localValue > 1 ? t('+%s slower', pct) : t('%s faster', pct);\n    }\n\n    if (column.key === 'aggregate') {\n      return (\n        <AlignRight>\n          <PerformanceDuration abbreviation milliseconds={dataRow.aggregate} />\n        </AlignRight>\n      );\n    }\n\n    if (column.key === 'sumdelta') {\n      return (\n        <AlignRight>\n          <PerformanceDuration abbreviation milliseconds={dataRow.sumdelta} />\n        </AlignRight>\n      );\n    }\n\n    if (column.key === 'count') {\n      return <AlignRight>{value}</AlignRight>;\n    }\n\n    return value;\n  };\n\n  renderBodyCellWithData = (parentProps: Props) => {\n    return (\n      column: TableColumn<TagsTableColumnKeys>,\n      dataRow: TableDataRow\n    ): React.ReactNode => this.renderBodyCell(parentProps, column, dataRow);\n  };\n\n  handleResizeColumn = (columnIndex: number, nextColumn: GridColumn) => {\n    const widths: number[] = [...this.state.widths];\n    widths[columnIndex] = nextColumn.width\n      ? Number(nextColumn.width)\n      : COL_WIDTH_UNDEFINED;\n    this.setState({widths});\n  };\n\n  render() {\n    const {\n      eventView,\n      tagKey,\n      location,\n      isLoading,\n      tableData,\n      aggregateColumn,\n      pageLinks,\n      onCursor,\n    } = this.props;\n\n    const newColumns = [...TAGS_TABLE_COLUMN_ORDER].map(c => {\n      const newColumn = {...c};\n      if (c.key === 'tagValue' && tagKey) {\n        newColumn.name = tagKey;\n      }\n      if (c.key === 'aggregate') {\n        if (aggregateColumn === 'measurements.lcp') {\n          newColumn.name = 'Avg LCP';\n        }\n      }\n      return newColumn;\n    });\n\n    return (\n      <StyledPanelTable>\n        <GridEditable\n          isLoading={isLoading}\n          data={tableData && tableData.data ? tableData.data : []}\n          columnOrder={newColumns}\n          columnSortBy={[]}\n          grid={{\n            renderHeadCell: this.renderHeadCellWithMeta(\n              eventView,\n              tableData ? tableData.meta : {},\n              newColumns\n            ) as any,\n            renderBodyCell: this.renderBodyCellWithData(this.props) as any,\n            onResizeColumn: this.handleResizeColumn,\n          }}\n          location={location}\n        />\n\n        <Pagination pageLinks={pageLinks} onCursor={onCursor} size=\"small\" />\n      </StyledPanelTable>\n    );\n  }\n}\n\nconst StyledPanelTable = styled('div')`\n  > div {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`;\n\nconst AlignRight = styled('div')`\n  text-align: right;\n  flex: 1;\n`;\n\nconst LinkContainer = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(0.5)};\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport default TagValueTable;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {GridColumnOrder} from 'sentry/components/gridEditable';\nimport {CursorHandler} from 'sentry/components/pagination';\nimport {Organization, Project} from 'sentry/types';\nimport EventView, {fromSorts} from 'sentry/utils/discover/eventView';\nimport SegmentExplorerQuery from 'sentry/utils/performance/segmentExplorer/segmentExplorerQuery';\nimport TagKeyHistogramQuery from 'sentry/utils/performance/segmentExplorer/tagKeyHistogramQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {SpanOperationBreakdownFilter} from '../filter';\nimport {getTransactionField} from '../transactionOverview/tagExplorer';\n\nimport TagsHeatMap from './tagsHeatMap';\nimport {TagValueTable} from './tagValueTable';\nimport {getTagSortForTagsPage} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  transactionName: string;\n  tagKey?: string;\n};\n\nconst HISTOGRAM_TAG_KEY_LIMIT = 8;\nconst HISTOGRAM_BUCKET_LIMIT = 40;\nexport const TAG_PAGE_TABLE_CURSOR = 'tableCursor';\n\nexport type TagsTableColumnKeys =\n  | 'key'\n  | 'tagValue'\n  | 'aggregate'\n  | 'frequency'\n  | 'comparison'\n  | 'sumdelta'\n  | 'action'\n  | 'count';\n\nexport type TagsTableColumn = GridColumnOrder<TagsTableColumnKeys> & {\n  column: {\n    kind: string;\n  };\n  field: string;\n  canSort?: boolean;\n};\nexport const TAGS_TABLE_COLUMN_ORDER: TagsTableColumn[] = [\n  {\n    key: 'tagValue',\n    field: 'tagValue',\n    name: 'Tag Values',\n    width: -1,\n    column: {\n      kind: 'field',\n    },\n  },\n  {\n    key: 'frequency',\n    field: 'frequency',\n    name: 'Frequency',\n    width: -1,\n    column: {\n      kind: 'field',\n    },\n    canSort: true,\n  },\n  {\n    key: 'count',\n    field: 'count',\n    name: 'Events',\n    width: -1,\n    column: {\n      kind: 'field',\n    },\n    canSort: true,\n  },\n  {\n    key: 'aggregate',\n    field: 'aggregate',\n    name: 'Avg Duration',\n    width: -1,\n    column: {\n      kind: 'field',\n    },\n    canSort: true,\n  },\n  {\n    key: 'action',\n    field: 'action',\n    name: '',\n    width: -1,\n    column: {\n      kind: 'field',\n    },\n  },\n];\n\nconst TagsDisplay = (props: Props) => {\n  const {eventView: _eventView, location, organization, projects, tagKey} = props;\n  const eventView = _eventView.clone();\n\n  const aggregateColumn = getTransactionField(\n    SpanOperationBreakdownFilter.None,\n    projects,\n    eventView\n  );\n\n  const handleCursor: CursorHandler = (cursor, pathname, query) =>\n    browserHistory.push({\n      pathname,\n      query: {...query, [TAG_PAGE_TABLE_CURSOR]: cursor},\n    });\n\n  const cursor = decodeScalar(location.query?.[TAG_PAGE_TABLE_CURSOR]);\n\n  const tagSort = getTagSortForTagsPage(location);\n\n  const tagSorts = fromSorts(tagSort);\n\n  eventView.fields = TAGS_TABLE_COLUMN_ORDER;\n\n  const sortedEventView = eventView.withSorts(\n    tagSorts.length\n      ? tagSorts\n      : [\n          {\n            field: 'frequency',\n            kind: 'desc',\n          },\n        ]\n  );\n\n  return (\n    <Fragment>\n      {tagKey ? (\n        <Fragment>\n          <TagKeyHistogramQuery\n            eventView={eventView}\n            orgSlug={organization.slug}\n            location={location}\n            aggregateColumn={aggregateColumn}\n            numBucketsPerKey={HISTOGRAM_BUCKET_LIMIT}\n            tagKey={tagKey}\n            limit={HISTOGRAM_TAG_KEY_LIMIT}\n            cursor={cursor}\n            sort={tagSort ?? '-sumdelta'}\n          >\n            {({isLoading, tableData}) => {\n              return (\n                <TagsHeatMap\n                  {...props}\n                  tagKey={tagKey}\n                  aggregateColumn={aggregateColumn}\n                  tableData={tableData}\n                  isLoading={isLoading}\n                />\n              );\n            }}\n          </TagKeyHistogramQuery>\n          <SegmentExplorerQuery\n            eventView={sortedEventView}\n            orgSlug={organization.slug}\n            location={location}\n            aggregateColumn={aggregateColumn}\n            tagKey={tagKey}\n            limit={HISTOGRAM_TAG_KEY_LIMIT}\n            cursor={cursor}\n            sort={tagSort}\n            allTagKeys\n          >\n            {({isLoading, tableData, pageLinks}) => {\n              return (\n                <TagValueTable\n                  {...props}\n                  eventView={sortedEventView}\n                  tagKey={tagKey}\n                  aggregateColumn={aggregateColumn}\n                  pageLinks={pageLinks}\n                  tableData={tableData}\n                  isLoading={isLoading}\n                  onCursor={handleCursor}\n                />\n              );\n            }}\n          </SegmentExplorerQuery>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <TagsHeatMap\n            {...props}\n            aggregateColumn={aggregateColumn}\n            tableData={null}\n            isLoading={false}\n          />\n          <TagValueTable\n            {...props}\n            pageLinks={null}\n            aggregateColumn={aggregateColumn}\n            tableData={null}\n            isLoading={false}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default TagsDisplay;\n","import {useEffect, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport Radio from 'sentry/components/radio';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SegmentExplorerQuery, {\n  TableData,\n} from 'sentry/utils/performance/segmentExplorer/segmentExplorerQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {SidebarSpacer} from 'sentry/views/performance/transactionSummary/utils';\n\nimport {SpanOperationBreakdownFilter} from '../filter';\nimport {getTransactionField} from '../transactionOverview/tagExplorer';\n\nimport TagsDisplay, {TAG_PAGE_TABLE_CURSOR} from './tagsDisplay';\nimport {decodeSelectedTagKey} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  transactionName: string;\n};\n\ntype TagOption = string;\n\nconst TagsPageContent = (props: Props) => {\n  const {eventView, location, organization, projects} = props;\n\n  const aggregateColumn = getTransactionField(\n    SpanOperationBreakdownFilter.None,\n    projects,\n    eventView\n  );\n\n  return (\n    <Layout.Main fullWidth>\n      <SegmentExplorerQuery\n        eventView={eventView}\n        orgSlug={organization.slug}\n        location={location}\n        aggregateColumn={aggregateColumn}\n        limit={20}\n        sort=\"-sumdelta\"\n        allTagKeys\n      >\n        {({isLoading, tableData}) => {\n          return <InnerContent {...props} isLoading={isLoading} tableData={tableData} />;\n        }}\n      </SegmentExplorerQuery>\n    </Layout.Main>\n  );\n};\n\nfunction getTagKeyOptions(tableData: TableData) {\n  const suspectTags: TagOption[] = [];\n  const otherTags: TagOption[] = [];\n  tableData.data.forEach(row => {\n    const tagArray = row.comparison > 1 ? suspectTags : otherTags;\n    tagArray.push(row.tags_key);\n  });\n\n  return {\n    suspectTags,\n    otherTags,\n  };\n}\n\nconst InnerContent = (\n  props: Props & {tableData: TableData | null; isLoading?: boolean}\n) => {\n  const {eventView: _eventView, location, organization, tableData, isLoading} = props;\n  const eventView = _eventView.clone();\n\n  const tagOptions = tableData ? getTagKeyOptions(tableData) : null;\n  const suspectTags = tagOptions ? tagOptions.suspectTags : [];\n  const otherTags = tagOptions ? tagOptions.otherTags : [];\n\n  const decodedTagKey = decodeSelectedTagKey(location);\n\n  const allTags = [...suspectTags, ...otherTags];\n  const decodedTagFromOptions = decodedTagKey\n    ? allTags.find(tag => tag === decodedTagKey)\n    : undefined;\n\n  const defaultTag = allTags.length ? allTags[0] : undefined;\n\n  const initialTag = decodedTagFromOptions ?? defaultTag;\n\n  const [tagSelected, _changeTagSelected] = useState(initialTag);\n\n  const changeTagSelected = (tagKey: string) => {\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      tagKey,\n      [TAG_PAGE_TABLE_CURSOR]: undefined,\n    });\n\n    browserHistory.replace({\n      pathname: location.pathname,\n      query: queryParams,\n    });\n    _changeTagSelected(tagKey);\n  };\n\n  useEffect(() => {\n    if (initialTag) {\n      changeTagSelected(initialTag);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialTag]);\n\n  const handleSearch = (query: string) => {\n    const queryParams = normalizeDateTimeParams({\n      ...(location.query || {}),\n      query,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: queryParams,\n    });\n  };\n\n  const changeTag = (tag: string, isOtherTag: boolean) => {\n    trackAdvancedAnalyticsEvent('performance_views.tags.change_tag', {\n      organization,\n      from_tag: tagSelected!,\n      to_tag: tag,\n      is_other_tag: isOtherTag,\n    });\n\n    return changeTagSelected(tag);\n  };\n  if (tagSelected) {\n    eventView.additionalConditions.setFilterValues('has', [tagSelected]);\n  }\n\n  const query = decodeScalar(location.query.query, '');\n\n  return (\n    <ReversedLayoutBody>\n      <TagsSideBar\n        suspectTags={suspectTags}\n        otherTags={otherTags}\n        tagSelected={tagSelected}\n        changeTag={changeTag}\n        isLoading={isLoading}\n      />\n      <StyledMain>\n        <FilterActions>\n          <PageFilterBar condensed>\n            <EnvironmentPageFilter />\n            <DatePageFilter alignDropdown=\"left\" />\n          </PageFilterBar>\n          <SearchBar\n            organization={organization}\n            projectIds={eventView.project}\n            query={query}\n            fields={eventView.fields}\n            onSearch={handleSearch}\n          />\n        </FilterActions>\n        <TagsDisplay {...props} tagKey={tagSelected} />\n      </StyledMain>\n    </ReversedLayoutBody>\n  );\n};\n\nconst TagsSideBar = (props: {\n  changeTag: (tag: string, isOtherTag: boolean) => void;\n  otherTags: TagOption[];\n  suspectTags: TagOption[];\n  isLoading?: boolean;\n  tagSelected?: string;\n}) => {\n  const {suspectTags, otherTags, changeTag, tagSelected, isLoading} = props;\n  return (\n    <StyledSide>\n      <StyledSectionHeading>\n        {t('Suspect Tags')}\n        <QuestionTooltip\n          position=\"top\"\n          title={t('Suspect tags are tags that often correspond to slower transaction')}\n          size=\"sm\"\n        />\n      </StyledSectionHeading>\n      {isLoading ? (\n        <Center>\n          <LoadingIndicator mini />\n        </Center>\n      ) : suspectTags.length ? (\n        suspectTags.map(tag => (\n          <RadioLabel key={tag}>\n            <Radio\n              aria-label={tag}\n              checked={tagSelected === tag}\n              onChange={() => changeTag(tag, false)}\n            />\n            <SidebarTagValue className=\"truncate\">{tag}</SidebarTagValue>\n          </RadioLabel>\n        ))\n      ) : (\n        <div>{t('No tags detected.')}</div>\n      )}\n\n      <SidebarSpacer />\n      <StyledSectionHeading>\n        {t('Other Tags')}\n        <QuestionTooltip\n          position=\"top\"\n          title={t('Other common tags for this transaction')}\n          size=\"sm\"\n        />\n      </StyledSectionHeading>\n\n      {isLoading ? (\n        <Center>\n          <LoadingIndicator mini />\n        </Center>\n      ) : otherTags.length ? (\n        otherTags.map(tag => (\n          <RadioLabel key={tag}>\n            <Radio\n              aria-label={tag}\n              checked={tagSelected === tag}\n              onChange={() => changeTag(tag, true)}\n            />\n            <SidebarTagValue className=\"truncate\">{tag}</SidebarTagValue>\n          </RadioLabel>\n        ))\n      ) : (\n        <div>{t('No tags detected.')}</div>\n      )}\n    </StyledSide>\n  );\n};\n\nconst Center = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst RadioLabel = styled('label')`\n  cursor: pointer;\n  margin-bottom: ${space(1)};\n  font-weight: normal;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content 1fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst SidebarTagValue = styled('span')`\n  width: 100%;\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin-bottom: ${space(2)};\n`;\n\n// TODO(k-fish): Adjust thirds layout to allow for this instead.\nconst ReversedLayoutBody = styled('div')`\n  margin: 0;\n  background-color: ${p => p.theme.background};\n  flex-grow: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    display: grid;\n    grid-template-columns: auto 66%;\n    align-content: start;\n    gap: ${space(3)};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: 225px minmax(100px, auto);\n  }\n`;\n\nconst StyledSide = styled('div')`\n  grid-column: 1/2;\n`;\n\nconst StyledMain = styled('div')`\n  grid-column: 2/4;\n  max-width: 100%;\n`;\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr;\n  }\n`;\n\nexport default TagsPageContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport TagsPageContent from './content';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionTags(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.Tags}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateEventView}\n      childComponent={TagsPageContent}\n    />\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Tags')].join(' \\u2014 ');\n  }\n\n  return [t('Summary'), t('Tags')].join(' \\u2014 ');\n}\n\nfunction generateEventView({\n  location,\n  transactionName,\n}: {\n  location: Location;\n  transactionName: string;\n}): EventView {\n  const query = decodeScalar(location.query.query, '');\n  const conditions = new MutableSearch(query);\n\n  conditions.setFilterValues('event.type', ['transaction']);\n  conditions.setFilterValues('transaction', [transactionName]);\n\n  const eventView = EventView.fromNewQueryWithLocation(\n    {\n      id: undefined,\n      version: 2,\n      name: transactionName,\n      fields: ['transaction.duration'],\n      query: conditions.formatString(),\n      projects: [],\n    },\n    location\n  );\n\n  return eventView;\n}\n\nexport default withProjects(withOrganization(TransactionTags));\n"],"names":["VisualMap","visualMap","LoadingPanel","height","_height","props","p","defaultProps","TransitionChart","Component","prevReloading","this","reloading","prevLoading","loading","key","state","nextReloading","nextLoading","render","Fragment","children","String","className","visible","other","ListLink","_classNames","activeClassName","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","theme","backgroundSecondary","borderRadius","_MEPSettingProvider","_useMEPSettingContext","_MEPSettingContext","createDefinedContext","name","MEPConsumer","Consumer","AutoSampleState","MEPState","MEPSettingProvider","_hasMEPState","canUseMEP","useOrganization","features","includes","isControlledMEP","_metricSettingState","setMetricSettingState","useReducer","_","next","auto","autoSampleState","setAutoSampleState","unset","metricSettingState","hideSinceMetricsOnly","metricsOnly","shouldQueryProvideMEPParams","shouldQueryProvideMEPMetricParams","shouldQueryProvideMEPTransactionParams","transactionsOnly","memoizationKey","value","useMEPSettingContext","getRequestFunction","_props","aggregateColumn","eventView","apiPayload","getEventsAPIPayload","location","sort","tagKey","numBucketsPerKey","shouldRefetchData","prevProps","nextProps","TagKeyHistogramQuery","route","getRequestPayload","withApi","forwardRef","ref","series","seriesOptions","visualMaps","otherProps","options","map","seriesName","data","dataArray","rest","type","HeatMapSeries","TagTransactionsQuery","VirtualReference","constructor","element","boundingRect","getBoundingClientRect","clientWidth","width","clientHeight","getPortal","memoize","portal","document","getElementById","createElement","setAttribute","body","appendChild","TagsHeatMap","tableData","isLoading","organization","transactionName","chartRef","useRef","chartElement","setChartElement","useState","transactionEventView","setTransactionEventView","isMenuOpen","setIsMenuOpen","purples","xValues","Set","histogramData","histogram","length","tagData","tags","rowKey","row","Object","keys","find","columnNames","tag","tags_value","reverse","maxCount","_data","rawDuration","x","getPerformanceDuration","y","add","Math","max","count","a","b","i","chartOptions","animation","colors","tooltip","yAxis","Array","from","splitArea","show","axisLabel","formatter","truncate","xAxis","showMinLabel","showMaxLabel","axisLabelFormatter","axisLine","axisPointer","axisTick","interval","alignWithLabel","grid","left","space","right","top","bottom","min","orient","calculable","inRange","color","push","label","formatAbbreviatedNumber","emphasis","itemStyle","shadowBlur","shadowColor","histogramBucketInfo","parseHistogramBucketInfo","StyledPanel","StyledHeaderTitleLegend","t","size","position","title","onOpen","onClose","shouldIgnoreClickOutside","e","current","getEchartsInstance","getDom","contains","isOpen","getMenuProps","actions","portaledContent","Popper","referenceElement","placement","style","transactionInfo","getQueryWithAdditionalConditions","orgSlug","slug","limit","referrer","isTransactionsLoading","transactionTableData","LoadingContainer","hideMessage","moreEventsTarget","eventsRouteWithQuery","transaction","projectID","decodeScalar","project","generateQueryStringObject","slice","generateTransactionLink","DropdownItemContainer","id","maxLength","milliseconds","abbreviation","StyledDropdownContainer","StyledDropdownContent","alignMenu","blendCorner","createPortal","getDynamicText","onClick","bucket","htmlEvent","event","virtualRef","newTransactionEventView","clone","fields","field","tagValue","dataIndex","currentBucketStart","parseInt","histogramField","currentBucketEnd","bucketSize","additionalConditions","setFilterValues","trackTagPageInteraction","open","fixed","testId","DropdownContainer","zIndex","dropdown","Content","Panel","HeaderTitleLegend","TAGS_CURSOR_NAME","TagValueTable","widths","sortedEventView","tableMeta","columns","column","renderHeadCell","queryString","conditions","MutableSearch","addFilterValues","formatString","browserHistory","trim","actionRow","action","searchConditions","normalizeSearchConditions","updateQuery","release","encodeURIComponent","trackAdvancedAnalyticsEvent","parentProps","dataRow","tags_key","allowActions","Actions","handleCellAction","generateReleaseLocation","handleReleaseLinkClicked","AlignRight","formatPercentage","frequency","hasFilter","handleTagValueClick","LinkContainer","isCircled","localValue","comparison","pct","aggregate","sumdelta","renderBodyCell","columnIndex","nextColumn","Number","COL_WIDTH_UNDEFINED","setState","columnInfo","align","fieldAlignment","currentSort","sortForField","currentSortKind","kind","direction","canSort","generateSortLink","nextEventView","sortOnField","tagSort","pageLinks","onCursor","newColumns","TAGS_TABLE_COLUMN_ORDER","c","newColumn","StyledPanelTable","columnOrder","columnSortBy","renderHeadCellWithMeta","meta","renderBodyCellWithData","onResizeColumn","handleResizeColumn","TAG_PAGE_TABLE_CURSOR","TagsDisplay","_eventView","projects","getTransactionField","SpanOperationBreakdownFilter","handleCursor","cursor","getTagSortForTagsPage","tagSorts","fromSorts","withSorts","allTagKeys","TagsPageContent","fullWidth","InnerContent","tagOptions","suspectTags","otherTags","forEach","getTagKeyOptions","decodedTagKey","decodeSelectedTagKey","allTags","decodedTagFromOptions","defaultTag","initialTag","tagSelected","_changeTagSelected","changeTagSelected","queryParams","normalizeDateTimeParams","useEffect","ReversedLayoutBody","TagsSideBar","changeTag","isOtherTag","from_tag","to_tag","is_other_tag","StyledMain","FilterActions","condensed","alignDropdown","projectIds","onSearch","StyledSide","StyledSectionHeading","Center","mini","RadioLabel","checked","onChange","SidebarTagValue","SectionHeading","background","breakpoints","medium","large","small","TransactionTags","tab","Tab","getDocumentTitle","generateEventView","childComponent","join","EventView","version","withProjects","withOrganization"],"sourceRoot":""}