{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_views_performance_transactionSummary_transactionSpans_i-b9a38e.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/utils/performance/suspectSpans/spanOpsQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/opsFilter.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/suspectSpansTable.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///../node_modules/downsample/methods/ASAP.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanOps} from './types';\n\ntype SpanOpsProps = {};\n\ntype RequestProps = DiscoverQueryProps & SpanOpsProps;\n\ntype ChildrenProps = Omit<GenericChildrenProps<SpanOpsProps>, 'tableData'> & {\n  spanOps: SpanOps | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction SpanOpsQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SpanOps, SpanOpsProps>\n      route=\"events-span-ops\"\n      limit={20}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({spanOps: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SpanOpsQuery);\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {pickBarColor} from 'sentry/components/performance/waterfall/utils';\nimport {IconFilter, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SpanOpsQuery from 'sentry/utils/performance/suspectSpans/spanOpsQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\ntype Props = {\n  eventView: EventView;\n  handleOpChange: (op: string | undefined) => void;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n};\n\nfunction getMenuOptions({spanOps, isLoading, error}) {\n  if (isLoading) {\n    return [{key: 'isLoading', isDisabled: true, label: t('Loading…')}];\n  }\n\n  if (error) {\n    return [\n      {\n        key: 'error',\n        isDisabled: true,\n        label: t('Error loading operations'),\n        leadingItems: <IconWarning color=\"subText\" />,\n      },\n    ];\n  }\n\n  return spanOps.map(spanOp => ({\n    value: spanOp.op,\n    label: spanOp.op,\n    leadingItems: <OperationDot backgroundColor={pickBarColor(spanOp.op)} />,\n  }));\n}\n\nexport default function OpsFilter(props: Props) {\n  const {location, eventView, organization, handleOpChange, transactionName} = props;\n\n  // clear out the query string from the event view\n  // as we want to restrict queries to the op names\n  const conditions = new MutableSearch('');\n  conditions\n    .setFilterValues('event.type', ['transaction'])\n    .setFilterValues('transaction', [transactionName]);\n  const opsFilterEventView = eventView.clone();\n  opsFilterEventView.query = conditions.formatString();\n\n  const currentOp = decodeScalar(location.query.spanOp);\n\n  return (\n    <SpanOpsQuery\n      location={location}\n      orgSlug={organization.slug}\n      eventView={opsFilterEventView}\n      cursor=\"0:0:1\"\n      noPagination\n    >\n      {results => (\n        <CompactSelect\n          isClearable\n          maxMenuWidth=\"24rem\"\n          menuTitle={t('Filter by operation')}\n          options={getMenuOptions(results)}\n          onChange={opt => handleOpChange(opt?.value)}\n          value={currentOp}\n          triggerLabel={currentOp ?? t('Filter')}\n          triggerProps={{icon: <IconFilter />}}\n        />\n      )}\n    </SpanOpsQuery>\n  );\n}\n\nconst OperationDot = styled('div')<{backgroundColor: string}>`\n  display: block;\n  width: ${space(1)};\n  height: ${space(1)};\n  border-radius: 100%;\n  background-color: ${p => p.backgroundColor};\n`;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Pagination from 'sentry/components/pagination';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SuspectSpansQuery from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {SetStateAction} from '../types';\n\nimport OpsFilter from './opsFilter';\nimport SuspectSpansTable from './suspectSpansTable';\nimport {SpanSort, SpansTotalValues} from './types';\nimport {\n  getSuspectSpanSortFromEventView,\n  getTotalsView,\n  SPAN_SORT_OPTIONS,\n  SPAN_SORT_TO_FIELDS,\n} from './utils';\n\nconst ANALYTICS_VALUES = {\n  spanOp: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_op', {\n      organization,\n      operation_name: value,\n    }),\n  sort: (organization: Organization, value: string | undefined) =>\n    trackAdvancedAnalyticsEvent('performance_views.spans.change_sort', {\n      organization,\n      sort_column: value,\n    }),\n};\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  setError: SetStateAction<string | undefined>;\n  transactionName: string;\n};\n\nfunction SpansContent(props: Props) {\n  const {location, organization, eventView, projectId, transactionName} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  function handleChange(key: string) {\n    return function (value: string | undefined) {\n      ANALYTICS_VALUES[key]?.(organization, value);\n\n      const queryParams = normalizeDateTimeParams({\n        ...(location.query || {}),\n        [key]: value,\n      });\n\n      // do not propagate pagination when making a new search\n      const toOmit = ['cursor'];\n      if (!defined(value)) {\n        toOmit.push(key);\n      }\n      const searchQueryParams = omit(queryParams, toOmit);\n\n      browserHistory.push({\n        ...location,\n        query: {\n          ...searchQueryParams,\n          userModified: key === 'query',\n        },\n      });\n    };\n  }\n\n  const spanOp = decodeScalar(location.query.spanOp);\n  const spanGroup = decodeScalar(location.query.spanGroup);\n  const sort = getSuspectSpanSortFromEventView(eventView);\n  const spansView = getSpansEventView(eventView, sort.field);\n  const totalsView = getTotalsView(eventView);\n\n  const {projects} = useProjects();\n\n  return (\n    <Layout.Main fullWidth>\n      <FilterActions>\n        <OpsFilter\n          location={location}\n          eventView={eventView}\n          organization={organization}\n          handleOpChange={handleChange('spanOp')}\n          transactionName={transactionName}\n        />\n        <PageFilterBar condensed>\n          <EnvironmentPageFilter />\n          <DatePageFilter alignDropdown=\"left\" />\n        </PageFilterBar>\n        <StyledSearchBar\n          organization={organization}\n          projectIds={eventView.project}\n          query={query}\n          fields={eventView.fields}\n          onSearch={handleChange('query')}\n        />\n        <CompactSelect\n          value={sort.field}\n          options={SPAN_SORT_OPTIONS.map(opt => ({value: opt.field, label: opt.label}))}\n          onChange={opt => handleChange('sort')(opt.value)}\n          triggerProps={{prefix: sort.prefix}}\n          triggerLabel={sort.label}\n        />\n      </FilterActions>\n      <DiscoverQuery\n        eventView={totalsView}\n        orgSlug={organization.slug}\n        location={location}\n        referrer=\"api.performance.transaction-spans\"\n        cursor=\"0:0:1\"\n        noPagination\n        useEvents\n      >\n        {({tableData}) => {\n          const totals: SpansTotalValues | null =\n            (tableData?.data?.[0] as SpansTotalValues | undefined) ?? null;\n          return (\n            <SuspectSpansQuery\n              location={location}\n              orgSlug={organization.slug}\n              eventView={spansView}\n              limit={10}\n              perSuspect={0}\n              spanOps={defined(spanOp) ? [spanOp] : []}\n              spanGroups={defined(spanGroup) ? [spanGroup] : []}\n            >\n              {({suspectSpans, isLoading, pageLinks}) => (\n                <Fragment>\n                  <SuspectSpansTable\n                    location={location}\n                    organization={organization}\n                    transactionName={transactionName}\n                    project={projects.find(p => p.id === projectId)}\n                    isLoading={isLoading}\n                    suspectSpans={suspectSpans ?? []}\n                    totals={totals}\n                    sort={sort.field}\n                  />\n                  <Pagination pageLinks={pageLinks ?? null} />\n                </Fragment>\n              )}\n            </SuspectSpansQuery>\n          );\n        }}\n      </DiscoverQuery>\n    </Layout.Main>\n  );\n}\n\nfunction getSpansEventView(eventView: EventView, sort: SpanSort): EventView {\n  eventView = eventView.clone();\n  const fields = SPAN_SORT_TO_FIELDS[sort];\n  eventView.fields = fields ? fields.map(field => ({field})) : [];\n  return eventView;\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(3, min-content);\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: auto auto 1fr auto;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    order: 1;\n    grid-column: 1/5;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    order: initial;\n    grid-column: auto;\n  }\n`;\n\nexport default SpansContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport SpansContent from './content';\nimport {\n  generateSpansEventView,\n  SPAN_RELATIVE_PERIODS,\n  SPAN_RETENTION_DAYS,\n} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionSpans(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <PageLayout\n      location={location}\n      organization={organization}\n      projects={projects}\n      tab={Tab.Spans}\n      getDocumentTitle={getDocumentTitle}\n      generateEventView={generateSpansEventView}\n      childComponent={SpansContent}\n      relativeDateOptions={SPAN_RELATIVE_PERIODS}\n      maxPickableDays={SPAN_RETENTION_DAYS}\n    />\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nexport default withProjects(withOrganization(TransactionSpans));\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","import {ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {Container as TableCellContainer} from 'sentry/utils/discover/styles';\nimport {SuspectSpans} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {spanDetailsRouteWithQuery} from './spanDetails/utils';\nimport {SpanSort, SpanSortOthers, SpanSortPercentiles, SpansTotalValues} from './types';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  sort: SpanSort;\n  suspectSpans: SuspectSpans;\n  totals: SpansTotalValues | null;\n  transactionName: string;\n  project?: Project;\n};\n\nexport default function SuspectSpansTable(props: Props) {\n  const {\n    location,\n    organization,\n    transactionName,\n    isLoading,\n    suspectSpans,\n    totals,\n    sort,\n    project,\n  } = props;\n\n  const data: TableDataRowWithExtras[] = suspectSpans.map(suspectSpan => ({\n    operation: suspectSpan.op,\n    group: suspectSpan.group,\n    description: suspectSpan.description,\n    totalCount: suspectSpan.count,\n    frequency:\n      // Frequency is computed using the `uniq` function in ClickHouse.\n      // Because it is an approximation, it can occasionally exceed the number of events.\n      defined(suspectSpan.frequency) && defined(totals?.['count()'])\n        ? Math.min(1, suspectSpan.frequency / totals!['count()'])\n        : null,\n    avgOccurrences: suspectSpan.avgOccurrences,\n    p50ExclusiveTime: suspectSpan.p50ExclusiveTime,\n    p75ExclusiveTime: suspectSpan.p75ExclusiveTime,\n    p95ExclusiveTime: suspectSpan.p95ExclusiveTime,\n    p99ExclusiveTime: suspectSpan.p99ExclusiveTime,\n    sumExclusiveTime: suspectSpan.sumExclusiveTime,\n  }));\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={COLUMN_ORDER[sort].map(column => COLUMNS[column])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(\n          location,\n          organization,\n          transactionName,\n          project\n        ),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  project?: Project\n) {\n  return (column: TableColumn, dataRow: TableDataRowWithExtras): React.ReactNode => {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'description') {\n      const target = spanDetailsRouteWithQuery({\n        orgSlug: organization.slug,\n        transaction: transactionName,\n        query: location.query,\n        spanSlug: {op: dataRow.operation, group: dataRow.group},\n        projectID: project?.id,\n      });\n      return (\n        <TableCellContainer>\n          <Link to={target}>{dataRow[column.key] ?? t('(unnamed span)')}</Link>\n        </TableCellContainer>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\ntype TableColumnKey =\n  | 'operation'\n  | 'description'\n  | 'totalCount'\n  | 'frequency'\n  | 'avgOccurrences'\n  | 'p50ExclusiveTime'\n  | 'p75ExclusiveTime'\n  | 'p95ExclusiveTime'\n  | 'p99ExclusiveTime'\n  | 'sumExclusiveTime';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {\n  group: string;\n};\n\nconst COLUMN_ORDER: Record<SpanSort, TableColumnKey[]> = {\n  [SpanSortOthers.COUNT]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.AVG_OCCURRENCE]: [\n    'operation',\n    'description',\n    'avgOccurrences',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortOthers.SUM_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P50_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p50ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P75_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p75ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P95_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p95ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n  [SpanSortPercentiles.P99_EXCLUSIVE_TIME]: [\n    'operation',\n    'description',\n    'totalCount',\n    'frequency',\n    'p99ExclusiveTime',\n    'sumExclusiveTime',\n  ],\n};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  operation: {\n    key: 'operation',\n    name: t('Span Operation'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  description: {\n    key: 'description',\n    name: t('Span Name'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  totalCount: {\n    key: 'totalCount',\n    name: t('Total Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  frequency: {\n    key: 'frequency',\n    name: t('Frequency'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  avgOccurrences: {\n    key: 'avgOccurrences',\n    name: t('Average Occurrences'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p50ExclusiveTime: {\n    key: 'p50ExclusiveTime',\n    name: t('P50 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75ExclusiveTime: {\n    key: 'p75ExclusiveTime',\n    name: t('P75 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p95ExclusiveTime: {\n    key: 'p95ExclusiveTime',\n    name: t('P95 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99ExclusiveTime: {\n    key: 'p99ExclusiveTime',\n    name: t('P99 Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  sumExclusiveTime: {\n    key: 'sumExclusiveTime',\n    name: t('Total Self Time'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  operation: 'string',\n  description: 'string',\n  totalCount: 'integer',\n  frequency: 'percentage',\n  avgOccurrences: 'number',\n  p50ExclusiveTime: 'duration',\n  p75ExclusiveTime: 'duration',\n  p95ExclusiveTime: 'duration',\n  p99ExclusiveTime: 'duration',\n  sumExclusiveTime: 'duration',\n};\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar __isA = {\n  \"PointValueExtractor<unknown>\": value => typeof value === \"function\",\n  \"XYDataPoint\": value => value !== undefined && value !== null && __isA[\"X\"](value[\"x\"]) && typeof value[\"y\"] === \"number\",\n  \"X\": value => typeof value === \"number\" || value instanceof Date\n};\nvar calculateMean = values => {\n  var m = 0;\n\n  for (var i = 0; i < values.length; i += 1) {\n    m += values[i];\n  }\n\n  return m / values.length;\n};\nvar calculateSTD = values => {\n  var mean = calculateMean(values);\n  var std = 0;\n\n  for (var i = 0; i < values.length; i += 1) {\n    std += (values[i] - mean) * (values[i] - mean);\n  }\n\n  return Math.sqrt(std / values.length);\n};\nvar mapToArray = (input, callback) => {\n  var length = input.length;\n  var result = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    result[i] = callback(input[i], i);\n  }\n\n  return result;\n};\nvar getPointValueExtractor = accessor => {\n  if (__isA[\"PointValueExtractor<unknown>\"](accessor)) return accessor;\n  return point => point[accessor];\n};\nvar createXYDataPoint = (time, value) => ({\n  x: time,\n  y: value\n});\nvar createLegacyDataPointConfig = () => ({\n  x: point => {\n    var t = __isA[\"XYDataPoint\"](point) ? point.x : point[0];\n    return t instanceof Date ? t.getTime() : t;\n  },\n  y: point => 'y' in point ? point.y : point[1],\n  toPoint: createXYDataPoint\n});\nvar iterableBasedOn = (input, length) => new input.constructor(length);\n\nvar SMANumeric = function SMANumeric(data, windowSize) {\n  var slide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var output = [];\n  var sum = 0;\n\n  for (var i = 0; i < windowSize; i++) {\n    sum += data[i];\n  }\n\n  for (var _i = windowSize; _i <= data.length; _i++) {\n    if ((_i - windowSize) % slide === 0) {\n      output.push(sum / windowSize);\n    }\n\n    sum += data[_i] - data[_i - windowSize];\n  }\n\n  return output;\n};\n/**\n * Simple Moving Average (SMA)\n *\n * @param data {Number[]}\n * @param windowSize {Number}\n * @param slide {Number}\n */\n\nvar createSMA = config => {\n  var timeExtractor = getPointValueExtractor(config.x);\n  var valueExtractor = getPointValueExtractor(config.y);\n  var pointFactory = config.toPoint;\n  return function (values, windowSize) {\n    var slide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (values.length === 0) return values;\n    var data = mapToArray(values, valueExtractor);\n    var times = mapToArray(values, timeExtractor);\n    var output = iterableBasedOn(values, 0);\n    var sum = 0;\n    var value;\n\n    for (var i = 0; i < windowSize; i++) {\n      sum += data[i];\n    }\n\n    for (var _i2 = windowSize; _i2 <= data.length; _i2++) {\n      if ((_i2 - windowSize) % slide === 0) {\n        value = pointFactory((times[_i2 - windowSize] + times[_i2 - 1]) / 2, sum / windowSize, _i2 - windowSize);\n        output[output.length] = value;\n      }\n\n      sum += data[_i2] - data[_i2 - windowSize];\n    }\n\n    return output;\n  };\n};\nvar SMA = createSMA(createLegacyDataPointConfig());\n\n/*\n * Free FFT and convolution (JavaScript)\n *\n * Copyright (c) 2014 Project Nayuki\n * https://www.nayuki.io/page/free-small-fft-in-multiple-languages\n *\n * (MIT License)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function.\n */\n\nfunction fft(real, imag) {\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  if (n == 0) return;else if ((n & n - 1) == 0) // Is power of 2\n    transformRadix2(real, imag); // More complicated algorithm for arbitrary sizes\n  else transformBluestein(real, imag);\n}\n/*\n * Computes the inverse discrete Fourier transform (IDFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function. This transform does not perform scaling, so the inverse is not a true inverse.\n */\n\nfunction inverseFFT(real, imag) {\n  fft(imag, real);\n}\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector's length must be a power of 2. Uses the Cooley-Tukey decimation-in-time radix-2 algorithm.\n */\n\nfunction transformRadix2(real, imag) {\n  // Initialization\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  if (n == 1) // Trivial transform\n    return;\n  var levels = -1;\n\n  for (var i = 0; i < 32; i++) {\n    if (1 << i == n) levels = i; // Equal to log2(n)\n  }\n\n  if (levels == -1) throw 'Length is not a power of 2';\n  var cosTable = new Array(n / 2);\n  var sinTable = new Array(n / 2);\n\n  for (var _i = 0; _i < n / 2; _i++) {\n    cosTable[_i] = Math.cos(2 * Math.PI * _i / n);\n    sinTable[_i] = Math.sin(2 * Math.PI * _i / n);\n  } // Bit-reversed addressing permutation\n\n\n  for (var _i2 = 0; _i2 < n; _i2++) {\n    var j = reverseBits(_i2, levels);\n\n    if (j > _i2) {\n      var temp = real[_i2];\n      real[_i2] = real[j];\n      real[j] = temp;\n      temp = imag[_i2];\n      imag[_i2] = imag[j];\n      imag[j] = temp;\n    }\n  } // Cooley-Tukey decimation-in-time radix-2 FFT\n\n\n  for (var size = 2; size <= n; size *= 2) {\n    var halfsize = size / 2;\n    var tablestep = n / size;\n\n    for (var _i3 = 0; _i3 < n; _i3 += size) {\n      for (var _j = _i3, k = 0; _j < _i3 + halfsize; _j++, k += tablestep) {\n        var tpre = real[_j + halfsize] * cosTable[k] + imag[_j + halfsize] * sinTable[k];\n        var tpim = -real[_j + halfsize] * sinTable[k] + imag[_j + halfsize] * cosTable[k];\n        real[_j + halfsize] = real[_j] - tpre;\n        imag[_j + halfsize] = imag[_j] - tpim;\n        real[_j] += tpre;\n        imag[_j] += tpim;\n      }\n    }\n  }\n} // Returns the integer whose value is the reverse of the lowest 'bits' bits of the integer 'x'.\n\n\nfunction reverseBits(x, bits) {\n  var y = 0;\n\n  for (var i = 0; i < bits; i++) {\n    y = y << 1 | x & 1;\n    x >>>= 1;\n  }\n\n  return y;\n}\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This requires the convolution function, which in turn requires the radix-2 FFT function.\n * Uses Bluestein's chirp z-transform algorithm.\n */\n\n\nfunction transformBluestein(real, imag) {\n  // Find a power-of-2 convolution length m such that m >= n * 2 + 1\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  var m = 1;\n\n  while (m < n * 2 + 1) {\n    m *= 2;\n  } // Trignometric tables\n\n\n  var cosTable = new Array(n);\n  var sinTable = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    var j = i * i % (n * 2); // This is more accurate than j = i * i\n\n    cosTable[i] = Math.cos(Math.PI * j / n);\n    sinTable[i] = Math.sin(Math.PI * j / n);\n  } // Temporary vectors and preprocessing\n\n\n  var areal = new Array(m);\n  var aimag = new Array(m);\n\n  for (var _i4 = 0; _i4 < n; _i4++) {\n    areal[_i4] = real[_i4] * cosTable[_i4] + imag[_i4] * sinTable[_i4];\n    aimag[_i4] = -real[_i4] * sinTable[_i4] + imag[_i4] * cosTable[_i4];\n  }\n\n  for (var _i5 = n; _i5 < m; _i5++) {\n    areal[_i5] = aimag[_i5] = 0;\n  }\n\n  var breal = new Array(m);\n  var bimag = new Array(m);\n  breal[0] = cosTable[0];\n  bimag[0] = sinTable[0];\n\n  for (var _i6 = 1; _i6 < n; _i6++) {\n    breal[_i6] = breal[m - _i6] = cosTable[_i6];\n    bimag[_i6] = bimag[m - _i6] = sinTable[_i6];\n  }\n\n  for (var _i7 = n; _i7 <= m - n; _i7++) {\n    breal[_i7] = bimag[_i7] = 0;\n  } // Convolution\n\n\n  var creal = new Array(m);\n  var cimag = new Array(m);\n  convolveComplex(areal, aimag, breal, bimag, creal, cimag); // Postprocessing\n\n  for (var _i8 = 0; _i8 < n; _i8++) {\n    real[_i8] = creal[_i8] * cosTable[_i8] + cimag[_i8] * sinTable[_i8];\n    imag[_i8] = -creal[_i8] * sinTable[_i8] + cimag[_i8] * cosTable[_i8];\n  }\n}\n/*\n * Computes the circular convolution of the given complex vectors. Each vector's length must be the same.\n */\n\n\nfunction convolveComplex(xreal, ximag, yreal, yimag, outreal, outimag) {\n  if (xreal.length != ximag.length || xreal.length != yreal.length || yreal.length != yimag.length || xreal.length != outreal.length || outreal.length != outimag.length) throw 'Mismatched lengths';\n  var n = xreal.length;\n  xreal = xreal.slice();\n  ximag = ximag.slice();\n  yreal = yreal.slice();\n  yimag = yimag.slice();\n  fft(xreal, ximag);\n  fft(yreal, yimag);\n\n  for (var i = 0; i < n; i++) {\n    var temp = xreal[i] * yreal[i] - ximag[i] * yimag[i];\n    ximag[i] = ximag[i] * yreal[i] + xreal[i] * yimag[i];\n    xreal[i] = temp;\n  }\n\n  inverseFFT(xreal, ximag);\n\n  for (var _i9 = 0; _i9 < n; _i9++) {\n    // Scaling (because this FFT implementation omits it)\n    outreal[_i9] = xreal[_i9] / n;\n    outimag[_i9] = ximag[_i9] / n;\n  }\n}\n\nvar calculateDiffs = values => {\n  var length = values.length - 1;\n  if (length < 1) return [];\n  var diffs = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    diffs[i] = values[i + 1] - values[i];\n  }\n\n  return diffs;\n};\n\nvar calculateRoughness = values => calculateSTD(calculateDiffs(values));\n\nvar calculateKurtosis = values => {\n  var length = values.length;\n  var mean = calculateMean(values);\n  var u4 = 0;\n  var variance = 0;\n  var diff;\n  var diffSqr;\n\n  for (var i = 0; i < length; i++) {\n    diff = values[i] - mean;\n    diffSqr = diff * diff;\n    u4 += diffSqr * diffSqr;\n    variance += diffSqr;\n  }\n\n  return length * u4 / (variance * variance);\n};\n\nvar findWindowSize = (head, tail, data, minRoughness, originalKurt, windowSize) => {\n  while (head <= tail) {\n    var w = Math.round((head + tail) / 2);\n    var smoothed = SMANumeric(data, w, 1);\n    var kurtosis = calculateKurtosis(smoothed);\n\n    if (kurtosis >= originalKurt) {\n      /* Search second half if feasible */\n      var roughness = calculateRoughness(smoothed);\n\n      if (roughness < minRoughness) {\n        windowSize = w;\n        minRoughness = roughness;\n      }\n\n      head = w + 1;\n    } else {\n      /* Search first half */\n      tail = w - 1;\n    }\n  }\n\n  return windowSize;\n};\n\nvar calculatePeaks = function calculatePeaks(correlations) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n  var length = correlations.length;\n  if (length <= 1) return [[], 0];\n  var maxCorrelation = 0;\n  var peaks = [];\n\n  if (correlations.length > 1) {\n    var positive = correlations[1] > correlations[0];\n    var max = 1;\n\n    for (var i = 2; i < correlations.length; i += 1) {\n      if (!positive && correlations[i] > correlations[i - 1]) {\n        max = i;\n        positive = !positive;\n      } else if (positive && correlations[i] > correlations[max]) {\n        max = i;\n      } else if (positive && correlations[i] < correlations[i - 1]) {\n        if (max > 1 && correlations[max] > threshold) {\n          peaks.push(max);\n\n          if (correlations[max] > maxCorrelation) {\n            maxCorrelation = correlations[max];\n          }\n        }\n\n        positive = !positive;\n      }\n    }\n  }\n  /* If there is no autocorrelation peak within the MAX_WINDOW boundary try windows from the largest to the smallest */\n\n\n  if (peaks.length <= 1) {\n    for (var _i = 2; _i < length; _i += 1) {\n      peaks.push(_i);\n    }\n  }\n\n  return [peaks, maxCorrelation];\n};\n\nvar calculateAutocorrelation = (values, maxLag) => {\n  var length = values.length;\n  var mean = calculateMean(values);\n  /* Padding to the closest power of 2 */\n\n  var len = Math.pow(2, Math.trunc(Math.log2(length)) + 1);\n  var fftreal = new Array(len).fill(0);\n  var fftimg = new Array(len).fill(0);\n\n  for (var i = 0; i < length; i += 1) {\n    fftreal[i] = values[i] - mean;\n  }\n  /* F_R(f) = FFT(X) */\n\n\n  fft(fftreal, fftimg);\n  /* S(f) = F_R(f)F_R*(f) */\n\n  for (var _i2 = 0; _i2 < fftreal.length; _i2 += 1) {\n    fftreal[_i2] = Math.pow(fftreal[_i2], 2) + Math.pow(fftimg[_i2], 2);\n    fftimg[_i2] = 0;\n  }\n  /*  R(t) = IFFT(S(f)) */\n\n\n  inverseFFT(fftreal, fftimg); // Calculate correlations\n\n  var correlations = [];\n\n  for (var _i3 = 1; _i3 < maxLag; _i3++) {\n    correlations[_i3] = fftreal[_i3] / fftreal[0];\n  }\n\n  var _calculatePeaks = calculatePeaks(correlations),\n      _calculatePeaks2 = _slicedToArray(_calculatePeaks, 2),\n      peaks = _calculatePeaks2[0],\n      maxCorrelation = _calculatePeaks2[1];\n\n  return {\n    correlations,\n    peaks,\n    maxCorrelation\n  };\n};\n\nvar createASAP = config => {\n  var valueExtractor = getPointValueExtractor(config.y);\n  var SMA = createSMA(config);\n  return function ASAP(values, resolution) {\n    if (values.length === 0) return values;\n\n    if (resolution <= 0) {\n      throw new Error(\"Supplied non-positive resolution parameter to ASAP: \".concat(resolution));\n    } // If the resolution is at least twice as big as the number of data points\n    // then the values get downsampled to desired resolution first by SMA\n\n\n    if (values.length >= 2 * resolution) {\n      var scale = Math.trunc(values.length / resolution);\n      return ASAP(SMA(values, scale, scale), resolution);\n    } // First turn data points into a sequence of values\n\n\n    var data = mapToArray(values, valueExtractor);\n\n    var _calculateAutocorrela = calculateAutocorrelation(data, Math.round(data.length / 10)),\n        correlations = _calculateAutocorrela.correlations,\n        peaks = _calculateAutocorrela.peaks,\n        maxCorrelation = _calculateAutocorrela.maxCorrelation;\n\n    var originalKurtosis = calculateKurtosis(data);\n    var minRoughness = calculateRoughness(data);\n    var windowSize = 1;\n    var lb = 1;\n    var largestFeasible = -1;\n    var tail = data.length / 10;\n\n    for (var i = peaks.length - 1; i >= 0; i -= 1) {\n      var w = peaks[i];\n\n      if (w < lb || w === 1) {\n        break;\n      } else if (Math.sqrt(1 - correlations[w]) * windowSize > Math.sqrt(1 - correlations[windowSize]) * w) {\n        continue;\n      }\n\n      var smoothed = SMANumeric(data, w, 1);\n      var kurtosis = calculateKurtosis(smoothed);\n      var roughness = calculateRoughness(smoothed);\n\n      if (kurtosis >= originalKurtosis) {\n        if (roughness < minRoughness) {\n          minRoughness = roughness;\n          windowSize = w;\n        }\n\n        lb = Math.round(Math.max(w * Math.sqrt((maxCorrelation - 1) / (correlations[w] - 1)), lb));\n\n        if (largestFeasible < 0) {\n          largestFeasible = i;\n        }\n      }\n    }\n\n    if (largestFeasible > 0) {\n      if (largestFeasible < peaks.length - 2) {\n        tail = peaks[largestFeasible + 1];\n      }\n\n      lb = Math.max(lb, peaks[largestFeasible] + 1);\n    }\n\n    windowSize = findWindowSize(lb, tail, data, minRoughness, originalKurtosis, windowSize);\n    return SMA(values, windowSize, 1);\n  };\n};\nvar ASAP = createASAP(createLegacyDataPointConfig());\n\nexports.ASAP = ASAP;\nexports.createASAP = createASAP;\n//# sourceMappingURL=ASAP.js.map\n"],"names":["SortLink","align","title","canSort","generateSortLink","onClick","direction","target","StyledNonLink","arrow","StyledIconArrow","size","StyledLink","to","props","forwardProps","omit","p","IconArrow","ListLink","Component","_classNames","className","activeClassName","this","isActive","classNames","query","index","router","queryData","qs","undefined","pathname","render","children","disabled","carriedProps","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","theme","shouldRefetchData","prevProps","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","data","_","fields","otherMeta","meta","route","withApi","getSuspectSpanPayload","perSuspect","spanOps","spanGroups","minExclusiveTime","maxExclusiveTime","payload","spanOp","spanGroup","min_exclusive_time","max_exclusive_time","defined","additionalPayload","eventView","getEventsAPIPayload","location","SuspectSpansQuery","getRequestPayload","tableData","rest","suspectSpans","getTransactionDetailsUrl","orgSlug","eventSlug","transaction","spanId","locationQuery","hash","spanTargetHash","SpanOpsQuery","limit","getMenuOptions","isLoading","error","key","isDisabled","label","t","leadingItems","color","map","value","op","OperationDot","backgroundColor","pickBarColor","OpsFilter","organization","handleOpChange","conditions","MutableSearch","setFilterValues","opsFilterEventView","clone","formatString","currentOp","decodeScalar","slug","cursor","noPagination","results","isClearable","maxMenuWidth","menuTitle","options","onChange","opt","triggerLabel","triggerProps","icon","space","ANALYTICS_VALUES","trackAdvancedAnalyticsEvent","operation_name","sort","sort_column","SpansContent","projectId","handleChange","queryParams","normalizeDateTimeParams","toOmit","push","searchQueryParams","browserHistory","userModified","getSuspectSpanSortFromEventView","spansView","SPAN_SORT_TO_FIELDS","field","getSpansEventView","totalsView","getTotalsView","projects","useProjects","fullWidth","FilterActions","condensed","alignDropdown","StyledSearchBar","projectIds","project","onSearch","SPAN_SORT_OPTIONS","prefix","referrer","totals","pageLinks","Fragment","find","id","breakpoints","small","xlarge","SearchBar","TransactionSpans","tab","Tab","getDocumentTitle","generateEventView","generateSpansEventView","childComponent","relativeDateOptions","SPAN_RELATIVE_PERIODS","maxPickableDays","SPAN_RETENTION_DAYS","String","trim","length","join","withProjects","withOrganization","spanDetailsRouteWithQuery","spanSlug","projectID","encodeURIComponent","group","generateSpanDetailsRoute","environment","statsPeriod","start","end","ZoomKeys","SuspectSpansTable","suspectSpan","operation","description","totalCount","count","frequency","Math","min","avgOccurrences","p50ExclusiveTime","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","columnOrder","COLUMN_ORDER","column","COLUMNS","columnSortBy","grid","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","_index","fieldAlignment","COLUMN_TYPE","name","dataRow","fieldRenderer","getFieldRenderer","SpanSortOthers","SpanSortPercentiles","width","COL_WIDTH_UNDEFINED","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","transactionSummaryRouteWithQuery","unselectedSeries","display","trendFunction","trendColumn","showTransactions","additionalQuery","generateTransactionSummaryRoute","searchFilter","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateTransactionLink","generateEventSlug","SidebarSpacer","_arrayLikeToArray","arr","len","i","arr2","Array","__isA","Date","calculateMean","values","m","mapToArray","input","callback","result","getPointValueExtractor","accessor","point","createXYDataPoint","time","x","y","createLegacyDataPointConfig","getTime","toPoint","iterableBasedOn","constructor","SMANumeric","windowSize","slide","arguments","output","sum","_i","createSMA","config","timeExtractor","valueExtractor","pointFactory","times","_i2","fft","real","imag","n","levels","cosTable","sinTable","cos","PI","sin","j","reverseBits","temp","halfsize","tablestep","_i3","_j","k","tpre","tpim","transformRadix2","areal","aimag","_i4","_i5","breal","bimag","_i6","_i7","creal","cimag","xreal","ximag","yreal","yimag","outreal","outimag","slice","inverseFFT","_i9","convolveComplex","_i8","transformBluestein","bits","SMA","calculateRoughness","mean","std","sqrt","calculateSTD","diffs","calculateDiffs","calculateKurtosis","diff","diffSqr","u4","variance","ASAP","resolution","Error","concat","scale","trunc","_calculateAutocorrela","maxLag","pow","log2","fftreal","fill","fftimg","correlations","_calculatePeaks","threshold","maxCorrelation","peaks","positive","max","calculatePeaks","_calculatePeaks2","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","_s","next","done","err","_iterableToArrayLimit","o","minLen","prototype","toString","call","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","_slicedToArray","calculateAutocorrelation","round","originalKurtosis","minRoughness","lb","largestFeasible","tail","w","smoothed","kurtosis","roughness","head","originalKurt","findWindowSize","exports"],"sourceRoot":""}