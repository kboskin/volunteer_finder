{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_views_performance_transactionSummary_transactionSpans_s-87d064.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/charts/barChartZoom.tsx","webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/charts/eventsRequest.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/optionSelector.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/utils/discover/discoverQuery.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/utils/performance/histogram/constants.tsx","webpack:///./app/utils/performance/histogram/index.tsx","webpack:///./app/utils/performance/suspectSpans/suspectSpansQuery.tsx","webpack:///./app/utils/performance/urls.ts","webpack:///./app/utils/performance/suspectSpans/spanExamplesQuery.tsx","webpack:///./app/utils/performance/histogram/spanHistogramQuery.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/exclusiveTimeHistogram.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/chart.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/exclusiveTimeTimeSeries.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsControls.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsHeader.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/spanDetailsTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/index.tsx","webpack:///./app/views/performance/transactionSummary/transactionSpans/spanDetails/utils.tsx","webpack:///./app/views/performance/transactionSummary/utils.tsx","webpack:///../node_modules/downsample/methods/ASAP.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {Client} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {\n  DateString,\n  EventsStats,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  userModified?: string;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = (\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    userModified,\n  }: Options\n): Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n      user_modified: pathname.includes('events-stats') ? userModified : undefined,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: String,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {EChartChartReadyHandler, EChartDataZoomHandler} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\ntype RenderProps = {\n  dataZoom: ReturnType<typeof DataZoomInside>;\n  onChartReady: EChartChartReadyHandler;\n  onDataZoom: EChartDataZoomHandler;\n  toolBox: ReturnType<typeof ToolBox>;\n};\n\nexport type BarChartBucket = {\n  end: number;\n  start: number;\n};\n\ntype Props = {\n  /**\n   * This is the list of bucket start and end ranges. This is used by the\n   * component to determine the start and end of the zoom.\n   */\n  buckets: BarChartBucket[];\n  /**\n   * The children function that will receive the render props and return\n   * a rendered chart.\n   */\n  children: (props: RenderProps) => React.ReactNode;\n  location: Location;\n  /**\n   * This is the query parameter the end of the zoom will be propagated to.\n   */\n  paramEnd: string;\n  /**\n   * This is the query parameter the start of the zoom will be propagated to.\n   */\n  paramStart: string;\n  /**\n   * If you need the dataZoom control to control more than one chart.\n   * you can provide a list of the axis indexes.\n   */\n  xAxisIndex: number[];\n  /**\n   * This is the minimum width of the zoom. If the targeted zoom area is\n   * smaller than is specified by this parameter, the zoom will be cancelled\n   * and the `onDataZoomCancelled` callback will be called.\n   */\n  minZoomWidth?: number;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  /**\n   * This callback is called when the zoom action was cancelled. It can happen\n   * when `minZoomWidth` is specified and the user tries to zoom on an area\n   * smaller than that.\n   */\n  onDataZoomCancelled?: () => void;\n  /**\n   *\n   */\n  onHistoryPush?: (start: number, end: number) => void;\n};\n\nclass BarChartZoom extends Component<Props> {\n  zooming: (() => void) | null = null;\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // Both of these values should not be null, but we include it just in case.\n    // These values are null when the user uses the toolbox included in ECharts\n    // to navigate back through zoom history, but we hide it below.\n    if (startValue !== null && endValue !== null) {\n      const {buckets, location, paramStart, paramEnd, minZoomWidth, onHistoryPush} =\n        this.props;\n      const {start} = buckets[startValue];\n      const {end} = buckets[endValue];\n\n      if (minZoomWidth === undefined || end - start > minZoomWidth) {\n        const target = {\n          pathname: location.pathname,\n          query: {\n            ...location.query,\n            [paramStart]: start,\n            [paramEnd]: end,\n          },\n        };\n        if (onHistoryPush) {\n          onHistoryPush(start, end);\n        } else {\n          browserHistory.push(target);\n        }\n      } else {\n        // Dispatch the restore action here to stop ECharts from zooming\n        chart.dispatchAction({type: 'restore'});\n        callIfFunction(this.props.onDataZoomCancelled);\n      }\n    } else {\n      // Dispatch the restore action here to stop ECharts from zooming\n      chart.dispatchAction({type: 'restore'});\n      callIfFunction(this.props.onDataZoomCancelled);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  render() {\n    const {children, xAxisIndex} = this.props;\n\n    const renderProps = {\n      onChartReady: this.handleChartReady,\n      onFinished: this.handleChartFinished,\n      dataZoom: DataZoomInside({xAxisIndex}),\n      // We must include data zoom in the toolbox for the zoom to work,\n      // but we do not want to show the toolbox components.\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default BarChartZoom;\n","import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is avialable but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import {PureComponent} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport omitBy from 'lodash/omitBy';\n\nimport {doEventsRequest} from 'sentry/actionCreators/events';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\nimport {\n  canIncludePreviousPeriod,\n  getPreviousSeriesName,\n  isMultiSeriesStats,\n} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  EventsStatsData,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {Series, SeriesDataUnit} from 'sentry/types/echarts';\nimport {defined} from 'sentry/utils';\nimport {stripEquationPrefix} from 'sentry/utils/discover/fields';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\n\nexport type TimeSeriesData = {\n  allTimeseriesData?: EventsStatsData;\n  comparisonTimeseriesData?: Series[];\n  originalPreviousTimeseriesData?: EventsStatsData | null;\n  originalTimeseriesData?: EventsStatsData;\n  previousTimeseriesData?: Series[] | null;\n  timeAggregatedData?: Series | {};\n  timeframe?: {end: number; start: number};\n  // timeseries data\n  timeseriesData?: Series[];\n  timeseriesTotals?: {count: number};\n};\n\ntype LoadingStatus = {\n  /**\n   * Whether there was an error retrieving data\n   */\n  errored: boolean;\n  loading: boolean;\n  reloading: boolean;\n  errorMessage?: string;\n};\n\n// Can hold additional data from the root an events stat object (eg. start, end, order, isMetricsData).\ninterface AdditionalSeriesInfo {\n  isMetricsData?: boolean;\n}\n\nexport type RenderProps = LoadingStatus &\n  TimeSeriesData & {\n    results?: Series[]; // Chart with multiple series.\n    seriesAdditionalInfo?: Record<string, AdditionalSeriesInfo>;\n  };\n\ntype DefaultProps = {\n  /**\n   * Include data for previous period\n   */\n  includePrevious: boolean;\n  /**\n   * Transform the response data to be something ingestible by charts\n   */\n  includeTransformedData: boolean;\n  /**\n   * Interval to group results in\n   *\n   * e.g. 1d, 1h, 1m, 1s\n   */\n  interval: string;\n  /**\n   * number of rows to return\n   */\n  limit: number;\n  /**\n   * The query string to search events by\n   */\n  query: string;\n  /**\n   * Time delta for comparing intervals of alert metrics, in seconds\n   */\n  comparisonDelta?: number;\n  /**\n   * Absolute end date for query\n   */\n  end?: DateString;\n  /**\n   * Relative time period for query.\n   *\n   * Use `start` and `end` for absolute dates.\n   *\n   * e.g. 24h, 7d, 30d\n   */\n  period?: string | null;\n  /**\n   * Absolute start date for query\n   */\n  start?: DateString;\n};\n\ntype EventsRequestPartialProps = {\n  /**\n   * API client instance\n   */\n  api: Client;\n  children: (renderProps: RenderProps) => React.ReactNode;\n  organization: OrganizationSummary;\n  /**\n   * Whether or not to include the last partial bucket. This happens for example when the\n   * current time is 11:26 and the last bucket ranges from 11:25-11:30. This means that\n   * the last bucket contains 1 minute worth of data while the rest contains 5 minutes.\n   *\n   * This flag indicates whether or not this last bucket should be included in the result.\n   */\n  partial: boolean;\n  /**\n   * Discover needs confirmation to run >30 day >10 project queries,\n   * optional and when not passed confirmation is not required.\n   */\n  confirmedQuery?: boolean;\n  /**\n   * Name used for display current series dataset tooltip\n   */\n  currentSeriesNames?: string[];\n  /**\n   * List of environments to query\n   */\n  environment?: Readonly<string[]>;\n  /**\n   * Is query out of retention\n   */\n  expired?: boolean;\n  /**\n   * List of fields to group with when doing a topEvents request.\n   */\n  field?: string[];\n  /**\n   * Allows overridding the pathname.\n   */\n  generatePathname?: (org: OrganizationSummary) => string;\n  /**\n   * Hide error toast (used for pages which also query eventsV2). Stops error appearing as a toast.\n   */\n  hideError?: boolean;\n  /**\n   * Initial loading state\n   */\n  loading?: boolean;\n  /**\n   * Query name used for displaying error toast if it is out of retention\n   */\n  name?: string;\n  /**\n   * A way to control error if error handling is not owned by the toast.\n   */\n  onError?: (error: string) => void;\n  /**\n   * How to order results when getting top events.\n   */\n  orderby?: string;\n  previousSeriesNames?: string[];\n  /**\n   * List of project ids to query\n   */\n  project?: Readonly<number[]>;\n  /**\n   * A container for query batching data and functions.\n   */\n  queryBatching?: QueryBatching;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * A unique name for what's triggering this request, see organization_events_stats for an allowlist\n   */\n  referrer?: string;\n  /**\n   * Should loading be shown.\n   */\n  showLoading?: boolean;\n  /**\n   * List of team ids to query\n   */\n  team?: Readonly<string | string[]>;\n  /**\n   * The number of top results to get. When set a multi-series result will be returned\n   * in the `results` child render function.\n   */\n  topEvents?: number;\n  /**\n   * Tracks whether the query was modified by a user in the search bar\n   */\n  userModified?: string;\n  /**\n   * Whether or not to zerofill results\n   */\n  withoutZerofill?: boolean;\n  /**\n   * The yAxis being plotted. If multiple yAxis are requested,\n   * the child render function will be called with `results`\n   */\n  yAxis?: string | string[];\n};\n\ntype TimeAggregationProps =\n  | {includeTimeAggregation: true; timeAggregationSeriesName: string}\n  | {includeTimeAggregation?: false; timeAggregationSeriesName?: undefined};\n\nexport type EventsRequestProps = DefaultProps &\n  TimeAggregationProps &\n  EventsRequestPartialProps;\n\ntype EventsRequestState = {\n  errored: boolean;\n  fetchedWithPrevious: boolean;\n  reloading: boolean;\n  timeseriesData: null | EventsStats | MultiSeriesEventsStats;\n  errorMessage?: string;\n};\n\nconst propNamesToIgnore = [\n  'api',\n  'children',\n  'organization',\n  'loading',\n  'queryBatching',\n  'generatePathname',\n];\nconst omitIgnoredProps = (props: EventsRequestProps) =>\n  omitBy(props, (_value, key) => propNamesToIgnore.includes(key));\n\nclass EventsRequest extends PureComponent<EventsRequestProps, EventsRequestState> {\n  static defaultProps: DefaultProps = {\n    period: undefined,\n    start: null,\n    end: null,\n    interval: '1d',\n    comparisonDelta: undefined,\n    limit: 15,\n    query: '',\n    includePrevious: true,\n    includeTransformedData: true,\n  };\n\n  state: EventsRequestState = {\n    reloading: !!this.props.loading,\n    errored: false,\n    timeseriesData: null,\n    fetchedWithPrevious: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: EventsRequestProps) {\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  private unmounting: boolean = false;\n\n  fetchData = async () => {\n    const {api, confirmedQuery, onError, expired, name, hideError, ...props} = this.props;\n    let timeseriesData: EventsStats | MultiSeriesEventsStats | null = null;\n\n    if (confirmedQuery === false) {\n      return;\n    }\n\n    this.setState(state => ({\n      reloading: state.timeseriesData !== null,\n      errored: false,\n      errorMessage: undefined,\n    }));\n\n    let errorMessage;\n    if (expired) {\n      errorMessage = t(\n        '%s has an invalid date range. Please try a more recent date range.',\n        name\n      );\n      addErrorMessage(errorMessage, {append: true});\n\n      this.setState({\n        errored: true,\n        errorMessage,\n      });\n    } else {\n      try {\n        api.clear();\n        timeseriesData = await doEventsRequest(api, props);\n      } catch (resp) {\n        if (resp && resp.responseJSON && resp.responseJSON.detail) {\n          errorMessage = resp.responseJSON.detail;\n        } else {\n          errorMessage = t('Error loading chart data');\n        }\n        if (!hideError) {\n          addErrorMessage(errorMessage);\n        }\n        if (onError) {\n          onError(errorMessage);\n        }\n        this.setState({\n          errored: true,\n          errorMessage,\n        });\n      }\n    }\n\n    if (this.unmounting) {\n      return;\n    }\n\n    this.setState({\n      reloading: false,\n      timeseriesData,\n      fetchedWithPrevious: props.includePrevious,\n    });\n  };\n\n  /**\n   * Retrieves dataset for the current period (since data can potentially\n   * contain previous period's data), as well as the previous period if\n   * possible.\n   *\n   * Returns `null` if data does not exist\n   */\n  getData = (\n    data: EventsStatsData\n  ): {current: EventsStatsData; previous: EventsStatsData | null} => {\n    const {fetchedWithPrevious} = this.state;\n    const {period, includePrevious} = this.props;\n\n    const hasPreviousPeriod =\n      fetchedWithPrevious || canIncludePreviousPeriod(includePrevious, period);\n    // Take the floor just in case, but data should always be divisible by 2\n    const dataMiddleIndex = Math.floor(data.length / 2);\n    return {\n      current: hasPreviousPeriod ? data.slice(dataMiddleIndex) : data,\n      previous: hasPreviousPeriod ? data.slice(0, dataMiddleIndex) : null,\n    };\n  };\n\n  // This aggregates all values per `timestamp`\n  calculateTotalsPerTimestamp(\n    data: EventsStatsData,\n    getName: (\n      timestamp: number,\n      countArray: {count: number}[],\n      i: number\n    ) => number = timestamp => timestamp * 1000\n  ): SeriesDataUnit[] {\n    return data.map(([timestamp, countArray], i) => ({\n      name: getName(timestamp, countArray, i),\n      value: countArray.reduce((acc, {count}) => acc + count, 0),\n    }));\n  }\n\n  /**\n   * Get previous period data, but transform timestamps so that data fits unto\n   * the current period's data axis\n   */\n  transformPreviousPeriodData(\n    current: EventsStatsData,\n    previous: EventsStatsData | null,\n    seriesName?: string\n  ): Series | null {\n    // Need the current period data array so we can take the timestamp\n    // so we can be sure the data lines up\n    if (!previous) {\n      return null;\n    }\n\n    return {\n      seriesName: seriesName ?? 'Previous',\n      data: this.calculateTotalsPerTimestamp(\n        previous,\n        (_timestamp, _countArray, i) => current[i][0] * 1000\n      ),\n      stack: 'previous',\n    };\n  }\n\n  /**\n   * Aggregate all counts for each time stamp\n   */\n  transformAggregatedTimeseries(data: EventsStatsData, seriesName: string = ''): Series {\n    return {\n      seriesName,\n      data: this.calculateTotalsPerTimestamp(data),\n    };\n  }\n\n  /**\n   * Transforms query response into timeseries data to be used in a chart\n   */\n  transformTimeseriesData(data: EventsStatsData, seriesName?: string): Series[] {\n    return [\n      {\n        seriesName: seriesName || 'Current',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce((acc, {count}) => acc + count, 0),\n        })),\n      },\n    ];\n  }\n\n  /**\n   * Transforms comparisonCount in query response into timeseries data to be used in a comparison chart for change alerts\n   */\n  transformComparisonTimeseriesData(data: EventsStatsData): Series[] {\n    return [\n      {\n        seriesName: 'comparisonCount()',\n        data: data.map(([timestamp, countsForTimestamp]) => ({\n          name: timestamp * 1000,\n          value: countsForTimestamp.reduce(\n            (acc, {comparisonCount}) => acc + (comparisonCount ?? 0),\n            0\n          ),\n        })),\n      },\n    ];\n  }\n\n  processData(response: EventsStats, seriesIndex: number = 0, seriesName?: string) {\n    const {data, isMetricsData, totals} = response;\n    const {\n      includeTransformedData,\n      includeTimeAggregation,\n      timeAggregationSeriesName,\n      currentSeriesNames,\n      previousSeriesNames,\n      comparisonDelta,\n    } = this.props;\n    const {current, previous} = this.getData(data);\n    const transformedData = includeTransformedData\n      ? this.transformTimeseriesData(\n          current,\n          seriesName ?? currentSeriesNames?.[seriesIndex]\n        )\n      : [];\n    const transformedComparisonData =\n      includeTransformedData && comparisonDelta\n        ? this.transformComparisonTimeseriesData(current)\n        : [];\n    const previousData = includeTransformedData\n      ? this.transformPreviousPeriodData(\n          current,\n          previous,\n          (seriesName ? getPreviousSeriesName(seriesName) : undefined) ??\n            previousSeriesNames?.[seriesIndex]\n        )\n      : null;\n    const timeAggregatedData = includeTimeAggregation\n      ? this.transformAggregatedTimeseries(current, timeAggregationSeriesName || '')\n      : {};\n    const timeframe =\n      response.start && response.end\n        ? !previous\n          ? {\n              start: response.start * 1000,\n              end: response.end * 1000,\n            }\n          : {\n              // Find the midpoint of start & end since previous includes 2x data\n              start: (response.start + response.end) * 500,\n              end: response.end * 1000,\n            }\n        : undefined;\n    return {\n      data: transformedData,\n      comparisonData: transformedComparisonData,\n      allData: data,\n      originalData: current,\n      totals,\n      isMetricsData,\n      originalPreviousData: previous,\n      previousData,\n      timeAggregatedData,\n      timeframe,\n    };\n  }\n\n  render() {\n    const {children, showLoading, ...props} = this.props;\n    const {topEvents} = this.props;\n    const {timeseriesData, reloading, errored, errorMessage} = this.state;\n    // Is \"loading\" if data is null\n    const loading = this.props.loading || timeseriesData === null;\n\n    if (showLoading && loading) {\n      return <LoadingPanel data-test-id=\"events-request-loading\" />;\n    }\n    if (isMultiSeriesStats(timeseriesData, defined(topEvents))) {\n      // Convert multi-series results into chartable series. Multi series results\n      // are created when multiple yAxis are used or a topEvents request is made.\n      // Convert the timeseries data into a multi-series result set.\n      // As the server will have replied with a map like:\n      // {[titleString: string]: EventsStats}\n      let timeframe: {end: number; start: number} | undefined = undefined;\n      const seriesAdditionalInfo: Record<string, AdditionalSeriesInfo> = {};\n      const sortedTimeseriesData = Object.keys(timeseriesData)\n        .map(\n          (\n            seriesName: string,\n            index: number\n          ): [number, Series, Series | null, AdditionalSeriesInfo] => {\n            const seriesData: EventsStats = timeseriesData[seriesName];\n            const processedData = this.processData(\n              seriesData,\n              index,\n              stripEquationPrefix(seriesName)\n            );\n            if (!timeframe) {\n              timeframe = processedData.timeframe;\n            }\n            if (processedData.isMetricsData) {\n              seriesAdditionalInfo[seriesName] = {\n                isMetricsData: processedData.isMetricsData,\n              };\n            }\n            return [\n              seriesData.order || 0,\n              processedData.data[0],\n              processedData.previousData,\n              {isMetricsData: processedData.isMetricsData},\n            ];\n          }\n        )\n        .sort((a, b) => a[0] - b[0]);\n      const results: Series[] = sortedTimeseriesData.map(item => {\n        return item[1];\n      });\n      const previousTimeseriesData: Series[] | undefined = sortedTimeseriesData.some(\n        item => item[2] === null\n      )\n        ? undefined\n        : sortedTimeseriesData.map(item => {\n            return item[2] as Series;\n          });\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        results,\n        timeframe,\n        previousTimeseriesData,\n        seriesAdditionalInfo,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    if (timeseriesData) {\n      const {\n        data: transformedTimeseriesData,\n        comparisonData: transformedComparisonTimeseriesData,\n        allData: allTimeseriesData,\n        originalData: originalTimeseriesData,\n        totals: timeseriesTotals,\n        originalPreviousData: originalPreviousTimeseriesData,\n        previousData: previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        isMetricsData,\n      } = this.processData(timeseriesData);\n\n      const seriesAdditionalInfo = {\n        [this.props.currentSeriesNames?.[0] ?? 'current']: {isMetricsData},\n      };\n\n      return children({\n        loading,\n        reloading,\n        errored,\n        errorMessage,\n        // meta data,\n        seriesAdditionalInfo,\n        // timeseries data\n        timeseriesData: transformedTimeseriesData,\n        comparisonTimeseriesData: transformedComparisonTimeseriesData,\n        allTimeseriesData,\n        originalTimeseriesData,\n        timeseriesTotals,\n        originalPreviousTimeseriesData,\n        previousTimeseriesData: previousTimeseriesData\n          ? [previousTimeseriesData]\n          : previousTimeseriesData,\n        timeAggregatedData,\n        timeframe,\n        // sometimes we want to reference props that were given to EventsRequest\n        ...props,\n      });\n    }\n    return children({\n      loading,\n      reloading,\n      errored,\n      errorMessage,\n      ...props,\n    });\n  }\n}\nexport default EventsRequest;\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport Truncate from 'sentry/components/truncate';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype BaseProps = React.ComponentProps<typeof CompactSelect> & {\n  options: SelectValue<string>[];\n  title: string;\n  featureType?: 'alpha' | 'beta' | 'new';\n};\n\ntype SingleProps = BaseProps & {\n  onChange: (value: string) => void;\n  selected: string;\n  multiple?: false;\n};\ntype MultipleProps = BaseProps & {\n  multiple: true;\n  onChange: (value: string[]) => void;\n  selected: string[];\n};\n\nfunction OptionSelector({\n  options,\n  onChange,\n  selected,\n  title,\n  featureType,\n  multiple,\n  ...rest\n}: SingleProps | MultipleProps) {\n  const mappedOptions = useMemo(() => {\n    return options.map(opt => ({\n      ...opt,\n      label: <Truncate value={String(opt.label)} maxLength={60} expandDirection=\"left\" />,\n    }));\n  }, [options]);\n\n  function onValueChange(option) {\n    onChange(multiple ? option.map(o => o.value) : option.value);\n  }\n\n  function isOptionDisabled(option) {\n    return (\n      // Option is explicitly marked as disabled\n      option.disabled ||\n      // The user has reached the maximum number of selections (3), and the option hasn't\n      // yet been selected. These options should be disabled to visually indicate that the\n      // user has reached the max.\n      (multiple && selected.length === 3 && !selected.includes(option.value))\n    );\n  }\n\n  return (\n    <CompactSelect\n      options={mappedOptions}\n      value={selected}\n      onChange={onValueChange}\n      isOptionDisabled={isOptionDisabled}\n      multiple={multiple}\n      triggerProps={{\n        size: 'small',\n        borderless: true,\n        prefix: (\n          <Fragment>\n            {title}\n            {defined(featureType) ? <StyledFeatureBadge type={featureType} /> : null}\n          </Fragment>\n        ),\n      }}\n      placement=\"bottom right\"\n      {...rest}\n    />\n  );\n}\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin-left: 0px;\n`;\n\nexport default OptionSelector;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {EventsMetaType, MetaType} from 'sentry/utils/discover/eventView';\nimport withApi from 'sentry/utils/withApi';\nimport {TransactionThresholdMetric} from 'sentry/views/performance/transactionSummary/transactionThresholdModal';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from './genericDiscoverQuery';\n\n/**\n * An individual row in a DiscoverQuery result\n */\nexport type TableDataRow = {\n  [key: string]: React.ReactText;\n  id: string;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata.\n */\nexport type TableData = {\n  data: Array<TableDataRow>;\n  meta?: MetaType;\n};\n\n/**\n * A DiscoverQuery result including rows and metadata from the events endpoint.\n */\nexport type EventsTableData = {\n  data: Array<TableDataRow>;\n  meta?: EventsMetaType;\n};\n\nexport type TableDataWithTitle = TableData & {title: string};\n\ntype DiscoverQueryPropsWithThresholds = DiscoverQueryProps & {\n  transactionName?: string;\n  transactionThreshold?: number;\n  transactionThresholdMetric?: TransactionThresholdMetric;\n};\n\ntype DiscoverQueryComponentProps = DiscoverQueryPropsWithThresholds & {\n  children: (props: GenericChildrenProps<TableData>) => React.ReactNode;\n  useEvents?: boolean;\n};\n\nfunction shouldRefetchData(\n  prevProps: DiscoverQueryPropsWithThresholds,\n  nextProps: DiscoverQueryPropsWithThresholds\n) {\n  return (\n    prevProps.transactionName !== nextProps.transactionName ||\n    prevProps.transactionThreshold !== nextProps.transactionThreshold ||\n    prevProps.transactionThresholdMetric !== nextProps.transactionThresholdMetric\n  );\n}\n\nfunction DiscoverQuery(props: DiscoverQueryComponentProps) {\n  const endpoint = props.useEvents ? 'events' : 'eventsv2';\n  const afterFetch = props.useEvents\n    ? (data, _) => {\n        const {fields, ...otherMeta} = data.meta ?? {};\n        return {\n          ...data,\n          meta: {...fields, ...otherMeta},\n        };\n      }\n    : undefined;\n  return (\n    <GenericDiscoverQuery<TableData, DiscoverQueryPropsWithThresholds>\n      route={endpoint}\n      shouldRefetchData={shouldRefetchData}\n      afterFetch={afterFetch}\n      {...props}\n    />\n  );\n}\n\nexport default withApi(DiscoverQuery);\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\n\nimport {DataFilter} from './types';\n\nexport const FILTER_OPTIONS: SelectValue<DataFilter>[] = [\n  {label: t('Exclude'), value: 'exclude_outliers'},\n  {label: t('Include'), value: 'all'},\n];\n","import {Component} from 'react';\nimport {browserHistory} from 'react-router';\nimport {Location} from 'history';\n\nimport {SelectValue} from 'sentry/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {FILTER_OPTIONS} from './constants';\nimport {DataFilter} from './types';\n\ntype HistogramChildrenProps = {\n  activeFilter: SelectValue<DataFilter>;\n  filterOptions: typeof FILTER_OPTIONS;\n  handleFilterChange: (option: string) => void;\n  handleResetView: () => void;\n  isZoomed: boolean;\n};\n\ntype Props = {\n  children: (props: HistogramChildrenProps) => React.ReactNode;\n  location: Location;\n  zoomKeys: string[];\n};\n\nclass Histogram extends Component<Props> {\n  isZoomed() {\n    const {location, zoomKeys} = this.props;\n    return zoomKeys.map(key => location.query[key]).some(value => value !== undefined);\n  }\n\n  handleResetView = () => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, zoomKeys),\n    });\n  };\n\n  getActiveFilter() {\n    const {location} = this.props;\n\n    const dataFilter = location.query.dataFilter\n      ? decodeScalar(location.query.dataFilter)\n      : FILTER_OPTIONS[0].value;\n    return FILTER_OPTIONS.find(item => item.value === dataFilter) || FILTER_OPTIONS[0];\n  }\n\n  handleFilterChange = (value: string) => {\n    const {location, zoomKeys} = this.props;\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...removeHistogramQueryStrings(location, zoomKeys),\n        dataFilter: value,\n      },\n    });\n  };\n\n  render() {\n    const childrenProps = {\n      isZoomed: this.isZoomed(),\n      handleResetView: this.handleResetView,\n      activeFilter: this.getActiveFilter(),\n      handleFilterChange: this.handleFilterChange,\n      filterOptions: FILTER_OPTIONS,\n    };\n    return this.props.children(childrenProps);\n  }\n}\n\nexport function removeHistogramQueryStrings(location: Location, zoomKeys: string[]) {\n  const query: Location['query'] = {...location.query, cursor: undefined};\n\n  delete query.dataFilter;\n  // reset all zoom parameters\n  zoomKeys.forEach(key => delete query[key]);\n\n  return query;\n}\n\nexport default Histogram;\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SuspectSpans} from './types';\n\ntype SuspectSpansProps = {\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n  perSuspect?: number;\n  spanGroups?: string[];\n  spanOps?: string[];\n};\n\ntype RequestProps = DiscoverQueryProps & SuspectSpansProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SuspectSpansProps>, 'tableData'> & {\n  suspectSpans: SuspectSpans | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {perSuspect, spanOps, spanGroups, minExclusiveTime, maxExclusiveTime} = props;\n  const payload = {\n    perSuspect,\n    spanOp: spanOps,\n    spanGroup: spanGroups,\n    min_exclusive_time: minExclusiveTime,\n    max_exclusive_time: maxExclusiveTime,\n  };\n  if (!defined(payload.perSuspect)) {\n    delete payload.perSuspect;\n  }\n  if (!defined(payload.spanOp)) {\n    delete payload.spanOp;\n  }\n  if (!defined(payload.spanGroup)) {\n    delete payload.spanGroup;\n  }\n  const additionalPayload = props.eventView.getEventsAPIPayload(props.location);\n  return {\n    ...payload,\n    ...additionalPayload,\n  };\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SuspectSpans, SuspectSpansProps>\n      route=\"events-spans-performance\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({suspectSpans: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import {LocationDescriptor, Query} from 'history';\n\nimport {spanTargetHash} from 'sentry/components/events/interfaces/spans/utils';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nexport function getTransactionDetailsUrl(\n  orgSlug: Organization['slug'],\n  eventSlug: string,\n  transaction?: string,\n  query?: Query,\n  spanId?: string\n): LocationDescriptor {\n  const locationQuery = {\n    ...(query || {}),\n    transaction,\n  };\n  if (!defined(locationQuery.transaction)) {\n    delete locationQuery.transaction;\n  }\n\n  const target = {\n    pathname: `/organizations/${orgSlug}/performance/${eventSlug}/`,\n    query: locationQuery,\n    hash: defined(spanId) ? spanTargetHash(spanId) : undefined,\n  };\n  if (!defined(target.hash)) {\n    delete target.hash;\n  }\n\n  return target;\n}\n","import omit from 'lodash/omit';\n\nimport {defined} from 'sentry/utils';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanExample} from './types';\n\ntype SpanExamplesProps = {\n  spanGroup: string;\n  spanOp: string;\n  maxExclusiveTime?: string;\n  minExclusiveTime?: string;\n};\n\ntype RequestProps = DiscoverQueryProps & SpanExamplesProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<SpanExamplesProps>, 'tableData'> & {\n  examples: SpanExample[] | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: ChildrenProps) => React.ReactNode;\n};\n\nfunction getSuspectSpanPayload(props: RequestProps) {\n  const {spanOp, spanGroup, minExclusiveTime, maxExclusiveTime} = props;\n  const span =\n    defined(spanOp) && defined(spanGroup) ? `${spanOp}:${spanGroup}` : undefined;\n  const payload = defined(span)\n    ? {span, min_exclusive_time: minExclusiveTime, max_exclusive_time: maxExclusiveTime}\n    : {};\n  const additionalPayload = omit(props.eventView.getEventsAPIPayload(props.location), [\n    'field',\n  ]);\n  return {...payload, ...additionalPayload};\n}\n\nfunction SuspectSpansQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<SpanExample[], SpanExamplesProps>\n      route=\"events-spans\"\n      getRequestPayload={getSuspectSpanPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          examples: tableData ?? null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SuspectSpansQuery);\n","import omit from 'lodash/omit';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {DataFilter, HistogramData} from 'sentry/utils/performance/histogram/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {SpanSlug} from '../suspectSpans/types';\n\ntype HistogramProps = {\n  numBuckets: number;\n  span: SpanSlug;\n  dataFilter?: DataFilter;\n  didReceiveMultiAxis?: (axisCounts: Record<string, number>) => void;\n  max?: string;\n  min?: string;\n  precision?: number;\n};\n\ntype RequestProps = DiscoverQueryProps & HistogramProps;\n\nexport type HistogramQueryChildrenProps = Omit<\n  GenericChildrenProps<HistogramProps>,\n  'tableData'\n> & {\n  histogram: HistogramData | null;\n};\n\ntype Props = RequestProps & {\n  children: (props: HistogramQueryChildrenProps) => React.ReactNode;\n};\n\nfunction getHistogramRequestPayload(props: RequestProps) {\n  const {span, numBuckets, min, max, precision, dataFilter, eventView, location} = props;\n  const baseApiPayload = {\n    span: `${span.op}:${span.group}`,\n    numBuckets,\n    min,\n    max,\n    precision,\n    dataFilter,\n  };\n  const additionalApiPayload = omit(eventView.getEventsAPIPayload(location), [\n    'sort',\n    'per_page',\n    'cursor',\n  ]);\n  const apiPayload = {...baseApiPayload, ...additionalApiPayload};\n  return apiPayload;\n}\n\nfunction SpanHistogramQuery(props: Props) {\n  return (\n    <GenericDiscoverQuery<HistogramData, HistogramProps>\n      route=\"events-spans-histogram\"\n      getRequestPayload={getHistogramRequestPayload}\n      {...omit(props, 'children')}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({histogram: tableData, ...rest});\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(SpanHistogramQuery);\n","import {Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport {Location} from 'history';\n\nimport {BarChart} from 'sentry/components/charts/barChart';\nimport BarChartZoom from 'sentry/components/charts/barChartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {pickBarColor} from 'sentry/components/performance/waterfall/utils';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport SpanHistogramQuery from 'sentry/utils/performance/histogram/spanHistogramQuery';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {\n  computeBuckets,\n  formatHistogramData,\n} from 'sentry/utils/performance/histogram/utils';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {ZoomKeys} from './utils';\n\nconst NUM_BUCKETS = 50;\nconst PRECISION = 0;\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n};\n\nexport default function ExclusiveTimeHistogram(props: Props) {\n  const {location, organization, eventView, spanSlug} = props;\n\n  const start = decodeScalar(location.query[ZoomKeys.MIN]);\n  const end = decodeScalar(location.query[ZoomKeys.MAX]);\n\n  return (\n    <Fragment>\n      <HeaderTitleLegend>\n        {t('Self Time Distribution')}\n        <QuestionTooltip\n          size=\"sm\"\n          position=\"top\"\n          title={t(\n            'Distribution buckets counts of the same self time duration for the selected span op and group.'\n          )}\n        />\n      </HeaderTitleLegend>\n      <SpanHistogramQuery\n        location={location}\n        orgSlug={organization.slug}\n        eventView={eventView}\n        numBuckets={NUM_BUCKETS}\n        precision={PRECISION}\n        span={spanSlug}\n        dataFilter=\"exclude_outliers\"\n        min={start}\n        max={end}\n      >\n        {({histogram, isLoading, error}) => {\n          if (error) {\n            return (\n              <ErrorPanel data-test-id=\"histogram-error-panel\">\n                <IconWarning color=\"gray300\" size=\"lg\" />\n              </ErrorPanel>\n            );\n          }\n\n          return (\n            <TransitionChart loading={isLoading} reloading={isLoading}>\n              <TransparentLoadingMask visible={isLoading} />\n              <BarChartZoom\n                minZoomWidth={1}\n                location={location}\n                paramStart={ZoomKeys.MIN}\n                paramEnd={ZoomKeys.MAX}\n                xAxisIndex={[0]}\n                buckets={histogram ? computeBuckets(histogram) : []}\n              >\n                {zoomRenderProps => (\n                  <Chart\n                    zoomProps={{...zoomRenderProps}}\n                    isLoading={isLoading}\n                    isErrored={!!error}\n                    chartData={histogram}\n                    location={location}\n                    spanSlug={spanSlug}\n                  />\n                )}\n              </BarChartZoom>\n            </TransitionChart>\n          );\n        }}\n      </SpanHistogramQuery>\n    </Fragment>\n  );\n}\n\ntype ChartProps = {\n  chartData: HistogramData | null;\n  isErrored: boolean;\n  isLoading: boolean;\n  location: Location;\n  spanSlug: SpanSlug;\n  zoomProps: any;\n  disableChartPadding?: boolean;\n};\n\nexport function Chart(props: ChartProps) {\n  const theme = useTheme();\n  const {chartData, zoomProps, spanSlug} = props;\n\n  if (!chartData) {\n    return <Placeholder height=\"200px\" />;\n  }\n\n  const chartOptions = {\n    grid: {\n      left: '10px',\n      right: '10px',\n      top: '40px',\n      bottom: '0px',\n    },\n    colors: () => pickBarColor(spanSlug.op),\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis' as const,\n      // TODO (udameli) pull series name from the meta\n      valueFormatter: (value, _seriesName) => tooltipFormatter(value, _seriesName),\n    },\n    yAxis: {\n      type: 'value' as const,\n      axisLabel: {\n        color: theme.chartLabel,\n        formatter: (value: number) => axisLabelFormatter(value, 'number'),\n      },\n    },\n    xAxis: {\n      type: 'category' as const,\n      truncate: true,\n      axisTick: {\n        alignWithLabel: true,\n      },\n    },\n    height: 200,\n  };\n\n  const series = {\n    seriesName: t('Count'),\n    data: formatHistogramData(chartData, {type: 'duration'}),\n  };\n\n  return (\n    <Fragment>\n      {getDynamicText({\n        value: <BarChart {...zoomProps} {...chartOptions} series={[series]} stacked />,\n        fixed: <Placeholder height=\"200px\" />,\n      })}\n    </Fragment>\n  );\n}\n","import {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport OptionSelector from 'sentry/components/charts/optionSelector';\nimport {\n  ChartContainer,\n  ChartControls,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport Count from 'sentry/components/count';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport ExclusiveTimeHistogram from './exclusiveTimeHistogram';\nimport ExclusiveTimeTimeSeries from './exclusiveTimeTimeSeries';\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n  totalCount?: number;\n};\n\nenum DisplayModes {\n  TIMESERIES = 'timeseries',\n  HISTOGRAM = 'histogram',\n}\n\nfunction Chart(props: Props) {\n  const {location} = props;\n\n  const display = decodeScalar(props.location.query.display, DisplayModes.TIMESERIES);\n\n  function generateDisplayOptions() {\n    return [\n      {value: DisplayModes.TIMESERIES, label: t('Self Time Breakdown')},\n      {value: DisplayModes.HISTOGRAM, label: t('Self Time Distribution')},\n    ];\n  }\n\n  function handleDisplayChange(value: string) {\n    trackAdvancedAnalyticsEvent('performance_views.span_summary.change_chart', {\n      organization: props.organization,\n      change_to_display: value,\n    });\n\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        display: value,\n      },\n    });\n  }\n\n  return (\n    <Panel>\n      <ChartContainer>\n        <Feature features={['performance-span-histogram-view']}>\n          {({hasFeature}) => {\n            if (hasFeature) {\n              if (display === DisplayModes.TIMESERIES) {\n                return <ExclusiveTimeTimeSeries {...props} withoutZerofill={false} />;\n              }\n              return <ExclusiveTimeHistogram {...props} />;\n            }\n            return <ExclusiveTimeTimeSeries {...props} withoutZerofill={false} />;\n          }}\n        </Feature>\n      </ChartContainer>\n      <Feature features={['performance-span-histogram-view']}>\n        <ChartControls>\n          <InlineContainer>\n            <SectionHeading>{t('Total Events')}</SectionHeading>\n            <SectionValue data-test-id=\"total-value\">\n              {defined(props.totalCount) ? <Count value={props.totalCount} /> : '\\u2014'}\n            </SectionValue>\n          </InlineContainer>\n          <InlineContainer data-test-id=\"display-toggle\">\n            <OptionSelector\n              title={t('Display')}\n              selected={display}\n              options={generateDisplayOptions()}\n              onChange={handleDisplayChange}\n            />\n          </InlineContainer>\n        </ChartControls>\n      </Feature>\n    </Panel>\n  );\n}\n\nexport default withRouter(Chart);\n","import {Fragment} from 'react';\nimport {browserHistory, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport {Location} from 'history';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport EventsRequest from 'sentry/components/charts/eventsRequest';\nimport {LineChart} from 'sentry/components/charts/lineChart';\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getInterval, getSeriesSelection} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport EventView from 'sentry/utils/discover/eventView';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport useApi from 'sentry/utils/useApi';\n\nimport {getExclusiveTimeDisplayedValue} from '../utils';\n\ntype Props = WithRouterProps & {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  spanSlug: SpanSlug;\n  withoutZerofill: boolean;\n};\n\nexport default function ExclusiveTimeTimeSeries(props: Props) {\n  const {location, router, organization, eventView, spanSlug, withoutZerofill} = props;\n\n  const api = useApi();\n  const theme = useTheme();\n\n  const period = eventView.statsPeriod;\n  const start = eventView.start ? getUtcToLocalDateObject(eventView.start) : null;\n  const end = eventView.end ? getUtcToLocalDateObject(eventView.end) : null;\n  const {utc} = normalizeDateTimeParams(location.query);\n\n  const datetimeSelection = {\n    start,\n    end,\n    period,\n  };\n\n  const yAxis = [\n    'percentileArray(spans_exclusive_time, 0.75)',\n    'percentileArray(spans_exclusive_time, 0.95)',\n    'percentileArray(spans_exclusive_time, 0.99)',\n  ];\n\n  const handleLegendSelectChanged = legendChange => {\n    const {selected} = legendChange;\n    const unselected = Object.keys(selected).filter(key => !selected[key]);\n\n    const to = {\n      ...location,\n      query: {\n        ...location.query,\n        unselectedSeries: unselected,\n      },\n    };\n    browserHistory.push(to);\n  };\n\n  return (\n    <Fragment>\n      <HeaderTitleLegend>\n        {t('Self Time Breakdown')}\n        <QuestionTooltip\n          size=\"sm\"\n          position=\"top\"\n          title={t(\n            'Self Time Breakdown reflects the span self time by percentile over time.'\n          )}\n        />\n      </HeaderTitleLegend>\n      <ChartZoom\n        router={router}\n        period={period}\n        start={start}\n        end={end}\n        utc={utc === 'true'}\n      >\n        {zoomRenderProps => (\n          <EventsRequest\n            api={api}\n            organization={organization}\n            project={eventView.project}\n            environment={eventView.environment}\n            start={start}\n            end={end}\n            period={period}\n            interval={getInterval(datetimeSelection, 'high')}\n            showLoading={false}\n            query={eventView.query}\n            includePrevious={false}\n            yAxis={yAxis}\n            partial\n            withoutZerofill={withoutZerofill}\n            queryExtras={{span: `${spanSlug.op}:${spanSlug.group}`}}\n            generatePathname={org => `/organizations/${org.slug}/events-spans-stats/`}\n          >\n            {({results, errored, loading, reloading, timeframe}) => {\n              if (errored) {\n                return (\n                  <ErrorPanel>\n                    <IconWarning color=\"gray300\" size=\"lg\" />\n                  </ErrorPanel>\n                );\n              }\n\n              const chartOptions = {\n                grid: {\n                  left: '10px',\n                  right: '10px',\n                  top: '40px',\n                  bottom: '0px',\n                },\n                colors: theme.charts.getColorPalette(yAxis.length - 2),\n                seriesOptions: {\n                  showSymbol: false,\n                },\n                tooltip: {\n                  trigger: 'axis' as const,\n                  // p50() coerces the axis to be time based\n                  valueFormatter: (value, _seriesName) =>\n                    tooltipFormatter(value, 'p50()'),\n                },\n                xAxis: timeframe\n                  ? {\n                      min: timeframe.start,\n                      max: timeframe.end,\n                    }\n                  : undefined,\n                yAxis: {\n                  axisLabel: {\n                    color: theme.chartLabel,\n                    // p50() coerces the axis to be time based\n                    formatter: (value: number) => axisLabelFormatter(value, 'p50()'),\n                  },\n                },\n              };\n\n              const legend = {\n                right: 10,\n                top: 5,\n                selected: getSeriesSelection(location),\n              };\n\n              const formattedResults = results?.map(result => ({\n                ...result,\n                seriesName: getExclusiveTimeDisplayedValue(result.seriesName),\n              }));\n\n              return (\n                <TransitionChart loading={loading} reloading={reloading}>\n                  <TransparentLoadingMask visible={reloading} />\n                  {getDynamicText({\n                    value: (\n                      <LineChart\n                        {...zoomRenderProps}\n                        {...chartOptions}\n                        legend={legend}\n                        onLegendSelectChanged={handleLegendSelectChanged}\n                        series={formattedResults ?? []}\n                      />\n                    ),\n                    fixed: <Placeholder height=\"200px\" />,\n                  })}\n                </TransitionChart>\n              );\n            }}\n          </EventsRequest>\n        )}\n      </ChartZoom>\n    </Fragment>\n  );\n}\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Button from 'sentry/components/button';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {removeHistogramQueryStrings} from 'sentry/utils/performance/histogram';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\nimport {ZoomKeys} from './utils';\n\ninterface SpanDetailsControlsProps {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n}\n\nexport default function SpanDetailsControls({\n  organization,\n  eventView,\n  location,\n}: SpanDetailsControlsProps) {\n  const query = decodeScalar(location.query.query, '');\n\n  const handleSearchQuery = (searchQuery: string): void => {\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        query: String(searchQuery).trim() || undefined,\n        userModified: true,\n      },\n    });\n  };\n\n  const handleResetView = () => {\n    browserHistory.push({\n      pathname: location.pathname,\n      query: removeHistogramQueryStrings(location, Object.values(ZoomKeys)),\n    });\n  };\n\n  const isZoomed = () => Object.values(ZoomKeys).some(key => location.query[key]);\n\n  return (\n    <FilterActions>\n      <PageFilterBar condensed>\n        <EnvironmentPageFilter />\n        <DatePageFilter alignDropdown=\"left\" />\n      </PageFilterBar>\n      <SearchBar\n        placeholder={t('Filter Transactions')}\n        organization={organization}\n        projectIds={eventView.project}\n        query={query}\n        fields={eventView.fields}\n        onSearch={handleSearchQuery}\n      />\n      <Button onClick={handleResetView} disabled={!isZoomed()}>\n        {t('Reset View')}\n      </Button>\n    </FilterActions>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr auto;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Count from 'sentry/components/count';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {SpanSlug, SuspectSpan} from 'sentry/utils/performance/suspectSpans/types';\n\ninterface HeaderProps {\n  spanSlug: SpanSlug;\n  totalCount: number | null;\n  suspectSpan?: SuspectSpan;\n}\n\nexport default function SpanDetailsHeader(props: HeaderProps) {\n  const {spanSlug, suspectSpan, totalCount} = props;\n\n  const {\n    description,\n    frequency,\n    avgOccurrences,\n    p75ExclusiveTime,\n    p95ExclusiveTime,\n    p99ExclusiveTime,\n    sumExclusiveTime,\n  } = suspectSpan ?? {};\n\n  return (\n    <ContentHeader>\n      <HeaderInfo data-test-id=\"header-operation-name\">\n        <StyledSectionHeading>{t('Span Operation')}</StyledSectionHeading>\n        <SectionBody>\n          <SpanLabelContainer>{description ?? emptyValue}</SpanLabelContainer>\n        </SectionBody>\n        <SectionSubtext data-test-id=\"operation-name\">{spanSlug.op}</SectionSubtext>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-percentiles\">\n        <StyledSectionHeading>{t('Self Time Percentiles')}</StyledSectionHeading>\n        <PercentileHeaderBodyWrapper>\n          <div data-test-id=\"section-p75\">\n            <SectionBody>\n              {defined(p75ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p75ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p75')}</SectionSubtext>\n          </div>\n          <div data-test-id=\"section-p95\">\n            <SectionBody>\n              {defined(p95ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p95ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p95')}</SectionSubtext>\n          </div>\n          <div data-test-id=\"section-p99\">\n            <SectionBody>\n              {defined(p99ExclusiveTime) ? (\n                <PerformanceDuration abbreviation milliseconds={p99ExclusiveTime} />\n              ) : (\n                '\\u2014'\n              )}\n            </SectionBody>\n            <SectionSubtext>{t('p99')}</SectionSubtext>\n          </div>\n        </PercentileHeaderBodyWrapper>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-frequency\">\n        <StyledSectionHeading>{t('Frequency')}</StyledSectionHeading>\n        <SectionBody>\n          {defined(frequency) && defined(totalCount)\n            ? formatPercentage(Math.min(frequency, totalCount) / totalCount)\n            : '\\u2014'}\n        </SectionBody>\n        <SectionSubtext>\n          {defined(avgOccurrences)\n            ? tct('[times] times per event', {times: avgOccurrences.toFixed(2)})\n            : '\\u2014'}\n        </SectionSubtext>\n      </HeaderInfo>\n      <HeaderInfo data-test-id=\"header-total-exclusive-time\">\n        <StyledSectionHeading>{t('Total Self Time')}</StyledSectionHeading>\n        <SectionBody>\n          {defined(sumExclusiveTime) ? (\n            <PerformanceDuration abbreviation milliseconds={sumExclusiveTime} />\n          ) : (\n            '\\u2014'\n          )}\n        </SectionBody>\n        <SectionSubtext>\n          {defined(frequency)\n            ? tct('[events] events', {events: <Count value={frequency} />})\n            : '\\u2014'}\n        </SectionSubtext>\n      </HeaderInfo>\n    </ContentHeader>\n  );\n}\n\nconst ContentHeader = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: ${space(4)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: 1fr repeat(3, max-content);\n  }\n`;\n\nconst HeaderInfo = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  height: 78px;\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst SectionBody = styled('div')<{overflowEllipsis?: boolean}>`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  padding: ${space(0.5)} 0;\n  max-height: 32px;\n`;\n\nconst SectionSubtext = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst PercentileHeaderBodyWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  gap: ${space(3)};\n`;\n\nexport const SpanLabelContainer = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst EmptyValueContainer = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst emptyValue = <EmptyValueContainer>{t('(unnamed span)')}</EmptyValueContainer>;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport {DurationPill, RowRectangle} from 'sentry/components/performance/waterfall/rowBar';\nimport {pickBarColor, toPercent} from 'sentry/components/performance/waterfall/utils';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {formatPercentage} from 'sentry/utils/formatters';\nimport {\n  ExampleTransaction,\n  SuspectSpan,\n} from 'sentry/utils/performance/suspectSpans/types';\n\nimport {generateTransactionLink} from '../../utils';\n\ntype TableColumnKeys =\n  | 'id'\n  | 'timestamp'\n  | 'transactionDuration'\n  | 'spanDuration'\n  | 'occurrences'\n  | 'cumulativeDuration'\n  | 'spans';\n\ntype TableColumn = GridColumnOrder<TableColumnKeys>;\n\ntype TableDataRow = Record<TableColumnKeys, any>;\n\ntype Props = {\n  examples: ExampleTransaction[];\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  transactionName: string;\n  pageLinks?: string | null;\n  project?: Project;\n  suspectSpan?: SuspectSpan;\n};\n\nexport default function SpanTable(props: Props) {\n  const {\n    location,\n    organization,\n    project,\n    examples,\n    suspectSpan,\n    transactionName,\n    isLoading,\n    pageLinks,\n  } = props;\n\n  if (!defined(examples)) {\n    return null;\n  }\n\n  const data = examples\n    // we assume that the span appears in each example at least once,\n    // if this assumption is broken, nothing onwards will work so\n    // filter out such examples\n    .filter(example => example.spans.length > 0)\n    .map(example => ({\n      id: example.id,\n      project: project?.slug,\n      // timestamps are in seconds but want them in milliseconds\n      timestamp: example.finishTimestamp * 1000,\n      transactionDuration: (example.finishTimestamp - example.startTimestamp) * 1000,\n      spanDuration: example.nonOverlappingExclusiveTime,\n      occurrences: example.spans.length,\n      cumulativeDuration: example.spans.reduce(\n        (duration, span) => duration + span.exclusiveTime,\n        0\n      ),\n      spans: example.spans,\n    }));\n\n  return (\n    <Fragment>\n      <GridEditable\n        isLoading={isLoading}\n        data={data}\n        columnOrder={SPANS_TABLE_COLUMN_ORDER}\n        columnSortBy={[]}\n        grid={{\n          renderHeadCell,\n          renderBodyCell: renderBodyCellWithMeta(\n            location,\n            organization,\n            transactionName,\n            suspectSpan\n          ),\n        }}\n        location={location}\n      />\n      <Pagination pageLinks={pageLinks ?? null} />\n    </Fragment>\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): React.ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(\n  location: Location,\n  organization: Organization,\n  transactionName: string,\n  suspectSpan?: SuspectSpan\n) {\n  return (column: TableColumn, dataRow: TableDataRow): React.ReactNode => {\n    // if the transaction duration is falsey, then just render the span duration on its own\n    if (column.key === 'spanDuration' && dataRow.transactionDuration) {\n      return (\n        <SpanDurationBar\n          spanOp={suspectSpan?.op ?? ''}\n          spanDuration={dataRow.spanDuration}\n          transactionDuration={dataRow.transactionDuration}\n        />\n      );\n    }\n\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n    let rendered = fieldRenderer(dataRow, {location, organization});\n\n    if (column.key === 'id') {\n      const worstSpan = dataRow.spans.length\n        ? dataRow.spans.reduce((worst, span) =>\n            worst.exclusiveTime >= span.exclusiveTime ? worst : span\n          )\n        : null;\n      const target = generateTransactionLink(transactionName)(\n        organization,\n        dataRow,\n        location.query,\n        worstSpan.id\n      );\n\n      rendered = <Link to={target}>{rendered}</Link>;\n    }\n\n    return rendered;\n  };\n}\n\nconst COLUMN_TYPE: Omit<\n  Record<TableColumnKeys, ColumnType>,\n  'spans' | 'transactionDuration'\n> = {\n  id: 'string',\n  timestamp: 'date',\n  spanDuration: 'duration',\n  occurrences: 'integer',\n  cumulativeDuration: 'duration',\n};\n\nconst SPANS_TABLE_COLUMN_ORDER: TableColumn[] = [\n  {\n    key: 'id',\n    name: t('Event ID'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'spanDuration',\n    name: t('Span Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'occurrences',\n    name: t('Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  {\n    key: 'cumulativeDuration',\n    name: t('Cumulative Duration'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n];\n\nconst DurationBar = styled('div')`\n  position: relative;\n  display: flex;\n  top: ${space(0.5)};\n  background-color: ${p => p.theme.gray100};\n`;\n\nconst DurationBarSection = styled(RowRectangle)`\n  position: relative;\n  width: 100%;\n  top: 0;\n`;\n\ntype SpanDurationBarProps = {\n  spanDuration: number;\n  spanOp: string;\n  transactionDuration: number;\n};\n\nfunction SpanDurationBar(props: SpanDurationBarProps) {\n  const {spanOp, spanDuration, transactionDuration} = props;\n  const widthPercentage = spanDuration / transactionDuration;\n  const position = widthPercentage < 0.7 ? 'right' : 'inset';\n\n  return (\n    <DurationBar>\n      <div style={{width: toPercent(widthPercentage)}}>\n        <Tooltip\n          title={tct('[percentage] of the transaction', {\n            percentage: formatPercentage(widthPercentage),\n          })}\n          containerDisplayMode=\"block\"\n        >\n          <DurationBarSection\n            spanBarHatch={false}\n            style={{backgroundColor: pickBarColor(spanOp)}}\n          >\n            <DurationPill\n              durationDisplay={position}\n              showDetail={false}\n              spanBarHatch={false}\n            >\n              <PerformanceDuration abbreviation milliseconds={spanDuration} />\n            </DurationPill>\n          </DurationBarSection>\n        </Tooltip>\n      </div>\n    </DurationBar>\n  );\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {setTag} from '@sentry/react';\nimport {Location} from 'history';\n\nimport Feature from 'sentry/components/acl/feature';\nimport IdBadge from 'sentry/components/idBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport DiscoverQuery from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport SpanExamplesQuery, {\n  ChildrenProps as SpanExamplesProps,\n} from 'sentry/utils/performance/suspectSpans/spanExamplesQuery';\nimport SuspectSpansQuery, {\n  ChildrenProps as SuspectSpansProps,\n} from 'sentry/utils/performance/suspectSpans/suspectSpansQuery';\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport Breadcrumb from 'sentry/views/performance/breadcrumb';\n\nimport Tab from '../../tabs';\nimport {SpanSortOthers} from '../types';\nimport {getTotalsView} from '../utils';\n\nimport SpanChart from './chart';\nimport SpanDetailsControls from './spanDetailsControls';\nimport SpanDetailsHeader from './spanDetailsHeader';\nimport SpanTable from './spanDetailsTable';\nimport {ZoomKeys} from './utils';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  project: Project | undefined;\n  spanSlug: SpanSlug;\n  transactionName: string;\n};\n\nexport default function SpanDetailsContentWrapper(props: Props) {\n  const {location, organization, eventView, project, transactionName, spanSlug} = props;\n  const minExclusiveTime = decodeScalar(location.query[ZoomKeys.MIN]);\n  const maxExclusiveTime = decodeScalar(location.query[ZoomKeys.MAX]);\n\n  return (\n    <Fragment>\n      <Layout.Header>\n        <Layout.HeaderContent>\n          <Breadcrumb\n            organization={organization}\n            location={location}\n            transaction={{\n              project: project?.id ?? '',\n              name: transactionName,\n            }}\n            tab={Tab.Spans}\n            spanSlug={spanSlug}\n          />\n          <Layout.Title>\n            <TransactionName>\n              {project && (\n                <IdBadge\n                  project={project}\n                  avatarSize={28}\n                  hideName\n                  avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                />\n              )}\n              {transactionName}\n            </TransactionName>\n          </Layout.Title>\n        </Layout.HeaderContent>\n      </Layout.Header>\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <DiscoverQuery\n            eventView={getTotalsView(eventView)}\n            orgSlug={organization.slug}\n            location={location}\n            referrer=\"api.performance.transaction-spans\"\n            cursor=\"0:0:1\"\n            noPagination\n            useEvents\n          >\n            {({tableData}) => {\n              const totalCount: number | null =\n                (tableData?.data?.[0]?.['count()'] as number) ?? null;\n\n              if (totalCount) {\n                setTag('spans.totalCount', totalCount);\n                const countGroup = [\n                  1, 5, 10, 20, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000,\n                ].find(n => totalCount <= n);\n                setTag('spans.totalCount.grouped', `<=${countGroup}`);\n              }\n\n              return (\n                <SuspectSpansQuery\n                  location={location}\n                  orgSlug={organization.slug}\n                  eventView={getSpansEventView(eventView)}\n                  perSuspect={0}\n                  spanOps={[spanSlug.op]}\n                  spanGroups={[spanSlug.group]}\n                  cursor=\"0:0:1\"\n                  minExclusiveTime={minExclusiveTime}\n                  maxExclusiveTime={maxExclusiveTime}\n                >\n                  {suspectSpansResults => (\n                    <SpanExamplesQuery\n                      location={location}\n                      orgSlug={organization.slug}\n                      eventView={eventView}\n                      spanOp={spanSlug.op}\n                      spanGroup={spanSlug.group}\n                      limit={10}\n                      minExclusiveTime={minExclusiveTime}\n                      maxExclusiveTime={maxExclusiveTime}\n                    >\n                      {spanExamplesResults => (\n                        <SpanDetailsContent\n                          location={location}\n                          organization={organization}\n                          project={project}\n                          eventView={eventView}\n                          spanSlug={spanSlug}\n                          transactionName={transactionName}\n                          totalCount={totalCount}\n                          suspectSpansResults={suspectSpansResults}\n                          spanExamplesResults={spanExamplesResults}\n                        />\n                      )}\n                    </SpanExamplesQuery>\n                  )}\n                </SuspectSpansQuery>\n              );\n            }}\n          </DiscoverQuery>\n        </Layout.Main>\n      </Layout.Body>\n    </Fragment>\n  );\n}\n\nconst TransactionName = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n`;\n\ntype ContentProps = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  project: Project | undefined;\n  spanExamplesResults: SpanExamplesProps;\n  spanSlug: SpanSlug;\n  suspectSpansResults: SuspectSpansProps;\n  totalCount: number;\n  transactionName: string;\n};\n\nfunction SpanDetailsContent(props: ContentProps) {\n  const {\n    location,\n    organization,\n    project,\n    eventView,\n    spanSlug,\n    transactionName,\n    totalCount,\n    suspectSpansResults,\n    spanExamplesResults,\n  } = props;\n\n  // There should always be exactly 1 result\n  const suspectSpan = suspectSpansResults.suspectSpans?.[0];\n  const examples = spanExamplesResults.examples?.[0]?.examples;\n  const transactionCountContainingSpan = suspectSpan?.frequency;\n\n  return (\n    <Fragment>\n      <Feature features={['performance-span-histogram-view']}>\n        <SpanDetailsControls\n          organization={organization}\n          location={location}\n          eventView={eventView}\n        />\n      </Feature>\n      <SpanDetailsHeader\n        spanSlug={spanSlug}\n        totalCount={totalCount}\n        suspectSpan={suspectSpan}\n      />\n      <SpanChart\n        totalCount={transactionCountContainingSpan}\n        organization={organization}\n        eventView={eventView}\n        spanSlug={spanSlug}\n      />\n      <SpanTable\n        location={location}\n        organization={organization}\n        project={project}\n        suspectSpan={suspectSpan}\n        transactionName={transactionName}\n        isLoading={spanExamplesResults.isLoading}\n        examples={examples ?? []}\n        pageLinks={spanExamplesResults.pageLinks}\n      />\n    </Fragment>\n  );\n}\n\nfunction getSpansEventView(eventView: EventView): EventView {\n  // TODO: There is a bug where if the sort is not avg occurrence,\n  // then the avg occurrence will never be added to the fields\n  eventView = eventView.withSorts([{field: SpanSortOthers.AVG_OCCURRENCE, kind: 'desc'}]);\n  eventView.fields = [\n    {field: 'count()'},\n    {field: 'count_unique(id)'},\n    {field: 'equation|count() / count_unique(id)'},\n    {field: 'sumArray(spans_exclusive_time)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.75)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.95)'},\n    {field: 'percentileArray(spans_exclusive_time, 0.99)'},\n  ];\n  return eventView;\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {defined} from 'sentry/utils';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {getTransactionName} from '../../../utils';\nimport {NoAccess, redirectToPerformanceHomepage} from '../../pageLayout';\nimport {\n  generateSpansEventView,\n  parseSpanSlug,\n  SPAN_RELATIVE_PERIODS,\n  SPAN_RETENTION_DAYS,\n} from '../utils';\n\nimport SpanDetailsContent from './content';\n\ntype Props = Pick<RouteComponentProps<{spanSlug: string}, {}>, 'location' | 'params'>;\n\nexport default function SpanDetails(props: Props) {\n  const {location, params} = props;\n  const transactionName = getTransactionName(location);\n  const spanSlug = parseSpanSlug(params.spanSlug);\n\n  const organization = useOrganization();\n  const {projects} = useProjects();\n\n  const projectId = decodeScalar(location.query.project);\n  if (!defined(projectId) || !defined(transactionName) || !defined(spanSlug)) {\n    redirectToPerformanceHomepage(organization, location);\n    return null;\n  }\n\n  const project = projects.find(p => p.id === projectId);\n  const eventView = generateSpansEventView({\n    location,\n    transactionName,\n  });\n\n  return (\n    <SentryDocumentTitle\n      title={getDocumentTitle(transactionName)}\n      orgSlug={organization.slug}\n      projectSlug={project?.slug}\n    >\n      <Feature\n        features={['performance-view', 'performance-suspect-spans-view']}\n        organization={organization}\n        renderDisabled={NoAccess}\n      >\n        <PageFiltersContainer\n          lockedMessageSubject={t('transaction')}\n          shouldForceProject={defined(project)}\n          forceProject={project}\n          specificProjectSlugs={defined(project) ? [project.slug] : []}\n          disableMultipleProjectSelection\n          showProjectSettingsLink\n          relativeDateOptions={SPAN_RELATIVE_PERIODS}\n          maxPickableDays={SPAN_RETENTION_DAYS}\n          hideGlobalHeader\n        >\n          <StyledPageContent>\n            <NoProjectMessage organization={organization}>\n              <SpanDetailsContent\n                location={location}\n                organization={organization}\n                eventView={eventView}\n                project={project}\n                transactionName={transactionName}\n                spanSlug={spanSlug}\n              />\n            </NoProjectMessage>\n          </StyledPageContent>\n        </PageFiltersContainer>\n      </Feature>\n    </SentryDocumentTitle>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n","import {Query} from 'history';\n\nimport {SpanSlug} from 'sentry/utils/performance/suspectSpans/types';\n\nexport function generateSpanDetailsRoute({\n  orgSlug,\n  spanSlug,\n}: {\n  orgSlug: String;\n  spanSlug: SpanSlug;\n}): string {\n  const spanComponent = `${encodeURIComponent(spanSlug.op)}:${spanSlug.group}`;\n  return `/organizations/${orgSlug}/performance/summary/spans/${spanComponent}/`;\n}\n\nexport function spanDetailsRouteWithQuery({\n  orgSlug,\n  transaction,\n  query,\n  spanSlug,\n  projectID,\n}: {\n  orgSlug: string;\n  query: Query;\n  spanSlug: SpanSlug;\n  transaction: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateSpanDetailsRoute({\n    orgSlug,\n    spanSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport enum ZoomKeys {\n  MIN = 'min',\n  MAX = 'max',\n}\n","import styled from '@emotion/styled';\nimport {LocationDescriptor, Query} from 'history';\n\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {generateEventSlug} from 'sentry/utils/discover/urls';\nimport {getTransactionDetailsUrl} from 'sentry/utils/performance/urls';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {getTraceDetailsUrl} from 'sentry/views/performance/traceDetails/utils';\n\nimport {DisplayModes} from './transactionOverview/charts';\n\nexport enum TransactionFilterOptions {\n  FASTEST = 'fastest',\n  SLOW = 'slow',\n  OUTLIER = 'outlier',\n  RECENT = 'recent',\n}\n\nexport function generateTransactionSummaryRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/`;\n}\n\n// normalizes search conditions by removing any redundant search conditions before presenting them in:\n// - query strings\n// - search UI\nexport function normalizeSearchConditions(query: string): MutableSearch {\n  const filterParams = normalizeSearchConditionsWithTransactionName(query);\n\n  // no need to include transaction as its already in the query params\n  filterParams.removeFilter('transaction');\n\n  return filterParams;\n}\n\n// normalizes search conditions by removing any redundant search conditions, but retains any transaction name\nexport function normalizeSearchConditionsWithTransactionName(\n  query: string\n): MutableSearch {\n  const filterParams = new MutableSearch(query);\n\n  // remove any event.type queries since it is implied to apply to only transactions\n  filterParams.removeFilter('event.type');\n\n  return filterParams;\n}\n\nexport function transactionSummaryRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n  unselectedSeries = 'p100()',\n  display,\n  trendFunction,\n  trendColumn,\n  showTransactions,\n  additionalQuery,\n}: {\n  orgSlug: string;\n  query: Query;\n  transaction: string;\n  additionalQuery?: Record<string, string>;\n  display?: DisplayModes;\n  projectID?: string | string[];\n  showTransactions?: TransactionFilterOptions;\n  trendColumn?: string;\n  trendFunction?: string;\n  unselectedSeries?: string | string[];\n}) {\n  const pathname = generateTransactionSummaryRoute({\n    orgSlug,\n  });\n\n  let searchFilter: typeof query.query;\n  if (typeof query.query === 'string') {\n    searchFilter = normalizeSearchConditions(query.query).formatString();\n  } else {\n    searchFilter = query.query;\n  }\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: searchFilter,\n      unselectedSeries,\n      showTransactions,\n      display,\n      trendFunction,\n      trendColumn,\n      ...additionalQuery,\n    },\n  };\n}\n\nexport function generateTraceLink(dateSelection) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    _query: Query\n  ): LocationDescriptor => {\n    const traceId = `${tableRow.trace}`;\n    if (!traceId) {\n      return {};\n    }\n\n    return getTraceDetailsUrl(organization, traceId, dateSelection, {});\n  };\n}\n\nexport function generateTransactionLink(transactionName: string) {\n  return (\n    organization: Organization,\n    tableRow: TableDataRow,\n    query: Query,\n    spanId?: string\n  ): LocationDescriptor => {\n    const eventSlug = generateEventSlug(tableRow);\n    return getTransactionDetailsUrl(\n      organization.slug,\n      eventSlug,\n      transactionName,\n      query,\n      spanId\n    );\n  };\n}\n\nexport const SidebarSpacer = styled('div')`\n  margin-top: ${space(3)};\n`;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar __isA = {\n  \"PointValueExtractor<unknown>\": value => typeof value === \"function\",\n  \"XYDataPoint\": value => value !== undefined && value !== null && __isA[\"X\"](value[\"x\"]) && typeof value[\"y\"] === \"number\",\n  \"X\": value => typeof value === \"number\" || value instanceof Date\n};\nvar calculateMean = values => {\n  var m = 0;\n\n  for (var i = 0; i < values.length; i += 1) {\n    m += values[i];\n  }\n\n  return m / values.length;\n};\nvar calculateSTD = values => {\n  var mean = calculateMean(values);\n  var std = 0;\n\n  for (var i = 0; i < values.length; i += 1) {\n    std += (values[i] - mean) * (values[i] - mean);\n  }\n\n  return Math.sqrt(std / values.length);\n};\nvar mapToArray = (input, callback) => {\n  var length = input.length;\n  var result = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    result[i] = callback(input[i], i);\n  }\n\n  return result;\n};\nvar getPointValueExtractor = accessor => {\n  if (__isA[\"PointValueExtractor<unknown>\"](accessor)) return accessor;\n  return point => point[accessor];\n};\nvar createXYDataPoint = (time, value) => ({\n  x: time,\n  y: value\n});\nvar createLegacyDataPointConfig = () => ({\n  x: point => {\n    var t = __isA[\"XYDataPoint\"](point) ? point.x : point[0];\n    return t instanceof Date ? t.getTime() : t;\n  },\n  y: point => 'y' in point ? point.y : point[1],\n  toPoint: createXYDataPoint\n});\nvar iterableBasedOn = (input, length) => new input.constructor(length);\n\nvar SMANumeric = function SMANumeric(data, windowSize) {\n  var slide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var output = [];\n  var sum = 0;\n\n  for (var i = 0; i < windowSize; i++) {\n    sum += data[i];\n  }\n\n  for (var _i = windowSize; _i <= data.length; _i++) {\n    if ((_i - windowSize) % slide === 0) {\n      output.push(sum / windowSize);\n    }\n\n    sum += data[_i] - data[_i - windowSize];\n  }\n\n  return output;\n};\n/**\n * Simple Moving Average (SMA)\n *\n * @param data {Number[]}\n * @param windowSize {Number}\n * @param slide {Number}\n */\n\nvar createSMA = config => {\n  var timeExtractor = getPointValueExtractor(config.x);\n  var valueExtractor = getPointValueExtractor(config.y);\n  var pointFactory = config.toPoint;\n  return function (values, windowSize) {\n    var slide = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (values.length === 0) return values;\n    var data = mapToArray(values, valueExtractor);\n    var times = mapToArray(values, timeExtractor);\n    var output = iterableBasedOn(values, 0);\n    var sum = 0;\n    var value;\n\n    for (var i = 0; i < windowSize; i++) {\n      sum += data[i];\n    }\n\n    for (var _i2 = windowSize; _i2 <= data.length; _i2++) {\n      if ((_i2 - windowSize) % slide === 0) {\n        value = pointFactory((times[_i2 - windowSize] + times[_i2 - 1]) / 2, sum / windowSize, _i2 - windowSize);\n        output[output.length] = value;\n      }\n\n      sum += data[_i2] - data[_i2 - windowSize];\n    }\n\n    return output;\n  };\n};\nvar SMA = createSMA(createLegacyDataPointConfig());\n\n/*\n * Free FFT and convolution (JavaScript)\n *\n * Copyright (c) 2014 Project Nayuki\n * https://www.nayuki.io/page/free-small-fft-in-multiple-languages\n *\n * (MIT License)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n * - The above copyright notice and this permission notice shall be included in\n *   all copies or substantial portions of the Software.\n * - The Software is provided \"as is\", without warranty of any kind, express or\n *   implied, including but not limited to the warranties of merchantability,\n *   fitness for a particular purpose and noninfringement. In no event shall the\n *   authors or copyright holders be liable for any claim, damages or other\n *   liability, whether in an action of contract, tort or otherwise, arising from,\n *   out of or in connection with the Software or the use or other dealings in the\n *   Software.\n */\n\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function.\n */\n\nfunction fft(real, imag) {\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  if (n == 0) return;else if ((n & n - 1) == 0) // Is power of 2\n    transformRadix2(real, imag); // More complicated algorithm for arbitrary sizes\n  else transformBluestein(real, imag);\n}\n/*\n * Computes the inverse discrete Fourier transform (IDFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This is a wrapper function. This transform does not perform scaling, so the inverse is not a true inverse.\n */\n\nfunction inverseFFT(real, imag) {\n  fft(imag, real);\n}\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector's length must be a power of 2. Uses the Cooley-Tukey decimation-in-time radix-2 algorithm.\n */\n\nfunction transformRadix2(real, imag) {\n  // Initialization\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  if (n == 1) // Trivial transform\n    return;\n  var levels = -1;\n\n  for (var i = 0; i < 32; i++) {\n    if (1 << i == n) levels = i; // Equal to log2(n)\n  }\n\n  if (levels == -1) throw 'Length is not a power of 2';\n  var cosTable = new Array(n / 2);\n  var sinTable = new Array(n / 2);\n\n  for (var _i = 0; _i < n / 2; _i++) {\n    cosTable[_i] = Math.cos(2 * Math.PI * _i / n);\n    sinTable[_i] = Math.sin(2 * Math.PI * _i / n);\n  } // Bit-reversed addressing permutation\n\n\n  for (var _i2 = 0; _i2 < n; _i2++) {\n    var j = reverseBits(_i2, levels);\n\n    if (j > _i2) {\n      var temp = real[_i2];\n      real[_i2] = real[j];\n      real[j] = temp;\n      temp = imag[_i2];\n      imag[_i2] = imag[j];\n      imag[j] = temp;\n    }\n  } // Cooley-Tukey decimation-in-time radix-2 FFT\n\n\n  for (var size = 2; size <= n; size *= 2) {\n    var halfsize = size / 2;\n    var tablestep = n / size;\n\n    for (var _i3 = 0; _i3 < n; _i3 += size) {\n      for (var _j = _i3, k = 0; _j < _i3 + halfsize; _j++, k += tablestep) {\n        var tpre = real[_j + halfsize] * cosTable[k] + imag[_j + halfsize] * sinTable[k];\n        var tpim = -real[_j + halfsize] * sinTable[k] + imag[_j + halfsize] * cosTable[k];\n        real[_j + halfsize] = real[_j] - tpre;\n        imag[_j + halfsize] = imag[_j] - tpim;\n        real[_j] += tpre;\n        imag[_j] += tpim;\n      }\n    }\n  }\n} // Returns the integer whose value is the reverse of the lowest 'bits' bits of the integer 'x'.\n\n\nfunction reverseBits(x, bits) {\n  var y = 0;\n\n  for (var i = 0; i < bits; i++) {\n    y = y << 1 | x & 1;\n    x >>>= 1;\n  }\n\n  return y;\n}\n/*\n * Computes the discrete Fourier transform (DFT) of the given complex vector, storing the result back into the vector.\n * The vector can have any length. This requires the convolution function, which in turn requires the radix-2 FFT function.\n * Uses Bluestein's chirp z-transform algorithm.\n */\n\n\nfunction transformBluestein(real, imag) {\n  // Find a power-of-2 convolution length m such that m >= n * 2 + 1\n  if (real.length != imag.length) throw 'Mismatched lengths';\n  var n = real.length;\n  var m = 1;\n\n  while (m < n * 2 + 1) {\n    m *= 2;\n  } // Trignometric tables\n\n\n  var cosTable = new Array(n);\n  var sinTable = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    var j = i * i % (n * 2); // This is more accurate than j = i * i\n\n    cosTable[i] = Math.cos(Math.PI * j / n);\n    sinTable[i] = Math.sin(Math.PI * j / n);\n  } // Temporary vectors and preprocessing\n\n\n  var areal = new Array(m);\n  var aimag = new Array(m);\n\n  for (var _i4 = 0; _i4 < n; _i4++) {\n    areal[_i4] = real[_i4] * cosTable[_i4] + imag[_i4] * sinTable[_i4];\n    aimag[_i4] = -real[_i4] * sinTable[_i4] + imag[_i4] * cosTable[_i4];\n  }\n\n  for (var _i5 = n; _i5 < m; _i5++) {\n    areal[_i5] = aimag[_i5] = 0;\n  }\n\n  var breal = new Array(m);\n  var bimag = new Array(m);\n  breal[0] = cosTable[0];\n  bimag[0] = sinTable[0];\n\n  for (var _i6 = 1; _i6 < n; _i6++) {\n    breal[_i6] = breal[m - _i6] = cosTable[_i6];\n    bimag[_i6] = bimag[m - _i6] = sinTable[_i6];\n  }\n\n  for (var _i7 = n; _i7 <= m - n; _i7++) {\n    breal[_i7] = bimag[_i7] = 0;\n  } // Convolution\n\n\n  var creal = new Array(m);\n  var cimag = new Array(m);\n  convolveComplex(areal, aimag, breal, bimag, creal, cimag); // Postprocessing\n\n  for (var _i8 = 0; _i8 < n; _i8++) {\n    real[_i8] = creal[_i8] * cosTable[_i8] + cimag[_i8] * sinTable[_i8];\n    imag[_i8] = -creal[_i8] * sinTable[_i8] + cimag[_i8] * cosTable[_i8];\n  }\n}\n/*\n * Computes the circular convolution of the given complex vectors. Each vector's length must be the same.\n */\n\n\nfunction convolveComplex(xreal, ximag, yreal, yimag, outreal, outimag) {\n  if (xreal.length != ximag.length || xreal.length != yreal.length || yreal.length != yimag.length || xreal.length != outreal.length || outreal.length != outimag.length) throw 'Mismatched lengths';\n  var n = xreal.length;\n  xreal = xreal.slice();\n  ximag = ximag.slice();\n  yreal = yreal.slice();\n  yimag = yimag.slice();\n  fft(xreal, ximag);\n  fft(yreal, yimag);\n\n  for (var i = 0; i < n; i++) {\n    var temp = xreal[i] * yreal[i] - ximag[i] * yimag[i];\n    ximag[i] = ximag[i] * yreal[i] + xreal[i] * yimag[i];\n    xreal[i] = temp;\n  }\n\n  inverseFFT(xreal, ximag);\n\n  for (var _i9 = 0; _i9 < n; _i9++) {\n    // Scaling (because this FFT implementation omits it)\n    outreal[_i9] = xreal[_i9] / n;\n    outimag[_i9] = ximag[_i9] / n;\n  }\n}\n\nvar calculateDiffs = values => {\n  var length = values.length - 1;\n  if (length < 1) return [];\n  var diffs = new Array(length);\n\n  for (var i = 0; i < length; i++) {\n    diffs[i] = values[i + 1] - values[i];\n  }\n\n  return diffs;\n};\n\nvar calculateRoughness = values => calculateSTD(calculateDiffs(values));\n\nvar calculateKurtosis = values => {\n  var length = values.length;\n  var mean = calculateMean(values);\n  var u4 = 0;\n  var variance = 0;\n  var diff;\n  var diffSqr;\n\n  for (var i = 0; i < length; i++) {\n    diff = values[i] - mean;\n    diffSqr = diff * diff;\n    u4 += diffSqr * diffSqr;\n    variance += diffSqr;\n  }\n\n  return length * u4 / (variance * variance);\n};\n\nvar findWindowSize = (head, tail, data, minRoughness, originalKurt, windowSize) => {\n  while (head <= tail) {\n    var w = Math.round((head + tail) / 2);\n    var smoothed = SMANumeric(data, w, 1);\n    var kurtosis = calculateKurtosis(smoothed);\n\n    if (kurtosis >= originalKurt) {\n      /* Search second half if feasible */\n      var roughness = calculateRoughness(smoothed);\n\n      if (roughness < minRoughness) {\n        windowSize = w;\n        minRoughness = roughness;\n      }\n\n      head = w + 1;\n    } else {\n      /* Search first half */\n      tail = w - 1;\n    }\n  }\n\n  return windowSize;\n};\n\nvar calculatePeaks = function calculatePeaks(correlations) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n  var length = correlations.length;\n  if (length <= 1) return [[], 0];\n  var maxCorrelation = 0;\n  var peaks = [];\n\n  if (correlations.length > 1) {\n    var positive = correlations[1] > correlations[0];\n    var max = 1;\n\n    for (var i = 2; i < correlations.length; i += 1) {\n      if (!positive && correlations[i] > correlations[i - 1]) {\n        max = i;\n        positive = !positive;\n      } else if (positive && correlations[i] > correlations[max]) {\n        max = i;\n      } else if (positive && correlations[i] < correlations[i - 1]) {\n        if (max > 1 && correlations[max] > threshold) {\n          peaks.push(max);\n\n          if (correlations[max] > maxCorrelation) {\n            maxCorrelation = correlations[max];\n          }\n        }\n\n        positive = !positive;\n      }\n    }\n  }\n  /* If there is no autocorrelation peak within the MAX_WINDOW boundary try windows from the largest to the smallest */\n\n\n  if (peaks.length <= 1) {\n    for (var _i = 2; _i < length; _i += 1) {\n      peaks.push(_i);\n    }\n  }\n\n  return [peaks, maxCorrelation];\n};\n\nvar calculateAutocorrelation = (values, maxLag) => {\n  var length = values.length;\n  var mean = calculateMean(values);\n  /* Padding to the closest power of 2 */\n\n  var len = Math.pow(2, Math.trunc(Math.log2(length)) + 1);\n  var fftreal = new Array(len).fill(0);\n  var fftimg = new Array(len).fill(0);\n\n  for (var i = 0; i < length; i += 1) {\n    fftreal[i] = values[i] - mean;\n  }\n  /* F_R(f) = FFT(X) */\n\n\n  fft(fftreal, fftimg);\n  /* S(f) = F_R(f)F_R*(f) */\n\n  for (var _i2 = 0; _i2 < fftreal.length; _i2 += 1) {\n    fftreal[_i2] = Math.pow(fftreal[_i2], 2) + Math.pow(fftimg[_i2], 2);\n    fftimg[_i2] = 0;\n  }\n  /*  R(t) = IFFT(S(f)) */\n\n\n  inverseFFT(fftreal, fftimg); // Calculate correlations\n\n  var correlations = [];\n\n  for (var _i3 = 1; _i3 < maxLag; _i3++) {\n    correlations[_i3] = fftreal[_i3] / fftreal[0];\n  }\n\n  var _calculatePeaks = calculatePeaks(correlations),\n      _calculatePeaks2 = _slicedToArray(_calculatePeaks, 2),\n      peaks = _calculatePeaks2[0],\n      maxCorrelation = _calculatePeaks2[1];\n\n  return {\n    correlations,\n    peaks,\n    maxCorrelation\n  };\n};\n\nvar createASAP = config => {\n  var valueExtractor = getPointValueExtractor(config.y);\n  var SMA = createSMA(config);\n  return function ASAP(values, resolution) {\n    if (values.length === 0) return values;\n\n    if (resolution <= 0) {\n      throw new Error(\"Supplied non-positive resolution parameter to ASAP: \".concat(resolution));\n    } // If the resolution is at least twice as big as the number of data points\n    // then the values get downsampled to desired resolution first by SMA\n\n\n    if (values.length >= 2 * resolution) {\n      var scale = Math.trunc(values.length / resolution);\n      return ASAP(SMA(values, scale, scale), resolution);\n    } // First turn data points into a sequence of values\n\n\n    var data = mapToArray(values, valueExtractor);\n\n    var _calculateAutocorrela = calculateAutocorrelation(data, Math.round(data.length / 10)),\n        correlations = _calculateAutocorrela.correlations,\n        peaks = _calculateAutocorrela.peaks,\n        maxCorrelation = _calculateAutocorrela.maxCorrelation;\n\n    var originalKurtosis = calculateKurtosis(data);\n    var minRoughness = calculateRoughness(data);\n    var windowSize = 1;\n    var lb = 1;\n    var largestFeasible = -1;\n    var tail = data.length / 10;\n\n    for (var i = peaks.length - 1; i >= 0; i -= 1) {\n      var w = peaks[i];\n\n      if (w < lb || w === 1) {\n        break;\n      } else if (Math.sqrt(1 - correlations[w]) * windowSize > Math.sqrt(1 - correlations[windowSize]) * w) {\n        continue;\n      }\n\n      var smoothed = SMANumeric(data, w, 1);\n      var kurtosis = calculateKurtosis(smoothed);\n      var roughness = calculateRoughness(smoothed);\n\n      if (kurtosis >= originalKurtosis) {\n        if (roughness < minRoughness) {\n          minRoughness = roughness;\n          windowSize = w;\n        }\n\n        lb = Math.round(Math.max(w * Math.sqrt((maxCorrelation - 1) / (correlations[w] - 1)), lb));\n\n        if (largestFeasible < 0) {\n          largestFeasible = i;\n        }\n      }\n    }\n\n    if (largestFeasible > 0) {\n      if (largestFeasible < peaks.length - 2) {\n        tail = peaks[largestFeasible + 1];\n      }\n\n      lb = Math.max(lb, peaks[largestFeasible] + 1);\n    }\n\n    windowSize = findWindowSize(lb, tail, data, minRoughness, originalKurtosis, windowSize);\n    return SMA(values, windowSize, 1);\n  };\n};\nvar ASAP = createASAP(createLegacyDataPointConfig());\n\nexports.ASAP = ASAP;\nexports.createASAP = createASAP;\n//# sourceMappingURL=ASAP.js.map\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["doEventsRequest","api","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","userModified","pathname","slug","shouldDoublePeriod","canIncludePreviousPeriod","queryObject","Object","fromEntries","entries","undefined","user_modified","includes","filter","value","getPeriod","batchRequest","requestPromise","fetchTagFacets","orgSlug","queryOption","pick","values","PERFORMANCE_URL_PARAM","fetchTotalCount","then","res","count","BarChartZoom","Component","chart","callIfFunction","this","props","onChartReady","_props","zooming","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","evt","model","getModel","startValue","endValue","_payload","batch","buckets","location","paramStart","paramEnd","minZoomWidth","onHistoryPush","target","browserHistory","onDataZoomCancelled","onDataZoom","render","children","xAxisIndex","handleChartReady","onFinished","handleChartFinished","DataZoomInside","toolBox","ToolBox","title","back","iconStyle","borderWidth","color","opacity","handleDataZoom","DEFAULT","realtime","showDetail","left","right","bottom","DataZoomSlider","Array","isArray","getDate","date","moment","format","ChartZoom","constructor","super","currentPeriod","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","newQuery","pageStart","getUtcDateString","pageEnd","pageStatsPeriod","qs","updateDateTime","getUtcToLocalDateObject","saveCurrentPeriod","length","setPeriod","onRestore","previousPeriod","pop","componentDidUpdate","disabled","utc","_utc","_start","_end","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","showTimeInTooltip","handleZoomRestore","zoomOnMouseWheel","zoomLock","throttle","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","p","height","theme","gray300","fontSizeExtraLarge","propNamesToIgnore","omitIgnoredProps","omitBy","_value","EventsRequest","PureComponent","reloading","loading","errored","timeseriesData","fetchedWithPrevious","async","confirmedQuery","onError","expired","name","hideError","errorMessage","setState","state","t","addErrorMessage","append","clear","resp","responseJSON","detail","unmounting","data","hasPreviousPeriod","dataMiddleIndex","Math","floor","current","slice","previous","componentDidMount","fetchData","prevProps","isEqual","componentWillUnmount","calculateTotalsPerTimestamp","getName","timestamp","map","i","countArray","reduce","acc","transformPreviousPeriodData","seriesName","_timestamp","_countArray","stack","transformAggregatedTimeseries","transformTimeseriesData","countsForTimestamp","transformComparisonTimeseriesData","comparisonCount","processData","response","seriesIndex","isMetricsData","totals","includeTransformedData","includeTimeAggregation","timeAggregationSeriesName","currentSeriesNames","previousSeriesNames","getData","comparisonData","allData","originalData","originalPreviousData","previousData","getPreviousSeriesName","timeAggregatedData","timeframe","showLoading","isMultiSeriesStats","defined","seriesAdditionalInfo","sortedTimeseriesData","keys","index","seriesData","processedData","stripEquationPrefix","order","sort","a","b","results","item","previousTimeseriesData","some","transformedTimeseriesData","transformedComparisonTimeseriesData","allTimeseriesData","originalTimeseriesData","timeseriesTotals","originalPreviousTimeseriesData","comparisonTimeseriesData","limit","LineChart","series","seriesOptions","dataArray","LineSeries","animation","animationThreshold","animationDuration","LoadingPanel","_height","defaultProps","OptionSelector","onChange","selected","featureType","multiple","rest","mappedOptions","useMemo","opt","label","String","maxLength","expandDirection","option","o","isOptionDisabled","triggerProps","size","borderless","prefix","Fragment","StyledFeatureBadge","placement","FeatureBadge","TransitionChart","prevReloading","prevLoading","nextReloading","nextLoading","className","visible","other","SortLink","align","canSort","generateSortLink","onClick","direction","StyledNonLink","arrow","StyledIconArrow","StyledLink","to","forwardProps","omit","IconArrow","ListLink","_classNames","activeClassName","isActive","classNames","queryData","carriedProps","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","backgroundSecondary","borderRadius","PerformanceDuration","normalizedSeconds","nanoseconds","isNanoseconds","milliseconds","isMilliseconds","seconds","abbreviation","fixedDigits","shouldRefetchData","nextProps","transactionName","transactionThreshold","transactionThresholdMetric","DiscoverQuery","endpoint","useEvents","afterFetch","_","fields","otherMeta","meta","route","withApi","DEFAULT_STATS_PERIOD","statsPeriod","periodNumber","periodLength","match","parseInt","Error","formattedStart","formattedEnd","diff","previousPeriodStart","subtract","FILTER_OPTIONS","Histogram","zoomKeys","removeHistogramQueryStrings","dataFilter","isZoomed","getActiveFilter","decodeScalar","childrenProps","handleResetView","activeFilter","handleFilterChange","filterOptions","cursor","forEach","getSuspectSpanPayload","perSuspect","spanOps","spanGroups","minExclusiveTime","maxExclusiveTime","payload","spanOp","spanGroup","min_exclusive_time","max_exclusive_time","additionalPayload","eventView","getEventsAPIPayload","SuspectSpansQuery","getRequestPayload","tableData","suspectSpans","getTransactionDetailsUrl","eventSlug","transaction","spanId","locationQuery","hash","spanTargetHash","span","examples","getHistogramRequestPayload","numBuckets","min","max","precision","op","group","SpanHistogramQuery","histogram","ExclusiveTimeHistogram","spanSlug","ZoomKeys","position","isLoading","error","computeBuckets","zoomRenderProps","Chart","zoomProps","isErrored","chartData","useTheme","chartOptions","grid","colors","pickBarColor","showSymbol","tooltip","trigger","valueFormatter","_seriesName","tooltipFormatter","axisLabel","chartLabel","formatter","axisLabelFormatter","xAxis","truncate","axisTick","alignWithLabel","formatHistogramData","getDynamicText","stacked","fixed","DisplayModes","ExclusiveTimeTimeSeries","useApi","normalizeDateTimeParams","datetimeSelection","handleLegendSelectChanged","legendChange","unselected","unselectedSeries","getInterval","org","charts","getColorPalette","legend","getSeriesSelection","formattedResults","result","getExclusiveTimeDisplayedValue","onLegendSelectChanged","display","TIMESERIES","hasFeature","totalCount","HISTOGRAM","trackAdvancedAnalyticsEvent","change_to_display","SpanDetailsControls","FilterActions","condensed","alignDropdown","placeholder","projectIds","onSearch","searchQuery","trim","space","breakpoints","small","SpanDetailsHeader","suspectSpan","description","frequency","avgOccurrences","p75ExclusiveTime","p95ExclusiveTime","p99ExclusiveTime","sumExclusiveTime","ContentHeader","HeaderInfo","StyledSectionHeading","SectionBody","SpanLabelContainer","emptyValue","SectionSubtext","PercentileHeaderBodyWrapper","formatPercentage","tct","times","toFixed","events","medium","overflowEllipsis","SectionHeading","subText","fontSizeMedium","EmptyValueContainer","SpanTable","pageLinks","example","spans","id","finishTimestamp","transactionDuration","startTimestamp","spanDuration","nonOverlappingExclusiveTime","occurrences","cumulativeDuration","duration","exclusiveTime","columnOrder","SPANS_TABLE_COLUMN_ORDER","columnSortBy","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","column","_index","fieldAlignment","COLUMN_TYPE","dataRow","SpanDurationBar","rendered","getFieldRenderer","fieldRenderer","worstSpan","worst","generateTransactionLink","width","COL_WIDTH_UNDEFINED","DurationBar","gray100","DurationBarSection","RowRectangle","widthPercentage","style","toPercent","percentage","containerDisplayMode","spanBarHatch","backgroundColor","durationDisplay","SpanDetailsContentWrapper","tab","Tab","TransactionName","avatarSize","hideName","avatarProps","hasTooltip","fullWidth","getTotalsView","noPagination","setTag","countGroup","n","getSpansEventView","suspectSpansResults","spanExamplesResults","SpanDetailsContent","transactionCountContainingSpan","withSorts","SpanSortOthers","kind","SpanDetails","params","getTransactionName","parseSpanSlug","useOrganization","projects","useProjects","projectId","redirectToPerformanceHomepage","generateSpansEventView","getDocumentTitle","projectSlug","renderDisabled","NoAccess","lockedMessageSubject","shouldForceProject","forceProject","specificProjectSlugs","disableMultipleProjectSelection","showProjectSettingsLink","relativeDateOptions","SPAN_RELATIVE_PERIODS","maxPickableDays","SPAN_RETENTION_DAYS","hideGlobalHeader","StyledPageContent","join","PageContent","spanDetailsRouteWithQuery","projectID","encodeURIComponent","generateSpanDetailsRoute","TransactionFilterOptions","normalizeSearchConditions","filterParams","normalizeSearchConditionsWithTransactionName","removeFilter","MutableSearch","transactionSummaryRouteWithQuery","trendFunction","trendColumn","showTransactions","additionalQuery","generateTransactionSummaryRoute","searchFilter","formatString","generateTraceLink","dateSelection","tableRow","_query","traceId","trace","getTraceDetailsUrl","generateEventSlug","SidebarSpacer","_arrayLikeToArray","arr","len","arr2","__isA","Date","calculateMean","m","mapToArray","input","callback","getPointValueExtractor","accessor","point","createXYDataPoint","time","x","y","createLegacyDataPointConfig","getTime","toPoint","iterableBasedOn","SMANumeric","windowSize","slide","arguments","output","sum","_i","createSMA","config","timeExtractor","valueExtractor","pointFactory","_i2","fft","real","imag","levels","cosTable","sinTable","cos","PI","sin","j","reverseBits","temp","halfsize","tablestep","_i3","_j","k","tpre","tpim","transformRadix2","areal","aimag","_i4","_i5","breal","bimag","_i6","_i7","creal","cimag","xreal","ximag","yreal","yimag","outreal","outimag","inverseFFT","_i9","convolveComplex","_i8","transformBluestein","bits","SMA","calculateRoughness","mean","std","sqrt","calculateSTD","diffs","calculateDiffs","calculateKurtosis","diffSqr","u4","variance","ASAP","resolution","concat","scale","trunc","_calculateAutocorrela","maxLag","pow","log2","fftreal","fill","fftimg","correlations","_calculatePeaks","threshold","maxCorrelation","peaks","positive","calculatePeaks","_calculatePeaks2","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","err","_iterableToArrayLimit","minLen","prototype","toString","call","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","_slicedToArray","calculateAutocorrelation","round","originalKurtosis","minRoughness","lb","largestFeasible","tail","w","smoothed","kurtosis","roughness","head","originalKurt","findWindowSize","exports","module","predicate","args","apply","baseIteratee","negate","pickBy","object"],"sourceRoot":""}