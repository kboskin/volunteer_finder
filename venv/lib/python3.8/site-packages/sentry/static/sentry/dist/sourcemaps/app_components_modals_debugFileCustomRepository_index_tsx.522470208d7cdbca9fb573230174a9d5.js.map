{"version":3,"file":"chunks/app_components_modals_debugFileCustomRepository_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/comingSoon.tsx","webpack:///./app/components/acl/feature.tsx","webpack:///./app/components/acl/featureDisabled.tsx","webpack:///./app/components/clipboard.tsx","webpack:///./app/components/hookOrDefault.tsx","webpack:///./app/data/debugFileSources.tsx","webpack:///./app/components/modals/debugFileCustomRepository/appStoreConnect/stepOne.tsx","webpack:///./app/components/modals/debugFileCustomRepository/appStoreConnect/stepTwo.tsx","webpack:///./app/components/modals/debugFileCustomRepository/appStoreConnect/utils.tsx","webpack:///./app/components/modals/debugFileCustomRepository/appStoreConnect/index.tsx","webpack:///./app/components/modals/debugFileCustomRepository/http.tsx","webpack:///./app/components/modals/debugFileCustomRepository/utils.tsx","webpack:///./app/components/modals/debugFileCustomRepository/index.tsx","webpack:///./app/types/debugFiles.tsx","webpack:///./app/utils/appStoreValidationErrorMessage.tsx","webpack:///./app/utils/selectText.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx","webpack:///./app/utils/withConfig.tsx","webpack:///./app/utils/withProject.tsx","webpack:///../node_modules/copy-text-to-clipboard/index.js"],"sourcesContent":["import Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\nconst ComingSoon = () => (\n  <Alert type=\"info\" showIcon>\n    {t('This feature is coming soon!')}\n  </Alert>\n);\n\nexport default ComingSoon;\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {Config, Organization, Project} from 'sentry/types';\nimport {FeatureDisabledHooks} from 'sentry/types/hooks';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProject from 'sentry/utils/withProject';\n\nimport ComingSoon from './comingSoon';\n\ntype Props = {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed FeatureRenderProps.\n   *\n   * The other interface is more simple, only show `children` if org/project has\n   * all the required feature.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n  config: Config;\n  /**\n   * List of required feature tags. Note we do not enforce uniqueness of tags anywhere.\n   * On the backend end, feature tags have a scope prefix string that is stripped out on the\n   * frontend (since feature tags are attached to a context object).\n   *\n   * Use `organizations:` or `projects:` prefix strings to specify a feature with context.\n   */\n  features: string[];\n  /**\n   * The following properties will be set by the HoCs\n   */\n  organization: Organization;\n  /**\n   * Specify the key to use for hookstore functionality.\n   *\n   * The hookName should be prefixed with `feature-disabled`.\n   *\n   * When specified, the hookstore will be checked if the feature is\n   * disabled, and the first available hook will be used as the render\n   * function.\n   */\n  hookName?: keyof FeatureDisabledHooks;\n  project?: Project;\n  /**\n   * Custom renderer function for when the feature is not enabled.\n   *\n   *  - [default] Set this to false to disable rendering anything. If the\n   *    feature is not enabled no children will be rendered.\n   *\n   *  - Set this to `true` to use the default `ComingSoon` alert component.\n   *\n   *  - Provide a custom render function to customize the rendered component.\n   *\n   * When a custom render function is used, the same object that would be\n   * passed to `children` if a func is provided there, will be used here,\n   * additionally `children` will also be passed.\n   */\n  renderDisabled?: boolean | RenderDisabledFn;\n  /**\n   * Should the component require all features or just one or more.\n   */\n  requireAll?: boolean;\n};\n\n/**\n * Common props passed to children and disabled render handlers.\n */\ntype FeatureRenderProps = {\n  features: string[];\n  hasFeature: boolean;\n  organization: Organization;\n  project?: Project;\n};\n\n/**\n * When a feature is disabled the caller of Feature may provide a `renderDisabled`\n * prop. This prop can be overridden by getsentry via hooks. Often getsentry will\n * call the original children function  but override the `renderDisabled`\n * with another function/component.\n */\ntype RenderDisabledProps = FeatureRenderProps & {\n  children: React.ReactNode | ChildrenRenderFn;\n  renderDisabled?: (props: FeatureRenderProps) => React.ReactNode;\n};\n\nexport type RenderDisabledFn = (props: RenderDisabledProps) => React.ReactNode;\n\ntype ChildRenderProps = FeatureRenderProps & {\n  renderDisabled?: undefined | boolean | RenderDisabledFn;\n};\n\nexport type ChildrenRenderFn = (props: ChildRenderProps) => React.ReactNode;\n\ntype AllFeatures = {\n  configFeatures: string[];\n  organization: string[];\n  project: string[];\n};\n\n/**\n * Component to handle feature flags.\n */\nclass Feature extends Component<Props> {\n  static defaultProps = {\n    renderDisabled: false,\n    requireAll: true,\n  };\n\n  getAllFeatures(): AllFeatures {\n    const {organization, project, config} = this.props;\n\n    return {\n      configFeatures: config.features ? Array.from(config.features) : [],\n      organization: (organization && organization.features) || [],\n      project: (project && project.features) || [],\n    };\n  }\n\n  hasFeature(feature: string, features: AllFeatures) {\n    const shouldMatchOnlyProject = feature.match(/^projects:(.+)/);\n    const shouldMatchOnlyOrg = feature.match(/^organizations:(.+)/);\n\n    // Array of feature strings\n    const {configFeatures, organization, project} = features;\n\n    // Check config store first as this overrides features scoped to org or\n    // project contexts.\n    if (configFeatures.includes(feature)) {\n      return true;\n    }\n\n    if (shouldMatchOnlyProject) {\n      return project.includes(shouldMatchOnlyProject[1]);\n    }\n\n    if (shouldMatchOnlyOrg) {\n      return organization.includes(shouldMatchOnlyOrg[1]);\n    }\n\n    // default, check all feature arrays\n    return organization.includes(feature) || project.includes(feature);\n  }\n\n  render() {\n    const {\n      children,\n      features,\n      renderDisabled,\n      hookName,\n      organization,\n      project,\n      requireAll,\n    } = this.props;\n\n    const allFeatures = this.getAllFeatures();\n    const method = requireAll ? 'every' : 'some';\n    const hasFeature =\n      !features || features[method](feat => this.hasFeature(feat, allFeatures));\n\n    // Default renderDisabled to the ComingSoon component\n    let customDisabledRender =\n      renderDisabled === false\n        ? false\n        : typeof renderDisabled === 'function'\n        ? renderDisabled\n        : () => <ComingSoon />;\n\n    // Override the renderDisabled function with a hook store function if there\n    // is one registered for the feature.\n    if (hookName) {\n      const hooks = HookStore.get(hookName);\n\n      if (hooks.length > 0) {\n        customDisabledRender = hooks[0];\n      }\n    }\n    const renderProps = {\n      organization,\n      project,\n      features,\n      hasFeature,\n    };\n\n    if (!hasFeature && customDisabledRender !== false) {\n      return customDisabledRender({children, ...renderProps});\n    }\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({renderDisabled, ...renderProps});\n    }\n\n    return hasFeature && children ? children : null;\n  }\n}\n\nexport default withOrganization(withProject(withConfig(Feature)));\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button, {ButtonLabel} from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {CONFIG_DOCS_URL} from 'sentry/constants';\nimport {IconChevron, IconCopy} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {selectText} from 'sentry/utils/selectText';\n\nconst installText = (features: string[], featureName: string): string =>\n  `# ${t('Enables the %s feature', featureName)}\\n${features\n    .map(f => `SENTRY_FEATURES['${f}'] = True`)\n    .join('\\n')}`;\n\ntype Props = {\n  /**\n   * The English name of the feature. This is used in the comment that will\n   * be outputted above the example line of code to enable the feature.\n   */\n  featureName: string;\n  /**\n   * The feature flag keys that should be displayed in the code example for\n   * enabling the feature.\n   */\n  features: string[];\n  /**\n   * Render the disabled message within a warning Alert. A custom Alert\n   * component may be provided.\n   *\n   * Attaches additional styles to the FeatureDisabled component to make it\n   * look consistent within the Alert.\n   */\n  alert?: boolean | React.ElementType;\n  /**\n   * Do not show the help toggle. The description will always be rendered.\n   */\n  hideHelpToggle?: boolean;\n  /**\n   * A custom message to display. Defaults to a generic disabled message.\n   */\n  message?: string;\n};\n\n/**\n * DisabledInfo renders a component informing that a feature has been disabled.\n *\n * By default this component will render a help button which toggles more\n * information about why the feature is disabled, showing the missing feature\n * flag and linking to documentation for managing sentry server feature flags.\n */\nfunction FeatureDisabled({\n  features,\n  featureName,\n  alert,\n  hideHelpToggle,\n  message = t('This feature is not enabled on your Sentry installation.'),\n}: Props) {\n  const [showHelp, setShowHelp] = useState(false);\n\n  function renderHelp() {\n    return (\n      <Fragment>\n        <HelpText>\n          {tct(\n            `Enable this feature on your sentry installation by adding the\n              following configuration into your [configFile:sentry.conf.py].\n              See [configLink:the configuration documentation] for more\n              details.`,\n            {\n              configFile: <code />,\n              configLink: <ExternalLink href={CONFIG_DOCS_URL} />,\n            }\n          )}\n        </HelpText>\n        <Clipboard hideUnsupported value={installText(features, featureName)}>\n          <CopyButton borderless size=\"xsmall\" icon={<IconCopy size=\"xs\" />}>\n            {t('Copy to Clipboard')}\n          </CopyButton>\n        </Clipboard>\n        <Pre onClick={e => selectText(e.target as HTMLElement)}>\n          <code>{installText(features, featureName)}</code>\n        </Pre>\n      </Fragment>\n    );\n  }\n\n  if (!alert) {\n    const showDescription = hideHelpToggle || showHelp;\n    return (\n      <Fragment>\n        <FeatureDisabledMessage>\n          {message}\n          {!hideHelpToggle && (\n            <ToggleButton\n              priority=\"link\"\n              size=\"xsmall\"\n              onClick={() => setShowHelp(!showHelp)}\n            >\n              {t('Help')}\n              <IconChevron direction={showDescription ? 'up' : 'down'} />\n            </ToggleButton>\n          )}\n        </FeatureDisabledMessage>\n        {showDescription && <HelpDescription>{renderHelp()}</HelpDescription>}\n      </Fragment>\n    );\n  }\n\n  const AlertComponent = typeof alert === 'boolean' ? Alert : alert;\n  return (\n    <AlertComponent type=\"warning\" showIcon expand={renderHelp()}>\n      {message}\n    </AlertComponent>\n  );\n}\n\nconst FeatureDisabledMessage = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  line-height: ${p => p.theme.text.lineHeightBody};\n`;\n\nconst HelpDescription = styled('div')`\n  margin-top: ${space(1)};\n\n  pre,\n  code {\n    margin-bottom: 0;\n    white-space: pre;\n  }\n\n  button {\n    margin-bottom: ${space(0.5)};\n  }\n`;\n\nconst HelpText = styled('p')`\n  margin-bottom: ${space(1)};\n`;\n\nconst ToggleButton = styled(Button)`\n  color: ${p => p.theme.active};\n  height: ${p => p.theme.text.lineHeightBody}em;\n  min-height: ${p => p.theme.text.lineHeightBody}em;\n\n  &:hover {\n    color: ${p => p.theme.activeHover};\n  }\n\n  ${ButtonLabel} {\n    display: grid;\n    grid-auto-flow: column;\n    gap: ${space(1)};\n  }\n`;\n\nconst CopyButton = styled(Button)`\n  margin-left: auto;\n`;\n\nconst Pre = styled('pre')`\n  margin-bottom: 0;\n`;\n\nexport default FeatureDisabled;\n","import {cloneElement, isValidElement, useCallback, useEffect, useState} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport copy from 'copy-text-to-clipboard';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  children: React.ReactNode;\n  /**\n   * Text to be copied on click\n   */\n  value: string;\n  /**\n   * Toast message to show on copy failures\n   */\n  errorMessage?: string;\n  /**\n   * Do not show a toast message on success\n   */\n  hideMessages?: boolean;\n  /**\n   * Hide children if browser does not support copying\n   */\n  hideUnsupported?: boolean;\n  /**\n   * Triggered if we fail to copy\n   */\n  onError?: () => void;\n  /**\n   * Trigger if we successfully copy\n   */\n  onSuccess?: () => void;\n  /**\n   * Message to show when we successfully copy\n   */\n  successMessage?: string;\n};\n\n/**\n * copy-text-to-clipboard relies on `document.execCommand('copy')`\n */\nfunction isSupported() {\n  return !!document.queryCommandSupported?.('copy');\n}\n\nfunction Clipboard({\n  hideMessages = false,\n  successMessage = t('Copied to clipboard'),\n  errorMessage = t('Error copying to clipboard'),\n  value,\n  onSuccess,\n  onError,\n  hideUnsupported,\n  children,\n}: Props) {\n  const [element, setElement] = useState<ReturnType<typeof findDOMNode>>();\n\n  const handleClick = useCallback(() => {\n    const copyWasSuccessful = copy(value);\n\n    if (!copyWasSuccessful) {\n      if (!hideMessages) {\n        addErrorMessage(errorMessage);\n      }\n      onError?.();\n      return;\n    }\n\n    if (!hideMessages) {\n      addSuccessMessage(successMessage);\n    }\n\n    onSuccess?.();\n  }, [value, onError, onSuccess, errorMessage, successMessage, hideMessages]);\n\n  useEffect(() => {\n    element?.addEventListener('click', handleClick);\n    return () => element?.removeEventListener('click', handleClick);\n  }, [handleClick, element]);\n\n  // XXX: Instead of assigning the `onClick` to the cloned child element, we\n  // attach a event listener, otherwise we would wipeout whatever click handler\n  // may be assigne don the child.\n  const handleMount = useCallback((ref: HTMLElement) => {\n    // eslint-disable-next-line react/no-find-dom-node\n    setElement(findDOMNode(ref));\n  }, []);\n\n  // Browser doesn't support `execCommand`\n  if (hideUnsupported && !isSupported()) {\n    return null;\n  }\n\n  if (!isValidElement(children)) {\n    return null;\n  }\n\n  return cloneElement(children, {ref: handleMount});\n}\n\nexport default Clipboard;\n","import {Component, lazy, Suspense} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Params<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  hookName: H;\n  /**\n   * Component that will be shown if no hook is available\n   */\n  defaultComponent?: ReturnType<Hooks[H]>;\n  /**\n   * This is a function that returns a promise (more specifically a function\n   * that returns the result of a dynamic import using `import()`. This will\n   * use React.Suspense and React.lazy to render the component.\n   */\n  defaultComponentPromise?: () => Promise<ReturnType<Hooks[H]>>;\n};\n\n/**\n * Use this instead of the usual ternery operator when using getsentry hooks.\n * So in lieu of:\n *\n *  HookStore.get('component:org-auth-view').length\n *   ? HookStore.get('component:org-auth-view')[0]()\n *   : OrganizationAuth\n *\n * do this instead:\n *\n *   const HookedOrganizationAuth = HookOrDefault({\n *     hookName:'component:org-auth-view',\n *     defaultComponent: OrganizationAuth,\n *   })\n *\n * Note, you will need to add the hookstore function in getsentry [0] first and\n * then register the types [2] and validHookName [1] in sentry.\n *\n * [0] /getsentry/static/getsentry/gsApp/registerHooks.jsx\n * [1] /sentry/app/stores/hookStore.tsx\n * [2] /sentry/app/types/hooks.ts\n */\nfunction HookOrDefault<H extends HookName>({\n  hookName,\n  defaultComponent,\n  defaultComponentPromise,\n}: Params<H>) {\n  type Props = React.ComponentProps<ReturnType<Hooks[H]>>;\n  type State = {hooks: Hooks[H][]};\n\n  class HookOrDefaultComponent extends Component<Props, State> {\n    static displayName = `HookOrDefaultComponent(${hookName})`;\n\n    state: State = {\n      hooks: HookStore.get(hookName),\n    };\n\n    componentWillUnmount() {\n      this.unlistener?.();\n    }\n\n    unlistener = HookStore.listen(\n      (name: string, hooks: Hooks[HookName][]) =>\n        name === hookName && this.setState({hooks}),\n      undefined\n    );\n\n    get defaultComponent() {\n      // If `defaultComponentPromise` is passed, then return a Suspended component\n      if (defaultComponentPromise) {\n        const DefaultComponent = lazy(defaultComponentPromise);\n\n        return (props: Props) => (\n          <Suspense fallback={null}>\n            <DefaultComponent {...props} />\n          </Suspense>\n        );\n      }\n\n      return defaultComponent;\n    }\n\n    render() {\n      const hookExists = this.state.hooks && this.state.hooks.length;\n      const componentFromHook = this.state.hooks[0]?.();\n      const HookComponent =\n        hookExists && componentFromHook ? componentFromHook : this.defaultComponent;\n\n      return HookComponent ? <HookComponent {...this.props} /> : null;\n    }\n  }\n\n  return HookOrDefaultComponent;\n}\n\nexport default HookOrDefault;\n","export const DEBUG_SOURCE_LAYOUTS = {\n  native: 'Platform-Specific (SymStore / GDB / LLVM)',\n  symstore: 'Microsoft SymStore',\n  symstore_index2: 'Microsoft SymStore (with index2.txt)',\n  ssqp: 'Microsoft SSQP',\n  unified: 'Unified Symbol Server Layout',\n  debuginfod: 'debuginfod',\n} as const;\n\nexport const DEBUG_SOURCE_CASINGS = {\n  default: 'Default (mixed case)',\n  uppercase: 'Uppercase',\n  lowercase: 'Lowercase',\n} as const;\n\nexport const AWS_REGIONS = [\n  ['us-east-2', 'US East (Ohio)'],\n  ['us-east-1', 'US East (N. Virginia)'],\n  ['us-west-1', 'US West (N. California)'],\n  ['us-west-2', 'US West (Oregon)'],\n  ['ap-east-1', 'Asia Pacific (Hong Kong)'],\n  ['ap-south-1', 'Asia Pacific (Mumbai)'],\n  // ['ap-northeast-3', 'Asia Pacific (Osaka-Local)'],\n  ['ap-northeast-2', 'Asia Pacific (Seoul)'],\n  ['ap-southeast-1', 'Asia Pacific (Singapore)'],\n  ['ap-southeast-2', 'Asia Pacific (Sydney)'],\n  ['ap-northeast-1', 'Asia Pacific (Tokyo)'],\n  ['ca-central-1', 'Canada (Central)'],\n  ['cn-north-1', 'China (Beijing)'],\n  ['cn-northwest-1', 'China (Ningxia)'],\n  ['eu-central-1', 'EU (Frankfurt)'],\n  ['eu-west-1', 'EU (Ireland)'],\n  ['eu-west-2', 'EU (London)'],\n  ['eu-west-3', 'EU (Paris)'],\n  ['eu-north-1', 'EU (Stockholm)'],\n  ['sa-east-1', 'South America (São Paulo)'],\n  ['us-gov-east-1', 'AWS GovCloud (US-East)'],\n  ['us-gov-west-1', 'AWS GovCloud (US)'],\n] as const;\n\nexport const DEBUG_SOURCE_TYPES = {\n  gcs: 'Google Cloud Storage',\n  http: 'SymbolServer (HTTP)',\n  s3: 'Amazon S3',\n  appStoreConnect: 'App Store Connect',\n} as const;\n\nexport function getDebugSourceName(type: keyof typeof DEBUG_SOURCE_TYPES) {\n  return DEBUG_SOURCE_TYPES[type] ?? 'Unknown';\n}\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Input from 'sentry/components/forms/controls/input';\nimport Textarea from 'sentry/components/forms/controls/textarea';\nimport Field from 'sentry/components/forms/field';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\nimport {StepOneData} from './types';\n\ntype Props = {\n  onSetStepOneData: (stepOneData: StepOneData) => void;\n  stepOneData: StepOneData;\n};\n\nfunction StepOne({stepOneData, onSetStepOneData}: Props) {\n  return (\n    <Fragment>\n      <Alert type=\"info\">\n        {tct(\n          'Please enter the [docLink:App Store Connect API Key] details. The key needs to have the \"Developer\" role for Sentry to discover the app builds.',\n          {\n            docLink: (\n              <ExternalLink href=\"https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api\" />\n            ),\n          }\n        )}\n      </Alert>\n      <Field\n        label={t('Issuer')}\n        inline={false}\n        error={stepOneData.errors?.issuer}\n        flexibleControlStateSize\n        stacked\n        required\n      >\n        <Input\n          type=\"text\"\n          name=\"issuer\"\n          placeholder={t('Issuer')}\n          value={stepOneData.issuer}\n          onChange={e =>\n            onSetStepOneData({\n              ...stepOneData,\n              issuer: e.target.value,\n              errors: !!stepOneData.errors\n                ? {...stepOneData.errors, issuer: undefined}\n                : undefined,\n            })\n          }\n        />\n      </Field>\n      <Field\n        label={t('Key ID')}\n        inline={false}\n        error={stepOneData.errors?.keyId}\n        flexibleControlStateSize\n        stacked\n        required\n      >\n        <Input\n          type=\"text\"\n          name=\"keyId\"\n          placeholder={t('Key Id')}\n          value={stepOneData.keyId}\n          onChange={e =>\n            onSetStepOneData({\n              ...stepOneData,\n              keyId: e.target.value,\n              errors: !!stepOneData.errors\n                ? {...stepOneData.errors, keyId: undefined}\n                : undefined,\n            })\n          }\n        />\n      </Field>\n      <Field\n        label={t('Private Key')}\n        inline={false}\n        flexibleControlStateSize\n        stacked\n        required\n      >\n        <Textarea\n          name=\"privateKey\"\n          value={stepOneData.privateKey}\n          rows={5}\n          autosize\n          placeholder={\n            stepOneData.privateKey === undefined\n              ? t('(Private Key unchanged)')\n              : '-----BEGIN PRIVATE KEY-----\\n[PRIVATE-KEY]\\n-----END PRIVATE KEY-----'\n          }\n          onChange={e =>\n            onSetStepOneData({\n              ...stepOneData,\n              privateKey: e.target.value,\n            })\n          }\n        />\n      </Field>\n    </Fragment>\n  );\n}\n\nexport default StepOne;\n","import styled from '@emotion/styled';\n\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t} from 'sentry/locale';\n\nimport {AppStoreApp, StepTwoData} from './types';\n\ntype Props = {\n  appStoreApps: AppStoreApp[];\n  onSetStepTwoData: (stepTwoData: StepTwoData) => void;\n  stepTwoData: StepTwoData;\n};\n\nfunction StepTwo({stepTwoData, onSetStepTwoData, appStoreApps}: Props) {\n  return (\n    <StyledSelectField\n      name=\"application\"\n      label={t('App Store Connect application')}\n      options={appStoreApps.map(appStoreApp => ({\n        value: appStoreApp.appId,\n        label: appStoreApp.name,\n      }))}\n      placeholder={t('Select application')}\n      onChange={appId => {\n        const selectedAppStoreApp = appStoreApps.find(\n          appStoreApp => appStoreApp.appId === appId\n        );\n        onSetStepTwoData({app: selectedAppStoreApp});\n      }}\n      value={stepTwoData.app?.appId ?? ''}\n      inline={false}\n      flexibleControlStateSize\n      stacked\n      required\n    />\n  );\n}\n\nexport default StepTwo;\n\nconst StyledSelectField = styled(SelectField)`\n  padding-right: 0;\n`;\n","import * as Sentry from '@sentry/react';\n\nimport {t} from 'sentry/locale';\nimport {\n  getAppStoreValidationErrorMessage,\n  unexpectedErrorMessage,\n} from 'sentry/utils/appStoreValidationErrorMessage';\n\nimport {StepOneData} from './types';\n\n// since translations are done on the front-end we need to map  back-end error messages to front-end messages\nconst fieldErrorMessageMapping = {\n  appconnectIssuer: {\n    issuer: {\n      'Ensure this field has at least 36 characters.': t(\n        'This field should be exactly 36 characters.'\n      ),\n      'Ensure this field has no more than 36 characters.': t(\n        'This field should be exactly 36 characters.'\n      ),\n    },\n  },\n  appconnectKey: {\n    keyId: {\n      'Ensure this field has at least 2 characters.': t(\n        'This field should be between 2 and 20 characters.'\n      ),\n      'Ensure this field has no more than 20 characters.': t(\n        'This field should be between 2 and 20 characters.'\n      ),\n    },\n  },\n};\n\ntype ResponseJSONDetailed = {\n  detail: Parameters<typeof getAppStoreValidationErrorMessage>[0] & {\n    extra: Record<string, any>;\n    message: string;\n  };\n};\n\ntype AppStoreConnectField = keyof typeof fieldErrorMessageMapping;\n\ntype ResponseJSON = Record<AppStoreConnectField, string[]>;\n\ntype Error = {\n  status: number;\n  responseJSON?: ResponseJSON | ResponseJSONDetailed;\n};\n\nexport function getAppStoreErrorMessage(\n  error: Error | string\n): string | Record<keyof StepOneData, string> {\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  const detailedErrorResponse = (error.responseJSON as undefined | ResponseJSONDetailed)\n    ?.detail;\n\n  if (detailedErrorResponse) {\n    return getAppStoreValidationErrorMessage(detailedErrorResponse) as string;\n  }\n\n  const errorResponse = error.responseJSON as undefined | ResponseJSON;\n\n  if (!errorResponse) {\n    return unexpectedErrorMessage;\n  }\n\n  return (Object.keys(errorResponse) as AppStoreConnectField[]).reduce(\n    (acc, serverSideField) => {\n      const fieldErrorMessage = fieldErrorMessageMapping[serverSideField] ?? {};\n      const field = Object.keys(fieldErrorMessage)[0];\n\n      const errorMessages: string[] = errorResponse[serverSideField].map(errorMessage => {\n        if (fieldErrorMessage[field][errorMessage]) {\n          return fieldErrorMessage[field][errorMessage];\n        }\n\n        // This will be difficult to happen,\n        // but if it happens we will be able to see which message is not being mapped on the fron-tend\n        Sentry.withScope(scope => {\n          scope.setExtra('serverSideField', serverSideField);\n          scope.setExtra('message', errorMessage);\n          Sentry.captureException(\n            new Error('App Store Connect - Untranslated error message')\n          );\n        });\n\n        return errorMessage;\n      });\n\n      // the UI only displays one error message at a time\n      return {...acc, [field]: errorMessages[0]};\n    },\n    {}\n  ) as Record<keyof StepOneData, string>;\n}\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {DEFAULT_TOAST_DURATION} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {\n  AppStoreConnectStatusData,\n  CustomRepoAppStoreConnect,\n} from 'sentry/types/debugFiles';\nimport {unexpectedErrorMessage} from 'sentry/utils/appStoreValidationErrorMessage';\nimport withApi from 'sentry/utils/withApi';\n\nimport StepOne from './stepOne';\nimport StepTwo from './stepTwo';\nimport {AppStoreApp, StepOneData, StepTwoData} from './types';\nimport {getAppStoreErrorMessage} from './utils';\n\ntype Props = Pick<ModalRenderProps, 'Header' | 'Body' | 'Footer'> & {\n  api: Client;\n  onSubmit: () => void;\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  appStoreConnectStatusData?: AppStoreConnectStatusData;\n  initialData?: CustomRepoAppStoreConnect;\n};\n\nconst steps = [t('App Store Connect credentials'), t('Choose an application')];\n\nfunction AppStoreConnect({\n  Header,\n  Body,\n  Footer,\n  api,\n  initialData,\n  orgSlug,\n  projectSlug,\n  onSubmit,\n  appStoreConnectStatusData,\n}: Props) {\n  const {credentials} = appStoreConnectStatusData ?? {};\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  const [appStoreApps, setAppStoreApps] = useState<AppStoreApp[]>([]);\n\n  const [stepOneData, setStepOneData] = useState<StepOneData>({\n    issuer: initialData?.appconnectIssuer,\n    keyId: initialData?.appconnectKey,\n    privateKey: typeof initialData?.appconnectPrivateKey === 'object' ? undefined : '',\n    errors: undefined,\n  });\n\n  const [stepTwoData, setStepTwoData] = useState<StepTwoData>({\n    app: undefined,\n  });\n\n  async function checkCredentials() {\n    setIsLoading(true);\n\n    try {\n      const response = await api.requestPromise(\n        `/projects/${orgSlug}/${projectSlug}/appstoreconnect/apps/`,\n        {\n          method: 'POST',\n          data: {\n            id: stepOneData.privateKey !== undefined ? undefined : initialData?.id,\n            appconnectIssuer: stepOneData.issuer,\n            appconnectKey: stepOneData.keyId,\n            appconnectPrivateKey: stepOneData.privateKey,\n          },\n        }\n      );\n\n      const storeApps: AppStoreApp[] = response.apps;\n\n      if (!!initialData && !storeApps.find(app => app.appId === initialData.appId)) {\n        addErrorMessage(t('Credentials not authorized for this application'));\n        setIsLoading(false);\n        return;\n      }\n\n      setAppStoreApps(storeApps);\n\n      if (\n        stepTwoData.app?.appId &&\n        !storeApps.find(app => app.appId === stepTwoData.app?.appId)\n      ) {\n        setStepTwoData({app: storeApps[0]});\n      }\n\n      if (!!initialData) {\n        updateCredentials();\n        return;\n      }\n\n      setIsLoading(false);\n      goNext();\n    } catch (error) {\n      setIsLoading(false);\n      const appStoreConnnectError = getAppStoreErrorMessage(error);\n      if (typeof appStoreConnnectError === 'string') {\n        // app-connect-authentication-error\n        // app-connect-forbidden-error\n        addErrorMessage(appStoreConnnectError);\n        return;\n      }\n      setStepOneData({...stepOneData, errors: appStoreConnnectError});\n    }\n  }\n\n  function closeModal() {\n    setTimeout(() => onSubmit(), DEFAULT_TOAST_DURATION);\n  }\n\n  async function updateCredentials() {\n    if (!initialData) {\n      return;\n    }\n\n    try {\n      await api.requestPromise(\n        `/projects/${orgSlug}/${projectSlug}/appstoreconnect/${initialData.id}/`,\n        {\n          method: 'POST',\n          data: {\n            appconnectIssuer: stepOneData.issuer,\n            appconnectKey: stepOneData.keyId,\n            appconnectPrivateKey: stepOneData.privateKey,\n            appName: initialData.appName,\n            appId: initialData.appId,\n            bundleId: initialData.bundleId,\n          },\n        }\n      );\n\n      addSuccessMessage(t('Successfully updated custom repository'));\n      closeModal();\n    } catch (error) {\n      setIsLoading(false);\n      const appStoreConnnectError = getAppStoreErrorMessage(error);\n\n      if (typeof appStoreConnnectError === 'string') {\n        if (appStoreConnnectError === unexpectedErrorMessage) {\n          addErrorMessage(t('An error occurred while updating the custom repository'));\n          return;\n        }\n        addErrorMessage(appStoreConnnectError);\n      }\n    }\n  }\n\n  async function persistData() {\n    if (!stepTwoData.app) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await api.requestPromise(`/projects/${orgSlug}/${projectSlug}/appstoreconnect/`, {\n        method: 'POST',\n        data: {\n          appconnectIssuer: stepOneData.issuer,\n          appconnectKey: stepOneData.keyId,\n          appconnectPrivateKey: stepOneData.privateKey,\n          appName: stepTwoData.app.name,\n          appId: stepTwoData.app.appId,\n          bundleId: stepTwoData.app.bundleId,\n        },\n      });\n\n      addSuccessMessage(t('Successfully added custom repository'));\n      closeModal();\n    } catch (error) {\n      setIsLoading(false);\n      const appStoreConnnectError = getAppStoreErrorMessage(error);\n\n      if (typeof appStoreConnnectError === 'string') {\n        if (appStoreConnnectError === unexpectedErrorMessage) {\n          addErrorMessage(t('An error occurred while adding the custom repository'));\n          return;\n        }\n        addErrorMessage(appStoreConnnectError);\n      }\n    }\n  }\n\n  function isFormInvalid() {\n    switch (activeStep) {\n      case 0:\n        return Object.keys(stepOneData).some(key => {\n          if (key === 'errors') {\n            const errors = stepOneData[key] ?? {};\n            return Object.keys(errors).some(error => !!errors[error]);\n          }\n\n          if (key === 'privateKey' && stepOneData[key] === undefined) {\n            return false;\n          }\n\n          return !stepOneData[key];\n        });\n      case 1:\n        return Object.keys(stepTwoData).some(key => !stepTwoData[key]);\n      default:\n        return false;\n    }\n  }\n\n  function goNext() {\n    setActiveStep(activeStep + 1);\n  }\n\n  function handleGoBack() {\n    const newActiveStep = activeStep - 1;\n    setActiveStep(newActiveStep);\n  }\n\n  function handleGoNext() {\n    switch (activeStep) {\n      case 0:\n        checkCredentials();\n        break;\n      case 1:\n        persistData();\n        break;\n      default:\n        break;\n    }\n  }\n\n  function renderCurrentStep() {\n    switch (activeStep) {\n      case 0:\n        return <StepOne stepOneData={stepOneData} onSetStepOneData={setStepOneData} />;\n      case 1:\n        return (\n          <StepTwo\n            appStoreApps={appStoreApps}\n            stepTwoData={stepTwoData}\n            onSetStepTwoData={setStepTwoData}\n          />\n        );\n      default:\n        return (\n          <Alert type=\"error\" showIcon>\n            {t('This step could not be found.')}\n          </Alert>\n        );\n    }\n  }\n\n  function getAlerts() {\n    const alerts: React.ReactElement[] = [];\n\n    if (activeStep !== 0) {\n      return alerts;\n    }\n\n    if (credentials?.status === 'invalid') {\n      alerts.push(\n        <StyledAlert type=\"warning\" showIcon>\n          {credentials.code === 'app-connect-forbidden-error'\n            ? t(\n                'Your App Store Connect credentials have insufficient permissions. To reconnect, update your credentials.'\n              )\n            : t(\n                'Your App Store Connect credentials are invalid. To reconnect, update your credentials.'\n              )}\n        </StyledAlert>\n      );\n    }\n\n    return alerts;\n  }\n\n  function renderBodyContent() {\n    const alerts = getAlerts();\n\n    return (\n      <Fragment>\n        {!!alerts.length && (\n          <Alerts>\n            {alerts.map((alert, index) => (\n              <Fragment key={index}>{alert}</Fragment>\n            ))}\n          </Alerts>\n        )}\n        {renderCurrentStep()}\n      </Fragment>\n    );\n  }\n\n  if (initialData && !appStoreConnectStatusData) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <HeaderContent>\n          <NumericSymbol>{activeStep + 1}</NumericSymbol>\n          <HeaderContentTitle>{steps[activeStep]}</HeaderContentTitle>\n          <StepsOverview>\n            {tct('[currentStep] of [totalSteps]', {\n              currentStep: activeStep + 1,\n              totalSteps: !!initialData ? 1 : steps.length,\n            })}\n          </StepsOverview>\n        </HeaderContent>\n      </Header>\n      <Body>{renderBodyContent()}</Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          {activeStep !== 0 && <Button onClick={handleGoBack}>{t('Back')}</Button>}\n          <StyledButton\n            priority=\"primary\"\n            onClick={handleGoNext}\n            disabled={isLoading || isFormInvalid()}\n          >\n            {isLoading && (\n              <LoadingIndicatorWrapper>\n                <LoadingIndicator mini />\n              </LoadingIndicatorWrapper>\n            )}\n            {!!initialData\n              ? t('Update')\n              : activeStep + 1 === steps.length\n              ? t('Save')\n              : steps[activeStep + 1]}\n          </StyledButton>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport default withApi(AppStoreConnect);\n\nconst HeaderContent = styled('div')`\n  display: grid;\n  grid-template-columns: max-content max-content 1fr;\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst NumericSymbol = styled('div')`\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizeMedium};\n  background-color: ${p => p.theme.yellow300};\n`;\n\nconst HeaderContentTitle = styled('div')`\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nconst StepsOverview = styled('div')`\n  color: ${p => p.theme.gray300};\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst LoadingIndicatorWrapper = styled('div')`\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)`\n  position: relative;\n`;\n\nconst Alerts = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  margin-bottom: ${space(3)};\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin: 0;\n`;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport ActionButton from 'sentry/components/actions/button';\nimport Button from 'sentry/components/button';\nimport Input from 'sentry/components/forms/controls/input';\nimport Field from 'sentry/components/forms/field';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {\n  DEBUG_SOURCE_CASINGS,\n  DEBUG_SOURCE_LAYOUTS,\n  DEBUG_SOURCE_TYPES,\n} from 'sentry/data/debugFileSources';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t, tct} from 'sentry/locale';\nimport {INPUT_PADDING} from 'sentry/styles/input';\nimport space from 'sentry/styles/space';\nimport {uniqueId} from 'sentry/utils/guid';\n\nconst CLEAR_PASSWORD_BUTTON_SIZE = 22;\nconst PASSWORD_INPUT_PADDING_RIGHT = INPUT_PADDING + CLEAR_PASSWORD_BUTTON_SIZE;\n\ntype InitialData = {\n  id: string;\n  layout: {\n    casing: keyof typeof DEBUG_SOURCE_CASINGS;\n    type: keyof typeof DEBUG_SOURCE_LAYOUTS;\n  };\n  name: string;\n  url: string;\n  password?: {\n    'hidden-secret': boolean;\n  };\n  username?: string;\n};\n\ntype Data = Partial<Pick<InitialData, 'name' | 'url'>> &\n  Omit<InitialData, 'name' | 'url' | 'password' | 'layout'> & {\n    'layout.casing': keyof typeof DEBUG_SOURCE_CASINGS;\n    'layout.type': keyof typeof DEBUG_SOURCE_LAYOUTS;\n    password?: string;\n  };\n\ntype SubmitData = Omit<Data, 'password' | 'name' | 'url'> &\n  Pick<InitialData, 'name' | 'url'> & {\n    password?:\n      | {\n          'hidden-secret': boolean;\n        }\n      | string;\n  };\n\ntype Props = Pick<ModalRenderProps, 'Header' | 'Body' | 'Footer'> & {\n  onSubmit: (data: SubmitData) => void;\n  initialData?: InitialData;\n};\n\nfunction Http({Header, Body, Footer, onSubmit, ...props}: Props) {\n  const initialData: Data = {\n    id: props.initialData?.id ?? uniqueId(),\n    name: props.initialData?.name,\n    url: props.initialData?.url,\n    username: props.initialData?.username,\n    password: typeof props.initialData?.password === 'object' ? undefined : '',\n    'layout.type': props.initialData?.layout.type ?? 'native',\n    'layout.casing': props.initialData?.layout.casing ?? 'default',\n  };\n\n  const [data, setData] = useState<Data>(initialData);\n\n  function isFormInvalid() {\n    return !data.name || !data.url;\n  }\n\n  function formUnchanged() {\n    return data === initialData;\n  }\n\n  function handleSubmit() {\n    const validData = data as SubmitData;\n    onSubmit({\n      id: validData.id,\n      name: validData.name,\n      url: validData.url,\n      'layout.type': validData['layout.type'],\n      'layout.casing': validData['layout.casing'],\n      username: validData.username,\n      password:\n        validData.password === undefined\n          ? {'hidden-secret': true}\n          : !validData.password\n          ? undefined\n          : validData.password,\n    });\n  }\n\n  function handleClearPassword() {\n    setData({...data, password: ''});\n  }\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        {initialData\n          ? tct('Update [name] Repository', {name: DEBUG_SOURCE_TYPES.http})\n          : tct('Add [name] Repository', {name: DEBUG_SOURCE_TYPES.http})}\n      </Header>\n      <Body>\n        <Field\n          label={t('Name')}\n          inline={false}\n          help={t('A display name for this repository')}\n          flexibleControlStateSize\n          stacked\n          required\n        >\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('New Repository')}\n            value={data.name}\n            onChange={e =>\n              setData({\n                ...data,\n                name: e.target.value,\n              })\n            }\n          />\n        </Field>\n        <hr />\n        <Field\n          label={t('Download Url')}\n          inline={false}\n          help={t('Full URL to the symbol server')}\n          flexibleControlStateSize\n          stacked\n          required\n        >\n          <Input\n            type=\"text\"\n            name=\"url\"\n            placeholder=\"https://msdl.microsoft.com/download/symbols/\"\n            value={data.url}\n            onChange={e =>\n              setData({\n                ...data,\n                url: e.target.value,\n              })\n            }\n          />\n        </Field>\n        <Field\n          label={t('User')}\n          inline={false}\n          help={t('User for HTTP basic auth')}\n          flexibleControlStateSize\n          stacked\n        >\n          <Input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"admin\"\n            value={data.username}\n            onChange={e =>\n              setData({\n                ...data,\n                username: e.target.value,\n              })\n            }\n          />\n        </Field>\n        <Field\n          label={t('Password')}\n          inline={false}\n          help={t('Password for HTTP basic auth')}\n          flexibleControlStateSize\n          stacked\n        >\n          <PasswordInput\n            type={data.password === undefined ? 'text' : 'password'}\n            name=\"url\"\n            placeholder={\n              data.password === undefined ? t('(Password unchanged)') : 'open-sesame'\n            }\n            value={data.password}\n            onChange={e =>\n              setData({\n                ...data,\n                password: e.target.value,\n              })\n            }\n          />\n          {(data.password === undefined ||\n            (typeof data.password === 'string' && !!data.password)) && (\n            <ClearPasswordButton\n              onClick={handleClearPassword}\n              icon={<IconClose size=\"14px\" />}\n              size=\"xsmall\"\n              title={t('Clear password')}\n              aria-label={t('Clear password')}\n              borderless\n            />\n          )}\n        </Field>\n        <hr />\n        <StyledSelectField\n          name=\"layout.type\"\n          label={t('Directory Layout')}\n          help={t('The layout of the folder structure.')}\n          options={Object.keys(DEBUG_SOURCE_LAYOUTS).map(key => ({\n            value: key,\n            label: DEBUG_SOURCE_LAYOUTS[key],\n          }))}\n          value={data['layout.type']}\n          onChange={value =>\n            setData({\n              ...data,\n              ['layout.type']: value,\n            })\n          }\n          inline={false}\n          flexibleControlStateSize\n          stacked\n        />\n        <StyledSelectField\n          name=\"layout.casing\"\n          label={t('Path Casing')}\n          help={t('The case of files and folders.')}\n          options={Object.keys(DEBUG_SOURCE_CASINGS).map(key => ({\n            value: key,\n            label: DEBUG_SOURCE_CASINGS[key],\n          }))}\n          value={data['layout.casing']}\n          onChange={value =>\n            setData({\n              ...data,\n              ['layout.casing']: value,\n            })\n          }\n          inline={false}\n          flexibleControlStateSize\n          stacked\n        />\n      </Body>\n      <Footer>\n        <Button\n          onClick={handleSubmit}\n          priority=\"primary\"\n          disabled={isFormInvalid() || formUnchanged()}\n        >\n          {t('Save changes')}\n        </Button>\n      </Footer>\n    </Fragment>\n  );\n}\n\nexport default Http;\n\nconst StyledSelectField = styled(SelectField)`\n  padding-right: 0;\n`;\n\nconst PasswordInput = styled(Input)`\n  padding-right: ${PASSWORD_INPUT_PADDING_RIGHT}px;\n`;\n\nconst ClearPasswordButton = styled(ActionButton)`\n  background: transparent;\n  height: ${CLEAR_PASSWORD_BUTTON_SIZE}px;\n  width: ${CLEAR_PASSWORD_BUTTON_SIZE}px;\n  padding: 0;\n  position: absolute;\n  top: 50%;\n  right: ${space(0.75)};\n  transform: translateY(-50%);\n  svg {\n    color: ${p => p.theme.gray400};\n    :hover {\n      color: hsl(0, 0%, 60%);\n    }\n  }\n`;\n","import * as Sentry from '@sentry/react';\n\nimport {Field} from 'sentry/components/forms/type';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {\n  AWS_REGIONS,\n  DEBUG_SOURCE_CASINGS,\n  DEBUG_SOURCE_LAYOUTS,\n} from 'sentry/data/debugFileSources';\nimport {t, tct} from 'sentry/locale';\nimport {CustomRepoType} from 'sentry/types/debugFiles';\nimport {uniqueId} from 'sentry/utils/guid';\n\nfunction objectToChoices(obj: Record<string, string>): [key: string, value: string][] {\n  return Object.entries(obj).map(([key, value]) => [key, t(value)]);\n}\n\ntype FieldMap = Record<string, Field>;\n\nconst commonFields: FieldMap = {\n  id: {\n    name: 'id',\n    type: 'hidden',\n    required: true,\n    defaultValue: uniqueId,\n  },\n  name: {\n    name: 'name',\n    type: 'string',\n    required: true,\n    label: t('Name'),\n    placeholder: t('New Repository'),\n    help: t('A display name for this repository'),\n  },\n  // filters are explicitly not exposed to the UI\n  layoutType: {\n    name: 'layout.type',\n    type: 'select',\n    label: t('Directory Layout'),\n    help: t('The layout of the folder structure.'),\n    defaultValue: 'native',\n    choices: objectToChoices(DEBUG_SOURCE_LAYOUTS),\n  },\n  layoutCasing: {\n    name: 'layout.casing',\n    type: 'select',\n    label: t('Path Casing'),\n    help: t('The case of files and folders.'),\n    defaultValue: 'default',\n    choices: objectToChoices(DEBUG_SOURCE_CASINGS),\n  },\n  prefix: {\n    name: 'prefix',\n    type: 'string',\n    label: 'Root Path',\n    placeholder: '/',\n    help: t('The path at which files are located within this repository.'),\n  },\n  separator: {\n    name: '',\n    type: 'separator',\n  },\n};\n\nexport function getFormFieldsAndInitialData(\n  type: CustomRepoType,\n  sourceConfig?: Record<string, any>\n) {\n  if (type === CustomRepoType.HTTP || type === CustomRepoType.APP_STORE_CONNECT) {\n    return {};\n  }\n\n  const {secret_key, layout, private_key, ...config} = sourceConfig ?? {};\n  const initialData = layout\n    ? {...config, 'layout.casing': layout.casing, 'layout.type': layout.type}\n    : config;\n\n  switch (type) {\n    case 's3':\n      return {\n        fields: [\n          commonFields.id,\n          commonFields.name,\n          commonFields.separator,\n          {\n            name: 'bucket',\n            type: 'string',\n            required: true,\n            label: t('Bucket'),\n            placeholder: 's3-bucket-name',\n            help: t(\n              'Name of the S3 bucket. Read permissions are required to download symbols.'\n            ),\n          },\n          {\n            name: 'region',\n            type: 'select',\n            required: true,\n            label: t('Region'),\n            help: t('The AWS region and availability zone of the bucket.'),\n            choices: AWS_REGIONS.map(([k, v]) => [\n              k,\n              <span key={k}>\n                <code>{k}</code> {v}\n              </span>,\n            ]),\n          },\n          {\n            name: 'access_key',\n            type: 'string',\n            required: true,\n            label: t('Access Key ID'),\n            placeholder: 'AKIAIOSFODNN7EXAMPLE',\n            help: tct(\n              'Access key to the AWS account. Credentials can be managed in the [link].',\n              {\n                link: (\n                  <ExternalLink href=\"https://console.aws.amazon.com/iam/\">\n                    IAM console\n                  </ExternalLink>\n                ),\n              }\n            ),\n          },\n          {\n            name: 'secret_key',\n            type: 'string',\n            required: true,\n            label: t('Secret Access Key'),\n            placeholder:\n              typeof secret_key === 'object'\n                ? t('(Secret Access Key unchanged)')\n                : 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',\n          },\n          commonFields.separator,\n          commonFields.prefix,\n          commonFields.layoutType,\n          commonFields.layoutCasing,\n        ],\n        initialData: !initialData\n          ? undefined\n          : {\n              ...initialData,\n              secret_key: undefined,\n            },\n      };\n    case 'gcs':\n      return {\n        fields: [\n          commonFields.id,\n          commonFields.name,\n          commonFields.separator,\n          {\n            name: 'bucket',\n            type: 'string',\n            required: true,\n            label: t('Bucket'),\n            placeholder: 'gcs-bucket-name',\n            help: t(\n              'Name of the GCS bucket. Read permissions are required to download symbols.'\n            ),\n          },\n          {\n            name: 'client_email',\n            type: 'email',\n            required: true,\n            label: t('Client Email'),\n            placeholder: 'user@project.iam.gserviceaccount.com',\n            help: t('Email address of the GCS service account.'),\n          },\n          {\n            name: 'private_key',\n            type: 'string',\n            required: true,\n            multiline: true,\n            autosize: true,\n            maxRows: 5,\n            rows: 3,\n            label: t('Private Key'),\n            placeholder:\n              typeof private_key === 'object'\n                ? t('(Private Key unchanged)')\n                : '-----BEGIN PRIVATE KEY-----\\n[PRIVATE-KEY]\\n-----END PRIVATE KEY-----',\n            help: tct(\n              'The service account key. Credentials can be managed on the [link].',\n              {\n                link: (\n                  <ExternalLink href=\"https://console.cloud.google.com/project/_/iam-admin\">\n                    IAM &amp; Admin Page\n                  </ExternalLink>\n                ),\n              }\n            ),\n          },\n          commonFields.separator,\n          commonFields.prefix,\n          commonFields.layoutType,\n          commonFields.layoutCasing,\n        ],\n        initialData: !initialData\n          ? undefined\n          : {\n              ...initialData,\n              private_key: undefined,\n            },\n      };\n    default: {\n      Sentry.captureException(new Error('Unknown custom repository type'));\n      return {}; // this shall never happen\n    }\n  }\n}\n\nexport function getFinalData(type: CustomRepoType, data: Record<string, any>) {\n  if (type === CustomRepoType.HTTP || type === CustomRepoType.APP_STORE_CONNECT) {\n    return data;\n  }\n\n  switch (type) {\n    case 's3':\n      return {\n        ...data,\n        secret_key: data.secret_key ?? {\n          'hidden-secret': true,\n        },\n      };\n    case 'gcs':\n      return {\n        ...data,\n        private_key: data.private_key ?? {\n          'hidden-secret': true,\n        },\n      };\n    default: {\n      Sentry.captureException(new Error('Unknown custom repository type'));\n      return {}; // this shall never happen\n    }\n  }\n}\n","import {Fragment} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {css} from '@emotion/react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form from 'sentry/components/forms/form';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {getDebugSourceName} from 'sentry/data/debugFileSources';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {AppStoreConnectStatusData, CustomRepoType} from 'sentry/types/debugFiles';\n\nimport AppStoreConnect from './appStoreConnect';\nimport Http from './http';\nimport {getFinalData, getFormFieldsAndInitialData} from './utils';\n\ntype AppStoreConnectInitialData = React.ComponentProps<\n  typeof AppStoreConnect\n>['initialData'];\n\ntype HttpInitialData = React.ComponentProps<typeof Http>['initialData'];\n\ntype RouteParams = {\n  orgId: string;\n  projectId: string;\n};\n\ntype Props = WithRouterProps<RouteParams, {}> & {\n  appStoreConnectSourcesQuantity: number;\n  /**\n   * Callback invoked with the updated config value.\n   */\n  onSave: (data: Record<string, any>) => Promise<void>;\n  organization: Organization;\n  /**\n   * Type of this source.\n   */\n  sourceType: CustomRepoType;\n\n  appStoreConnectStatusData?: AppStoreConnectStatusData;\n  /**\n   * The sourceConfig. May be empty to create a new one.\n   */\n  sourceConfig?: Record<string, any>;\n} & Pick<ModalRenderProps, 'Header' | 'Body' | 'Footer' | 'closeModal' | 'CloseButton'>;\n\nconst HookedAppStoreConnectMultiple = HookOrDefault({\n  hookName: 'component:disabled-app-store-connect-multiple',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nconst HookedCustomSymbolSources = HookOrDefault({\n  hookName: 'component:disabled-custom-symbol-sources',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nfunction DebugFileCustomRepository({\n  Header,\n  Body,\n  Footer,\n  CloseButton,\n  onSave,\n  sourceConfig,\n  sourceType,\n  params: {orgId, projectId: projectSlug},\n  appStoreConnectStatusData,\n  closeModal,\n  organization,\n  appStoreConnectSourcesQuantity,\n}: Props) {\n  function handleSave(data?: Record<string, any>) {\n    if (!data) {\n      closeModal();\n      window.location.reload();\n      return;\n    }\n\n    onSave({...getFinalData(sourceType, data), type: sourceType}).then(() => {\n      closeModal();\n    });\n  }\n\n  if (sourceType === CustomRepoType.APP_STORE_CONNECT) {\n    return (\n      <Feature organization={organization} features={['app-store-connect-multiple']}>\n        {({hasFeature, features}) => {\n          if (\n            hasFeature ||\n            (appStoreConnectSourcesQuantity === 1 && sourceConfig) ||\n            appStoreConnectSourcesQuantity === 0\n          ) {\n            return (\n              <AppStoreConnect\n                Header={Header}\n                Body={Body}\n                Footer={Footer}\n                orgSlug={orgId}\n                projectSlug={projectSlug}\n                onSubmit={handleSave}\n                initialData={sourceConfig as AppStoreConnectInitialData}\n                appStoreConnectStatusData={appStoreConnectStatusData}\n              />\n            );\n          }\n\n          return (\n            <Fragment>\n              <CloseButton />\n              <HookedAppStoreConnectMultiple organization={organization}>\n                <FeatureDisabled\n                  features={features}\n                  featureName={t('App Store Connect Multiple')}\n                  hideHelpToggle\n                />\n              </HookedAppStoreConnectMultiple>\n            </Fragment>\n          );\n        }}\n      </Feature>\n    );\n  }\n\n  return (\n    <Feature organization={organization} features={['custom-symbol-sources']}>\n      {({hasFeature, features}) => {\n        if (hasFeature) {\n          if (sourceType === CustomRepoType.HTTP) {\n            return (\n              <Http\n                Header={Header}\n                Body={Body}\n                Footer={Footer}\n                onSubmit={handleSave}\n                initialData={sourceConfig as HttpInitialData}\n              />\n            );\n          }\n\n          const {initialData, fields} = getFormFieldsAndInitialData(\n            sourceType,\n            sourceConfig\n          );\n\n          return (\n            <Fragment>\n              <Header closeButton>\n                {sourceConfig\n                  ? tct('Update [name] Repository', {\n                      name: getDebugSourceName(sourceType),\n                    })\n                  : tct('Add [name] Repository', {name: getDebugSourceName(sourceType)})}\n              </Header>\n              {fields && (\n                <Form\n                  allowUndo\n                  requireChanges\n                  initialData={initialData}\n                  onSubmit={handleSave}\n                  footerClass=\"modal-footer\"\n                >\n                  {fields.map((field, i) => (\n                    <FieldFromConfig\n                      key={field.name || i}\n                      field={field}\n                      inline={false}\n                      stacked\n                    />\n                  ))}\n                </Form>\n              )}\n            </Fragment>\n          );\n        }\n\n        return (\n          <Fragment>\n            <CloseButton />\n            <HookedCustomSymbolSources organization={organization}>\n              <FeatureDisabled\n                features={features}\n                featureName={t('Custom Symbol Sources')}\n                hideHelpToggle\n              />\n            </HookedCustomSymbolSources>\n          </Fragment>\n        );\n      }}\n    </Feature>\n  );\n}\n\nexport default withRouter(DebugFileCustomRepository);\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 680px;\n`;\n","export enum DebugFileType {\n  EXE = 'exe',\n  DBG = 'dbg',\n  LIB = 'lib',\n}\n\nexport enum DebugFileFeature {\n  SYMTAB = 'symtab',\n  DEBUG = 'debug',\n  UNWIND = 'unwind',\n  SOURCES = 'sources',\n}\n\ntype Secret = {'hidden-secret': boolean};\n\nexport type BuiltinSymbolSource = {\n  hidden: boolean;\n  id: string;\n  name: string;\n  sentry_key: string;\n};\n\nexport type DebugFile = {\n  codeId: string;\n  cpuName: string;\n  dateCreated: string;\n  debugId: string;\n  headers: Record<string, string>;\n  id: string;\n  objectName: string;\n  sha1: string;\n  size: number;\n  symbolType: string;\n  uuid: string;\n  data?: {features: DebugFileFeature[]; type: DebugFileType};\n};\n\n// Custom Repository\nexport enum CustomRepoType {\n  HTTP = 'http',\n  S3 = 's3',\n  GCS = 'gcs',\n  APP_STORE_CONNECT = 'appStoreConnect',\n}\n\nexport type AppStoreConnectValidationError = {\n  code:\n    | 'app-connect-authentication-error'\n    | 'app-connect-forbidden-error'\n    | 'app-connect-multiple-sources-error';\n};\n\nexport type AppStoreConnectCredentialsStatus =\n  | {status: 'valid'}\n  | ({status: 'invalid'} & AppStoreConnectValidationError);\n\nexport type AppStoreConnectStatusData = {\n  credentials: AppStoreConnectCredentialsStatus;\n  lastCheckedBuilds: string | null;\n  /**\n   * The build number of the latest build recognized by sentry. This does not\n   * imply the dSYMs for this build have been fetched. The contents of this\n   * string is just a number. This will be null if no builds can be found.\n   */\n  latestBuildNumber: string | null;\n  /**\n   * A human-readable string representing the latest build recognized by\n   * sentry. i.e. 3.4.0. This does not imply the dSYMs for this build have been\n   * fetched. This will be null if no builds can be found.\n   */\n  latestBuildVersion: string | null;\n  /**\n   * Indicates the number of downloads waiting to be processed and completed,\n   * or the number of downloads waiting for valid credentials to be completed if applicable.\n   */\n  pendingDownloads: number;\n  updateAlertMessage?: string;\n};\n\nexport type CustomRepoAppStoreConnect = {\n  appId: string;\n  appName: string;\n  appconnectIssuer: string;\n  appconnectKey: string;\n  appconnectPrivateKey: Secret;\n  bundleId: string;\n  id: string;\n  name: string;\n  type: CustomRepoType.APP_STORE_CONNECT;\n  details?: AppStoreConnectStatusData;\n};\n\nexport type CustomRepoHttp = {\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  password: Secret;\n  type: CustomRepoType.HTTP;\n  url: string;\n  username: string;\n};\n\ntype CustomRepoS3 = {\n  access_key: string;\n  bucket: string;\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  region: string;\n  secret_key: Secret;\n  type: CustomRepoType.S3;\n};\n\ntype CustomRepoGCS = {\n  bucket: string;\n  client_email: string;\n  id: string;\n  layout: {casing: string; type: string};\n  name: string;\n  prefix: string;\n  private_key: Secret;\n  type: CustomRepoType.GCS;\n};\n\nexport type CustomRepo =\n  | CustomRepoAppStoreConnect\n  | CustomRepoHttp\n  | CustomRepoS3\n  | CustomRepoGCS;\n","import * as Sentry from '@sentry/react';\n\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport {AppStoreConnectValidationError} from 'sentry/types/debugFiles';\n\nexport const unexpectedErrorMessage = t(\n  'An unexpected error occurred while configuring the App Store Connect integration'\n);\n\nexport function getAppStoreValidationErrorMessage(\n  error: AppStoreConnectValidationError,\n  repo?: {link: string; name: string}\n) {\n  switch (error.code) {\n    case 'app-connect-authentication-error':\n      return repo\n        ? tct(\n            'App Store Connect credentials are invalid or missing. [linkToCustomRepository]',\n            {\n              linkToCustomRepository: (\n                <Link to={repo.link}>\n                  {tct(\n                    \"Make sure the credentials of the '[customRepositoryName]' repository are correct and exist.\",\n                    {\n                      customRepositoryName: repo.name,\n                    }\n                  )}\n                </Link>\n              ),\n            }\n          )\n        : t('The supplied App Store Connect credentials are invalid or missing.');\n    case 'app-connect-forbidden-error':\n      return t('The supplied API key does not have sufficient permissions.');\n    case 'app-connect-multiple-sources-error':\n      return t('Only one App Store Connect application is allowed in this project.');\n    default: {\n      // this shall not happen\n      Sentry.captureException(new Error('Unknown app store connect error.'));\n      return unexpectedErrorMessage;\n    }\n  }\n}\n","export function selectText(node: HTMLElement): void {\n  if (node instanceof HTMLInputElement && node.type === 'text') {\n    node.select();\n  } else if (node instanceof Node && window.getSelection) {\n    const range = document.createRange();\n    range.selectNode(node);\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  const WithApi: React.FC<WrappedProps<P>> = ({api: propsApi, ...props}) => {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  };\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n","import ConfigStore from 'sentry/stores/configStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Config} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedConfigProps = {\n  config: Config;\n};\n\n/**\n * Higher order component that passes the config object to the wrapped\n * component\n */\nfunction withConfig<P extends InjectedConfigProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  type Props = Omit<P, keyof InjectedConfigProps> & Partial<InjectedConfigProps>;\n\n  const Wrapper: React.FC<Props> = props => {\n    const config = useLegacyStore(ConfigStore);\n    const allProps = {config, ...props} as P;\n\n    return <WrappedComponent {...allProps} />;\n  };\n\n  Wrapper.displayName = `withConfig(${getDisplayName(WrappedComponent)})`;\n\n  return Wrapper;\n}\n\nexport default withConfig;\n","import {Component} from 'react';\n\nimport SentryTypes from 'sentry/sentryTypes';\nimport {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedProjectProps = {\n  project?: Project;\n};\n\n/**\n * Currently wraps component with project from context\n */\nconst withProject = <P extends InjectedProjectProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedProjectProps> & Partial<InjectedProjectProps>\n  > {\n    static displayName = `withProject(${getDisplayName(WrappedComponent)})`;\n    static contextTypes = {\n      project: SentryTypes.Project,\n    };\n\n    render() {\n      const {project, ...props} = this.props;\n      return (\n        <WrappedComponent\n          {...({project: project ?? this.context.project, ...props} as P)}\n        />\n      );\n    }\n  };\n\nexport default withProject;\n","export default function copyTextToClipboard(input, {target = document.body} = {}) {\n\tconst element = document.createElement('textarea');\n\tconst previouslyFocusedElement = document.activeElement;\n\n\telement.value = input;\n\n\t// Prevent keyboard from showing on mobile\n\telement.setAttribute('readonly', '');\n\n\telement.style.contain = 'strict';\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\tconst selection = document.getSelection();\n\tlet originalRange = false;\n\tif (selection.rangeCount > 0) {\n\t\toriginalRange = selection.getRangeAt(0);\n\t}\n\n\ttarget.append(element);\n\telement.select();\n\n\t// Explicit selection workaround for iOS\n\telement.selectionStart = 0;\n\telement.selectionEnd = input.length;\n\n\tlet isSuccess = false;\n\ttry {\n\t\tisSuccess = document.execCommand('copy');\n\t} catch {}\n\n\telement.remove();\n\n\tif (originalRange) {\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(originalRange);\n\t}\n\n\t// Get the focus back on the previously focused element, if any\n\tif (previouslyFocusedElement) {\n\t\tpreviouslyFocusedElement.focus();\n\t}\n\n\treturn isSuccess;\n}\n"],"names":["ComingSoon","type","showIcon","t","Feature","Component","getAllFeatures","organization","project","config","this","props","configFeatures","features","Array","from","hasFeature","feature","shouldMatchOnlyProject","match","shouldMatchOnlyOrg","includes","render","children","renderDisabled","hookName","requireAll","allFeatures","feat","customDisabledRender","hooks","HookStore","length","renderProps","isRenderFunc","withOrganization","withProject","withConfig","installText","featureName","map","f","join","FeatureDisabled","alert","hideHelpToggle","message","showHelp","setShowHelp","useState","renderHelp","Fragment","HelpText","tct","configFile","configLink","href","CONFIG_DOCS_URL","hideUnsupported","value","CopyButton","borderless","size","icon","Pre","onClick","e","selectText","target","showDescription","FeatureDisabledMessage","ToggleButton","priority","direction","HelpDescription","AlertComponent","Alert","expand","p","theme","text","lineHeightBody","space","Button","active","activeHover","ButtonLabel","hideMessages","successMessage","errorMessage","onSuccess","onError","element","setElement","handleClick","useCallback","copy","addErrorMessage","addSuccessMessage","useEffect","addEventListener","removeEventListener","handleMount","ref","findDOMNode","document","queryCommandSupported","isValidElement","cloneElement","defaultComponent","defaultComponentPromise","HookOrDefaultComponent","name","setState","undefined","componentWillUnmount","unlistener","DefaultComponent","lazy","Suspense","fallback","hookExists","state","componentFromHook","HookComponent","DEBUG_SOURCE_LAYOUTS","native","symstore","symstore_index2","ssqp","unified","debuginfod","DEBUG_SOURCE_CASINGS","default","uppercase","lowercase","AWS_REGIONS","DEBUG_SOURCE_TYPES","gcs","http","s3","appStoreConnect","getDebugSourceName","StepOne","stepOneData","onSetStepOneData","docLink","label","inline","error","errors","issuer","flexibleControlStateSize","stacked","required","placeholder","onChange","keyId","privateKey","rows","autosize","StepTwo","stepTwoData","onSetStepTwoData","appStoreApps","StyledSelectField","options","appStoreApp","appId","selectedAppStoreApp","find","app","SelectField","fieldErrorMessageMapping","appconnectIssuer","appconnectKey","getAppStoreErrorMessage","detailedErrorResponse","responseJSON","detail","getAppStoreValidationErrorMessage","errorResponse","Object","keys","reduce","acc","serverSideField","fieldErrorMessage","field","errorMessages","Sentry","scope","setExtra","Error","unexpectedErrorMessage","steps","AppStoreConnect","Header","Body","Footer","api","initialData","orgSlug","projectSlug","onSubmit","appStoreConnectStatusData","credentials","isLoading","setIsLoading","activeStep","setActiveStep","setAppStoreApps","setStepOneData","appconnectPrivateKey","setStepTwoData","closeModal","setTimeout","DEFAULT_TOAST_DURATION","renderCurrentStep","closeButton","HeaderContent","NumericSymbol","HeaderContentTitle","StepsOverview","currentStep","totalSteps","alerts","status","push","StyledAlert","code","getAlerts","Alerts","index","renderBodyContent","gap","StyledButton","async","storeApps","requestPromise","method","data","id","apps","appName","bundleId","appStoreConnnectError","updateCredentials","checkCredentials","persistData","disabled","some","key","isFormInvalid","LoadingIndicatorWrapper","mini","withApi","fontSizeMedium","yellow300","fontSizeExtraLarge","gray300","PASSWORD_INPUT_PADDING_RIGHT","INPUT_PADDING","Http","uniqueId","url","username","password","layout","casing","setData","help","PasswordInput","ClearPasswordButton","title","validData","Input","ActionButton","gray400","objectToChoices","obj","entries","commonFields","defaultValue","layoutType","choices","layoutCasing","prefix","separator","getFinalData","CustomRepoType","secret_key","private_key","HookedAppStoreConnectMultiple","HookOrDefault","HookedCustomSymbolSources","DebugFileCustomRepository","CloseButton","onSave","sourceConfig","sourceType","params","orgId","projectId","appStoreConnectSourcesQuantity","handleSave","window","location","reload","then","fields","k","v","link","multiline","maxRows","getFormFieldsAndInitialData","allowUndo","requireChanges","footerClass","i","withRouter","modalCss","DebugFileType","DebugFileFeature","repo","linkToCustomRepository","to","customRepositoryName","node","HTMLInputElement","select","Node","getSelection","range","createRange","selectNode","selection","removeAllRanges","addRange","persistInFlight","providedApi","localApi","useRef","current","Client","clearOnUnmount","clear","WrappedComponent","WithApi","propsApi","useApi","displayName","getDisplayName","Wrapper","allProps","useLegacyStore","ConfigStore","context","SentryTypes","copyTextToClipboard","input","body","createElement","previouslyFocusedElement","activeElement","setAttribute","style","contain","position","left","fontSize","originalRange","rangeCount","getRangeAt","append","selectionStart","selectionEnd","isSuccess","execCommand","remove","focus"],"sourceRoot":""}