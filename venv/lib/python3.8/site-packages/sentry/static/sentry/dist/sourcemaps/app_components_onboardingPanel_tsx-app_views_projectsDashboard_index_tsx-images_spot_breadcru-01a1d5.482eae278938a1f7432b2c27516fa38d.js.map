{"version":3,"file":"chunks/app_components_onboardingPanel_tsx-app_views_projectsDashboard_index_tsx-images_spot_breadcru-01a1d5.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/alerts/list/rules/teamFilter.tsx","webpack:///./app/views/projectsDashboard/noEvents.tsx","webpack:///./app/views/projectsDashboard/chart.tsx","webpack:///./app/views/projectsDashboard/deploys.tsx","webpack:///./app/views/projectsDashboard/projectCard.tsx","webpack:///./app/components/resourceCard.tsx","webpack:///./app/views/projectsDashboard/resources.tsx","webpack:///./app/views/projectsDashboard/index.tsx","webpack:///./app/views/projectsDashboard/utils.tsx","webpack:///./app/utils/withTeamsForUser.tsx","webpack:///./app/utils/getProjectsByTeams.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  image: React.ReactNode;\n  className?: string;\n};\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(value: number | null, seriesName: string = ''): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = value.toFixed(0);\n  return t('%sms', label);\n}\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport TeamAvatar from 'sentry/components/avatar/teamAvatar';\nimport Badge from 'sentry/components/badge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useTeams from 'sentry/utils/useTeams';\n\ninterface Props {\n  handleChangeFilter: (activeFilters: string[]) => void;\n  selectedTeams: string[];\n  /**\n   * only show teams user is a member of\n   */\n  showIsMemberTeams?: boolean;\n  /**\n   * show My Teams as the default dropdown description\n   */\n  showMyTeamsDescription?: boolean;\n  /**\n   * show suggested options (My Teams and Unassigned)\n   */\n  showSuggestedOptions?: boolean;\n}\n\nconst suggestedOptions = [\n  {\n    label: t('My Teams'),\n    value: 'myteams',\n  },\n  {\n    label: t('Unassigned'),\n    value: 'unassigned',\n  },\n];\n\nfunction TeamFilter({\n  selectedTeams,\n  handleChangeFilter,\n  showIsMemberTeams = false,\n  showSuggestedOptions = true,\n  showMyTeamsDescription = false,\n}: Props) {\n  const {teams, onSearch, fetching} = useTeams({provideUserTeams: showIsMemberTeams});\n\n  const teamOptions = useMemo(\n    () =>\n      teams.map(team => ({\n        value: team.id,\n        label: `#${team.slug}`,\n        leadingItems: <TeamAvatar team={team} size={18} />,\n      })),\n    [teams]\n  );\n\n  const [triggerIcon, triggerLabel] = useMemo(() => {\n    const firstSelectedSuggestion =\n      selectedTeams[0] && suggestedOptions.find(opt => opt.value === selectedTeams[0]);\n\n    const firstSelectedTeam =\n      selectedTeams[0] && teams.find(team => team.id === selectedTeams[0]);\n\n    if (firstSelectedSuggestion) {\n      return [<IconUser key={0} />, firstSelectedSuggestion.label];\n    }\n\n    if (firstSelectedTeam) {\n      return [\n        <TeamAvatar team={firstSelectedTeam} size={16} key={0} />,\n        `#${firstSelectedTeam.slug}`,\n      ];\n    }\n\n    return [\n      <IconUser key={0} />,\n      showMyTeamsDescription ? t('My Teams') : t('All Teams'),\n    ];\n  }, [selectedTeams, teams, showMyTeamsDescription]);\n\n  return (\n    <CompactSelect\n      multiple\n      isClearable\n      isSearchable\n      isLoading={fetching}\n      menuTitle={t('Filter teams')}\n      options={\n        showSuggestedOptions\n          ? [\n              {value: '_suggested', label: t('Suggested'), options: suggestedOptions},\n              {value: '_teams', label: t('Teams'), options: teamOptions},\n            ]\n          : teamOptions\n      }\n      value={selectedTeams}\n      onInputChange={debounce(val => void onSearch(val), DEFAULT_DEBOUNCE_DURATION)}\n      onChange={opts => handleChangeFilter(opts.map(opt => opt.value))}\n      triggerLabel={\n        <Fragment>\n          {triggerLabel}\n          {selectedTeams.length > 1 && (\n            <StyledBadge text={`+${selectedTeams.length - 1}`} />\n          )}\n        </Fragment>\n      }\n      triggerProps={{icon: triggerIcon}}\n    />\n  );\n}\n\nexport default TeamFilter;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n`;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  seriesCount: number;\n};\n\nconst NoEvents = ({seriesCount}: Props) => (\n  <Container>\n    <EmptyText seriesCount={seriesCount}>{t('No activity yet.')}</EmptyText>\n  </Container>\n);\n\nexport default NoEvents;\n\nconst Container = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nconst EmptyText = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 4px;\n  margin-right: 4px;\n  height: ${p => (p.seriesCount > 1 ? '90px' : '150px')};\n  color: ${p => p.theme.gray300};\n`;\n","import {Fragment} from 'react';\nimport {useTheme} from '@emotion/react';\n\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {axisLabelFormatter} from 'sentry/utils/discover/charts';\n\nimport NoEvents from './noEvents';\n\ntype BaseChartProps = React.ComponentProps<typeof BaseChart>;\n\ntype Props = {\n  firstEvent: boolean;\n  stats: Project['stats'];\n  transactionStats?: Project['transactionStats'];\n};\n\nconst Chart = ({firstEvent, stats, transactionStats}: Props) => {\n  const series: BaseChartProps['series'] = [];\n  const hasTransactions = transactionStats !== undefined;\n\n  const theme = useTheme();\n\n  if (transactionStats) {\n    const transactionSeries = transactionStats.map(([timestamp, value]) => [\n      timestamp * 1000,\n      value,\n    ]);\n\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Transactions'),\n      type: 'bar',\n      data: transactionSeries,\n      barMinHeight: 1,\n      xAxisIndex: 1,\n      yAxisIndex: 1,\n      itemStyle: {\n        color: theme.gray200,\n        opacity: 0.8,\n      },\n      emphasis: {\n        itemStyle: {\n          color: theme.gray200,\n          opacity: 1.0,\n        },\n      },\n    });\n  }\n\n  if (stats) {\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Errors'),\n      type: 'bar',\n      data: stats.map(([timestamp, value]) => [timestamp * 1000, value]),\n      barMinHeight: 1,\n      xAxisIndex: 0,\n      yAxisIndex: 0,\n      itemStyle: {\n        color: theme.purple300,\n        opacity: 0.6,\n      },\n      emphasis: {\n        itemStyle: {\n          color: theme.purple300,\n          opacity: 0.8,\n        },\n      },\n    });\n  }\n  const grid = hasTransactions\n    ? [\n        {\n          top: 10,\n          bottom: 60,\n          left: 2,\n          right: 2,\n        },\n        {\n          top: 105,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ]\n    : [\n        {\n          top: 10,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ];\n\n  const chartOptions = {\n    series,\n    colors: [],\n    height: 150,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n    grid,\n    tooltip: {\n      trigger: 'axis' as const,\n    },\n    xAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      axisPointer: {\n        type: 'line' as const,\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          width: 0,\n        },\n      },\n    })),\n    yAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      interval: Infinity,\n      max(value: {max: number}) {\n        // This keeps small datasets from looking 'scary'\n        // by having full bars for < 10 values.\n        return Math.max(10, value.max);\n      },\n      axisLabel: {\n        margin: 2,\n        showMaxLabel: true,\n        showMinLabel: false,\n        color: theme.chartLabel,\n        fontFamily: theme.text.family,\n        inside: true,\n        lineHeight: 12,\n        formatter: (value: number) => axisLabelFormatter(value, 'count()', true),\n        textBorderColor: theme.backgroundSecondary,\n        textBorderWidth: 1,\n      },\n      splitLine: {\n        show: false,\n      },\n      zlevel: theme.zIndex.header,\n    })),\n    axisPointer: {\n      // Link each x-axis together.\n      link: [{xAxisIndex: [0, 1]}],\n    },\n    options: {\n      animation: false,\n    },\n  };\n\n  return (\n    <Fragment>\n      <BaseChart {...chartOptions} />\n      {!firstEvent && <NoEvents seriesCount={series.length} />}\n    </Fragment>\n  );\n};\n\nexport default Chart;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport {IconReleases} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Deploy as DeployType, Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nconst DEPLOY_COUNT = 2;\n\ntype Props = {\n  project: Project;\n  shorten?: boolean;\n};\n\nconst Deploys = ({project, shorten}: Props) => {\n  const flattenedDeploys = Object.entries(project.latestDeploys || {}).map(\n    ([environment, value]): Pick<\n      DeployType,\n      'version' | 'dateFinished' | 'environment'\n    > => ({environment, ...value})\n  );\n\n  const deploys = (flattenedDeploys || [])\n    .sort(\n      (a, b) => new Date(b.dateFinished).getTime() - new Date(a.dateFinished).getTime()\n    )\n    .slice(0, DEPLOY_COUNT);\n\n  if (!deploys.length) {\n    return <NoDeploys />;\n  }\n\n  return (\n    <DeployRows>\n      {deploys.map(deploy => (\n        <Deploy\n          key={`${deploy.environment}-${deploy.version}`}\n          deploy={deploy}\n          project={project}\n          shorten={shorten}\n        />\n      ))}\n    </DeployRows>\n  );\n};\n\nexport default Deploys;\n\ntype DeployProps = Props & {\n  deploy: Pick<DeployType, 'version' | 'dateFinished' | 'environment'>;\n};\n\nconst Deploy = ({deploy, project, shorten}: DeployProps) => (\n  <Fragment>\n    <IconReleases size=\"sm\" />\n    <TextOverflow>\n      <Environment>{deploy.environment}</Environment>\n      <Version\n        version={deploy.version}\n        projectId={project.id}\n        tooltipRawVersion\n        truncate\n      />\n    </TextOverflow>\n\n    <DeployTime>\n      {getDynamicText({\n        fixed: '3 hours ago',\n        value: (\n          <TimeSince date={deploy.dateFinished} shorten={shorten ? shorten : false} />\n        ),\n      })}\n    </DeployTime>\n  </Fragment>\n);\n\nconst NoDeploys = () => (\n  <GetStarted>\n    <Button size=\"small\" href=\"https://docs.sentry.io/product/releases/\" external>\n      {t('Track Deploys')}\n    </Button>\n  </GetStarted>\n);\nconst DeployContainer = styled('div')`\n  padding: ${space(2)};\n  height: 115px;\n`;\n\nconst DeployRows = styled(DeployContainer)`\n  display: grid;\n  grid-template-columns: 30px 1fr 1fr;\n  grid-template-rows: auto;\n  grid-column-gap: ${space(1)};\n  grid-row-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1.2;\n`;\n\nconst Environment = styled('div')`\n  color: ${p => p.theme.textColor};\n  margin: 0;\n`;\n\nconst DeployTime = styled('div')`\n  color: ${p => p.theme.gray300};\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`;\n\nconst GetStarted = styled(DeployContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport {DeployRows, GetStarted, TextOverflow};\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport round from 'lodash/round';\n\nimport {loadStatsForProject} from 'sentry/actionCreators/projects';\nimport {Client} from 'sentry/api';\nimport IdBadge from 'sentry/components/idBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport BookmarkStar from 'sentry/components/projects/bookmarkStar';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport ScoreCard, {\n  Score,\n  ScorePanel,\n  ScoreWrapper,\n  Title,\n  Trend,\n} from 'sentry/components/scoreCard';\nimport {releaseHealth} from 'sentry/data/platformCategories';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ProjectsStatsStore from 'sentry/stores/projectsStatsStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {formatAbbreviatedNumber} from 'sentry/utils/formatters';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport MissingReleasesButtons from 'sentry/views/projectDetail/missingFeatureButtons/missingReleasesButtons';\nimport {\n  CRASH_FREE_DECIMAL_THRESHOLD,\n  displayCrashFreePercent,\n} from 'sentry/views/releases/utils';\n\nimport Chart from './chart';\nimport Deploys, {DeployRows, GetStarted, TextOverflow} from './deploys';\n\ntype Props = {\n  api: Client;\n  hasProjectAccess: boolean;\n  organization: Organization;\n  project: Project;\n};\n\nclass ProjectCard extends Component<Props> {\n  componentDidMount() {\n    const {organization, project, api} = this.props;\n\n    // fetch project stats\n    loadStatsForProject(api, project.id, {\n      orgId: organization.slug,\n      projectId: project.id,\n      query: {\n        transactionStats: this.hasPerformance ? '1' : undefined,\n        sessionStats: '1',\n      },\n    });\n  }\n\n  get hasPerformance() {\n    return this.props.organization.features.includes('performance-view');\n  }\n\n  get crashFreeTrend() {\n    const {currentCrashFreeRate, previousCrashFreeRate} =\n      this.props.project.sessionStats || {};\n    if (!defined(currentCrashFreeRate) || !defined(previousCrashFreeRate)) {\n      return undefined;\n    }\n\n    return round(\n      currentCrashFreeRate - previousCrashFreeRate,\n      currentCrashFreeRate > CRASH_FREE_DECIMAL_THRESHOLD ? 3 : 0\n    );\n  }\n\n  renderMissingFeatureCard() {\n    const {organization, project} = this.props;\n    if (project.platform && releaseHealth.includes(project.platform)) {\n      return (\n        <ScoreCard\n          title={t('Crash Free Sessions')}\n          score={<MissingReleasesButtons organization={organization} health />}\n        />\n      );\n    }\n\n    return (\n      <ScoreCard\n        title={t('Crash Free Sessions')}\n        score={\n          <NotAvailable>\n            {t('Not Available')}\n            <QuestionTooltip\n              title={t('Release Health is not yet supported on this platform.')}\n              size=\"xs\"\n            />\n          </NotAvailable>\n        }\n      />\n    );\n  }\n\n  renderTrend() {\n    const {currentCrashFreeRate} = this.props.project.sessionStats || {};\n\n    if (!defined(currentCrashFreeRate) || !defined(this.crashFreeTrend)) {\n      return null;\n    }\n\n    return (\n      <div>\n        {this.crashFreeTrend >= 0 ? (\n          <IconArrow direction=\"up\" size=\"xs\" />\n        ) : (\n          <IconArrow direction=\"down\" size=\"xs\" />\n        )}\n        {`${formatAbbreviatedNumber(Math.abs(this.crashFreeTrend))}\\u0025`}\n      </div>\n    );\n  }\n\n  render() {\n    const {organization, project, hasProjectAccess} = this.props;\n    const {stats, slug, transactionStats, sessionStats} = project;\n    const {hasHealthData, currentCrashFreeRate} = sessionStats || {};\n    const totalErrors = stats?.reduce((sum, [_, value]) => sum + value, 0) ?? 0;\n    const totalTransactions =\n      transactionStats?.reduce((sum, [_, value]) => sum + value, 0) ?? 0;\n    const zeroTransactions = totalTransactions === 0;\n    const hasFirstEvent = Boolean(project.firstEvent || project.firstTransactionEvent);\n\n    return (\n      <div data-test-id={slug}>\n        <StyledProjectCard>\n          <CardHeader>\n            <HeaderRow>\n              <StyledIdBadge\n                project={project}\n                avatarSize={32}\n                hideOverflow\n                disableLink={!hasProjectAccess}\n              />\n              <StyledBookmarkStar organization={organization} project={project} />\n            </HeaderRow>\n            <SummaryLinks data-test-id=\"summary-links\">\n              {stats ? (\n                <Fragment>\n                  <Link\n                    data-test-id=\"project-errors\"\n                    to={`/organizations/${organization.slug}/issues/?project=${project.id}`}\n                  >\n                    {t('Errors: %s', formatAbbreviatedNumber(totalErrors))}\n                  </Link>\n                  {this.hasPerformance && (\n                    <Fragment>\n                      <em>|</em>\n                      <TransactionsLink\n                        data-test-id=\"project-transactions\"\n                        to={`/organizations/${organization.slug}/performance/?project=${project.id}`}\n                      >\n                        {t(\n                          'Transactions: %s',\n                          formatAbbreviatedNumber(totalTransactions)\n                        )}\n                        {zeroTransactions && (\n                          <QuestionTooltip\n                            title={t(\n                              'Click here to learn more about performance monitoring'\n                            )}\n                            position=\"top\"\n                            size=\"xs\"\n                          />\n                        )}\n                      </TransactionsLink>\n                    </Fragment>\n                  )}\n                </Fragment>\n              ) : (\n                <SummaryLinkPlaceholder />\n              )}\n            </SummaryLinks>\n          </CardHeader>\n          <ChartContainer data-test-id=\"chart-container\">\n            {stats ? (\n              <Chart\n                firstEvent={hasFirstEvent}\n                stats={stats}\n                transactionStats={transactionStats}\n              />\n            ) : (\n              <Placeholder height=\"150px\" />\n            )}\n          </ChartContainer>\n          <FooterWrapper>\n            <ScoreCardWrapper>\n              {!stats ? (\n                <Fragment>\n                  <ReleaseTitle>{t('Crash Free Sessions')}</ReleaseTitle>\n                  <FooterPlaceholder />\n                </Fragment>\n              ) : hasHealthData ? (\n                <ScoreCard\n                  title={t('Crash Free Sessions')}\n                  score={\n                    defined(currentCrashFreeRate)\n                      ? displayCrashFreePercent(currentCrashFreeRate)\n                      : '\\u2014'\n                  }\n                  trend={this.renderTrend()}\n                  trendStatus={\n                    this.crashFreeTrend\n                      ? this.crashFreeTrend > 0\n                        ? 'good'\n                        : 'bad'\n                      : undefined\n                  }\n                />\n              ) : (\n                this.renderMissingFeatureCard()\n              )}\n            </ScoreCardWrapper>\n            <DeploysWrapper>\n              <ReleaseTitle>{t('Latest Deploys')}</ReleaseTitle>\n              {stats ? <Deploys project={project} shorten /> : <FooterPlaceholder />}\n            </DeploysWrapper>\n          </FooterWrapper>\n        </StyledProjectCard>\n      </div>\n    );\n  }\n}\n\ntype ContainerProps = {\n  api: Client;\n  hasProjectAccess: boolean;\n  organization: Organization;\n  project: Project;\n};\n\ntype ContainerState = {\n  projectDetails: Project | null;\n};\n\nclass ProjectCardContainer extends Component<ContainerProps, ContainerState> {\n  state = this.getInitialState();\n\n  getInitialState(): ContainerState {\n    const {project} = this.props;\n    const initialState = ProjectsStatsStore.getInitialState() || {};\n    return {\n      projectDetails: initialState[project.slug] || null,\n    };\n  }\n\n  componentWillUnmount() {\n    this.listeners.forEach(callIfFunction);\n  }\n\n  listeners = [\n    ProjectsStatsStore.listen(itemsBySlug => {\n      this.onProjectStoreUpdate(itemsBySlug);\n    }, undefined),\n  ];\n\n  onProjectStoreUpdate(itemsBySlug: typeof ProjectsStatsStore['itemsBySlug']) {\n    const {project} = this.props;\n\n    // Don't update state if we already have stats\n    if (!itemsBySlug[project.slug]) {\n      return;\n    }\n    if (itemsBySlug[project.slug] === this.state.projectDetails) {\n      return;\n    }\n\n    this.setState({\n      projectDetails: itemsBySlug[project.slug],\n    });\n  }\n\n  render() {\n    const {project, ...props} = this.props;\n    const {projectDetails} = this.state;\n    return (\n      <ProjectCard\n        {...props}\n        project={{\n          ...project,\n          ...(projectDetails || {}),\n        }}\n      />\n    );\n  }\n}\n\nconst ChartContainer = styled('div')`\n  position: relative;\n  background: ${p => p.theme.backgroundSecondary};\n`;\n\nconst CardHeader = styled('div')`\n  margin: ${space(2)} 13px;\n  height: 32px;\n`;\n\nconst StyledBookmarkStar = styled(BookmarkStar)`\n  padding: 0;\n`;\n\nconst HeaderRow = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n\n  ${p => p.theme.text.cardTitle};\n  color: ${p => p.theme.headingColor};\n`;\n\nconst StyledProjectCard = styled('div')`\n  background-color: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  min-height: 330px;\n`;\n\nconst FooterWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  div {\n    border: none;\n    box-shadow: none;\n    font-size: ${p => p.theme.fontSizeMedium};\n    padding: 0;\n  }\n`;\n\nconst ScoreCardWrapper = styled('div')`\n  margin: ${space(2)} 0 0 ${space(2)};\n  ${ScorePanel} {\n    min-height: auto;\n  }\n  ${Title} {\n    color: ${p => p.theme.gray300};\n  }\n  ${ScoreWrapper} {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  ${Score} {\n    font-size: 28px;\n  }\n  ${Trend} {\n    margin-left: 0;\n    margin-top: ${space(0.5)};\n  }\n`;\n\nconst DeploysWrapper = styled('div')`\n  margin-top: ${space(2)};\n  ${GetStarted} {\n    display: block;\n    height: 100%;\n  }\n  ${TextOverflow} {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: ${space(1)};\n    div {\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n    a {\n      display: grid;\n    }\n  }\n  ${DeployRows} {\n    grid-template-columns: 2fr auto;\n    margin-right: ${space(2)};\n    height: auto;\n    svg {\n      display: none;\n    }\n  }\n`;\n\nconst ReleaseTitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-weight: 600;\n`;\n\nconst StyledIdBadge = styled(IdBadge)`\n  overflow: hidden;\n  white-space: nowrap;\n  flex-shrink: 1;\n  & div {\n    align-items: flex-start;\n  }\n\n  & span {\n    padding: 0;\n    position: relative;\n    top: -1px;\n  }\n`;\n\nconst SummaryLinks = styled('div')`\n  display: flex;\n  position: relative;\n  top: -${space(2)};\n  align-items: center;\n  font-weight: 400;\n\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n\n  /* Need to offset for the project icon and margin */\n  margin-left: 40px;\n\n  a {\n    color: ${p => p.theme.subText};\n    :hover {\n      color: ${p => p.theme.linkHoverColor};\n    }\n  }\n  em {\n    font-style: normal;\n    margin: 0 ${space(0.5)};\n  }\n`;\n\nconst TransactionsLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > span {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nconst NotAvailable = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: normal;\n  display: grid;\n  grid-template-columns: auto auto;\n  gap: ${space(0.5)};\n  align-items: center;\n`;\n\nconst SummaryLinkPlaceholder = styled(Placeholder)`\n  height: 15px;\n  width: 180px;\n  margin-top: ${space(0.75)};\n  margin-bottom: ${space(0.5)};\n`;\n\nconst FooterPlaceholder = styled(Placeholder)`\n  height: 40px;\n  width: auto;\n  margin-right: ${space(2)};\n`;\n\nexport {ProjectCard};\nexport default withOrganization(withApi(ProjectCardContainer));\n","import styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\nimport {analytics} from 'sentry/utils/analytics';\n\ntype Props = {\n  imgUrl: string;\n  link: string;\n  title: string;\n};\n\nconst ResourceCard = ({title, link, imgUrl}: Props) => (\n  <ResourceCardWrapper\n    onClick={() => analytics('orgdash.resource_clicked', {link, title})}\n  >\n    <StyledLink href={link}>\n      <StyledImg src={imgUrl} alt={title} />\n      <StyledTitle>{title}</StyledTitle>\n    </StyledLink>\n  </ResourceCardWrapper>\n);\n\nexport default ResourceCard;\n\nconst ResourceCardWrapper = styled(Panel)`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  padding: ${space(3)};\n  margin-bottom: 0;\n`;\n\nconst StyledLink = styled(ExternalLink)`\n  flex: 1;\n`;\n\nconst StyledImg = styled('img')`\n  display: block;\n  margin: 0 auto ${space(3)} auto;\n  height: 160px;\n`;\n\nconst StyledTitle = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeLarge};\n  text-align: center;\n  font-weight: bold;\n`;\n","import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport breadcrumbsImg from 'sentry-images/spot/breadcrumbs-generic.svg';\nimport docsImg from 'sentry-images/spot/code-arguments-tags-mirrored.svg';\nimport releasesImg from 'sentry-images/spot/releases.svg';\n\nimport PageHeading from 'sentry/components/pageHeading';\nimport ResourceCard from 'sentry/components/resourceCard';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\n\ntype Props = {\n  organization: Organization;\n};\n\nfunction Resources({organization}: Props) {\n  useEffect(() => {\n    trackAnalyticsEvent({\n      eventKey: 'orgdash.resources_shown',\n      eventName: 'Projects Dashboard: Resources Shown',\n      organization_id: organization.id,\n    });\n  }, []);\n\n  return (\n    <ResourcesWrapper data-test-id=\"resources\">\n      <PageHeading withMargins>{t('Resources')}</PageHeading>\n      <ResourceCards>\n        <ResourceCard\n          link=\"https://blog.sentry.io/2018/03/06/the-sentry-workflow\"\n          imgUrl={releasesImg}\n          title={t('The Sentry Workflow')}\n        />\n        <ResourceCard\n          link=\"https://sentry.io/vs/logging/\"\n          imgUrl={breadcrumbsImg}\n          title={t('Sentry vs Logging')}\n        />\n        <ResourceCard link=\"https://docs.sentry.io/\" imgUrl={docsImg} title={t('Docs')} />\n      </ResourceCards>\n    </ResourcesWrapper>\n  );\n}\n\nexport default Resources;\n\nconst ResourcesWrapper = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  padding: 25px 30px 10px 30px;\n`;\n\nconst ResourceCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n`;\n","import {Fragment, useEffect, useMemo, useState} from 'react';\nimport LazyLoad from 'react-lazyload';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageHeading from 'sentry/components/pageHeading';\nimport SearchBar from 'sentry/components/searchBar';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconAdd, IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ProjectsStatsStore from 'sentry/stores/projectsStatsStore';\nimport space from 'sentry/styles/space';\nimport {Organization, TeamWithProjects} from 'sentry/types';\nimport {sortProjects} from 'sentry/utils';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withTeamsForUser from 'sentry/utils/withTeamsForUser';\nimport TeamFilter from 'sentry/views/alerts/list/rules/teamFilter';\n\nimport ProjectCard from './projectCard';\nimport Resources from './resources';\nimport {getTeamParams} from './utils';\n\ntype Props = {\n  api: Client;\n  error: Error | null;\n  loadingTeams: boolean;\n  organization: Organization;\n  teams: TeamWithProjects[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\nfunction Dashboard({teams, organization, loadingTeams, error, router, location}: Props) {\n  useEffect(() => {\n    return function cleanup() {\n      ProjectsStatsStore.reset();\n    };\n  }, []);\n  const [projectQuery, setProjectQuery] = useState('');\n  const debouncedSearchQuery = useMemo(\n    () => debounce(handleSearch, DEFAULT_DEBOUNCE_DURATION),\n    []\n  );\n\n  if (loadingTeams) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <LoadingError message={t('An error occurred while fetching your projects')} />;\n  }\n\n  const canCreateProjects = organization.access.includes('project:admin');\n  const canJoinTeam = organization.access.includes('team:read');\n  const hasProjectAccess = organization.access.includes('project:read');\n\n  const selectedTeams = getTeamParams(location ? location.query.team : '');\n  const filteredTeams = teams.filter(team => selectedTeams.includes(team.id));\n\n  const filteredTeamProjects = uniqBy(\n    flatten((filteredTeams ?? teams).map(team => team.projects)),\n    'id'\n  );\n  const projects = uniqBy(flatten(teams.map(teamObj => teamObj.projects)), 'id');\n  const currentProjects = selectedTeams.length === 0 ? projects : filteredTeamProjects;\n  const filteredProjects = (currentProjects ?? projects).filter(project =>\n    project.slug.includes(projectQuery)\n  );\n  const favorites = projects.filter(project => project.isBookmarked);\n\n  const showEmptyMessage = projects.length === 0 && favorites.length === 0;\n  const showResources = projects.length === 1 && !projects[0].firstEvent;\n\n  function handleSearch(searchQuery: string) {\n    setProjectQuery(searchQuery);\n  }\n\n  function handleChangeFilter(activeFilters: string[]) {\n    const {...currentQuery} = location.query;\n\n    router.push({\n      pathname: location.pathname,\n      query: {\n        ...currentQuery,\n        team: activeFilters.length > 0 ? activeFilters : '',\n      },\n    });\n  }\n\n  if (showEmptyMessage) {\n    return (\n      <NoProjectMessage organization={organization} superuserNeedsToBeProjectMember />\n    );\n  }\n\n  return (\n    <Fragment>\n      <SentryDocumentTitle title={t('Projects Dashboard')} orgSlug={organization.slug} />\n      {projects.length > 0 && (\n        <Fragment>\n          <ProjectsHeader>\n            <Title>\n              <PageHeading>{t('Projects')}</PageHeading>\n            </Title>\n            <Layout.HeaderActions>\n              <ButtonContainer>\n                <Button\n                  icon={<IconUser size=\"xs\" />}\n                  title={\n                    canJoinTeam\n                      ? undefined\n                      : t('You do not have permission to join a team.')\n                  }\n                  disabled={!canJoinTeam}\n                  to={`/settings/${organization.slug}/teams/`}\n                  data-test-id=\"join-team\"\n                >\n                  {t('Join a Team')}\n                </Button>\n                <Button\n                  priority=\"primary\"\n                  disabled={!canCreateProjects}\n                  title={\n                    !canCreateProjects\n                      ? t('You do not have permission to create projects')\n                      : undefined\n                  }\n                  to={`/organizations/${organization.slug}/projects/new/`}\n                  icon={<IconAdd size=\"xs\" isCircled />}\n                  data-test-id=\"create-project\"\n                >\n                  {t('Create Project')}\n                </Button>\n              </ButtonContainer>\n            </Layout.HeaderActions>\n          </ProjectsHeader>\n          <Body>\n            <Layout.Main fullWidth>\n              <SearchAndSelectorWrapper>\n                <TeamFilter\n                  selectedTeams={selectedTeams}\n                  handleChangeFilter={handleChangeFilter}\n                  showIsMemberTeams\n                  showSuggestedOptions={false}\n                  showMyTeamsDescription\n                />\n                <StyledSearchBar\n                  defaultQuery=\"\"\n                  placeholder={t('Search for projects by name')}\n                  onChange={debouncedSearchQuery}\n                  query={projectQuery}\n                />\n              </SearchAndSelectorWrapper>\n              <LazyLoad once debounce={50} height={300} offset={300}>\n                <ProjectCards>\n                  {sortProjects(filteredProjects).map(project => (\n                    <ProjectCard\n                      data-test-id={project.slug}\n                      key={project.slug}\n                      project={project}\n                      hasProjectAccess={hasProjectAccess}\n                    />\n                  ))}\n                </ProjectCards>\n              </LazyLoad>\n            </Layout.Main>\n          </Body>\n          {showResources && <Resources organization={organization} />}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nconst OrganizationDashboard = (props: Props) => (\n  <OrganizationDashboardWrapper>\n    <Dashboard {...props} />\n  </OrganizationDashboardWrapper>\n);\n\nconst ProjectsHeader = styled(Layout.Header)`\n  border-bottom: none;\n  align-items: end;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    padding: 26px ${space(4)} 0 ${space(4)};\n  }\n`;\n\nconst Title = styled(Layout.HeaderContent)`\n  margin-bottom: 0;\n`;\n\nconst ButtonContainer = styled('div')`\n  display: inline-flex;\n  gap: ${space(1)};\n`;\n\nconst SearchAndSelectorWrapper = styled('div')`\n  display: flex;\n  gap: ${space(2)};\n  justify-content: flex-end;\n  align-items: flex-end;\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    display: flex;\n  }\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex-grow: 1;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: ${space(1)};\n  }\n`;\n\nconst Body = styled(Layout.Body)`\n  padding-top: ${space(2)} !important;\n  background-color: ${p => p.theme.surface100};\n`;\n\nconst ProjectCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n`;\n\nconst OrganizationDashboardWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport {Dashboard};\nexport default withApi(\n  withOrganization(withTeamsForUser(withProfiler(OrganizationDashboard)))\n);\n","/**\n * Noramlize a team slug from the query\n */\nexport function getTeamParams(team?: string | string[]): string[] {\n  if (team === '' || team === undefined) {\n    return [];\n  }\n\n  if (Array.isArray(team)) {\n    return team;\n  }\n\n  return [team];\n}\n","import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, Project, Team, TeamWithProjects} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport getProjectsByTeams from 'sentry/utils/getProjectsByTeams';\n\nimport {metric} from './analytics';\n\n// We require these props when using this HOC\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedTeamsProps = {\n  error: Error | null;\n  loadingTeams: boolean;\n  teams: TeamWithProjects[];\n};\n\nconst withTeamsForUser = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends Component<\n    Omit<P, keyof InjectedTeamsProps> & Partial<InjectedTeamsProps> & DependentProps,\n    InjectedTeamsProps\n  > {\n    static displayName = `withUsersTeams(${getDisplayName(WrappedComponent)})`;\n\n    state: InjectedTeamsProps = {\n      teams: [],\n      loadingTeams: true,\n      error: null,\n    };\n\n    componentDidMount() {\n      this.fetchTeams();\n    }\n\n    async fetchTeams() {\n      this.setState({\n        loadingTeams: true,\n      });\n\n      try {\n        metric.mark({name: 'user-teams-fetch-start'});\n        const teamsWithProjects: TeamWithProjects[] = await this.props.api.requestPromise(\n          this.getUsersTeamsEndpoint()\n        );\n        this.setState(\n          {\n            teams: teamsWithProjects,\n            loadingTeams: false,\n          },\n          () => {\n            metric.measure({\n              name: 'app.component.perf',\n              start: 'user-teams-fetch-start',\n              data: {\n                name: 'user-teams',\n                route: '/organizations/:orgid/user-teams',\n                organization_id: parseInt(this.props.organization.id, 10),\n              },\n            });\n          }\n        );\n      } catch (error) {\n        this.setState({\n          error,\n          loadingTeams: false,\n        });\n      }\n    }\n\n    populateTeamsWithProjects(teams: Team[], projects: Project[]) {\n      const {isSuperuser} = ConfigStore.get('user');\n      const {projectsByTeam} = getProjectsByTeams(teams, projects, isSuperuser);\n      const teamsWithProjects: TeamWithProjects[] = teams.map(team => {\n        const teamProjects = projectsByTeam[team.slug] || [];\n        return {...team, projects: teamProjects};\n      });\n      this.setState({\n        teams: teamsWithProjects,\n        loadingTeams: false,\n      });\n    }\n\n    getUsersTeamsEndpoint() {\n      return `/organizations/${this.props.organization.slug}/user-teams/`;\n    }\n\n    render() {\n      return <WrappedComponent {...(this.props as P & DependentProps)} {...this.state} />;\n    }\n  };\n\nexport default withTeamsForUser;\n","import {Project, Team} from 'sentry/types';\n\nexport default function getProjectsByTeams(\n  teams: Team[],\n  projects: Project[],\n  isSuperuser: boolean = false\n): {projectsByTeam: {[teamSlug: string]: Project[]}; teamlessProjects: Project[]} {\n  const projectsByTeam = {};\n  const teamlessProjects: Project[] = [];\n  let usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));\n\n  if (usersTeams.size === 0 && isSuperuser) {\n    usersTeams = new Set(teams.map(team => team.slug));\n  }\n\n  projects.forEach(project => {\n    if (!project.teams.length && project.isMember) {\n      teamlessProjects.push(project);\n    } else {\n      project.teams.forEach(team => {\n        if (!usersTeams.has(team.slug)) {\n          return;\n        }\n        if (!projectsByTeam.hasOwnProperty(team.slug)) {\n          projectsByTeam[team.slug] = [];\n        }\n        projectsByTeam[team.slug].push(project);\n      });\n    }\n  });\n\n  return {projectsByTeam, teamlessProjects};\n}\n"],"names":["OnboardingPanel","className","image","children","Container","IlloBox","StyledBox","space","p","theme","breakpoints","small","medium","tooltipFormatter","value","seriesName","defined","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","abbreviation","formatAbbreviatedNumber","axisDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","suggestedOptions","TeamFilter","selectedTeams","handleChangeFilter","showIsMemberTeams","showSuggestedOptions","showMyTeamsDescription","teams","onSearch","fetching","useTeams","provideUserTeams","teamOptions","useMemo","map","team","id","slug","leadingItems","size","triggerIcon","triggerLabel","firstSelectedSuggestion","find","opt","firstSelectedTeam","multiple","isClearable","isSearchable","isLoading","menuTitle","options","onInputChange","debounce","val","DEFAULT_DEBOUNCE_DURATION","onChange","opts","Fragment","length","StyledBadge","text","triggerProps","icon","Badge","NoEvents","seriesCount","EmptyText","gray300","Chart","firstEvent","stats","transactionStats","series","hasTransactions","undefined","useTheme","transactionSeries","timestamp","push","cursor","name","type","data","barMinHeight","xAxisIndex","yAxisIndex","itemStyle","color","gray200","opacity","emphasis","purple300","chartOptions","colors","height","isGroupedByDate","showTimeInTooltip","grid","top","bottom","left","right","tooltip","trigger","xAxes","Array","from","_i","index","gridIndex","axisLine","show","axisTick","axisLabel","axisPointer","lineStyle","width","yAxes","interval","Infinity","max","Math","margin","showMaxLabel","showMinLabel","chartLabel","fontFamily","family","inside","lineHeight","formatter","textBorderColor","backgroundSecondary","textBorderWidth","splitLine","zlevel","zIndex","header","link","animation","Deploys","project","shorten","deploys","Object","entries","latestDeploys","environment","sort","a","b","Date","dateFinished","getTime","slice","DeployRows","deploy","Deploy","version","NoDeploys","Environment","projectId","tooltipRawVersion","truncate","DeployTime","getDynamicText","fixed","date","GetStarted","href","external","DeployContainer","fontSizeMedium","textColor","ProjectCard","Component","componentDidMount","organization","api","this","props","loadStatsForProject","orgId","query","hasPerformance","sessionStats","features","includes","crashFreeTrend","currentCrashFreeRate","previousCrashFreeRate","round","CRASH_FREE_DECIMAL_THRESHOLD","renderMissingFeatureCard","platform","releaseHealth","title","score","health","NotAvailable","renderTrend","direction","abs","render","hasProjectAccess","hasHealthData","totalErrors","reduce","sum","_","totalTransactions","zeroTransactions","hasFirstEvent","Boolean","firstTransactionEvent","StyledProjectCard","CardHeader","HeaderRow","StyledIdBadge","avatarSize","hideOverflow","disableLink","StyledBookmarkStar","SummaryLinks","to","TransactionsLink","position","SummaryLinkPlaceholder","ChartContainer","FooterWrapper","ScoreCardWrapper","displayCrashFreePercent","trend","trendStatus","ReleaseTitle","FooterPlaceholder","DeploysWrapper","ProjectCardContainer","getInitialState","ProjectsStatsStore","itemsBySlug","onProjectStoreUpdate","projectDetails","componentWillUnmount","listeners","forEach","callIfFunction","state","setState","BookmarkStar","cardTitle","headingColor","background","border","borderRadius","dropShadowLight","ScorePanel","Title","ScoreWrapper","Score","Trend","TextOverflow","IdBadge","subText","fontSizeSmall","linkHoverColor","Link","Placeholder","withOrganization","withApi","ResourceCard","imgUrl","ResourceCardWrapper","onClick","analytics","StyledLink","StyledImg","src","alt","StyledTitle","Panel","ExternalLink","fontSizeLarge","Resources","useEffect","trackAnalyticsEvent","eventKey","eventName","organization_id","ResourcesWrapper","withMargins","ResourceCards","releasesImg","breadcrumbsImg","Dashboard","loadingTeams","error","router","location","projectQuery","setProjectQuery","useState","debouncedSearchQuery","handleSearch","message","canCreateProjects","access","canJoinTeam","isArray","filteredTeams","filter","filteredTeamProjects","uniqBy","flatten","projects","teamObj","currentProjects","filteredProjects","favorites","isBookmarked","showEmptyMessage","showResources","searchQuery","superuserNeedsToBeProjectMember","orgSlug","ProjectsHeader","ButtonContainer","disabled","priority","isCircled","Body","fullWidth","SearchAndSelectorWrapper","activeFilters","currentQuery","pathname","StyledSearchBar","defaultQuery","placeholder","once","offset","ProjectCards","sortProjects","OrganizationDashboard","OrganizationDashboardWrapper","Layout","xlarge","SearchBar","surface100","WrappedComponent","withProfiler","fetchTeams","metric","teamsWithProjects","requestPromise","getUsersTeamsEndpoint","start","route","parseInt","populateTeamsWithProjects","isSuperuser","ConfigStore","projectsByTeam","teamlessProjects","usersTeams","Set","isMember","has","hasOwnProperty","getProjectsByTeams","teamProjects","getDisplayName"],"sourceRoot":""}