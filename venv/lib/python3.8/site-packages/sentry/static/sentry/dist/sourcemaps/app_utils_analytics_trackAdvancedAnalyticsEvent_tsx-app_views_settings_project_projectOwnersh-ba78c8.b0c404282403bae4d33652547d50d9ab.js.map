{"version":3,"file":"chunks/app_utils_analytics_trackAdvancedAnalyticsEvent_tsx-app_views_settings_project_projectOwnersh-ba78c8.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/projects.tsx","webpack:///./app/actionCreators/teams.tsx","webpack:///./app/actions/projectActions.tsx","webpack:///./app/components/avatar/actorAvatar.tsx","webpack:///./app/components/deprecatedforms/form.tsx","webpack:///./app/components/deprecatedforms/formContext.tsx","webpack:///./app/components/deprecatedforms/formField.tsx","webpack:///./app/components/deprecatedforms/selectField.tsx","webpack:///./app/components/textOverflow.tsx","webpack:///./app/stores/memberListStore.tsx","webpack:///./app/stores/projectsStatsStore.tsx","webpack:///./app/stores/projectsStore.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/utils/parseLinkHeader.tsx","webpack:///./app/utils/teams.tsx","webpack:///./app/utils/useProjects.tsx","webpack:///./app/utils/useTeams.tsx","webpack:///./app/utils/withProjects.tsx","webpack:///./app/components/deprecatedforms/multiSelectControl.tsx","webpack:///./app/views/settings/project/projectOwnership/selectOwners.tsx","webpack:///./app/views/settings/project/projectOwnership/ruleBuilder.tsx","webpack:///./app/views/settings/project/projectOwnership/ownerInput.tsx","webpack:///../node_modules/lodash/_arrayIncludes.js","webpack:///../node_modules/lodash/_arrayIncludesWith.js","webpack:///../node_modules/lodash/_baseIndexOf.js","webpack:///../node_modules/lodash/_baseIsNaN.js","webpack:///../node_modules/lodash/_baseUniq.js","webpack:///../node_modules/lodash/_createSet.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/_strictIndexOf.js","webpack:///../node_modules/lodash/chunk.js","webpack:///../node_modules/lodash/noop.js","webpack:///../node_modules/lodash/uniqBy.js"],"sourcesContent":["import {Query} from 'history';\nimport chunk from 'lodash/chunk';\nimport debounce from 'lodash/debounce';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport ProjectsStatsStore from 'sentry/stores/projectsStatsStore';\nimport {Project, Team} from 'sentry/types';\n\ntype UpdateParams = {\n  orgId: string;\n  projectId: string;\n  data?: {[key: string]: any};\n  query?: Query;\n};\n\nexport function update(api: Client, params: UpdateParams) {\n  ProjectActions.update(params.projectId, params.data);\n\n  const endpoint = `/projects/${params.orgId}/${params.projectId}/`;\n  return api\n    .requestPromise(endpoint, {\n      method: 'PUT',\n      data: params.data,\n    })\n    .then(\n      data => {\n        ProjectActions.updateSuccess(data);\n        return data;\n      },\n      err => {\n        ProjectActions.updateError(err, params.projectId);\n        throw err;\n      }\n    );\n}\n\ntype StatsParams = Pick<UpdateParams, 'orgId' | 'data' | 'query'>;\n\nexport function loadStats(api: Client, params: StatsParams) {\n  ProjectActions.loadStats(params.orgId, params.data);\n\n  const endpoint = `/organizations/${params.orgId}/stats/`;\n  api.request(endpoint, {\n    query: params.query,\n    success: data => {\n      ProjectActions.loadStatsSuccess(data);\n    },\n    error: data => {\n      ProjectActions.loadStatsError(data);\n    },\n  });\n}\n\n// This is going to queue up a list of project ids we need to fetch stats for\n// Will be cleared when debounced function fires\nconst _projectStatsToFetch: Set<string> = new Set();\n\n// Max projects to query at a time, otherwise if we fetch too many in the same request\n// it can timeout\nconst MAX_PROJECTS_TO_FETCH = 10;\n\nconst _queryForStats = (\n  api: Client,\n  projects: string[],\n  orgId: string,\n  additionalQuery: Query | undefined\n) => {\n  const idQueryParams = projects.map(project => `id:${project}`).join(' ');\n  const endpoint = `/organizations/${orgId}/projects/`;\n\n  const query: Query = {\n    statsPeriod: '24h',\n    query: idQueryParams,\n    ...additionalQuery,\n  };\n\n  return api.requestPromise(endpoint, {\n    query,\n  });\n};\n\nexport const _debouncedLoadStats = debounce(\n  (api: Client, projectSet: Set<string>, params: UpdateParams) => {\n    const storedProjects: {[key: string]: Project} = ProjectsStatsStore.getAll();\n    const existingProjectStats = Object.values(storedProjects).map(({id}) => id);\n    const projects = Array.from(projectSet).filter(\n      project => !existingProjectStats.includes(project)\n    );\n\n    if (!projects.length) {\n      _projectStatsToFetch.clear();\n      return;\n    }\n\n    // Split projects into more manageable chunks to query, otherwise we can\n    // potentially face server timeouts\n    const queries = chunk(projects, MAX_PROJECTS_TO_FETCH).map(chunkedProjects =>\n      _queryForStats(api, chunkedProjects, params.orgId, params.query)\n    );\n\n    Promise.all(queries)\n      .then(results => {\n        ProjectActions.loadStatsForProjectSuccess(\n          results.reduce((acc, result) => acc.concat(result), [])\n        );\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to fetch all project stats'));\n      });\n\n    // Reset projects list\n    _projectStatsToFetch.clear();\n  },\n  50\n);\n\nexport function loadStatsForProject(api: Client, project: string, params: UpdateParams) {\n  // Queue up a list of projects that we need stats for\n  // and call a debounced function to fetch stats for list of projects\n  _projectStatsToFetch.add(project);\n  _debouncedLoadStats(api, _projectStatsToFetch, params);\n}\n\nexport function setActiveProject(project: Project | null) {\n  ProjectActions.setActive(project);\n}\n\nexport function removeProject(api: Client, orgId: string, project: Project) {\n  const endpoint = `/projects/${orgId}/${project.slug}/`;\n\n  ProjectActions.removeProject(project);\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      () => {\n        ProjectActions.removeProjectSuccess(project);\n        addSuccessMessage(\n          tct('[project] was successfully removed', {project: project.slug})\n        );\n      },\n      err => {\n        ProjectActions.removeProjectError(project);\n        addErrorMessage(tct('Error removing [project]', {project: project.slug}));\n        throw err;\n      }\n    );\n}\n\nexport function transferProject(\n  api: Client,\n  orgId: string,\n  project: Project,\n  email: string\n) {\n  const endpoint = `/projects/${orgId}/${project.slug}/transfer/`;\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n      data: {\n        email,\n      },\n    })\n    .then(\n      () => {\n        addSuccessMessage(\n          tct('A request was sent to move [project] to a different organization', {\n            project: project.slug,\n          })\n        );\n      },\n      err => {\n        let message = '';\n        // Handle errors with known failures\n        if (err.status >= 400 && err.status < 500 && err.responseJSON) {\n          message = err.responseJSON?.detail;\n        }\n\n        if (message) {\n          addErrorMessage(\n            tct('Error transferring [project]. [message]', {\n              project: project.slug,\n              message,\n            })\n          );\n        } else {\n          addErrorMessage(\n            tct('Error transferring [project]', {\n              project: project.slug,\n            })\n          );\n        }\n\n        throw err;\n      }\n    );\n}\n\n/**\n * Associate a team with a project\n */\n\n/**\n *  Adds a team to a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param team Team data object\n */\nexport function addTeamToProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  team: Team\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${team.slug}/`;\n\n  addLoadingMessage();\n  ProjectActions.addTeam(team);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'POST',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been added to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamSuccess(team, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to add [team] to the [project] project', {\n            team: `#${team.slug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.addTeamError();\n        throw err;\n      }\n    );\n}\n\n/**\n * Removes a team from a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param teamSlug Team Slug\n */\nexport function removeTeamFromProject(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  teamSlug: string\n) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/teams/${teamSlug}/`;\n\n  addLoadingMessage();\n  ProjectActions.removeTeam(teamSlug);\n\n  return api\n    .requestPromise(endpoint, {\n      method: 'DELETE',\n    })\n    .then(\n      project => {\n        addSuccessMessage(\n          tct('[team] has been removed from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamSuccess(teamSlug, projectSlug);\n        ProjectActions.updateSuccess(project);\n      },\n      err => {\n        addErrorMessage(\n          tct('Unable to remove [team] from the [project] project', {\n            team: `#${teamSlug}`,\n            project: projectSlug,\n          })\n        );\n        ProjectActions.removeTeamError(err);\n        throw err;\n      }\n    );\n}\n\n/**\n * Change a project's slug\n *\n * @param prev Previous slug\n * @param next New slug\n */\nexport function changeProjectSlug(prev: string, next: string) {\n  ProjectActions.changeSlug(prev, next);\n}\n\n/**\n * Send a sample event\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n */\nexport function sendSampleEvent(api: Client, orgSlug: string, projectSlug: string) {\n  const endpoint = `/projects/${orgSlug}/${projectSlug}/create-sample/`;\n\n  return api.requestPromise(endpoint, {\n    method: 'POST',\n  });\n}\n\n/**\n * Creates a project\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param team The team slug to assign the project to\n * @param name Name of the project\n * @param platform The platform key of the project\n * @param options Additional options such as creating default alert rules\n */\nexport function createProject(\n  api: Client,\n  orgSlug: string,\n  team: string,\n  name: string,\n  platform: string,\n  options: {defaultRules?: boolean} = {}\n) {\n  return api.requestPromise(`/teams/${orgSlug}/${team}/projects/`, {\n    method: 'POST',\n    data: {name, platform, default_rules: options.defaultRules},\n  });\n}\n\n/**\n * Load platform documentation specific to the project. The DSN and various\n * other project specific secrets will be included in the documentation.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectSlug Project Slug\n * @param platform Project platform.\n */\nexport function loadDocs(\n  api: Client,\n  orgSlug: string,\n  projectSlug: string,\n  platform: PlatformKey\n) {\n  return api.requestPromise(`/projects/${orgSlug}/${projectSlug}/docs/${platform}/`);\n}\n\n/**\n * Load the counts of my projects and all projects for the current user\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n */\nexport function fetchProjectsCount(api: Client, orgSlug: string) {\n  return api.requestPromise(`/organizations/${orgSlug}/projects-count/`);\n}\n\n/**\n * Check if there are any releases in the last 90 days.\n * Used for checking if project is using releases.\n *\n * @param api API Client\n * @param orgSlug Organization Slug\n * @param projectId Project Id\n */\nexport async function fetchAnyReleaseExistence(\n  api: Client,\n  orgSlug: string,\n  projectId: number | string\n) {\n  const data = await api.requestPromise(`/organizations/${orgSlug}/releases/stats/`, {\n    method: 'GET',\n    query: {\n      statsPeriod: '90d',\n      project: projectId,\n      per_page: 1,\n    },\n  });\n\n  return data.length > 0;\n}\n","import {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport {tct} from 'sentry/locale';\nimport {Team} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {uniqueId} from 'sentry/utils/guid';\n\ntype CallbackOptions = {\n  error?: Function;\n  success?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\n// Fetch user teams for current org and place them in the team store\nexport async function fetchUserTeams(api: Client, params: OrgSlug) {\n  const teams = await api.requestPromise(`/organizations/${params.orgId}/user-teams/`);\n  TeamActions.loadUserTeams(teams);\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {createActions} from 'reflux';\n\nconst ProjectActions = createActions([\n  'addTeam',\n  'addTeamError',\n  'addTeamSuccess',\n  'changeSlug',\n  'createSuccess',\n  'loadProjects',\n  'loadStats',\n  'loadStatsError',\n  'loadStatsForProjectSuccess',\n  'loadStatsSuccess',\n  'removeProject',\n  'removeProjectError',\n  'removeProjectSuccess',\n  'removeTeam',\n  'removeTeamError',\n  'removeTeamSuccess',\n  'reset',\n  'setActive',\n  'update',\n  'updateError',\n  'updateSuccess',\n]);\n\nexport default ProjectActions;\n","import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport TeamAvatar from 'sentry/components/avatar/teamAvatar';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Tooltip from 'sentry/components/tooltip';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport {Actor} from 'sentry/types';\nimport Teams from 'sentry/utils/teams';\n\ntype DefaultProps = {\n  hasTooltip: boolean;\n  size: number;\n};\n\ntype Props = DefaultProps & {\n  actor: Actor;\n  className?: string;\n  default?: string;\n  gravatar?: boolean;\n  onClick?: () => void;\n  suggested?: boolean;\n  title?: string;\n  tooltip?: React.ReactNode;\n  tooltipOptions?: Omit<React.ComponentProps<typeof Tooltip>, 'children' | 'title'>;\n};\n\nclass ActorAvatar extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    size: 24,\n    hasTooltip: true,\n  };\n\n  render() {\n    const {actor, ...props} = this.props;\n\n    if (actor.type === 'user') {\n      const user = actor.id ? MemberListStore.getById(actor.id) ?? actor : actor;\n      return <UserAvatar user={user} {...props} />;\n    }\n\n    if (actor.type === 'team') {\n      return (\n        <Teams ids={[actor.id]}>\n          {({initiallyLoaded, teams}) =>\n            initiallyLoaded ? (\n              <TeamAvatar team={teams[0]} {...props} />\n            ) : (\n              <LoadingIndicator mini />\n            )\n          }\n        </Teams>\n      );\n    }\n\n    Sentry.withScope(scope => {\n      scope.setExtra('actor', actor);\n      Sentry.captureException(new Error('Unknown avatar type'));\n    });\n\n    return null;\n  }\n}\n\nexport default ActorAvatar;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Button from 'sentry/components/button';\nimport FormContext, {\n  FormContextData,\n} from 'sentry/components/deprecatedforms/formContext';\nimport FormState from 'sentry/components/forms/state';\nimport {t} from 'sentry/locale';\n\ntype FormProps = {\n  cancelLabel?: string;\n  className?: string;\n  errorMessage?: React.ReactNode;\n  extraButton?: React.ReactNode;\n  footerClass?: string;\n  hideErrors?: boolean;\n  initialData?: object;\n  onCancel?: () => void;\n  onSubmit?: (\n    data: object,\n    onSubmitSuccess: (data: object) => void,\n    onSubmitError: (error: object) => void\n  ) => void;\n  onSubmitError?: (error: object) => void;\n  onSubmitSuccess?: (data: object) => void;\n  requireChanges?: boolean;\n  resetOnError?: boolean;\n  submitDisabled?: boolean;\n  submitLabel?: string;\n};\n\ntype FormClassState = {\n  data: any;\n  errors: {non_field_errors?: object[]} & object;\n  initialData: object;\n  state: FormState;\n};\n\n// Re-export for compatibility alias.\nexport type Context = FormContextData;\n\nclass Form<\n  Props extends FormProps = FormProps,\n  State extends FormClassState = FormClassState\n> extends Component<Props, State> {\n  static defaultProps = {\n    cancelLabel: t('Cancel'),\n    submitLabel: t('Save Changes'),\n    submitDisabled: false,\n    footerClass: 'form-actions align-right',\n    className: 'form-stacked',\n    requireChanges: false,\n    hideErrors: false,\n    resetOnError: false,\n    errorMessage: t(\n      'Unable to save your changes. Please ensure all fields are valid and try again.'\n    ),\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.state = {\n      data: {...this.props.initialData},\n      errors: {},\n      initialData: {...this.props.initialData},\n      state: FormState.READY,\n    } as State;\n  }\n\n  getContext() {\n    const {data, errors} = this.state;\n    return {\n      form: {\n        data,\n        errors,\n        onFieldChange: this.onFieldChange,\n      },\n    };\n  }\n\n  onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.props.onSubmit) {\n      throw new Error('onSubmit is a required prop');\n    }\n    this.props.onSubmit(this.state.data, this.onSubmitSuccess, this.onSubmitError);\n  };\n\n  onSubmitSuccess = (data: object) => {\n    this.setState({\n      state: FormState.READY,\n      errors: {},\n      initialData: {...this.state.data, ...(data || {})},\n    });\n    this.props.onSubmitSuccess && this.props.onSubmitSuccess(data);\n  };\n\n  onSubmitError = error => {\n    this.setState({\n      state: FormState.ERROR,\n      errors: error.responseJSON,\n    });\n\n    if (this.props.resetOnError) {\n      this.setState({\n        initialData: {},\n      });\n    }\n\n    this.props.onSubmitError && this.props.onSubmitError(error);\n  };\n\n  onFieldChange = (name: string, value: string | number) => {\n    this.setState(state => ({\n      data: {\n        ...state.data,\n        [name]: value,\n      },\n    }));\n  };\n\n  render() {\n    const isSaving = this.state.state === FormState.SAVING;\n    const {initialData, data} = this.state;\n    const {errorMessage, hideErrors, requireChanges} = this.props;\n    const hasChanges = requireChanges\n      ? Object.keys(data).length && !isEqual(data, initialData)\n      : true;\n    const isError = this.state.state === FormState.ERROR;\n    const nonFieldErrors = this.state.errors && this.state.errors.non_field_errors;\n\n    return (\n      <FormContext.Provider value={this.getContext()}>\n        <StyledForm onSubmit={this.onSubmit} className={this.props.className}>\n          {isError && !hideErrors && (\n            <div className=\"alert alert-error alert-block\">\n              {nonFieldErrors ? (\n                <div>\n                  <p>\n                    {t(\n                      'Unable to save your changes. Please correct the following errors try again.'\n                    )}\n                  </p>\n                  <ul>\n                    {nonFieldErrors.map((e, i) => (\n                      <li key={i}>{e}</li>\n                    ))}\n                  </ul>\n                </div>\n              ) : (\n                errorMessage\n              )}\n            </div>\n          )}\n          {this.props.children}\n          <div className={this.props.footerClass} style={{marginTop: 25}}>\n            <Button\n              priority=\"primary\"\n              disabled={isSaving || this.props.submitDisabled || !hasChanges}\n              type=\"submit\"\n              aria-label={this.props.submitLabel ?? t('Submit')}\n            >\n              {this.props.submitLabel}\n            </Button>\n            {this.props.onCancel && (\n              <Button\n                type=\"button\"\n                disabled={isSaving}\n                onClick={this.props.onCancel}\n                style={{marginLeft: 5}}\n                aria-label={this.props.cancelLabel ?? t('Cancel')}\n              >\n                {this.props.cancelLabel}\n              </Button>\n            )}\n            {this.props.extraButton}\n          </div>\n        </StyledForm>\n      </FormContext.Provider>\n    );\n  }\n}\n\n// Note: this is so we can use this as a selector for SelectField\n// We need to keep `Form` as a React Component because ApiForm extends it :/\nexport const StyledForm = styled('form')``;\n\nexport default Form;\n","import {createContext} from 'react';\n\n/**\n * Context type used on 'classic' or 'old' forms.\n *\n * This is a very different type than what is used on the 'settings'\n * forms which have MobX under the hood.\n */\nexport type FormContextData = {\n  form?: {\n    data: object;\n    errors: object;\n    onFieldChange: (name: string, value: string | number) => void;\n  };\n};\n\n/**\n * Default to undefined to preserve backwards compatibility.\n * The FormField component uses a truthy test to see if it is connected\n * to context or if the control is 'uncontrolled'.\n */\nconst FormContext = createContext<FormContextData>({});\n\nexport default FormContext;\n","import {PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport FormContext, {\n  FormContextData,\n} from 'sentry/components/deprecatedforms/formContext';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {Meta} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype Value = string | number | boolean;\n\ntype DefaultProps = {\n  disabled?: boolean;\n  hideErrorMessage?: boolean;\n  required?: boolean;\n};\n\ntype FormFieldProps = DefaultProps & {\n  name: string;\n  className?: string;\n  defaultValue?: any;\n  disabledReason?: string;\n  error?: string;\n  help?: string | React.ReactNode;\n  label?: React.ReactNode;\n  meta?: Meta;\n  onChange?: (value: Value) => void;\n  style?: object;\n  value?: Value;\n};\n\ntype FormFieldState = {\n  error: string | null;\n  value: Value;\n};\n\nexport default class FormField<\n  Props extends FormFieldProps = FormFieldProps,\n  State extends FormFieldState = FormFieldState\n> extends PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    hideErrorMessage: false,\n    disabled: false,\n    required: false,\n  };\n\n  constructor(props: Props, context?: any) {\n    super(props, context);\n    this.state = {\n      error: null,\n      value: this.getValue(props, context),\n    } as State;\n  }\n\n  componentDidMount() {}\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props, nextContext: FormContextData) {\n    const newError = this.getError(nextProps, nextContext);\n    if (newError !== this.state.error) {\n      this.setState({error: newError});\n    }\n    if (this.props.value !== nextProps.value || defined(nextContext.form)) {\n      const newValue = this.getValue(nextProps, nextContext);\n      if (newValue !== this.state.value) {\n        this.setValue(newValue);\n      }\n    }\n  }\n\n  componentWillUnmount() {}\n\n  static contextType = FormContext;\n\n  getValue(props: Props, context: FormContextData) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n    if (defined(props.value)) {\n      return props.value;\n    }\n    if (form && form.data.hasOwnProperty(props.name)) {\n      return defined(form.data[props.name]) ? form.data[props.name] : '';\n    }\n    return defined(props.defaultValue) ? props.defaultValue : '';\n  }\n\n  getError(props: Props, context: FormContextData) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n    if (defined(props.error)) {\n      return props.error;\n    }\n    return (form && form.errors[props.name]) || null;\n  }\n\n  getId() {\n    return `id-${this.props.name}`;\n  }\n\n  coerceValue(value: any) {\n    return value;\n  }\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    this.setValue(value);\n  };\n\n  setValue = (value: Value) => {\n    const form = (this.context || {}).form;\n    this.setState(\n      {\n        value,\n      },\n      () => {\n        const finalValue = this.coerceValue(this.state.value);\n        this.props.onChange?.(finalValue);\n        form?.onFieldChange(this.props.name, finalValue);\n      }\n    );\n  };\n\n  getField() {\n    throw new Error('Must be implemented by child.');\n  }\n\n  getClassName(): string {\n    throw new Error('Must be implemented by child.');\n  }\n\n  getFinalClassNames() {\n    const {className, required} = this.props;\n    const {error} = this.state;\n    return classNames(className, this.getClassName(), {\n      'has-error': !!error,\n      required,\n    });\n  }\n\n  renderDisabledReason() {\n    const {disabled, disabledReason} = this.props;\n    if (!disabled) {\n      return null;\n    }\n    if (!disabledReason) {\n      return null;\n    }\n    return <QuestionTooltip title={disabledReason} position=\"top\" size=\"sm\" />;\n  }\n\n  render() {\n    const {label, hideErrorMessage, help, style} = this.props;\n    const {error} = this.state;\n    const cx = this.getFinalClassNames();\n    const shouldShowErrorMessage = error && !hideErrorMessage;\n\n    return (\n      <div style={style} className={cx}>\n        <div className=\"controls\">\n          {label && (\n            <label htmlFor={this.getId()} className=\"control-label\">\n              {label}\n            </label>\n          )}\n          {this.getField()}\n          {this.renderDisabledReason()}\n          {defined(help) && <p className=\"help-block\">{help}</p>}\n          {shouldShowErrorMessage && <ErrorMessage>{error}</ErrorMessage>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ErrorMessage = styled('p')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.red300};\n`;\n","import styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {defined} from 'sentry/utils';\n\nimport {StyledForm} from './form';\nimport FormField from './formField';\n\ntype SelectProps = Omit<ControlProps, 'onChange' | 'name'>;\ntype FormProps = FormField['props'];\n\ntype Props = FormProps & SelectProps;\n\nexport default class SelectField extends FormField<Props> {\n  static defaultProps = {\n    ...FormField.defaultProps,\n    clearable: true,\n    multiple: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    const newError = this.getError(nextProps, nextContext);\n    if (newError !== this.state.error) {\n      this.setState({error: newError});\n    }\n    if (this.props.value !== nextProps.value || defined(nextContext.form)) {\n      const newValue = this.getValue(nextProps, nextContext);\n      // This is the only thing that is different from parent, we compare newValue against coerced value in state\n      // To remain compatible with react-select, we need to store the option object that\n      // includes `value` and `label`, but when we submit the format, we need to coerce it\n      // to just return `value`. Also when field changes, it propagates the coerced value up\n      const coercedValue = this.coerceValue(this.state.value);\n\n      // newValue can be empty string because of `getValue`, while coerceValue needs to return null (to differentiate\n      // empty string from cleared item). We could use `!=` to compare, but lets be a bit more explicit with strict equality\n      //\n      // This can happen when this is apart of a field, and it re-renders onChange for a different field,\n      // there will be a mismatch between this component's state.value and `this.getValue` result above\n      if (newValue !== coercedValue && !!newValue !== !!coercedValue) {\n        this.setValue(newValue);\n      }\n    }\n  }\n\n  // Overriding this so that we can support `multi` fields through property\n  getValue(props, context) {\n    const form = (context || this.context || {}).form;\n    props = props || this.props;\n\n    // Don't use `isMultiple` here because we're taking props from args as well\n    const defaultValue = this.isMultiple(props) ? [] : '';\n\n    if (defined(props.value)) {\n      return props.value;\n    }\n    if (form && form.data.hasOwnProperty(props.name)) {\n      return defined(form.data[props.name]) ? form.data[props.name] : defaultValue;\n    }\n    return defined(props.defaultValue) ? props.defaultValue : defaultValue;\n  }\n\n  // We need this to get react-select's `Creatable` to work properly\n  // Otherwise, when you hit \"enter\" to create a new item, the \"selected value\" does\n  // not update with new value (and also new value is not displayed in dropdown)\n  //\n  // This is also needed to get `multi` select working since we need the {label, value} object\n  // for react-select (but forms expect just the value to be propagated)\n  coerceValue(value) {\n    if (!value) {\n      return '';\n    }\n\n    if (this.isMultiple()) {\n      return value.map(v => v.value);\n    }\n    if (value.hasOwnProperty('value')) {\n      return value.value;\n    }\n\n    return value;\n  }\n\n  isMultiple(props?) {\n    props = props || this.props;\n    // this is to maintain compatibility with the 'multi' prop\n    return props.multi || props.multiple;\n  }\n\n  getClassName() {\n    return '';\n  }\n\n  onChange = opt => {\n    // Changing this will most likely break react-select (e.g. you won't be able to select\n    // a menu option that is from an async request, or a multi select).\n    this.setValue(opt);\n  };\n\n  getField() {\n    const {\n      options,\n      clearable,\n      creatable,\n      choices,\n      placeholder,\n      disabled,\n      name,\n      isLoading,\n    } = this.props;\n\n    return (\n      <StyledSelectControl\n        creatable={creatable}\n        id={this.getId()}\n        choices={choices}\n        options={options}\n        placeholder={placeholder}\n        disabled={disabled}\n        value={this.state.value}\n        onChange={this.onChange}\n        clearable={clearable}\n        multiple={this.isMultiple()}\n        name={name}\n        isLoading={isLoading}\n      />\n    );\n  }\n}\n\n// This is to match other fields that are wrapped by a `div.control-group`\nconst StyledSelectControl = styled(SelectControl)`\n  ${StyledForm} &, .form-stacked & {\n    .control-group & {\n      margin-bottom: 0;\n    }\n\n    margin-bottom: 15px;\n  }\n`;\n","import styled from '@emotion/styled';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  ['data-test-id']?: string;\n  ellipsisDirection?: 'left' | 'right';\n  isParagraph?: boolean;\n};\n\nconst TextOverflow = styled(\n  ({isParagraph, className, children, ['data-test-id']: dataTestId}: Props) => {\n    const Component = isParagraph ? 'p' : 'div';\n    return (\n      <Component className={className} data-test-id={dataTestId}>\n        {children}\n      </Component>\n    );\n  }\n)`\n  ${p => p.theme.overflowEllipsis}\n  ${p =>\n    p.ellipsisDirection === 'left' &&\n    `\n      direction: rtl;\n      text-align: left;\n    `};\n  width: auto;\n  line-height: 1.2;\n`;\n\nTextOverflow.defaultProps = {\n  ellipsisDirection: 'right',\n  isParagraph: false,\n};\n\nexport default TextOverflow;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {User} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface MemberListStoreDefinition extends StoreDefinition {\n  getAll(): User[];\n  getByEmail(email: string): User | undefined;\n  getById(id: string): User | undefined;\n  init(): void;\n  isLoaded(): boolean;\n  loadInitialData(items: User[]): void;\n  loaded: boolean;\n  state: User[];\n}\n\nconst storeConfig: MemberListStoreDefinition = {\n  // listenables: MemberActions,\n\n  loaded: false,\n  state: [],\n\n  init() {\n    this.state = [];\n    this.loaded = false;\n  },\n\n  // TODO(dcramer): this should actually come from an action of some sorts\n  loadInitialData(items: User[]) {\n    this.state = items;\n    this.loaded = true;\n    this.trigger(this.state, 'initial');\n  },\n\n  isLoaded() {\n    return this.loaded;\n  },\n\n  getById(id) {\n    if (!this.state) {\n      return undefined;\n    }\n\n    id = '' + id;\n    for (let i = 0; i < this.state.length; i++) {\n      if (this.state[i].id === id) {\n        return this.state[i];\n      }\n    }\n    return undefined;\n  },\n\n  getByEmail(email) {\n    if (!this.state) {\n      return undefined;\n    }\n\n    email = email.toLowerCase();\n    for (let i = 0; i < this.state.length; i++) {\n      if (this.state[i].email.toLowerCase() === email) {\n        return this.state[i];\n      }\n    }\n    return undefined;\n  },\n\n  getAll() {\n    return this.state;\n  },\n};\n\nconst MemberListStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default MemberListStore;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Project} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface ProjectsStatsStoreDefinition extends StoreDefinition {\n  getAll(): ProjectsStatsStoreDefinition['itemsBySlug'];\n\n  getBySlug(slug: string): Project;\n  getInitialState(): ProjectsStatsStoreDefinition['itemsBySlug'];\n  itemsBySlug: Record<string, Project>;\n  reset(): void;\n}\n\n/**\n * This is a store specifically used by the dashboard, so that we can\n * clear the store when the Dashboard unmounts\n * (as to not disrupt ProjectsStore which a lot more components use)\n */\nconst storeConfig: ProjectsStatsStoreDefinition = {\n  itemsBySlug: {},\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadStatsForProjectSuccess, this.onStatsLoadSuccess)\n    );\n    this.unsubscribeListeners.push(this.listenTo(ProjectActions.update, this.onUpdate));\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateError, this.onUpdateError)\n    );\n  },\n\n  getInitialState() {\n    return this.itemsBySlug;\n  },\n\n  reset() {\n    this.itemsBySlug = {};\n    this.updatingItems = new Map();\n  },\n\n  onStatsLoadSuccess(projects: Project[]) {\n    projects.forEach(project => {\n      this.itemsBySlug[project.slug] = project;\n    });\n    this.trigger(this.itemsBySlug);\n  },\n\n  /**\n   * Optimistic updates\n   * @param projectSlug Project slug\n   * @param data Project data\n   */\n  onUpdate(projectSlug: string, data: Project) {\n    const project = this.getBySlug(projectSlug);\n    this.updatingItems.set(projectSlug, project);\n    if (!project) {\n      return;\n    }\n\n    const newProject: Project = {\n      ...project,\n      ...data,\n    };\n\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: newProject,\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  onUpdateSuccess(data: Project) {\n    // Remove project from updating map\n    this.updatingItems.delete(data.slug);\n  },\n\n  /**\n   * Revert project data when there was an error updating project details\n   * @param err Error object\n   * @param data Previous project data\n   */\n  onUpdateError(_err: Error, projectSlug: string) {\n    const project = this.updatingItems.get(projectSlug);\n    if (!project) {\n      return;\n    }\n\n    this.updatingItems.delete(projectSlug);\n    // Restore old project\n    this.itemsBySlug = {\n      ...this.itemsBySlug,\n      [project.slug]: {...project},\n    };\n    this.trigger(this.itemsBySlug);\n  },\n\n  getAll() {\n    return this.itemsBySlug;\n  },\n\n  getBySlug(slug) {\n    return this.itemsBySlug[slug];\n  },\n};\n\nconst ProjectsStatsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ProjectsStatsStore;\n","import {createStore} from 'reflux';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Project, Team} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nimport {CommonStoreDefinition} from './types';\n\ntype State = {\n  loading: boolean;\n  projects: Project[];\n};\n\ntype StatsData = Record<string, Project['stats']>;\n\n/**\n * Attributes that need typing but aren't part of the external interface,\n */\ntype InternalDefinition = {\n  itemsById: Record<string, Project>;\n  loading: boolean;\n  removeTeamFromProject(teamSlug: string, project: Project): void;\n};\n\ninterface ProjectsStoreDefinition\n  extends InternalDefinition,\n    CommonStoreDefinition<State> {\n  getAll(): Project[];\n  getById(id?: string): Project | undefined;\n  getBySlug(slug?: string): Project | undefined;\n  init(): void;\n  isLoading(): boolean;\n  loadInitialData(projects: Project[]): void;\n  onAddTeam(team: Team, projectSlug: string): void;\n  onChangeSlug(prevSlug: string, newSlug: string): void;\n  onCreateSuccess(project: Project): void;\n  onDeleteTeam(slug: string): void;\n  onRemoveTeam(teamSlug: string, projectSlug: string): void;\n  onStatsLoadSuccess(data: StatsData): void;\n  onUpdateSuccess(data: Partial<Project>): void;\n  reset(): void;\n}\n\nconst storeConfig: ProjectsStoreDefinition = {\n  itemsById: {},\n  loading: true,\n  unsubscribeListeners: [],\n\n  init() {\n    this.reset();\n\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.addTeamSuccess, this.onAddTeam)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.changeSlug, this.onChangeSlug)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.createSuccess, this.onCreateSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadProjects, this.loadInitialData)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.loadStatsSuccess, this.onStatsLoadSuccess)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.removeTeamSuccess, this.onRemoveTeam)\n    );\n    this.unsubscribeListeners.push(this.listenTo(ProjectActions.reset, this.reset));\n    this.unsubscribeListeners.push(\n      this.listenTo(ProjectActions.updateSuccess, this.onUpdateSuccess)\n    );\n\n    this.unsubscribeListeners.push(\n      this.listenTo(TeamActions.removeTeamSuccess, this.onDeleteTeam)\n    );\n  },\n\n  reset() {\n    this.itemsById = {};\n    this.loading = true;\n  },\n\n  loadInitialData(items: Project[]) {\n    const mapping = items.map(project => [project.id, project] as const);\n\n    this.itemsById = Object.fromEntries(mapping);\n    this.loading = false;\n\n    this.trigger(new Set(Object.keys(this.itemsById)));\n  },\n\n  onChangeSlug(prevSlug: string, newSlug: string) {\n    const prevProject = this.getBySlug(prevSlug);\n\n    if (!prevProject) {\n      return;\n    }\n\n    const newProject = {...prevProject, slug: newSlug};\n\n    this.itemsById = {...this.itemsById, [newProject.id]: newProject};\n    this.trigger(new Set([prevProject.id]));\n  },\n\n  onCreateSuccess(project: Project) {\n    this.itemsById = {...this.itemsById, [project.id]: project};\n    this.trigger(new Set([project.id]));\n  },\n\n  onUpdateSuccess(data: Partial<Project>) {\n    const project = this.getById(data.id);\n\n    if (!project) {\n      return;\n    }\n\n    const newProject = {...project, ...data};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n    this.trigger(new Set([data.id]));\n  },\n\n  onStatsLoadSuccess(data) {\n    const entries = Object.entries(data || {}).filter(\n      ([projectId]) => projectId in this.itemsById\n    );\n\n    // Assign stats into projects\n    entries.forEach(([projectId, stats]) => {\n      this.itemsById[projectId].stats = stats;\n    });\n\n    const touchedIds = entries.map(([projectId]) => projectId);\n    this.trigger(new Set(touchedIds));\n  },\n\n  /**\n   * Listener for when a team is completely removed\n   *\n   * @param teamSlug Team Slug\n   */\n  onDeleteTeam(teamSlug: string) {\n    // Look for team in all projects\n    const projects = this.getAll().filter(({teams}) =>\n      teams.find(({slug}) => slug === teamSlug)\n    );\n\n    projects.forEach(project => this.removeTeamFromProject(teamSlug, project));\n\n    const affectedProjectIds = projects.map(project => project.id);\n    this.trigger(new Set(affectedProjectIds));\n  },\n\n  onRemoveTeam(teamSlug: string, projectSlug: string) {\n    const project = this.getBySlug(projectSlug);\n\n    if (!project) {\n      return;\n    }\n\n    this.removeTeamFromProject(teamSlug, project);\n    this.trigger(new Set([project.id]));\n  },\n\n  onAddTeam(team: Team, projectSlug: string) {\n    const project = this.getBySlug(projectSlug);\n\n    // Don't do anything if we can't find a project\n    if (!project) {\n      return;\n    }\n\n    const newProject = {...project, teams: [...project.teams, team]};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n    this.trigger(new Set([project.id]));\n  },\n\n  // Internal method, does not trigger\n  removeTeamFromProject(teamSlug: string, project: Project) {\n    const newTeams = project.teams.filter(({slug}) => slug !== teamSlug);\n    const newProject = {...project, teams: newTeams};\n\n    this.itemsById = {...this.itemsById, [project.id]: newProject};\n  },\n\n  isLoading() {\n    return this.loading;\n  },\n\n  getAll() {\n    return Object.values(this.itemsById).sort((a, b) => a.slug.localeCompare(b.slug));\n  },\n\n  getById(id) {\n    return this.getAll().find(project => project.id === id);\n  },\n\n  getBySlug(slug) {\n    return this.getAll().find(project => project.slug === slug);\n  },\n\n  getState() {\n    return {\n      projects: this.getAll(),\n      loading: this.loading,\n    };\n  },\n};\n\nconst ProjectsStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ProjectsStore;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  CoreUIEventParameters &\n  SamplingEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...coreUIEventMap,\n  ...samplingEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'sentry/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","type Result = Record<string, {cursor: string; href: string; results: boolean | null}>;\n\nexport default function parseLinkHeader(header: string | null): Result {\n  if (header === null || header === '') {\n    return {};\n  }\n\n  const headerValues = header.split(',');\n  const links = {};\n\n  headerValues.forEach(val => {\n    const match =\n      /<([^>]+)>; rel=\"([^\"]+)\"(?:; results=\"([^\"]+)\")?(?:; cursor=\"([^\"]+)\")?/g.exec(\n        val\n      );\n    const hasResults = match![3] === 'true' ? true : match![3] === 'false' ? false : null;\n\n    links[match![2]] = {\n      href: match![1],\n      results: hasResults,\n      cursor: match![4],\n    };\n  });\n\n  return links;\n}\n","import {Fragment} from 'react';\n\nimport useTeams from 'sentry/utils/useTeams';\n\ntype RenderProps = ReturnType<typeof useTeams>;\n\ntype Props = Parameters<typeof useTeams>[0] & {\n  children: (props: RenderProps) => React.ReactNode;\n};\n\n/**\n * This is a utility component to leverage the useTeams hook to provide\n * a render props component which returns teams through a variety of inputs\n * such as a list of slugs or user teams.\n */\nfunction Teams({children, ...props}: Props) {\n  const renderProps = useTeams(props);\n\n  return <Fragment>{children(renderProps)}</Fragment>;\n}\n\nexport default Teams;\n","import {useEffect, useRef, useState} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport {Client} from 'sentry/api';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {AvatarProject, Project} from 'sentry/types';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\n\ntype ProjectPlaceholder = AvatarProject;\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n  /**\n   * Indicates that Project results (from API) are paginated and there are more\n   * projects that are not in the initial response\n   */\n  hasMore: null | boolean;\n  /**\n   * Reflects whether or not the initial fetch for the requested projects\n   * was fulfilled. This accounts for both the store and specifically loaded\n   * slugs.\n   */\n  initiallyLoaded: boolean;\n  /**\n   * The last query we searched. Used to validate the cursor\n   */\n  lastSearch: null | string;\n  /**\n   * Pagination\n   */\n  nextCursor?: null | string;\n};\n\ntype Result = {\n  /**\n   * This is an action provided to consumers for them to update the current\n   * projects result set using a simple search query.\n   *\n   * Will always add new options into the store.\n   */\n  onSearch: (searchTerm: string) => Promise<void>;\n  /**\n   * When loading specific slugs, placeholder objects will be returned\n   */\n  placeholders: ProjectPlaceholder[];\n  /**\n   * The loaded projects list\n   */\n  projects: Project[];\n} & Pick<State, 'fetching' | 'hasMore' | 'fetchError' | 'initiallyLoaded'>;\n\ntype Options = {\n  /**\n   * Number of projects to return when not using `props.slugs`\n   */\n  limit?: number;\n  /**\n   * Specify an orgId, overriding the organization in the current context\n   */\n  orgId?: string;\n  /**\n   * List of slugs to look for summaries for, this can be from `props.projects`,\n   * otherwise fetch from API\n   */\n  slugs?: string[];\n};\n\ntype FetchProjectsOptions = {\n  cursor?: State['nextCursor'];\n  lastSearch?: State['lastSearch'];\n  limit?: Options['limit'];\n  search?: State['lastSearch'];\n  slugs?: string[];\n};\n\n/**\n * Helper function to actually load projects\n */\nasync function fetchProjects(\n  api: Client,\n  orgId: string,\n  {slugs, search, limit, lastSearch, cursor}: FetchProjectsOptions = {}\n) {\n  const query: {\n    collapse: string[];\n    all_projects?: number;\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {\n    // Never return latestDeploys project property from api\n    collapse: ['latestDeploys'],\n  };\n\n  if (slugs !== undefined && slugs.length > 0) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ?? ''}${search}`.trim();\n  }\n\n  const prevSearchMatches = (!lastSearch && !search) || lastSearch === search;\n\n  if (prevSearchMatches && cursor) {\n    query.cursor = cursor;\n  }\n\n  if (limit !== undefined) {\n    query.per_page = limit;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/projects/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore = paginationObject?.next?.results || paginationObject?.previous?.results;\n    nextCursor = paginationObject?.next?.cursor;\n  }\n\n  return {results: data, hasMore, nextCursor};\n}\n\n/**\n * Provides projects from the ProjectStore\n *\n * This hook also provides a way to select specific project slugs, and search\n * (type-ahead) for more projects that may not be in the project store.\n *\n * NOTE: Currently ALL projects are always loaded, but this hook is designed\n * for future-compat in a world where we do _not_ load all projects.\n */\nfunction useProjects({limit, slugs, orgId: propOrgId}: Options = {}) {\n  const api = useApi();\n\n  const {organization} = useLegacyStore(OrganizationStore);\n  const store = useLegacyStore(ProjectsStore);\n\n  const orgId = propOrgId ?? organization?.slug;\n\n  const storeSlugs = new Set(store.projects.map(t => t.slug));\n  const slugsToLoad = slugs?.filter(slug => !storeSlugs.has(slug)) ?? [];\n  const shouldLoadSlugs = slugsToLoad.length > 0;\n\n  const [state, setState] = useState<State>({\n    initiallyLoaded: !store.loading && !shouldLoadSlugs,\n    fetching: shouldLoadSlugs,\n    hasMore: null,\n    lastSearch: null,\n    nextCursor: null,\n    fetchError: null,\n  });\n\n  const slugsRef = useRef<Set<string> | null>(null);\n\n  // Only initialize slugsRef.current once and modify it when we receive new\n  // slugs determined through set equality\n  if (slugs !== undefined) {\n    if (slugsRef.current === null) {\n      slugsRef.current = new Set(slugs);\n    }\n\n    if (\n      slugs.length !== slugsRef.current.size ||\n      slugs.some(slug => !slugsRef.current?.has(slug))\n    ) {\n      slugsRef.current = new Set(slugs);\n    }\n  }\n\n  async function loadProjectsBySlug() {\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot use useProjects({slugs}) without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        slugs: slugsToLoad,\n        limit,\n      });\n\n      const fetchedProjects = uniqBy([...store.projects, ...results], ({slug}) => slug);\n      ProjectActions.loadProjects(fetchedProjects);\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        initiallyLoaded: true,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({\n        ...state,\n        fetching: false,\n        initiallyLoaded: !store.loading,\n        fetchError: err,\n      });\n    }\n  }\n\n  async function handleSearch(search: string) {\n    const {lastSearch} = state;\n    const cursor = state.nextCursor;\n\n    if (search === '') {\n      return;\n    }\n\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot use useProjects.onSearch without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n\n    try {\n      api.clear();\n      const {results, hasMore, nextCursor} = await fetchProjects(api, orgId, {\n        search,\n        limit,\n        lastSearch,\n        cursor,\n      });\n\n      const fetchedProjects = uniqBy([...store.projects, ...results], ({slug}) => slug);\n\n      // Only update the store if we have more items\n      if (fetchedProjects.length > store.projects.length) {\n        ProjectActions.loadProjects(fetchedProjects);\n      }\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        lastSearch: search,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, fetchError: err});\n    }\n  }\n\n  useEffect(() => {\n    // Load specified team slugs\n    if (shouldLoadSlugs) {\n      loadProjectsBySlug();\n      return;\n    }\n  }, [slugsRef.current]);\n\n  // Update initiallyLoaded when we finish loading within the projectStore\n  useEffect(() => {\n    const storeLoaded = !store.loading;\n\n    if (state.initiallyLoaded === storeLoaded) {\n      return;\n    }\n\n    if (shouldLoadSlugs) {\n      return;\n    }\n\n    setState({...state, initiallyLoaded: storeLoaded});\n  }, [store.loading]);\n\n  const {initiallyLoaded, fetching, fetchError, hasMore} = state;\n\n  const filteredProjects = slugs\n    ? store.projects.filter(t => slugs.includes(t.slug))\n    : store.projects;\n\n  const placeholders = slugsToLoad.map(slug => ({slug}));\n\n  const result: Result = {\n    projects: filteredProjects,\n    placeholders,\n    fetching: fetching || store.loading,\n    initiallyLoaded,\n    fetchError,\n    hasMore,\n    onSearch: handleSearch,\n  };\n\n  return result;\n}\n\nexport default useProjects;\n","import {useEffect, useMemo, useRef, useState} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {fetchUserTeams} from 'sentry/actionCreators/teams';\nimport TeamActions from 'sentry/actions/teamActions';\nimport {Client} from 'sentry/api';\nimport OrganizationStore from 'sentry/stores/organizationStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Team} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\n\ntype State = {\n  /**\n   * The error that occurred if fetching failed\n   */\n  fetchError: null | RequestError;\n  /**\n   * This is state for when fetching data from API\n   */\n  fetching: boolean;\n  /**\n   * Indicates that Team results (from API) are paginated and there are more\n   * Teams that are not in the initial response.\n   */\n  hasMore: null | boolean;\n  /**\n   * Reflects whether or not the initial fetch for the requested teams was\n   * fulfilled\n   */\n  initiallyLoaded: boolean;\n  /**\n   * The last query we searched. Used to validate the cursor\n   */\n  lastSearch: null | string;\n  /**\n   * Pagination\n   */\n  nextCursor?: null | string;\n};\n\ntype Result = {\n  /**\n   * This is an action provided to consumers for them to request more teams\n   * to be loaded. Additional teams will be fetched and loaded into the store.\n   */\n  loadMore: (searchTerm?: string) => Promise<void>;\n  /**\n   * This is an action provided to consumers for them to update the current\n   * teams result set using a simple search query.\n   *\n   * Will always add new options into the store.\n   */\n  onSearch: (searchTerm: string) => Promise<void>;\n  /**\n   * The loaded teams list\n   */\n  teams: Team[];\n} & Pick<State, 'fetching' | 'hasMore' | 'fetchError' | 'initiallyLoaded'>;\n\ntype Options = {\n  /**\n   * When provided, fetches specified teams by id if necessary and only provides those teams.\n   */\n  ids?: string[];\n  /**\n   * Number of teams to return when not using `props.slugs`\n   */\n  limit?: number;\n  /**\n   * When true, fetches user's teams if necessary and only provides user's\n   * teams (isMember = true).\n   */\n  provideUserTeams?: boolean;\n  /**\n   * When provided, fetches specified teams by slug if necessary and only provides those teams.\n   */\n  slugs?: string[];\n};\n\ntype FetchTeamOptions = {\n  cursor?: State['nextCursor'];\n  ids?: string[];\n  lastSearch?: State['lastSearch'];\n  limit?: Options['limit'];\n  search?: State['lastSearch'];\n  slugs?: string[];\n};\n\n/**\n * Helper function to actually load teams\n */\nasync function fetchTeams(\n  api: Client,\n  orgId: string,\n  {slugs, ids, search, limit, lastSearch, cursor}: FetchTeamOptions = {}\n) {\n  const query: {\n    cursor?: typeof cursor;\n    per_page?: number;\n    query?: string;\n  } = {};\n\n  if (slugs !== undefined && slugs.length > 0) {\n    query.query = slugs.map(slug => `slug:${slug}`).join(' ');\n  }\n\n  if (ids !== undefined && ids.length > 0) {\n    query.query = ids.map(id => `id:${id}`).join(' ');\n  }\n\n  if (search) {\n    query.query = `${query.query ?? ''} ${search}`.trim();\n  }\n\n  const isSameSearch = lastSearch === search || (!lastSearch && !search);\n\n  if (isSameSearch && cursor) {\n    query.cursor = cursor;\n  }\n\n  if (limit !== undefined) {\n    query.per_page = limit;\n  }\n\n  let hasMore: null | boolean = false;\n  let nextCursor: null | string = null;\n  const [data, , resp] = await api.requestPromise(`/organizations/${orgId}/teams/`, {\n    includeAllArgs: true,\n    query,\n  });\n\n  const pageLinks = resp?.getResponseHeader('Link');\n  if (pageLinks) {\n    const paginationObject = parseLinkHeader(pageLinks);\n    hasMore = paginationObject?.next?.results;\n    nextCursor = paginationObject?.next?.cursor;\n  }\n\n  return {results: data, hasMore, nextCursor};\n}\n\n// TODO: Paging for items which have already exist in the store is not\n// correctly implemented.\n\n/**\n * Provides teams from the TeamStore\n *\n * This hook also provides a way to select specific slugs to ensure they are\n * loaded, as well as search (type-ahead) for more slugs that may not be in the\n * TeamsStore.\n *\n * NOTE: It is NOT guaranteed that all teams for an organization will be\n * loaded, so you should use this hook with the intention of providing specific\n * slugs, or loading more through search.\n *\n */\nfunction useTeams({limit, slugs, ids, provideUserTeams}: Options = {}) {\n  const api = useApi();\n  const {organization} = useLegacyStore(OrganizationStore);\n  const store = useLegacyStore(TeamStore);\n\n  const orgId = organization?.slug;\n\n  const storeSlugs = new Set(store.teams.map(t => t.slug));\n  const slugsToLoad = slugs?.filter(slug => !storeSlugs.has(slug)) ?? [];\n  const storeIds = new Set(store.teams.map(t => t.id));\n  const idsToLoad = ids?.filter(id => !storeIds.has(id)) ?? [];\n  const shouldLoadSlugs = slugsToLoad.length > 0;\n  const shouldLoadIds = idsToLoad.length > 0;\n  const shouldLoadTeams = provideUserTeams && !store.loadedUserTeams;\n\n  // If we don't need to make a request either for slugs or user teams, set\n  // initiallyLoaded to true\n  const initiallyLoaded = !shouldLoadSlugs && !shouldLoadTeams && !shouldLoadIds;\n\n  const [state, setState] = useState<State>({\n    initiallyLoaded,\n    fetching: false,\n    hasMore: store.hasMore,\n    lastSearch: null,\n    nextCursor: store.cursor,\n    fetchError: null,\n  });\n\n  const slugOrIdRef = useRef<Set<string> | null>(null);\n\n  // Only initialize slugOrIdRef.current once and modify it when we receive new\n  // slugs or ids determined through set equality\n  if (slugs !== undefined || ids !== undefined) {\n    const slugsOrIds = (slugs || ids) ?? [];\n    if (slugOrIdRef.current === null) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n\n    if (\n      slugsOrIds.length !== slugOrIdRef.current.size ||\n      slugsOrIds.some(slugOrId => !slugOrIdRef.current?.has(slugOrId))\n    ) {\n      slugOrIdRef.current = new Set(slugsOrIds);\n    }\n  }\n\n  async function loadUserTeams() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      await fetchUserTeams(api, {orgId});\n\n      setState({...state, fetching: false, initiallyLoaded: true});\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  async function loadTeamsBySlugOrId() {\n    if (orgId === undefined) {\n      return;\n    }\n\n    setState({...state, fetching: true});\n    try {\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        slugs: slugsToLoad,\n        ids: idsToLoad,\n        limit,\n      });\n\n      // Unique by `id` to avoid duplicates due to renames and state store data\n      const fetchedTeams = uniqBy([...results, ...store.teams], ({id}) => id);\n      TeamActions.loadTeams(fetchedTeams);\n\n      setState({\n        ...state,\n        hasMore,\n        fetching: false,\n        initiallyLoaded: true,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, initiallyLoaded: true, fetchError: err});\n    }\n  }\n\n  function handleSearch(search: string) {\n    if (search !== '') {\n      return handleFetchAdditionalTeams(search);\n    }\n\n    // Reset pagination state to match store if doing an empty search\n    if (state.hasMore !== store.hasMore || state.nextCursor !== store.cursor) {\n      setState({\n        ...state,\n        lastSearch: search,\n        hasMore: store.hasMore,\n        nextCursor: store.cursor,\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  async function handleFetchAdditionalTeams(search?: string) {\n    const {lastSearch} = state;\n    // Use the store cursor if there is no search keyword provided\n    const cursor = search ? state.nextCursor : store.cursor;\n\n    if (orgId === undefined) {\n      // eslint-disable-next-line no-console\n      console.error('Cannot fetch teams without an organization in context');\n      return;\n    }\n\n    setState({...state, fetching: true});\n\n    try {\n      api.clear();\n      const {results, hasMore, nextCursor} = await fetchTeams(api, orgId, {\n        search,\n        limit,\n        lastSearch,\n        cursor,\n      });\n\n      const fetchedTeams = uniqBy([...store.teams, ...results], ({slug}) => slug);\n\n      if (search) {\n        // Only update the store if we have more items\n        if (fetchedTeams.length > store.teams.length) {\n          TeamActions.loadTeams(fetchedTeams);\n        }\n      } else {\n        // If we fetched a page of teams without a search query, add cursor data to the store\n        TeamActions.loadTeams(fetchedTeams, hasMore, nextCursor);\n      }\n\n      setState({\n        ...state,\n        hasMore: hasMore && store.hasMore,\n        fetching: false,\n        lastSearch: search ?? null,\n        nextCursor,\n      });\n    } catch (err) {\n      console.error(err); // eslint-disable-line no-console\n\n      setState({...state, fetching: false, fetchError: err});\n    }\n  }\n\n  useEffect(() => {\n    // Load specified team slugs\n    if (shouldLoadSlugs || shouldLoadIds) {\n      loadTeamsBySlugOrId();\n      return;\n    }\n\n    // Load user teams\n    if (shouldLoadTeams) {\n      loadUserTeams();\n    }\n  }, [slugOrIdRef.current, provideUserTeams]);\n\n  const isSuperuser = isActiveSuperuser();\n\n  const filteredTeams = useMemo(() => {\n    return slugs\n      ? store.teams.filter(t => slugs.includes(t.slug))\n      : ids\n      ? store.teams.filter(t => ids.includes(t.id))\n      : provideUserTeams && !isSuperuser\n      ? store.teams.filter(t => t.isMember)\n      : store.teams;\n  }, [store.teams, ids, slugs, provideUserTeams, isSuperuser]);\n\n  const result: Result = {\n    teams: filteredTeams,\n    fetching: state.fetching || store.loading,\n    initiallyLoaded: state.initiallyLoaded,\n    fetchError: state.fetchError,\n    hasMore: state.hasMore ?? store.hasMore,\n    onSearch: handleSearch,\n    loadMore: handleFetchAdditionalTeams,\n  };\n\n  return result;\n}\n\nexport default useTeams;\n","import {Project} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useProjects from 'sentry/utils/useProjects';\n\ntype InjectedProjectsProps = {\n  projects: Project[];\n  loadingProjects?: boolean;\n};\n\n/**\n * Higher order component that uses ProjectsStore and provides a list of projects\n */\nfunction withProjects<P extends InjectedProjectsProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  type Props = Omit<P, keyof InjectedProjectsProps>;\n\n  const Wrapper: React.FC<Props> = props => {\n    const {projects, initiallyLoaded} = useProjects();\n    const loadingProjects = !initiallyLoaded;\n\n    return <WrappedComponent {...(props as P)} {...{projects, loadingProjects}} />;\n  };\n\n  Wrapper.displayName = `withProjects(${getDisplayName(WrappedComponent)})`;\n\n  return Wrapper;\n}\n\nexport default withProjects;\n","import {forwardRef} from 'react';\nimport ReactSelect from 'react-select';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {SelectValue} from 'sentry/types';\n\nexport type MultiControlProps = Omit<ControlProps, 'onChange'> & {\n  /**\n   * Triggered when values change.\n   */\n  onChange?: (value?: SelectValue<any>[] | null) => void;\n};\n\nexport default forwardRef<ReactSelect, MultiControlProps>(function MultiSelectControl(\n  props,\n  ref\n) {\n  return <SelectControl forwardedRef={ref} {...props} multiple />;\n});\n","import {Component, createRef} from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {addTeamToProject} from 'sentry/actionCreators/projects';\nimport {Client} from 'sentry/api';\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport Button from 'sentry/components/button';\nimport MultiSelectControl from 'sentry/components/deprecatedforms/multiSelectControl';\nimport IdBadge from 'sentry/components/idBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport space from 'sentry/styles/space';\nimport {Actor, Member, Organization, Project, Team, User} from 'sentry/types';\nimport {buildTeamId, buildUserId} from 'sentry/utils';\nimport withApi from 'sentry/utils/withApi';\nimport withProjects from 'sentry/utils/withProjects';\n\nexport type Owner = {\n  actor: Actor;\n  label: React.ReactNode;\n  searchKey: string;\n  value: string;\n  disabled?: boolean;\n};\n\nfunction ValueComponent({data, removeProps}: MultiValueProps<Owner>) {\n  return (\n    <ValueWrapper onClick={removeProps.onClick}>\n      <ActorAvatar actor={data.actor} size={28} />\n    </ValueWrapper>\n  );\n}\n\nconst getSearchKeyForUser = (user: User) =>\n  `${user.email && user.email.toLowerCase()} ${user.name && user.name.toLowerCase()}`;\n\ntype Props = {\n  api: Client;\n  disabled: boolean;\n  onChange: (owners: Owner[]) => void;\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n  value: any;\n  onInputChange?: (text: string) => void;\n};\n\ntype State = {\n  inputValue: string;\n  loading: boolean;\n};\n\nclass SelectOwners extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    // Once a team has been added to the project the menu can be closed.\n    if (!isEqual(this.props.projects, prevProps.projects)) {\n      this.closeSelectMenu();\n    }\n  }\n\n  private selectRef = createRef<any>();\n\n  renderUserBadge = (user: User) => (\n    <IdBadge avatarSize={24} user={user} hideEmail useLink={false} />\n  );\n\n  createMentionableUser = (user: User): Owner => ({\n    value: buildUserId(user.id),\n    label: this.renderUserBadge(user),\n    searchKey: getSearchKeyForUser(user),\n    actor: {\n      type: 'user' as const,\n      id: user.id,\n      name: user.name,\n    },\n  });\n\n  createUnmentionableUser = ({user}): Owner => ({\n    ...this.createMentionableUser(user),\n    disabled: true,\n    label: (\n      <DisabledLabel>\n        <Tooltip\n          position=\"left\"\n          title={t('%s is not a member of project', user.name || user.email)}\n        >\n          {this.renderUserBadge(user)}\n        </Tooltip>\n      </DisabledLabel>\n    ),\n  });\n\n  createMentionableTeam = (team: Team): Owner => ({\n    value: buildTeamId(team.id),\n    label: <IdBadge team={team} />,\n    searchKey: `#${team.slug}`,\n    actor: {\n      type: 'team' as const,\n      id: team.id,\n      name: team.slug,\n    },\n  });\n\n  createUnmentionableTeam = (team: Team): Owner => {\n    const {organization} = this.props;\n    const canAddTeam = organization.access.includes('project:write');\n\n    return {\n      ...this.createMentionableTeam(team),\n      disabled: true,\n      label: (\n        <Container>\n          <DisabledLabel>\n            <Tooltip\n              position=\"left\"\n              title={t('%s is not a member of project', `#${team.slug}`)}\n            >\n              <IdBadge team={team} />\n            </Tooltip>\n          </DisabledLabel>\n          <Tooltip\n            title={\n              canAddTeam\n                ? t('Add %s to project', `#${team.slug}`)\n                : t('You do not have permission to add team to project.')\n            }\n          >\n            <AddToProjectButton\n              size=\"zero\"\n              borderless\n              disabled={!canAddTeam}\n              onClick={this.handleAddTeamToProject.bind(this, team)}\n              icon={<IconAdd isCircled />}\n              aria-label={t('Add %s to project', `#${team.slug}`)}\n            />\n          </Tooltip>\n        </Container>\n      ),\n    };\n  };\n\n  getMentionableUsers() {\n    return MemberListStore.getAll().map(this.createMentionableUser);\n  }\n\n  getMentionableTeams() {\n    const {project} = this.props;\n    const projectData = ProjectsStore.getBySlug(project.slug);\n\n    if (!projectData) {\n      return [];\n    }\n\n    return projectData.teams.map(this.createMentionableTeam);\n  }\n\n  /**\n   * Get list of teams that are not in the current project, for use in `MultiSelectMenu`\n   */\n  getTeamsNotInProject(teamsInProject: Owner[] = []) {\n    const teams = TeamStore.getAll() || [];\n    const excludedTeamIds = teamsInProject.map(({actor}) => actor.id);\n\n    return teams\n      .filter(team => excludedTeamIds.indexOf(team.id) === -1)\n      .map(this.createUnmentionableTeam);\n  }\n\n  /**\n   * Closes the select menu by blurring input if possible since that seems to be the only\n   * way to close it.\n   */\n  closeSelectMenu() {\n    // Close select menu\n    if (this.selectRef.current) {\n      // eslint-disable-next-line react/no-find-dom-node\n      const node = findDOMNode(this.selectRef.current);\n      const input: HTMLInputElement | null = (node as Element)?.querySelector(\n        '.Select-input input'\n      );\n      if (input) {\n        // I don't think there's another way to close `react-select`\n        input.blur();\n      }\n    }\n  }\n\n  async handleAddTeamToProject(team) {\n    const {api, organization, project, value} = this.props;\n    // Copy old value\n    const oldValue = [...value];\n\n    // Optimistic update\n    this.props.onChange([...this.props.value, this.createMentionableTeam(team)]);\n\n    try {\n      // Try to add team to project\n      // Note: we can't close select menu here because we have to wait for ProjectsStore to update first\n      // The reason for this is because we have little control over `react-select`'s `AsyncSelect`\n      // We can't control when `handleLoadOptions` gets called, but it gets called when select closes, so\n      // wait for store to update before closing the menu. Otherwise, we'll have stale items in the select menu\n      await addTeamToProject(api, organization.slug, project.slug, team);\n    } catch (err) {\n      // Unable to add team to project, revert select menu value\n      this.props.onChange(oldValue);\n      this.closeSelectMenu();\n    }\n  }\n\n  handleChange = (newValue: Owner[]) => {\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (inputValue: string) => {\n    this.setState({inputValue});\n\n    if (this.props.onInputChange) {\n      this.props.onInputChange(inputValue);\n    }\n  };\n\n  queryMembers = debounce((query, cb) => {\n    const {api, organization} = this.props;\n\n    // Because this function is debounced, the component can potentially be\n    // unmounted before this fires, in which case, `this.api` is null\n    if (!api) {\n      return null;\n    }\n\n    return api\n      .requestPromise(`/organizations/${organization.slug}/members/`, {\n        query: {query},\n      })\n      .then(\n        (data: Member[]) => cb(null, data),\n        err => cb(err)\n      );\n  }, 250);\n\n  handleLoadOptions = () => {\n    const usersInProject = this.getMentionableUsers();\n    const teamsInProject = this.getMentionableTeams();\n    const teamsNotInProject = this.getTeamsNotInProject(teamsInProject);\n    const usersInProjectById = usersInProject.map(({actor}) => actor.id);\n\n    // Return a promise for `react-select`\n    return new Promise((resolve, reject) => {\n      this.queryMembers(this.state.inputValue, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    })\n      .then(members =>\n        // Be careful here as we actually want the `users` object, otherwise it means user\n        // has not registered for sentry yet, but has been invited\n        members\n          ? (members as Member[])\n              .filter(({user}) => user && usersInProjectById.indexOf(user.id) === -1)\n              .map(this.createUnmentionableUser)\n          : []\n      )\n      .then(members => {\n        return [...usersInProject, ...teamsInProject, ...teamsNotInProject, ...members];\n      });\n  };\n\n  render() {\n    return (\n      <MultiSelectControl\n        name=\"owners\"\n        filterOption={(option, filterText) =>\n          option.data.searchKey.indexOf(filterText) > -1\n        }\n        ref={this.selectRef}\n        loadOptions={this.handleLoadOptions}\n        defaultOptions\n        async\n        clearable\n        disabled={this.props.disabled}\n        cache={false}\n        placeholder={t('owners')}\n        components={{\n          MultiValue: ValueComponent,\n        }}\n        onInputChange={this.handleInputChange}\n        onChange={this.handleChange}\n        value={this.props.value}\n        css={{width: 200}}\n      />\n    );\n  }\n}\n\nexport default withApi(withProjects(SelectOwners));\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DisabledLabel = styled('div')`\n  opacity: 0.5;\n  overflow: hidden; /* Needed so that \"Add to team\" button can fit */\n`;\n\nconst AddToProjectButton = styled(Button)`\n  flex-shrink: 0;\n`;\n\nconst ValueWrapper = styled('a')`\n  margin-right: ${space(0.5)};\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport SelectField from 'sentry/components/deprecatedforms/selectField';\nimport Input from 'sentry/components/forms/controls/input';\nimport Tag from 'sentry/components/tag';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {IconAdd, IconChevron} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport SelectOwners, {\n  Owner,\n} from 'sentry/views/settings/project/projectOwnership/selectOwners';\n\nconst initialState = {\n  text: '',\n  tagName: '',\n  type: 'path',\n  owners: [],\n  isValid: false,\n};\n\nfunction getMatchPlaceholder(type: string): string {\n  switch (type) {\n    case 'path':\n      return 'src/example/*';\n    case 'module':\n      return 'com.module.name.example';\n    case 'url':\n      return 'https://example.com/settings/*';\n    case 'tag':\n      return 'tag-value';\n    default:\n      return '';\n  }\n}\n\ntype Props = {\n  disabled: boolean;\n  onAddRule: (rule: string) => void;\n  organization: Organization;\n  paths: string[];\n  project: Project;\n  urls: string[];\n};\n\ntype State = {\n  isValid: boolean;\n  owners: Owner[];\n  tagName: string;\n  text: string;\n  type: string;\n};\n\nclass RuleBuilder extends Component<Props, State> {\n  state: State = initialState;\n\n  checkIsValid = () => {\n    this.setState(state => ({\n      isValid: !!state.text && state.owners && !!state.owners.length,\n    }));\n  };\n\n  handleTypeChange = (val: string | number | boolean) => {\n    this.setState({type: val as string}); // TODO(ts): Add select value type as generic to select controls\n    this.checkIsValid();\n  };\n\n  handleTagNameChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({tagName: e.target.value}, this.checkIsValid);\n  };\n\n  handleChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({text: e.target.value});\n    this.checkIsValid();\n  };\n\n  handleChangeOwners = (owners: Owner[]) => {\n    this.setState({owners});\n    this.checkIsValid();\n  };\n\n  handleAddRule = () => {\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    if (!isValid) {\n      addErrorMessage('A rule needs a type, a value, and one or more issue owners.');\n      return;\n    }\n\n    const ownerText = owners\n      .map(owner =>\n        owner.actor.type === 'team'\n          ? `#${owner.actor.name}`\n          : MemberListStore.getById(owner.actor.id)?.email\n      )\n      .join(' ');\n\n    const quotedText = text.match(/\\s/) ? `\"${text}\"` : text;\n\n    const rule = `${\n      type === 'tag' ? `tags.${tagName}` : type\n    }:${quotedText} ${ownerText}`;\n    this.props.onAddRule(rule);\n    this.setState(initialState);\n  };\n\n  handleSelectCandidate = (text: string, type: string) => {\n    this.setState({text, type});\n    this.checkIsValid();\n  };\n\n  render() {\n    const {urls, paths, disabled, project, organization} = this.props;\n    const {type, text, tagName, owners, isValid} = this.state;\n\n    return (\n      <Fragment>\n        {(paths || urls) && (\n          <Candidates>\n            {paths &&\n              paths.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'path')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <Tag>{t('Path')}</Tag>\n                </RuleCandidate>\n              ))}\n            {urls &&\n              urls.map(v => (\n                <RuleCandidate\n                  key={v}\n                  onClick={() => this.handleSelectCandidate(v, 'url')}\n                >\n                  <StyledIconAdd isCircled />\n                  <StyledTextOverflow>{v}</StyledTextOverflow>\n                  <Tag>{t('URL')}</Tag>\n                </RuleCandidate>\n              ))}\n          </Candidates>\n        )}\n        <BuilderBar>\n          <BuilderSelect\n            name=\"select-type\"\n            value={type}\n            onChange={this.handleTypeChange}\n            options={[\n              {value: 'path', label: t('Path')},\n              {value: 'module', label: t('Module')},\n              {value: 'tag', label: t('Tag')},\n              {value: 'url', label: t('URL')},\n            ]}\n            style={{width: 140}}\n            clearable={false}\n            disabled={disabled}\n          />\n          {type === 'tag' && (\n            <BuilderTagNameInput\n              value={tagName}\n              onChange={this.handleTagNameChangeValue}\n              disabled={disabled}\n              placeholder=\"tag-name\"\n            />\n          )}\n          <BuilderInput\n            value={text}\n            onChange={this.handleChangeValue}\n            disabled={disabled}\n            placeholder={getMatchPlaceholder(type)}\n          />\n          <Divider direction=\"right\" />\n          <SelectOwnersWrapper>\n            <SelectOwners\n              organization={organization}\n              project={project}\n              value={owners}\n              onChange={this.handleChangeOwners}\n              disabled={disabled}\n            />\n          </SelectOwnersWrapper>\n\n          <AddButton\n            priority=\"primary\"\n            disabled={!isValid}\n            onClick={this.handleAddRule}\n            icon={<IconAdd isCircled />}\n            size=\"small\"\n            aria-label={t('Add rule')}\n          />\n        </BuilderBar>\n      </Fragment>\n    );\n  }\n}\nconst Candidates = styled('div')`\n  margin-bottom: 10px;\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  flex: 1;\n`;\n\nconst RuleCandidate = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  background-color: ${p => p.theme.background};\n  padding: ${space(0.25)} ${space(0.5)};\n  margin-bottom: ${space(0.5)};\n  cursor: pointer;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconAdd = styled(IconAdd)`\n  color: ${p => p.theme.border};\n  margin-right: 5px;\n  flex-shrink: 0;\n`;\n\nconst BuilderBar = styled('div')`\n  display: flex;\n  height: 40px;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst BuilderSelect = styled(SelectField)`\n  margin-right: ${space(1.5)};\n  width: 50px;\n  flex-shrink: 0;\n`;\n\nconst BuilderInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n`;\n\nconst BuilderTagNameInput = styled(Input)`\n  padding: ${space(1)};\n  line-height: 19px;\n  margin-right: ${space(0.5)};\n  width: 200px;\n`;\n\nconst Divider = styled(IconChevron)`\n  color: ${p => p.theme.border};\n  flex-shrink: 0;\n  margin-right: 5px;\n`;\n\nconst SelectOwnersWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst AddButton = styled(Button)`\n  padding: ${space(0.5)}; /* this sizes the button up to align with the inputs */\n`;\n\nexport default RuleBuilder;\n","import {Component, Fragment} from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {inputStyles} from 'sentry/styles/input';\nimport {Organization, Project, Team} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\nimport RuleBuilder from './ruleBuilder';\n\nconst defaultProps = {\n  urls: [] as string[],\n  paths: [] as string[],\n  disabled: false,\n};\n\ntype Props = {\n  initialText: string;\n  organization: Organization;\n  project: Project;\n  onSave?: (text: string | null) => void;\n} & typeof defaultProps;\n\ntype State = {\n  error: null | {\n    raw: string[];\n  };\n  hasChanges: boolean;\n  text: string | null;\n};\n\nclass OwnerInput extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    hasChanges: false,\n    text: null,\n    error: null,\n  };\n\n  parseError(error: State['error']) {\n    const text = error?.raw?.[0];\n    if (!text) {\n      return null;\n    }\n\n    if (text.startsWith('Invalid rule owners:')) {\n      return <InvalidOwners>{text}</InvalidOwners>;\n    }\n    return (\n      <SyntaxOverlay line={parseInt(text.match(/line (\\d*),/)?.[1] ?? '', 10) - 1} />\n    );\n  }\n\n  handleUpdateOwnership = () => {\n    const {organization, project, onSave} = this.props;\n    const {text} = this.state;\n    this.setState({error: null});\n\n    const api = new Client();\n    const request = api.requestPromise(\n      `/projects/${organization.slug}/${project.slug}/ownership/`,\n      {\n        method: 'PUT',\n        data: {raw: text || ''},\n      }\n    );\n\n    request\n      .then(() => {\n        addSuccessMessage(t('Updated issue ownership rules'));\n        this.setState(\n          {\n            hasChanges: false,\n            text,\n          },\n          () => onSave && onSave(text)\n        );\n      })\n      .catch(error => {\n        this.setState({error: error.responseJSON});\n        if (error.status === 403) {\n          addErrorMessage(\n            t(\n              \"You don't have permission to modify issue ownership rules for this project\"\n            )\n          );\n        } else if (\n          error.status === 400 &&\n          error.responseJSON.raw &&\n          error.responseJSON.raw[0].startsWith('Invalid rule owners:')\n        ) {\n          addErrorMessage(\n            t('Unable to save issue ownership rule changes: ' + error.responseJSON.raw[0])\n          );\n        } else {\n          addErrorMessage(t('Unable to save issue ownership rule changes'));\n        }\n      });\n\n    return request;\n  };\n\n  mentionableUsers() {\n    return MemberListStore.getAll().map(member => ({\n      id: member.id,\n      display: member.email,\n      email: member.email,\n    }));\n  }\n\n  mentionableTeams() {\n    const {project} = this.props;\n    const projectWithTeams = ProjectsStore.getBySlug(project.slug);\n    if (!projectWithTeams) {\n      return [];\n    }\n    return projectWithTeams.teams.map((team: Team) => ({\n      id: team.id,\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({\n      hasChanges: true,\n      text: e.target.value,\n    });\n  };\n\n  handleAddRule = (rule: string) => {\n    const {initialText} = this.props;\n    this.setState(\n      ({text}) => ({\n        text: (text || initialText) + '\\n' + rule,\n      }),\n      this.handleUpdateOwnership\n    );\n  };\n\n  render() {\n    const {project, organization, disabled, urls, paths, initialText} = this.props;\n    const {hasChanges, text, error} = this.state;\n\n    return (\n      <Fragment>\n        <RuleBuilder\n          urls={urls}\n          paths={paths}\n          organization={organization}\n          project={project}\n          onAddRule={this.handleAddRule.bind(this)}\n          disabled={disabled}\n        />\n        <div\n          style={{position: 'relative'}}\n          onKeyDown={e => {\n            if (e.metaKey && e.key === 'Enter') {\n              this.handleUpdateOwnership();\n            }\n          }}\n        >\n          <StyledTextArea\n            placeholder={\n              '#example usage\\n' +\n              'path:src/example/pipeline/* person@sentry.io #infra\\n' +\n              'module:com.module.name.example #sdks\\n' +\n              'url:http://example.com/settings/* #product\\n' +\n              'tags.sku_class:enterprise #enterprise'\n            }\n            onChange={this.handleChange}\n            disabled={disabled}\n            value={defined(text) ? text : initialText}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n          />\n          <ActionBar>\n            <div>{this.parseError(error)}</div>\n            <SaveButton>\n              <Button\n                size=\"small\"\n                priority=\"primary\"\n                onClick={this.handleUpdateOwnership}\n                disabled={disabled || !hasChanges}\n              >\n                {t('Save Changes')}\n              </Button>\n            </SaveButton>\n          </ActionBar>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst TEXTAREA_PADDING = 4;\nconst TEXTAREA_LINE_HEIGHT = 24;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst SyntaxOverlay = styled('div')<{line: number}>`\n  ${inputStyles};\n  width: 100%;\n  height: ${TEXTAREA_LINE_HEIGHT}px;\n  background-color: red;\n  opacity: 0.1;\n  pointer-events: none;\n  position: absolute;\n  top: ${({line}) => TEXTAREA_PADDING + line * 24}px;\n`;\n\nconst SaveButton = styled('div')`\n  text-align: end;\n  padding-top: 10px;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${p => inputStyles(p)};\n  min-height: 140px;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  padding-top: ${TEXTAREA_PADDING}px;\n  line-height: ${TEXTAREA_LINE_HEIGHT}px;\n`;\n\nconst InvalidOwners = styled('div')`\n  color: ${p => p.theme.error};\n  font-weight: bold;\n  margin-top: 12px;\n`;\n\nexport default OwnerInput;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nmodule.exports = chunk;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["update","api","params","ProjectActions","projectId","data","endpoint","orgId","requestPromise","method","then","err","loadStats","request","query","success","error","_projectStatsToFetch","Set","_debouncedLoadStats","debounce","projectSet","storedProjects","ProjectsStatsStore","existingProjectStats","Object","values","map","id","projects","Array","from","filter","project","includes","length","clear","queries","chunk","chunkedProjects","additionalQuery","statsPeriod","join","_queryForStats","Promise","all","results","reduce","acc","result","concat","catch","addErrorMessage","t","loadStatsForProject","add","setActiveProject","removeProject","slug","addSuccessMessage","tct","transferProject","email","message","status","responseJSON","detail","addTeamToProject","orgSlug","projectSlug","team","addLoadingMessage","removeTeamFromProject","teamSlug","changeProjectSlug","prev","next","createProject","name","platform","options","default_rules","defaultRules","loadDocs","fetchProjectsCount","async","fetchAnyReleaseExistence","per_page","doCallback","args","callIfFunction","fetchUserTeams","teams","TeamActions","updateTeamSuccess","teamId","joinTeam","memberId","uniqueId","leaveTeam","createTeam","organization","removeTeam","createActions","ActorAvatar","Component","render","actor","props","this","type","user","MemberListStore","ids","initiallyLoaded","mini","Sentry","scope","setExtra","Error","size","hasTooltip","Form","constructor","context","super","e","preventDefault","onSubmit","state","onSubmitSuccess","onSubmitError","setState","FormState","errors","initialData","resetOnError","value","getContext","form","onFieldChange","isSaving","errorMessage","hideErrors","requireChanges","hasChanges","keys","isEqual","isError","nonFieldErrors","non_field_errors","StyledForm","className","i","children","footerClass","style","marginTop","priority","disabled","submitDisabled","submitLabel","onCancel","onClick","marginLeft","cancelLabel","extraButton","createContext","FormField","PureComponent","target","setValue","finalValue","coerceValue","onChange","getValue","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","nextContext","newError","getError","defined","newValue","componentWillUnmount","hasOwnProperty","defaultValue","getId","getField","getClassName","getFinalClassNames","required","classNames","renderDisabledReason","disabledReason","title","position","label","hideErrorMessage","help","cx","shouldShowErrorMessage","htmlFor","ErrorMessage","FormContext","p","theme","fontSizeMedium","red300","SelectField","opt","coercedValue","isMultiple","v","multi","multiple","clearable","creatable","choices","placeholder","isLoading","StyledSelectControl","SelectControl","TextOverflow","isParagraph","dataTestId","overflowEllipsis","ellipsisDirection","defaultProps","storeConfig","loaded","init","loadInitialData","items","trigger","isLoaded","getById","getByEmail","toLowerCase","getAll","createStore","makeSafeRefluxStore","itemsBySlug","unsubscribeListeners","reset","push","listenTo","onStatsLoadSuccess","onUpdate","onUpdateError","getInitialState","updatingItems","Map","forEach","getBySlug","set","newProject","onUpdateSuccess","delete","_err","get","itemsById","loading","onAddTeam","onChangeSlug","onCreateSuccess","onRemoveTeam","onDeleteTeam","mapping","fromEntries","prevSlug","newSlug","prevProject","entries","stats","touchedIds","find","affectedProjectIds","newTeams","sort","a","b","localeCompare","getState","allEventMap","growthEventMap","issueEventMap","performanceEventMap","dashboardsEventMap","discoverEventMap","workflowEventMap","searchEventMap","settingsEventMap","coreUIEventMap","samplingEventMap","makeAnalyticsFunction","isActiveSuperuser","isSuperuser","ConfigStore","Cookies","undefined","parseLinkHeader","header","headerValues","split","links","val","match","exec","hasResults","href","cursor","Teams","renderProps","useTeams","Fragment","fetchProjects","slugs","search","limit","lastSearch","collapse","trim","prevSearchMatches","hasMore","nextCursor","resp","includeAllArgs","pageLinks","getResponseHeader","paginationObject","previous","propOrgId","useApi","useLegacyStore","OrganizationStore","store","ProjectsStore","storeSlugs","slugsToLoad","has","shouldLoadSlugs","useState","fetching","fetchError","slugsRef","useRef","loadProjectsBySlug","fetchedProjects","uniqBy","console","handleSearch","current","some","useEffect","storeLoaded","filteredProjects","placeholders","onSearch","fetchTeams","isSameSearch","provideUserTeams","TeamStore","storeIds","idsToLoad","shouldLoadIds","shouldLoadTeams","loadedUserTeams","slugOrIdRef","slugsOrIds","slugOrId","loadUserTeams","loadTeamsBySlugOrId","fetchedTeams","handleFetchAdditionalTeams","resolve","filteredTeams","useMemo","isMember","loadMore","WrappedComponent","Wrapper","useProjects","loadingProjects","displayName","getDisplayName","forwardRef","ref","forwardedRef","ValueComponent","removeProps","ValueWrapper","getSearchKeyForUser","SelectOwners","inputValue","createRef","avatarSize","hideEmail","useLink","buildUserId","renderUserBadge","searchKey","createMentionableUser","DisabledLabel","buildTeamId","canAddTeam","access","createMentionableTeam","Container","AddToProjectButton","borderless","handleAddTeamToProject","bind","icon","isCircled","onInputChange","cb","usersInProject","getMentionableUsers","teamsInProject","getMentionableTeams","teamsNotInProject","getTeamsNotInProject","usersInProjectById","reject","queryMembers","members","indexOf","createUnmentionableUser","componentDidUpdate","prevProps","closeSelectMenu","projectData","excludedTeamIds","createUnmentionableTeam","selectRef","node","findDOMNode","input","querySelector","blur","oldValue","filterOption","option","filterText","loadOptions","handleLoadOptions","defaultOptions","cache","components","MultiValue","handleInputChange","handleChange","css","withApi","withProjects","Button","space","initialState","text","tagName","owners","isValid","getMatchPlaceholder","RuleBuilder","checkIsValid","ownerText","owner","rule","onAddRule","urls","paths","Candidates","RuleCandidate","handleSelectCandidate","StyledIconAdd","StyledTextOverflow","BuilderBar","BuilderSelect","handleTypeChange","width","BuilderTagNameInput","handleTagNameChangeValue","BuilderInput","handleChangeValue","Divider","direction","SelectOwnersWrapper","handleChangeOwners","AddButton","handleAddRule","familyMono","border","borderRadius","background","IconAdd","Input","IconChevron","OwnerInput","onSave","Client","raw","startsWith","initialText","handleUpdateOwnership","parseError","InvalidOwners","SyntaxOverlay","line","parseInt","mentionableUsers","member","display","mentionableTeams","projectWithTeams","onKeyDown","metaKey","key","StyledTextArea","spellCheck","autoComplete","autoCorrect","autoCapitalize","ActionBar","SaveButton","inputStyles","TextareaAutosize","baseIndexOf","module","exports","array","comparator","index","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","isCommon","seen","outer","computed","seenIndex","noop","eq","isArrayLike","isIndex","isObject","object","baseSlice","isIterateeCall","toInteger","nativeCeil","Math","ceil","nativeMax","max","guard","resIndex","baseIteratee","baseUniq"],"sourceRoot":""}