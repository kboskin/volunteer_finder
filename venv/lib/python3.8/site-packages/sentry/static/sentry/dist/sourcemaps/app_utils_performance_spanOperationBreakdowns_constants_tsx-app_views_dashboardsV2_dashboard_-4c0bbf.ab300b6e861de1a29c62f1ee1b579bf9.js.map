{"version":3,"file":"chunks/app_utils_performance_spanOperationBreakdowns_constants_tsx-app_views_dashboardsV2_dashboard_-4c0bbf.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/performance/spanOperationBreakdowns/constants.tsx","webpack:///./app/views/dashboardsV2/dashboard.tsx","webpack:///./app/views/dashboardsV2/data.tsx"],"sourcesContent":["export const SPAN_OP_BREAKDOWN_FIELDS = [\n  'spans.browser',\n  'spans.http',\n  'spans.db',\n  'spans.resource',\n];\n","import 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport {Component} from 'react';\nimport {Layouts, Responsive, WidthProvider} from 'react-grid-layout';\nimport {forceCheck} from 'react-lazyload';\nimport {InjectedRouter} from 'react-router';\nimport {closestCenter, DndContext} from '@dnd-kit/core';\nimport {arrayMove, rectSortingStrategy, SortableContext} from '@dnd-kit/sortable';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport cloneDeep from 'lodash/cloneDeep';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport {validateWidget} from 'sentry/actionCreators/dashboards';\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {openAddDashboardWidgetModal} from 'sentry/actionCreators/modal';\nimport {loadOrganizationTags} from 'sentry/actionCreators/tags';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {IconResize} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport theme from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport AddWidget, {ADD_WIDGET_BUTTON_DRAG_ID} from './addWidget';\nimport {\n  assignDefaultLayout,\n  assignTempId,\n  calculateColumnDepths,\n  constructGridItemKey,\n  DEFAULT_WIDGET_WIDTH,\n  enforceWidgetHeightValues,\n  generateWidgetId,\n  generateWidgetsAfterCompaction,\n  getDashboardLayout,\n  getDefaultWidgetHeight,\n  getMobileLayout,\n  getNextAvailablePosition,\n  pickDefinedStoreKeys,\n  Position,\n} from './layoutUtils';\nimport SortableWidget from './sortableWidget';\nimport {DashboardDetails, DashboardWidgetSource, Widget, WidgetType} from './types';\n\nexport const DRAG_HANDLE_CLASS = 'widget-drag';\nconst DRAG_RESIZE_CLASS = 'widget-resize';\nconst DESKTOP = 'desktop';\nconst MOBILE = 'mobile';\nexport const NUM_DESKTOP_COLS = 6;\nconst NUM_MOBILE_COLS = 2;\nconst ROW_HEIGHT = 120;\nconst WIDGET_MARGINS: [number, number] = [16, 16];\nconst BOTTOM_MOBILE_VIEW_POSITION = {\n  x: 0,\n  y: Number.MAX_SAFE_INTEGER,\n};\nconst MOBILE_BREAKPOINT = parseInt(theme.breakpoints.small, 10);\nconst BREAKPOINTS = {[MOBILE]: 0, [DESKTOP]: MOBILE_BREAKPOINT};\nconst COLUMNS = {[MOBILE]: NUM_MOBILE_COLS, [DESKTOP]: NUM_DESKTOP_COLS};\n\ntype Props = {\n  api: Client;\n  dashboard: DashboardDetails;\n  handleAddCustomWidget: (widget: Widget) => void;\n  handleUpdateWidgetList: (widgets: Widget[]) => void;\n  isEditing: boolean;\n  location: Location;\n  /**\n   * Fired when widgets are added/removed/sorted.\n   */\n  onUpdate: (widgets: Widget[]) => void;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  widgetLimitReached: boolean;\n  isPreview?: boolean;\n  newWidget?: Widget;\n  onSetNewWidget?: () => void;\n  paramDashboardId?: string;\n  paramTemplateId?: string;\n};\n\ntype State = {\n  isMobile: boolean;\n  layouts: Layouts;\n  windowWidth: number;\n};\n\nclass Dashboard extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const {dashboard, organization} = props;\n    const isUsingGrid = organization.features.includes('dashboard-grid-layout');\n    const desktopLayout = getDashboardLayout(dashboard.widgets);\n    this.state = {\n      isMobile: false,\n      layouts: {\n        [DESKTOP]: isUsingGrid ? desktopLayout : [],\n        [MOBILE]: isUsingGrid ? getMobileLayout(desktopLayout, dashboard.widgets) : [],\n      },\n      windowWidth: window.innerWidth,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.organization.features.includes('dashboard-grid-layout')) {\n      if (state.isMobile) {\n        // Don't need to recalculate any layout state from props in the mobile view\n        // because we want to force different positions (i.e. new widgets added\n        // at the bottom)\n        return null;\n      }\n\n      // If the user clicks \"Cancel\" and the dashboard resets,\n      // recalculate the layout to revert to the unmodified state\n      const dashboardLayout = getDashboardLayout(props.dashboard.widgets);\n      if (\n        !isEqual(\n          dashboardLayout.map(pickDefinedStoreKeys),\n          state.layouts[DESKTOP].map(pickDefinedStoreKeys)\n        )\n      ) {\n        return {\n          ...state,\n          layouts: {\n            [DESKTOP]: dashboardLayout,\n            [MOBILE]: getMobileLayout(dashboardLayout, props.dashboard.widgets),\n          },\n        };\n      }\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    const {organization, newWidget} = this.props;\n    if (organization.features.includes('dashboard-grid-layout')) {\n      window.addEventListener('resize', this.debouncedHandleResize);\n    }\n\n    // Always load organization tags on dashboards\n    this.fetchTags();\n\n    if (newWidget) {\n      this.addNewWidget();\n    }\n\n    // Get member list data for issue widgets\n    this.fetchMemberList();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {selection, newWidget} = this.props;\n\n    if (newWidget && newWidget !== prevProps.newWidget) {\n      this.addNewWidget();\n    }\n    if (!isEqual(prevProps.selection.projects, selection.projects)) {\n      this.fetchMemberList();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.organization.features.includes('dashboard-grid-layout')) {\n      window.removeEventListener('resize', this.debouncedHandleResize);\n    }\n\n    window.clearTimeout(this.forceCheckTimeout);\n  }\n\n  forceCheckTimeout: number | undefined = undefined;\n\n  debouncedHandleResize = debounce(() => {\n    this.setState({\n      windowWidth: window.innerWidth,\n    });\n  }, 250);\n\n  fetchMemberList() {\n    const {api, selection} = this.props;\n    // Stores MemberList in MemberListStore for use in modals and sets state for use is child components\n    fetchOrgMembers(\n      api,\n      this.props.organization.slug,\n      selection.projects?.map(projectId => String(projectId))\n    );\n  }\n\n  async addNewWidget() {\n    const {api, organization, newWidget, handleAddCustomWidget, onSetNewWidget} =\n      this.props;\n    if (newWidget) {\n      try {\n        await validateWidget(api, organization.slug, newWidget);\n        handleAddCustomWidget(newWidget);\n        onSetNewWidget?.();\n      } catch (error) {\n        // Don't do anything, widget isn't valid\n        addErrorMessage(error);\n      }\n    }\n  }\n\n  fetchTags() {\n    const {api, organization, selection} = this.props;\n    loadOrganizationTags(api, organization.slug, selection);\n  }\n\n  handleStartAdd = () => {\n    const {\n      organization,\n      dashboard,\n      selection,\n      handleUpdateWidgetList,\n      handleAddCustomWidget,\n      router,\n      location,\n      paramDashboardId,\n    } = this.props;\n\n    if (organization.features.includes('new-widget-builder-experience-design')) {\n      if (paramDashboardId) {\n        router.push({\n          pathname: `/organizations/${organization.slug}/dashboard/${paramDashboardId}/widget/new/`,\n          query: {\n            ...location.query,\n            source: DashboardWidgetSource.DASHBOARDS,\n          },\n        });\n        return;\n      }\n\n      router.push({\n        pathname: `/organizations/${organization.slug}/dashboards/new/widget/new/`,\n        query: {\n          ...location.query,\n          source: DashboardWidgetSource.DASHBOARDS,\n        },\n      });\n\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('dashboards_views.add_widget_modal.opened', {\n      organization,\n    });\n\n    trackAdvancedAnalyticsEvent('dashboards_views.widget_library.opened', {\n      organization,\n    });\n    openAddDashboardWidgetModal({\n      organization,\n      dashboard,\n      selection,\n      onAddWidget: handleAddCustomWidget,\n      onAddLibraryWidget: (widgets: Widget[]) => handleUpdateWidgetList(widgets),\n      source: DashboardWidgetSource.LIBRARY,\n    });\n  };\n\n  handleUpdateComplete = (prevWidget: Widget) => (nextWidget: Widget) => {\n    const {isEditing, onUpdate, handleUpdateWidgetList} = this.props;\n\n    let nextList = [...this.props.dashboard.widgets];\n    const updateIndex = nextList.indexOf(prevWidget);\n    const nextWidgetData = {\n      ...nextWidget,\n      tempId: prevWidget.tempId,\n    };\n\n    // Only modify and re-compact if the default height has changed\n    if (\n      getDefaultWidgetHeight(prevWidget.displayType) !==\n      getDefaultWidgetHeight(nextWidget.displayType)\n    ) {\n      nextList[updateIndex] = enforceWidgetHeightValues(nextWidgetData);\n      nextList = generateWidgetsAfterCompaction(nextList);\n    } else {\n      nextList[updateIndex] = nextWidgetData;\n    }\n\n    onUpdate(nextList);\n    if (!!!isEditing) {\n      handleUpdateWidgetList(nextList);\n    }\n  };\n\n  handleDeleteWidget = (widgetToDelete: Widget) => () => {\n    const {dashboard, onUpdate, isEditing, handleUpdateWidgetList} = this.props;\n\n    let nextList = dashboard.widgets.filter(widget => widget !== widgetToDelete);\n    nextList = generateWidgetsAfterCompaction(nextList);\n\n    onUpdate(nextList);\n\n    if (!!!isEditing) {\n      handleUpdateWidgetList(nextList);\n    }\n  };\n\n  handleDuplicateWidget = (widget: Widget, index: number) => () => {\n    const {dashboard, onUpdate, isEditing, handleUpdateWidgetList} = this.props;\n\n    const widgetCopy = cloneDeep(\n      assignTempId({...widget, id: undefined, tempId: undefined})\n    );\n\n    let nextList = [...dashboard.widgets];\n    nextList.splice(index, 0, widgetCopy);\n    nextList = generateWidgetsAfterCompaction(nextList);\n\n    onUpdate(nextList);\n    if (!!!isEditing) {\n      handleUpdateWidgetList(nextList);\n    }\n  };\n\n  handleEditWidget = (widget: Widget, index: number) => () => {\n    const {\n      organization,\n      dashboard,\n      selection,\n      router,\n      location,\n      paramDashboardId,\n      handleAddCustomWidget,\n      isEditing,\n    } = this.props;\n\n    if (\n      organization.features.includes('new-widget-builder-experience-design') &&\n      (!organization.features.includes('new-widget-builder-experience-modal-access') ||\n        isEditing)\n    ) {\n      if (paramDashboardId) {\n        router.push({\n          pathname: `/organizations/${organization.slug}/dashboard/${paramDashboardId}/widget/${index}/edit/`,\n          query: {\n            ...location.query,\n            source: DashboardWidgetSource.DASHBOARDS,\n          },\n        });\n        return;\n      }\n\n      router.push({\n        pathname: `/organizations/${organization.slug}/dashboards/new/widget/${index}/edit/`,\n        query: {\n          ...location.query,\n          source: DashboardWidgetSource.DASHBOARDS,\n        },\n      });\n\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('dashboards_views.edit_widget_modal.opened', {\n      organization,\n    });\n    const modalProps = {\n      organization,\n      widget,\n      selection,\n      onAddWidget: handleAddCustomWidget,\n      onUpdateWidget: this.handleUpdateComplete(widget),\n    };\n    openAddDashboardWidgetModal({\n      ...modalProps,\n      dashboard,\n      source: DashboardWidgetSource.DASHBOARDS,\n    });\n  };\n\n  getWidgetIds() {\n    return [\n      ...this.props.dashboard.widgets.map((widget, index): string => {\n        return generateWidgetId(widget, index);\n      }),\n      ADD_WIDGET_BUTTON_DRAG_ID,\n    ];\n  }\n\n  renderWidget(widget: Widget, index: number) {\n    const {isMobile, windowWidth} = this.state;\n    const {isEditing, organization, widgetLimitReached, isPreview} = this.props;\n\n    const widgetProps = {\n      widget,\n      isEditing,\n      widgetLimitReached,\n      onDelete: this.handleDeleteWidget(widget),\n      onEdit: this.handleEditWidget(widget, index),\n      onDuplicate: this.handleDuplicateWidget(widget, index),\n      isPreview,\n    };\n\n    if (organization.features.includes('dashboard-grid-layout')) {\n      const key = constructGridItemKey(widget);\n      const dragId = key;\n      return (\n        <div key={key} data-grid={widget.layout}>\n          <SortableWidget\n            {...widgetProps}\n            dragId={dragId}\n            isMobile={isMobile}\n            windowWidth={windowWidth}\n            index={String(index)}\n          />\n        </div>\n      );\n    }\n\n    const key = generateWidgetId(widget, index);\n    const dragId = key;\n    return (\n      <SortableWidget {...widgetProps} key={key} dragId={dragId} index={String(index)} />\n    );\n  }\n\n  handleLayoutChange = (_, allLayouts: Layouts) => {\n    const {isMobile} = this.state;\n    const {dashboard, onUpdate} = this.props;\n    const isNotAddButton = ({i}) => i !== ADD_WIDGET_BUTTON_DRAG_ID;\n    const newLayouts = {\n      [DESKTOP]: allLayouts[DESKTOP].filter(isNotAddButton),\n      [MOBILE]: allLayouts[MOBILE].filter(isNotAddButton),\n    };\n\n    // Generate a new list of widgets where the layouts are associated\n    let columnDepths = calculateColumnDepths(newLayouts[DESKTOP]);\n    const newWidgets = dashboard.widgets.map(widget => {\n      const gridKey = constructGridItemKey(widget);\n      let matchingLayout = newLayouts[DESKTOP].find(({i}) => i === gridKey);\n      if (!matchingLayout) {\n        const height = getDefaultWidgetHeight(widget.displayType);\n        const defaultWidgetParams = {\n          w: DEFAULT_WIDGET_WIDTH,\n          h: height,\n          minH: height,\n          i: gridKey,\n        };\n\n        // Calculate the available position\n        const [nextPosition, nextColumnDepths] = getNextAvailablePosition(\n          columnDepths,\n          height\n        );\n        columnDepths = nextColumnDepths;\n\n        // Set the position for the desktop layout\n        matchingLayout = {\n          ...defaultWidgetParams,\n          ...nextPosition,\n        };\n\n        if (isMobile) {\n          // This is a new widget and it's on the mobile page so we keep it at the bottom\n          const mobileLayout = newLayouts[MOBILE].filter(({i}) => i !== gridKey);\n          mobileLayout.push({\n            ...defaultWidgetParams,\n            ...BOTTOM_MOBILE_VIEW_POSITION,\n          });\n          newLayouts[MOBILE] = mobileLayout;\n        }\n      }\n      return {\n        ...widget,\n        layout: pickDefinedStoreKeys(matchingLayout),\n      };\n    });\n\n    this.setState({\n      layouts: newLayouts,\n    });\n    onUpdate(newWidgets);\n\n    // Force check lazyLoad elements that might have shifted into view after (re)moving an upper widget\n    // Unfortunately need to use window.setTimeout since React Grid Layout animates widgets into view when layout changes\n    // RGL doesn't provide a handler for post animation layout change\n    window.clearTimeout(this.forceCheckTimeout);\n    this.forceCheckTimeout = window.setTimeout(forceCheck, 400);\n  };\n\n  handleBreakpointChange = (newBreakpoint: string) => {\n    const {layouts} = this.state;\n    const {\n      dashboard: {widgets},\n    } = this.props;\n\n    if (newBreakpoint === MOBILE) {\n      this.setState({\n        isMobile: true,\n        layouts: {\n          ...layouts,\n          [MOBILE]: getMobileLayout(layouts[DESKTOP], widgets),\n        },\n      });\n      return;\n    }\n    this.setState({isMobile: false});\n  };\n\n  get addWidgetLayout() {\n    const {isMobile, layouts} = this.state;\n    let position: Position = BOTTOM_MOBILE_VIEW_POSITION;\n    if (!isMobile) {\n      const columnDepths = calculateColumnDepths(layouts[DESKTOP]);\n      const [nextPosition] = getNextAvailablePosition(columnDepths, 1);\n      position = nextPosition;\n    }\n\n    return {\n      ...position,\n      w: DEFAULT_WIDGET_WIDTH,\n      h: 1,\n      isResizable: false,\n    };\n  }\n\n  renderGridDashboard() {\n    const {layouts, isMobile} = this.state;\n    const {isEditing, dashboard, organization, widgetLimitReached} = this.props;\n    let {widgets} = dashboard;\n    // Filter out any issue/release widgets if the user does not have the feature flag\n    widgets = widgets.filter(({widgetType}) => {\n      if (widgetType === WidgetType.RELEASE) {\n        return organization.features.includes('dashboards-releases');\n      }\n      return true;\n    });\n\n    const columnDepths = calculateColumnDepths(layouts[DESKTOP]);\n    const widgetsWithLayout = assignDefaultLayout(widgets, columnDepths);\n\n    const canModifyLayout = !isMobile && isEditing;\n\n    return (\n      <GridLayout\n        breakpoints={BREAKPOINTS}\n        cols={COLUMNS}\n        rowHeight={ROW_HEIGHT}\n        margin={WIDGET_MARGINS}\n        draggableHandle={`.${DRAG_HANDLE_CLASS}`}\n        draggableCancel={`.${DRAG_RESIZE_CLASS}`}\n        layouts={layouts}\n        onLayoutChange={this.handleLayoutChange}\n        onBreakpointChange={this.handleBreakpointChange}\n        isDraggable={canModifyLayout}\n        isResizable={canModifyLayout}\n        resizeHandle={\n          <ResizeHandle\n            aria-label={t('Resize Widget')}\n            data-test-id=\"custom-resize-handle\"\n            className={DRAG_RESIZE_CLASS}\n            size=\"xsmall\"\n            borderless\n            icon={<IconResize size=\"xs\" />}\n          />\n        }\n        useCSSTransforms={false}\n        isBounded\n      >\n        {widgetsWithLayout.map((widget, index) => this.renderWidget(widget, index))}\n        {isEditing && !!!widgetLimitReached && (\n          <AddWidgetWrapper\n            key={ADD_WIDGET_BUTTON_DRAG_ID}\n            data-grid={this.addWidgetLayout}\n          >\n            <AddWidget onAddWidget={this.handleStartAdd} />\n          </AddWidgetWrapper>\n        )}\n      </GridLayout>\n    );\n  }\n\n  renderDndDashboard = () => {\n    const {isEditing, onUpdate, dashboard, organization, widgetLimitReached} = this.props;\n    let {widgets} = dashboard;\n    // Filter out any issue/release widgets if the user does not have the feature flag\n    widgets = widgets.filter(({widgetType}) => {\n      if (widgetType === WidgetType.RELEASE) {\n        return organization.features.includes('dashboards-releases');\n      }\n      return true;\n    });\n\n    const items = this.getWidgetIds();\n\n    return (\n      <DndContext\n        collisionDetection={closestCenter}\n        onDragEnd={({over, active}) => {\n          const activeDragId = active.id;\n          const getIndex = items.indexOf.bind(items);\n\n          const activeIndex = activeDragId ? getIndex(activeDragId) : -1;\n\n          if (over && over.id !== ADD_WIDGET_BUTTON_DRAG_ID) {\n            const overIndex = getIndex(over.id);\n            if (activeIndex !== overIndex) {\n              onUpdate(arrayMove(widgets, activeIndex, overIndex));\n            }\n          }\n        }}\n      >\n        <WidgetContainer>\n          <SortableContext items={items} strategy={rectSortingStrategy}>\n            {widgets.map((widget, index) => this.renderWidget(widget, index))}\n            {isEditing && !!!widgetLimitReached && (\n              <AddWidget onAddWidget={this.handleStartAdd} />\n            )}\n          </SortableContext>\n        </WidgetContainer>\n      </DndContext>\n    );\n  };\n\n  render() {\n    const {organization} = this.props;\n    if (organization.features.includes('dashboard-grid-layout')) {\n      return this.renderGridDashboard();\n    }\n\n    return this.renderDndDashboard();\n  }\n}\n\nexport default withApi(withPageFilters(Dashboard));\n\nconst WidgetContainer = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  grid-auto-flow: row dense;\n  gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: repeat(6, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xxlarge}) {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n`;\n\n// A widget being dragged has a z-index of 3\n// Allow the Add Widget tile to show above widgets when moved\nconst AddWidgetWrapper = styled('div')`\n  z-index: 5;\n  background-color: ${p => p.theme.background};\n`;\n\nconst GridLayout = styled(WidthProvider(Responsive))`\n  margin: -${space(2)};\n\n  .react-grid-item.react-grid-placeholder {\n    background: ${p => p.theme.purple200};\n    border-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst ResizeHandle = styled(Button)`\n  position: absolute;\n  z-index: 2;\n  bottom: ${space(0.5)};\n  right: ${space(0.5)};\n  color: ${p => p.theme.subText};\n  cursor: nwse-resize;\n\n  .react-resizable-hide & {\n    display: none;\n  }\n`;\n","import {t} from 'sentry/locale';\nimport {uniqueId} from 'sentry/utils/guid';\n\nimport {DashboardDetails, DisplayType, WidgetType} from './types';\n\ntype DashboardTemplate = DashboardDetails & {\n  description: string;\n};\n\nexport const EMPTY_DASHBOARD: DashboardDetails = {\n  id: '',\n  dateCreated: '',\n  createdBy: undefined,\n  title: t('Untitled dashboard'),\n  widgets: [],\n};\n\nexport const DASHBOARDS_TEMPLATES: DashboardTemplate[] = [\n  {\n    id: 'default-template',\n    dateCreated: '',\n    createdBy: undefined,\n    title: t('General Template'),\n    description: t('Various Frontend and Backend Widgets'),\n    widgets: [\n      {\n        title: t('Number of Errors'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: '!event.type:transaction',\n            orderby: 'count()',\n          },\n        ],\n      },\n      {\n        title: t('Number of Issues'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count_unique(issue)'],\n            aggregates: ['count_unique(issue)'],\n            columns: [],\n            conditions: '!event.type:transaction',\n            orderby: 'count_unique(issue)',\n          },\n        ],\n      },\n      {\n        title: t('Events'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 4,\n          x: 2,\n          y: 0,\n        },\n        queries: [\n          {\n            name: t('Events'),\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: '!event.type:transaction',\n            orderby: 'count()',\n          },\n        ],\n      },\n      {\n        title: t('Affected Users'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 1,\n          x: 1,\n          y: 2,\n        },\n        queries: [\n          {\n            name: t('Known Users'),\n            fields: ['count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: [],\n            conditions: 'has:user.email !event.type:transaction',\n            orderby: 'count_unique(user)',\n          },\n          {\n            name: t('Anonymous Users'),\n            fields: ['count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: [],\n            conditions: '!has:user.email !event.type:transaction',\n            orderby: 'count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Handled vs. Unhandled'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 1,\n          x: 0,\n          y: 2,\n        },\n        queries: [\n          {\n            name: t('Handled'),\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: 'error.handled:true',\n            orderby: 'count()',\n          },\n          {\n            name: t('Unhandled'),\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: 'error.handled:false',\n            orderby: 'count()',\n          },\n        ],\n      },\n      {\n        title: t('Errors by Country'),\n        displayType: DisplayType.WORLD_MAP,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 6,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: '!event.type:transaction has:geo.country_code',\n            orderby: 'count()',\n          },\n        ],\n      },\n      {\n        title: t('High Throughput Transactions'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 6,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()', 'transaction'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: '!event.type:error',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Errors by Browser'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 1,\n          x: 5,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['browser.name', 'count()'],\n            aggregates: ['count()'],\n            columns: ['browser.name'],\n            conditions: '!event.type:transaction has:browser.name',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Overall User Misery'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['user_misery(300)'],\n            aggregates: ['user_misery(300)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall Apdex'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['apdex(300)'],\n            aggregates: ['apdex(300)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('High Throughput Transactions'),\n        displayType: DisplayType.TOP_N,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'count()'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: '!event.type:error',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Issues Assigned to Me or My Teams'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.ISSUE,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 2,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['assignee', 'issue', 'title'],\n            aggregates: [],\n            columns: ['assignee', 'issue', 'title'],\n            conditions: 'assigned_or_suggested:me is:unresolved',\n            orderby: 'priority',\n          },\n        ],\n      },\n      {\n        title: t('Transactions Ordered by Misery'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          y: 6,\n          x: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'user_misery(300)'],\n            aggregates: ['user_misery(300)'],\n            columns: ['transaction'],\n            conditions: '',\n            orderby: '-user_misery(300)',\n          },\n        ],\n      },\n      {\n        title: t('Errors by Browser Over Time'),\n        displayType: DisplayType.TOP_N,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 1,\n          x: 4,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['browser.name', 'count()'],\n            aggregates: ['count()'],\n            columns: ['browser.name'],\n            conditions: 'event.type:error has:browser.name',\n            orderby: '-count()',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'frontend-template',\n    title: t('Frontend Template'),\n    dateCreated: '',\n    createdBy: undefined,\n    description: t('Erroring URLs and Web Vitals'),\n    widgets: [\n      {\n        title: t('Top 5 Issues by Unique Users Over Time'),\n        displayType: DisplayType.TOP_N,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 4,\n          x: 0,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['issue', 'count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: ['issue'],\n            conditions: '',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Errors by Browser as Percentage'),\n        displayType: DisplayType.AREA,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 9,\n        },\n        queries: [\n          {\n            name: '',\n            fields: [\n              'equation|count_if(browser.name,equals,Chrome)/count() * 100',\n              'equation|count_if(browser.name,equals,Firefox)/count() * 100',\n              'equation|count_if(browser.name,equals,Safari)/count() * 100',\n            ],\n            aggregates: [\n              'equation|count_if(browser.name,equals,Chrome)/count() * 100',\n              'equation|count_if(browser.name,equals,Firefox)/count() * 100',\n              'equation|count_if(browser.name,equals,Safari)/count() * 100',\n            ],\n            columns: [],\n            conditions: 'has:browser.name',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Issues Assigned to Me or My Teams'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.ISSUE,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['assignee', 'issue', 'title'],\n            aggregates: [],\n            columns: ['assignee', 'issue', 'title'],\n            conditions: 'assigned_or_suggested:me is:unresolved',\n            orderby: 'priority',\n          },\n        ],\n      },\n      {\n        title: t('Top 5 Issues by Unique Users'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 3,\n          minH: 2,\n          w: 4,\n          x: 0,\n          y: 6,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['issue', 'count_unique(user)', 'title'],\n            aggregates: ['count_unique(user)'],\n            columns: ['issue', 'title'],\n            conditions: '',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('URLs grouped by Issue'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 5,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 8,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['http.url', 'issue', 'count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: ['http.url', 'issue'],\n            conditions: 'event.type:error',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Transactions 404ing'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 2,\n          y: 9,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'count()'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'transaction.status:not_found',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Layout Shift Over Time'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 1,\n          x: 2,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.cls)'],\n            aggregates: ['p75(measurements.cls)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('LCP by Country'),\n        displayType: DisplayType.WORLD_MAP,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 2,\n          x: 2,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.lcp)'],\n            aggregates: ['p75(measurements.lcp)'],\n            columns: [],\n            conditions: 'has:geo.country_code',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Page Load Over Time'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 1,\n          x: 3,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.lcp)', 'p75(measurements.fcp)'],\n            aggregates: ['p75(measurements.lcp)', 'p75(measurements.fcp)'],\n            columns: [],\n            conditions: 'transaction.op:pageload',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Slowest Pageloads'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'count()'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'transaction.op:pageload p75(measurements.lcp):>4s',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Overall LCP'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.lcp)'],\n            aggregates: ['p75(measurements.lcp)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Slow Page Navigations'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'count()'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'transaction.duration:>2s',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Overall FCP'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.fcp)'],\n            aggregates: ['p75(measurements.fcp)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall CLS'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.cls)'],\n            aggregates: ['p75(measurements.cls)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall FID'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.fid)'],\n            aggregates: ['p75(measurements.fid)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'backend-template',\n    title: t('Backend Template'),\n    dateCreated: '',\n    createdBy: undefined,\n    description: t('Issues and Performance'),\n    widgets: [\n      {\n        title: t('Top 5 Issues by Unique Users Over Time'),\n        displayType: DisplayType.TOP_N,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 6,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['issue', 'count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: ['issue'],\n            conditions: '',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Transactions Erroring Over Time'),\n        displayType: DisplayType.TOP_N,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 4,\n          x: 2,\n          y: 8,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'count()'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'transaction.status:internal_error',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Erroring Transactions by Percentage'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 5,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 10,\n        },\n        queries: [\n          {\n            name: '',\n            fields: [\n              'equation|count_if(transaction.status,equals,internal_error) / count() * 100',\n              'transaction',\n              'count_if(transaction.status,equals,internal_error)',\n              'count()',\n            ],\n            aggregates: [\n              'equation|count_if(transaction.status,equals,internal_error) / count() * 100',\n              'count_if(transaction.status,equals,internal_error)',\n              'count()',\n            ],\n            columns: ['transaction'],\n            conditions: 'count():>100',\n            orderby: '-equation[0]',\n          },\n        ],\n      },\n      {\n        title: t('Top 5 Issues by Unique Users'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 5,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 10,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['issue', 'count_unique(user)', 'title'],\n            aggregates: ['count_unique(user)'],\n            columns: ['issue', 'title'],\n            conditions: '',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Transactions Erroring'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 5,\n          minH: 2,\n          w: 2,\n          x: 2,\n          y: 10,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()', 'transaction'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'transaction.status:internal_error',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Issues Assigned to Me or My Teams'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.ISSUE,\n        tempId: uniqueId(),\n        layout: {\n          h: 7,\n          minH: 2,\n          w: 6,\n          x: 0,\n          y: 15,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['assignee', 'issue', 'title'],\n            aggregates: [],\n            columns: ['assignee', 'issue', 'title'],\n            conditions: 'assigned_or_suggested:me is:unresolved',\n            orderby: 'priority',\n          },\n        ],\n      },\n      {\n        title: t('p75 Over Time'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 4,\n          x: 2,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(transaction.duration)'],\n            aggregates: ['p75(transaction.duration)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Throughput (Events Per Minute)'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 4,\n          x: 2,\n          y: 0,\n        },\n        queries: [\n          {\n            name: 'Transactions',\n            fields: ['epm()'],\n            aggregates: ['epm()'],\n            columns: [],\n            conditions: 'event.type:transaction',\n            orderby: '',\n          },\n          {\n            name: 'Errors',\n            fields: ['epm()'],\n            aggregates: ['epm()'],\n            columns: [],\n            conditions: 'event.type:error',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Tasks Transactions with Poor Apdex'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 2,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()', 'transaction'],\n            aggregates: ['count()'],\n            columns: ['transaction'],\n            conditions: 'apdex():<0.5 transaction.op:*task*',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('HTTP Transactions with Poor Apdex'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 4,\n          x: 2,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['epm()', 'http.method', 'http.status_code', 'transaction'],\n            aggregates: ['epm()'],\n            columns: ['http.method', 'http.status_code', 'transaction'],\n            conditions:\n              'apdex():<0.5 transaction.op:*http* has:http.method has:http.status_code',\n            orderby: '-epm()',\n          },\n        ],\n      },\n      {\n        title: t('Overall Apdex'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['apdex(300)'],\n            aggregates: ['apdex(300)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall Duration'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(transaction.duration)'],\n            aggregates: ['p75(transaction.duration)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall HTTP Spans'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(spans.http)'],\n            aggregates: ['p75(spans.http)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall DB Spans'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(spans.db)'],\n            aggregates: ['p75(spans.db)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'mobile-template',\n    title: t('Mobile Template'),\n    dateCreated: '',\n    createdBy: undefined,\n    description: t('Crash Details and Performance Vitals'),\n    widgets: [\n      {\n        title: t('Total Crashes'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: 'error.handled:false event.type:error',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Unique Users Who Crashed'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count_unique(user)'],\n            aggregates: ['count_unique(user)'],\n            columns: [],\n            conditions: 'error.handled:false event.type:error',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Unique Issues Causing Crashes'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 2,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count_unique(issue)'],\n            aggregates: ['count_unique(issue)'],\n            columns: [],\n            conditions: 'error.handled:false event.type:error',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall Number of Errors'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 3,\n          y: 0,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['count()'],\n            aggregates: ['count()'],\n            columns: [],\n            conditions: 'event.type:error',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Issues Causing Crashes'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 3,\n          x: 0,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['issue', 'count()', 'count_unique(user)'],\n            aggregates: ['count()', 'count_unique(user)'],\n            columns: ['issue'],\n            conditions: 'error.handled:false',\n            orderby: '-count_unique(user)',\n          },\n        ],\n      },\n      {\n        title: t('Crashes Over Time'),\n        displayType: DisplayType.LINE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 3,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 0,\n        },\n        queries: [\n          {\n            name: t('Crashes'),\n            fields: ['count()', 'count_unique(user)'],\n            aggregates: ['count()', 'count_unique(user)'],\n            columns: [],\n            conditions: 'error.handled:false',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Crashes by OS'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 2,\n          minH: 2,\n          w: 1,\n          x: 3,\n          y: 1,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['os', 'count()'],\n            aggregates: ['count()'],\n            columns: ['os'],\n            conditions: 'has:os error.handled:false',\n            orderby: '-count()',\n          },\n        ],\n      },\n      {\n        title: t('Overall Warm Startup Time'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 0,\n          y: 3,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.app_start_warm)'],\n            aggregates: ['p75(measurements.app_start_warm)'],\n            columns: [],\n            conditions: 'has:measurements.app_start_warm',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall Cold Startup Time'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 2,\n          y: 3,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.app_start_cold)'],\n            aggregates: ['p75(measurements.app_start_cold)'],\n            columns: [],\n            conditions: 'has:measurements.app_start_cold',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Warm Startup Times'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 0,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'p75(measurements.app_start_warm)'],\n            aggregates: ['p75(measurements.app_start_warm)'],\n            columns: ['transaction'],\n            conditions: 'has:measurements.app_start_warm',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Cold Startup Times'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 2,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'p75(measurements.app_start_cold)'],\n            aggregates: ['p75(measurements.app_start_cold)'],\n            columns: ['transaction'],\n            conditions: 'has:measurements.app_start_cold',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Overall Frozen Frames'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 4,\n          y: 3,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['p75(measurements.frames_frozen_rate)'],\n            aggregates: ['p75(measurements.frames_frozen_rate)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Max Warm Startup Time'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 1,\n          y: 3,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['max(measurements.app_start_warm)'],\n            aggregates: ['max(measurements.app_start_warm)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Max Cold Startup Time'),\n        displayType: DisplayType.BIG_NUMBER,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 1,\n          minH: 1,\n          w: 1,\n          x: 3,\n          y: 3,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['max(measurements.app_start_cold)'],\n            aggregates: ['max(measurements.app_start_cold)'],\n            columns: [],\n            conditions: '',\n            orderby: '',\n          },\n        ],\n      },\n      {\n        title: t('Frozen Frames Rate'),\n        displayType: DisplayType.TABLE,\n        interval: '5m',\n        widgetType: WidgetType.DISCOVER,\n        tempId: uniqueId(),\n        layout: {\n          h: 4,\n          minH: 2,\n          w: 2,\n          x: 4,\n          y: 4,\n        },\n        queries: [\n          {\n            name: '',\n            fields: ['transaction', 'p75(measurements.frames_frozen_rate)'],\n            aggregates: ['p75(measurements.frames_frozen_rate)'],\n            columns: ['transaction'],\n            conditions: 'has:measurements.frames_frozen_rate',\n            orderby: '-p75(measurements.frames_frozen_rate)',\n          },\n        ],\n      },\n    ],\n  },\n];\n\nexport const DISPLAY_TYPE_CHOICES = [\n  {label: t('Area Chart'), value: 'area'},\n  {label: t('Bar Chart'), value: 'bar'},\n  {label: t('Line Chart'), value: 'line'},\n  {label: t('Table'), value: 'table'},\n  {label: t('World Map'), value: 'world_map'},\n  {label: t('Big Number'), value: 'big_number'},\n  {label: t('Top 5 Events'), value: 'top_n'},\n];\n\nexport const INTERVAL_CHOICES = [\n  {label: t('1 Minute'), value: '1m'},\n  {label: t('5 Minutes'), value: '5m'},\n  {label: t('15 Minutes'), value: '15m'},\n  {label: t('30 Minutes'), value: '30m'},\n  {label: t('1 Hour'), value: '1h'},\n  {label: t('1 Day'), value: '1d'},\n];\n\nexport const DEFAULT_STATS_PERIOD = '24h';\n"],"names":["SPAN_OP_BREAKDOWN_FIELDS","DRAG_HANDLE_CLASS","DESKTOP","MOBILE","NUM_DESKTOP_COLS","WIDGET_MARGINS","BOTTOM_MOBILE_VIEW_POSITION","x","y","Number","MAX_SAFE_INTEGER","MOBILE_BREAKPOINT","parseInt","theme","BREAKPOINTS","COLUMNS","Dashboard","Component","constructor","props","super","undefined","debounce","this","setState","windowWidth","window","innerWidth","organization","dashboard","selection","handleUpdateWidgetList","handleAddCustomWidget","router","location","paramDashboardId","features","includes","push","pathname","slug","query","source","DashboardWidgetSource","trackAdvancedAnalyticsEvent","openAddDashboardWidgetModal","onAddWidget","onAddLibraryWidget","widgets","prevWidget","nextWidget","isEditing","onUpdate","nextList","updateIndex","indexOf","nextWidgetData","tempId","getDefaultWidgetHeight","displayType","enforceWidgetHeightValues","generateWidgetsAfterCompaction","widgetToDelete","filter","widget","index","widgetCopy","cloneDeep","assignTempId","id","splice","modalProps","onUpdateWidget","handleUpdateComplete","_","allLayouts","isMobile","state","isNotAddButton","i","ADD_WIDGET_BUTTON_DRAG_ID","newLayouts","columnDepths","calculateColumnDepths","newWidgets","map","gridKey","constructGridItemKey","matchingLayout","find","height","defaultWidgetParams","w","DEFAULT_WIDGET_WIDTH","h","minH","nextPosition","nextColumnDepths","getNextAvailablePosition","mobileLayout","layout","pickDefinedStoreKeys","layouts","clearTimeout","forceCheckTimeout","setTimeout","forceCheck","newBreakpoint","getMobileLayout","widgetLimitReached","widgetType","WidgetType","items","getWidgetIds","collisionDetection","closestCenter","onDragEnd","over","active","activeDragId","getIndex","bind","activeIndex","overIndex","arrayMove","WidgetContainer","strategy","rectSortingStrategy","renderWidget","handleStartAdd","isUsingGrid","desktopLayout","getDashboardLayout","dashboardLayout","isEqual","componentDidMount","newWidget","addEventListener","debouncedHandleResize","fetchTags","addNewWidget","fetchMemberList","componentDidUpdate","prevProps","projects","componentWillUnmount","removeEventListener","api","fetchOrgMembers","projectId","String","onSetNewWidget","validateWidget","error","addErrorMessage","loadOrganizationTags","generateWidgetId","isPreview","widgetProps","onDelete","handleDeleteWidget","onEdit","handleEditWidget","onDuplicate","handleDuplicateWidget","key","dragId","addWidgetLayout","position","isResizable","renderGridDashboard","widgetsWithLayout","assignDefaultLayout","canModifyLayout","GridLayout","breakpoints","cols","rowHeight","margin","draggableHandle","draggableCancel","onLayoutChange","handleLayoutChange","onBreakpointChange","handleBreakpointChange","isDraggable","resizeHandle","ResizeHandle","t","className","size","borderless","icon","useCSSTransforms","isBounded","AddWidgetWrapper","render","renderDndDashboard","withApi","withPageFilters","space","p","medium","xlarge","xxlarge","background","WidthProvider","Responsive","purple200","borderRadius","Button","subText","EMPTY_DASHBOARD","dateCreated","createdBy","title","DASHBOARDS_TEMPLATES","description","DisplayType","interval","uniqueId","queries","name","fields","aggregates","columns","conditions","orderby","DISPLAY_TYPE_CHOICES","label","value","DEFAULT_STATS_PERIOD"],"sourceRoot":""}