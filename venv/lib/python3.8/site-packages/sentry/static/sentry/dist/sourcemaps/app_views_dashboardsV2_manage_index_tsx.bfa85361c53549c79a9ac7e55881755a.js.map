{"version":3,"file":"chunks/app_views_dashboardsV2_manage_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/dropdownControl.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardCard.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/area.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/bar.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/line.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/number.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/table.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/chartPreviews/world.tsx","webpack:///./app/views/dashboardsV2/manage/gridPreview/index.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardList.tsx","webpack:///./app/views/dashboardsV2/manage/templateCard.tsx","webpack:///./app/views/dashboardsV2/manage/utils.tsx","webpack:///./app/views/dashboardsV2/manage/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconSentry} from 'sentry/icons';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  className?: string;\n  size?: number;\n  user?: AvatarUser;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport DropdownBubble from 'sentry/components/dropdownBubble';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport DropdownMenu, {\n  GetActorPropsFn,\n  GetMenuPropsFn,\n} from 'sentry/components/dropdownMenu';\nimport MenuItem from 'sentry/components/menuItem';\nimport Tooltip from 'sentry/components/tooltip';\n\ntype ButtonPriority = React.ComponentProps<typeof DropdownButton>['priority'];\n\ntype DefaultProps = {\n  /**\n   * Should the menu contents always be rendered?  Defaults to true.\n   * Set to false to have menu contents removed from the DOM on close.\n   */\n  alwaysRenderMenu: boolean;\n  /**\n   * Width of the menu. Defaults to 100% of the button width.\n   */\n  menuWidth: string;\n};\n\ntype ChildrenArgs = {\n  getMenuProps: GetMenuPropsFn;\n  isOpen: boolean;\n};\n\ntype ButtonArgs = {\n  getActorProps: GetActorPropsFn;\n  isOpen: boolean;\n};\n\ntype Props = DefaultProps & {\n  children:\n    | ((args: ChildrenArgs) => React.ReactElement)\n    | React.ReactElement\n    | Array<React.ReactElement>;\n  /**\n   * Align the dropdown menu to the right. (Default aligns to left)\n   */\n  alignRight?: boolean;\n  /**\n   * This makes the dropdown menu blend (e.g. corners are not rounded) with its\n   * actor (opener) component\n   */\n  blendWithActor?: boolean;\n  /**\n   * A closure that returns a styled button. Function will get {isOpen, getActorProps}\n   * as arguments. Use this if you need to style/replace the dropdown button.\n   */\n  button?: (args: ButtonArgs) => React.ReactNode;\n  /**\n   * Props to pass to DropdownButton\n   */\n  buttonProps?: React.ComponentProps<typeof DropdownButton>;\n  /**\n   * Tooltip to show on button when dropdown isn't open\n   */\n  buttonTooltipTitle?: string | null;\n  className?: string;\n  detached?: boolean;\n  fullWidth?: boolean;\n\n  /**\n   * String or element for the button contents.\n   */\n  label?: NonNullable<React.ReactNode>;\n\n  priority?: ButtonPriority;\n};\n\n/*\n * A higher level dropdown component that helps with building complete dropdowns\n * including the button + menu options. Use the `button` or `label` prop to set\n * the button content and `children` to provide menu options.\n */\nclass DropdownControl extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    alwaysRenderMenu: true,\n    menuWidth: '100%',\n  };\n\n  renderButton(isOpen: boolean, getActorProps: GetActorPropsFn) {\n    const {\n      label,\n      button,\n      buttonProps,\n      buttonTooltipTitle,\n      priority,\n      detached,\n      fullWidth,\n    } = this.props;\n\n    if (button) {\n      return button({isOpen, getActorProps});\n    }\n\n    if (buttonTooltipTitle && !isOpen) {\n      return (\n        <Tooltip skipWrapper position=\"top\" title={buttonTooltipTitle}>\n          <StyledDropdownButton\n            priority={priority}\n            {...getActorProps(buttonProps)}\n            isOpen={isOpen}\n            data-test-id=\"dropdown-control-button\"\n            detached={detached}\n            hideBottomBorder={!detached}\n            rightAlignChevron={fullWidth ?? false}\n          >\n            {label}\n          </StyledDropdownButton>\n        </Tooltip>\n      );\n    }\n\n    return (\n      <StyledDropdownButton\n        priority={priority}\n        {...getActorProps(buttonProps)}\n        isOpen={isOpen}\n        data-test-id=\"dropdown-control-button\"\n        detached={detached}\n        hideBottomBorder={!detached}\n        rightAlignChevron={fullWidth ?? false}\n      >\n        {label}\n      </StyledDropdownButton>\n    );\n  }\n\n  renderChildren(isOpen: boolean, getMenuProps: GetMenuPropsFn) {\n    const {children, alignRight, menuWidth, blendWithActor, priority, detached} =\n      this.props;\n\n    if (typeof children === 'function') {\n      return children({isOpen, getMenuProps});\n    }\n\n    const alignMenu = alignRight ? 'right' : 'left';\n\n    return (\n      <Content\n        {...getMenuProps()}\n        priority={priority}\n        alignMenu={alignMenu}\n        width={menuWidth}\n        isOpen={isOpen}\n        blendWithActor={blendWithActor}\n        detached={detached}\n        blendCorner\n        data-test-id=\"dropdown-control\"\n      >\n        {children}\n      </Content>\n    );\n  }\n\n  render() {\n    const {alwaysRenderMenu, className, fullWidth} = this.props;\n\n    return (\n      <Container className={className} fullWidth={fullWidth ?? false}>\n        <DropdownMenu alwaysRenderMenu={alwaysRenderMenu}>\n          {({isOpen, getMenuProps, getActorProps}) => (\n            <Fragment>\n              {this.renderButton(isOpen, getActorProps)}\n              {this.renderChildren(isOpen, getMenuProps)}\n            </Fragment>\n          )}\n        </DropdownMenu>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled('div')<{fullWidth: boolean}>`\n  display: inline-block;\n  position: relative;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: ${p => p.fullWidth && '100%'};\n  }\n`;\n\nconst StyledDropdownButton = styled(DropdownButton)`\n  z-index: ${p => p.theme.zIndex.dropdownAutocomplete.actor};\n  white-space: nowrap;\n`;\n\nconst Content = styled(DropdownBubble)<{isOpen: boolean; priority?: ButtonPriority}>`\n  display: ${p => (p.isOpen ? 'block' : 'none')};\n  border-color: ${p => p.theme.button[p.priority || 'form'].border};\n`;\n\nconst DropdownItem = styled(MenuItem)`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default DropdownControl;\nexport {DropdownItem, Content};\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport ActivityAvatar from 'sentry/components/activity/item/avatar';\nimport Card from 'sentry/components/card';\nimport Link, {LinkProps} from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {User} from 'sentry/types';\n\ninterface Props {\n  detail: React.ReactNode;\n  renderWidgets: () => React.ReactNode;\n  title: string;\n  to: LinkProps['to'];\n  createdBy?: User;\n  dateStatus?: React.ReactNode;\n  onEventClick?: () => void;\n  renderContextMenu?: () => void;\n}\n\nfunction DashboardCard({\n  title,\n  detail,\n  createdBy,\n  renderWidgets,\n  dateStatus,\n  to,\n  onEventClick,\n  renderContextMenu,\n}: Props) {\n  function onClick() {\n    onEventClick?.();\n  }\n\n  return (\n    <Link data-test-id={`card-${title}`} onClick={onClick} to={to}>\n      <StyledDashboardCard interactive>\n        <CardHeader>\n          <CardContent>\n            <Title>{title}</Title>\n            <Detail>{detail}</Detail>\n          </CardContent>\n          <AvatarWrapper>\n            {createdBy ? (\n              <ActivityAvatar type=\"user\" user={createdBy} size={34} />\n            ) : (\n              <ActivityAvatar type=\"system\" size={34} />\n            )}\n          </AvatarWrapper>\n        </CardHeader>\n        <CardBody>{renderWidgets()}</CardBody>\n        <CardFooter>\n          <DateSelected>\n            {dateStatus ? (\n              <DateStatus>\n                {t('Created')} {dateStatus}\n              </DateStatus>\n            ) : (\n              <DateStatus />\n            )}\n          </DateSelected>\n          {renderContextMenu && renderContextMenu()}\n        </CardFooter>\n      </StyledDashboardCard>\n    </Link>\n  );\n}\n\nconst AvatarWrapper = styled('span')`\n  border: 3px solid ${p => p.theme.border};\n  border-radius: 50%;\n  height: min-content;\n`;\n\nconst CardContent = styled('div')`\n  flex-grow: 1;\n  overflow: hidden;\n  margin-right: ${space(1)};\n`;\n\nconst StyledDashboardCard = styled(Card)`\n  justify-content: space-between;\n  height: 100%;\n  &:focus,\n  &:hover {\n    top: -1px;\n  }\n`;\n\nconst CardHeader = styled('div')`\n  display: flex;\n  padding: ${space(1.5)} ${space(2)};\n`;\n\nconst Title = styled('div')`\n  ${p => p.theme.text.cardTitle};\n  color: ${p => p.theme.headingColor};\n  ${p => p.theme.overflowEllipsis};\n  font-weight: normal;\n`;\n\nconst Detail = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  ${p => p.theme.overflowEllipsis};\n  line-height: 1.5;\n`;\n\nconst CardBody = styled('div')`\n  background: ${p => p.theme.gray100};\n  padding: ${space(1.5)} ${space(2)};\n  max-height: 150px;\n  min-height: 150px;\n  overflow: hidden;\n  border-bottom: 1px solid ${p => p.theme.gray100};\n`;\n\nconst CardFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n`;\n\nconst DateSelected = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  display: grid;\n  grid-column-gap: ${space(1)};\n  color: ${p => p.theme.textColor};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst DateStatus = styled('span')`\n  color: ${p => p.theme.subText};\n  padding-left: ${space(1)};\n`;\n\nexport default DashboardCard;\n","const AreaPreview = () => (\n  <svg\n    viewBox=\"0 0 141 54\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"none\"\n    fill=\"#7A5088\"\n    height=\"100%\"\n    width=\"100%\"\n  >\n    <path d=\"M2.26227 35.6709L0.634504 36.3101C0.251737 36.4604 0 36.8297 0 37.2409V53.4999H141V29.4595C141 28.6274 140.043 28.1593 139.386 28.6701L137.983 29.7615C137.914 29.8147 137.839 29.8588 137.759 29.8927L135.579 30.8175C135.26 30.9527 134.894 30.9133 134.611 30.7135L132.483 29.2098C132.332 29.1029 132.154 29.04 131.969 29.0284L129.438 28.8694L127.322 29.0024C126.903 29.0287 126.512 28.7907 126.343 28.4064L124.091 23.2778C123.922 22.8935 123.532 22.6555 123.113 22.6818L120.996 22.8148L118.183 22.8589L116.15 23.0186C115.691 23.0546 115.267 22.7731 115.122 22.3364L112.643 14.861C112.585 14.6867 112.481 14.5318 112.341 14.4131L110.025 12.4493C109.842 12.2937 109.721 12.0772 109.684 11.8394L108.11 1.6537C107.931 0.49521 106.248 0.537142 106.127 1.70311L104.166 20.5854C104.133 20.9032 103.95 21.1861 103.673 21.3467L101.591 22.5566C101.402 22.6667 101.182 22.7115 100.964 22.6842L99.18 22.46C98.763 22.4077 98.3577 22.6216 98.1657 22.9955L96.1641 26.8938C95.8983 27.4114 95.2484 27.5937 94.7522 27.2898L93.231 26.358C92.993 26.2122 92.7051 26.1725 92.4366 26.2484L90.2795 26.8583C90.1247 26.902 89.9827 26.9825 89.8657 27.0928L87.23 29.5765L84.6583 31.5556C84.5005 31.6771 84.3099 31.7487 84.1111 31.7612L81.7501 31.9095C81.6521 31.9157 81.5537 31.9074 81.4581 31.8849L79.4409 31.4096C79.0461 31.3166 78.7466 30.9944 78.6827 30.5939L75.9745 13.6223L74.5599 8.06798C74.2838 6.98384 72.7073 7.10199 72.5958 8.21517L70.5555 28.5961C70.4717 29.4331 69.455 29.799 68.8571 29.2074L67.9265 28.2866C67.6816 28.0442 67.3292 27.9451 66.9939 28.0241L64.719 28.56L61.9051 28.9136L59.4599 28.9904C59.222 28.9979 58.9892 28.9202 58.8034 28.7714L57.0052 27.331C56.5953 27.0027 56.0012 27.0474 55.6451 27.4333L53.6144 29.634C53.5151 29.7417 53.3932 29.8262 53.2576 29.8816L51.0706 30.7746C50.8031 30.8838 50.5016 30.8721 50.2435 30.7423L48.0111 29.6204C47.8953 29.5622 47.7694 29.5271 47.6403 29.517L45.1927 29.3248C45.0797 29.3159 44.966 29.3263 44.8564 29.3555L43.2792 29.7767C42.7063 29.9296 42.1269 29.5534 42.0337 28.9678L40.5266 19.5066C40.3491 18.3925 38.7502 18.3792 38.5542 19.4903L36.7215 29.8811C36.6392 30.3473 36.2413 30.692 35.7681 30.7069L33.9648 30.7636C33.8338 30.7677 33.7033 30.746 33.5807 30.6998L31.1536 29.7849C31.0211 29.7349 30.8795 29.7137 30.7382 29.7226L28.2326 29.8799C28.1701 29.8838 28.1074 29.8819 28.0453 29.8741L25.4955 29.5538C25.3825 29.5396 25.2728 29.5062 25.1711 29.4551L23.0146 28.3713C22.702 28.2141 22.3299 28.2318 22.0336 28.418L19.7881 29.8286C19.7276 29.8666 19.6632 29.8981 19.5959 29.9224L16.8832 30.9024L14.2479 31.6887C14.1299 31.7239 14.0064 31.7371 13.8837 31.7274L11.5726 31.546C11.3663 31.5298 11.1701 31.45 11.0111 31.3176L8.53176 29.2538C8.47187 29.204 8.40637 29.1613 8.33657 29.1266L5.15937 27.5497C4.54335 27.244 3.80971 27.6369 3.72281 28.3191L2.88876 34.8665C2.84259 35.229 2.60239 35.5374 2.26227 35.6709Z\" />\n  </svg>\n);\n\nexport default AreaPreview;\n","const BarPreview = () => (\n  <svg\n    viewBox=\"0 0 140 48\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"none\"\n    fill=\"#B85586\"\n    height=\"100%\"\n    width=\"100%\"\n  >\n    <rect width=\"8\" height=\"22\" transform=\"matrix(-1 0 0 1 129 26)\" />\n    <rect width=\"8\" height=\"40\" transform=\"matrix(-1 0 0 1 107 8)\" />\n    <rect width=\"8\" height=\"26\" transform=\"matrix(-1 0 0 1 85 22)\" />\n    <rect width=\"8\" height=\"29\" transform=\"matrix(-1 0 0 1 63 19)\" />\n    <rect width=\"8\" height=\"40\" transform=\"matrix(-1 0 0 1 41 8)\" />\n    <rect width=\"8\" height=\"29\" transform=\"matrix(-1 0 0 1 19 19)\" />\n    <rect width=\"8\" height=\"29\" transform=\"matrix(-1 0 0 1 118 19)\" />\n    <rect width=\"8\" height=\"35\" transform=\"matrix(-1 0 0 1 140 13)\" />\n    <rect width=\"8\" height=\"35\" transform=\"matrix(-1 0 0 1 96 13)\" />\n    <rect width=\"8\" height=\"35\" transform=\"matrix(-1 0 0 1 74 13)\" />\n    <rect width=\"8\" height=\"40\" transform=\"matrix(-1 0 0 1 52 8)\" />\n    <rect width=\"8\" height=\"48\" transform=\"matrix(-1 0 0 1 30 0)\" />\n    <rect width=\"8\" height=\"22\" transform=\"matrix(-1 0 0 1 8 26)\" />\n  </svg>\n);\n\nexport default BarPreview;\n","const LinePreview = () => (\n  <svg\n    viewBox=\"0 0 143 48\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"none\"\n    fill=\"none\"\n    stroke=\"#E9626E\"\n    strokeWidth=\"1\"\n    height=\"100%\"\n    width=\"100%\"\n  >\n    <path\n      vectorEffect=\"non-scaling-stroke\"\n      d=\"M142 37.4345C142 37.0233 141.748 36.654 141.365 36.5037L139.738 35.8645C139.398 35.731 139.157 35.4226 139.111 35.0601L138.277 28.5127C138.19 27.8305 137.457 27.4376 136.841 27.7433L133.663 29.3202C133.594 29.3549 133.528 29.3976 133.468 29.4474L130.989 31.5112C130.83 31.6436 130.634 31.7234 130.427 31.7396L128.116 31.921C127.994 31.9307 127.87 31.9175 127.752 31.8823L125.117 31.096L122.404 30.116C122.337 30.0917 122.272 30.0602 122.212 30.0222L119.966 28.6116C119.67 28.4254 119.298 28.4077 118.985 28.5649L116.829 29.6487C116.727 29.6998 116.617 29.7332 116.504 29.7474L113.955 30.0677C113.893 30.0755 113.83 30.0774 113.767 30.0735L111.262 29.9162C111.121 29.9073 110.979 29.9286 110.846 29.9785L108.419 30.8934C108.297 30.9396 108.166 30.9613 108.035 30.9572L106.232 30.9005C105.759 30.8856 105.361 30.5409 105.279 30.0747L103.446 19.6839C103.25 18.5728 101.651 18.5861 101.473 19.7003L99.9663 29.1614C99.8731 29.747 99.2937 30.1232 98.7208 29.9703L97.1436 29.5491C97.034 29.5199 96.9203 29.5095 96.8073 29.5184L94.3597 29.7106C94.2306 29.7207 94.1047 29.7558 93.9889 29.814L91.7565 30.9359C91.4984 31.0657 91.1969 31.0774 90.9294 30.9682L88.7424 30.0752C88.6068 30.0198 88.4849 29.9353 88.3856 29.8276L86.3549 27.6269C85.9988 27.241 85.4047 27.1963 84.9948 27.5246L83.1966 28.965C83.0108 29.1138 82.778 29.1915 82.5401 29.184L80.0949 29.1072L77.281 28.7536L75.0061 28.2177C74.6708 28.1387 74.3184 28.2379 74.0735 28.4802L73.1429 29.401C72.545 29.9926 71.5283 29.6267 71.4445 28.7898L69.4042 8.40878C69.2927 7.29559 67.7162 7.17744 67.4401 8.26158L66.0255 13.8159L63.3173 30.7875C63.2534 31.188 62.9539 31.5102 62.5591 31.6032L60.5419 32.0785C60.4463 32.101 60.3479 32.1093 60.2499 32.1031L57.8889 31.9548C57.6901 31.9423 57.4995 31.8707 57.3417 31.7492L54.77 29.7701L52.1343 27.2864C52.0173 27.1761 51.8753 27.0956 51.7205 27.0519L49.5634 26.442C49.2949 26.3661 49.007 26.4058 48.769 26.5516L47.2478 27.4834C46.7516 27.7873 46.1017 27.605 45.8359 27.0874L43.8343 23.1891C43.6423 22.8152 43.237 22.6013 42.82 22.6537L41.0358 22.8778C40.8184 22.9051 40.5981 22.8603 40.4087 22.7502L38.3265 21.5403C38.0502 21.3797 37.8673 21.0968 37.8343 20.779L35.873 1.89671C35.7519 0.730746 34.0692 0.688813 33.8901 1.8473L32.316 12.033C32.2793 12.2708 32.1581 12.4873 31.9746 12.643L29.6592 14.6067C29.5192 14.7254 29.4146 14.8803 29.3569 15.0546L26.8779 22.53C26.7331 22.9667 26.309 23.2482 25.8504 23.2122L23.8174 23.0525L21.0036 23.0084L18.8871 22.8754C18.4682 22.8491 18.0775 23.0871 17.9088 23.4714L15.6568 28.6C15.488 28.9843 15.0973 29.2223 14.6784 29.196L12.562 29.063L10.031 29.222C9.84604 29.2337 9.66792 29.2965 9.51657 29.4034L7.38901 30.9071C7.10625 31.1069 6.74022 31.1463 6.42143 31.0111L4.24069 30.0863C4.16083 30.0524 4.08569 30.0083 4.01721 29.9551L2.61389 28.8637C1.95703 28.3529 1 28.821 1 29.6531\"\n    />\n  </svg>\n);\n\nexport default LinePreview;\n","const NumberPreview = () => (\n  <svg\n    viewBox=\"0 0 70 17\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"#444674\"\n    preserveAspectRatio=\"none\"\n    height=\"100%\"\n    width=\"100%\"\n  >\n    <rect width=\"50\" height=\"16\" rx=\"1\" />\n  </svg>\n);\n\nexport default NumberPreview;\n","const TablePreview = () => (\n  <svg\n    height=\"155px\"\n    width=\"100%\"\n    viewBox=\"0 0 157 155\"\n    preserveAspectRatio=\"none\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <rect width=\"157\" height=\"13\" fill=\"#B5AEE2\" />\n    <rect x=\"8\" y=\"6\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#9086D4\" />\n    <rect x=\"8\" y=\"21\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"30\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"39\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"92\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"101\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"110\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"119\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"92\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"101\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"110\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"119\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"128\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"137\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"146\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"128\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"137\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"146\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"92\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"101\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"110\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"119\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"128\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"137\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"146\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"92\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"101\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"110\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"119\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"128\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"137\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"146\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"48\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"6\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#9086D4\" />\n    <rect x=\"137\" y=\"21\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"30\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"39\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"48\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"57\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"66\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"75\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"8\" y=\"84\" width=\"42\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"57\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"66\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"75\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"137\" y=\"84\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"6\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#9086D4\" />\n    <rect x=\"119\" y=\"21\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"30\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"39\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"48\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"57\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"66\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"75\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"119\" y=\"84\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"6\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#9086D4\" />\n    <rect x=\"101\" y=\"21\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"30\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"39\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"48\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"57\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"66\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"75\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n    <rect x=\"101\" y=\"84\" width=\"12\" height=\"2\" rx=\"1\" fill=\"#D4D1EC\" />\n  </svg>\n);\n\nexport default TablePreview;\n","const WorldPreview = () => (\n  <svg\n    viewBox=\"0 0 114 60\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    fill=\"#F58C46\"\n    height=\"100%\"\n    width=\"100%\"\n  >\n    <path d=\"M57.8558 18.4466C52.0785 18.6424 51.0434 20.1569 48.0204 24.7781C47.3779 25.8678 47.6903 25.494 47.9267 26.2094C48.1047 27.46 47.1831 28.6647 47.7647 29.7706C48.9378 31.105 50.0765 33.7717 53.5811 33.0027C55.5732 32.1681 55.4722 31.9141 56.8244 33.2641C59.2059 32.7492 57.0358 36.3026 59.0643 37.7041C59.5188 39.0437 59.9937 40.311 59.1361 41.521C58.5348 44.347 61.0282 48.1826 61.5099 50.6114C64.7724 51.6901 68.5665 47.0356 67.9151 44.3585C70.4003 42.2452 70.7184 41.5928 70.0223 38.6725C68.3931 36.251 78.1218 29.9804 73.1161 30.1491C71.1339 31.1534 71.5869 29.0401 70.091 28.3227C69.6687 27.9041 69.0153 26.1297 68.4462 25.0218C65.1337 18.8636 68.4436 22.0718 63.7857 20.7426C60.6528 19.3546 63.6675 23.312 58.579 19.9086C57.709 20.16 59.0429 19.3379 58.5478 19.0813C58.3005 18.9719 58.6051 18.6132 58.6467 18.5658C58.4015 18.5716 58.2453 18.243 57.8558 18.4466ZM67.7902 35.2581C67.7553 35.7007 67.5876 36.3468 67.2909 36.2578C66.3547 36.4588 67.1268 34.5199 67.7902 35.2581ZM65.9887 37.2574C65.9277 37.815 66.7015 38.8121 66.4838 39.0588C66.1053 38.8714 65.6044 36.2838 65.9887 37.2574ZM67.8631 39.642C68.1229 40.1912 67.8912 40.867 68.0661 41.4017C67.9141 42.204 67.5955 38.9563 67.8631 39.642Z\" />\n    <path d=\"M73.6425 40.6937C73.4577 42.227 71.2407 41.8797 71.6171 43.7707C71.4895 44.6204 70.4492 47.1231 72.3465 46.5665C73.2572 45.0541 74.8468 41.6058 73.6425 40.6937Z\" />\n    <path d=\"M82.0468 1.84138C81.9854 2.51662 77.3812 2.48593 78.7625 3.0384C79.0694 3.16117 77.903 3.19186 77.3198 3.22256C78.7318 4.3275 78.4248 3.56018 76.8287 3.65226C76.9822 3.92849 76.2762 3.74433 76.9822 4.05126C77.105 4.35819 76.3683 3.65226 76.2148 3.4681C75.5702 3.31464 76.1227 3.49879 76.2455 3.65226C76.4297 3.83641 75.5089 3.92849 76.1534 4.17403C76.7366 4.41958 76.1534 5.00274 76.9822 4.91066C77.7495 4.84928 76.5525 4.97205 77.0436 5.27898C77.504 5.67798 76.3683 6.16907 76.399 5.86214C77.1357 5.24828 75.7237 3.77503 75.2019 3.49879C74.6494 2.94632 74.7108 3.43741 74.3425 4.05126C73.9741 4.08196 74.5573 4.78789 74.6801 4.78789C74.8029 4.78789 75.3861 5.03343 75.2633 5.1869C74.8336 5.1562 73.9434 4.51166 74.6801 5.34036C71.58 6.62946 75.3861 8.19479 73.7593 10.2512C73.6672 11.6938 75.3554 10.0671 75.1405 11.2334C75.2633 11.8165 75.3861 11.7859 75.7544 12.0928C76.6752 13.075 73.3602 11.9086 72.9919 12.2156C70.1987 12.1542 74.5573 14.8858 73.1761 14.7938C72.3166 14.9165 72.777 15.6838 73.4216 15.9601C73.6979 15.868 73.7286 17.2492 74.0048 17.2492C75.9079 19.5204 71.6107 18.7224 72.8691 17.0957C67.2214 13.6888 71.2116 17.4333 67.8966 16.5125C66.4847 15.7145 65.3183 17.0343 63.9984 17.0343C63.845 17.1571 64.3975 17.4026 64.3668 17.771C63.9678 17.7096 64.4589 18.1086 64.6123 18.3848C64.643 18.5383 64.3054 18.5383 64.7351 18.5383C64.95 18.5076 64.4589 18.661 64.7351 18.661C64.9807 18.8145 65.0114 18.5076 65.349 18.7838C66.5768 18.5383 65.9322 19.0601 67.5897 18.6917C68.1115 18.3848 67.958 21.2085 66.9144 21.1165C66.3312 21.1472 67.3441 22.9887 67.6204 22.6204C68.9402 23.4798 70.0145 26.5184 70.9661 27.7154C70.8126 27.5313 70.8433 27.5927 70.6898 27.4392C70.5057 27.3778 70.7512 27.7154 70.567 27.5313C70.2601 27.2857 70.6898 27.9917 70.7512 27.9303C71.273 30.3243 73.2682 29.0045 74.8029 28.053C75.3861 27.3778 76.2455 27.3164 76.798 26.6412C77.0129 26.7639 76.7673 25.659 77.105 26.0273C77.2277 26.2115 77.4119 25.7511 77.2584 25.8432C77.4733 25.1372 78.0258 25.1065 76.8594 24.462C75.9693 24.4927 76.3069 22.9273 76 23.4184C75.6009 24.1244 74.6187 24.6155 74.2811 24.0937C74.4345 23.5719 74.0969 22.9887 73.9127 23.7867C73.79 23.6333 73.6058 23.2036 73.882 23.5412C71.7641 20.5333 73.4523 21.761 75.1712 23.2036C76.399 23.0194 77.8723 24.2471 79.6526 23.7561C81.0645 23.6333 81.3408 26.8867 82.4765 25.3521C82.722 25.6283 84.3795 33.5778 85.6073 30.6619C86.0677 28.7283 85.9449 27.5927 87.8173 26.2729C88.4926 25.0452 88.9223 25.7204 89.7817 25.0452C89.751 24.7382 89.8738 25.1065 89.9352 25.1065C89.9966 25.5362 90.9481 26.2729 90.8867 26.7026C91.7769 26.6719 90.8253 29.2808 92.3601 27.5006C93.1888 29.0045 93.2195 29.6798 93.1888 31.0303C93.0967 32.0431 93.4344 31.3372 93.5265 31.7055C93.5265 31.9203 93.6185 31.5827 93.6185 31.7362C93.9255 32.3807 93.9869 32.1966 94.1097 32.9332C96.1048 36.7084 96.4424 33.6698 94.079 31.6441C93.8948 31.3986 93.8948 30.5699 93.8334 30.8154C93.3423 31.5213 93.772 27.9303 94.2631 29.4956C95.6137 29.8025 95.7058 32.3807 96.5652 30.5085C99.9416 29.3728 93.1888 25.9045 96.9949 25.4748C97.4553 26.1808 96.9642 26.2422 97.793 25.4135C98.3455 25.4135 98.499 25.1986 98.5603 25.0145C99.2356 25.3214 100.709 23.9709 100.586 23.3264C100.862 22.5283 101.568 21.362 100.617 21.4848C100.249 21.4541 101.231 21.1165 100.648 20.9937C97.7623 18.2927 101.231 18.6917 99.3891 18.1393C98.7445 18.3541 98.4376 18.17 97.9158 17.6482C98.5296 17.4333 99.2356 15.8373 99.2049 17.5561C101.323 16.7274 99.7881 17.8323 101.384 18.2313C101.753 18.569 101.538 20.1036 102.459 19.5511C104.208 18.8759 100.555 17.5561 101.783 16.8809C102.121 14.8858 104.853 16.3284 102.98 11.8779C103.993 12.2156 104.669 14.9472 105.16 14.2106C106.111 14.6403 104.392 13.5967 104.484 13.1056C106.111 13.6274 103.011 11.3255 102.52 10.8037C102.612 10.9878 102.735 11.3868 102.888 11.6938C102.581 11.3562 101.261 10.2819 101.139 11.1413C100.893 10.8958 100.832 10.1898 100.341 10.5274C100.402 10.6195 100.862 10.5581 100.801 10.8344C99.4812 10.6195 100.156 10.4047 100.555 9.36112C100.586 8.1641 102.858 8.87004 103.441 8.65519C103.41 9.11558 105.467 8.74726 104.423 8.56311C103.87 8.28687 104.454 7.42747 105.098 7.70371C105.774 8.44034 106.265 7.97994 105.958 7.36609C106.725 7.39678 106.51 8.99281 105.958 9.29974C106.08 10.0671 108.904 13.474 108.843 11.3255C107.984 10.4354 109.334 11.0492 108.72 10.4661C108.413 10.2512 108.29 9.94428 108.567 10.0671C108.751 9.54528 107.308 9.63736 107.247 8.50172C107.247 8.53241 107.492 8.37895 107.462 8.44034C107.646 8.77796 107.554 8.07202 107.861 8.40964C108.168 8.74726 107.922 7.88787 108.935 8.34826C109.488 8.5938 109.027 8.34826 109.273 8.13341C111.268 6.4453 110.593 8.07202 109.395 6.07699C109.027 5.70867 112.557 7.05916 112.219 6.56807C111.391 6.0156 112.373 6.32253 112.097 6.10768C111.513 5.55521 102.643 3.62156 104.791 4.87997C101.507 4.29681 94.9077 3.37602 92.5135 3.77503C92.3908 4.78789 90.2115 2.48593 89.1985 3.13048C89.5976 3.86711 86.0984 2.70078 85.7301 2.91563C85.5152 2.91563 85.0548 3.52948 84.8092 3.22256C87.541 2.14831 83.1824 1.93346 82.0468 1.84138ZM86.0984 3.09979C86.2519 3.19186 85.7915 3.16117 85.8529 3.09979C85.8222 3.0384 85.9756 3.0384 86.0984 3.09979ZM77.903 5.06413C78.1486 5.37105 77.5961 4.97205 77.5347 4.97205C77.4733 4.87997 77.8109 4.97205 77.903 5.06413ZM110.378 5.80075C110.408 5.89283 110.132 5.73937 110.286 5.73937C110.316 5.73937 110.347 5.77006 110.378 5.80075ZM109.395 6.69085C109.426 6.75223 109.303 6.75223 109.211 6.69085C109.058 6.59877 109.395 6.62946 109.395 6.69085ZM91.2858 10.4661C91.7462 11.4482 91.1323 11.9086 90.3956 12.0621C90.9788 12.1542 91.1323 10.1284 91.2858 10.4661ZM81.2794 14.2413C81.2487 14.4254 81.0031 14.4561 81.0031 14.671C80.7883 15.1314 80.7883 13.965 81.2794 14.2413ZM81.5863 14.2106C81.5556 14.2106 81.4943 14.2106 81.4636 14.2106C81.3408 14.1799 81.6477 14.1799 81.5863 14.2106ZM82.2923 14.272C82.4458 14.3641 81.8012 14.2106 82.1081 14.2106C82.1695 14.2413 82.2309 14.272 82.2923 14.272ZM82.5993 14.272C82.5993 14.3334 82.3844 14.3027 82.3844 14.272C82.3844 14.2106 82.5993 14.2106 82.5993 14.272ZM76.3376 14.3641C76.3069 14.3947 76.2762 14.3947 76.2455 14.3641C76.1227 14.3334 76.399 14.3334 76.3376 14.3641ZM75.9386 14.6096C75.7237 14.7324 76.4604 14.8551 76.2148 15.2541C75.8465 15.8373 75.6316 14.364 75.9386 14.6096ZM75.7544 14.8551C75.8465 15.3155 75.4168 14.7017 75.6316 14.7631C75.693 14.7631 75.7237 14.7938 75.7544 14.8551ZM75.6009 15.2541C75.5702 15.2848 75.4782 15.0086 75.4782 14.9165C75.5089 14.8244 75.6316 15.3155 75.6009 15.2541ZM74.1583 16.4205C74.3732 16.666 74.6187 16.9729 74.0969 16.8195C73.7286 16.8809 73.8207 16.0215 74.1583 16.4205ZM67.7125 22.3749C67.7125 22.4056 67.6818 22.467 67.6511 22.467C67.559 22.4363 67.7125 22.1907 67.7125 22.3749ZM87.7559 26.3036C87.7559 26.3956 87.6945 26.3649 87.6638 26.3036C87.6331 26.2422 87.7559 26.2422 87.7559 26.3036ZM70.8433 27.7461C70.874 27.8075 70.7205 27.8075 70.7512 27.7461C70.7819 27.7154 70.8126 27.7154 70.8433 27.7461ZM95.276 30.2629C95.3067 30.3243 95.2147 30.4164 95.184 30.2936C95.184 30.2015 95.2147 30.2015 95.276 30.2629ZM96.381 30.754C96.5038 30.9075 96.3503 30.8768 96.289 30.754C96.1969 30.5699 96.2583 30.6312 96.381 30.754Z\" />\n    <path d=\"M93.4651 2.977C93.4651 3.19185 93.772 3.03839 93.8641 3.16116C93.8948 3.25323 93.4958 3.31462 93.8641 3.31462C95.7058 3.52947 94.2631 3.00769 93.4651 2.977Z\" />\n    <path d=\"M105.037 14.7937C104.853 14.8551 105.528 15.2541 105.436 15.6224C105.681 15.8373 104.914 15.5303 105.221 15.8066C105.374 15.96 105.129 15.8987 105.16 16.1442C105.282 16.2056 105.589 16.7887 105.804 16.4511C106.111 16.4204 105.436 16.1749 105.467 16.1135C105.62 16.0521 106.387 16.2056 106.541 16.267C106.51 16.3897 106.664 16.3284 106.602 16.2056C106.387 15.8373 107.4 15.8987 107.063 15.6838C106.909 15.7145 107.001 15.1927 107.155 15.2541C106.879 14.8551 106.879 15.8987 106.786 15.3769C106.725 15.5917 105.098 14.6403 105.037 14.7937Z\" />\n    <path d=\"M105.835 16.5433C105.62 16.7274 106.541 19.0294 105.497 18.3848C105.559 18.17 105.16 18.3234 105.344 18.5076C105.497 18.569 105.436 18.6304 105.313 18.8145C105.16 18.8759 105.497 19.2749 105.19 19.1215C104.546 18.8145 102.888 20.0422 103.656 20.4719C104.546 22.3749 104.177 19.6739 104.515 20.2878C104.914 20.6561 104.699 20.1036 105.16 20.0422C105.252 19.3977 105.252 20.0115 105.62 20.0729C105.804 19.9502 106.111 19.6125 105.743 19.4898C105.927 19.4284 106.479 19.8274 106.418 19.3056C106.786 20.0115 106.479 18.9987 106.848 19.367C107.37 19.2135 106.725 16.4819 105.835 16.5433ZM106.08 16.6967C106.08 16.7274 105.927 16.7888 105.927 16.7274C105.927 16.666 106.08 16.666 106.08 16.6967ZM105.129 19.6125C105.282 19.7967 104.761 19.7353 104.883 19.6125C104.975 19.5205 105.098 19.5205 105.129 19.6125ZM104.761 19.766C104.73 19.8581 104.607 19.8581 104.546 19.7967C104.454 19.7967 104.791 19.6125 104.761 19.766ZM104.3 19.8581C104.269 19.9502 104.269 19.7046 104.3 19.766C104.3 19.7967 104.3 19.8274 104.3 19.8581ZM104.454 19.8888C104.331 20.3492 104.085 20.0422 103.84 19.9502C104.024 20.0422 104.607 19.6739 104.454 19.8888Z\" />\n    <path d=\"M67.2521 19.1521C65.9936 19.3056 66.9451 20.0422 67.3441 19.2135C67.559 19.06 67.4055 19.0293 67.2521 19.1521Z\" />\n    <path d=\"M101.568 26.856C101.599 27.4392 101.169 28.851 101.906 28.5748C101.753 28.851 102.09 29.25 101.783 29.0045C101.446 28.7283 101.967 29.4035 101.998 29.4956C102.244 30.0174 102.459 29.3728 102.182 29.1887C102.029 28.9738 102.489 28.9124 102.397 29.2193C102.52 29.4342 102.551 29.0045 102.643 29.2193C102.735 29.3421 102.796 29.2194 102.704 29.1273C102.397 28.6976 103.379 29.6184 103.042 29.557C102.673 28.8203 102.919 29.649 102.98 29.8332C103.042 29.6797 103.471 30.1708 103.257 29.7718C103.103 29.557 103.502 29.3421 103.165 29.1887C102.888 29.0966 103.072 28.9431 103.165 29.0966C104.147 28.9124 101.63 28.7896 102.428 28.6055C101.906 28.36 102.95 26.5184 101.568 26.856Z\" />\n    <path d=\"M103.379 29.5877C103.84 30.0174 103.134 30.0481 103.778 30.6619C104.3 31.1223 103.594 30.9382 103.625 31.2758C103.41 31.3986 102.551 31.2144 102.612 32.0124C102.765 32.3194 102.888 31.4907 102.95 31.7976C102.919 32.0124 103.257 31.859 103.257 31.7669C103.379 31.46 103.901 33.3629 104.177 32.5342C104.269 32.4114 103.932 32.0431 104.177 32.0431C104.761 32.9946 104.331 30.9075 104.239 30.7847C104.331 30.4471 104.116 30.754 104.055 30.5699C103.932 30.3243 103.963 30.6006 103.84 30.6313C103.809 30.3857 104.208 29.2194 103.379 29.5877Z\" />\n    <path d=\"M102.428 29.8333C102.673 30.263 102.274 30.5085 102.827 30.4778C103.072 30.4778 102.612 30.754 102.765 30.8768C102.98 31.0303 103.072 31.3065 103.165 30.9689C103.564 30.662 103.809 31.1224 103.379 30.2937C103.379 29.956 103.226 30.1402 103.072 30.2016C103.011 30.0481 102.643 29.7412 102.428 29.8333ZM103.257 30.3243C103.226 30.4164 103.226 30.1709 103.257 30.2323C103.257 30.263 103.257 30.2937 103.257 30.3243ZM103.226 30.7234C103.195 30.7847 103.103 30.5699 103.134 30.5699C103.134 30.4778 103.226 30.6927 103.226 30.7234ZM103.318 30.6927C103.287 30.7847 103.287 30.5392 103.318 30.6006C103.318 30.6006 103.318 30.662 103.318 30.6927ZM103.103 30.8154C103.072 30.9075 103.072 30.662 103.103 30.7234C103.103 30.7234 103.103 30.754 103.103 30.8154Z\" />\n    <path d=\"M101.476 30.2322C101.507 30.6926 100.525 31.1837 100.832 31.4906C101.323 31.0916 102.09 29.7105 101.476 30.2322Z\" />\n    <path d=\"M85.9142 30.8154C86.0984 30.9382 85.5152 32.7184 86.4361 32.4728C87.2648 32.3194 86.2212 30.4778 85.9142 30.8154Z\" />\n    <path d=\"M100.678 31.859C99.9109 33.2095 98.6524 34.1609 97.6395 34.4679C97.4553 35.4807 98.1613 37.0461 99.1435 36.647C99.7267 36.4936 99.696 37.353 100.341 36.8005C100.709 37.1688 100.77 34.7748 101.384 34.8055C101.998 34.9283 100.862 33.9768 101.108 33.6392C100.954 33.1481 101.691 33.2401 101.384 33.056C101.231 33.0253 101.2 32.9332 101.354 32.9332C102.09 32.9332 100.74 32.1659 100.678 31.859Z\" />\n    <path d=\"M92.1145 32.6569C94.2017 35.6648 95.8592 39.5935 99.7881 38.9797C100.064 39.747 105.804 38.4886 102.735 39.0104C102.182 38.8262 101.538 39.041 101.139 38.8262C100.893 38.6727 99.9109 39.2559 100.126 38.9797C99.9723 38.55 98.4069 38.7341 99.5426 38.3044C98.3455 38.1816 97.5781 38.1816 96.5345 37.844C96.0741 38.0282 96.4117 36.3708 96.5652 36.5549C96.7494 36.6777 96.9642 36.3401 96.8108 36.4322C96.7187 36.4628 96.5345 36.2173 96.4731 35.9411C96.4731 35.5728 95.7978 36.1252 96.1969 36.1252C96.1662 36.5856 95.7978 35.4807 95.4909 35.5421C95.6444 34.652 93.1581 32.9025 92.1145 32.6569ZM101.077 39.041C101.077 39.0717 100.924 39.0717 100.924 39.0104C100.924 38.949 101.077 39.041 101.077 39.041Z\" />\n    <path d=\"M105.037 34.3144C104.883 34.7748 104.883 35.1738 105.037 35.1738C104.638 35.4807 104.822 35.6342 105.19 35.5421C105.497 35.849 104.883 34.8362 105.344 35.0817C105.835 35.2352 105.129 34.8362 105.405 34.7748C105.559 34.6213 105.559 34.3144 105.313 34.5293C105.068 34.7748 105.313 33.8233 105.037 34.3144Z\" />\n    <path d=\"M103.778 34.5906C103.226 35.1431 102.244 34.0996 101.937 35.0817C101.66 36.0332 101.384 37.2916 101.937 37.752C102.366 37.5372 102.029 36.2788 102.274 36.4629C102.551 36.4936 102.366 37.9055 102.98 37.2302C102.581 38.3659 103.625 37.4451 103.165 37.0154C102.827 36.9847 103.042 36.6471 102.827 36.4015C102.397 35.9411 104.3 35.1431 102.489 35.7263C102.244 35.9411 102.274 35.7263 102.121 35.5728C101.476 34.6213 103.993 35.3273 103.84 34.9897C103.963 34.8055 104.3 34.0382 103.778 34.5906Z\" />\n    <path d=\"M105.374 36.4628C104.546 36.6163 105.19 37.046 105.559 36.7391C106.602 37.1381 106.479 36.3708 105.374 36.4628Z\" />\n    <path d=\"M104.576 38.949C104.085 38.9797 103.164 39.3173 103.134 39.9005C103.287 39.9312 105.19 38.8876 104.576 38.949Z\" />\n    <path d=\"M106.694 35.4193C105.497 35.6342 106.848 36.2173 107.462 36.248C106.879 36.4936 106.449 36.1559 107.032 36.8312C107.216 37.1995 110.408 37.4143 108.843 38.949C110.163 38.7955 110.746 39.8391 111.084 39.2866C111.667 37.5064 113.263 40.8213 114 39.9312C114.03 39.8084 112.219 38.55 112.833 38.2737C113.048 37.5678 109.211 34.9282 108.229 36.6163C107.339 36.8312 108.045 34.8362 106.694 35.4193Z\" />\n    <path d=\"M110.562 40.054C109.764 42.2639 109.825 44.2282 107.646 41.8649C108.321 41.0055 107.738 41.7114 108.26 41.65C108.352 41.0055 108.014 41.5886 108.045 41.2817C108.045 41.1589 108.505 40.7906 108.352 40.6371C108.229 40.3916 108.29 40.5144 107.861 40.5758C107.216 40.8213 106.909 39.9926 106.449 40.1767C107.001 40.852 105.374 40.6064 105.313 41.6807C105.405 41.9262 104.699 41.8649 104.699 41.6193C104.27 41.0055 103.379 41.7421 103.257 42.448C102.704 42.2639 102.95 43.1233 102.765 42.7549C101.415 44.6272 99.0515 44.1668 98.4376 45.8549C98.0999 45.9777 98.7752 47.6044 98.2534 46.6222C98.2227 46.6836 98.1613 46.8064 98.1613 46.8678C97.9464 46.4995 98.6524 49.3232 98.2841 49.7836C98.3148 50.1212 97.5167 50.4282 97.8544 50.643C99.6039 51.9935 104.853 47.2361 105.344 50.6737C105.344 51.5024 106.418 49.9064 106.633 50.0598C106.449 50.4282 105.282 51.5331 106.295 50.8272C106.51 50.4282 106.602 50.7965 106.357 51.042C106.786 52.239 106.326 52.5766 108.29 52.5766C110.961 52.4232 114.982 47.2668 113.079 45.7322C112.895 45.4866 113.324 45.1183 112.71 45.1183C112.557 45.0569 112.557 44.3817 112.618 44.3203C111.421 43.8906 111.636 42.3559 111.483 41.4965C111.114 41.3738 111.605 41.4965 111.176 41.5886C110.746 41.7728 111.36 40.6985 111.176 40.5451C110.93 41.8035 111.022 39.9005 110.562 40.054ZM98.2841 47.0519C98.2841 47.2668 98.1613 46.9906 98.2227 46.9599C98.2534 46.9906 98.2841 47.0212 98.2841 47.0519ZM108.168 52.3618C108.137 52.4232 108.076 52.4232 108.076 52.4232C107.984 52.3618 108.29 52.2083 108.168 52.3618Z\" />\n    <path d=\"M107.4 53.5281C106.479 55.3082 108.045 54.9706 108.597 53.8043C109.027 53.2211 107.707 53.8657 107.769 53.6201C107.492 53.4974 107.677 53.1291 107.4 53.5281Z\" />\n    <path d=\"M73.0229 2.03595C70.4867 2.02293 68.2781 4.60636 71.6431 4.25441C68.6883 3.06995 75.4055 2.12602 73.0229 2.03595ZM70.3467 3.17615C70.331 3.19177 70.2842 3.19698 70.2477 3.18136C70.1457 3.14231 70.4024 3.13659 70.3467 3.17615Z\" />\n    <path d=\"M62.5783 4.13932C60.9038 4.5095 60.2868 4.61988 59.0638 5.32639C60.7356 5.08533 58.5613 5.66533 58.9914 6.48326C58.1411 6.48378 58.3609 7.00806 57.5694 7.11688C56.6973 7.47716 56.2261 8.34143 56.9816 9.21038C58.3728 9.76851 58.0427 7.78278 58.9857 9.74664C59.5282 10.0538 58.1234 10.5214 58.3296 10.1892C58.4259 9.99759 58.3437 10.2876 58.439 10.2517C58.5165 10.2064 58.4134 10.1408 58.491 10.0955C58.7253 9.90596 58.1604 9.92262 58.3817 9.73102C58.5452 9.05367 57.0608 9.88461 57.7626 10.9285C56.5385 11.3049 55.9309 12.0817 54.7787 12.9335C54.6422 13.2782 54.0581 12.6034 54.0914 12.9439C54.5381 13.8254 52.7559 12.7898 53.1125 13.6624C53.7269 13.8503 54.4897 14.2195 54.1122 15.4222C52.5205 16.1719 51.3428 14.4137 51.0564 17.4636C51.0527 19.1958 53.5431 19.1906 54.5855 17.8015C54.0096 16.7566 56.0902 16.7248 55.7315 15.922C55.7315 15.6669 56.2834 15.5732 56.601 15.7762C57.1185 15.974 58.3583 14.5438 58.3192 15.8751C58.9201 16.4062 62.0321 17.8806 59.1153 18.1394C59.3507 18.368 60.3691 19.0989 60.1775 18.2128C61.3599 17.9233 60.1202 16.654 61.3229 17.208C61.1095 16.4426 58.5629 15.8257 59.2351 14.7141C59.6917 14.5969 59.4012 14.6324 59.4746 14.8703C59.598 15.2524 59.7427 14.8609 59.7401 15.0525C59.8349 15.4144 59.8146 15.053 59.9067 14.9848C60.2977 16.5119 61.0767 14.9208 61.7447 17.1299C62.1696 17.8921 62.1487 18.2701 62.8641 18.7647C63.0953 18.6116 63.1885 19.2406 63.0255 18.3326C63.3978 18.5611 63.4233 17.6557 63.7493 18.307C64.4209 18.6397 62.2867 16.8388 63.0568 17.12C63.3895 17.4042 63.3359 17.0096 63.39 17.0835C63.7529 17.3142 63.1755 16.8513 63.4264 16.844C63.7123 16.6946 63.351 17.1351 63.6608 16.844C63.7623 16.8232 65.4623 16.9997 64.9937 16.5421C63.9299 15.5633 66.4401 13.4396 66.2277 14.8141C67.9271 14.9 71.3 16.3317 72.949 16.981C71.5864 16.0199 70.91 14.6766 72.8089 14.0383C69.7338 10.0981 77.8542 13.8748 75.4747 11.8308C74.7239 9.53422 74.8229 11.7891 73.8029 10.4828C74.6984 9.66959 73.6586 7.63128 73.277 6.24429C77.2117 4.82866 71.2745 4.15078 72.2825 4.6355C72.6605 4.69954 73.0213 4.97079 72.6314 5.14573C72.382 4.89009 72.5215 4.63915 72.2096 4.94268C71.1339 5.31546 70.0775 4.59541 69.2678 5.70802C68.0448 5.96991 69.6412 4.77711 68.0182 5.15094C68.83 6.30416 67.8766 5.56276 67.1175 6.30156C67.812 6.97058 66.5322 6.31301 66.3261 6.42651C66.0168 6.69152 66.6364 6.68996 66.7374 6.81699C66.123 7.2736 65.7637 6.10736 65.2431 5.88504C71.0829 6.3984 63.1562 3.8259 62.5783 4.13932ZM62.8126 4.23825C62.8126 4.26428 62.7865 4.29031 62.7553 4.29031C62.6684 4.27365 62.822 4.1034 62.8126 4.23825ZM63.3853 4.20701C63.3853 4.25387 63.2291 4.2799 63.2031 4.23825C63.1541 4.16379 63.3947 4.18566 63.3853 4.20701ZM60.9902 4.70682C60.9887 4.77555 60.832 4.69589 60.834 4.67559C60.8445 4.64539 60.9981 4.64383 60.9902 4.70682ZM60.4696 4.81095C60.4789 4.87551 60.2165 4.88749 60.3654 4.81095C60.4644 4.74848 60.4696 4.74848 60.4696 4.81095ZM59.9177 5.15458C59.9562 5.26599 59.8312 5.16759 59.8448 5.11813C59.8448 5.04524 59.8812 5.06086 59.9177 5.15458ZM60.329 5.10772C60.2925 5.11813 60.2301 5.11813 60.1988 5.10772C60.1041 5.07127 60.4144 5.07284 60.329 5.10772ZM62.6512 6.24793C61.2146 8.01499 61.2006 8.70796 64.1668 8.40287C64.6131 8.86051 62.4997 8.44452 62.4898 8.95995C62.5793 9.17966 62.1357 8.55802 62.0576 9.22027C62.1352 9.4681 63.327 8.8881 62.7032 9.75654C61.6114 8.54604 62.0498 11.2914 61.1204 10.7458C60.9803 10.3251 59.6063 11.3856 59.4803 10.8239C59.5808 10.5568 58.8716 10.9571 58.6004 10.98C58.6311 10.8155 58.9227 10.7416 59.0377 10.6416C59.158 10.6354 59.058 10.5224 58.9961 10.5739C58.9154 10.6458 59.1768 10.0877 59.1627 10.3292C59.5053 10.8134 60.0765 9.81797 60.3811 10.0689C60.6466 9.52329 60.0884 9.21403 60.9908 8.835C61.4594 8.25865 60.3852 8.40235 60.5529 7.89264C60.9928 7.17415 61.6734 6.23074 62.6512 6.24793ZM58.5952 6.74774C58.5952 6.82063 58.3452 7.04971 58.2671 7.04971C58.1911 6.99036 58.5624 6.52595 58.5952 6.74774ZM57.6423 7.34127C57.6267 7.35689 57.5799 7.3621 57.5434 7.34648C57.4414 7.30743 57.6981 7.30171 57.6423 7.34127ZM58.7514 10.5901C58.6868 10.6958 58.6368 10.6734 58.6004 10.5901C58.4015 10.4969 58.7529 10.5 58.7514 10.5901ZM61.8858 10.6005C61.7546 10.7145 61.8624 10.4313 61.9222 10.512C61.9327 10.5276 61.917 10.5693 61.8858 10.6005ZM58.491 10.689C58.6696 10.6588 58.6071 10.942 58.3557 10.8035C58.0032 10.5698 58.4515 10.765 58.491 10.689ZM56.6947 11.6262C56.6791 11.6574 56.6374 11.6834 56.6114 11.6834C56.5328 11.6543 56.8077 11.4398 56.6947 11.6262ZM68.2796 14.1252C67.711 14.2632 68.5587 14.7526 67.7069 14.7396C66.0147 14.8349 68.6467 13.6546 68.2796 14.1252ZM62.396 17.9468C62.5043 18.0535 62.1711 18.2295 62.2034 17.9311C62.1519 17.5948 62.2971 17.9634 62.396 17.9468ZM63.3853 17.827C63.5384 17.9119 63.2666 17.8806 63.2552 17.827C63.2135 17.7593 63.2812 17.7593 63.3853 17.827ZM63.0573 18.0144C63.0417 18.0301 62.9948 18.0353 62.9584 18.0196C62.8563 17.9806 63.113 17.9749 63.0573 18.0144ZM63.1614 18.2019C63.1224 18.3034 63.1172 18.0472 63.1562 18.1029C63.1718 18.1186 63.1771 18.1654 63.1614 18.2019Z\" />\n    <path d=\"M48.3692 5.93557C48.2255 6.03241 47.4508 6.3979 48.1193 6.30522C49.1617 6.28856 47.4122 6.58273 48.0048 6.59158C49.2195 6.69519 47.3596 6.94197 48.843 7.03412C49.6605 7.23041 51.7036 6.73372 50.8632 5.97774C50.7456 5.79083 49.1862 6.04803 49.0409 6.2011C48.8149 6.38749 48.6821 5.65494 48.3692 5.93557Z\" />\n    <path d=\"M53.9664 8.83557C53.8102 9.16201 52.2862 9.49106 52.9928 9.74669C53.0355 9.82479 52.6439 9.90861 52.6595 9.97057C52.8569 9.97317 52.7959 9.90341 52.9615 10.0851C53.074 10.1085 52.4575 10.4084 52.9407 10.335C53.3052 10.2595 52.7048 10.4912 53.1281 10.46C53.4843 10.3793 52.9469 10.7302 53.2791 10.7672C54.3652 10.7838 53.477 11.3956 53.1542 11.5898C54.0705 11.4924 52.4455 12.0438 53.2791 12.0792C53.5291 12.0896 53.7165 12.2041 53.4874 12.2041C51.6796 13.1251 54.8417 12.4561 55.3149 12.2099C55.2723 12.1344 55.0343 12.1021 55.2316 11.9802C55.7081 11.5492 54.5782 10.9171 54.1596 10.1736C53.7696 10.0049 54.9625 9.39474 54.0653 9.44472C53.1099 9.59831 54.8588 8.63981 53.9664 8.83557ZM52.9719 9.54885C52.9719 9.57488 52.9459 9.60091 52.9147 9.60091C52.8277 9.58425 52.9813 9.414 52.9719 9.54885Z\" />\n    <path d=\"M52.2586 10.4756C51.9676 11.0056 51.1517 10.8192 51.5401 11.3398C51.9952 11.3815 50.9757 11.9214 51.311 11.9959C52.0248 12.7898 54.1231 10.2871 52.2586 10.4756Z\" />\n    <path d=\"M58.0016 15.859C57.2305 16.1563 58.3275 16.7373 57.5434 16.7701C57.7866 19.1375 58.3702 16.377 58.0016 15.859Z\" />\n    <path d=\"M63.3176 19.113C63.0521 19.4874 64.5428 19.566 64.2757 19.2953C64.2314 19.3629 63.5743 19.1797 63.3176 19.113Z\" />\n    <path d=\"M25.8347 29.6144C25.0047 30.1548 24.2284 30.4151 23.7468 31.4059C23.6406 31.4257 22.8309 30.4703 22.8252 30.9894C23.1746 31.4819 23.6567 32.4597 23.45 33.2125C23.5042 34.3033 21.0716 35.6491 22.4087 36.5082C22.4868 36.6805 21.5444 37.1658 22.0187 37.6172C23.1865 39.0354 23.7744 42.0161 25.8971 42.8132C28.2631 44.3407 26.3366 55.609 28.2199 54.158C28.2162 54.8077 28.6697 55.5137 28.0168 54.9592C28.2058 55.1009 27.6502 55.4216 27.871 55.3711C28.5041 55.1279 27.6419 56.5092 28.147 56.2458C28.6822 56.6394 28.5078 58.5189 29.8657 58.812C30.1151 59.051 29.3216 58.6475 29.6933 58.9531C30.05 59.0557 30.252 59.5664 30.5472 59.3441C30.0937 59.0223 30.7097 59.4472 30.8857 59.6768C31.7349 59.9158 32.5393 60.2854 33.0933 59.6351C32.5096 59.5456 30.1656 58.1076 31.6932 56.6987C31.4293 55.9026 29.948 56.2442 31.2559 55.3346C31.0419 54.3241 32.28 54.1403 31.0627 54.1788C30.2723 52.7569 32.33 54.7604 31.6979 52.9136C33.4635 52.5929 33.8066 51.7864 32.5982 50.6384C34.9401 51.7333 34.5402 48.9068 35.2228 48.9469C36.0887 47.7593 35.0505 46.2088 36.8317 45.9422C38.553 45.8293 39.0295 42.9074 39.1008 41.0477C42.4216 37.4245 38.7598 37.1928 36.3626 35.7382C36.0309 35.9459 35.302 35.0056 34.9521 35.722C34.8001 35.5742 35.2702 35.3388 34.4153 35.0088C34.4856 32.5092 31.373 32.6346 30.151 31.1404C30.3785 30.5786 28.9441 30.765 29.7298 30.4005C28.8879 30.2975 27.4758 30.8264 26.6787 29.8383C26.6464 29.2687 26.1695 30.5406 25.9133 30.2548C25.6654 30.0033 26.6141 29.5555 25.8347 29.6144ZM26.0533 30.8431C25.9346 31.4991 25.5707 30.6593 25.918 30.4786C25.9825 30.5812 26.0492 30.7181 26.0533 30.8431ZM27.027 42.2608C27.1587 42.3524 27.089 42.5976 27.0114 42.4378C26.8401 42.3477 26.675 41.9692 27.027 42.2608ZM37.0915 45.6293C37.09 45.7095 37.0452 45.6814 37.0134 45.6293C36.9754 45.5507 37.0978 45.5705 37.0915 45.6293ZM35.1494 49.0239C35.1104 49.1255 35.1052 48.8693 35.1442 48.925C35.1598 48.9406 35.1651 48.9875 35.1494 49.0239ZM31.3902 54.4282C31.424 54.5068 31.1934 54.4829 31.208 54.4282C31.2127 54.347 31.3657 54.3725 31.3902 54.4282ZM28.5734 55.2872C28.5526 55.3289 28.5213 55.3497 28.4953 55.3341C28.3891 55.2716 28.6213 55.118 28.5734 55.2872ZM28.4745 55.4747C28.5265 55.6309 28.4745 55.6465 28.4068 55.4955C28.3297 55.3268 28.4375 55.331 28.4745 55.4747ZM28.7088 55.6465C28.7108 55.6668 28.5541 55.7465 28.5526 55.6777C28.5442 55.6147 28.6983 55.6163 28.7088 55.6465ZM31.0518 58.9578C30.9638 59.204 31.6318 59.0567 31.3746 59.1817C31.2225 59.2384 31.372 59.393 31.2392 59.2441C30.9096 59.2577 30.8982 58.5616 31.0518 58.9578ZM30.7133 58.9526C30.6909 59.0161 30.427 59.051 30.6144 58.937C30.7237 58.8589 30.7706 58.8641 30.7133 58.9526Z\" />\n    <path d=\"M34.2539 58.1716C33.766 58.1675 34.3257 58.3481 34.0456 58.4059C33.8035 58.6579 34.509 58.534 34.5663 58.3585C34.2841 59.139 36.0101 57.9904 34.2539 58.1716Z\" />\n    <path d=\"M47.0884 0.0784151C45.9476 0.442865 28.2063 -0.120467 32.8319 1.6669C34.5309 1.89754 33.3031 1.54403 32.9678 1.90535C32.1889 2.43536 31.057 1.74135 30.3332 2.15005C30.8315 2.54834 30.0172 2.48534 29.7241 2.52023C30.5472 1.98865 29.0816 2.00167 28.7088 2.34321C27.845 1.69865 28.0454 2.88051 29.068 2.7389C29.5736 2.79044 29.6288 2.36039 29.7345 2.76025C30.3827 3.55683 30.5582 1.8762 31.1247 2.3958C30.1453 3.22258 33.9493 3.10283 34.3841 2.57854C34.4325 2.18702 31.8786 2.78055 31.9681 2.36456C32.7559 2.25887 34.661 2.1386 34.6236 2.46869C35.83 1.57162 38.9623 0.798466 41.0851 0.511072C41.084 0.807317 38.4531 0.846366 39.3512 1.06295C39.899 1.08482 39.4325 1.30193 38.8618 1.32848C37.9475 1.42115 37.3128 1.47843 36.9874 1.6721C37.1561 1.77623 37.8059 1.85537 37.2165 1.86474C36.1371 2.61603 40.7966 2.01989 40.0692 2.98412C39.7954 3.08877 40.3561 3.0164 39.9292 3.26527C40.2603 3.08877 40.0094 3.49123 40.0229 3.50997C39.4543 4.23418 40.1708 4.11235 40.4342 4.06706C41.1918 4.48045 40.0885 4.12016 39.8823 4.28573C40.0104 4.45442 39.7449 4.31436 39.7157 4.38465C39.0862 5.08752 40.9455 4.86416 40.2364 4.46275C40.6883 4.42943 40.7591 5.09637 40.1739 5.03545C37.5732 6.51356 40.9549 10.8937 42.9699 6.49273C45.7591 5.66803 49.1315 4.32321 49.2283 4.38933C49.5392 4.091 48.9706 3.69636 49.0825 3.75415C49.4559 3.74738 49.3007 3.59223 49.4059 3.46259C49.2502 3.2637 50.3066 3.32774 49.9161 3.07731C50.0213 3.06898 50.6732 2.8097 50.9158 2.72848C50.5404 2.23127 50.5758 2.99193 50.2494 2.79617C50.3446 2.65091 50.542 2.39684 50.2754 2.21825C49.9698 1.97251 50.7508 2.09955 50.6451 2.31197C50.7195 2.44005 51.2022 1.82621 50.4837 1.86942C51.3308 1.72469 49.9718 1.72104 50.3639 1.53621C49.7891 1.53309 54.333 0.410064 52.2748 0.500135C51.6234 0.40694 51.4833 0.734947 51.2855 0.43714C50.5326 0.679759 49.7099 -0.271977 47.0884 0.0784151ZM45.0422 0.46369C45.064 0.626131 44.6688 0.453278 45.0369 0.3908C45.0369 0.385594 45.0422 0.422039 45.0422 0.46369ZM50.0562 0.489723C50.0145 0.515755 49.9312 0.53658 49.874 0.53658C49.6449 0.538142 50.2931 0.368413 50.0562 0.489723ZM34.3164 0.573025C34.3007 0.588645 34.2539 0.593851 34.2174 0.578232C34.1154 0.539183 34.3721 0.533456 34.3164 0.573025ZM34.5767 0.947888C34.371 0.890617 34.18 1.35711 34.2122 1.0416C34.1274 0.823454 34.9703 0.90103 34.5767 0.947888ZM35.3994 0.906236C35.4244 1.01036 35.1583 0.903112 35.3525 1.0364C35.4462 1.10929 35.441 1.10929 35.3108 1.05722C35.0562 0.99006 35.3358 0.762018 35.3994 0.906236ZM34.5403 1.25507C34.5377 1.37638 34.4543 1.22175 34.4101 1.20821C34.3549 1.1348 34.5658 1.165 34.5403 1.25507ZM34.4361 1.34358C34.4424 1.37169 34.3377 1.44875 34.332 1.38002C34.3252 1.31963 34.4236 1.30713 34.4361 1.34358ZM33.4468 1.55704C33.4104 1.59869 33.3583 1.63514 33.3271 1.63514C33.2631 1.59817 33.6327 1.37013 33.4468 1.55704ZM38.513 1.87984C38.4765 1.89025 38.414 1.89025 38.3828 1.87984C38.288 1.84339 38.5984 1.84495 38.513 1.87984ZM37.732 1.9319C37.6955 1.94231 37.633 1.94231 37.6018 1.9319C37.507 1.89546 37.8173 1.89702 37.732 1.9319ZM29.1513 2.26511C29.2633 2.46296 28.9639 2.23752 29.0628 2.20784C29.0941 2.20784 29.1357 2.23387 29.1513 2.26511ZM28.3287 2.34321C28.3131 2.35883 28.2662 2.36403 28.2297 2.34842C28.1277 2.30937 28.3844 2.30364 28.3287 2.34321ZM48.9368 3.24913C48.9742 3.3267 48.8529 3.30536 48.8587 3.24913C48.8592 3.16843 48.906 3.19394 48.9368 3.24913ZM48.8222 3.40532C48.4312 3.54902 49.1513 3.74894 48.7649 3.68126C48.2089 3.17832 49.0185 3.37096 48.8222 3.40532ZM49.2908 3.3897C49.2544 3.40011 49.1815 3.40011 49.1346 3.3897C49.006 3.35742 49.3845 3.35065 49.2908 3.3897ZM49.3116 3.48862C49.296 3.50424 49.2492 3.50945 49.2127 3.49383C49.1107 3.45478 49.3673 3.44905 49.3116 3.48862ZM39.5126 6.77908C39.4845 6.82438 39.2945 6.63903 39.4502 6.7166C39.5022 6.73222 39.5283 6.76346 39.5126 6.77908Z\" />\n    <path d=\"M29.4377 1.26548C28.4708 1.68043 29.7308 1.65856 30.1198 1.79132C30.9935 1.53725 29.8365 1.15041 29.4377 1.26548Z\" />\n    <path d=\"M27.2665 1.49975C26.1554 1.66011 27.8429 1.65282 26.9333 1.71321C25.2947 2.27655 29.572 1.37271 27.2665 1.49975Z\" />\n    <path d=\"M25.0641 1.89019C25.0349 1.91206 22.2624 2.33846 23.45 2.47331C23.9696 2.32128 23.7858 2.63835 24.2518 2.52017C23.6218 3.33602 29.1519 2.5311 27.1311 2.36866C27.6539 1.75431 26.4204 2.30723 26.5896 2.36346C26.2512 2.42125 26.8406 2.52694 26.3501 2.51444C25.8659 2.52538 26.2408 2.26974 25.5795 2.22288C24.7022 2.16718 26.8036 1.76211 25.0641 1.89019ZM24.9547 2.36918C25.6202 2.46186 24.2773 2.30879 24.7204 2.49934C24.2357 2.40407 24.2633 2.14479 24.9547 2.36918ZM25.1422 2.25985C25.1266 2.28588 25.0641 2.31191 25.0068 2.31191C24.7621 2.27911 25.163 2.12552 25.1422 2.25985ZM25.0901 2.72843C25.1536 2.79819 24.6028 2.79142 24.9079 2.72843C25.0339 2.70916 25.0391 2.63471 25.0901 2.72843Z\" />\n    <path d=\"M21.9244 2.92108C19.772 3.95404 20.5353 4.40179 22.5393 3.66508C21.2793 4.39867 22.3873 4.41168 23.2631 4.33151C23.2662 4.33307 20.5171 4.62515 22.4196 4.92504C22.0744 5.45557 24.0123 4.92712 24.257 4.9719C23.2042 5.07238 23.7827 5.50191 23.3615 5.40924C23.3287 5.02344 22.6909 5.46182 21.9609 5.32021C21.9338 5.46026 21.1835 5.32906 21.8776 5.24784C22.7783 4.76572 19.4263 4.68138 19.6491 4.6543C20.2802 4.25966 19.319 4.63088 19.0972 4.75843C18.9952 3.68331 16.0247 5.44516 15.161 4.6642C12.8533 4.18417 7.35091 3.65832 6.99582 5.69507C7.48941 6.29329 5.20055 5.58001 4.77308 6.29953C4.95167 6.48384 4.29563 6.73219 5.13755 6.69522C7.34987 6.73896 4.67572 7.0956 3.90356 7.46577C1.44809 8.59244 4.08059 8.35815 2.86743 9.08497C3.32822 9.0605 3.68072 9.08549 4.08059 9.06987C4.0103 9.91747 -0.213366 10.4084 0.00843874 10.8557C2.20202 10.4183 4.24304 9.78888 6.31895 8.6117C7.10568 8.19623 6.83181 8.50653 6.37101 8.82517C6.62979 8.80486 8.92594 8.51226 8.32352 8.30973C8.34695 8.16395 9.0686 8.07284 8.6932 8.29932C8.31675 8.52892 8.94364 8.30453 9.05767 8.39303C8.92021 8.71271 11.3778 8.30088 10.6197 9.70037C10.6868 9.97215 10.49 10.2642 10.8748 9.92372C10.8363 10.0721 10.3198 10.346 10.8227 10.283C10.0964 10.6599 11.2825 10.9129 11.3694 10.46C11.3361 10.8926 11.4611 10.7797 11.1872 10.9442C10.8363 10.8827 11.1252 12.0865 11.1403 12.3916C11.5288 12.5452 10.3536 12.5004 10.8128 12.3968C11.0149 12.3635 10.5931 12.3447 10.6775 12.5269C12.3426 14.2492 8.18346 16.1162 9.08422 18.5612C8.84471 20.3183 10.2615 19.2214 10.1204 21.2893C9.98081 21.8324 11.1242 22.5555 10.1204 22.6534C11.0497 23.2964 10.8368 24.4955 11.7553 24.825C12.0229 24.5907 11.5569 23.9602 11.5105 24.2107C11.535 23.6739 11.1044 22.4827 10.9014 22.0292C10.9461 21.9526 11.1148 22.3296 11.0315 22.0188C10.9899 21.8261 10.9586 21.7949 10.9066 21.8834C10.1006 20.8265 11.7136 20.5688 11.2867 22.05C14.5138 27.6297 12.3618 26.8238 19.6809 29.3015C20.137 29.7571 20.1838 30.9587 20.6379 30.802C20.9628 30.7749 21.1476 31.7256 21.4194 31.5517C21.9906 31.2977 21.6678 31.8995 21.8099 31.8849C22.0353 31.482 22.2941 32.682 22.5128 31.4268C23.537 30.2085 21.7203 31.7272 21.5501 30.8541C20.4213 30.1017 22.5998 27.7286 20.3937 27.9905C17.8804 28.7866 21.5147 25.3967 20.1073 25.455C19.3883 25.5175 19.0233 25.5175 18.8473 26.2776C14.4237 29.0802 16.7068 19.6217 20.1125 22.1135C20.1245 22.2692 20.4723 22.0323 20.2323 21.9511C20.0761 21.1686 22.2009 21.7486 22.4399 21.8261C22.8158 22.4113 22.3467 23.5833 23.1428 23.9243C23.8124 19.0751 23.8848 21.3617 26.2621 18.9319C25.9726 18.5148 27.3946 16.7139 28.9379 16.5317C29.4773 16.374 28.4297 15.7851 29.8547 15.4071C30.5478 15.1905 32.0379 14.4398 31.2293 15.0271C29.8683 16.2303 33.1933 14.8079 33.4994 14.4596C33.387 13.5083 32.6684 15.1015 32.0676 14.496C32.3201 14.5413 33.148 14.3263 32.5622 14.2877C32.0213 14.3992 32.2644 13.8671 32.078 14.1211C32.0733 14.2081 31.8073 14.0607 32.0155 14.3086C32.2858 14.6053 31.3564 14.269 32.2238 13.6057C32.0447 13.6578 31.7474 13.6942 32.1457 13.5276C33.1058 12.7826 30.9492 13.1762 30.6566 13.4808C30.5852 12.7826 34.4215 12.6233 35.3994 12.1531C32.468 14.7308 35.177 13.4407 35.7331 14.0639C35.6758 14.647 36.4771 13.7364 36.2069 13.715C35.8654 13.9754 36.4537 13.3027 35.8737 13.7671C35.9028 13.5156 36.095 13.5281 36.2486 13.3922C36.2777 13.2725 35.8555 13.3777 36.1288 13.1736C36.3772 13.1288 35.9294 12.7373 35.9627 12.908C35.9455 12.8643 35.503 13.0497 35.4624 12.9028C35.7654 12.742 35.5535 12.7336 35.2957 12.6685C35.7284 12.3536 36.1903 11.9756 35.4259 12.1167C36.5125 11.6861 35.8044 10.4943 34.9313 10.4506C35.0047 9.81126 34.7641 9.07195 34.6657 8.19623C34.1831 8.90483 32.2868 9.79409 33.161 8.12282C32.6684 8.04421 32.645 7.74796 32.255 7.4512C31.6938 7.64644 31.0835 7.05811 30.391 8.12803C29.9214 8.36492 30.5951 8.06555 30.4535 8.30505C30.517 8.71375 29.6116 8.846 29.6985 9.13287C30.7019 9.75035 28.941 10.663 28.2927 10.6531C28.4698 11.2076 27.7486 12.7394 27.267 11.8819C26.6688 11.3347 28.0282 11.6809 27.3764 11.3503C27.0452 11.3919 27.4175 10.977 27.3972 10.8505C28.1407 10.2694 24.268 9.91175 25.0073 9.22086C23.9618 7.9406 28.3911 7.06227 29.459 6.11262C27.8861 7.50378 28.7249 7.09507 29.8756 6.97168C29.8771 7.19504 31.1033 7.07113 30.3598 6.7275C30.1677 6.70147 29.5741 5.77056 29.9797 6.1751C30.4697 6.49477 30.1047 5.62895 30.3697 5.96216C31.0658 6.12876 31.8338 4.76156 31.8119 4.66055C33.0386 4.62567 32.23 4.91775 32.2858 5.23847C32.3982 4.9896 33.4552 4.5231 32.6143 4.66055C33.2651 4.31433 32.8424 4.51477 33.4729 4.8584C32.834 4.65066 32.9637 5.0401 33.3792 5.09789C33.2167 5.21972 32.3456 5.27283 32.5357 5.5925C33.1365 5.65862 33.4161 5.32177 33.8113 5.36394C33.6999 5.23013 33.3276 5.09529 33.7228 5.16558C34.5252 5.6909 32.4133 6.42189 31.7864 6.35785C30.6113 7.18931 32.8996 6.41199 32.9158 6.93055C32.9564 7.44755 34.6475 8.04785 34.8683 7.77972C34.7303 7.53137 34.7251 7.78597 34.634 7.76358C34.6678 7.58917 33.8774 6.87589 34.2279 7.07633C34.7506 7.22472 35.0536 7.84272 35.2379 7.18567C35.9018 6.92118 34.8485 6.44375 35.087 6.16521C35.8534 5.42329 35.1036 7.31739 36.7901 6.00902C37.6278 5.71954 35.9539 5.31344 35.6862 5.03021C37.0421 4.40648 34.7162 3.86761 34.3065 3.54638C34.8214 2.55716 28.6145 3.42975 30.7139 4.17636C28.9477 4.29142 31.4761 4.39659 30.5785 4.99376C30.4343 4.97502 30.013 5.4967 30.0474 5.17599C29.8131 5.46859 29.1513 5.82575 29.6043 5.23847C30.1692 4.77093 29.3721 4.93493 29.3596 4.81206C28.5021 3.7109 30.3312 3.56824 30.8909 3.08873C29.5996 2.65347 28.9748 3.69424 28.0319 4.26018C27.9147 4.9089 26.1549 4.52206 26.7719 5.11924C26.0658 5.58 24.7163 5.34415 24.6007 4.9266C23.8796 4.80737 25.3978 5.07655 25.8086 5.02604C25.931 4.86777 26.1325 4.99636 26.0065 4.7652C26.0705 4.6996 27.0437 4.6392 26.0429 4.2758C25.844 4.00402 26.6042 3.39487 26.9385 3.25013C26.4642 2.73626 25.137 4.03578 25.3452 3.67706C24.6101 3.36207 23.4167 2.856 21.9244 2.92108ZM31.9629 3.37925C31.8192 3.45422 31.6865 3.64582 31.6141 3.79576C31.247 3.50108 32.2483 3.20379 31.9629 3.37925ZM33.4104 3.46255C33.513 3.663 34.1659 3.47192 33.3948 3.63436C32.985 3.77077 33.4161 3.1788 33.4104 3.46255ZM31.4839 3.75411C31.3741 3.76192 31.5974 4.12637 31.3902 3.92592C31.2829 3.77702 31.5771 3.65987 31.4839 3.75411ZM34.5663 3.82179C34.5507 3.84783 34.4934 3.87386 34.4465 3.86865C34.2679 3.88792 34.698 3.69996 34.5663 3.82179ZM35.3213 4.23831C35.2796 4.26434 35.1963 4.28517 35.139 4.28517C34.9099 4.28673 35.5582 4.117 35.3213 4.23831ZM35.8628 4.45698C36.6021 4.51113 34.8558 4.8282 35.6071 4.60796C35.8419 4.60849 35.8789 4.28621 35.8628 4.45698ZM30.6717 4.4778C30.6561 4.49342 30.6092 4.49863 30.5728 4.48301C30.4707 4.44396 30.7274 4.43824 30.6717 4.4778ZM35.6337 4.51946C35.6337 4.52987 35.5868 4.55069 35.5295 4.56631C35.3088 4.59443 35.6243 4.43303 35.6337 4.51946ZM18.0715 4.58193C18.0559 4.59755 18.009 4.60276 17.9726 4.58714C17.8705 4.54809 18.1272 4.54236 18.0715 4.58193ZM31.6245 4.60276C31.6412 4.66159 31.3178 4.6845 31.4683 4.60276C31.5672 4.53507 31.6245 4.53507 31.6245 4.60276ZM32.3951 4.58714C32.343 4.59755 32.2597 4.59755 32.2129 4.58714C32.0811 4.54965 32.5164 4.55694 32.3951 4.58714ZM17.6706 4.65482C17.63 4.69439 17.3738 4.73552 17.5404 4.65482C17.681 4.59235 17.7643 4.59235 17.6706 4.65482ZM29.0212 4.65482C29.0232 4.72146 28.9181 4.72146 28.917 4.65482C28.917 4.58558 29.0243 4.58662 29.0212 4.65482ZM28.136 4.76936C28.1839 4.96929 26.4579 5.96424 27.329 5.18067C27.7835 5.08279 27.5716 4.61317 28.136 4.76936ZM16.5251 4.83705C16.2856 4.93076 16.1502 4.93076 16.3168 4.84225C16.3934 4.77561 16.8656 4.71574 16.5251 4.83705ZM36.0502 4.8006C36.0554 4.85319 35.6795 4.80581 35.6857 4.77978C35.6831 4.7527 36.059 4.74906 36.0502 4.8006ZM29.1982 4.97762C29.1669 5.08696 29.068 5.19108 29.0368 5.15464C29.0009 5.1057 29.2721 4.66107 29.1982 4.97762ZM33.2646 4.96721C33.2438 5.01459 33.1209 5.05207 33.1605 4.96721C33.1808 4.91619 33.3042 4.88182 33.2646 4.96721ZM31.6766 5.01927C31.6766 5.0453 31.6505 5.07134 31.6193 5.07134C31.5323 5.05468 31.6859 4.88443 31.6766 5.01927ZM33.5874 4.99845C33.5718 5.01407 33.5249 5.01927 33.4885 5.00365C33.3865 4.9646 33.6431 4.95888 33.5874 4.99845ZM29.9844 5.32645C29.9688 5.35769 29.9271 5.38372 29.8959 5.38372C29.797 5.35352 30.0963 5.12809 29.9844 5.32645ZM26.7302 5.35248C26.7323 5.37279 26.5756 5.45245 26.574 5.38372C26.5657 5.32072 26.7198 5.32229 26.7302 5.35248ZM33.6968 5.3681C33.6447 5.37852 33.5614 5.37852 33.5145 5.3681C33.3828 5.33062 33.8181 5.33791 33.6968 5.3681ZM23.3979 5.62322C23.4073 5.64404 23.1668 5.66591 23.2157 5.59198C23.2417 5.55033 23.3979 5.57636 23.3979 5.62322ZM27.027 5.67528C27.0114 5.6909 26.9645 5.69611 26.9281 5.68049C26.826 5.64144 27.0827 5.63571 27.027 5.67528ZM19.7793 5.74817C18.8801 6.03348 19.7132 6.01318 20.0917 5.95122C19.6658 6.23341 17.8486 6.56454 18.9514 6.28964C19.4408 6.01734 18.0288 6.60411 18.2069 6.37815C19.8793 5.82054 16.9609 6.14282 19.7793 5.74817ZM34.2799 5.74297C34.9037 5.90384 34.0675 6.07357 34.0612 5.90957C34.1237 5.74817 34.2799 5.62842 34.2799 5.74297ZM36.9562 5.79503C36.977 5.82106 36.9405 5.83147 36.8833 5.81586C36.6448 5.75494 36.9093 5.71069 36.9562 5.79503ZM7.50191 5.88354C7.48629 5.89916 7.43943 5.90436 7.40298 5.88874C7.30093 5.8497 7.55762 5.84397 7.50191 5.88354ZM29.7865 6.07097C29.7865 6.16469 29.7761 6.21154 29.7657 6.1751C29.3023 6.07774 29.7022 5.6456 29.7865 6.07097ZM28.5265 6.24799C28.7577 6.39116 28.3615 6.29641 28.3547 6.22716C28.3287 6.14386 28.4016 6.14907 28.5265 6.24799ZM6.39809 6.5812C6.38247 6.60723 6.33561 6.63326 6.30437 6.63326C6.20909 6.62597 6.5142 6.44739 6.39809 6.5812ZM32.5096 6.63847C32.5096 6.6645 32.4732 6.68533 32.4315 6.68533C32.2753 6.65617 32.5013 6.44843 32.5096 6.63847ZM33.1605 7.04978C33.1344 7.1008 33.035 7.131 33.0303 7.04978C33.0189 6.99199 33.1964 6.97012 33.1605 7.04978ZM19.6647 7.66934C21.4975 7.47722 18.1506 8.36023 18.5708 8.039C19.116 8.05045 19.3227 7.30958 19.6647 7.66934ZM34.785 7.86198C34.7693 7.8776 34.7225 7.8828 34.686 7.86719C34.584 7.82814 34.8407 7.82241 34.785 7.86198ZM7.93406 8.07024C7.92365 8.10043 7.77005 8.10147 7.77786 8.039C7.77942 7.96975 7.93563 8.04993 7.93406 8.07024ZM7.50191 8.1223C7.48629 8.13792 7.43943 8.14313 7.40298 8.12751C7.30093 8.08846 7.55762 8.08273 7.50191 8.1223ZM7.28323 8.19519C7.23637 8.26808 7.04893 8.3618 7.04893 8.31494C6.9979 8.31858 7.34362 8.07076 7.28323 8.19519ZM5.60667 8.70021C5.57023 8.71063 5.49733 8.71063 5.45047 8.70021C5.32187 8.66793 5.70039 8.66117 5.60667 8.70021ZM5.90345 8.68459C5.90345 8.69501 5.85659 8.71583 5.79932 8.73145C5.57856 8.75957 5.89408 8.59817 5.90345 8.68459ZM11.2039 9.10631C11.17 9.15005 11.0622 8.89545 11.1674 9.0126C11.2039 9.04904 11.2195 9.09069 11.2039 9.10631ZM11.2924 9.23647C11.332 9.32134 11.2091 9.28385 11.1882 9.23647C11.1482 9.15109 11.2721 9.18545 11.2924 9.23647ZM11.032 9.3406C10.9654 9.39996 11.1586 9.53636 11.032 9.53324C10.8378 9.48013 11.0534 9.18337 11.032 9.3406ZM4.34145 9.39267C4.33988 9.47285 4.29511 9.44473 4.26335 9.39267C4.22534 9.31405 4.34769 9.33383 4.34145 9.39267ZM11.4746 9.62696C11.4017 9.71547 11.2351 9.73108 11.1935 9.65819C11.2065 9.65924 11.6225 9.46764 11.4746 9.62696ZM11.4017 9.81959C11.4163 9.81647 11.2226 9.95913 11.1935 9.91852C11.1976 9.83261 11.2955 9.67017 11.4017 9.81959ZM11.0581 9.9862C11.0581 9.99661 11.0164 10.0383 10.9696 10.0747C10.7665 10.2528 11.0789 9.87478 11.0581 9.9862ZM11.2663 10.1997C11.2778 10.3996 11.1299 10.1434 11.2143 10.1216C11.2455 10.1216 11.2663 10.158 11.2663 10.1997ZM11.6152 10.1528C11.5996 10.1684 11.5527 10.1736 11.5163 10.158C11.4142 10.119 11.6709 10.1132 11.6152 10.1528ZM10.9956 10.5537C10.9196 10.6953 10.9206 10.7401 10.9175 10.5433C10.8941 10.3361 11.1023 10.4053 10.9956 10.5537ZM21.9192 11.1681C21.8458 11.6877 22.0124 12.0891 21.4871 11.8241C21.4439 11.4768 21.3824 11.0556 21.9192 11.1681ZM34.9568 11.1316C34.9776 11.1415 34.4939 11.3399 34.7173 11.1889C34.811 11.116 34.9568 11.0848 34.9568 11.1316ZM11.1101 11.319C11.1086 11.3992 11.0638 11.3711 11.032 11.319C10.994 11.2404 11.1164 11.2602 11.1101 11.319ZM21.7839 12.2302C21.8099 12.2177 21.472 12.6123 21.4715 12.4957C21.4413 12.4384 21.8021 12.1219 21.7839 12.2302ZM11.6621 12.8601C11.7677 12.9939 12.1244 13.2376 11.9484 13.3548C11.85 13.4047 11.3611 12.5894 11.6621 12.8601ZM24.559 13.3287C24.6569 13.8483 24.8298 13.5932 24.9235 13.7244C24.9027 13.7723 24.784 14.5002 24.7204 14.2086C24.5137 14.0373 23.8962 14.4403 23.6739 14.0784C23.5302 14.066 24.1758 13.7426 23.7364 13.839C23.6494 13.9681 22.6211 14.3138 22.7466 14.1617C22.846 14.0732 22.8408 14.0732 22.6326 14.0941C21.7865 14.3008 24.0009 13.2381 23.4864 13.714C23.8566 13.6005 23.8322 13.2137 24.559 13.3287ZM11.813 13.5109C11.8354 13.55 11.4028 13.5708 11.5527 13.5214C11.647 13.5021 11.8391 13.3287 11.813 13.5109ZM31.8067 13.6619C31.8484 13.7296 31.7807 13.7296 31.6766 13.6619C31.5235 13.5792 31.7958 13.6041 31.8067 13.6619ZM32.3534 14.37C32.3628 14.3908 32.1223 14.4127 32.1712 14.3388C32.1972 14.2971 32.3534 14.3231 32.3534 14.37ZM25.5066 14.4689C25.5613 14.5002 25.011 14.4955 25.0641 14.4533C25.0641 14.4169 25.3869 14.4273 25.5066 14.4689ZM24.5434 14.5262C23.9124 14.9864 23.5192 15.4863 23.2214 16.1923C22.0156 16.9612 23.8764 13.9962 24.5434 14.5262ZM25.4285 14.6824C26.1981 14.2898 26.2752 15.3926 25.7566 14.9641C25.642 14.7657 25.5379 14.7553 25.5743 14.9427C25.5884 15.0916 24.8516 16.2198 24.9235 15.5727C24.9787 15.1452 24.6616 15.4925 24.5174 15.5362C24.4742 15.5279 25.0026 15.0432 24.9339 15.0156C25.0891 14.6746 24.2909 14.3872 25.4285 14.6824ZM25.5535 14.6095C25.5306 14.6501 25.4343 14.6751 25.4285 14.6095C25.4192 14.5574 25.5884 14.5392 25.5535 14.6095ZM27.2509 15.4165C27.2337 15.7726 26.4246 15.6185 26.1419 15.682C25.4874 15.6492 27.2009 15.3176 27.2509 15.4165ZM26.0533 15.9267C26.0325 16.072 24.0087 16.8186 24.4393 16.3172C24.8454 16.3651 25.4988 15.8283 26.0533 15.9267ZM24.7256 16.2131C24.7027 16.2662 24.5028 16.2922 24.4913 16.2131C24.4742 16.1548 24.7668 16.1345 24.7256 16.2131ZM26.1835 18.0926C26.2955 18.2904 25.9961 18.065 26.095 18.0353C26.1262 18.0353 26.1679 18.0614 26.1835 18.0926ZM26.1835 18.9725C26.2137 19.0584 25.9388 18.91 26.1002 18.9204C26.1314 18.9204 26.1679 18.9412 26.1835 18.9725ZM20.0396 21.5757C20.0552 21.6017 20.0344 21.6278 19.9876 21.6278C19.8563 21.622 19.999 21.444 20.0396 21.5757ZM20.628 30.0309C20.8165 30.2204 20.2349 30.1632 20.4093 30.0778C20.3609 29.8482 20.3 29.617 20.628 30.0309Z\" />\n    <path d=\"M28.7348 3.05126C28.0465 3.2189 26.7708 3.38186 27.3076 3.75933C27.5154 4.72564 29.7881 3.09447 28.7348 3.05126ZM28.8129 3.4105C28.9623 3.5115 28.7056 3.38134 28.6931 3.47298C28.5854 3.50057 28.6255 3.23712 28.8129 3.4105Z\" />\n    <path d=\"M5.65874 9.15315C5.3932 9.33017 3.98427 9.61704 4.68509 9.83519C5.09121 9.84196 6.57564 8.85482 5.65874 9.15315Z\" />\n    <path d=\"M22.2525 24.7568C19.5325 25.8929 23.7541 24.4241 23.9498 26.1886C26.9031 26.7108 23.5718 24.5506 22.2525 24.7568ZM24.1529 25.9491C24.1951 26.0293 23.8473 26.0032 23.8665 25.9491C23.8754 25.8694 24.1347 25.8923 24.1529 25.9491Z\" />\n    <path d=\"M25.6993 26.2094C25.7316 26.8686 26.322 26.7369 25.1156 26.8394C26.4475 27.7833 28.9082 26.1897 25.6993 26.2094Z\" />\n  </svg>\n);\n\nexport default WorldPreview;\n","import 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nimport GridLayout, {WidthProvider} from 'react-grid-layout';\nimport styled from '@emotion/styled';\n\nimport {defined} from 'sentry/utils';\nimport {uniqueId} from 'sentry/utils/guid';\nimport {\n  assignDefaultLayout,\n  calculateColumnDepths,\n} from 'sentry/views/dashboardsV2/layoutUtils';\nimport {DisplayType, WidgetLayout, WidgetPreview} from 'sentry/views/dashboardsV2/types';\n\nimport WidgetArea from './chartPreviews/area';\nimport WidgetBar from './chartPreviews/bar';\nimport WidgetLine from './chartPreviews/line';\nimport WidgetBigNumber from './chartPreviews/number';\nimport WidgetTable from './chartPreviews/table';\nimport WidgetWorldMap from './chartPreviews/world';\n\nfunction miniWidget(displayType: DisplayType): () => JSX.Element {\n  switch (displayType) {\n    case DisplayType.BAR:\n      return WidgetBar;\n    case DisplayType.AREA:\n    case DisplayType.TOP_N:\n      return WidgetArea;\n    case DisplayType.BIG_NUMBER:\n      return WidgetBigNumber;\n    case DisplayType.TABLE:\n      return WidgetTable;\n    case DisplayType.WORLD_MAP:\n      return WidgetWorldMap;\n    case DisplayType.LINE:\n    default:\n      return WidgetLine;\n  }\n}\n\ntype Props = {\n  widgetPreview: WidgetPreview[];\n};\n\nfunction GridPreview({widgetPreview}: Props) {\n  const definedLayouts = widgetPreview\n    .map(({layout}) => layout)\n    .filter((layout): layout is WidgetLayout => defined(layout));\n  const columnDepths = calculateColumnDepths(definedLayouts);\n  const renderPreview = assignDefaultLayout(widgetPreview, columnDepths);\n\n  return (\n    <StyledGridLayout\n      cols={6}\n      rowHeight={40}\n      margin={[4, 4]}\n      isResizable={false}\n      isDraggable={false}\n      useCSSTransforms={false}\n      measureBeforeMount\n    >\n      {renderPreview.map(({displayType, layout}) => {\n        const Preview = miniWidget(displayType);\n        return (\n          <Chart key={uniqueId()} data-grid={{...layout}}>\n            <PreviewWrapper>\n              <Preview />\n            </PreviewWrapper>\n          </Chart>\n        );\n      })}\n    </StyledGridLayout>\n  );\n}\n\nexport default GridPreview;\n\nconst PreviewWrapper = styled('div')`\n  padding: 20px 8px 4px 12px;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\n// ::before is the widget title and ::after is the border\nconst Chart = styled('div')`\n  background: white;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 12px;\n    top: 10px;\n    width: max(30px, 30%);\n    height: 4px;\n    background-color: #d4d1ec;\n    border-radius: 8px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 2px;\n    top: 2px;\n    width: 100%;\n    height: 100%;\n    border: 2px solid #444674;\n  }\n`;\n\nconst StyledGridLayout = styled(WidthProvider(GridLayout))`\n  margin: -4px;\n`;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, Query} from 'history';\n\nimport {\n  createDashboard,\n  deleteDashboard,\n  fetchDashboard,\n} from 'sentry/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport {MenuItemProps} from 'sentry/components/dropdownMenuItemV2';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport Pagination from 'sentry/components/pagination';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport withApi from 'sentry/utils/withApi';\nimport {DashboardListItem, DisplayType} from 'sentry/views/dashboardsV2/types';\n\nimport {cloneDashboard, miniWidget} from '../utils';\n\nimport DashboardCard from './dashboardCard';\nimport GridPreview from './gridPreview';\n\ntype Props = {\n  api: Client;\n  dashboards: DashboardListItem[] | null;\n  location: Location;\n  onDashboardsChange: () => void;\n  organization: Organization;\n  pageLinks: string;\n};\n\nfunction DashboardList({\n  api,\n  organization,\n  location,\n  dashboards,\n  pageLinks,\n  onDashboardsChange,\n}: Props) {\n  function handleDelete(dashboard: DashboardListItem) {\n    deleteDashboard(api, organization.slug, dashboard.id)\n      .then(() => {\n        trackAnalyticsEvent({\n          eventKey: 'dashboards_manage.delete',\n          eventName: 'Dashboards Manager: Dashboard Deleted',\n          organization_id: parseInt(organization.id, 10),\n          dashboard_id: parseInt(dashboard.id, 10),\n        });\n        onDashboardsChange();\n        addSuccessMessage(t('Dashboard deleted'));\n      })\n      .catch(() => {\n        addErrorMessage(t('Error deleting Dashboard'));\n      });\n  }\n\n  async function handleDuplicate(dashboard: DashboardListItem) {\n    try {\n      const dashboardDetail = await fetchDashboard(api, organization.slug, dashboard.id);\n      const newDashboard = cloneDashboard(dashboardDetail);\n      newDashboard.widgets.map(widget => (widget.id = undefined));\n      await createDashboard(api, organization.slug, newDashboard, true);\n\n      trackAnalyticsEvent({\n        eventKey: 'dashboards_manage.duplicate',\n        eventName: 'Dashboards Manager: Dashboard Duplicated',\n        organization_id: parseInt(organization.id, 10),\n        dashboard_id: parseInt(dashboard.id, 10),\n      });\n      onDashboardsChange();\n      addSuccessMessage(t('Dashboard duplicated'));\n    } catch (e) {\n      addErrorMessage(t('Error duplicating Dashboard'));\n    }\n  }\n\n  function renderDropdownMenu(dashboard: DashboardListItem) {\n    const menuItems: MenuItemProps[] = [\n      {\n        key: 'dashboard-duplicate',\n        label: t('Duplicate'),\n        onAction: () => handleDuplicate(dashboard),\n      },\n      {\n        key: 'dashboard-delete',\n        label: t('Delete'),\n        priority: 'danger',\n        onAction: () => {\n          openConfirmModal({\n            message: t('Are you sure you want to delete this dashboard?'),\n            priority: 'danger',\n            onConfirm: () => handleDelete(dashboard),\n          });\n        },\n      },\n    ];\n\n    return (\n      <DropdownMenuControlV2\n        items={menuItems}\n        trigger={({props: triggerProps, ref: triggerRef}) => (\n          <DropdownTrigger\n            ref={triggerRef}\n            {...triggerProps}\n            aria-label={t('Dashboard actions')}\n            size=\"xsmall\"\n            borderless\n            onClick={e => {\n              e.stopPropagation();\n              e.preventDefault();\n\n              triggerProps.onClick?.(e);\n            }}\n            icon={<IconEllipsis direction=\"down\" size=\"sm\" />}\n          />\n        )}\n        placement=\"bottom right\"\n        disabledKeys={dashboards && dashboards.length <= 1 ? ['dashboard-delete'] : []}\n        offset={4}\n      />\n    );\n  }\n\n  function renderDndPreview(dashboard) {\n    return (\n      <WidgetGrid>\n        {dashboard.widgetDisplay.map((displayType, i) => {\n          return displayType === DisplayType.BIG_NUMBER ? (\n            <BigNumberWidgetWrapper key={`${i}-${displayType}`}>\n              <WidgetImage src={miniWidget(displayType)} />\n            </BigNumberWidgetWrapper>\n          ) : (\n            <MiniWidgetWrapper key={`${i}-${displayType}`}>\n              <WidgetImage src={miniWidget(displayType)} />\n            </MiniWidgetWrapper>\n          );\n        })}\n      </WidgetGrid>\n    );\n  }\n\n  function renderGridPreview(dashboard) {\n    return <GridPreview widgetPreview={dashboard.widgetPreview} />;\n  }\n\n  function renderMiniDashboards() {\n    const isUsingGrid = organization.features.includes('dashboard-grid-layout');\n    return dashboards?.map((dashboard, index) => {\n      const widgetRenderer = isUsingGrid ? renderGridPreview : renderDndPreview;\n      const widgetCount = isUsingGrid\n        ? dashboard.widgetPreview.length\n        : dashboard.widgetDisplay.length;\n      return (\n        <DashboardCard\n          key={`${index}-${dashboard.id}`}\n          title={dashboard.title}\n          to={{\n            pathname: `/organizations/${organization.slug}/dashboard/${dashboard.id}/`,\n            query: {...location.query},\n          }}\n          detail={tn('%s widget', '%s widgets', widgetCount)}\n          dateStatus={\n            dashboard.dateCreated ? <TimeSince date={dashboard.dateCreated} /> : undefined\n          }\n          createdBy={dashboard.createdBy}\n          renderWidgets={() => widgetRenderer(dashboard)}\n          renderContextMenu={() => renderDropdownMenu(dashboard)}\n        />\n      );\n    });\n  }\n\n  function renderDashboardGrid() {\n    if (!dashboards?.length) {\n      return (\n        <EmptyStateWarning>\n          <p>{t('Sorry, no Dashboards match your filters.')}</p>\n        </EmptyStateWarning>\n      );\n    }\n    return <DashboardGrid>{renderMiniDashboards()}</DashboardGrid>;\n  }\n\n  return (\n    <Fragment>\n      {renderDashboardGrid()}\n      <PaginationRow\n        pageLinks={pageLinks}\n        onCursor={(cursor, path, query, direction) => {\n          const offset = Number(cursor?.split?.(':')?.[1] ?? 0);\n\n          const newQuery: Query & {cursor?: string} = {...query, cursor};\n          const isPrevious = direction === -1;\n\n          if (offset <= 0 && isPrevious) {\n            delete newQuery.cursor;\n          }\n\n          trackAnalyticsEvent({\n            eventKey: 'dashboards_manage.paginate',\n            eventName: 'Dashboards Manager: Paginate',\n            organization_id: parseInt(organization.id, 10),\n          });\n\n          browserHistory.push({\n            pathname: path,\n            query: newQuery,\n          });\n        }}\n      />\n    </Fragment>\n  );\n}\n\nconst DashboardGrid = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-template-rows: repeat(3, max-content);\n  gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n`;\n\nconst WidgetGrid = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  grid-auto-flow: row dense;\n  gap: ${space(0.25)};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: repeat(6, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xxlarge}) {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n`;\n\nconst BigNumberWidgetWrapper = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n\n  /* 2 cols */\n  grid-area: span 1 / span 2;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    /* 4 cols */\n    grid-area: span 1 / span 1;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    /* 6 and 8 cols */\n    grid-area: span 1 / span 2;\n  }\n`;\n\nconst MiniWidgetWrapper = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n  grid-area: span 2 / span 2;\n`;\n\nconst WidgetImage = styled('img')`\n  width: 100%;\n  height: 100%;\n`;\n\nconst PaginationRow = styled(Pagination)`\n  margin-bottom: ${space(3)};\n`;\n\nconst DropdownTrigger = styled(Button)`\n  transform: translateX(${space(1)});\n`;\n\nexport default withApi(DashboardList);\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Card from 'sentry/components/card';\nimport {IconAdd, IconGeneric} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  description: string;\n  onAdd: () => void;\n  onPreview: () => void;\n  title: string;\n};\n\nfunction TemplateCard({title, description, onPreview, onAdd}: Props) {\n  return (\n    <StyledCard>\n      <Header>\n        <IconGeneric size=\"48\" />\n        <Title>\n          {title}\n          <Detail>{description}</Detail>\n        </Title>\n      </Header>\n      <ButtonContainer>\n        <StyledButton onClick={onAdd} icon={<IconAdd isCircled />}>\n          {t('Add Dashboard')}\n        </StyledButton>\n        <StyledButton priority=\"primary\" onClick={onPreview}>\n          {t('Preview')}\n        </StyledButton>\n      </ButtonContainer>\n    </StyledCard>\n  );\n}\n\nconst StyledCard = styled(Card)`\n  gap: ${space(1)};\n  padding: ${space(2)};\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  gap: ${space(2)};\n`;\n\nconst Title = styled('div')`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst Detail = styled(Title)`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst ButtonContainer = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${space(1)};\n`;\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`;\n\nexport default TemplateCard;\n","const SHOW_TEMPLATES_KEY = 'dashboards-show-templates';\n\nexport function shouldShowTemplates(): boolean {\n  const shouldShow = localStorage.getItem(SHOW_TEMPLATES_KEY);\n  return shouldShow === 'true' || shouldShow === null;\n}\nexport function setShowTemplates(value: boolean) {\n  localStorage.setItem(SHOW_TEMPLATES_KEY, value ? 'true' : 'false');\n}\n","import {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {createDashboard} from 'sentry/actionCreators/dashboards';\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DropdownControl, {DropdownItem} from 'sentry/components/dropdownControl';\nimport {Title} from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SearchBar from 'sentry/components/searchBar';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport Switch from 'sentry/components/switchButton';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, SelectValue} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {DASHBOARDS_TEMPLATES} from '../data';\nimport {assignDefaultLayout, getInitialColumnDepths} from '../layoutUtils';\nimport {DashboardDetails, DashboardListItem} from '../types';\n\nimport DashboardList from './dashboardList';\nimport TemplateCard from './templateCard';\nimport {setShowTemplates, shouldShowTemplates} from './utils';\n\nconst SORT_OPTIONS: SelectValue<string>[] = [\n  {label: t('My Dashboards'), value: 'mydashboards'},\n  {label: t('Dashboard Name (A-Z)'), value: 'title'},\n  {label: t('Date Created (Newest)'), value: '-dateCreated'},\n  {label: t('Date Created (Oldest)'), value: 'dateCreated'},\n  {label: t('Most Popular'), value: 'mostPopular'},\n  {label: t('Recently Viewed'), value: 'recentlyViewed'},\n];\n\ntype Props = {\n  api: Client;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n} & AsyncView['props'];\n\ntype State = {\n  dashboards: DashboardListItem[] | null;\n  dashboardsPageLinks: string;\n  showTemplates: boolean;\n} & AsyncView['state'];\n\nclass ManageDashboards extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      showTemplates: shouldShowTemplates(),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, location} = this.props;\n    return [\n      [\n        'dashboards',\n        `/organizations/${organization.slug}/dashboards/`,\n        {\n          query: {\n            ...pick(location.query, ['cursor', 'query']),\n            sort: this.getActiveSort().value,\n            per_page: '9',\n          },\n        },\n      ],\n    ];\n  }\n\n  getActiveSort() {\n    const {location} = this.props;\n\n    const urlSort = decodeScalar(location.query.sort, 'mydashboards');\n    return SORT_OPTIONS.find(item => item.value === urlSort) || SORT_OPTIONS[0];\n  }\n\n  onDashboardsChange() {\n    this.reloadData();\n  }\n\n  handleSearch(query: string) {\n    const {location, router, organization} = this.props;\n    trackAdvancedAnalyticsEvent('dashboards_manage.search', {\n      organization,\n    });\n\n    router.push({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, query},\n    });\n  }\n\n  handleSortChange = (value: string) => {\n    const {location, organization} = this.props;\n    trackAdvancedAnalyticsEvent('dashboards_manage.change_sort', {\n      organization,\n      sort: value,\n    });\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        sort: value,\n      },\n    });\n  };\n\n  toggleTemplates = () => {\n    const {showTemplates} = this.state;\n    const {organization} = this.props;\n\n    trackAdvancedAnalyticsEvent('dashboards_manage.templates.toggle', {\n      organization,\n      show_templates: !showTemplates,\n    });\n\n    this.setState({showTemplates: !showTemplates}, () => {\n      setShowTemplates(!showTemplates);\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  renderTemplates() {\n    return (\n      <TemplateContainer>\n        {DASHBOARDS_TEMPLATES.map(dashboard => (\n          <TemplateCard\n            title={dashboard.title}\n            description={dashboard.description}\n            onPreview={() => this.onPreview(dashboard.id)}\n            onAdd={() => this.onAdd(dashboard)}\n            key={dashboard.title}\n          />\n        ))}\n      </TemplateContainer>\n    );\n  }\n\n  renderActions() {\n    const activeSort = this.getActiveSort();\n\n    return (\n      <StyledActions>\n        <SearchBar\n          defaultQuery=\"\"\n          query={this.getQuery()}\n          placeholder={t('Search Dashboards')}\n          onSearch={query => this.handleSearch(query)}\n        />\n        <DropdownControl buttonProps={{prefix: t('Sort By')}} label={activeSort.label}>\n          {SORT_OPTIONS.map(({label, value}) => (\n            <DropdownItem\n              key={value}\n              onSelect={this.handleSortChange}\n              eventKey={value}\n              isActive={value === activeSort.value}\n            >\n              {label}\n            </DropdownItem>\n          ))}\n        </DropdownControl>\n      </StyledActions>\n    );\n  }\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  renderDashboards() {\n    const {dashboards, dashboardsPageLinks} = this.state;\n    const {organization, location, api} = this.props;\n    return (\n      <DashboardList\n        api={api}\n        dashboards={dashboards}\n        organization={organization}\n        pageLinks={dashboardsPageLinks}\n        location={location}\n        onDashboardsChange={() => this.onDashboardsChange()}\n      />\n    );\n  }\n\n  getTitle() {\n    return t('Dashboards');\n  }\n\n  onCreate() {\n    const {organization, location} = this.props;\n    trackAdvancedAnalyticsEvent('dashboards_manage.create.start', {\n      organization,\n    });\n\n    browserHistory.push({\n      pathname: `/organizations/${organization.slug}/dashboards/new/`,\n      query: location.query,\n    });\n  }\n\n  async onAdd(dashboard: DashboardDetails) {\n    const {organization, api} = this.props;\n    trackAdvancedAnalyticsEvent('dashboards_manage.templates.add', {\n      organization,\n      dashboard_id: dashboard.id,\n      dashboard_title: dashboard.title,\n      was_previewed: false,\n    });\n\n    await createDashboard(\n      api,\n      organization.slug,\n      {\n        ...dashboard,\n        widgets: assignDefaultLayout(dashboard.widgets, getInitialColumnDepths()),\n      },\n      true\n    );\n    this.onDashboardsChange();\n    addSuccessMessage(`${dashboard.title} dashboard template successfully added.`);\n  }\n\n  onPreview(dashboardId: string) {\n    const {organization, location} = this.props;\n    trackAdvancedAnalyticsEvent('dashboards_manage.templates.preview', {\n      organization,\n      dashboard_id: dashboardId,\n    });\n\n    browserHistory.push({\n      pathname: `/organizations/${organization.slug}/dashboards/new/${dashboardId}/`,\n      query: location.query,\n    });\n  }\n\n  renderLoading() {\n    return (\n      <PageContent>\n        <LoadingIndicator />\n      </PageContent>\n    );\n  }\n\n  renderBody() {\n    const {showTemplates} = this.state;\n    const {organization} = this.props;\n\n    return (\n      <Feature\n        organization={organization}\n        features={['dashboards-edit']}\n        renderDisabled={this.renderNoAccess}\n      >\n        <SentryDocumentTitle title={t('Dashboards')} orgSlug={organization.slug}>\n          <StyledPageContent>\n            <NoProjectMessage organization={organization}>\n              <PageContent>\n                <StyledPageHeader>\n                  <StyledTitle>{t('Dashboards')}</StyledTitle>\n                  <ButtonBar gap={1.5}>\n                    <TemplateSwitch>\n                      {t('Show Templates')}\n                      <Switch\n                        isActive={showTemplates}\n                        size=\"lg\"\n                        toggle={this.toggleTemplates}\n                      />\n                    </TemplateSwitch>\n                    <Button\n                      data-test-id=\"dashboard-create\"\n                      onClick={event => {\n                        event.preventDefault();\n                        this.onCreate();\n                      }}\n                      priority=\"primary\"\n                      icon={<IconAdd isCircled />}\n                    >\n                      {t('Create Dashboard')}\n                    </Button>\n                  </ButtonBar>\n                </StyledPageHeader>\n                {showTemplates && this.renderTemplates()}\n                {this.renderActions()}\n                {this.renderDashboards()}\n              </PageContent>\n            </NoProjectMessage>\n          </StyledPageContent>\n        </SentryDocumentTitle>\n      </Feature>\n    );\n  }\n}\n\nconst StyledTitle = styled(Title)`\n  width: auto;\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledPageHeader = styled('div')`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledActions = styled('div')`\n  display: grid;\n  grid-template-columns: auto max-content;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto;\n  }\n`;\n\nconst TemplateSwitch = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  width: max-content;\n`;\n\nconst TemplateContainer = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: repeat(2, minmax(200px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    grid-template-columns: repeat(4, minmax(200px, 1fr));\n  }\n`;\n\nexport default withApi(withOrganization(ManageDashboards));\n"],"names":["ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","DropdownControl","Component","renderButton","isOpen","getActorProps","label","button","buttonProps","buttonTooltipTitle","priority","detached","fullWidth","this","props","skipWrapper","position","title","StyledDropdownButton","hideBottomBorder","rightAlignChevron","renderChildren","getMenuProps","children","alignRight","menuWidth","blendWithActor","alignMenu","Content","blendCorner","render","alwaysRenderMenu","Container","Fragment","breakpoints","small","DropdownButton","zIndex","dropdownAutocomplete","actor","DropdownBubble","border","DropdownItem","MenuItem","fontSizeMedium","AsyncView","AsyncComponent","getTitle","renderComponent","DashboardCard","detail","createdBy","renderWidgets","dateStatus","to","onEventClick","renderContextMenu","onClick","StyledDashboardCard","interactive","CardHeader","CardContent","Title","Detail","AvatarWrapper","CardBody","CardFooter","DateSelected","DateStatus","t","space","Card","text","cardTitle","headingColor","overflowEllipsis","familyMono","fontSizeSmall","gray300","gray100","subText","AreaPreview","viewBox","xmlns","preserveAspectRatio","fill","d","BarPreview","transform","LinePreview","stroke","strokeWidth","vectorEffect","NumberPreview","rx","TablePreview","x","y","WorldPreview","GridPreview","widgetPreview","definedLayouts","map","layout","filter","defined","columnDepths","calculateColumnDepths","renderPreview","assignDefaultLayout","StyledGridLayout","cols","rowHeight","margin","isResizable","isDraggable","useCSSTransforms","measureBeforeMount","displayType","Preview","DisplayType","WidgetBar","WidgetArea","WidgetBigNumber","WidgetTable","WidgetWorldMap","WidgetLine","miniWidget","Chart","PreviewWrapper","uniqueId","WidthProvider","GridLayout","DashboardList","api","organization","location","dashboards","pageLinks","onDashboardsChange","renderDndPreview","dashboard","WidgetGrid","widgetDisplay","i","BigNumberWidgetWrapper","WidgetImage","src","MiniWidgetWrapper","renderGridPreview","length","DashboardGrid","isUsingGrid","features","includes","index","widgetRenderer","widgetCount","pathname","slug","id","query","tn","dateCreated","date","undefined","menuItems","key","onAction","async","dashboardDetail","fetchDashboard","newDashboard","cloneDashboard","widgets","widget","createDashboard","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","dashboard_id","addSuccessMessage","e","addErrorMessage","handleDuplicate","openConfirmModal","message","onConfirm","deleteDashboard","then","catch","handleDelete","items","trigger","triggerProps","ref","triggerRef","DropdownTrigger","borderless","stopPropagation","preventDefault","icon","direction","placement","disabledKeys","offset","renderDropdownMenu","renderMiniDashboards","PaginationRow","onCursor","cursor","path","newQuery","Number","split","browserHistory","large","medium","xlarge","xxlarge","Pagination","Button","withApi","TemplateCard","description","onPreview","onAdd","StyledCard","Header","ButtonContainer","StyledButton","isCircled","SHOW_TEMPLATES_KEY","shouldShowTemplates","shouldShow","localStorage","getItem","SORT_OPTIONS","value","ManageDashboards","trackAdvancedAnalyticsEvent","sort","showTemplates","state","show_templates","setState","setItem","getDefaultState","super","getEndpoints","pick","getActiveSort","per_page","urlSort","decodeScalar","find","item","reloadData","handleSearch","router","push","getQuery","renderTemplates","TemplateContainer","DASHBOARDS_TEMPLATES","renderActions","activeSort","StyledActions","defaultQuery","placeholder","onSearch","prefix","onSelect","handleSortChange","isActive","renderNoAccess","renderDashboards","dashboardsPageLinks","onCreate","dashboard_title","was_previewed","getInitialColumnDepths","dashboardId","renderLoading","renderBody","renderDisabled","orgSlug","StyledPageContent","StyledPageHeader","StyledTitle","gap","TemplateSwitch","toggle","toggleTemplates","event","PageContent","fontSizeLarge","withOrganization"],"sourceRoot":""}