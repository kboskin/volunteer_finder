{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupActivity_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/commitLink.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/components/reprocessedBox.tsx","webpack:///./app/components/activity/note/body.tsx","webpack:///./app/components/activity/note/editorTools.tsx","webpack:///./app/components/activity/note/header.tsx","webpack:///./app/components/activity/note/mentionables.tsx","webpack:///./app/components/activity/note/mentionStyle.tsx","webpack:///./app/components/activity/note/input.tsx","webpack:///./app/components/activity/note/index.tsx","webpack:///./app/components/activity/note/inputWithStorage.tsx","webpack:///./app/views/organizationGroupDetails/groupActivityItem.tsx","webpack:///./app/views/organizationGroupDetails/groupActivity.tsx","webpack:///./app/views/organizationGroupDetails/utils.tsx"],"sourcesContent":["import Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\nimport {getShortCommitHash} from 'sentry/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  commitUrl: (opts: CommitFormatterParameters) => string;\n  icon: React.ReactNode;\n  providerIds: string[];\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId: string;\n  inline?: boolean;\n  repository?: Repository;\n};\n\nfunction CommitLink({inline, commitId, repository}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button external href={commitUrl} size=\"small\" icon={providerData.icon}>\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink href={commitUrl}>\n      {providerData.icon}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import {ButtonProps} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\n\nimport Anchor from './anchor';\n\ntype Props = {\n  message: React.ReactNode;\n  onConfirm: () => void;\n  title: string;\n  children?: React.ReactNode;\n  className?: string;\n  disabled?: boolean;\n  priority?: ButtonProps['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nfunction LinkWithConfirmation({\n  className,\n  disabled,\n  title,\n  children,\n  ...otherProps\n}: Props) {\n  return (\n    <Confirm {...otherProps} disabled={disabled}>\n      <Anchor href=\"#\" className={className} disabled={disabled} title={title}>\n        {children}\n      </Anchor>\n    </Confirm>\n  );\n}\n\nexport default LinkWithConfirmation;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {PullRequest, Repository} from 'sentry/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nfunction PullRequestLink({pullRequest, repository, inline}: Props) {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  if (!pullRequest.externalUrl) {\n    return <span>{displayId}</span>;\n  }\n\n  return !inline ? (\n    <Button\n      external\n      href={pullRequest.externalUrl}\n      size=\"small\"\n      icon={renderIcon(repository)}\n    >\n      {displayId}\n    </Button>\n  ) : (\n    <ExternalPullLink href={pullRequest.externalUrl}>\n      {renderIcon(repository)}\n      {displayId}\n    </ExternalPullLink>\n  );\n}\n\nconst ExternalPullLink = styled(ExternalLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nexport default PullRequestLink;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {BannerContainer, BannerSummary} from 'sentry/components/events/styles';\nimport Link from 'sentry/components/links/link';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {GroupActivityReprocess, Organization} from 'sentry/types';\nimport localStorage from 'sentry/utils/localStorage';\n\ntype Props = {\n  groupCount: number;\n  groupId: string;\n  orgSlug: Organization['slug'];\n  reprocessActivity: GroupActivityReprocess;\n  className?: string;\n};\n\ntype State = {\n  isBannerHidden: boolean;\n};\n\nclass ReprocessedBox extends Component<Props, State> {\n  state: State = {\n    isBannerHidden: localStorage.getItem(this.getBannerUniqueId()) === 'true',\n  };\n\n  getBannerUniqueId() {\n    const {reprocessActivity} = this.props;\n    const {id} = reprocessActivity;\n\n    return `reprocessed-activity-${id}-banner-dismissed`;\n  }\n\n  handleBannerDismiss = () => {\n    localStorage.setItem(this.getBannerUniqueId(), 'true');\n    this.setState({isBannerHidden: true});\n  };\n\n  renderMessage() {\n    const {orgSlug, reprocessActivity, groupCount, groupId} = this.props;\n    const {data} = reprocessActivity;\n    const {eventCount, oldGroupId, newGroupId} = data;\n\n    const reprocessedEventsRoute = `/organizations/${orgSlug}/issues/?query=reprocessing.original_issue_id:${oldGroupId}`;\n\n    if (groupCount === 0) {\n      return tct('All events in this issue were moved during reprocessing. [link]', {\n        link: (\n          <Link to={reprocessedEventsRoute}>\n            {tn('See %s new event', 'See %s new events', eventCount)}\n          </Link>\n        ),\n      });\n    }\n\n    return tct('Events in this issue were successfully reprocessed. [link]', {\n      link: (\n        <Link to={reprocessedEventsRoute}>\n          {newGroupId === Number(groupId)\n            ? tn('See %s reprocessed event', 'See %s reprocessed events', eventCount)\n            : tn('See %s new event', 'See %s new events', eventCount)}\n        </Link>\n      ),\n    });\n  }\n\n  render() {\n    const {isBannerHidden} = this.state;\n\n    if (isBannerHidden) {\n      return null;\n    }\n\n    const {className} = this.props;\n\n    return (\n      <BannerContainer priority=\"success\" className={className}>\n        <StyledBannerSummary>\n          <IconCheckmark color=\"green300\" isCircled />\n          <span>{this.renderMessage()}</span>\n          <StyledIconClose\n            color=\"green300\"\n            aria-label={t('Dismiss')}\n            isCircled\n            onClick={this.handleBannerDismiss}\n          />\n        </StyledBannerSummary>\n      </BannerContainer>\n    );\n  }\n}\n\nexport default ReprocessedBox;\n\nconst StyledBannerSummary = styled(BannerSummary)`\n  & > svg:last-child {\n    margin-right: 0;\n    margin-left: ${space(1)};\n  }\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n`;\n","import marked from 'sentry/utils/marked';\n\ntype Props = {\n  text: string;\n  className?: string;\n};\n\nconst NoteBody = ({className, text}: Props) => (\n  <div\n    className={className}\n    data-test-id=\"activity-note-body\"\n    dangerouslySetInnerHTML={{__html: marked(text)}}\n  />\n);\n\nexport default NoteBody;\n","import styled from '@emotion/styled';\n\nconst EditorTools = styled('span')`\n  display: none;\n`;\n\nexport default EditorTools;\n","import styled from '@emotion/styled';\n\nimport ActivityAuthor from 'sentry/components/activity/author';\nimport LinkWithConfirmation from 'sentry/components/links/linkWithConfirmation';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {User} from 'sentry/types';\nimport {Theme} from 'sentry/utils/theme';\n\nimport EditorTools from './editorTools';\n\ntype Props = {\n  authorName: string;\n  onDelete: () => void;\n  onEdit: () => void;\n  user?: User;\n};\n\nconst NoteHeader = ({authorName, user, onEdit, onDelete}: Props) => {\n  const activeUser = ConfigStore.get('user');\n  const canEdit = activeUser && (activeUser.isSuperuser || user?.id === activeUser.id);\n\n  return (\n    <div>\n      <ActivityAuthor>{authorName}</ActivityAuthor>\n      {canEdit && (\n        <EditorTools>\n          <Tooltip\n            title={t('You can edit this comment due to your superuser status')}\n            disabled={!activeUser.isSuperuser}\n          >\n            <Edit onClick={onEdit}>{t('Edit')}</Edit>\n          </Tooltip>\n          <Tooltip\n            title={t('You can delete this comment due to your superuser status')}\n            disabled={!activeUser.isSuperuser}\n          >\n            <LinkWithConfirmation\n              title={t('Remove')}\n              message={t('Are you sure you wish to delete this comment?')}\n              onConfirm={onDelete}\n            >\n              <Remove>{t('Remove')}</Remove>\n            </LinkWithConfirmation>\n          </Tooltip>\n        </EditorTools>\n      )}\n    </div>\n  );\n};\n\nconst getActionStyle = (p: {theme: Theme}) => `\n  padding: 0 7px;\n  color: ${p.theme.gray200};\n  font-weight: normal;\n`;\n\nconst Edit = styled('a')`\n  ${getActionStyle};\n  margin-left: 7px;\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst Remove = styled('span')`\n  ${getActionStyle};\n  border-left: 1px solid ${p => p.theme.border};\n\n  &:hover {\n    color: ${p => p.theme.error};\n  }\n`;\n\nexport default NoteHeader;\n","import {PureComponent} from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport {Organization, Project, User} from 'sentry/types';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport Projects from 'sentry/utils/projects';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport {Mentionable} from './types';\n\nconst buildUserId = (id: string) => `user:${id}`;\nconst buildTeamId = (id: string) => `team:${id}`;\n\ntype ChildFuncProps = {\n  members: Mentionable[];\n  teams: Mentionable[];\n};\n\ntype Props = {\n  children: (props: ChildFuncProps) => React.ReactNode;\n  me: User;\n  organization: Organization;\n  projectSlugs: string[];\n};\n\ntype State = {\n  members: User[];\n};\n\n/**\n * Make sure the actionCreator, `fetchOrgMembers`, has been called somewhere\n * higher up the component chain.\n *\n * Will provide a list of users and teams that can be used for @-mentions\n * */\nclass Mentionables extends PureComponent<Props, State> {\n  state: State = {\n    members: MemberListStore.getAll(),\n  };\n\n  componentWillUnmount() {\n    this.listeners.forEach(callIfFunction);\n  }\n\n  listeners = [\n    MemberListStore.listen((users: User[]) => {\n      this.handleMemberListUpdate(users);\n    }, undefined),\n  ];\n\n  handleMemberListUpdate = (members: User[]) => {\n    if (members === this.state.members) {\n      return;\n    }\n\n    this.setState({\n      members,\n    });\n  };\n\n  getMemberList(memberList: User[], sessionUser: User): Mentionable[] {\n    const members = uniqBy(memberList, ({id}) => id).filter(\n      ({id}) => !sessionUser || sessionUser.id !== id\n    );\n    return members.map(member => ({\n      id: buildUserId(member.id),\n      display: member.name,\n      email: member.email,\n    }));\n  }\n\n  getTeams(projects: Project[]): Mentionable[] {\n    const uniqueTeams = uniqBy(\n      projects\n        .map(({teams}) => teams)\n        .reduce((acc, teams) => acc.concat(teams || []), []),\n      'id'\n    );\n\n    return uniqueTeams.map(team => ({\n      id: buildTeamId(team.id),\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  renderChildren = ({projects}) => {\n    const {children, me} = this.props;\n    if (isRenderFunc<ChildFuncProps>(children)) {\n      return children({\n        members: this.getMemberList(this.state.members, me),\n        teams: this.getTeams(projects),\n      });\n    }\n    return null;\n  };\n\n  render() {\n    const {organization, projectSlugs} = this.props;\n\n    if (!projectSlugs || !projectSlugs.length) {\n      return this.renderChildren({projects: []});\n    }\n\n    return (\n      <Projects slugs={projectSlugs} orgId={organization.slug}>\n        {this.renderChildren}\n      </Projects>\n    );\n  }\n}\n\nexport default withOrganization(Mentionables);\n","import space from 'sentry/styles/space';\n\n/**\n * Note this is an object for `react-mentions` component and\n * not a styled component/emotion style\n */\nexport default function mentionStyle({theme, minHeight}) {\n  return {\n    control: {\n      backgroundColor: `${theme.background}`,\n      fontSize: 15,\n      fontWeight: 'normal',\n    },\n\n    input: {\n      margin: 0,\n    },\n\n    '&singleLine': {\n      control: {\n        display: 'inline-block',\n        width: 130,\n      },\n\n      highlighter: {\n        padding: 1,\n        border: '2px inset transparent',\n      },\n\n      input: {\n        padding: 1,\n        border: '2px inset',\n      },\n    },\n\n    '&multiLine': {\n      control: {\n        fontFamily: 'Rubik, Avenir Next, Helvetica Neue, sans-serif',\n        minHeight,\n      },\n\n      highlighter: {\n        padding: 20,\n        minHeight,\n      },\n\n      input: {\n        padding: `${space(1.5)} ${space(2)} 0`,\n        minHeight,\n        overflow: 'auto',\n        outline: 0,\n        border: 0,\n      },\n    },\n\n    suggestions: {\n      list: {\n        maxHeight: 150,\n        overflow: 'auto',\n        backgroundColor: `${theme.background}`,\n        border: '1px solid rgba(0,0,0,0.15)',\n        fontSize: 12,\n      },\n\n      item: {\n        padding: '5px 15px',\n        borderBottom: '1px solid rgba(0,0,0,0.15)',\n\n        '&focused': {\n          backgroundColor: `${theme.backgroundSecondary}`,\n        },\n      },\n    },\n  };\n}\n","import {Component} from 'react';\nimport {Mention, MentionsInput, MentionsInputProps} from 'react-mentions';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button, {ButtonPropsWithoutAriaLabel} from 'sentry/components/button';\nimport NavTabs from 'sentry/components/navTabs';\nimport {IconMarkdown} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport textStyles from 'sentry/styles/text';\nimport {NoteType} from 'sentry/types/alerts';\nimport marked from 'sentry/utils/marked';\nimport {Theme} from 'sentry/utils/theme';\n\nimport Mentionables from './mentionables';\nimport mentionStyle from './mentionStyle';\nimport {CreateError, Mentionable, MentionChangeEvent, Mentioned} from './types';\n\nconst defaultProps = {\n  placeholder: t('Add a comment.\\nTag users with @, or teams with #'),\n  minHeight: 140,\n  busy: false,\n};\n\ntype Props = {\n  memberList: Mentionable[];\n  teams: Mentionable[];\n  theme: Theme;\n  error?: boolean;\n  errorJSON?: CreateError | null;\n  /**\n   * This is the id of the note object from the server\n   * This is to indicate you are editing an existing item\n   */\n  modelId?: string;\n  onChange?: (e: MentionChangeEvent, extra: {updating?: boolean}) => void;\n  onCreate?: (data: NoteType) => void;\n  onEditFinish?: () => void;\n  onUpdate?: (data: NoteType) => void;\n  /**\n   * The note text itself\n   */\n  text?: string;\n} & typeof defaultProps;\n\ntype State = {\n  memberMentions: Mentioned[];\n  preview: boolean;\n  teamMentions: Mentioned[];\n  value: string;\n};\n\nclass NoteInputComponent extends Component<Props, State> {\n  state: State = {\n    preview: false,\n    value: this.props.text || '',\n    memberMentions: [],\n    teamMentions: [],\n  };\n\n  get canSubmit() {\n    return this.state.value.trim() !== '';\n  }\n\n  cleanMarkdown(text: string) {\n    return text\n      .replace(/\\[sentry\\.strip:member\\]/g, '@')\n      .replace(/\\[sentry\\.strip:team\\]/g, '');\n  }\n\n  submitForm() {\n    if (!!this.props.modelId) {\n      this.update();\n      return;\n    }\n    this.create();\n  }\n\n  create() {\n    const {onCreate} = this.props;\n\n    if (onCreate) {\n      onCreate({\n        text: this.cleanMarkdown(this.state.value),\n        mentions: this.finalizeMentions(),\n      });\n    }\n  }\n\n  update() {\n    const {onUpdate} = this.props;\n\n    if (onUpdate) {\n      onUpdate({\n        text: this.cleanMarkdown(this.state.value),\n        mentions: this.finalizeMentions(),\n      });\n    }\n  }\n\n  finish() {\n    this.props.onEditFinish && this.props.onEditFinish();\n  }\n\n  finalizeMentions(): string[] {\n    const {memberMentions, teamMentions} = this.state;\n\n    // each mention looks like [id, display]\n    return [...memberMentions, ...teamMentions]\n      .filter(mention => this.state.value.indexOf(mention[1]) !== -1)\n      .map(mention => mention[0]);\n  }\n\n  handleToggleEdit = () => {\n    this.setState({preview: false});\n  };\n\n  handleTogglePreview = () => {\n    this.setState({preview: true});\n  };\n\n  handleSubmit = (e: React.MouseEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.submitForm();\n  };\n\n  handleChange: MentionsInputProps['onChange'] = e => {\n    this.setState({value: e.target.value});\n\n    if (this.props.onChange) {\n      this.props.onChange(e, {updating: !!this.props.modelId});\n    }\n  };\n\n  handleKeyDown: MentionsInputProps['onKeyDown'] = e => {\n    // Auto submit the form on [meta,ctrl] + Enter\n    if (e.key === 'Enter' && (e.metaKey || e.ctrlKey) && this.canSubmit) {\n      this.submitForm();\n    }\n  };\n\n  handleCancel = (e: React.MouseEvent<Element>) => {\n    e.preventDefault();\n    this.finish();\n  };\n\n  handleAddMember = (id: React.ReactText, display: string) => {\n    this.setState(({memberMentions}) => ({\n      memberMentions: [...memberMentions, [`${id}`, display]],\n    }));\n  };\n\n  handleAddTeam = (id: React.ReactText, display: string) => {\n    this.setState(({teamMentions}) => ({\n      teamMentions: [...teamMentions, [`${id}`, display]],\n    }));\n  };\n\n  render() {\n    const {preview, value} = this.state;\n    const {modelId, busy, placeholder, minHeight, errorJSON, memberList, teams, theme} =\n      this.props;\n\n    const existingItem = !!modelId;\n    const btnText = existingItem ? t('Save Comment') : t('Post Comment');\n\n    const errorMessage =\n      (errorJSON &&\n        (typeof errorJSON.detail === 'string'\n          ? errorJSON.detail\n          : (errorJSON.detail && errorJSON.detail.message) ||\n            t('Unable to post comment'))) ||\n      null;\n\n    return (\n      <NoteInputForm\n        data-test-id=\"note-input-form\"\n        noValidate\n        onSubmit={this.handleSubmit}\n      >\n        <NoteInputNavTabs>\n          <NoteInputNavTab className={!preview ? 'active' : ''}>\n            <NoteInputNavTabLink onClick={this.handleToggleEdit}>\n              {existingItem ? t('Edit') : t('Write')}\n            </NoteInputNavTabLink>\n          </NoteInputNavTab>\n          <NoteInputNavTab className={preview ? 'active' : ''}>\n            <NoteInputNavTabLink onClick={this.handleTogglePreview}>\n              {t('Preview')}\n            </NoteInputNavTabLink>\n          </NoteInputNavTab>\n          <MarkdownTab>\n            <IconMarkdown />\n            <MarkdownSupported>{t('Markdown supported')}</MarkdownSupported>\n          </MarkdownTab>\n        </NoteInputNavTabs>\n\n        <NoteInputBody>\n          {preview ? (\n            <NotePreview\n              minHeight={minHeight}\n              dangerouslySetInnerHTML={{__html: marked(this.cleanMarkdown(value))}}\n            />\n          ) : (\n            <MentionsInput\n              style={mentionStyle({theme, minHeight})}\n              placeholder={placeholder}\n              onChange={this.handleChange}\n              onKeyDown={this.handleKeyDown}\n              value={value}\n              required\n              autoFocus\n            >\n              <Mention\n                trigger=\"@\"\n                data={memberList}\n                onAdd={this.handleAddMember}\n                displayTransform={(_id, display) => `@${display}`}\n                markup=\"**[sentry.strip:member]__display__**\"\n                appendSpaceOnAdd\n              />\n              <Mention\n                trigger=\"#\"\n                data={teams}\n                onAdd={this.handleAddTeam}\n                markup=\"**[sentry.strip:team]__display__**\"\n                appendSpaceOnAdd\n              />\n            </MentionsInput>\n          )}\n        </NoteInputBody>\n\n        <Footer>\n          <div>{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}</div>\n          <div>\n            {existingItem && (\n              <FooterButton priority=\"danger\" type=\"button\" onClick={this.handleCancel}>\n                {t('Cancel')}\n              </FooterButton>\n            )}\n            <FooterButton\n              error={errorMessage}\n              type=\"submit\"\n              disabled={busy || !this.canSubmit}\n            >\n              {btnText}\n            </FooterButton>\n          </div>\n        </Footer>\n      </NoteInputForm>\n    );\n  }\n}\n\nconst NoteInput = withTheme(NoteInputComponent);\n\ntype NoteInputContainerProps = {\n  projectSlugs: string[];\n} & Omit<Props, 'memberList' | 'teams' | 'theme'>;\n\ntype MentionablesChildFunc = Parameters<\n  React.ComponentProps<typeof Mentionables>['children']\n>[0];\n\nclass NoteInputContainer extends Component<NoteInputContainerProps> {\n  static defaultProps = defaultProps;\n\n  renderInput = ({members, teams}: MentionablesChildFunc) => {\n    const {projectSlugs: _, ...props} = this.props;\n    return <NoteInput memberList={members} teams={teams} {...props} />;\n  };\n\n  render() {\n    const {projectSlugs} = this.props;\n    const me = ConfigStore.get('user');\n\n    return (\n      <Mentionables me={me} projectSlugs={projectSlugs}>\n        {this.renderInput}\n      </Mentionables>\n    );\n  }\n}\n\nexport default NoteInputContainer;\n\ntype NotePreviewProps = {\n  minHeight: Props['minHeight'];\n  theme: Props['theme'];\n};\n// This styles both the note preview and the note editor input\nconst getNotePreviewCss = (p: NotePreviewProps) => {\n  const {minHeight, padding, overflow, border} = mentionStyle(p)['&multiLine'].input;\n\n  return `\n  max-height: 1000px;\n  max-width: 100%;\n  ${(minHeight && `min-height: ${minHeight}px`) || ''};\n  padding: ${padding};\n  overflow: ${overflow};\n  border: ${border};\n`;\n};\n\nconst getNoteInputErrorStyles = (p: {theme: Theme; error?: string}) => {\n  if (!p.error) {\n    return '';\n  }\n\n  return `\n  color: ${p.theme.error};\n  margin: -1px;\n  border: 1px solid ${p.theme.error};\n  border-radius: ${p.theme.borderRadius};\n\n    &:before {\n      display: block;\n      content: '';\n      width: 0;\n      height: 0;\n      border-top: 7px solid transparent;\n      border-bottom: 7px solid transparent;\n      border-right: 7px solid ${p.theme.red300};\n      position: absolute;\n      left: -7px;\n      top: 12px;\n    }\n\n    &:after {\n      display: block;\n      content: '';\n      width: 0;\n      height: 0;\n      border-top: 6px solid transparent;\n      border-bottom: 6px solid transparent;\n      border-right: 6px solid #fff;\n      position: absolute;\n      left: -5px;\n      top: 12px;\n    }\n  `;\n};\n\nconst NoteInputForm = styled('form')<{error?: string}>`\n  font-size: 15px;\n  line-height: 22px;\n  transition: padding 0.2s ease-in-out;\n\n  ${p => getNoteInputErrorStyles(p)}\n`;\n\nconst NoteInputBody = styled('div')`\n  ${textStyles}\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  justify-content: space-between;\n  transition: opacity 0.2s ease-in-out;\n  padding-left: ${space(1.5)};\n`;\n\ninterface FooterButtonProps extends ButtonPropsWithoutAriaLabel {\n  error?: string | null;\n}\n\nconst FooterButton = styled(Button)<FooterButtonProps>`\n  font-size: 13px;\n  margin: -1px -1px -1px;\n  border-radius: 0 0 ${p => p.theme.borderRadius};\n\n  ${p =>\n    p.error &&\n    `\n  &, &:active, &:focus, &:hover {\n  border-bottom-color: ${p.theme.error};\n  border-right-color: ${p.theme.error};\n  }\n  `}\n`;\n\nconst ErrorMessage = styled('span')`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  color: ${p => p.theme.error};\n  font-size: 0.9em;\n`;\n\nconst NoteInputNavTabs = styled(NavTabs)`\n  padding: ${space(1)} ${space(2)} 0;\n  border-bottom: 1px solid ${p => p.theme.border};\n  margin-bottom: 0;\n`;\n\nconst NoteInputNavTab = styled('li')`\n  margin-right: 13px;\n`;\n\nconst NoteInputNavTabLink = styled('a')`\n  .nav-tabs > li > & {\n    font-size: 15px;\n    padding-bottom: 5px;\n  }\n`;\nconst MarkdownTab = styled(NoteInputNavTab)`\n  .nav-tabs > & {\n    display: flex;\n    align-items: center;\n    margin-right: 0;\n    color: ${p => p.theme.subText};\n\n    float: right;\n  }\n`;\n\nconst MarkdownSupported = styled('span')`\n  margin-left: ${space(0.5)};\n  font-size: 14px;\n`;\n\nconst NotePreview = styled('div')<{minHeight: Props['minHeight']}>`\n  ${p => getNotePreviewCss(p)};\n  padding-bottom: ${space(1)};\n`;\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityItem, {ActivityAuthorType} from 'sentry/components/activity/item';\nimport space from 'sentry/styles/space';\nimport {User} from 'sentry/types';\nimport {NoteType} from 'sentry/types/alerts';\nimport {ActivityType} from 'sentry/views/alerts/types';\n\nimport NoteBody from './body';\nimport EditorTools from './editorTools';\nimport NoteHeader from './header';\nimport NoteInput from './input';\n\ntype Props = {\n  /**\n   * String for author name to be displayed in header.\n   *\n   * This is not completely derived from `props.user` because we can set a\n   * default from parent component\n   */\n  authorName: string;\n  dateCreated: Date | string;\n  /**\n   * min-height for NoteInput textarea\n   */\n  minHeight: number;\n  /**\n   * This is the id of the note object from the server. This is to indicate you\n   * are editing an existing item\n   */\n  modelId: string;\n  onDelete: (props: Props) => void;\n  onUpdate: (data: NoteType, props: Props) => void;\n  /**\n   * If used, will fetch list of teams/members that can be mentioned for projects\n   */\n  projectSlugs: string[];\n  /**\n   * Pass through to ActivityItem. Shows absolute time instead of a relative\n   * string\n   */\n  showTime: boolean;\n  /**\n   * The note text itself\n   */\n  text: string;\n  user: User;\n  /**\n   * This is unusual usage that Alert Details uses to get back the activity\n   * that an input was bound to as the onUpdate and onDelete actions forward\n   * this component's props.\n   */\n  activity?: ActivityType;\n  /**\n   * pass through to ActivityItem. Hides the date/timestamp in header\n   */\n  hideDate?: boolean;\n  onCreate?: (data: NoteType) => void;\n};\n\nfunction Note(props: Props) {\n  const [editing, setEditing] = useState(false);\n\n  const {\n    modelId,\n    user,\n    dateCreated,\n    text,\n    authorName,\n    hideDate,\n    minHeight,\n    showTime,\n    projectSlugs,\n    onDelete,\n    onCreate,\n    onUpdate,\n  } = props;\n\n  const activityItemProps = {\n    hideDate,\n    showTime,\n    id: `activity-item-${modelId}`,\n    author: {\n      type: 'user' as ActivityAuthorType,\n      user,\n    },\n    date: dateCreated,\n  };\n\n  if (!editing) {\n    const header = (\n      <NoteHeader\n        {...{authorName, user}}\n        onEdit={() => setEditing(true)}\n        onDelete={() => onDelete(props)}\n      />\n    );\n\n    return (\n      <ActivityItemWithEditing {...activityItemProps} header={header}>\n        <NoteBody text={text} />\n      </ActivityItemWithEditing>\n    );\n  }\n\n  // When editing, `NoteInput` has its own header, pass render func to control\n  // rendering of bubble body\n  return (\n    <ActivityItemNote {...activityItemProps}>\n      {() => (\n        <NoteInput\n          {...{modelId, minHeight, text, projectSlugs}}\n          onEditFinish={() => setEditing(false)}\n          onUpdate={note => {\n            onUpdate(note, props);\n            setEditing(false);\n          }}\n          onCreate={note => onCreate?.(note)}\n        />\n      )}\n    </ActivityItemNote>\n  );\n}\n\nconst ActivityItemNote = styled(ActivityItem)`\n  /* this was nested under \".activity-note.activity-bubble\" */\n  ul {\n    list-style: disc;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  ul:not(.nav),\n  ol,\n  pre,\n  hr,\n  blockquote {\n    margin-bottom: ${space(2)};\n  }\n\n  ul:not(.nav),\n  ol {\n    padding-left: 20px;\n  }\n\n  p {\n    a {\n      word-wrap: break-word;\n    }\n  }\n\n  blockquote {\n    font-size: 15px;\n    border-left: 5px solid ${p => p.theme.innerBorder};\n    padding-left: ${space(1)};\n    margin-left: 0;\n  }\n`;\n\nconst ActivityItemWithEditing = styled(ActivityItemNote)`\n  &:hover {\n    ${EditorTools} {\n      display: inline-block;\n    }\n  }\n`;\n\nexport default Note;\n","import {Component} from 'react';\nimport * as Sentry from '@sentry/react';\nimport debounce from 'lodash/debounce';\n\nimport NoteInput from 'sentry/components/activity/note/input';\nimport {MentionChangeEvent} from 'sentry/components/activity/note/types';\nimport {NoteType} from 'sentry/types/alerts';\nimport localStorage from 'sentry/utils/localStorage';\n\nconst defaultProps = {\n  /**\n   * Triggered when local storage has been loaded and parsed.\n   */\n  onLoad: (data: string) => data,\n  onSave: (data: string) => data,\n};\n\ntype InputProps = React.ComponentProps<typeof NoteInput>;\n\ntype Props = {\n  itemKey: string;\n  storageKey: string;\n  text?: string;\n} & InputProps &\n  typeof defaultProps;\n\nclass NoteInputWithStorage extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  fetchFromStorage() {\n    const {storageKey} = this.props;\n\n    const storage = localStorage.getItem(storageKey);\n    if (!storage) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storage);\n    } catch (err) {\n      Sentry.withScope(scope => {\n        scope.setExtra('storage', storage);\n        Sentry.captureException(err);\n      });\n      return null;\n    }\n  }\n\n  saveToStorage(obj: Record<string, any>) {\n    const {storageKey} = this.props;\n\n    try {\n      localStorage.setItem(storageKey, JSON.stringify(obj));\n    } catch (err) {\n      Sentry.captureException(err);\n      Sentry.withScope(scope => {\n        scope.setExtra('storage', obj);\n        Sentry.captureException(err);\n      });\n    }\n  }\n\n  getValue() {\n    const {itemKey, text, onLoad} = this.props;\n\n    if (text) {\n      return text;\n    }\n\n    const storageObj = this.fetchFromStorage();\n\n    if (!storageObj) {\n      return '';\n    }\n\n    if (!storageObj.hasOwnProperty(itemKey)) {\n      return '';\n    }\n    if (!onLoad) {\n      return storageObj[itemKey];\n    }\n\n    return onLoad(storageObj[itemKey]);\n  }\n\n  save = debounce(value => {\n    const {itemKey, onSave} = this.props;\n\n    const currentObj = this.fetchFromStorage() || {};\n    this.saveToStorage({...currentObj, [itemKey]: onSave(value)});\n  }, 150);\n\n  handleChange = (e: MentionChangeEvent, options: {updating?: boolean} = {}) => {\n    const {onChange} = this.props;\n\n    if (onChange) {\n      onChange(e, options);\n    }\n\n    if (options.updating) {\n      return;\n    }\n\n    this.save(e.target.value);\n  };\n\n  /**\n   * Handler when note is created.\n   *\n   * Remove in progress item from local storage if it exists\n   */\n  handleCreate = (data: NoteType) => {\n    const {itemKey, onCreate} = this.props;\n\n    if (onCreate) {\n      onCreate(data);\n    }\n\n    // Remove from local storage\n    const storageObj = this.fetchFromStorage() || {};\n\n    // Nothing from this `itemKey` is saved to storage, do nothing\n    if (!storageObj.hasOwnProperty(itemKey)) {\n      return;\n    }\n\n    // Remove `itemKey` from stored object and save to storage\n    // eslint-disable-next-line no-unused-vars\n    const {[itemKey]: _oldItem, ...newStorageObj} = storageObj;\n    this.saveToStorage(newStorageObj);\n  };\n\n  render() {\n    // Make sure `this.props` does not override `onChange` and `onCreate`\n    return (\n      <NoteInput\n        {...this.props}\n        text={this.getValue()}\n        onCreate={this.handleCreate}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default NoteInputWithStorage;\n","import {Fragment} from 'react';\nimport moment from 'moment';\n\nimport CommitLink from 'sentry/components/commitLink';\nimport Duration from 'sentry/components/duration';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport PullRequestLink from 'sentry/components/pullRequestLink';\nimport Version from 'sentry/components/version';\nimport {t, tct, tn} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {\n  GroupActivity,\n  GroupActivityAssigned,\n  GroupActivitySetIgnored,\n  GroupActivityType,\n  Organization,\n  Project,\n  User,\n} from 'sentry/types';\n\ntype Props = {\n  activity: GroupActivity;\n  author: React.ReactNode;\n  orgSlug: Organization['slug'];\n  projectId: Project['id'];\n};\n\nfunction GroupActivityItem({activity, orgSlug, projectId, author}: Props) {\n  const issuesLink = `/organizations/${orgSlug}/issues/`;\n\n  function getIgnoredMessage(data: GroupActivitySetIgnored['data']) {\n    if (data.ignoreDuration) {\n      return tct('[author] ignored this issue for [duration]', {\n        author,\n        duration: <Duration seconds={data.ignoreDuration * 60} />,\n      });\n    }\n\n    if (data.ignoreCount && data.ignoreWindow) {\n      return tct(\n        '[author] ignored this issue until it happens [count] time(s) in [duration]',\n        {\n          author,\n          count: data.ignoreCount,\n          duration: <Duration seconds={data.ignoreWindow * 60} />,\n        }\n      );\n    }\n\n    if (data.ignoreCount) {\n      return tct('[author] ignored this issue until it happens [count] time(s)', {\n        author,\n        count: data.ignoreCount,\n      });\n    }\n\n    if (data.ignoreUserCount && data.ignoreUserWindow) {\n      return tct(\n        '[author] ignored this issue until it affects [count] user(s) in [duration]',\n        {\n          author,\n          count: data.ignoreUserCount,\n          duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n        }\n      );\n    }\n\n    if (data.ignoreUserCount) {\n      return tct('[author] ignored this issue until it affects [count] user(s)', {\n        author,\n        count: data.ignoreUserCount,\n      });\n    }\n\n    return tct('[author] ignored this issue', {author});\n  }\n\n  function getAssignedMessage(data: GroupActivityAssigned['data']) {\n    let assignee: string | User | undefined = undefined;\n\n    if (data.assigneeType === 'team') {\n      const team = TeamStore.getById(data.assignee);\n      assignee = team ? team.slug : '<unknown-team>';\n\n      return tct('[author] assigned this issue to #[assignee]', {\n        author,\n        assignee,\n      });\n    }\n\n    if (activity.user && data.assignee === activity.user.id) {\n      return tct('[author] assigned this issue to themselves', {author});\n    }\n\n    if (data.assigneeType === 'user' && data.assigneeEmail) {\n      return tct('[author] assigned this issue to [assignee]', {\n        author,\n        assignee: data.assigneeEmail,\n      });\n    }\n\n    return tct('[author] assigned this issue to an unknown user', {author});\n  }\n\n  function renderContent() {\n    switch (activity.type) {\n      case GroupActivityType.NOTE:\n        return tct('[author] left a comment', {author});\n      case GroupActivityType.SET_RESOLVED:\n        return tct('[author] marked this issue as resolved', {author});\n      case GroupActivityType.SET_RESOLVED_BY_AGE:\n        return tct('[author] marked this issue as resolved due to inactivity', {\n          author,\n        });\n      case GroupActivityType.SET_RESOLVED_IN_RELEASE:\n        const {current_release_version, version} = activity.data;\n        if (current_release_version) {\n          return tct(\n            '[author] marked this issue as resolved in releases greater than [version]',\n            {\n              author,\n              version: (\n                <Version\n                  version={current_release_version}\n                  projectId={projectId}\n                  tooltipRawVersion\n                />\n              ),\n            }\n          );\n        }\n        return version\n          ? tct('[author] marked this issue as resolved in [version]', {\n              author,\n              version: (\n                <Version version={version} projectId={projectId} tooltipRawVersion />\n              ),\n            })\n          : tct('[author] marked this issue as resolved in the upcoming release', {\n              author,\n            });\n      case GroupActivityType.SET_RESOLVED_IN_COMMIT:\n        const deployedReleases = (activity.data.commit?.releases || [])\n          .filter(r => r.dateReleased !== null)\n          .sort(\n            (a, b) => moment(a.dateReleased).valueOf() - moment(b.dateReleased).valueOf()\n          );\n        if (deployedReleases.length === 1) {\n          return tct(\n            '[author] marked this issue as resolved in [version] [break]' +\n              'This commit was released in [release]',\n            {\n              author,\n              version: (\n                <CommitLink\n                  inline\n                  commitId={activity.data.commit.id}\n                  repository={activity.data.commit.repository}\n                />\n              ),\n              break: <br />,\n              release: (\n                <Version\n                  version={deployedReleases[0].version}\n                  projectId={projectId}\n                  tooltipRawVersion\n                />\n              ),\n            }\n          );\n        }\n        if (deployedReleases.length > 1) {\n          return tct(\n            '[author] marked this issue as resolved in [version] [break]' +\n              'This commit was released in [release] and ' +\n              (deployedReleases.length - 1) +\n              ' others',\n            {\n              author,\n              version: (\n                <CommitLink\n                  inline\n                  commitId={activity.data.commit.id}\n                  repository={activity.data.commit.repository}\n                />\n              ),\n              break: <br />,\n              release: (\n                <Version\n                  version={deployedReleases[0].version}\n                  projectId={projectId}\n                  tooltipRawVersion\n                />\n              ),\n            }\n          );\n        }\n        return tct('[author] marked this issue as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={activity.data.commit.id}\n              repository={activity.data.commit.repository}\n            />\n          ),\n        });\n      case GroupActivityType.SET_RESOLVED_IN_PULL_REQUEST: {\n        const {data} = activity;\n        const {pullRequest} = data;\n        return tct('[author] marked this issue as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={pullRequest}\n              repository={pullRequest.repository}\n            />\n          ),\n        });\n      }\n      case GroupActivityType.SET_UNRESOLVED:\n        return tct('[author] marked this issue as unresolved', {author});\n      case GroupActivityType.SET_IGNORED: {\n        const {data} = activity;\n        return getIgnoredMessage(data);\n      }\n      case GroupActivityType.SET_PUBLIC:\n        return tct('[author] made this issue public', {author});\n      case GroupActivityType.SET_PRIVATE:\n        return tct('[author] made this issue private', {author});\n      case GroupActivityType.SET_REGRESSION: {\n        const {data} = activity;\n        return data.version\n          ? tct('[author] marked this issue as a regression in [version]', {\n              author,\n              version: (\n                <Version version={data.version} projectId={projectId} tooltipRawVersion />\n              ),\n            })\n          : tct('[author] marked this issue as a regression', {author});\n      }\n      case GroupActivityType.CREATE_ISSUE: {\n        const {data} = activity;\n        return tct('[author] created an issue on [provider] titled [title]', {\n          author,\n          provider: data.provider,\n          title: <ExternalLink href={data.location}>{data.title}</ExternalLink>,\n        });\n      }\n      case GroupActivityType.UNMERGE_SOURCE: {\n        const {data} = activity;\n        const {destination, fingerprints} = data;\n        return tn(\n          '%2$s migrated %1$s fingerprint to %3$s',\n          '%2$s migrated %1$s fingerprints to %3$s',\n          fingerprints.length,\n          author,\n          destination ? (\n            <Link to={`${issuesLink}${destination.id}`}>{destination.shortId}</Link>\n          ) : (\n            t('a group')\n          )\n        );\n      }\n      case GroupActivityType.UNMERGE_DESTINATION: {\n        const {data} = activity;\n        const {source, fingerprints} = data;\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s',\n          '%2$s migrated %1$s fingerprints from %3$s',\n          fingerprints.length,\n          author,\n          source ? (\n            <Link to={`${issuesLink}${source.id}`}>{source.shortId}</Link>\n          ) : (\n            t('a group')\n          )\n        );\n      }\n      case GroupActivityType.FIRST_SEEN:\n        return tct('[author] first saw this issue', {author});\n      case GroupActivityType.ASSIGNED: {\n        const {data} = activity;\n        return getAssignedMessage(data);\n      }\n      case GroupActivityType.UNASSIGNED:\n        return tct('[author] unassigned this issue', {author});\n      case GroupActivityType.MERGE:\n        return tn(\n          '%2$s merged %1$s issue into this issue',\n          '%2$s merged %1$s issues into this issue',\n          activity.data.issues.length,\n          author\n        );\n      case GroupActivityType.REPROCESS: {\n        const {data} = activity;\n        const {oldGroupId, eventCount} = data;\n\n        return tct('[author] reprocessed the events in this issue. [new-events]', {\n          author,\n          ['new-events']: (\n            <Link\n              to={`/organizations/${orgSlug}/issues/?query=reprocessing.original_issue_id:${oldGroupId}`}\n            >\n              {tn('See %s new event', 'See %s new events', eventCount)}\n            </Link>\n          ),\n        });\n      }\n      case GroupActivityType.MARK_REVIEWED: {\n        return tct('[author] marked this issue as reviewed', {\n          author,\n        });\n      }\n      default:\n        return ''; // should never hit (?)\n    }\n  }\n\n  return <Fragment>{renderContent()}</Fragment>;\n}\n\nexport default GroupActivityItem;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport uniq from 'lodash/uniq';\n\nimport {createNote, deleteNote, updateNote} from 'sentry/actionCreators/group';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport ActivityAuthor from 'sentry/components/activity/author';\nimport ActivityItem from 'sentry/components/activity/item';\nimport Note from 'sentry/components/activity/note';\nimport NoteInputWithStorage from 'sentry/components/activity/note/inputWithStorage';\nimport {CreateError} from 'sentry/components/activity/note/types';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport ReprocessedBox from 'sentry/components/reprocessedBox';\nimport {DEFAULT_ERROR_JSON} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {\n  Group,\n  GroupActivityAssigned,\n  GroupActivityReprocess,\n  GroupActivityType,\n  Organization,\n  User,\n} from 'sentry/types';\nimport {uniqueId} from 'sentry/utils/guid';\nimport Teams from 'sentry/utils/teams';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport GroupActivityItem from './groupActivityItem';\nimport {\n  getGroupMostRecentActivity,\n  getGroupReprocessingStatus,\n  ReprocessingStatus,\n} from './utils';\n\ntype Props = {\n  api: Client;\n  group: Group;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = {\n  createBusy: boolean;\n  error: boolean;\n  errorJSON: CreateError | null;\n  inputId: string;\n};\n\nclass GroupActivity extends Component<Props, State> {\n  // TODO(dcramer): only re-render on group/activity change\n  state: State = {\n    createBusy: false,\n    error: false,\n    errorJSON: null,\n    inputId: uniqueId(),\n  };\n\n  handleNoteDelete = async ({modelId, text: oldText}) => {\n    const {api, group} = this.props;\n\n    addLoadingMessage(t('Removing comment...'));\n\n    try {\n      await deleteNote(api, group, modelId, oldText);\n      clearIndicators();\n    } catch (_err) {\n      addErrorMessage(t('Failed to delete comment'));\n    }\n  };\n\n  /**\n   * Note: This is nearly the same logic as `app/views/alerts/details/activity`\n   * This can be abstracted a bit if we create more objects that can have activities\n   */\n  handleNoteCreate = async note => {\n    const {api, group} = this.props;\n\n    this.setState({\n      createBusy: true,\n    });\n\n    addLoadingMessage(t('Posting comment...'));\n\n    try {\n      await createNote(api, group, note);\n\n      this.setState({\n        createBusy: false,\n\n        // This is used as a `key` to Note Input so that after successful post\n        // we reset the value of the input\n        inputId: uniqueId(),\n      });\n      clearIndicators();\n    } catch (error) {\n      this.setState({\n        createBusy: false,\n        error: true,\n        errorJSON: error.responseJSON || DEFAULT_ERROR_JSON,\n      });\n      addErrorMessage(t('Unable to post comment'));\n    }\n  };\n\n  handleNoteUpdate = async (note, {modelId, text: oldText}) => {\n    const {api, group} = this.props;\n\n    addLoadingMessage(t('Updating comment...'));\n\n    try {\n      await updateNote(api, group, note, modelId, oldText);\n      clearIndicators();\n    } catch (error) {\n      this.setState({\n        error: true,\n        errorJSON: error.responseJSON || DEFAULT_ERROR_JSON,\n      });\n      addErrorMessage(t('Unable to update comment'));\n    }\n  };\n\n  render() {\n    const {group, organization} = this.props;\n    const {activity: activities, count, id: groupId} = group;\n    const groupCount = Number(count);\n    const mostRecentActivity = getGroupMostRecentActivity(activities);\n    const reprocessingStatus = getGroupReprocessingStatus(group, mostRecentActivity);\n\n    const me = ConfigStore.get('user');\n    const projectSlugs = group && group.project ? [group.project.slug] : [];\n    const noteProps = {\n      minHeight: 140,\n      group,\n      projectSlugs,\n      placeholder: t(\n        'Add details or updates to this event. \\nTag users with @, or teams with #'\n      ),\n    };\n\n    return (\n      <Fragment>\n        {(reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT ||\n          reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HAS_EVENT) && (\n          <ReprocessedBox\n            reprocessActivity={mostRecentActivity as GroupActivityReprocess}\n            groupCount={groupCount}\n            orgSlug={organization.slug}\n            groupId={groupId}\n          />\n        )}\n\n        <Layout.Body>\n          <Layout.Main>\n            <ActivityItem author={{type: 'user', user: me}}>\n              {() => (\n                <NoteInputWithStorage\n                  key={this.state.inputId}\n                  storageKey=\"groupinput:latest\"\n                  itemKey={group.id}\n                  onCreate={this.handleNoteCreate}\n                  busy={this.state.createBusy}\n                  error={this.state.error}\n                  errorJSON={this.state.errorJSON}\n                  {...noteProps}\n                />\n              )}\n            </ActivityItem>\n\n            <Teams\n              ids={uniq(\n                group.activity\n                  .filter(\n                    (item): item is GroupActivityAssigned =>\n                      item.type === GroupActivityType.ASSIGNED &&\n                      item.data.assigneeType === 'team' &&\n                      item.data.assignee?.length > 0\n                  )\n                  .map(item => item.data.assignee)\n              )}\n            >\n              {({initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  group.activity.map(item => {\n                    const authorName = item.user ? item.user.name : 'Sentry';\n\n                    if (item.type === GroupActivityType.NOTE) {\n                      return (\n                        <ErrorBoundary mini key={`note-${item.id}`}>\n                          <Note\n                            showTime={false}\n                            text={item.data.text}\n                            modelId={item.id}\n                            user={item.user as User}\n                            dateCreated={item.dateCreated}\n                            authorName={authorName}\n                            onDelete={this.handleNoteDelete}\n                            onUpdate={this.handleNoteUpdate}\n                            {...noteProps}\n                          />\n                        </ErrorBoundary>\n                      );\n                    }\n\n                    return (\n                      <ErrorBoundary mini key={`item-${item.id}`}>\n                        <ActivityItem\n                          author={{\n                            type: item.user ? 'user' : 'system',\n                            user: item.user ?? undefined,\n                          }}\n                          date={item.dateCreated}\n                          header={\n                            <GroupActivityItem\n                              author={<ActivityAuthor>{authorName}</ActivityAuthor>}\n                              activity={item}\n                              orgSlug={this.props.params.orgId}\n                              projectId={group.project.id}\n                            />\n                          }\n                        />\n                      </ErrorBoundary>\n                    );\n                  })\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Teams>\n          </Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n}\n\nexport {GroupActivity};\nexport default withApi(withOrganization(GroupActivity));\n","import orderBy from 'lodash/orderBy';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {Client} from 'sentry/api';\nimport {t, tct} from 'sentry/locale';\nimport {Group, GroupActivity} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\n/**\n * Fetches group data and mark as seen\n *\n * @param orgId organization slug\n * @param groupId groupId\n * @param eventId eventId or \"latest\" or \"oldest\"\n * @param envNames\n * @param projectId project slug required for eventId that is not latest or oldest\n */\nexport async function fetchGroupEvent(\n  api: Client,\n  orgId: string,\n  groupId: string,\n  eventId: string,\n  envNames: string[],\n  projectId?: string\n): Promise<Event> {\n  const url =\n    eventId === 'latest' || eventId === 'oldest'\n      ? `/issues/${groupId}/events/${eventId}/`\n      : `/projects/${orgId}/${projectId}/events/${eventId}/`;\n\n  const query: {environment?: string[]} = {};\n  if (envNames.length !== 0) {\n    query.environment = envNames;\n  }\n\n  const data = await api.requestPromise(url, {query});\n  return data;\n}\n\nexport function markEventSeen(\n  api: Client,\n  orgId: string,\n  projectId: string,\n  groupId: string\n) {\n  bulkUpdate(\n    api,\n    {\n      orgId,\n      projectId,\n      itemIds: [groupId],\n      failSilently: true,\n      data: {hasSeen: true},\n    },\n    {}\n  );\n}\n\nexport function fetchGroupUserReports(groupId: string, query: Record<string, string>) {\n  const api = new Client();\n\n  return api.requestPromise(`/issues/${groupId}/user-reports/`, {\n    includeAllArgs: true,\n    query,\n  });\n}\n\n/**\n * Returns the environment name for an event or null\n *\n * @param event\n */\nexport function getEventEnvironment(event: Event) {\n  const tag = event.tags.find(({key}) => key === 'environment');\n\n  return tag ? tag.value : null;\n}\n\nconst SUBSCRIPTION_REASONS = {\n  commented: t(\n    \"You're receiving workflow notifications because you have commented on this issue.\"\n  ),\n  assigned: t(\n    \"You're receiving workflow notifications because you were assigned to this issue.\"\n  ),\n  bookmarked: t(\n    \"You're receiving workflow notifications because you have bookmarked this issue.\"\n  ),\n  changed_status: t(\n    \"You're receiving workflow notifications because you have changed the status of this issue.\"\n  ),\n  mentioned: t(\n    \"You're receiving workflow notifications because you have been mentioned in this issue.\"\n  ),\n};\n\n/**\n * @param group\n * @param removeLinks add/remove links to subscription reasons text (default: false)\n * @returns Reason for subscription\n */\nexport function getSubscriptionReason(group: Group, removeLinks = false) {\n  if (group.subscriptionDetails && group.subscriptionDetails.disabled) {\n    return tct('You have [link:disabled workflow notifications] for this project.', {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    });\n  }\n\n  if (!group.isSubscribed) {\n    return t('Subscribe to workflow notifications for this issue');\n  }\n\n  if (group.subscriptionDetails) {\n    const {reason} = group.subscriptionDetails;\n    if (reason === 'unknown') {\n      return t(\n        \"You're receiving workflow notifications because you are subscribed to this issue.\"\n      );\n    }\n\n    if (reason && SUBSCRIPTION_REASONS.hasOwnProperty(reason)) {\n      return SUBSCRIPTION_REASONS[reason];\n    }\n  }\n\n  return tct(\n    \"You're receiving updates because you are [link:subscribed to workflow notifications] for this project.\",\n    {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    }\n  );\n}\n\nexport function getGroupMostRecentActivity(activities: GroupActivity[]) {\n  // Most recent activity\n  return orderBy([...activities], ({dateCreated}) => new Date(dateCreated), ['desc'])[0];\n}\n\nexport enum ReprocessingStatus {\n  REPROCESSED_AND_HASNT_EVENT = 'reprocessed_and_hasnt_event',\n  REPROCESSED_AND_HAS_EVENT = 'reprocessed_and_has_event',\n  REPROCESSING = 'reprocessing',\n  NO_STATUS = 'no_status',\n}\n\n// Reprocessing Checks\nexport function getGroupReprocessingStatus(\n  group: Group,\n  mostRecentActivity?: GroupActivity\n) {\n  const {status, count, activity: activities} = group;\n  const groupCount = Number(count);\n\n  switch (status) {\n    case 'reprocessing':\n      return ReprocessingStatus.REPROCESSING;\n    case 'unresolved': {\n      const groupMostRecentActivity =\n        mostRecentActivity ?? getGroupMostRecentActivity(activities);\n      if (groupMostRecentActivity?.type === 'reprocess') {\n        if (groupCount === 0) {\n          return ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT;\n        }\n        return ReprocessingStatus.REPROCESSED_AND_HAS_EVENT;\n      }\n      return ReprocessingStatus.NO_STATUS;\n    }\n    default:\n      return ReprocessingStatus.NO_STATUS;\n  }\n}\n"],"names":["SUPPORTED_PROVIDERS","icon","size","providerIds","commitUrl","baseUrl","commitId","inline","repository","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","href","external","LinkWithConfirmation","className","disabled","title","children","otherProps","renderIcon","repo","split","pop","ExternalPullLink","ExternalLink","space","pullRequest","displayId","name","externalUrl","ReprocessedBox","Component","isBannerHidden","localStorage","this","getBannerUniqueId","setState","reprocessActivity","props","renderMessage","orgSlug","groupCount","groupId","data","eventCount","oldGroupId","newGroupId","reprocessedEventsRoute","tct","link","to","tn","Number","render","state","priority","StyledBannerSummary","color","isCircled","StyledIconClose","onClick","handleBannerDismiss","BannerSummary","IconClose","NoteBody","text","dangerouslySetInnerHTML","__html","marked","NoteHeader","authorName","user","onEdit","onDelete","activeUser","ConfigStore","canEdit","isSuperuser","Edit","message","onConfirm","Remove","getActionStyle","p","theme","gray200","gray300","border","error","Mentionables","PureComponent","members","MemberListStore","users","handleMemberListUpdate","projects","me","isRenderFunc","getMemberList","teams","getTeams","componentWillUnmount","listeners","forEach","callIfFunction","memberList","sessionUser","uniqBy","filter","map","member","display","email","uniqueTeams","reduce","acc","concat","team","slug","organization","projectSlugs","length","slugs","orgId","renderChildren","withOrganization","mentionStyle","minHeight","control","backgroundColor","background","fontSize","fontWeight","input","margin","width","highlighter","padding","fontFamily","overflow","outline","suggestions","list","maxHeight","item","borderBottom","backgroundSecondary","defaultProps","placeholder","busy","NoteInputComponent","preview","value","memberMentions","teamMentions","e","preventDefault","submitForm","target","onChange","updating","modelId","key","metaKey","ctrlKey","canSubmit","finish","trim","cleanMarkdown","replace","update","create","onCreate","mentions","finalizeMentions","onUpdate","onEditFinish","mention","indexOf","errorJSON","existingItem","btnText","errorMessage","detail","NoteInputForm","noValidate","onSubmit","handleSubmit","NoteInputNavTabs","NoteInputNavTab","NoteInputNavTabLink","handleToggleEdit","handleTogglePreview","MarkdownTab","MarkdownSupported","NoteInputBody","NotePreview","style","handleChange","onKeyDown","handleKeyDown","required","autoFocus","trigger","onAdd","handleAddMember","displayTransform","_id","markup","appendSpaceOnAdd","handleAddTeam","Footer","ErrorMessage","FooterButton","type","handleCancel","NoteInput","withTheme","NoteInputContainer","_","renderInput","borderRadius","red300","getNoteInputErrorStyles","textStyles","Button","NavTabs","subText","getNotePreviewCss","Note","editing","setEditing","useState","dateCreated","hideDate","showTime","activityItemProps","author","date","header","ActivityItemWithEditing","ActivityItemNote","note","ActivityItem","innerBorder","EditorTools","NoteInputWithStorage","debounce","itemKey","onSave","currentObj","fetchFromStorage","saveToStorage","options","save","storageObj","hasOwnProperty","_oldItem","newStorageObj","storageKey","storage","JSON","parse","err","Sentry","scope","setExtra","obj","stringify","getValue","onLoad","handleCreate","GroupActivityItem","activity","projectId","issuesLink","Fragment","GroupActivityType","current_release_version","version","tooltipRawVersion","deployedReleases","commit","releases","r","dateReleased","sort","a","b","moment","valueOf","break","release","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","count","ignoreUserCount","ignoreUserWindow","getIgnoredMessage","location","destination","fingerprints","source","assignee","assigneeType","TeamStore","assigneeEmail","getAssignedMessage","issues","renderContent","GroupActivity","createBusy","inputId","uniqueId","async","oldText","api","group","addLoadingMessage","deleteNote","clearIndicators","_err","addErrorMessage","createNote","responseJSON","DEFAULT_ERROR_JSON","updateNote","activities","mostRecentActivity","getGroupMostRecentActivity","reprocessingStatus","getGroupReprocessingStatus","project","noteProps","ReprocessingStatus","handleNoteCreate","ids","uniq","initiallyLoaded","mini","handleNoteDelete","handleNoteUpdate","params","withApi","fetchGroupEvent","eventId","envNames","query","environment","requestPromise","markEventSeen","bulkUpdate","itemIds","failSilently","hasSeen","fetchGroupUserReports","Client","includeAllArgs","getEventEnvironment","event","tag","tags","SUBSCRIPTION_REASONS","commented","assigned","bookmarked","changed_status","mentioned","getSubscriptionReason","removeLinks","subscriptionDetails","isSubscribed","reason","orderBy","Date","status","REPROCESSING","groupMostRecentActivity","REPROCESSED_AND_HASNT_EVENT","REPROCESSED_AND_HAS_EVENT","NO_STATUS"],"sourceRoot":""}