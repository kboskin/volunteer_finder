{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupEventDetails_index_tsx-images_spot_performance-quick--573eca.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/externalIssues/abstractExternalIssueForm.tsx","webpack:///./app/components/globalAppStoreConnectUpdateAlert/updateAlert.tsx","webpack:///./app/components/globalAppStoreConnectUpdateAlert/index.tsx","webpack:///./app/components/navigationButtonGroup.tsx","webpack:///./app/components/projects/appStoreConnectContext.tsx","webpack:///./app/components/quickTrace/index.tsx","webpack:///./app/components/reprocessedBox.tsx","webpack:///./app/utils/appStoreValidationErrorMessage.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/docs.tsx","webpack:///./app/utils/environment.tsx","webpack:///./app/utils/getStacktraceBody.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/utils/performance/quickTrace/traceLiteQuery.tsx","webpack:///./app/utils/performance/quickTrace/quickTraceQuery.tsx","webpack:///./app/utils/performance/quickTrace/traceFullQuery.tsx","webpack:///./app/utils/replaceAtArrayIndex.tsx","webpack:///./app/actions/environmentActions.tsx","webpack:///./app/stores/organizationEnvironmentsStore.tsx","webpack:///./app/components/errors/groupEventDetailsLoadingError.tsx","webpack:///./app/components/issueSyncListElement.tsx","webpack:///./app/components/group/externalIssueForm.tsx","webpack:///./app/components/group/externalIssueActions.tsx","webpack:///./app/components/group/pluginActions.tsx","webpack:///./app/actions/platformExternalIssueActions.tsx","webpack:///./app/stores/externalIssueStore.tsx","webpack:///./app/components/group/sentryAppExternalIssueForm.tsx","webpack:///./app/components/group/sentryAppExternalIssueModal.tsx","webpack:///./app/components/group/sentryAppExternalIssueActions.tsx","webpack:///./app/actionCreators/platformExternalIssues.tsx","webpack:///./app/stores/sentryAppInstallationsStore.tsx","webpack:///./app/components/group/sidebarSection.tsx","webpack:///./app/components/group/externalIssuesList.tsx","webpack:///./app/components/group/participants.tsx","webpack:///./app/components/group/releaseChart.tsx","webpack:///./app/components/group/seenInfo.tsx","webpack:///./app/components/group/releaseStats.tsx","webpack:///./app/components/group/suggestedOwners/findMatchedRules.tsx","webpack:///./app/components/group/suggestedOwners/ownershipRules.tsx","webpack:///./app/components/group/suggestedOwnerHovercard.tsx","webpack:///./app/components/group/suggestedOwners/suggestedAssignees.tsx","webpack:///./app/components/group/suggestedOwners/suggestedOwners.tsx","webpack:///./app/components/group/tagDistributionMeter.tsx","webpack:///./app/components/group/sidebar.tsx","webpack:///./app/components/mutedBox.tsx","webpack:///./app/components/resolutionBox.tsx","webpack:///./app/views/organizationGroupDetails/quickTrace/configureDistributedTracing.tsx","webpack:///./app/views/organizationGroupDetails/quickTrace/issueQuickTrace.tsx","webpack:///./app/views/organizationGroupDetails/quickTrace/index.tsx","webpack:///./app/views/organizationGroupDetails/eventToolbar.tsx","webpack:///./app/views/organizationGroupDetails/reprocessingProgress.tsx","webpack:///./app/views/organizationGroupDetails/groupEventDetails/groupEventDetails.tsx","webpack:///./app/utils/fetchSentryAppInstallations.tsx","webpack:///./app/actionCreators/sentryAppComponents.tsx","webpack:///./app/views/organizationGroupDetails/groupEventDetails/index.tsx","webpack:///./app/actionCreators/environments.tsx","webpack:///./app/views/organizationGroupDetails/utils.tsx","webpack:///./app/views/organizationIntegrations/integrationItem.tsx","webpack:///./app/views/organizationIntegrations/sentryAppExternalForm.tsx","webpack:///../node_modules/lodash/keyBy.js","webpack:///../node_modules/lodash/orderBy.js"],"sourcesContent":["import {Fragment} from 'react';\nimport debounce from 'lodash/debounce';\nimport * as qs from 'query-string';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form from 'sentry/components/forms/form';\nimport FormModel, {FieldValue} from 'sentry/components/forms/model';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport {tct} from 'sentry/locale';\nimport {\n  Choices,\n  IntegrationIssueConfig,\n  IssueConfigField,\n  SelectValue,\n} from 'sentry/types';\nimport {FormField} from 'sentry/views/alerts/rules/issue/ruleNode';\n\nexport type ExternalIssueAction = 'create' | 'link';\n\nexport type ExternalIssueFormErrors = {[key: string]: React.ReactNode};\n\ntype Props = ModalRenderProps & AsyncComponent['props'];\n\ntype State = {\n  action: ExternalIssueAction;\n  /**\n   * Object of fields where `updatesFrom` is true, by field name. Derived from\n   * `integrationDetails` when it loads. Null until set.\n   */\n  dynamicFieldValues: {[key: string]: FieldValue | null} | null;\n  /**\n   * Cache of options fetched for async fields.\n   */\n  fetchedFieldOptionsCache: Record<string, Choices>;\n  /**\n   * Fetched via endpoint, null until set.\n   */\n  integrationDetails: IntegrationIssueConfig | null;\n} & AsyncComponent['state'];\n\nconst DEBOUNCE_MS = 200;\n/**\n * @abstract\n */\nexport default class AbstractExternalIssueForm<\n  P extends Props = Props,\n  S extends State = State\n> extends AsyncComponent<P, S> {\n  shouldRenderBadRequests = true;\n  model = new FormModel();\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      action: 'create',\n      dynamicFieldValues: null,\n      fetchedFieldOptionsCache: {},\n      integrationDetails: null,\n    };\n  }\n\n  refetchConfig = () => {\n    const {action, dynamicFieldValues} = this.state;\n    const query = {action, ...dynamicFieldValues};\n    const endpoint = this.getEndPointString();\n\n    this.api.request(endpoint, {\n      method: 'GET',\n      query,\n      success: (data, _, resp) => {\n        this.handleRequestSuccess({stateKey: 'integrationDetails', data, resp}, true);\n      },\n      error: error => {\n        this.handleError(error, ['integrationDetails', endpoint, null, null]);\n      },\n    });\n  };\n\n  getConfigName = (): 'createIssueConfig' | 'linkIssueConfig' => {\n    // Explicitly returning a non-interpolated string for clarity.\n    const {action} = this.state;\n    switch (action) {\n      case 'create':\n        return 'createIssueConfig';\n      case 'link':\n        return 'linkIssueConfig';\n      default:\n        throw new Error('illegal action');\n    }\n  };\n\n  /**\n   * Convert IntegrationIssueConfig to an object that maps field names to the\n   * values of fields where `updatesFrom` is true. This function prefers to read\n   * configs from its parameters and otherwise falls back to reading from state.\n   * @param integrationDetailsParam\n   * @returns Object of field names to values.\n   */\n  getDynamicFields = (\n    integrationDetailsParam?: IntegrationIssueConfig\n  ): {[key: string]: FieldValue | null} => {\n    const {integrationDetails: integrationDetailsFromState} = this.state;\n    const integrationDetails = integrationDetailsParam || integrationDetailsFromState;\n    const config = (integrationDetails || {})[this.getConfigName()];\n    return Object.fromEntries(\n      (config || [])\n        .filter((field: IssueConfigField) => field.updatesForm)\n        .map((field: IssueConfigField) => [field.name, field.default || null])\n    );\n  };\n\n  onRequestSuccess = ({stateKey, data}) => {\n    if (stateKey === 'integrationDetails') {\n      this.handleReceiveIntegrationDetails(data);\n      this.setState({\n        dynamicFieldValues: this.getDynamicFields(data),\n      });\n    }\n  };\n\n  /**\n   * If this field should updateForm, updateForm. Otherwise, do nothing.\n   */\n  onFieldChange = (fieldName: string, value: FieldValue) => {\n    const {dynamicFieldValues} = this.state;\n    const dynamicFields = this.getDynamicFields();\n    if (dynamicFields.hasOwnProperty(fieldName) && dynamicFieldValues) {\n      dynamicFieldValues[fieldName] = value;\n      this.setState(\n        {\n          dynamicFieldValues,\n          reloading: true,\n          error: false,\n          remainingRequests: 1,\n        },\n        this.refetchConfig\n      );\n    }\n  };\n\n  /**\n   * For fields with dynamic fields, cache the fetched choices.\n   */\n  updateFetchedFieldOptionsCache = (\n    field: IssueConfigField,\n    result: SelectValue<string | number>[]\n  ): void => {\n    const {fetchedFieldOptionsCache} = this.state;\n    this.setState({\n      fetchedFieldOptionsCache: {\n        ...fetchedFieldOptionsCache,\n        [field.name]: result.map(obj => [obj.value, obj.label]),\n      },\n    });\n  };\n\n  /**\n   * Ensures current result from Async select fields is never discarded. Without this method,\n   * searching in an async select field without selecting one of the returned choices will\n   * result in a value saved to the form, and no associated label; appearing empty.\n   * @param field The field being examined\n   * @param result The result from it's asynchronous query\n   * @returns The result with a tooltip attached to the current option\n   */\n  ensureCurrentOption = (\n    field: IssueConfigField,\n    result: SelectValue<string | number>[]\n  ): SelectValue<string | number>[] => {\n    const currentOption = this.getDefaultOptions(field).find(\n      option => option.value === this.model.getValue(field.name)\n    );\n    if (!currentOption) {\n      return result;\n    }\n    if (typeof currentOption.label === 'string') {\n      currentOption.label = (\n        <Fragment>\n          <QuestionTooltip\n            title={tct('This is your current [label].', {\n              label: field.label,\n            })}\n            size=\"xs\"\n          />{' '}\n          {currentOption.label}\n        </Fragment>\n      );\n    }\n    const currentOptionResultIndex = result.findIndex(\n      obj => obj.value === currentOption?.value\n    );\n    // Has a selected option, and it is in API results\n    if (currentOptionResultIndex >= 0) {\n      const newResult = result;\n      newResult[currentOptionResultIndex] = currentOption;\n      return newResult;\n    }\n    // Has a selected option, and it is not in API results\n\n    return [...result, currentOption];\n  };\n\n  /**\n   * Get the list of options for a field via debounced API call. For example,\n   * the list of users that match the input string. The Promise rejects if there\n   * are any errors.\n   */\n  getOptions = (field: IssueConfigField, input: string) =>\n    new Promise((resolve, reject) => {\n      if (!input) {\n        return resolve(this.getDefaultOptions(field));\n      }\n      return this.debouncedOptionLoad(field, input, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          result = this.ensureCurrentOption(field, result);\n          this.updateFetchedFieldOptionsCache(field, result);\n          resolve(result);\n        }\n      });\n    });\n\n  debouncedOptionLoad = debounce(\n    async (\n      field: IssueConfigField,\n      input: string,\n      cb: (err: Error | null, result?: any) => void\n    ) => {\n      const {dynamicFieldValues} = this.state;\n      const query = qs.stringify({\n        ...dynamicFieldValues,\n        field: field.name,\n        query: input,\n      });\n\n      const url = field.url || '';\n      const separator = url.includes('?') ? '&' : '?';\n      // We can't use the API client here since the URL is not scoped under the\n      // API endpoints (which the client prefixes)\n      try {\n        const response = await fetch(url + separator + query);\n        cb(null, response.ok ? await response.json() : []);\n      } catch (err) {\n        cb(err);\n      }\n    },\n    DEBOUNCE_MS,\n    {trailing: true}\n  );\n\n  getDefaultOptions = (field: IssueConfigField) => {\n    const choices =\n      (field.choices as Array<[number | string, number | string | React.ReactElement]>) ||\n      [];\n    return choices.map(([value, label]) => ({value, label}));\n  };\n\n  /**\n   * If this field is an async select (field.url is not null), add async props.\n   */\n  getFieldProps = (field: IssueConfigField) =>\n    field.url\n      ? {\n          async: true,\n          autoload: true,\n          cache: false,\n          loadOptions: (input: string) => this.getOptions(field, input),\n          defaultOptions: this.getDefaultOptions(field),\n          onBlurResetsInput: false,\n          onCloseResetsInput: false,\n          onSelectResetsInput: false,\n        }\n      : {};\n\n  // Abstract methods.\n  handleReceiveIntegrationDetails = (_data: any) => {\n    // Do nothing.\n  };\n  getEndPointString(): string {\n    throw new Error(\"Method 'getEndPointString()' must be implemented.\");\n  }\n  renderNavTabs = (): React.ReactNode => null;\n  renderBodyText = (): React.ReactNode => null;\n  getTitle = () => tct('Issue Link Settings', {});\n  getFormProps = (): Form['props'] => {\n    throw new Error(\"Method 'getFormProps()' must be implemented.\");\n  };\n\n  getDefaultFormProps = (): Form['props'] => {\n    return {\n      footerClass: 'modal-footer',\n      onFieldChange: this.onFieldChange,\n      submitDisabled: this.state.reloading,\n      model: this.model,\n      // Other form props implemented by child classes.\n    };\n  };\n\n  getCleanedFields = (): IssueConfigField[] => {\n    const {fetchedFieldOptionsCache, integrationDetails} = this.state;\n\n    const configsFromAPI = (integrationDetails || {})[this.getConfigName()];\n    return (configsFromAPI || []).map(field => {\n      const fieldCopy = {...field};\n      // Overwrite choices from cache.\n      if (fetchedFieldOptionsCache?.hasOwnProperty(field.name)) {\n        fieldCopy.choices = fetchedFieldOptionsCache[field.name];\n      }\n\n      return fieldCopy;\n    });\n  };\n\n  renderComponent() {\n    return this.state.error\n      ? this.renderError(new Error('Unable to load all required endpoints'))\n      : this.renderBody();\n  }\n\n  renderForm = (\n    formFields?: IssueConfigField[],\n    errors: ExternalIssueFormErrors = {}\n  ) => {\n    const initialData: {[key: string]: any} = (formFields || []).reduce(\n      (accumulator, field: FormField) => {\n        accumulator[field.name] =\n          // Passing an empty array breaks MultiSelect.\n          field.multiple && field.default === [] ? '' : field.default;\n        return accumulator;\n      },\n      {}\n    );\n\n    const {Header, Body} = this.props as ModalRenderProps;\n\n    return (\n      <Fragment>\n        <Header closeButton>{this.getTitle()}</Header>\n        {this.renderNavTabs()}\n        <Body>\n          {this.shouldRenderLoading ? (\n            this.renderLoading()\n          ) : (\n            <Fragment>\n              {this.renderBodyText()}\n              <Form initialData={initialData} {...this.getFormProps()}>\n                {(formFields || [])\n                  .filter((field: FormField) => field.hasOwnProperty('name'))\n                  .map(fields => ({\n                    ...fields,\n                    noOptionsMessage: () => 'No options. Type to search.',\n                  }))\n                  .map((field, i) => {\n                    return (\n                      <Fragment key={`${field.name}-${i}`}>\n                        <FieldFromConfig\n                          disabled={this.state.reloading}\n                          field={field}\n                          flexibleControlStateSize\n                          inline={false}\n                          stacked\n                          {...this.getFieldProps(field)}\n                        />\n                        {errors[field.name] && errors[field.name]}\n                      </Fragment>\n                    );\n                  })}\n              </Form>\n            </Fragment>\n          )}\n        </Body>\n      </Fragment>\n    );\n  };\n}\n","import {useContext} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport AppStoreConnectContext from 'sentry/components/projects/appStoreConnectContext';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\n\ntype Props = {\n  Wrapper?: React.ComponentType;\n  className?: string;\n  project?: Project;\n};\n\nfunction UpdateAlert({Wrapper, project, className}: Props) {\n  const appStoreConnectContext = useContext(AppStoreConnectContext);\n\n  if (\n    !project ||\n    !appStoreConnectContext ||\n    !Object.keys(appStoreConnectContext).some(\n      key => !!appStoreConnectContext[key].updateAlertMessage\n    )\n  ) {\n    return null;\n  }\n\n  const notices = (\n    <Notices className={className}>\n      {Object.keys(appStoreConnectContext).map(key => {\n        const {updateAlertMessage} = appStoreConnectContext[key];\n        if (!updateAlertMessage) {\n          return null;\n        }\n\n        return (\n          <NoMarginBottomAlert key={key} type=\"warning\" showIcon>\n            <AlertContent>{updateAlertMessage}</AlertContent>\n          </NoMarginBottomAlert>\n        );\n      })}\n    </Notices>\n  );\n\n  return Wrapper ? <Wrapper>{notices}</Wrapper> : notices;\n}\n\nexport default UpdateAlert;\n\nconst Notices = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(3)};\n`;\n\nconst NoMarginBottomAlert = styled(Alert)`\n  margin-bottom: 0;\n`;\n\nconst AlertContent = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1)};\n`;\n","import * as AppStoreConnectContext from 'sentry/components/projects/appStoreConnectContext';\nimport {Organization, Project} from 'sentry/types';\n\nimport UpdateAlert from './updateAlert';\n\ntype Props = Pick<React.ComponentProps<typeof UpdateAlert>, 'className' | 'Wrapper'> & {\n  organization: Organization;\n  project?: Project;\n};\n\nfunction GlobalAppStoreConnectUpdateAlert({project, organization, ...rest}: Props) {\n  return (\n    <AppStoreConnectContext.Provider project={project} organization={organization}>\n      <UpdateAlert project={project} {...rest} />\n    </AppStoreConnectContext.Provider>\n  );\n}\n\nexport default GlobalAppStoreConnectUpdateAlert;\n","import {LocationDescriptor} from 'history';\n\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {IconNext, IconPrevious} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  /**\n   * A set of LocationDescriptors that will be used in the buttons in the following order:\n   * [Oldest, Older, Newer, Newest]\n   */\n  links: [LocationDescriptor, LocationDescriptor, LocationDescriptor, LocationDescriptor];\n  className?: string;\n  hasNext?: boolean;\n  hasPrevious?: boolean;\n  onNewerClick?: () => void;\n  onNewestClick?: () => void;\n  onOlderClick?: () => void;\n  onOldestClick?: () => void;\n  size?: ButtonProps['size'];\n};\n\nconst NavigationButtonGroup = ({\n  links,\n  hasNext = false,\n  hasPrevious = false,\n  className,\n  size,\n  onOldestClick,\n  onOlderClick,\n  onNewerClick,\n  onNewestClick,\n}: Props) => {\n  return (\n    <ButtonBar className={className} merged>\n      <Button\n        size={size}\n        to={links[0]}\n        disabled={!hasPrevious}\n        aria-label={t('Oldest')}\n        icon={<IconPrevious size=\"xs\" />}\n        onClick={onOldestClick}\n      />\n      <Button size={size} to={links[1]} disabled={!hasPrevious} onClick={onOlderClick}>\n        {t('Older')}\n      </Button>\n      <Button size={size} to={links[2]} disabled={!hasNext} onClick={onNewerClick}>\n        {t('Newer')}\n      </Button>\n      <Button\n        size={size}\n        to={links[3]}\n        disabled={!hasNext}\n        aria-label={t('Newest')}\n        icon={<IconNext size=\"xs\" />}\n        onClick={onNewestClick}\n      />\n    </ButtonBar>\n  );\n};\n\nexport default NavigationButtonGroup;\n","import {createContext, useEffect, useMemo, useState} from 'react';\n\nimport {Organization, Project} from 'sentry/types';\nimport {\n  AppStoreConnectCredentialsStatus,\n  AppStoreConnectStatusData,\n} from 'sentry/types/debugFiles';\nimport {getAppStoreValidationErrorMessage} from 'sentry/utils/appStoreValidationErrorMessage';\nimport useApi from 'sentry/utils/useApi';\n\nexport type AppStoreConnectContextProps =\n  | Record<string, AppStoreConnectStatusData>\n  | undefined;\n\nconst AppStoreConnectContext = createContext<AppStoreConnectContextProps>(undefined);\n\ntype ProviderProps = {\n  children: React.ReactNode;\n  organization: Organization;\n  project?: Project;\n};\n\nconst Provider = ({children, project, organization}: ProviderProps) => {\n  const api = useApi();\n\n  const [projectDetails, setProjectDetails] = useState<undefined | Project>();\n  const [appStoreConnectStatusData, setAppStoreConnectStatusData] =\n    useState<AppStoreConnectContextProps>(undefined);\n\n  const appStoreConnectSymbolSources = useMemo(() => {\n    return (\n      projectDetails?.symbolSources ? JSON.parse(projectDetails.symbolSources) : []\n    ).reduce((acc, {type, id, ...symbolSource}) => {\n      if (type.toLowerCase() === 'appstoreconnect') {\n        acc[id] = {type, ...symbolSource};\n      }\n      return acc;\n    }, {});\n  }, [projectDetails?.symbolSources]);\n\n  useEffect(() => {\n    if (!project || projectDetails) {\n      return undefined;\n    }\n\n    if (project.symbolSources) {\n      setProjectDetails(project);\n      return undefined;\n    }\n\n    let unmounted = false;\n\n    api\n      .requestPromise(`/projects/${organization.slug}/${project.slug}/`)\n      .then(responseProjectDetails => {\n        if (unmounted) {\n          return;\n        }\n\n        setProjectDetails(responseProjectDetails);\n      })\n      .catch(() => {\n        // We do not care about the error\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [project, organization, api]);\n\n  useEffect(() => {\n    if (!projectDetails) {\n      return undefined;\n    }\n\n    if (!Object.keys(appStoreConnectSymbolSources).length) {\n      return undefined;\n    }\n\n    let unmounted = false;\n\n    api\n      .requestPromise(\n        `/projects/${organization.slug}/${projectDetails.slug}/appstoreconnect/status/`\n      )\n      .then(appStoreConnectStatus => {\n        if (unmounted) {\n          return;\n        }\n        setAppStoreConnectStatusData(appStoreConnectStatus);\n      })\n      .catch(() => {\n        // We do not care about the error\n      });\n\n    return () => {\n      unmounted = true;\n    };\n  }, [projectDetails, organization, appStoreConnectSymbolSources]);\n\n  function getUpdateAlertMessage(\n    respository: NonNullable<Parameters<typeof getAppStoreValidationErrorMessage>[1]>,\n    credentials: AppStoreConnectCredentialsStatus\n  ) {\n    if (credentials?.status === 'valid') {\n      return undefined;\n    }\n\n    return getAppStoreValidationErrorMessage(credentials, respository);\n  }\n\n  return (\n    <AppStoreConnectContext.Provider\n      value={\n        appStoreConnectStatusData && project\n          ? Object.keys(appStoreConnectStatusData).reduce((acc, key) => {\n              const appStoreConnect = appStoreConnectStatusData[key];\n              return {\n                ...acc,\n                [key]: {\n                  ...appStoreConnect,\n                  updateAlertMessage: getUpdateAlertMessage(\n                    {\n                      name: appStoreConnectSymbolSources[key].name,\n                      link: `/settings/${organization.slug}/projects/${project.slug}/debug-symbols/?customRepository=${key}`,\n                    },\n                    appStoreConnect.credentials\n                  ),\n                },\n              };\n            }, {})\n          : undefined\n      }\n    >\n      {children}\n    </AppStoreConnectContext.Provider>\n  );\n};\n\nexport {Provider};\n\nexport default AppStoreConnectContext;\n","import {Component, Fragment} from 'react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport {\n  ErrorDestination,\n  generateSingleErrorTarget,\n  generateSingleTransactionTarget,\n  generateTraceTarget,\n  isQuickTraceEvent,\n  TransactionDestination,\n} from 'sentry/components/quickTrace/utils';\nimport Tooltip from 'sentry/components/tooltip';\nimport {backend, frontend, mobile, serverless} from 'sentry/data/platformCategories';\nimport {IconFire} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\nimport {OrganizationSummary} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {getDocsPlatform} from 'sentry/utils/docs';\nimport {getDuration} from 'sentry/utils/formatters';\nimport localStorage from 'sentry/utils/localStorage';\nimport {\n  QuickTrace as QuickTraceType,\n  QuickTraceEvent,\n  TraceError,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {parseQuickTrace} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\nimport {Theme} from 'sentry/utils/theme';\n\nconst FRONTEND_PLATFORMS: string[] = [...frontend, ...mobile];\nconst BACKEND_PLATFORMS: string[] = [...backend, ...serverless];\n\nimport {\n  DropdownContainer,\n  DropdownItem,\n  DropdownItemSubContainer,\n  DropdownMenuHeader,\n  ErrorNodeContent,\n  EventNode,\n  ExternalDropdownLink,\n  QuickTraceContainer,\n  QuickTraceValue,\n  SectionSubtext,\n  SingleEventHoverText,\n  TraceConnector,\n} from './styles';\n\nconst TOOLTIP_PREFIX = {\n  root: 'root',\n  ancestors: 'ancestor',\n  parent: 'parent',\n  current: '',\n  children: 'child',\n  descendants: 'descendant',\n};\n\ntype QuickTraceProps = Pick<\n  EventNodeSelectorProps,\n  'anchor' | 'errorDest' | 'transactionDest'\n> & {\n  event: Event;\n  location: Location;\n  organization: OrganizationSummary;\n  quickTrace: QuickTraceType;\n};\n\nexport default function QuickTrace({\n  event,\n  quickTrace,\n  location,\n  organization,\n  anchor,\n  errorDest,\n  transactionDest,\n}: QuickTraceProps) {\n  let parsedQuickTrace;\n  try {\n    parsedQuickTrace = parseQuickTrace(quickTrace, event, organization);\n  } catch (error) {\n    return <Fragment>{'\\u2014'}</Fragment>;\n  }\n\n  const traceLength = quickTrace.trace && quickTrace.trace.length;\n  const {root, ancestors, parent, children, descendants, current} = parsedQuickTrace;\n\n  const nodes: React.ReactNode[] = [];\n\n  if (root) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"root-node\"\n        location={location}\n        organization={organization}\n        events={[root]}\n        currentEvent={event}\n        text={t('Root')}\n        anchor={anchor}\n        nodeKey=\"root\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"root-connector\" />);\n  }\n\n  if (ancestors?.length) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"ancestors-node\"\n        location={location}\n        organization={organization}\n        events={ancestors}\n        currentEvent={event}\n        text={tn('%s Ancestor', '%s Ancestors', ancestors.length)}\n        anchor={anchor}\n        nodeKey=\"ancestors\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"ancestors-connector\" />);\n  }\n\n  if (parent) {\n    nodes.push(\n      <EventNodeSelector\n        key=\"parent-node\"\n        location={location}\n        organization={organization}\n        events={[parent]}\n        currentEvent={event}\n        text={t('Parent')}\n        anchor={anchor}\n        nodeKey=\"parent\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n    nodes.push(<TraceConnector key=\"parent-connector\" />);\n  }\n\n  const currentNode = (\n    <EventNodeSelector\n      key=\"current-node\"\n      location={location}\n      organization={organization}\n      text={t('This Event')}\n      events={[current]}\n      currentEvent={event}\n      anchor={anchor}\n      nodeKey=\"current\"\n      errorDest={errorDest}\n      transactionDest={transactionDest}\n    />\n  );\n\n  if (traceLength === 1) {\n    nodes.push(\n      <Projects\n        key=\"missing-services\"\n        orgId={organization.slug}\n        slugs={[current.project_slug]}\n      >\n        {({projects}) => {\n          const project = projects.find(p => p.slug === current.project_slug);\n          if (project?.platform) {\n            if (BACKEND_PLATFORMS.includes(project.platform as string)) {\n              return (\n                <Fragment>\n                  <MissingServiceNode\n                    anchor={anchor}\n                    organization={organization}\n                    platform={project.platform}\n                    connectorSide=\"right\"\n                  />\n                  {currentNode}\n                </Fragment>\n              );\n            }\n            if (FRONTEND_PLATFORMS.includes(project.platform as string)) {\n              return (\n                <Fragment>\n                  {currentNode}\n                  <MissingServiceNode\n                    anchor={anchor}\n                    organization={organization}\n                    platform={project.platform}\n                    connectorSide=\"left\"\n                  />\n                </Fragment>\n              );\n            }\n          }\n          return currentNode;\n        }}\n      </Projects>\n    );\n  } else {\n    nodes.push(currentNode);\n  }\n\n  if (children.length) {\n    nodes.push(<TraceConnector key=\"children-connector\" />);\n    nodes.push(\n      <EventNodeSelector\n        key=\"children-node\"\n        location={location}\n        organization={organization}\n        events={children}\n        currentEvent={event}\n        text={tn('%s Child', '%s Children', children.length)}\n        anchor={anchor}\n        nodeKey=\"children\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n  }\n\n  if (descendants?.length) {\n    nodes.push(<TraceConnector key=\"descendants-connector\" />);\n    nodes.push(\n      <EventNodeSelector\n        key=\"descendants-node\"\n        location={location}\n        organization={organization}\n        events={descendants}\n        currentEvent={event}\n        text={tn('%s Descendant', '%s Descendants', descendants.length)}\n        anchor={anchor}\n        nodeKey=\"descendants\"\n        errorDest={errorDest}\n        transactionDest={transactionDest}\n      />\n    );\n  }\n\n  return <QuickTraceContainer>{nodes}</QuickTraceContainer>;\n}\n\nfunction handleNode(key: string, organization: OrganizationSummary) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.node.clicked',\n    eventName: 'Quick Trace: Node clicked',\n    organization_id: parseInt(organization.id, 10),\n    node_key: key,\n  });\n}\n\nfunction handleDropdownItem(\n  key: string,\n  organization: OrganizationSummary,\n  extra: boolean\n) {\n  trackAnalyticsEvent({\n    eventKey: 'quick_trace.dropdown.clicked' + (extra ? '_extra' : ''),\n    eventName: 'Quick Trace: Dropdown clicked',\n    organization_id: parseInt(organization.id, 10),\n    node_key: key,\n  });\n}\n\ntype EventNodeSelectorProps = {\n  anchor: 'left' | 'right';\n  currentEvent: Event;\n  errorDest: ErrorDestination;\n  events: QuickTraceEvent[];\n  location: Location;\n  nodeKey: keyof typeof TOOLTIP_PREFIX;\n  organization: OrganizationSummary;\n  text: React.ReactNode;\n  transactionDest: TransactionDestination;\n  numEvents?: number;\n};\n\nfunction EventNodeSelector({\n  location,\n  organization,\n  events = [],\n  text,\n  currentEvent,\n  nodeKey,\n  anchor,\n  errorDest,\n  transactionDest,\n  numEvents = 5,\n}: EventNodeSelectorProps) {\n  let errors: TraceError[] = events.flatMap(event => event.errors ?? []);\n\n  let type: keyof Theme['tag'] = nodeKey === 'current' ? 'black' : 'white';\n\n  const hasErrors = errors.length > 0;\n\n  if (hasErrors) {\n    type = nodeKey === 'current' ? 'error' : 'warning';\n    text = (\n      <ErrorNodeContent>\n        <IconFire size=\"xs\" />\n        {text}\n      </ErrorNodeContent>\n    );\n  }\n\n  // make sure to exclude the current event from the dropdown\n  events = events.filter(event => event.event_id !== currentEvent.id);\n  errors = errors.filter(error => error.event_id !== currentEvent.id);\n\n  if (events.length + errors.length === 0) {\n    return <EventNode type={type}>{text}</EventNode>;\n  }\n  if (events.length + errors.length === 1) {\n    /**\n     * When there is only 1 event, clicking the node should take the user directly to\n     * the event without additional steps.\n     */\n    const hoverText = errors.length ? (\n      t('View the error for this Transaction')\n    ) : (\n      <SingleEventHoverText event={events[0]} />\n    );\n    const target = errors.length\n      ? generateSingleErrorTarget(errors[0], organization, location, errorDest)\n      : generateSingleTransactionTarget(\n          events[0],\n          organization,\n          location,\n          transactionDest\n        );\n    return (\n      <StyledEventNode\n        text={text}\n        hoverText={hoverText}\n        to={target}\n        onClick={() => handleNode(nodeKey, organization)}\n        type={type}\n        shouldOffset={hasErrors}\n      />\n    );\n  }\n  /**\n   * When there is more than 1 event, clicking the node should expand a dropdown to\n   * allow the user to select which event to go to.\n   */\n  const hoverText = tct('View [eventPrefix] [eventType]', {\n    eventPrefix: TOOLTIP_PREFIX[nodeKey],\n    eventType:\n      errors.length && events.length\n        ? 'events'\n        : events.length\n        ? 'transactions'\n        : 'errors',\n  });\n  return (\n    <DropdownContainer>\n      <DropdownLink\n        caret={false}\n        title={\n          <StyledEventNode\n            text={text}\n            hoverText={hoverText}\n            type={type}\n            shouldOffset={hasErrors}\n          />\n        }\n        anchorRight={anchor === 'right'}\n      >\n        {errors.length > 0 && (\n          <DropdownMenuHeader first>\n            {tn('Related Error', 'Related Errors', errors.length)}\n          </DropdownMenuHeader>\n        )}\n        {errors.slice(0, numEvents).map(error => {\n          const target = generateSingleErrorTarget(\n            error,\n            organization,\n            location,\n            errorDest\n          );\n          return (\n            <DropdownNodeItem\n              key={error.event_id}\n              event={error}\n              to={target}\n              allowDefaultEvent\n              onSelect={() => handleDropdownItem(nodeKey, organization, false)}\n              organization={organization}\n              anchor={anchor}\n            />\n          );\n        })}\n        {events.length > 0 && (\n          <DropdownMenuHeader first={errors.length === 0}>\n            {tn('Transaction', 'Transactions', events.length)}\n          </DropdownMenuHeader>\n        )}\n        {events.slice(0, numEvents).map(event => {\n          const target = generateSingleTransactionTarget(\n            event,\n            organization,\n            location,\n            transactionDest\n          );\n          return (\n            <DropdownNodeItem\n              key={event.event_id}\n              event={event}\n              to={target}\n              onSelect={() => handleDropdownItem(nodeKey, organization, false)}\n              allowDefaultEvent\n              organization={organization}\n              subtext={getDuration(\n                event['transaction.duration'] / 1000,\n                event['transaction.duration'] < 1000 ? 0 : 2,\n                true\n              )}\n              anchor={anchor}\n            />\n          );\n        })}\n        {(errors.length > numEvents || events.length > numEvents) && (\n          <DropdownItem\n            to={generateTraceTarget(currentEvent, organization)}\n            allowDefaultEvent\n            onSelect={() => handleDropdownItem(nodeKey, organization, true)}\n          >\n            {t('View all events')}\n          </DropdownItem>\n        )}\n      </DropdownLink>\n    </DropdownContainer>\n  );\n}\n\ntype DropdownNodeProps = {\n  anchor: 'left' | 'right';\n  event: TraceError | QuickTraceEvent;\n  organization: OrganizationSummary;\n  allowDefaultEvent?: boolean;\n  onSelect?: (eventKey: any) => void;\n  subtext?: string;\n  to?: LocationDescriptor;\n};\n\nfunction DropdownNodeItem({\n  event,\n  onSelect,\n  to,\n  allowDefaultEvent,\n  organization,\n  subtext,\n  anchor,\n}: DropdownNodeProps) {\n  return (\n    <DropdownItem to={to} onSelect={onSelect} allowDefaultEvent={allowDefaultEvent}>\n      <DropdownItemSubContainer>\n        <Projects orgId={organization.slug} slugs={[event.project_slug]}>\n          {({projects}) => {\n            const project = projects.find(p => p.slug === event.project_slug);\n            return (\n              <ProjectBadge\n                disableLink\n                hideName\n                project={project ? project : {slug: event.project_slug}}\n                avatarSize={16}\n              />\n            );\n          }}\n        </Projects>\n        {isQuickTraceEvent(event) ? (\n          <QuickTraceValue\n            value={event.transaction}\n            // expand in the opposite direction of the anchor\n            expandDirection={anchor === 'left' ? 'right' : 'left'}\n            maxLength={35}\n            leftTrim\n            trimRegex={/\\.|\\//g}\n          />\n        ) : (\n          <QuickTraceValue\n            value={event.title}\n            // expand in the opposite direction of the anchor\n            expandDirection={anchor === 'left' ? 'right' : 'left'}\n            maxLength={45}\n          />\n        )}\n      </DropdownItemSubContainer>\n      {subtext && <SectionSubtext>{subtext}</SectionSubtext>}\n    </DropdownItem>\n  );\n}\n\ntype EventNodeProps = {\n  hoverText: React.ReactNode;\n  text: React.ReactNode;\n  onClick?: (eventKey: any) => void;\n  shouldOffset?: boolean;\n  to?: LocationDescriptor;\n  type?: keyof Theme['tag'];\n};\n\nfunction StyledEventNode({\n  text,\n  hoverText,\n  to,\n  onClick,\n  type = 'white',\n  shouldOffset = false,\n}: EventNodeProps) {\n  return (\n    <Tooltip position=\"top\" containerDisplayMode=\"inline-flex\" title={hoverText}>\n      <EventNode\n        type={type}\n        icon={null}\n        to={to}\n        onClick={onClick}\n        shouldOffset={shouldOffset}\n      >\n        {text}\n      </EventNode>\n    </Tooltip>\n  );\n}\n\ntype MissingServiceProps = Pick<QuickTraceProps, 'anchor' | 'organization'> & {\n  connectorSide: 'left' | 'right';\n  platform: string;\n};\ntype MissingServiceState = {\n  hideMissing: boolean;\n};\n\nconst HIDE_MISSING_SERVICE_KEY = 'quick-trace:hide-missing-services';\n// 30 days\nconst HIDE_MISSING_EXPIRES = 1000 * 60 * 60 * 24 * 30;\n\nfunction readHideMissingServiceState() {\n  const value = localStorage.getItem(HIDE_MISSING_SERVICE_KEY);\n  if (value === null) {\n    return false;\n  }\n  const expires = parseInt(value, 10);\n  const now = new Date().getTime();\n  return expires > now;\n}\n\nclass MissingServiceNode extends Component<MissingServiceProps, MissingServiceState> {\n  state: MissingServiceState = {\n    hideMissing: readHideMissingServiceState(),\n  };\n\n  dismissMissingService = () => {\n    const {organization, platform} = this.props;\n    const now = new Date().getTime();\n    localStorage.setItem(\n      HIDE_MISSING_SERVICE_KEY,\n      (now + HIDE_MISSING_EXPIRES).toString()\n    );\n    this.setState({hideMissing: true});\n    trackAnalyticsEvent({\n      eventKey: 'quick_trace.missing_service.dismiss',\n      eventName: 'Quick Trace: Missing Service Dismissed',\n      organization_id: parseInt(organization.id, 10),\n      platform,\n    });\n  };\n\n  trackExternalLink = () => {\n    const {organization, platform} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'quick_trace.missing_service.docs',\n      eventName: 'Quick Trace: Missing Service Clicked',\n      organization_id: parseInt(organization.id, 10),\n      platform,\n    });\n  };\n\n  render() {\n    const {hideMissing} = this.state;\n    const {anchor, connectorSide, platform} = this.props;\n    if (hideMissing) {\n      return null;\n    }\n\n    const docPlatform = getDocsPlatform(platform, true);\n    const docsHref =\n      docPlatform === null || docPlatform === 'javascript'\n        ? 'https://docs.sentry.io/platforms/javascript/performance/connect-services/'\n        : `https://docs.sentry.io/platforms/${docPlatform}/performance/connecting-services`;\n    return (\n      <Fragment>\n        {connectorSide === 'left' && <TraceConnector />}\n        <DropdownContainer>\n          <DropdownLink\n            caret={false}\n            title={\n              <StyledEventNode\n                type=\"white\"\n                hoverText={t('No services connected')}\n                text=\"???\"\n              />\n            }\n            anchorRight={anchor === 'right'}\n          >\n            <DropdownItem width=\"small\">\n              <ExternalDropdownLink href={docsHref} onClick={this.trackExternalLink}>\n                {t('Connect to a service')}\n              </ExternalDropdownLink>\n            </DropdownItem>\n            <DropdownItem onSelect={this.dismissMissingService} width=\"small\">\n              {t('Dismiss')}\n            </DropdownItem>\n          </DropdownLink>\n        </DropdownContainer>\n        {connectorSide === 'right' && <TraceConnector />}\n      </Fragment>\n    );\n  }\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {BannerContainer, BannerSummary} from 'sentry/components/events/styles';\nimport Link from 'sentry/components/links/link';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {GroupActivityReprocess, Organization} from 'sentry/types';\nimport localStorage from 'sentry/utils/localStorage';\n\ntype Props = {\n  groupCount: number;\n  groupId: string;\n  orgSlug: Organization['slug'];\n  reprocessActivity: GroupActivityReprocess;\n  className?: string;\n};\n\ntype State = {\n  isBannerHidden: boolean;\n};\n\nclass ReprocessedBox extends Component<Props, State> {\n  state: State = {\n    isBannerHidden: localStorage.getItem(this.getBannerUniqueId()) === 'true',\n  };\n\n  getBannerUniqueId() {\n    const {reprocessActivity} = this.props;\n    const {id} = reprocessActivity;\n\n    return `reprocessed-activity-${id}-banner-dismissed`;\n  }\n\n  handleBannerDismiss = () => {\n    localStorage.setItem(this.getBannerUniqueId(), 'true');\n    this.setState({isBannerHidden: true});\n  };\n\n  renderMessage() {\n    const {orgSlug, reprocessActivity, groupCount, groupId} = this.props;\n    const {data} = reprocessActivity;\n    const {eventCount, oldGroupId, newGroupId} = data;\n\n    const reprocessedEventsRoute = `/organizations/${orgSlug}/issues/?query=reprocessing.original_issue_id:${oldGroupId}`;\n\n    if (groupCount === 0) {\n      return tct('All events in this issue were moved during reprocessing. [link]', {\n        link: (\n          <Link to={reprocessedEventsRoute}>\n            {tn('See %s new event', 'See %s new events', eventCount)}\n          </Link>\n        ),\n      });\n    }\n\n    return tct('Events in this issue were successfully reprocessed. [link]', {\n      link: (\n        <Link to={reprocessedEventsRoute}>\n          {newGroupId === Number(groupId)\n            ? tn('See %s reprocessed event', 'See %s reprocessed events', eventCount)\n            : tn('See %s new event', 'See %s new events', eventCount)}\n        </Link>\n      ),\n    });\n  }\n\n  render() {\n    const {isBannerHidden} = this.state;\n\n    if (isBannerHidden) {\n      return null;\n    }\n\n    const {className} = this.props;\n\n    return (\n      <BannerContainer priority=\"success\" className={className}>\n        <StyledBannerSummary>\n          <IconCheckmark color=\"green300\" isCircled />\n          <span>{this.renderMessage()}</span>\n          <StyledIconClose\n            color=\"green300\"\n            aria-label={t('Dismiss')}\n            isCircled\n            onClick={this.handleBannerDismiss}\n          />\n        </StyledBannerSummary>\n      </BannerContainer>\n    );\n  }\n}\n\nexport default ReprocessedBox;\n\nconst StyledBannerSummary = styled(BannerSummary)`\n  & > svg:last-child {\n    margin-right: 0;\n    margin-left: ${space(1)};\n  }\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n`;\n","import * as Sentry from '@sentry/react';\n\nimport Link from 'sentry/components/links/link';\nimport {t, tct} from 'sentry/locale';\nimport {AppStoreConnectValidationError} from 'sentry/types/debugFiles';\n\nexport const unexpectedErrorMessage = t(\n  'An unexpected error occurred while configuring the App Store Connect integration'\n);\n\nexport function getAppStoreValidationErrorMessage(\n  error: AppStoreConnectValidationError,\n  repo?: {link: string; name: string}\n) {\n  switch (error.code) {\n    case 'app-connect-authentication-error':\n      return repo\n        ? tct(\n            'App Store Connect credentials are invalid or missing. [linkToCustomRepository]',\n            {\n              linkToCustomRepository: (\n                <Link to={repo.link}>\n                  {tct(\n                    \"Make sure the credentials of the '[customRepositoryName]' repository are correct and exist.\",\n                    {\n                      customRepositoryName: repo.name,\n                    }\n                  )}\n                </Link>\n              ),\n            }\n          )\n        : t('The supplied App Store Connect credentials are invalid or missing.');\n    case 'app-connect-forbidden-error':\n      return t('The supplied API key does not have sufficient permissions.');\n    case 'app-connect-multiple-sources-error':\n      return t('Only one App Store Connect application is allowed in this project.');\n    default: {\n      // this shall not happen\n      Sentry.captureException(new Error('Unknown app store connect error.'));\n      return unexpectedErrorMessage;\n    }\n  }\n}\n","import {Component, useContext} from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nimport {decodeScalar} from '../queryString';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    const {cursor, limit, noPagination, referrer, location} = props;\n    const payload = this.props.getRequestPayload\n      ? this.props.getRequestPayload(props)\n      : props.eventView.getEventsAPIPayload(props.location);\n\n    if (cursor) {\n      payload.cursor = cursor;\n    }\n    if (limit) {\n      payload.per_page = limit;\n    }\n    if (noPagination) {\n      payload.noPagination = noPagination;\n    }\n    if (referrer) {\n      payload.referrer = referrer;\n    }\n\n    if (['events', 'eventsv2'].includes(props.route)) {\n      const queryUserModified = decodeScalar(location.query?.userModified);\n      if (queryUserModified !== undefined) {\n        payload.user_modified = queryUserModified;\n      }\n    }\n\n    Object.assign(payload, props.queryExtras ?? {});\n\n    return payload;\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {api, beforeFetch, afterFetch, didFetch, eventView, orgSlug, route, setError} =\n      this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(api, url, apiPayload);\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams\n): Promise<[T, string | undefined, ResponseMeta | undefined]> {\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import {AvatarProject} from 'sentry/types';\n\nconst platforms = [\n  'dotnet',\n  'android',\n  'apple',\n  'dart',\n  'elixir',\n  'flutter',\n  'go',\n  'java',\n  'javascript',\n  'native',\n  'node',\n  'perl',\n  'php',\n  'python',\n  'react-native',\n  'ruby',\n  'rust',\n  'unity',\n] as const;\n\nexport type DocPlatform = typeof platforms[number];\n\nconst performancePlatforms: DocPlatform[] = [\n  'dotnet',\n  'android',\n  'apple',\n  'go',\n  'java',\n  'javascript',\n  'node',\n  'php',\n  'python',\n  'react-native',\n  'ruby',\n];\n\nfunction validDocPlatform(platform: any): platform is DocPlatform {\n  return platforms.includes(platform);\n}\n\nexport function getDocsPlatform(\n  platform: string,\n  performanceOnly: boolean\n): DocPlatform | null {\n  // react-native is the only platform that has a dash, and supports performance so we can skip that check\n  if (platform === 'react-native') {\n    return 'react-native';\n  }\n  const index = platform.indexOf('-');\n  const prefix = index >= 0 ? platform.substring(0, index) : platform;\n  if (validDocPlatform(prefix)) {\n    const validPerformancePrefix = performancePlatforms.includes(prefix);\n    if ((performanceOnly && validPerformancePrefix) || !performanceOnly) {\n      return prefix;\n    }\n  }\n  // can't find a matching docs platform\n  return null;\n}\n\nexport function getConfigureTracingDocsLink(\n  project: AvatarProject | undefined\n): string | null {\n  const platform = project?.platform ?? null;\n  const docsPlatform = platform ? getDocsPlatform(platform, true) : null;\n  return docsPlatform === null\n    ? null // this platform does not support performance\n    : `https://docs.sentry.io/platforms/${docsPlatform}/performance/`;\n}\n","import {Environment} from 'sentry/types';\n\nconst DEFAULT_EMPTY_ROUTING_NAME = 'none';\nconst DEFAULT_EMPTY_ENV_NAME = '(No Environment)';\n\nexport function getUrlRoutingName(env: Partial<Environment>) {\n  if (env.name) {\n    return encodeURIComponent(env.name);\n  }\n\n  if (env.displayName) {\n    return encodeURIComponent(env.displayName);\n  }\n  return DEFAULT_EMPTY_ROUTING_NAME;\n}\n\nexport function getDisplayName(env: Partial<Environment>) {\n  return env.name || env.displayName || DEFAULT_EMPTY_ENV_NAME;\n}\n","import rawStacktraceContent from 'sentry/components/events/interfaces/crashContent/stackTrace/rawContent';\nimport {Event} from 'sentry/types/event';\n\nexport default function getStacktraceBody(event: Event) {\n  if (!event || !event.entries) {\n    return [];\n  }\n\n  // TODO(billyvg): This only accounts for the first exception, will need navigation to be able to\n  // diff multiple exceptions\n  //\n  // See: https://github.com/getsentry/sentry/issues/6055\n  const exc = event.entries.find(({type}) => type === 'exception');\n\n  if (!exc) {\n    // Look for a message if not an exception\n    const msg = event.entries.find(({type}) => type === 'message');\n    if (!msg) {\n      return [];\n    }\n    return msg?.data?.formatted && [msg.data.formatted];\n  }\n\n  if (!exc.data) {\n    return [];\n  }\n\n  // TODO(ts): This should be verified when EntryData has the correct type\n  return exc.data.values\n    .filter(value => !!value.stacktrace)\n    .map(value => rawStacktraceContent(value.stacktrace, event.platform, value))\n    .reduce((acc, value) => acc.concat(value), []);\n}\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  PartialQuickTrace,\n  TraceLite,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport withApi from 'sentry/utils/withApi';\n\ntype AdditionalQueryProps = {\n  eventId: string;\n};\n\ntype TraceLiteQueryChildrenProps = BaseTraceChildrenProps &\n  Omit<PartialQuickTrace, 'trace'> & {\n    trace: TraceLite | null;\n  };\n\ntype QueryProps = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceLiteQueryChildrenProps) => React.ReactNode;\n  };\n\nfunction getTraceLiteRequestPayload({\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload = getTraceRequestPayload(props);\n  return Object.assign({event_id: eventId}, additionalApiPayload);\n}\n\nfunction EmptyTrace({children}: Pick<QueryProps, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        trace: null,\n        type: 'partial',\n      })}\n    </Fragment>\n  );\n}\n\nfunction TraceLiteQuery({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps) {\n  if (!traceId) {\n    return <EmptyTrace>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<TraceLite, AdditionalQueryProps>\n      route={`events-trace-light/${traceId}`}\n      getRequestPayload={getTraceLiteRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          trace: tableData || null,\n          type: 'partial',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default withApi(TraceLiteQuery);\n","import {Fragment} from 'react';\n\nimport {Event} from 'sentry/types/event';\nimport {DiscoverQueryProps} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {TraceFullQuery} from 'sentry/utils/performance/quickTrace/traceFullQuery';\nimport TraceLiteQuery from 'sentry/utils/performance/quickTrace/traceLiteQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  flattenRelevantPaths,\n  getTraceTimeRangeFromEvent,\n  isCurrentEvent,\n} from 'sentry/utils/performance/quickTrace/utils';\n\ntype QueryProps = Omit<DiscoverQueryProps, 'api' | 'eventView'> & {\n  children: (props: QuickTraceQueryChildrenProps) => React.ReactNode;\n  event: Event;\n};\n\nexport default function QuickTraceQuery({children, event, ...props}: QueryProps) {\n  const traceId = event.contexts?.trace?.trace_id;\n\n  if (!traceId) {\n    return (\n      <Fragment>\n        {children({\n          isLoading: false,\n          error: null,\n          trace: [],\n          type: 'empty',\n          currentEvent: null,\n        })}\n      </Fragment>\n    );\n  }\n\n  const {start, end} = getTraceTimeRangeFromEvent(event);\n\n  return (\n    <TraceLiteQuery\n      eventId={event.id}\n      traceId={traceId}\n      start={start}\n      end={end}\n      {...props}\n    >\n      {traceLiteResults => (\n        <TraceFullQuery\n          eventId={event.id}\n          traceId={traceId}\n          start={start}\n          end={end}\n          {...props}\n        >\n          {traceFullResults => {\n            if (\n              !traceFullResults.isLoading &&\n              traceFullResults.error === null &&\n              traceFullResults.traces !== null\n            ) {\n              for (const subtrace of traceFullResults.traces) {\n                try {\n                  const trace = flattenRelevantPaths(event, subtrace);\n                  return children({\n                    ...traceFullResults,\n                    trace,\n                    currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n                  });\n                } catch {\n                  // let this fall through and check the next subtrace\n                  // or use the trace lite results\n                }\n              }\n            }\n\n            if (\n              !traceLiteResults.isLoading &&\n              traceLiteResults.error === null &&\n              traceLiteResults.trace !== null\n            ) {\n              const {trace} = traceLiteResults;\n              return children({\n                ...traceLiteResults,\n                currentEvent: trace.find(e => isCurrentEvent(e, event)) ?? null,\n              });\n            }\n\n            return children({\n              // only use the light results loading state if it didn't error\n              // if it did, we should rely on the full results\n              isLoading: traceLiteResults.error\n                ? traceFullResults.isLoading\n                : traceLiteResults.isLoading || traceFullResults.isLoading,\n              // swallow any errors from the light results because we\n              // should rely on the full results in this situations\n              error: traceFullResults.error,\n              trace: [],\n              // if we reach this point but there were some traces in the full results,\n              // that means there were other transactions in the trace, but the current\n              // event could not be found\n              type: traceFullResults.traces?.length ? 'missing' : 'empty',\n              currentEvent: null,\n            });\n          }}\n        </TraceFullQuery>\n      )}\n    </TraceLiteQuery>\n  );\n}\n","import {Fragment} from 'react';\n\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {\n  BaseTraceChildrenProps,\n  FullQuickTrace,\n  TraceFull,\n  TraceFullDetailed,\n  TraceRequestProps,\n} from 'sentry/utils/performance/quickTrace/types';\nimport {\n  getTraceRequestPayload,\n  makeEventView,\n} from 'sentry/utils/performance/quickTrace/utils';\nimport withApi from 'sentry/utils/withApi';\n\ntype AdditionalQueryProps = {\n  detailed?: boolean;\n  eventId?: string;\n};\n\ntype TraceFullQueryChildrenProps<T> = BaseTraceChildrenProps &\n  Omit<FullQuickTrace, 'trace'> & {\n    /**\n     * The `event-trace` endpoint returns a full trace with the parent-child\n     * relationships. It can be flattened into a `QuickTraceEvent` if necessary.\n     */\n    traces: T | null;\n  };\n\ntype QueryProps<T> = Omit<TraceRequestProps, 'eventView'> &\n  AdditionalQueryProps & {\n    children: (props: TraceFullQueryChildrenProps<T>) => React.ReactNode;\n  };\n\nfunction getTraceFullRequestPayload({\n  detailed,\n  eventId,\n  ...props\n}: DiscoverQueryProps & AdditionalQueryProps) {\n  const additionalApiPayload: any = getTraceRequestPayload(props);\n  additionalApiPayload.detailed = detailed ? '1' : '0';\n  if (eventId) {\n    additionalApiPayload.event_id = eventId;\n  }\n  return additionalApiPayload;\n}\n\nfunction EmptyTrace<T>({children}: Pick<QueryProps<T>, 'children'>) {\n  return (\n    <Fragment>\n      {children({\n        isLoading: false,\n        error: null,\n        traces: null,\n        type: 'full',\n      })}\n    </Fragment>\n  );\n}\n\nfunction GenericTraceFullQuery<T>({\n  traceId,\n  start,\n  end,\n  statsPeriod,\n  children,\n  ...props\n}: QueryProps<T>) {\n  if (!traceId) {\n    return <EmptyTrace<T>>{children}</EmptyTrace>;\n  }\n\n  const eventView = makeEventView({start, end, statsPeriod});\n\n  return (\n    <GenericDiscoverQuery<T, AdditionalQueryProps>\n      route={`events-trace/${traceId}`}\n      getRequestPayload={getTraceFullRequestPayload}\n      eventView={eventView}\n      {...props}\n    >\n      {({tableData, ...rest}) =>\n        children({\n          // This is using '||` instead of '??` here because\n          // the client returns a empty string when the response\n          // is 204. And we want the empty string, undefined and\n          // null to be converted to null.\n          traces: tableData || null,\n          type: 'full',\n          ...rest,\n        })\n      }\n    </GenericDiscoverQuery>\n  );\n}\n\nexport const TraceFullQuery = withApi(\n  (props: Omit<QueryProps<TraceFull[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFull[]> {...props} detailed={false} />\n  )\n);\n\nexport const TraceFullDetailedQuery = withApi(\n  (props: Omit<QueryProps<TraceFullDetailed[]>, 'detailed'>) => (\n    <GenericTraceFullQuery<TraceFullDetailed[]> {...props} detailed />\n  )\n);\n","/**\n * Replace item at `index` in `array` with `obj`\n */\nexport function replaceAtArrayIndex<T>(array: T[], index: number, obj: T): T[] {\n  const newArray = [...array];\n  newArray.splice(index, 1, obj);\n  return newArray;\n}\n","import {createActions} from 'reflux';\n\nconst EnvironmentActions = createActions([\n  'fetchEnvironments',\n  'fetchEnvironmentsError',\n  'fetchEnvironmentsSuccess',\n]);\n\nexport default EnvironmentActions;\n","import {createStore} from 'reflux';\n\nimport EnvironmentActions from 'sentry/actions/environmentActions';\nimport {Environment} from 'sentry/types';\nimport {getDisplayName, getUrlRoutingName} from 'sentry/utils/environment';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\nimport {CommonStoreDefinition} from './types';\n\ntype EnhancedEnvironment = Environment & {\n  displayName: string;\n  urlRoutingName: string;\n};\n\ntype State = {\n  environments: EnhancedEnvironment[] | null;\n  error: Error | null;\n};\n\ninterface OrganizationEnvironmentsStoreDefinition extends CommonStoreDefinition<State> {\n  init(): void;\n  onFetchEnvironments(): void;\n  onFetchEnvironmentsError(error: Error): void;\n  onFetchEnvironmentsSuccess(environments: Environment[]): void;\n  state: State;\n}\n\nconst storeConfig: OrganizationEnvironmentsStoreDefinition = {\n  unsubscribeListeners: [],\n\n  state: {\n    environments: null,\n    error: null,\n  },\n\n  init() {\n    this.state = {environments: null, error: null};\n\n    this.unsubscribeListeners.push(\n      this.listenTo(EnvironmentActions.fetchEnvironments, this.onFetchEnvironments)\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(\n        EnvironmentActions.fetchEnvironmentsSuccess,\n        this.onFetchEnvironmentsSuccess\n      )\n    );\n    this.unsubscribeListeners.push(\n      this.listenTo(\n        EnvironmentActions.fetchEnvironmentsError,\n        this.onFetchEnvironmentsError\n      )\n    );\n  },\n\n  makeEnvironment(item: Environment): EnhancedEnvironment {\n    return {\n      id: item.id,\n      name: item.name,\n      get displayName() {\n        return getDisplayName(item);\n      },\n      get urlRoutingName() {\n        return getUrlRoutingName(item);\n      },\n    };\n  },\n\n  onFetchEnvironments() {\n    this.state = {environments: null, error: null};\n    this.trigger(this.state);\n  },\n\n  onFetchEnvironmentsSuccess(environments) {\n    this.state = {error: null, environments: environments.map(this.makeEnvironment)};\n    this.trigger(this.state);\n  },\n\n  onFetchEnvironmentsError(error) {\n    this.state = {error, environments: null};\n    this.trigger(this.state);\n  },\n\n  getState() {\n    return this.state;\n  },\n};\n\nconst OrganizationEnvironmentsStore = createStore(makeSafeRefluxStore(storeConfig));\n\nexport default OrganizationEnvironmentsStore;\n","import DetailedError from 'sentry/components/errors/detailedError';\nimport {t} from 'sentry/locale';\nimport {Environment} from 'sentry/types';\n\ntype Props = {\n  environments: Environment[];\n  onRetry?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst GroupEventDetailsLoadingError = ({onRetry, environments}: Props) => {\n  const reasons = [\n    t('The events are still processing and are on their way'),\n    t('The events have been deleted'),\n    t('There is an internal systems error or active issue'),\n  ];\n\n  let message: React.ReactNode;\n\n  if (environments.length === 0) {\n    // All Environments case\n    message = (\n      <div>\n        <p>{t('This could be due to a handful of reasons:')}</p>\n        <ol className=\"detailed-error-list\">\n          {reasons.map((reason, i) => (\n            <li key={i}>{reason}</li>\n          ))}\n        </ol>\n      </div>\n    );\n  } else {\n    message = (\n      <div>{t('No events were found for the currently selected environments')}</div>\n    );\n  }\n\n  return (\n    <DetailedError\n      className=\"group-event-details-error\"\n      onRetry={environments.length === 0 ? onRetry : undefined}\n      heading={t('Sorry, the events for this issue could not be found.')}\n      message={message}\n    />\n  );\n};\n\nexport default GroupEventDetailsLoadingError;\n","import {Component} from 'react';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {IconAdd, IconClose} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getIntegrationIcon} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  externalIssueDisplayName?: string | null;\n  externalIssueId?: string | null;\n  externalIssueKey?: string | null;\n  externalIssueLink?: string | null;\n  hoverCardBody?: React.ReactNode;\n  hoverCardHeader?: React.ReactNode;\n  integrationType?: string;\n  onClose?: (externalIssueId?: string | null) => void;\n  onOpen?: () => void;\n  showHoverCard?: boolean;\n};\n\nclass IssueSyncListElement extends Component<Props> {\n  isLinked(): boolean {\n    return !!(this.props.externalIssueLink && this.props.externalIssueId);\n  }\n\n  handleDelete = (): void => {\n    callIfFunction(this.props.onClose, this.props.externalIssueId);\n  };\n\n  handleIconClick = () => {\n    if (this.isLinked()) {\n      this.handleDelete();\n    } else if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  };\n\n  getIcon(): React.ReactNode {\n    return getIntegrationIcon(this.props.integrationType);\n  }\n\n  getPrettyName(): string {\n    const type = this.props.integrationType;\n    switch (type) {\n      case 'gitlab':\n        return 'GitLab';\n      case 'github':\n        return 'GitHub';\n      case 'github_enterprise':\n        return 'GitHub Enterprise';\n      case 'vsts':\n        return 'Azure DevOps';\n      case 'jira_server':\n        return 'Jira Server';\n      default:\n        return capitalize(type);\n    }\n  }\n\n  getLink(): React.ReactElement {\n    return (\n      <IntegrationLink\n        href={this.props.externalIssueLink || undefined}\n        onClick={!this.isLinked() ? this.props.onOpen : undefined}\n      >\n        {this.getText()}\n      </IntegrationLink>\n    );\n  }\n\n  getText(): React.ReactNode {\n    if (this.props.children) {\n      return this.props.children;\n    }\n    if (this.props.externalIssueDisplayName) {\n      return this.props.externalIssueDisplayName;\n    }\n    if (this.props.externalIssueKey) {\n      return this.props.externalIssueKey;\n    }\n\n    return `Link ${this.getPrettyName()} Issue`;\n  }\n\n  render() {\n    return (\n      <IssueSyncListElementContainer>\n        <ClassNames>\n          {({css}) => (\n            <Hovercard\n              containerClassName={css`\n                display: flex;\n                align-items: center;\n                min-width: 0; /* flex-box overflow workaround */\n\n                svg {\n                  flex-shrink: 0;\n                }\n              `}\n              header={this.props.hoverCardHeader}\n              body={this.props.hoverCardBody}\n              bodyClassName=\"issue-list-body\"\n              show={this.props.showHoverCard}\n            >\n              {this.getIcon()}\n              {this.getLink()}\n            </Hovercard>\n          )}\n        </ClassNames>\n        {(this.props.onClose || this.props.onOpen) && (\n          <StyledIcon onClick={this.handleIconClick}>\n            {this.isLinked() ? <IconClose /> : this.props.onOpen ? <IconAdd /> : null}\n          </StyledIcon>\n        )}\n      </IssueSyncListElementContainer>\n    );\n  }\n}\n\nexport const IssueSyncListElementContainer = styled('div')`\n  line-height: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nexport const IntegrationLink = styled('a')`\n  text-decoration: none;\n  padding-bottom: ${space(0.25)};\n  margin-left: ${space(1)};\n  color: ${p => p.theme.textColor};\n  border-bottom: 1px solid ${p => p.theme.textColor};\n  cursor: pointer;\n  line-height: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  &,\n  &:hover {\n    border-bottom: 1px solid ${p => p.theme.blue300};\n  }\n`;\n\nconst StyledIcon = styled('span')`\n  color: ${p => p.theme.textColor};\n  cursor: pointer;\n`;\n\nexport default IssueSyncListElement;\n","import * as Sentry from '@sentry/react';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport AbstractExternalIssueForm, {\n  ExternalIssueAction,\n} from 'sentry/components/externalIssues/abstractExternalIssueForm';\nimport Form from 'sentry/components/forms/form';\nimport NavTabs from 'sentry/components/navTabs';\nimport {t, tct} from 'sentry/locale';\nimport {Group, Integration, IntegrationExternalIssue} from 'sentry/types';\n\nconst MESSAGES_BY_ACTION = {\n  link: t('Successfully linked issue.'),\n  create: t('Successfully created issue.'),\n};\n\nconst SUBMIT_LABEL_BY_ACTION = {\n  link: t('Link Issue'),\n  create: t('Create Issue'),\n};\n\ntype Props = {\n  group: Group;\n  integration: Integration;\n  onChange: (onSuccess?: () => void, onError?: () => void) => void;\n} & AbstractExternalIssueForm['props'];\n\ntype State = AbstractExternalIssueForm['state'];\n\nexport default class ExternalIssueForm extends AbstractExternalIssueForm<Props, State> {\n  loadTransaction?: ReturnType<typeof Sentry.startTransaction>;\n  submitTransaction?: ReturnType<typeof Sentry.startTransaction>;\n\n  constructor(props) {\n    super(props, {});\n    this.loadTransaction = this.startTransaction('load');\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const query: {action?: ExternalIssueAction} = {};\n    if (this.state?.hasOwnProperty('action')) {\n      query.action = this.state.action;\n    }\n    return [['integrationDetails', this.getEndPointString(), {query}]];\n  }\n\n  handleClick = (action: ExternalIssueAction) => {\n    this.setState({action}, () => this.reloadData());\n  };\n\n  startTransaction = (type: 'load' | 'submit') => {\n    const {group, integration} = this.props;\n    const {action} = this.state;\n    const transaction = Sentry.startTransaction({name: `externalIssueForm.${type}`});\n    Sentry.getCurrentHub().configureScope(scope => scope.setSpan(transaction));\n    transaction.setTag('issueAction', action);\n    transaction.setTag('groupID', group.id);\n    transaction.setTag('projectID', group.project.id);\n    transaction.setTag('integrationSlug', integration.provider.slug);\n    transaction.setTag('integrationType', 'firstParty');\n    return transaction;\n  };\n\n  handlePreSubmit = () => {\n    this.submitTransaction = this.startTransaction('submit');\n  };\n\n  onSubmitSuccess = (_data: IntegrationExternalIssue): void => {\n    const {onChange, closeModal} = this.props;\n    const {action} = this.state;\n    onChange(() => addSuccessMessage(MESSAGES_BY_ACTION[action]));\n    closeModal();\n\n    this.submitTransaction?.finish();\n  };\n\n  handleSubmitError = () => {\n    this.submitTransaction?.finish();\n  };\n\n  onLoadAllEndpointsSuccess = () => {\n    this.loadTransaction?.finish();\n  };\n\n  onRequestError = () => {\n    this.loadTransaction?.finish();\n  };\n\n  getEndPointString() {\n    const {group, integration} = this.props;\n    return `/groups/${group.id}/integrations/${integration.id}/`;\n  }\n\n  getTitle = () => {\n    const {integration} = this.props;\n    return tct('[integration] Issue', {integration: integration.provider.name});\n  };\n\n  getFormProps = (): Form['props'] => {\n    const {action} = this.state;\n    return {\n      ...this.getDefaultFormProps(),\n      submitLabel: SUBMIT_LABEL_BY_ACTION[action],\n      apiEndpoint: this.getEndPointString(),\n      apiMethod: action === 'create' ? 'POST' : 'PUT',\n      onPreSubmit: this.handlePreSubmit,\n      onSubmitError: this.handleSubmitError,\n      onSubmitSuccess: this.onSubmitSuccess,\n    };\n  };\n\n  renderNavTabs = () => {\n    const {action} = this.state;\n    return (\n      <NavTabs underlined>\n        <li className={action === 'create' ? 'active' : ''}>\n          <a onClick={() => this.handleClick('create')}>{t('Create')}</a>\n        </li>\n        <li className={action === 'link' ? 'active' : ''}>\n          <a onClick={() => this.handleClick('link')}>{t('Link')}</a>\n        </li>\n      </NavTabs>\n    );\n  };\n\n  renderBody() {\n    return this.renderForm(this.getCleanedFields());\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport IssueSyncListElement from 'sentry/components/issueSyncListElement';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, GroupIntegration} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport IntegrationItem from 'sentry/views/organizationIntegrations/integrationItem';\n\nimport ExternalIssueForm from './externalIssueForm';\n\ntype Props = AsyncComponent['props'] & {\n  api: Client;\n  configurations: GroupIntegration[];\n  group: Group;\n  onChange: (onSuccess?: () => void, onError?: () => void) => void;\n};\n\ntype LinkedIssues = {\n  linked: GroupIntegration[];\n  unlinked: GroupIntegration[];\n};\n\nconst ExternalIssueActions = ({configurations, group, onChange, api}: Props) => {\n  const {linked, unlinked} = configurations\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n    .reduce(\n      (acc: LinkedIssues, curr) => {\n        if (curr.externalIssues.length) {\n          acc.linked.push(curr);\n        } else {\n          acc.unlinked.push(curr);\n        }\n        return acc;\n      },\n      {linked: [], unlinked: []}\n    );\n\n  const deleteIssue = (integration: GroupIntegration) => {\n    const {externalIssues} = integration;\n    // Currently we do not support a case where there is multiple external issues.\n    // For example, we shouldn't have more than 1 jira ticket created for an issue for each jira configuration.\n    const issue = externalIssues[0];\n    const {id} = issue;\n    const endpoint = `/groups/${group.id}/integrations/${integration.id}/?externalIssue=${id}`;\n\n    api.request(endpoint, {\n      method: 'DELETE',\n      success: () => {\n        onChange(\n          () => addSuccessMessage(t('Successfully unlinked issue.')),\n          () => addErrorMessage(t('Unable to unlink issue.'))\n        );\n      },\n      error: () => {\n        addErrorMessage(t('Unable to unlink issue.'));\n      },\n    });\n  };\n\n  const doOpenModal = (integration: GroupIntegration) =>\n    openModal(\n      deps => <ExternalIssueForm {...deps} {...{group, onChange, integration}} />,\n      {allowClickClose: false}\n    );\n\n  return (\n    <Fragment>\n      {linked.map(config => {\n        const {provider, externalIssues} = config;\n        const issue = externalIssues[0];\n        return (\n          <IssueSyncListElement\n            key={issue.id}\n            externalIssueLink={issue.url}\n            externalIssueId={issue.id}\n            externalIssueKey={issue.key}\n            externalIssueDisplayName={issue.displayName}\n            onClose={() => deleteIssue(config)}\n            integrationType={provider.key}\n            hoverCardHeader={t('Linked %s Integration', provider.name)}\n            hoverCardBody={\n              <div>\n                <IssueTitle>{issue.title}</IssueTitle>\n                {issue.description && (\n                  <IssueDescription>{issue.description}</IssueDescription>\n                )}\n              </div>\n            }\n          />\n        );\n      })}\n\n      {unlinked.length > 0 && (\n        <IssueSyncListElement\n          integrationType={unlinked[0].provider.key}\n          hoverCardHeader={t('Linked %s Integration', unlinked[0].provider.name)}\n          hoverCardBody={\n            <Container>\n              {unlinked.map(config => (\n                <Wrapper onClick={() => doOpenModal(config)} key={config.id}>\n                  <IntegrationItem integration={config} />\n                </Wrapper>\n              ))}\n            </Container>\n          }\n          onOpen={unlinked.length === 1 ? () => doOpenModal(unlinked[0]) : undefined}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nconst IssueTitle = styled('div')`\n  font-size: 1.1em;\n  font-weight: 600;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst IssueDescription = styled('div')`\n  margin-top: ${space(1)};\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst Wrapper = styled('div')`\n  margin-bottom: ${space(2)};\n  cursor: pointer;\n`;\n\nconst Container = styled('div')`\n  & > div:last-child {\n    margin-bottom: ${space(1)};\n  }\n`;\n\nexport default withApi(ExternalIssueActions);\n","import {Component, Fragment} from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps, openModal} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport IssueSyncListElement from 'sentry/components/issueSyncListElement';\nimport NavTabs from 'sentry/components/navTabs';\nimport {t, tct} from 'sentry/locale';\nimport plugins from 'sentry/plugins';\nimport {Group, Organization, Plugin, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype PluginIssue = {\n  issue_id: string;\n  label: string;\n  url: string;\n};\n\ntype TitledPlugin = Plugin & {\n  // issue serializer adds more fields\n  // TODO: should be able to use name instead of title\n  title: string;\n};\n\ntype Props = {\n  api: Client;\n  group: Group;\n  organization: Organization;\n  plugin: TitledPlugin;\n  project: Project;\n};\n\ntype State = {\n  issue: PluginIssue | null;\n  pluginLoading: boolean;\n};\n\nclass PluginActions extends Component<Props, State> {\n  state: State = {\n    issue: null,\n    pluginLoading: false,\n  };\n\n  componentDidMount() {\n    this.loadPlugin(this.props.plugin);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.plugin.id !== nextProps.plugin.id) {\n      this.loadPlugin(nextProps.plugin);\n    }\n  }\n\n  deleteIssue = () => {\n    const plugin = {\n      ...this.props.plugin,\n      issue: null,\n    };\n    // override plugin.issue so that 'create/link' Modal\n    // doesn't think the plugin still has an issue linked\n    const endpoint = `/issues/${this.props.group.id}/plugins/${plugin.slug}/unlink/`;\n    this.props.api.request(endpoint, {\n      success: () => {\n        this.loadPlugin(plugin);\n        addSuccessMessage(t('Successfully unlinked issue.'));\n      },\n      error: () => {\n        addErrorMessage(t('Unable to unlink issue'));\n      },\n    });\n  };\n\n  loadPlugin = (data: any) => {\n    this.setState(\n      {\n        pluginLoading: true,\n      },\n      () => {\n        plugins.load(data, () => {\n          const issue = data.issue || null;\n          this.setState({pluginLoading: false, issue});\n        });\n      }\n    );\n  };\n\n  handleModalClose = (data?: any) =>\n    this.setState({\n      issue:\n        data?.id && data?.link\n          ? {issue_id: data.id, url: data.link, label: data.label}\n          : null,\n    });\n\n  openModal = () => {\n    const {issue} = this.state;\n    const {project, group, organization} = this.props;\n    const plugin = {...this.props.plugin, issue};\n\n    openModal(\n      deps => (\n        <PluginActionsModal\n          {...deps}\n          project={project}\n          group={group}\n          organization={organization}\n          plugin={plugin}\n          onSuccess={this.handleModalClose}\n        />\n      ),\n      {onClose: this.handleModalClose}\n    );\n  };\n\n  render() {\n    const {issue} = this.state;\n    const plugin = {...this.props.plugin, issue};\n\n    return (\n      <IssueSyncListElement\n        onOpen={this.openModal}\n        externalIssueDisplayName={issue ? issue.label : null}\n        externalIssueId={issue ? issue.issue_id : null}\n        externalIssueLink={issue ? issue.url : null}\n        onClose={this.deleteIssue}\n        integrationType={plugin.id}\n      />\n    );\n  }\n}\n\ntype ModalProps = ModalRenderProps & {\n  group: Group;\n  onSuccess: (data: any) => void;\n  organization: Organization;\n  plugin: TitledPlugin & {issue: PluginIssue | null};\n  project: Project;\n};\n\ntype ModalState = {\n  actionType: 'create' | 'link' | null;\n};\n\nclass PluginActionsModal extends Component<ModalProps, ModalState> {\n  state: ModalState = {\n    actionType: 'create',\n  };\n\n  render() {\n    const {Header, Body, group, project, organization, plugin, onSuccess} = this.props;\n    const {actionType} = this.state;\n\n    return (\n      <Fragment>\n        <Header closeButton>\n          {tct('[name] Issue', {name: plugin.name || plugin.title})}\n        </Header>\n        <NavTabs underlined>\n          <li className={actionType === 'create' ? 'active' : ''}>\n            <a onClick={() => this.setState({actionType: 'create'})}>{t('Create')}</a>\n          </li>\n          <li className={actionType === 'link' ? 'active' : ''}>\n            <a onClick={() => this.setState({actionType: 'link'})}>{t('Link')}</a>\n          </li>\n        </NavTabs>\n        {actionType && (\n          // need the key here so React will re-render\n          // with new action prop\n          <Body key={actionType}>\n            {plugins.get(plugin).renderGroupActions({\n              plugin,\n              group,\n              project,\n              organization,\n              actionType,\n              onSuccess,\n            })}\n          </Body>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport {PluginActions};\n\nexport default withApi(withOrganization(PluginActions));\n","import {createActions} from 'reflux';\n\nconst PlatformExternalIssueActions = createActions([\n  'delete',\n  'deleteSuccess',\n  'deleteError',\n]);\n\nexport default PlatformExternalIssueActions;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {PlatformExternalIssue} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface ExternalIssueStoreDefinition extends StoreDefinition {\n  add(issue: PlatformExternalIssue): void;\n  getInitialState(): PlatformExternalIssue[];\n  load(items: PlatformExternalIssue[]): void;\n}\n\nconst storeConfig: ExternalIssueStoreDefinition = {\n  init() {\n    this.items = [];\n  },\n\n  getInitialState(): PlatformExternalIssue[] {\n    return this.items;\n  },\n\n  load(items: PlatformExternalIssue[]) {\n    this.items = items;\n    this.trigger(items);\n  },\n\n  get(id: string) {\n    return this.items.find((item: PlatformExternalIssue) => item.id === id);\n  },\n\n  getAll() {\n    return this.items;\n  },\n\n  add(issue: PlatformExternalIssue) {\n    if (!this.items.some(i => i.id === issue.id)) {\n      this.items = this.items.concat([issue]);\n      this.trigger(this.items);\n    }\n  },\n};\n\nconst ExternalIssueStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default ExternalIssueStore;\n","import {Component} from 'react';\n\nimport {t} from 'sentry/locale';\nimport ExternalIssueStore from 'sentry/stores/externalIssueStore';\nimport {Group, PlatformExternalIssue, SentryAppInstallation} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport getStacktraceBody from 'sentry/utils/getStacktraceBody';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport SentryAppExternalForm, {\n  FieldFromSchema,\n  SchemaFormConfig,\n} from 'sentry/views/organizationIntegrations/sentryAppExternalForm';\n\ntype Props = {\n  action: 'create' | 'link';\n  appName: string;\n  config: SchemaFormConfig;\n  event: Event;\n  group: Group;\n  onSubmitSuccess: (externalIssue: PlatformExternalIssue) => void;\n  sentryAppInstallation: SentryAppInstallation;\n};\n\nexport class SentryAppExternalIssueForm extends Component<Props> {\n  onSubmitSuccess = (issue: PlatformExternalIssue) => {\n    ExternalIssueStore.add(issue);\n    this.props.onSubmitSuccess(issue);\n  };\n\n  getStacktrace() {\n    const evt = this.props.event;\n    const contentArr = getStacktraceBody(evt);\n\n    if (contentArr && contentArr.length > 0) {\n      return '\\n\\n```\\n' + contentArr[0] + '\\n```';\n    }\n    return '';\n  }\n\n  getFieldDefault(field: FieldFromSchema) {\n    const {group, appName} = this.props;\n    if (field.type === 'textarea') {\n      field.maxRows = 10;\n      field.autosize = true;\n    }\n    switch (field.default) {\n      case 'issue.title':\n        return group.title;\n      case 'issue.description':\n        const stacktrace = this.getStacktrace();\n        const queryParams = {referrer: appName};\n        const url = addQueryParamsToExistingUrl(group.permalink, queryParams);\n        const shortId = group.shortId;\n        return t('Sentry Issue: [%s](%s)%s', shortId, url, stacktrace);\n      default:\n        return '';\n    }\n  }\n\n  render() {\n    return (\n      <SentryAppExternalForm\n        sentryAppInstallationUuid={this.props.sentryAppInstallation.uuid}\n        appName={this.props.appName}\n        config={this.props.config}\n        action={this.props.action}\n        element=\"issue-link\"\n        extraFields={{groupId: this.props.group.id}}\n        extraRequestBody={{projectId: this.props.group.project.id}}\n        onSubmitSuccess={this.onSubmitSuccess}\n        // Needs to bind to access this.props\n        getFieldDefault={field => this.getFieldDefault(field)}\n      />\n    );\n  }\n}\n\nexport default SentryAppExternalIssueForm;\n","import {Component, Fragment} from 'react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport SentryAppExternalIssueForm from 'sentry/components/group/sentryAppExternalIssueForm';\nimport NavTabs from 'sentry/components/navTabs';\nimport {t, tct} from 'sentry/locale';\nimport {\n  Group,\n  PlatformExternalIssue,\n  SentryAppComponent,\n  SentryAppInstallation,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = ModalRenderProps & {\n  api: Client;\n  event: Event;\n  group: Group;\n  onSubmitSuccess: (externalIssue: PlatformExternalIssue) => void;\n  sentryAppComponent: SentryAppComponent;\n  sentryAppInstallation: SentryAppInstallation;\n};\n\ntype State = {\n  action: 'create' | 'link';\n};\n\nclass SentryAppExternalIssueModal extends Component<Props, State> {\n  state: State = {\n    action: 'create',\n  };\n\n  showLink = () => {\n    this.setState({action: 'link'});\n  };\n\n  showCreate = () => {\n    this.setState({action: 'create'});\n  };\n\n  onSubmitSuccess = (externalIssue: PlatformExternalIssue) => {\n    this.props.onSubmitSuccess(externalIssue);\n    this.props.closeModal();\n  };\n\n  render() {\n    const {Header, Body, sentryAppComponent, sentryAppInstallation, group} = this.props;\n    const {action} = this.state;\n    const name = sentryAppComponent.sentryApp.name;\n    const config = sentryAppComponent.schema[action];\n\n    return (\n      <Fragment>\n        <Header closeButton>{tct('[name] Issue', {name})}</Header>\n        <NavTabs underlined>\n          <li className={action === 'create' ? 'active create' : 'create'}>\n            <a onClick={this.showCreate}>{t('Create')}</a>\n          </li>\n          <li className={action === 'link' ? 'active link' : 'link'}>\n            <a onClick={this.showLink}>{t('Link')}</a>\n          </li>\n        </NavTabs>\n        <Body>\n          <SentryAppExternalIssueForm\n            group={group}\n            sentryAppInstallation={sentryAppInstallation}\n            appName={name}\n            config={config}\n            action={action}\n            onSubmitSuccess={this.onSubmitSuccess}\n            event={this.props.event}\n          />\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(SentryAppExternalIssueModal);\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {deleteExternalIssue} from 'sentry/actionCreators/platformExternalIssues';\nimport {Client} from 'sentry/api';\nimport {IntegrationLink} from 'sentry/components/issueSyncListElement';\nimport SentryAppComponentIcon from 'sentry/components/sentryAppComponentIcon';\nimport {IconAdd, IconClose} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Group,\n  PlatformExternalIssue,\n  SentryAppComponent,\n  SentryAppInstallation,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\nimport withApi from 'sentry/utils/withApi';\n\nimport SentryAppExternalIssueModal from './sentryAppExternalIssueModal';\n\ntype Props = {\n  api: Client;\n  event: Event;\n  group: Group;\n  sentryAppComponent: SentryAppComponent;\n  sentryAppInstallation: SentryAppInstallation;\n  externalIssue?: PlatformExternalIssue;\n};\n\ntype State = {\n  action: 'create' | 'link';\n  externalIssue?: PlatformExternalIssue;\n};\n\nclass SentryAppExternalIssueActions extends Component<Props, State> {\n  state: State = {\n    action: 'create',\n    externalIssue: this.props.externalIssue,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.externalIssue !== prevProps.externalIssue) {\n      this.updateExternalIssue(this.props.externalIssue);\n    }\n  }\n\n  updateExternalIssue(externalIssue?: PlatformExternalIssue) {\n    this.setState({externalIssue});\n  }\n\n  doOpenModal = (e?: React.MouseEvent) => {\n    // Only show the modal when we don't have a linked issue\n    if (this.state.externalIssue) {\n      return;\n    }\n\n    const {group, event, sentryAppComponent, sentryAppInstallation} = this.props;\n\n    recordInteraction(\n      sentryAppComponent.sentryApp.slug,\n      'sentry_app_component_interacted',\n      {\n        componentType: 'issue-link',\n      }\n    );\n\n    e?.preventDefault();\n    openModal(\n      deps => (\n        <SentryAppExternalIssueModal\n          {...deps}\n          {...{group, event, sentryAppComponent, sentryAppInstallation}}\n          onSubmitSuccess={this.onSubmitSuccess}\n        />\n      ),\n      {allowClickClose: false}\n    );\n  };\n\n  deleteIssue = () => {\n    const {api, group} = this.props;\n    const {externalIssue} = this.state;\n\n    externalIssue &&\n      deleteExternalIssue(api, group.id, externalIssue.id)\n        .then(_data => {\n          this.setState({externalIssue: undefined});\n          addSuccessMessage(t('Successfully unlinked issue.'));\n        })\n        .catch(_error => {\n          addErrorMessage(t('Unable to unlink issue.'));\n        });\n  };\n\n  onAddRemoveClick = () => {\n    const {externalIssue} = this.state;\n\n    if (!externalIssue) {\n      this.doOpenModal();\n    } else {\n      this.deleteIssue();\n    }\n  };\n\n  onSubmitSuccess = (externalIssue: PlatformExternalIssue) => {\n    this.setState({externalIssue});\n  };\n\n  render() {\n    const {sentryAppComponent} = this.props;\n    const {externalIssue} = this.state;\n    const name = sentryAppComponent.sentryApp.name;\n\n    let url = '#';\n    let displayName: React.ReactNode | string = tct('Link [name] Issue', {name});\n\n    if (externalIssue) {\n      url = externalIssue.webUrl;\n      displayName = externalIssue.displayName;\n    }\n\n    return (\n      <IssueLinkContainer>\n        <IssueLink>\n          <StyledSentryAppComponentIcon sentryAppComponent={sentryAppComponent} />\n          <IntegrationLink onClick={this.doOpenModal} href={url}>\n            {displayName}\n          </IntegrationLink>\n        </IssueLink>\n        <StyledIcon onClick={this.onAddRemoveClick}>\n          {!!externalIssue ? <IconClose /> : <IconAdd />}\n        </StyledIcon>\n      </IssueLinkContainer>\n    );\n  }\n}\n\nconst StyledSentryAppComponentIcon = styled(SentryAppComponentIcon)`\n  color: ${p => p.theme.textColor};\n  width: ${space(3)};\n  height: ${space(3)};\n  cursor: pointer;\n  flex-shrink: 0;\n`;\n\nconst IssueLink = styled('div')`\n  display: flex;\n  align-items: center;\n  min-width: 0;\n`;\n\nconst IssueLinkContainer = styled('div')`\n  line-height: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nconst StyledIcon = styled('span')`\n  color: ${p => p.theme.textColor};\n  cursor: pointer;\n`;\n\nexport default withApi(SentryAppExternalIssueActions);\n","import PlatformExternalIssueActions from 'sentry/actions/platformExternalIssueActions';\nimport {Client} from 'sentry/api';\n\nexport async function deleteExternalIssue(\n  api: Client,\n  groupId: string,\n  externalIssueId: string\n) {\n  PlatformExternalIssueActions.delete(groupId, externalIssueId);\n\n  try {\n    const data = await api.requestPromise(\n      `/issues/${groupId}/external-issues/${externalIssueId}/`,\n      {\n        method: 'DELETE',\n      }\n    );\n\n    PlatformExternalIssueActions.deleteSuccess(data);\n    return data;\n  } catch (error) {\n    PlatformExternalIssueActions.deleteError(error);\n    throw error;\n  }\n}\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {SentryAppInstallation} from 'sentry/types';\nimport {makeSafeRefluxStore} from 'sentry/utils/makeSafeRefluxStore';\n\ninterface SentryAppInstallationStoreDefinition extends StoreDefinition {\n  getInitialState(): SentryAppInstallation[];\n  load(items: SentryAppInstallation[]): void;\n}\n\nconst storeConfig: SentryAppInstallationStoreDefinition = {\n  init() {\n    this.items = [];\n  },\n\n  getInitialState(): SentryAppInstallation[] {\n    return this.items;\n  },\n\n  load(items: SentryAppInstallation[]) {\n    this.items = items;\n    this.trigger(items);\n  },\n\n  get(uuid: string) {\n    const items: SentryAppInstallation[] = this.items;\n    return items.find(item => item.uuid === uuid);\n  },\n\n  getAll(): SentryAppInstallation[] {\n    return this.items;\n  },\n};\n\nconst SentryAppInstallationStore = createStore(makeSafeRefluxStore(storeConfig));\nexport default SentryAppInstallationStore;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst Heading = styled('h5')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n\n  &:after {\n    flex: 1;\n    display: block;\n    content: '';\n    border-top: 1px solid ${p => p.theme.innerBorder};\n    margin-left: ${space(1)};\n  }\n`;\n\nconst Subheading = styled('h6')`\n  color: ${p => p.theme.gray300};\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  text-transform: uppercase;\n  margin-bottom: ${space(1)};\n  line-height: 1;\n`;\n\ninterface SidebarSectionProps\n  extends Omit<React.HTMLAttributes<HTMLHeadingElement>, 'title'> {\n  children: React.ReactNode;\n  title: React.ReactNode;\n  secondary?: boolean;\n}\n\n/**\n * Used to add a new section in Issue Details' sidebar.\n */\nfunction SidebarSection({title, children, secondary, ...props}: SidebarSectionProps) {\n  const HeaderComponent = secondary ? Subheading : Heading;\n\n  return (\n    <Fragment>\n      <HeaderComponent {...props}>{title}</HeaderComponent>\n      <SectionContent>{children}</SectionContent>\n    </Fragment>\n  );\n}\n\nconst SectionContent = styled('div')`\n  margin-bottom: ${space(4)};\n  line-height: 1;\n`;\n\nexport default SidebarSection;\n","import styled from '@emotion/styled';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport ExternalIssueActions from 'sentry/components/group/externalIssueActions';\nimport PluginActions from 'sentry/components/group/pluginActions';\nimport SentryAppExternalIssueActions from 'sentry/components/group/sentryAppExternalIssueActions';\nimport IssueSyncListElement from 'sentry/components/issueSyncListElement';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport ExternalIssueStore from 'sentry/stores/externalIssueStore';\nimport SentryAppComponentsStore from 'sentry/stores/sentryAppComponentsStore';\nimport SentryAppInstallationStore from 'sentry/stores/sentryAppInstallationsStore';\nimport space from 'sentry/styles/space';\nimport {\n  Group,\n  GroupIntegration,\n  Organization,\n  PlatformExternalIssue,\n  Project,\n  SentryAppComponent,\n  SentryAppInstallation,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport SidebarSection from './sidebarSection';\n\ntype Props = AsyncComponent['props'] & {\n  event: Event;\n  group: Group;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncComponent['state'] & {\n  components: SentryAppComponent[];\n  externalIssues: PlatformExternalIssue[];\n  integrations: GroupIntegration[];\n  sentryAppInstallations: SentryAppInstallation[];\n};\n\nclass ExternalIssueList extends AsyncComponent<Props, State> {\n  unsubscribables: any[] = [];\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {group} = this.props;\n    return [['integrations', `/groups/${group.id}/integrations/`]];\n  }\n\n  constructor(props: Props) {\n    super(props, {});\n    this.state = Object.assign({}, this.state, {\n      components: SentryAppComponentsStore.getInitialState(),\n      sentryAppInstallations: SentryAppInstallationStore.getInitialState(),\n      externalIssues: ExternalIssueStore.getInitialState(),\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    super.UNSAFE_componentWillMount();\n\n    this.unsubscribables = [\n      SentryAppInstallationStore.listen(this.onSentryAppInstallationChange, this),\n      ExternalIssueStore.listen(this.onExternalIssueChange, this),\n      SentryAppComponentsStore.listen(this.onSentryAppComponentsChange, this),\n    ];\n\n    this.fetchSentryAppData();\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this.unsubscribables.forEach(unsubscribe => unsubscribe());\n  }\n\n  onSentryAppInstallationChange = (sentryAppInstallations: SentryAppInstallation[]) => {\n    this.setState({sentryAppInstallations});\n  };\n\n  onExternalIssueChange = (externalIssues: PlatformExternalIssue[]) => {\n    this.setState({externalIssues});\n  };\n\n  onSentryAppComponentsChange = (sentryAppComponents: SentryAppComponent[]) => {\n    const components = sentryAppComponents.filter(c => c.type === 'issue-link');\n    this.setState({components});\n  };\n\n  // We want to do this explicitly so that we can handle errors gracefully,\n  // instead of the entire component not rendering.\n  //\n  // Part of the API request here is fetching data from the Sentry App, so\n  // we need to be more conservative about error cases since we don't have\n  // control over those services.\n  //\n  fetchSentryAppData() {\n    const {group, project, organization} = this.props;\n\n    if (project && project.id && organization) {\n      this.api\n        .requestPromise(`/groups/${group.id}/external-issues/`)\n        .then(data => {\n          ExternalIssueStore.load(data);\n          this.setState({externalIssues: data});\n        })\n        .catch(_error => {});\n    }\n  }\n\n  async updateIntegrations(onSuccess = () => {}, onError = () => {}) {\n    try {\n      const {group} = this.props;\n      const integrations = await this.api.requestPromise(\n        `/groups/${group.id}/integrations/`\n      );\n      this.setState({integrations}, () => onSuccess());\n    } catch (error) {\n      onError();\n    }\n  }\n\n  renderIntegrationIssues(integrations: GroupIntegration[] = []) {\n    const {group} = this.props;\n\n    const activeIntegrations = integrations.filter(\n      integration => integration.status === 'active'\n    );\n\n    const activeIntegrationsByProvider: Map<string, GroupIntegration[]> =\n      activeIntegrations.reduce((acc, curr) => {\n        const items = acc.get(curr.provider.key);\n\n        if (!!items) {\n          acc.set(curr.provider.key, [...items, curr]);\n        } else {\n          acc.set(curr.provider.key, [curr]);\n        }\n        return acc;\n      }, new Map());\n\n    return activeIntegrations.length\n      ? [...activeIntegrationsByProvider.entries()].map(([provider, configurations]) => (\n          <ExternalIssueActions\n            key={provider}\n            configurations={configurations}\n            group={group}\n            onChange={this.updateIntegrations.bind(this)}\n          />\n        ))\n      : null;\n  }\n\n  renderSentryAppIssues() {\n    const {externalIssues, sentryAppInstallations, components} = this.state;\n    const {group} = this.props;\n    if (components.length === 0) {\n      return null;\n    }\n\n    return components.map(component => {\n      const {sentryApp} = component;\n      const installation = sentryAppInstallations.find(\n        i => i.app.uuid === sentryApp.uuid\n      );\n      // should always find a match but TS complains if we don't handle this case\n      if (!installation) {\n        return null;\n      }\n\n      const issue = (externalIssues || []).find(i => i.serviceType === sentryApp.slug);\n\n      return (\n        <ErrorBoundary key={sentryApp.slug} mini>\n          <SentryAppExternalIssueActions\n            key={sentryApp.slug}\n            group={group}\n            event={this.props.event}\n            sentryAppComponent={component}\n            sentryAppInstallation={installation}\n            externalIssue={issue}\n          />\n        </ErrorBoundary>\n      );\n    });\n  }\n\n  renderPluginIssues() {\n    const {group, project} = this.props;\n\n    return group.pluginIssues && group.pluginIssues.length\n      ? group.pluginIssues.map((plugin, i) => (\n          <PluginActions group={group} project={project} plugin={plugin} key={i} />\n        ))\n      : null;\n  }\n\n  renderPluginActions() {\n    const {group} = this.props;\n\n    return group.pluginActions && group.pluginActions.length\n      ? group.pluginActions.map((plugin, i) => (\n          <IssueSyncListElement externalIssueLink={plugin[1]} key={i}>\n            {plugin[0]}\n          </IssueSyncListElement>\n        ))\n      : null;\n  }\n\n  renderLoading() {\n    return (\n      <SidebarSection data-test-id=\"linked-issues\" title={t('Linked Issues')}>\n        <Placeholder height=\"120px\" />\n      </SidebarSection>\n    );\n  }\n\n  renderBody() {\n    const sentryAppIssues = this.renderSentryAppIssues();\n    const integrationIssues = this.renderIntegrationIssues(this.state.integrations);\n    const pluginIssues = this.renderPluginIssues();\n    const pluginActions = this.renderPluginActions();\n    const showSetup =\n      !sentryAppIssues && !integrationIssues && !pluginIssues && !pluginActions;\n\n    return (\n      <SidebarSection secondary data-test-id=\"linked-issues\" title={t('Issue Tracking')}>\n        {showSetup && (\n          <AlertLink\n            priority=\"muted\"\n            size=\"small\"\n            to={`/settings/${this.props.organization.slug}/integrations/?category=issue%20tracking`}\n          >\n            {t('Track this issue in Jira, GitHub, etc.')}\n          </AlertLink>\n        )}\n        {sentryAppIssues && <Wrapper>{sentryAppIssues}</Wrapper>}\n        {integrationIssues && <Wrapper>{integrationIssues}</Wrapper>}\n        {pluginIssues && <Wrapper>{pluginIssues}</Wrapper>}\n        {pluginActions && <Wrapper>{pluginActions}</Wrapper>}\n      </SidebarSection>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ExternalIssueList);\n","import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport {tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\n\nimport SidebarSection from './sidebarSection';\n\ntype Props = {\n  participants: Group['participants'];\n};\n\nconst GroupParticipants = ({participants}: Props) => (\n  <SidebarSection title={tn('%s Participant', '%s Participants', participants.length)}>\n    <Faces>\n      {participants.map(user => (\n        <Face key={user.username}>\n          <UserAvatar size={28} user={user} hasTooltip />\n        </Face>\n      ))}\n    </Faces>\n  </SidebarSection>\n);\n\nexport default GroupParticipants;\n\nconst Faces = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Face = styled('div')`\n  margin-right: ${space(0.5)};\n  margin-bottom: ${space(0.5)};\n`;\n","import MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport Count from 'sentry/components/count';\nimport {t} from 'sentry/locale';\nimport {Group, Release, TimeseriesValue} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport theme from 'sentry/utils/theme';\n\nimport SidebarSection from './sidebarSection';\n\ntype Markers = React.ComponentProps<typeof MiniBarChart>['markers'];\n\n/**\n * Stats are provided indexed by statsPeriod strings.\n */\ntype StatsGroup = Record<string, TimeseriesValue[]>;\n\ninterface Props {\n  group: Group;\n  statsPeriod: string;\n  title: string;\n  className?: string;\n  environment?: string;\n  environmentLabel?: string;\n  environmentStats?: StatsGroup;\n  firstSeen?: string;\n  lastSeen?: string;\n  release?: Release;\n  releaseStats?: StatsGroup;\n}\n\nfunction GroupReleaseChart(props: Props) {\n  const {\n    className,\n    group,\n    lastSeen,\n    firstSeen,\n    statsPeriod,\n    release,\n    releaseStats,\n    environment,\n    environmentLabel,\n    environmentStats,\n    title,\n  } = props;\n\n  const stats = group.stats[statsPeriod];\n  const environmentPeriodStats = environmentStats?.[statsPeriod];\n  if (!stats || !stats.length || !environmentPeriodStats) {\n    return null;\n  }\n\n  const series: Series[] = [];\n\n  if (environment) {\n    // Add all events.\n    series.push({\n      seriesName: t('Events'),\n      data: stats.map(point => ({name: point[0] * 1000, value: point[1]})),\n    });\n  }\n\n  series.push({\n    seriesName: t('Events in %s', environmentLabel),\n    data: environmentStats[statsPeriod].map(point => ({\n      name: point[0] * 1000,\n      value: point[1],\n    })),\n  });\n\n  // Get the timestamp of the first point.\n  const firstTime = series[0].data[0].value;\n\n  if (release && releaseStats) {\n    series.push({\n      seriesName: t('Events in release %s', formatVersion(release.version)),\n      data: releaseStats[statsPeriod].map(point => ({\n        name: point[0] * 1000,\n        value: point[1],\n      })),\n    });\n  }\n\n  const markers: Markers = [];\n  if (firstSeen) {\n    const firstSeenX = new Date(firstSeen).getTime();\n    if (firstSeenX >= firstTime) {\n      markers.push({\n        name: t('First seen'),\n        value: firstSeenX,\n        color: theme.pink300,\n      });\n    }\n  }\n\n  if (lastSeen) {\n    const lastSeenX = new Date(lastSeen).getTime();\n    if (lastSeenX >= firstTime) {\n      markers.push({\n        name: t('Last seen'),\n        value: lastSeenX,\n        color: theme.green300,\n      });\n    }\n  }\n\n  const totalSeries =\n    environment && environmentStats ? environmentStats[statsPeriod] : stats;\n  const totalEvents = totalSeries.reduce((acc, current) => acc + current[1], 0);\n\n  return (\n    <SidebarSection secondary title={title} className={className}>\n      <div>\n        <Count value={totalEvents} />\n      </div>\n      <MiniBarChart\n        isGroupedByDate\n        showTimeInTooltip\n        height={42}\n        colors={environment ? undefined : [theme.purple300, theme.purple300]}\n        series={series}\n        markers={markers}\n      />\n    </SidebarSection>\n  );\n}\n\nexport default GroupReleaseChart;\n","import {Component, Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport DateTime from 'sentry/components/dateTime';\nimport {Body, Header, Hovercard} from 'sentry/components/hovercard';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport VersionHoverCard from 'sentry/components/versionHoverCard';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Release} from 'sentry/types';\nimport {defined, toTitleCase} from 'sentry/utils';\n\ntype RelaxedDateType = React.ComponentProps<typeof TimeSince>['date'];\n\ntype Props = {\n  date: RelaxedDateType;\n  dateGlobal: RelaxedDateType;\n  hasRelease: boolean;\n  organization: Organization;\n  projectId: string;\n  projectSlug: string;\n  title: string;\n  environment?: string;\n  release?: Release;\n};\n\nclass SeenInfo extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    const {date, release} = this.props;\n\n    return release?.version !== nextProps.release?.version || date !== nextProps.date;\n  }\n\n  getReleaseTrackingUrl() {\n    const {organization, projectSlug} = this.props;\n    const orgSlug = organization.slug;\n\n    return `/settings/${orgSlug}/projects/${projectSlug}/release-tracking/`;\n  }\n\n  render() {\n    const {date, dateGlobal, environment, release, organization, projectSlug, projectId} =\n      this.props;\n\n    return (\n      <HovercardWrapper>\n        <StyledHovercard\n          showUnderline\n          header={\n            <div>\n              <TimeSinceWrapper>\n                {t('Any Environment')}\n                <TimeSince date={dateGlobal} disabledAbsoluteTooltip />\n              </TimeSinceWrapper>\n              {environment && (\n                <TimeSinceWrapper>\n                  {toTitleCase(environment)}\n                  {date ? (\n                    <TimeSince date={date} disabledAbsoluteTooltip />\n                  ) : (\n                    <span>{t('N/A')}</span>\n                  )}\n                </TimeSinceWrapper>\n              )}\n            </div>\n          }\n          body={\n            date ? (\n              <StyledDateTime date={date} />\n            ) : (\n              <NoEnvironment>{t(`N/A for ${environment}`)}</NoEnvironment>\n            )\n          }\n          position=\"top\"\n        >\n          <DateWrapper>\n            {date ? (\n              <TooltipWrapper>\n                <StyledTimeSince date={date} disabledAbsoluteTooltip />\n              </TooltipWrapper>\n            ) : dateGlobal && environment === '' ? (\n              <Fragment>\n                <TimeSince date={dateGlobal} disabledAbsoluteTooltip />\n                <StyledTimeSince date={dateGlobal} disabledAbsoluteTooltip />\n              </Fragment>\n            ) : (\n              <NoDateTime>{t('N/A')}</NoDateTime>\n            )}\n          </DateWrapper>\n        </StyledHovercard>\n        <DateWrapper>\n          {defined(release) ? (\n            <Fragment>\n              {t('in release ')}\n              <VersionHoverCard\n                organization={organization}\n                projectSlug={projectSlug}\n                releaseVersion={release.version}\n              >\n                <span>\n                  <Version version={release.version} projectId={projectId} />\n                </span>\n              </VersionHoverCard>\n            </Fragment>\n          ) : null}\n        </DateWrapper>\n      </HovercardWrapper>\n    );\n  }\n}\n\nconst dateTimeCss = p => css`\n  color: ${p.theme.gray300};\n  font-size: ${p.theme.fontSizeMedium};\n  display: flex;\n  justify-content: center;\n`;\n\nconst HovercardWrapper = styled('div')`\n  display: flex;\n  align-items: baseline;\n`;\n\nconst DateWrapper = styled('div')`\n  margin-bottom: 0;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  ${dateTimeCss};\n`;\n\nconst NoEnvironment = styled('div')`\n  ${dateTimeCss};\n`;\n\nconst NoDateTime = styled('span')`\n  margin-right: ${space(0.5)};\n`;\n\nconst TooltipWrapper = styled('span')`\n  margin-right: ${space(0.25)};\n  svg {\n    margin-right: ${space(0.5)};\n    position: relative;\n    top: 1px;\n  }\n`;\n\nconst TimeSinceWrapper = styled('div')`\n  margin-bottom: ${space(0.5)};\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1.2;\n`;\n\nconst StyledHovercard = styled(Hovercard)`\n  width: 250px;\n  ${Header} {\n    font-weight: normal;\n    border-bottom: 1px solid ${p => p.theme.innerBorder};\n  }\n  ${Body} {\n    padding: ${space(1.5)};\n  }\n`;\n\nexport default SeenInfo;\n","import {Fragment, memo} from 'react';\nimport styled from '@emotion/styled';\n\nimport AlertLink from 'sentry/components/alertLink';\nimport GroupReleaseChart from 'sentry/components/group/releaseChart';\nimport SeenInfo from 'sentry/components/group/seenInfo';\nimport Placeholder from 'sentry/components/placeholder';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {CurrentRelease, Environment, Group, Organization, Project} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nimport SidebarSection from './sidebarSection';\n\ntype Props = {\n  allEnvironments: Group | undefined;\n  currentRelease: CurrentRelease | undefined;\n  environments: Environment[];\n  group: Group | undefined;\n  organization: Organization;\n  project: Project;\n};\n\nconst GroupReleaseStats = ({\n  organization,\n  project,\n  environments,\n  allEnvironments,\n  group,\n  currentRelease,\n}: Props) => {\n  const environment =\n    environments.length > 0\n      ? environments.map(env => env.displayName).join(', ')\n      : undefined;\n  const environmentLabel = environment ? environment : t('All Environments');\n\n  const shortEnvironmentLabel =\n    environments.length > 1\n      ? t('selected environments')\n      : environments.length === 1\n      ? environments[0].displayName\n      : undefined;\n\n  const projectId = project.id;\n  const projectSlug = project.slug;\n  const hasRelease = new Set(project.features).has('releases');\n  const releaseTrackingUrl = `/settings/${organization.slug}/projects/${project.slug}/release-tracking/`;\n\n  return (\n    <div>\n      {!group || !allEnvironments ? (\n        <Placeholder height=\"288px\" />\n      ) : (\n        <Fragment>\n          <GraphContainer>\n            <GroupReleaseChart\n              group={allEnvironments}\n              environment={environment}\n              environmentLabel={environmentLabel}\n              environmentStats={group.stats}\n              release={currentRelease?.release}\n              releaseStats={currentRelease?.stats}\n              statsPeriod=\"24h\"\n              title={t('Last 24 Hours')}\n              firstSeen={group.firstSeen}\n              lastSeen={group.lastSeen}\n            />\n          </GraphContainer>\n          <GraphContainer>\n            <GroupReleaseChart\n              group={allEnvironments}\n              environment={environment}\n              environmentLabel={environmentLabel}\n              environmentStats={group.stats}\n              release={currentRelease?.release}\n              releaseStats={currentRelease?.stats}\n              statsPeriod=\"30d\"\n              title={t('Last 30 Days')}\n              className=\"bar-chart-small\"\n              firstSeen={group.firstSeen}\n              lastSeen={group.lastSeen}\n            />\n          </GraphContainer>\n\n          <SidebarSection\n            secondary\n            title={\n              <Fragment>\n                {t('Last seen')}\n                <TooltipWrapper>\n                  <Tooltip\n                    title={t('When the most recent event in this issue was captured.')}\n                    disableForVisualTest\n                  >\n                    <IconQuestion size=\"xs\" color=\"gray200\" />\n                  </Tooltip>\n                </TooltipWrapper>\n              </Fragment>\n            }\n          >\n            <SeenInfo\n              organization={organization}\n              projectId={projectId}\n              projectSlug={projectSlug}\n              date={getDynamicText({\n                value: group.lastSeen,\n                fixed: '2016-01-13T03:08:25Z',\n              })}\n              dateGlobal={allEnvironments.lastSeen}\n              hasRelease={hasRelease}\n              environment={shortEnvironmentLabel}\n              release={group.lastRelease || null}\n              title={t('Last seen')}\n            />\n          </SidebarSection>\n\n          <SidebarSection\n            secondary\n            title={\n              <Fragment>\n                {t('First seen')}\n                <TooltipWrapper>\n                  <Tooltip\n                    title={t('When the first event in this issue was captured.')}\n                    disableForVisualTest\n                  >\n                    <IconQuestion size=\"xs\" color=\"gray200\" />\n                  </Tooltip>\n                </TooltipWrapper>\n              </Fragment>\n            }\n          >\n            <SeenInfo\n              organization={organization}\n              projectId={projectId}\n              projectSlug={projectSlug}\n              date={getDynamicText({\n                value: group.firstSeen,\n                fixed: '2015-08-13T03:08:25Z',\n              })}\n              dateGlobal={allEnvironments.firstSeen}\n              hasRelease={hasRelease}\n              environment={shortEnvironmentLabel}\n              release={group.firstRelease || null}\n              title={t('First seen')}\n            />\n          </SidebarSection>\n          {!hasRelease ? (\n            <SidebarSection secondary title={t('Releases')}>\n              <AlertLink priority=\"muted\" size=\"small\" to={releaseTrackingUrl}>\n                {t('See which release caused this issue ')}\n              </AlertLink>\n            </SidebarSection>\n          ) : null}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GroupReleaseStats);\n\nconst TooltipWrapper = styled('span')`\n  margin-left: ${space(0.5)};\n`;\n\nconst GraphContainer = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n","import {Actor} from 'sentry/types';\n\n// TODO(ts): add the correct type\nexport type Rules = Array<any> | null;\n\n/**\n * Given a list of rule objects returned from the API, locate the matching\n * rules for a specific owner.\n */\nfunction findMatchedRules(rules: Rules, owner: Actor) {\n  if (!rules) {\n    return undefined;\n  }\n\n  const matchOwner = (actorType: Actor['type'], key: string) =>\n    (actorType === 'user' && key === owner.email) ||\n    (actorType === 'team' && key === owner.name);\n\n  const actorHasOwner = ([actorType, key]) =>\n    actorType === owner.type && matchOwner(actorType, key);\n\n  return rules\n    .filter(([_, ruleActors]) => ruleActors.find(actorHasOwner))\n    .map(([rule]) => rule);\n}\n\nexport {findMatchedRules};\n","import {Fragment} from 'react';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {openCreateOwnershipRule} from 'sentry/actionCreators/modal';\nimport Access from 'sentry/components/acl/access';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {Panel} from 'sentry/components/panels';\nimport {IconClose, IconQuestion} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {CodeOwner, Organization, Project} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\n\nimport SidebarSection from '../sidebarSection';\n\ntype Props = {\n  codeowners: CodeOwner[];\n  handleCTAClose: () => void;\n  isDismissed: boolean;\n  issueId: string;\n  organization: Organization;\n  project: Project;\n};\n\nconst CodeOwnersCTA = HookOrDefault({\n  hookName: 'component:codeowners-cta',\n  defaultComponent: ({organization, project}) => (\n    <SetupButton\n      size=\"xsmall\"\n      priority=\"primary\"\n      to={`/settings/${organization.slug}/projects/${project.slug}/ownership/`}\n      onClick={() =>\n        trackIntegrationAnalytics('integrations.code_owners_cta_setup_clicked', {\n          view: 'stacktrace_issue_details',\n          project_id: project.id,\n          organization,\n        })\n      }\n    >\n      {t('Setup')}\n    </SetupButton>\n  ),\n});\n\nconst OwnershipRules = ({\n  project,\n  organization,\n  issueId,\n  codeowners,\n  isDismissed,\n  handleCTAClose,\n}: Props) => {\n  const handleOpenCreateOwnershipRule = () => {\n    openCreateOwnershipRule({project, organization, issueId});\n  };\n  const showCTA = !codeowners.length && !isDismissed;\n\n  const createRuleButton = (\n    <Access access={['project:write']}>\n      {({hasAccess}) => (\n        <GuideAnchor target=\"owners\" position=\"bottom\" offset={space(3)}>\n          <Button\n            onClick={handleOpenCreateOwnershipRule}\n            size=\"small\"\n            disabled={!hasAccess}\n            title={t(\"You don't have permission to create ownership rules.\")}\n            tooltipProps={{disabled: hasAccess}}\n          >\n            {t('Create Ownership Rule')}\n          </Button>\n        </GuideAnchor>\n      )}\n    </Access>\n  );\n\n  const codeOwnersCTA = (\n    <Container dashedBorder>\n      <HeaderContainer>\n        <Header>{t('Codeowners sync')}</Header>{' '}\n        <DismissButton\n          icon={<IconClose size=\"xs\" />}\n          priority=\"link\"\n          onClick={() => handleCTAClose()}\n          aria-label={t('Close')}\n        />\n      </HeaderContainer>\n      <Content>\n        {t(\n          'Import GitHub or GitLab CODEOWNERS files to automatically assign issues to the right people.'\n        )}\n      </Content>\n      <ButtonBar gap={1}>\n        <CodeOwnersCTA organization={organization} project={project} />\n        <Button\n          size=\"xsmall\"\n          external\n          href=\"https://docs.sentry.io/product/issues/issue-owners/#code-owners\"\n          onClick={() =>\n            trackIntegrationAnalytics('integrations.code_owners_cta_docs_clicked', {\n              view: 'stacktrace_issue_details',\n              project_id: project.id,\n              organization,\n            })\n          }\n        >\n          {t('Read Docs')}\n        </Button>\n      </ButtonBar>\n    </Container>\n  );\n\n  return (\n    <SidebarSection\n      title={\n        <Fragment>\n          {t('Ownership Rules')}\n          <ClassNames>\n            {({css}) => (\n              <Hovercard\n                body={\n                  <HelpfulBody>\n                    <p>\n                      {t(\n                        'Ownership rules allow you to associate file paths and URLs to specific teams or users, so alerts can be routed to the right people.'\n                      )}\n                    </p>\n                    <Button\n                      external\n                      href=\"https://docs.sentry.io/workflow/issue-owners/\"\n                      priority=\"primary\"\n                    >\n                      {t('Learn more')}\n                    </Button>\n                  </HelpfulBody>\n                }\n                containerClassName={css`\n                  display: flex;\n                  align-items: center;\n                `}\n              >\n                <StyledIconQuestion size=\"xs\" color=\"gray200\" />\n              </Hovercard>\n            )}\n          </ClassNames>\n        </Fragment>\n      }\n    >\n      {showCTA ? codeOwnersCTA : createRuleButton}\n    </SidebarSection>\n  );\n};\n\nexport {OwnershipRules};\n\nconst StyledIconQuestion = styled(IconQuestion)`\n  margin-left: ${space(0.5)};\n`;\n\nconst HelpfulBody = styled('div')`\n  padding: ${space(1)};\n  text-align: center;\n`;\n\nconst Container = styled(Panel)`\n  background: none;\n  display: flex;\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst HeaderContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content max-content 1fr;\n  align-items: flex-start;\n`;\n\nconst Header = styled('h6')`\n  margin-bottom: ${space(1)};\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n`;\n\nconst Content = styled('span')`\n  color: ${p => p.theme.textColor};\n  margin-bottom: ${space(2)};\n`;\n\nconst SetupButton = styled(Button)`\n  &:focus {\n    color: ${p => p.theme.white};\n  }\n`;\n\nconst DismissButton = styled(Button)`\n  position: absolute;\n  top: 0;\n  right: ${space(1)};\n  color: ${p => p.theme.gray400};\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport {openInviteMembersModal} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport Button from 'sentry/components/button';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport {IconCommit} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Actor, Commit} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  /**\n   * The suggested actor.\n   */\n  actor: Actor;\n  /**\n   * Children are required, as they are passed to the hovercard component, without it,\n   * we will not be able to trigger any hovercard actions\n   */\n  children: React.ReactNode;\n  /**\n   * The list of commits the actor is suggested for. May be left blank if the\n   * actor is not suggested for commits.\n   */\n  commits?: Commit[];\n\n  /**\n   * The list of ownership rules the actor is suggested for. May be left blank\n   * if the actor is not suggested based on ownership rules.\n   */\n  rules?: any[] | null;\n};\n\ntype State = {\n  commitsExpanded: boolean;\n  rulesExpanded: boolean;\n};\n\nclass SuggestedOwnerHovercard extends Component<Props, State> {\n  state: State = {\n    commitsExpanded: false,\n    rulesExpanded: false,\n  };\n\n  render() {\n    const {actor, commits, rules, ...props} = this.props;\n    const {commitsExpanded, rulesExpanded} = this.state;\n    const modalData = {\n      initialData: [\n        {\n          emails: actor.email ? new Set([actor.email]) : new Set([]),\n        },\n      ],\n      source: 'suggested_assignees',\n    };\n\n    return (\n      <Hovercard\n        header={\n          <Fragment>\n            <HovercardHeader>\n              <HovercardActorAvatar actor={actor} />\n              {actor.name || actor.email}\n            </HovercardHeader>\n            {actor.id === undefined && (\n              <EmailAlert type=\"warning\" showIcon>\n                {tct(\n                  'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',\n                  {\n                    actorEmail: <strong>{actor.email}</strong>,\n                    accountSettings: <Link to=\"/settings/account/emails/\" />,\n                    inviteUser: <a onClick={() => openInviteMembersModal(modalData)} />,\n                  }\n                )}\n              </EmailAlert>\n            )}\n          </Fragment>\n        }\n        body={\n          <HovercardBody>\n            {commits !== undefined && (\n              <Fragment>\n                <div className=\"divider\">\n                  <h6>{t('Commits')}</h6>\n                </div>\n                <div>\n                  {commits\n                    .slice(0, commitsExpanded ? commits.length : 3)\n                    .map(({message, dateCreated}, i) => (\n                      <CommitReasonItem key={i}>\n                        <CommitIcon />\n                        <CommitMessage\n                          message={message ?? undefined}\n                          date={dateCreated}\n                        />\n                      </CommitReasonItem>\n                    ))}\n                </div>\n                {commits.length > 3 && !commitsExpanded ? (\n                  <ViewMoreButton\n                    priority=\"link\"\n                    size=\"zero\"\n                    onClick={() => this.setState({commitsExpanded: true})}\n                  >\n                    {t('View more')}\n                  </ViewMoreButton>\n                ) : null}\n              </Fragment>\n            )}\n            {defined(rules) && (\n              <Fragment>\n                <div className=\"divider\">\n                  <h6>{t('Matching Ownership Rules')}</h6>\n                </div>\n                <div>\n                  {rules\n                    .slice(0, rulesExpanded ? rules.length : 3)\n                    .map(([type, matched], i) => (\n                      <RuleReasonItem key={i}>\n                        <OwnershipTag tagType={type} />\n                        <OwnershipValue>{matched}</OwnershipValue>\n                      </RuleReasonItem>\n                    ))}\n                </div>\n                {rules.length > 3 && !rulesExpanded ? (\n                  <ViewMoreButton\n                    priority=\"link\"\n                    size=\"zero\"\n                    onClick={() => this.setState({rulesExpanded: true})}\n                  >\n                    {t('View more')}\n                  </ViewMoreButton>\n                ) : null}\n              </Fragment>\n            )}\n          </HovercardBody>\n        }\n        {...props}\n      />\n    );\n  }\n}\n\nconst tagColors = {\n  url: theme.green200,\n  path: theme.purple300,\n  tag: theme.blue300,\n  codeowners: theme.pink300,\n};\n\nconst CommitIcon = styled(IconCommit)`\n  margin-right: ${space(0.5)};\n  flex-shrink: 0;\n`;\n\nconst CommitMessage = styled(({message = '', date, ...props}) => (\n  <div {...props}>\n    {message.split('\\n')[0]}\n    <CommitDate date={date} />\n  </div>\n))`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  margin-top: ${space(0.25)};\n  hyphens: auto;\n`;\n\nconst CommitDate = styled(({date, ...props}) => (\n  <div {...props}>{moment(date).fromNow()}</div>\n))`\n  margin-top: ${space(0.5)};\n  color: ${p => p.theme.gray300};\n`;\n\nconst CommitReasonItem = styled('div')`\n  display: flex;\n  align-items: flex-start;\n\n  &:not(:last-child) {\n    margin-bottom: ${space(1)};\n  }\n`;\n\nconst RuleReasonItem = styled('code')`\n  display: flex;\n  align-items: flex-start;\n\n  &:not(:last-child) {\n    margin-bottom: ${space(1)};\n  }\n`;\n\nconst OwnershipTag = styled(({tagType, ...props}) => <div {...props}>{tagType}</div>)`\n  background: ${p => tagColors[p.tagType.indexOf('tags') === -1 ? p.tagType : 'tag']};\n  color: ${p => p.theme.white};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: ${space(0.25)} ${space(0.5)};\n  margin: ${space(0.25)} ${space(0.5)} ${space(0.25)} 0;\n  border-radius: 2px;\n  font-weight: bold;\n  text-align: center;\n`;\n\nconst ViewMoreButton = styled(Button)`\n  border: none;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: ${space(0.25)} ${space(0.5)};\n  margin: ${space(1)} ${space(0.25)} ${space(0.25)} 0;\n  width: 100%;\n  min-width: 34px;\n`;\n\nconst OwnershipValue = styled('code')`\n  word-break: break-all;\n  line-height: 1.2;\n`;\n\nconst EmailAlert = styled(Alert)`\n  margin: 10px -13px -13px;\n  border-radius: 0;\n  border-color: #ece0b0;\n  padding: 10px;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  box-shadow: none;\n`;\n\nconst HovercardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst HovercardActorAvatar = styled(p => (\n  <ActorAvatar size={20} hasTooltip={false} {...p} />\n))`\n  margin-right: ${space(1)};\n`;\n\nconst HovercardBody = styled('div')`\n  margin-top: -${space(2)};\n`;\n\nexport default SuggestedOwnerHovercard;\n","import {Fragment} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport ActorAvatar from 'sentry/components/avatar/actorAvatar';\nimport SuggestedOwnerHovercard from 'sentry/components/group/suggestedOwnerHovercard';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Actor, Commit} from 'sentry/types';\n\nimport SidebarSection from '../sidebarSection';\n\ntype Owner = {\n  actor: Actor;\n  commits?: Array<Commit>;\n  rules?: Array<any> | null;\n};\n\ntype Props = {\n  onAssign: (actor: Actor) => () => void;\n  owners: Array<Owner>;\n};\n\nconst SuggestedAssignees = ({owners, onAssign}: Props) => (\n  <SidebarSection\n    title={\n      <Fragment>\n        {t('Suggested Assignees')}\n        <Subheading>{t('Click to assign')}</Subheading>\n      </Fragment>\n    }\n  >\n    <Content>\n      {owners.map((owner, i) => (\n        <SuggestedOwnerHovercard\n          key={`${owner.actor.id}:${owner.actor.email}:${owner.actor.name}:${i}`}\n          {...owner}\n        >\n          <ActorAvatar\n            css={css`\n              cursor: pointer;\n            `}\n            onClick={onAssign(owner.actor)}\n            hasTooltip={false}\n            actor={owner.actor}\n            data-test-id=\"suggested-assignee\"\n          />\n        </SuggestedOwnerHovercard>\n      ))}\n    </Content>\n  </SidebarSection>\n);\n\nexport {SuggestedAssignees};\n\nconst Subheading = styled('small')`\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  color: ${p => p.theme.gray300};\n  line-height: 100%;\n  font-weight: 400;\n  margin-left: ${space(0.5)};\n`;\n\nconst Content = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 20px);\n`;\n","import {Fragment} from 'react';\n\nimport {assignToActor, assignToUser} from 'sentry/actionCreators/group';\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {Actor, CodeOwner, Committer, Group, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport {promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport useCommitters from 'sentry/utils/useCommitters';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {findMatchedRules, Rules} from './findMatchedRules';\nimport {OwnershipRules} from './ownershipRules';\nimport {SuggestedAssignees} from './suggestedAssignees';\n\ntype OwnerList = React.ComponentProps<typeof SuggestedAssignees>['owners'];\n\ntype Props = {\n  event: Event;\n  group: Group;\n  organization: Organization;\n  project: Project;\n  committers?: Committer[];\n} & AsyncComponent['props'];\n\ntype State = {\n  codeowners: CodeOwner[];\n  event_owners: {owners: Array<Actor>; rules: Rules};\n  isDismissed: boolean;\n} & AsyncComponent['state'];\n\nclass SuggestedOwners extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      event: {rules: [], owners: []},\n      codeowners: [],\n      isDismissed: true,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {project, organization, event} = this.props;\n    const endpoints = [\n      [\n        'event_owners',\n        `/projects/${organization.slug}/${project.slug}/events/${event.id}/owners/`,\n      ],\n    ];\n    if (organization.features.includes('integrations-codeowners')) {\n      endpoints.push([\n        `codeowners`,\n        `/projects/${organization.slug}/${project.slug}/codeowners/`,\n      ]);\n    }\n\n    return endpoints as ReturnType<AsyncComponent['getEndpoints']>;\n  }\n\n  async onLoadAllEndpointsSuccess() {\n    await this.checkCodeOwnersPrompt();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.event && prevProps.event) {\n      if (this.props.event.id !== prevProps.event.id) {\n        // two events, with different IDs\n        this.reloadData();\n      }\n      return;\n    }\n\n    if (this.props.event) {\n      // going from having no event to having an event\n      this.reloadData();\n    }\n  }\n\n  async checkCodeOwnersPrompt() {\n    const {organization, project} = this.props;\n\n    this.setState({loading: true});\n    // check our prompt backend\n    const promptData = await promptsCheck(this.api, {\n      organizationId: organization.id,\n      projectId: project.id,\n      feature: 'code_owners',\n    });\n    const isDismissed = promptIsDismissed(promptData, 30);\n    this.setState({isDismissed, loading: false}, () => {\n      if (!isDismissed) {\n        // now record the results\n        trackIntegrationAnalytics(\n          'integrations.show_code_owners_prompt',\n          {\n            view: 'stacktrace_issue_details',\n            project_id: project.id,\n            organization,\n          },\n          {startSession: true}\n        );\n      }\n    });\n  }\n\n  handleCTAClose = () => {\n    const {organization, project} = this.props;\n\n    promptsUpdate(this.api, {\n      organizationId: organization.id,\n      projectId: project.id,\n      feature: 'code_owners',\n      status: 'dismissed',\n    });\n\n    this.setState({isDismissed: true}, () =>\n      trackIntegrationAnalytics('integrations.dismissed_code_owners_prompt', {\n        view: 'stacktrace_issue_details',\n        project_id: project.id,\n        organization,\n      })\n    );\n  };\n\n  /**\n   * Combine the commiter and ownership data into a single array, merging\n   * users who are both owners based on having commits, and owners matching\n   * project ownership rules into one array.\n   *\n   * The return array will include objects of the format:\n   *\n   * {\n   *   actor: <\n   *    type,              # Either user or team\n   *    SentryTypes.User,  # API expanded user object\n   *    {email, id, name}  # Sentry user which is *not* expanded\n   *    {email, name}      # Unidentified user (from commits)\n   *    {id, name},        # Sentry team (check `type`)\n   *   >,\n   *\n   *   # One or both of commits and rules will be present\n   *\n   *   commits: [...]  # List of commits made by this owner\n   *   rules:   [...]  # Project rules matched for this owner\n   * }\n   */\n  getOwnerList() {\n    const committers = this.props.committers ?? [];\n    const owners = committers.map(commiter => ({\n      actor: {...commiter.author, type: 'user' as Actor['type']},\n      commits: commiter.commits,\n    })) as OwnerList;\n\n    this.state.event_owners.owners.forEach(owner => {\n      const normalizedOwner = {\n        actor: owner,\n        rules: findMatchedRules(this.state.event_owners.rules || [], owner),\n      };\n\n      const existingIdx = owners.findIndex(o =>\n        committers.length === 0 ? o.actor === owner : o.actor.email === owner.email\n      );\n      if (existingIdx > -1) {\n        owners[existingIdx] = {...normalizedOwner, ...owners[existingIdx]};\n        return;\n      }\n      owners.push(normalizedOwner);\n    });\n\n    return owners;\n  }\n\n  handleAssign = (actor: Actor) => () => {\n    if (actor.id === undefined) {\n      return;\n    }\n\n    const {event} = this.props;\n\n    if (actor.type === 'user') {\n      // TODO(ts): `event` here may not be 100% correct\n      // in this case groupID should always exist on event\n      // since this is only used in Issue Details\n      assignToUser({\n        id: event.groupID as string,\n        user: actor,\n        assignedBy: 'suggested_assignee',\n      });\n    }\n\n    if (actor.type === 'team') {\n      assignToActor({\n        id: event.groupID as string,\n        actor,\n        assignedBy: 'suggested_assignee',\n      });\n    }\n  };\n\n  renderBody() {\n    const {organization, project, group} = this.props;\n    const {codeowners, isDismissed} = this.state;\n    const owners = this.getOwnerList();\n    return (\n      <Fragment>\n        {owners.length > 0 && (\n          <SuggestedAssignees owners={owners} onAssign={this.handleAssign} />\n        )}\n        <OwnershipRules\n          issueId={group.id}\n          project={project}\n          organization={organization}\n          codeowners={codeowners}\n          isDismissed={isDismissed}\n          handleCTAClose={this.handleCTAClose}\n        />\n      </Fragment>\n    );\n  }\n}\n\nfunction SuggestedOwnersWrapper(props: Omit<Props, 'committers' | 'organization'>) {\n  const organization = useOrganization();\n  const {committers} = useCommitters({\n    group: props.group,\n    eventId: props.event.id,\n    projectSlug: props.project.slug,\n  });\n\n  return (\n    <SuggestedOwners organization={organization} committers={committers} {...props} />\n  );\n}\n\nexport default SuggestedOwnersWrapper;\n","import {Component} from 'react';\n\nimport {deviceNameMapper} from 'sentry/components/deviceName';\nimport TagDistributionMeter from 'sentry/components/tagDistributionMeter';\nimport {Group, Organization, TagWithTopValues} from 'sentry/types';\n\ntype Props = {\n  group: Group;\n  name: string;\n  organization: Organization;\n  projectId: string;\n  tag: string;\n  topValues: TagWithTopValues['topValues'];\n  totalValues: number;\n};\n\nclass GroupTagDistributionMeter extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    return (\n      this.props.tag !== nextProps.tag ||\n      this.props.name !== nextProps.name ||\n      this.props.totalValues !== nextProps.totalValues ||\n      this.props.topValues !== nextProps.topValues\n    );\n  }\n\n  render() {\n    const {organization, group, tag, totalValues, topValues} = this.props;\n    const url = `/organizations/${organization.slug}/issues/${group.id}/tags/${tag}/`;\n\n    const segments = topValues\n      ? topValues.map(value => ({\n          ...value,\n          name: deviceNameMapper(value.name || '') || value.name,\n          url,\n        }))\n      : [];\n\n    return (\n      <TagDistributionMeter\n        title={tag}\n        totalValues={totalValues}\n        isLoading={false}\n        hasError={false}\n        segments={segments}\n      />\n    );\n  }\n}\n\nexport default GroupTagDistributionMeter;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport isObject from 'lodash/isObject';\nimport keyBy from 'lodash/keyBy';\nimport pickBy from 'lodash/pickBy';\n\nimport {Client} from 'sentry/api';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport ExternalIssueList from 'sentry/components/group/externalIssuesList';\nimport GroupParticipants from 'sentry/components/group/participants';\nimport GroupReleaseStats from 'sentry/components/group/releaseStats';\nimport SuggestedOwners from 'sentry/components/group/suggestedOwners/suggestedOwners';\nimport GroupTagDistributionMeter from 'sentry/components/group/tagDistributionMeter';\nimport LoadingError from 'sentry/components/loadingError';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  CurrentRelease,\n  Environment,\n  Group,\n  Organization,\n  Project,\n  TagWithTopValues,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withApi from 'sentry/utils/withApi';\n\nimport SidebarSection from './sidebarSection';\n\ntype Props = {\n  api: Client;\n  environments: Environment[];\n  group: Group;\n  organization: Organization;\n  project: Project;\n  event?: Event;\n};\n\ntype State = {\n  environments: Environment[];\n  participants: Group['participants'];\n  allEnvironmentsGroupData?: Group;\n  currentRelease?: CurrentRelease;\n  error?: boolean;\n  tagsWithTopValues?: Record<string, TagWithTopValues>;\n};\n\nclass BaseGroupSidebar extends Component<Props, State> {\n  state: State = {\n    participants: [],\n    environments: this.props.environments,\n  };\n\n  componentDidMount() {\n    this.fetchAllEnvironmentsGroupData();\n    this.fetchCurrentRelease();\n    this.fetchParticipants();\n    this.fetchTagData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (!isEqual(nextProps.environments, this.props.environments)) {\n      this.setState({environments: nextProps.environments}, this.fetchTagData);\n    }\n  }\n\n  async fetchAllEnvironmentsGroupData() {\n    const {group, api} = this.props;\n\n    // Fetch group data for all environments since the one passed in props is filtered for the selected environment\n    // The charts rely on having all environment data as well as the data for the selected env\n    try {\n      const query = {collapse: 'release'};\n      const allEnvironmentsGroupData = await api.requestPromise(`/issues/${group.id}/`, {\n        query,\n      });\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({allEnvironmentsGroupData});\n    } catch {\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({error: true});\n    }\n  }\n\n  async fetchCurrentRelease() {\n    const {group, api} = this.props;\n\n    try {\n      const {currentRelease} = await api.requestPromise(\n        `/issues/${group.id}/current-release/`\n      );\n      this.setState({currentRelease});\n    } catch {\n      this.setState({error: true});\n    }\n  }\n\n  async fetchParticipants() {\n    const {group, api} = this.props;\n\n    try {\n      const participants = await api.requestPromise(`/issues/${group.id}/participants/`);\n      this.setState({\n        participants,\n        error: false,\n      });\n      return participants;\n    } catch {\n      this.setState({\n        error: true,\n      });\n      return [];\n    }\n  }\n\n  async fetchTagData() {\n    const {api, group} = this.props;\n\n    try {\n      // Fetch the top values for the current group's top tags.\n      const data = await api.requestPromise(`/issues/${group.id}/tags/`, {\n        query: pickBy({\n          key: group.tags.map(tag => tag.key),\n          environment: this.state.environments.map(env => env.name),\n        }),\n      });\n      this.setState({tagsWithTopValues: keyBy(data, 'key')});\n    } catch {\n      this.setState({\n        tagsWithTopValues: {},\n        error: true,\n      });\n    }\n  }\n\n  renderPluginIssue() {\n    const issues: React.ReactNode[] = [];\n    (this.props.group.pluginIssues || []).forEach(plugin => {\n      const issue = plugin.issue;\n      // # TODO(dcramer): remove plugin.title check in Sentry 8.22+\n      if (issue) {\n        issues.push(\n          <Fragment key={plugin.slug}>\n            <span>{`${plugin.shortName || plugin.name || plugin.title}: `}</span>\n            <a href={issue.url}>{isObject(issue.label) ? issue.label.id : issue.label}</a>\n          </Fragment>\n        );\n      }\n    });\n\n    if (!issues.length) {\n      return null;\n    }\n\n    return (\n      <SidebarSection title={t('External Issues')}>\n        <ExternalIssues>{issues}</ExternalIssues>\n      </SidebarSection>\n    );\n  }\n\n  renderParticipantData() {\n    const {error, participants = []} = this.state;\n\n    if (error) {\n      return (\n        <LoadingError\n          message={t('There was an error while trying to load participants.')}\n        />\n      );\n    }\n\n    return participants.length !== 0 && <GroupParticipants participants={participants} />;\n  }\n\n  render() {\n    const {event, group, organization, project, environments} = this.props;\n    const {allEnvironmentsGroupData, currentRelease, tagsWithTopValues} = this.state;\n    const projectId = project.slug;\n\n    return (\n      <Container>\n        <PageFiltersContainer>\n          <EnvironmentPageFilter alignDropdown=\"right\" />\n        </PageFiltersContainer>\n        {event && <SuggestedOwners project={project} group={group} event={event} />}\n\n        <GroupReleaseStats\n          organization={organization}\n          project={project}\n          environments={environments}\n          allEnvironments={allEnvironmentsGroupData}\n          group={group}\n          currentRelease={currentRelease}\n        />\n\n        {event && (\n          <ErrorBoundary mini>\n            <ExternalIssueList project={project} group={group} event={event} />\n          </ErrorBoundary>\n        )}\n\n        {this.renderPluginIssue()}\n\n        <SidebarSection title={t('Tags')}>\n          {!tagsWithTopValues ? (\n            <TagPlaceholders>\n              <Placeholder height=\"40px\" />\n              <Placeholder height=\"40px\" />\n              <Placeholder height=\"40px\" />\n              <Placeholder height=\"40px\" />\n            </TagPlaceholders>\n          ) : (\n            group.tags.map(tag => {\n              const tagWithTopValues = tagsWithTopValues[tag.key];\n              const topValues = tagWithTopValues ? tagWithTopValues.topValues : [];\n              const topValuesTotal = tagWithTopValues ? tagWithTopValues.totalValues : 0;\n\n              return (\n                <GroupTagDistributionMeter\n                  key={tag.key}\n                  tag={tag.key}\n                  totalValues={topValuesTotal}\n                  topValues={topValues}\n                  name={tag.name}\n                  organization={organization}\n                  projectId={projectId}\n                  group={group}\n                />\n              );\n            })\n          )}\n          {group.tags.length === 0 && (\n            <p data-test-id=\"no-tags\">\n              {environments.length\n                ? t('No tags found in the selected environments')\n                : t('No tags found')}\n            </p>\n          )}\n        </SidebarSection>\n\n        {this.renderParticipantData()}\n      </Container>\n    );\n  }\n}\n\nconst PageFiltersContainer = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Container = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst TagPlaceholders = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: row;\n`;\n\nconst ExternalIssues = styled('div')`\n  display: grid;\n  grid-template-columns: auto max-content;\n  gap: ${space(2)};\n`;\n\nconst GroupSidebar = withApi(BaseGroupSidebar);\n\nexport default GroupSidebar;\n","import DateTime from 'sentry/components/dateTime';\nimport Duration from 'sentry/components/duration';\nimport {BannerContainer, BannerSummary} from 'sentry/components/events/styles';\nimport {IconMute} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {ResolutionStatusDetails} from 'sentry/types';\n\ntype Props = {\n  statusDetails: ResolutionStatusDetails;\n};\n\nfunction MutedBox({statusDetails}: Props) {\n  function renderReason() {\n    const {ignoreUntil, ignoreCount, ignoreWindow, ignoreUserCount, ignoreUserWindow} =\n      statusDetails;\n\n    if (ignoreUntil) {\n      return t(\n        'This issue has been ignored until %s',\n        <strong>\n          <DateTime date={ignoreUntil} />\n        </strong>\n      );\n    }\n    if (ignoreCount && ignoreWindow) {\n      return t(\n        'This issue has been ignored until it occurs %s time(s) in %s',\n        <strong>{ignoreCount.toLocaleString()}</strong>,\n        <strong>\n          <Duration seconds={ignoreWindow * 60} />\n        </strong>\n      );\n    }\n    if (ignoreCount) {\n      return t(\n        'This issue has been ignored until it occurs %s more time(s)',\n        <strong>{ignoreCount.toLocaleString()}</strong>\n      );\n    }\n    if (ignoreUserCount && ignoreUserWindow) {\n      return t(\n        'This issue has been ignored until it affects %s user(s) in %s',\n        <strong>{ignoreUserCount.toLocaleString()}</strong>,\n        <strong>\n          <Duration seconds={ignoreUserWindow * 60} />\n        </strong>\n      );\n    }\n    if (ignoreUserCount) {\n      return t(\n        'This issue has been ignored until it affects %s more user(s)',\n        <strong>{ignoreUserCount.toLocaleString()}</strong>\n      );\n    }\n\n    return t('This issue has been ignored');\n  }\n\n  return (\n    <BannerContainer priority=\"default\">\n      <BannerSummary>\n        <IconMute color=\"red300\" size=\"sm\" />\n        <span>\n          {renderReason()}&nbsp;&mdash;&nbsp;\n          {t(\n            'You will not be notified of any changes and it will not show up by default in feeds.'\n          )}\n        </span>\n      </BannerSummary>\n    </BannerContainer>\n  );\n}\n\nexport default MutedBox;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport {BannerContainer, BannerSummary} from 'sentry/components/events/styles';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport {IconCheckmark} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  GroupActivity,\n  GroupActivitySetByResolvedInRelease,\n  GroupActivityType,\n  ResolutionStatusDetails,\n} from 'sentry/types';\n\ntype Props = {\n  projectId: string;\n  statusDetails: ResolutionStatusDetails;\n  activities?: GroupActivity[];\n};\n\nfunction renderReason(\n  statusDetails: ResolutionStatusDetails,\n  projectId: string,\n  activities: GroupActivity[]\n) {\n  const actor = statusDetails.actor ? (\n    <strong>\n      <UserAvatar user={statusDetails.actor} size={20} className=\"avatar\" />\n      <span style={{marginLeft: 5}}>{statusDetails.actor.name}</span>\n    </strong>\n  ) : null;\n\n  const relevantActivity = activities.find(\n    activity => activity.type === GroupActivityType.SET_RESOLVED_IN_RELEASE\n  ) as GroupActivitySetByResolvedInRelease | undefined;\n\n  const currentReleaseVersion = relevantActivity?.data.current_release_version!;\n\n  if (statusDetails.inNextRelease && statusDetails.actor) {\n    return tct('[actor] marked this issue as resolved in the upcoming release.', {\n      actor,\n    });\n  }\n  if (statusDetails.inNextRelease) {\n    return t('This issue has been marked as resolved in the upcoming release.');\n  }\n  if (statusDetails.inRelease && statusDetails.actor) {\n    return currentReleaseVersion\n      ? tct('[actor] marked this issue as resolved in versions greater than [version].', {\n          actor,\n          version: (\n            <Version\n              version={currentReleaseVersion}\n              projectId={projectId}\n              tooltipRawVersion\n            />\n          ),\n        })\n      : tct('[actor] marked this issue as resolved in version [version].', {\n          actor,\n          version: (\n            <Version\n              version={statusDetails.inRelease}\n              projectId={projectId}\n              tooltipRawVersion\n            />\n          ),\n        });\n  }\n  if (statusDetails.inRelease) {\n    return currentReleaseVersion\n      ? tct(\n          'This issue has been marked as resolved in versions greater than [version].',\n          {\n            version: (\n              <Version\n                version={currentReleaseVersion}\n                projectId={projectId}\n                tooltipRawVersion\n              />\n            ),\n          }\n        )\n      : tct('This issue has been marked as resolved in version [version].', {\n          version: (\n            <Version\n              version={statusDetails.inRelease}\n              projectId={projectId}\n              tooltipRawVersion\n            />\n          ),\n        });\n  }\n  if (!!statusDetails.inCommit) {\n    return tct('This issue has been marked as resolved by [commit]', {\n      commit: (\n        <Fragment>\n          <CommitLink\n            commitId={statusDetails.inCommit.id}\n            repository={statusDetails.inCommit.repository}\n          />\n          <StyledTimeSince date={statusDetails.inCommit.dateCreated} />\n        </Fragment>\n      ),\n    });\n  }\n  return t('This issue has been marked as resolved.');\n}\n\nfunction ResolutionBox({statusDetails, projectId, activities = []}: Props) {\n  return (\n    <BannerContainer priority=\"default\">\n      <BannerSummary>\n        <StyledIconCheckmark color=\"green300\" />\n        <span>{renderReason(statusDetails, projectId, activities)}</span>\n      </BannerSummary>\n    </BannerContainer>\n  );\n}\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  margin-left: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst StyledIconCheckmark = styled(IconCheckmark)`\n  /* override margin defined in BannerSummary */\n  margin-top: 0 !important;\n  align-self: center;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: ${space(0.5)} !important;\n    align-self: flex-start;\n  }\n`;\n\nexport default ResolutionBox;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport quickTraceExample from 'sentry-images/spot/performance-quick-trace.svg';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {getConfigureTracingDocsLink} from 'sentry/utils/docs';\nimport {promptCanShow, promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport withApi from 'sentry/utils/withApi';\n\nconst DISTRIBUTED_TRACING_FEATURE = 'distributed_tracing';\n\ntype Props = {\n  api: Client;\n  event: Event;\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {\n  shouldShow: boolean | null;\n};\n\nclass ConfigureDistributedTracing extends Component<Props, State> {\n  state: State = {\n    shouldShow: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const {api, event, project, organization} = this.props;\n\n    if (!promptCanShow(DISTRIBUTED_TRACING_FEATURE, event.eventID)) {\n      this.setState({shouldShow: false});\n      return;\n    }\n\n    const data = await promptsCheck(api, {\n      projectId: project.id,\n      organizationId: organization.id,\n      feature: DISTRIBUTED_TRACING_FEATURE,\n    });\n\n    this.setState({shouldShow: !promptIsDismissed(data ?? {}, 30)});\n  }\n\n  trackAnalytics({eventKey, eventName}) {\n    const {project, organization} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey,\n      eventName,\n      organization_id: parseInt(organization.id, 10),\n      project_id: parseInt(project.id, 10),\n      platform: project.platform,\n    });\n  }\n\n  handleClick({action, eventKey, eventName}) {\n    const {api, project, organization} = this.props;\n    const data = {\n      projectId: project.id,\n      organizationId: organization.id,\n      feature: DISTRIBUTED_TRACING_FEATURE,\n      status: action,\n    };\n    promptsUpdate(api, data).then(() => this.setState({shouldShow: false}));\n    this.trackAnalytics({eventKey, eventName});\n  }\n\n  renderActionButton(docsLink: string) {\n    const features = ['organizations:performance-view'];\n    const noFeatureMessage = t('Requires performance monitoring.');\n\n    const renderDisabled = p => (\n      <Hovercard\n        body={\n          <FeatureDisabled\n            features={features}\n            hideHelpToggle\n            message={noFeatureMessage}\n            featureName={noFeatureMessage}\n          />\n        }\n      >\n        {p.children(p)}\n      </Hovercard>\n    );\n\n    return (\n      <Feature\n        hookName=\"feature-disabled:configure-distributed-tracing\"\n        features={features}\n        renderDisabled={renderDisabled}\n      >\n        {() => (\n          <Button\n            size=\"small\"\n            priority=\"primary\"\n            href={docsLink}\n            onClick={() =>\n              this.trackAnalytics({\n                eventKey: 'quick_trace.missing_instrumentation.docs',\n                eventName: 'Quick Trace: Missing Instrumentation Docs',\n              })\n            }\n          >\n            {t('Read the docs')}\n          </Button>\n        )}\n      </Feature>\n    );\n  }\n\n  render() {\n    const {project} = this.props;\n    const {shouldShow} = this.state;\n    if (!shouldShow) {\n      return null;\n    }\n\n    const docsLink = getConfigureTracingDocsLink(project);\n    // if the platform does not support performance, do not show this prompt\n    if (docsLink === null) {\n      return null;\n    }\n\n    return (\n      <ExampleQuickTracePanel dashedBorder>\n        <div>\n          <Header>{t('Configure Distributed Tracing')}</Header>\n          <Description>\n            {t('See what happened right before and after this error')}\n          </Description>\n        </div>\n        <Image src={quickTraceExample} alt=\"configure distributed tracing\" />\n        <ActionButtons>\n          {this.renderActionButton(docsLink)}\n          <ButtonBar merged>\n            <Button\n              title={t('Remind me next month')}\n              size=\"small\"\n              onClick={() =>\n                this.handleClick({\n                  action: 'snoozed',\n                  eventKey: 'quick_trace.missing_instrumentation.snoozed',\n                  eventName: 'Quick Trace: Missing Instrumentation Snoozed',\n                })\n              }\n            >\n              {t('Snooze')}\n            </Button>\n            <Button\n              title={t('Dismiss for this project')}\n              size=\"small\"\n              onClick={() =>\n                this.handleClick({\n                  action: 'dismissed',\n                  eventKey: 'quick_trace.missing_instrumentation.dismissed',\n                  eventName: 'Quick Trace: Missing Instrumentation Dismissed',\n                })\n              }\n            >\n              {t('Dismiss')}\n            </Button>\n          </ButtonBar>\n        </ActionButtons>\n      </ExampleQuickTracePanel>\n    );\n  }\n}\n\nconst ExampleQuickTracePanel = styled(Panel)`\n  display: grid;\n  grid-template-columns: 1.5fr 1fr;\n  grid-template-rows: auto max-content;\n  gap: ${space(1)};\n  background: none;\n  padding: ${space(2)};\n  margin: ${space(2)} 0;\n`;\n\nconst Header = styled('h3')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  text-transform: uppercase;\n  color: ${p => p.theme.gray300};\n  margin-bottom: ${space(1)};\n`;\n\nconst Description = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst Image = styled('img')`\n  grid-row: 1/3;\n  grid-column: 2/3;\n  justify-self: end;\n`;\n\nconst ActionButtons = styled('div')`\n  display: grid;\n  grid-template-columns: max-content auto;\n  justify-items: start;\n  align-items: end;\n  grid-column-gap: ${space(1)};\n`;\n\nexport default withApi(ConfigureDistributedTracing);\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {promptsCheck, promptsUpdate} from 'sentry/actionCreators/prompts';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport QuickTrace from 'sentry/components/quickTrace';\nimport {generateTraceTarget} from 'sentry/components/quickTrace/utils';\nimport {IconClose} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport QuickTraceQuery from 'sentry/utils/performance/quickTrace/quickTraceQuery';\nimport {promptIsDismissed} from 'sentry/utils/promptIsDismissed';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  event: Event;\n  location: Location;\n  organization: Organization;\n};\n\ntype State = {\n  shouldShow: boolean | null;\n};\n\nclass IssueQuickTrace extends Component<Props, State> {\n  state: State = {\n    shouldShow: null,\n  };\n\n  componentDidMount() {\n    this.promptsCheck();\n  }\n\n  shouldComponentUpdate(nextProps, nextState: State) {\n    return (\n      this.props.event !== nextProps.event ||\n      this.state.shouldShow !== nextState.shouldShow\n    );\n  }\n\n  async promptsCheck() {\n    const {api, event, organization} = this.props;\n\n    const data = await promptsCheck(api, {\n      organizationId: organization.id,\n      projectId: event.projectID,\n      feature: 'quick_trace_missing',\n    });\n\n    this.setState({shouldShow: !promptIsDismissed(data ?? {}, 30)});\n  }\n\n  handleTraceLink(organization: Organization) {\n    trackAnalyticsEvent({\n      eventKey: 'quick_trace.trace_id.clicked',\n      eventName: 'Quick Trace: Trace ID clicked',\n      organization_id: parseInt(organization.id, 10),\n      source: 'issues',\n    });\n  }\n\n  renderTraceLink({isLoading, error, trace, type}) {\n    const {event, organization} = this.props;\n\n    if (isLoading || error !== null || trace === null || type === 'empty') {\n      return null;\n    }\n\n    return (\n      <LinkContainer>\n        <Link\n          to={generateTraceTarget(event, organization)}\n          onClick={() => this.handleTraceLink(organization)}\n        >\n          {t('View Full Trace')}\n        </Link>\n      </LinkContainer>\n    );\n  }\n\n  snoozePrompt = () => {\n    const {api, event, organization} = this.props;\n    const data = {\n      projectId: event.projectID,\n      organizationId: organization.id,\n      feature: 'quick_trace_missing',\n      status: 'snoozed' as const,\n    };\n    promptsUpdate(api, data).then(() => this.setState({shouldShow: false}));\n  };\n\n  renderQuickTrace(results) {\n    const {event, location, organization} = this.props;\n    const {shouldShow} = this.state;\n    const {isLoading, error, trace, type} = results;\n\n    if (isLoading) {\n      return <Placeholder height=\"24px\" />;\n    }\n\n    if (error || trace === null || trace.length === 0) {\n      if (!shouldShow) {\n        return null;\n      }\n\n      return (\n        <StyledAlert\n          type=\"info\"\n          showIcon\n          trailingItems={\n            <Button\n              priority=\"link\"\n              size=\"zero\"\n              title={t('Dismiss for a month')}\n              onClick={this.snoozePrompt}\n            >\n              <IconClose />\n            </Button>\n          }\n        >\n          {tct('The [type] for this error cannot be found. [link]', {\n            type: type === 'missing' ? t('transaction') : t('trace'),\n            link: (\n              <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/tracing/trace-view/#troubleshooting\">\n                {t('Read the docs to understand why.')}\n              </ExternalLink>\n            ),\n          })}\n        </StyledAlert>\n      );\n    }\n\n    return (\n      <QuickTrace\n        event={event}\n        quickTrace={results}\n        location={location}\n        organization={organization}\n        anchor=\"left\"\n        errorDest=\"issue\"\n        transactionDest=\"performance\"\n      />\n    );\n  }\n\n  render() {\n    const {event, organization, location} = this.props;\n\n    return (\n      <ErrorBoundary mini>\n        <QuickTraceQuery event={event} location={location} orgSlug={organization.slug}>\n          {results => {\n            return (\n              <Fragment>\n                {this.renderTraceLink(results)}\n                <QuickTraceWrapper>{this.renderQuickTrace(results)}</QuickTraceWrapper>\n              </Fragment>\n            );\n          }}\n        </QuickTraceQuery>\n      </ErrorBoundary>\n    );\n  }\n}\n\nconst LinkContainer = styled('span')`\n  margin-left: ${space(1)};\n  padding-left: ${space(1)};\n  position: relative;\n\n  &:before {\n    display: block;\n    position: absolute;\n    content: '';\n    left: 0;\n    top: 2px;\n    height: 14px;\n    border-left: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst QuickTraceWrapper = styled('div')`\n  margin-top: ${space(0.5)};\n`;\n\nconst StyledAlert = styled(Alert)`\n  margin: 0;\n`;\n\nexport default withApi(IssueQuickTrace);\n","import {Fragment} from 'react';\nimport {Location} from 'history';\n\nimport {Group, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\nimport DistributedTracingPrompt from './configureDistributedTracing';\nimport IssueQuickTrace from './issueQuickTrace';\n\ntype Props = {\n  event: Event;\n  group: Group;\n  location: Location;\n  organization: Organization;\n};\n\nfunction QuickTrace({event, group, organization, location}: Props) {\n  const hasPerformanceView = organization.features.includes('performance-view');\n  const hasTraceContext = Boolean(event.contexts?.trace?.trace_id);\n\n  return (\n    <Fragment>\n      {!hasTraceContext && (\n        <DistributedTracingPrompt\n          event={event}\n          project={group.project}\n          organization={organization}\n        />\n      )}\n      {hasPerformanceView && hasTraceContext && (\n        <IssueQuickTrace organization={organization} event={event} location={location} />\n      )}\n    </Fragment>\n  );\n}\n\nexport default QuickTrace;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport moment from 'moment-timezone';\n\nimport DateTime from 'sentry/components/dateTime';\nimport {DataSection} from 'sentry/components/events/styles';\nimport FileSize from 'sentry/components/fileSize';\nimport GlobalAppStoreConnectUpdateAlert from 'sentry/components/globalAppStoreConnectUpdateAlert';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport NavigationButtonGroup from 'sentry/components/navigationButtonGroup';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {shouldUse24Hours} from 'sentry/utils/dates';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nimport QuickTrace from './quickTrace';\n\nconst formatDateDelta = (reference: moment.Moment, observed: moment.Moment) => {\n  const duration = moment.duration(Math.abs(+observed - +reference));\n  const hours = Math.floor(+duration / (60 * 60 * 1000));\n  const minutes = duration.minutes();\n  const results: string[] = [];\n\n  if (hours) {\n    results.push(`${hours} hour${hours !== 1 ? 's' : ''}`);\n  }\n\n  if (minutes) {\n    results.push(`${minutes} minute${minutes !== 1 ? 's' : ''}`);\n  }\n\n  if (results.length === 0) {\n    results.push('a few seconds');\n  }\n\n  return results.join(', ');\n};\n\ntype Props = {\n  event: Event;\n  group: Group;\n  location: Location;\n  organization: Organization;\n  project: Project;\n};\n\nclass GroupEventToolbar extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    return this.props.event.id !== nextProps.event.id;\n  }\n\n  handleNavigationClick(button: string) {\n    trackAdvancedAnalyticsEvent('issue_details.event_navigation_clicked', {\n      organization: this.props.organization,\n      project_id: parseInt(this.props.project.id, 10),\n      button,\n    });\n  }\n\n  getDateTooltip() {\n    const evt = this.props.event;\n    const user = ConfigStore.get('user');\n    const options = user?.options ?? {};\n    const format = options.clock24Hours ? 'HH:mm:ss z' : 'LTS z';\n    const dateCreated = moment(evt.dateCreated);\n    const dateReceived = evt.dateReceived ? moment(evt.dateReceived) : null;\n\n    return (\n      <DescriptionList className=\"flat\">\n        <dt>Occurred</dt>\n        <dd>\n          {dateCreated.format('ll')}\n          <br />\n          {dateCreated.format(format)}\n        </dd>\n        {dateReceived && (\n          <Fragment>\n            <dt>Received</dt>\n            <dd>\n              {dateReceived.format('ll')}\n              <br />\n              {dateReceived.format(format)}\n            </dd>\n            <dt>Latency</dt>\n            <dd>{formatDateDelta(dateCreated, dateReceived)}</dd>\n          </Fragment>\n        )}\n      </DescriptionList>\n    );\n  }\n\n  render() {\n    const is24Hours = shouldUse24Hours();\n    const evt = this.props.event;\n\n    const {group, organization, location, project} = this.props;\n    const groupId = group.id;\n\n    const baseEventsPath = `/organizations/${organization.slug}/issues/${groupId}/events/`;\n\n    // TODO: possible to define this as a route in react-router, but without a corresponding\n    //       React component?\n    const jsonUrl = `/organizations/${organization.slug}/issues/${groupId}/events/${evt.id}/json/`;\n\n    const latencyThreshold = 30 * 60 * 1000; // 30 minutes\n    const isOverLatencyThreshold =\n      evt.dateReceived &&\n      Math.abs(+moment(evt.dateReceived) - +moment(evt.dateCreated)) > latencyThreshold;\n\n    return (\n      <StyledDataSection>\n        <StyledNavigationButtonGroup\n          hasPrevious={!!evt.previousEventID}\n          hasNext={!!evt.nextEventID}\n          links={[\n            {pathname: `${baseEventsPath}oldest/`, query: location.query},\n            {pathname: `${baseEventsPath}${evt.previousEventID}/`, query: location.query},\n            {pathname: `${baseEventsPath}${evt.nextEventID}/`, query: location.query},\n            {pathname: `${baseEventsPath}latest/`, query: location.query},\n          ]}\n          onOldestClick={() => this.handleNavigationClick('oldest')}\n          onOlderClick={() => this.handleNavigationClick('older')}\n          onNewerClick={() => this.handleNavigationClick('newer')}\n          onNewestClick={() => this.handleNavigationClick('newest')}\n          size=\"small\"\n        />\n        <Heading>\n          {t('Event')}{' '}\n          <EventIdLink to={`${baseEventsPath}${evt.id}/`}>{evt.eventID}</EventIdLink>\n          <LinkContainer>\n            <ExternalLink\n              href={jsonUrl}\n              onClick={() =>\n                trackAdvancedAnalyticsEvent('issue_details.event_json_clicked', {\n                  organization,\n                  group_id: parseInt(`${evt.groupID}`, 10),\n                })\n              }\n            >\n              {'JSON'} (<FileSize bytes={evt.size} />)\n            </ExternalLink>\n          </LinkContainer>\n        </Heading>\n        <Tooltip title={this.getDateTooltip()} showUnderline disableForVisualTest>\n          <StyledDateTime\n            format={is24Hours ? 'MMM D, YYYY HH:mm:ss zz' : 'll LTS z'}\n            date={getDynamicText({\n              value: evt.dateCreated,\n              fixed: 'Dummy timestamp',\n            })}\n          />\n          {isOverLatencyThreshold && <StyledIconWarning color=\"yellow300\" />}\n        </Tooltip>\n        <StyledGlobalAppStoreConnectUpdateAlert\n          project={project}\n          organization={organization}\n        />\n        <QuickTrace\n          event={evt}\n          group={group}\n          organization={organization}\n          location={location}\n        />\n      </StyledDataSection>\n    );\n  }\n}\n\nconst StyledDataSection = styled(DataSection)`\n  position: relative;\n  display: block;\n  border-top: 0;\n  /* z-index seems unnecessary, but increasing (instead of removing) just in case(billy) */\n  /* Fixes tooltips in toolbar having lower z-index than .btn-group .btn.active */\n  z-index: 3;\n\n  @media (max-width: 767px) {\n    display: none;\n  }\n`;\n\nconst EventIdLink = styled(Link)`\n  font-weight: normal;\n`;\n\nconst Heading = styled('h4')`\n  line-height: 1.3;\n  margin: 0;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledNavigationButtonGroup = styled(NavigationButtonGroup)`\n  float: right;\n`;\n\nconst StyledIconWarning = styled(IconWarning)`\n  margin-left: ${space(0.5)};\n  position: relative;\n  top: ${space(0.25)};\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledGlobalAppStoreConnectUpdateAlert = styled(GlobalAppStoreConnectUpdateAlert)`\n  margin-top: ${space(0.5)};\n  margin-bottom: ${space(1)};\n`;\n\nconst LinkContainer = styled('span')`\n  margin-left: ${space(1)};\n  padding-left: ${space(1)};\n  position: relative;\n  font-weight: normal;\n\n  &:before {\n    display: block;\n    position: absolute;\n    content: '';\n    left: 0;\n    top: 2px;\n    height: 14px;\n    border-left: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst DescriptionList = styled('dl')`\n  text-align: left;\n  margin: 0;\n  min-width: 200px;\n  max-width: 250px;\n`;\n\nexport default GroupEventToolbar;\n","import styled from '@emotion/styled';\n\nimport ProgressBar from 'sentry/components/progressBar';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {percent} from 'sentry/utils';\n\ntype Props = {\n  pendingEvents: number;\n  totalEvents: number;\n};\n\nfunction ReprocessingProgress({totalEvents, pendingEvents}: Props) {\n  const remainingEventsToReprocess = totalEvents - pendingEvents;\n  const remainingEventsToReprocessPercent = percent(\n    remainingEventsToReprocess,\n    totalEvents\n  );\n\n  return (\n    <Wrapper>\n      <Inner>\n        <Header>\n          <Title>{t('Reprocessing\\u2026')}</Title>\n          {t(\n            'Once the events in this issue have been reprocessed, you’ll be able to make changes and view any new issues that may have been created.'\n          )}\n        </Header>\n        <Content>\n          <ProgressBar value={remainingEventsToReprocessPercent} variant=\"large\" />\n          {tct('[remainingEventsToReprocess]/[totalEvents] [event] reprocessed', {\n            remainingEventsToReprocess,\n            totalEvents,\n            event: tn('event', 'events', totalEvents),\n          })}\n        </Content>\n      </Inner>\n    </Wrapper>\n  );\n}\nexport default ReprocessingProgress;\n\nconst Wrapper = styled('div')`\n  margin: ${space(4)} 40px;\n  flex: 1;\n  text-align: center;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    margin: 40px;\n  }\n`;\n\nconst Content = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: grid;\n  gap: ${space(1.5)};\n  justify-items: center;\n  max-width: 402px;\n  width: 100%;\n`;\n\nconst Inner = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n  justify-items: center;\n`;\n\nconst Header = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  color: ${p => p.theme.textColor};\n  max-width: 557px;\n`;\n\nconst Title = styled('h3')`\n  font-size: ${p => p.theme.headerFontSize};\n  font-weight: 600;\n  margin-bottom: 0;\n`;\n","import {Component, Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\n\nimport {fetchSentryAppComponents} from 'sentry/actionCreators/sentryAppComponents';\nimport {Client} from 'sentry/api';\nimport GroupEventDetailsLoadingError from 'sentry/components/errors/groupEventDetailsLoadingError';\nimport EventEntries from 'sentry/components/events/eventEntries';\nimport {withMeta} from 'sentry/components/events/meta/metaProxy';\nimport GroupSidebar from 'sentry/components/group/sidebar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport MutedBox from 'sentry/components/mutedBox';\nimport ReprocessedBox from 'sentry/components/reprocessedBox';\nimport ResolutionBox from 'sentry/components/resolutionBox';\nimport space from 'sentry/styles/space';\nimport {\n  BaseGroupStatusReprocessing,\n  Environment,\n  Group,\n  GroupActivityReprocess,\n  Organization,\n  Project,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport fetchSentryAppInstallations from 'sentry/utils/fetchSentryAppInstallations';\n\nimport GroupEventToolbar from '../eventToolbar';\nimport ReprocessingProgress from '../reprocessingProgress';\nimport {\n  getEventEnvironment,\n  getGroupMostRecentActivity,\n  ReprocessingStatus,\n} from '../utils';\n\nexport interface GroupEventDetailsProps\n  extends RouteComponentProps<{groupId: string; orgId: string; eventId?: string}, {}> {\n  api: Client;\n  environments: Environment[];\n  eventError: boolean;\n  group: Group;\n  groupReprocessingStatus: ReprocessingStatus;\n  loadingEvent: boolean;\n  onRetry: () => void;\n  organization: Organization;\n  project: Project;\n  className?: string;\n  event?: Event;\n}\n\ntype State = {\n  eventNavLinks: string;\n  releasesCompletion: any;\n};\n\nclass GroupEventDetails extends Component<GroupEventDetailsProps, State> {\n  state: State = {\n    eventNavLinks: '',\n    releasesCompletion: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: GroupEventDetailsProps) {\n    const {environments, params, location, organization, project} = this.props;\n\n    const environmentsHaveChanged = !isEqual(prevProps.environments, environments);\n\n    // If environments are being actively changed and will no longer contain the\n    // current event's environment, redirect to latest\n    if (\n      environmentsHaveChanged &&\n      prevProps.event &&\n      params.eventId &&\n      !['latest', 'oldest'].includes(params.eventId)\n    ) {\n      const shouldRedirect =\n        environments.length > 0 &&\n        !environments.find(\n          env => env.name === getEventEnvironment(prevProps.event as Event)\n        );\n\n      if (shouldRedirect) {\n        browserHistory.replace({\n          pathname: `/organizations/${params.orgId}/issues/${params.groupId}/`,\n          query: location.query,\n        });\n        return;\n      }\n    }\n\n    if (\n      prevProps.organization.slug !== organization.slug ||\n      prevProps.project.slug !== project.slug\n    ) {\n      this.fetchData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.api.clear();\n  }\n\n  fetchData = async () => {\n    const {api, project, organization} = this.props;\n    const orgSlug = organization.slug;\n    const projSlug = project.slug;\n    const projectId = project.id;\n\n    /**\n     * Perform below requests in parallel\n     */\n    const releasesCompletionPromise = api.requestPromise(\n      `/projects/${orgSlug}/${projSlug}/releases/completion/`\n    );\n    fetchSentryAppInstallations(api, orgSlug);\n\n    // TODO(marcos): Sometimes PageFiltersStore cannot pick a project.\n    if (projectId) {\n      fetchSentryAppComponents(api, orgSlug, projectId);\n    } else {\n      Sentry.withScope(scope => {\n        scope.setExtra('props', this.props);\n        scope.setExtra('state', this.state);\n        Sentry.captureMessage('Project ID was not set');\n      });\n    }\n\n    const releasesCompletion = await releasesCompletionPromise;\n    this.setState({releasesCompletion});\n  };\n\n  get showExampleCommit() {\n    return (\n      this.props.project?.isMember &&\n      this.props.project?.firstEvent &&\n      this.state.releasesCompletion?.some(\n        ({step, complete}) => step === 'commit' && !complete\n      )\n    );\n  }\n\n  renderContent(eventWithMeta?: Event) {\n    const {\n      group,\n      project,\n      organization,\n      environments,\n      location,\n      loadingEvent,\n      onRetry,\n      eventError,\n      router,\n      route,\n    } = this.props;\n\n    if (loadingEvent) {\n      return <LoadingIndicator />;\n    }\n\n    if (eventError) {\n      return (\n        <GroupEventDetailsLoadingError environments={environments} onRetry={onRetry} />\n      );\n    }\n\n    return (\n      <EventEntries\n        group={group}\n        event={eventWithMeta}\n        organization={organization}\n        project={project}\n        location={location}\n        showExampleCommit={this.showExampleCommit}\n        router={router}\n        route={route}\n      />\n    );\n  }\n\n  renderReprocessedBox(\n    reprocessStatus: ReprocessingStatus,\n    mostRecentActivity: GroupActivityReprocess\n  ) {\n    if (\n      reprocessStatus !== ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n      reprocessStatus !== ReprocessingStatus.REPROCESSED_AND_HAS_EVENT\n    ) {\n      return null;\n    }\n\n    const {group, organization} = this.props;\n    const {count, id: groupId} = group;\n    const groupCount = Number(count);\n\n    return (\n      <ReprocessedBox\n        reprocessActivity={mostRecentActivity}\n        groupCount={groupCount}\n        groupId={groupId}\n        orgSlug={organization.slug}\n      />\n    );\n  }\n\n  render() {\n    const {\n      className,\n      group,\n      project,\n      organization,\n      environments,\n      location,\n      event,\n      groupReprocessingStatus,\n    } = this.props;\n\n    const eventWithMeta = withMeta(event) as Event;\n\n    // Reprocessing\n    const hasReprocessingV2Feature = organization.features?.includes('reprocessing-v2');\n    const {activity: activities} = group;\n    const mostRecentActivity = getGroupMostRecentActivity(activities);\n\n    return (\n      <div className={className} data-test-id=\"group-event-details\">\n        <StyledLayoutBody>\n          {hasReprocessingV2Feature &&\n          groupReprocessingStatus === ReprocessingStatus.REPROCESSING ? (\n            <ReprocessingProgress\n              totalEvents={(mostRecentActivity as GroupActivityReprocess).data.eventCount}\n              pendingEvents={\n                (group.statusDetails as BaseGroupStatusReprocessing['statusDetails'])\n                  .pendingEvents\n              }\n            />\n          ) : (\n            <Fragment>\n              <StyledLayoutMain>\n                {eventWithMeta && (\n                  <GroupEventToolbar\n                    group={group}\n                    event={eventWithMeta}\n                    organization={organization}\n                    location={location}\n                    project={project}\n                  />\n                )}\n                <Wrapper>\n                  {group.status === 'ignored' && (\n                    <MutedBox statusDetails={group.statusDetails} />\n                  )}\n                  {group.status === 'resolved' && (\n                    <ResolutionBox\n                      statusDetails={group.statusDetails}\n                      activities={activities}\n                      projectId={project.id}\n                    />\n                  )}\n                  {this.renderReprocessedBox(\n                    groupReprocessingStatus,\n                    mostRecentActivity as GroupActivityReprocess\n                  )}\n                </Wrapper>\n                {this.renderContent(eventWithMeta)}\n              </StyledLayoutMain>\n              <StyledLayoutSide>\n                <GroupSidebar\n                  organization={organization}\n                  project={project}\n                  group={group}\n                  event={eventWithMeta}\n                  environments={environments}\n                />\n              </StyledLayoutSide>\n            </Fragment>\n          )}\n        </StyledLayoutBody>\n      </div>\n    );\n  }\n}\n\nconst StyledLayoutBody = styled(Layout.Body)`\n  /* Makes the borders align correctly */\n  padding: 0 !important;\n`;\n\nconst Wrapper = styled('div')`\n  margin-bottom: -1px;\n`;\n\nconst StyledLayoutMain = styled(Layout.Main)`\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    border-right: 1px solid ${p => p.theme.border};\n    padding-right: 0;\n  }\n`;\n\nconst StyledLayoutSide = styled(Layout.Side)`\n  padding: ${space(3)} ${space(2)} ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    padding-right: ${space(4)};\n    padding-left: 0;\n  }\n`;\n\nexport default styled(GroupEventDetails)`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n","import {Client} from 'sentry/api';\nimport SentryAppInstallationStore from 'sentry/stores/sentryAppInstallationsStore';\nimport {SentryAppInstallation} from 'sentry/types';\n\nconst fetchSentryAppInstallations = async (api: Client, orgSlug: string) => {\n  const installsUri = `/organizations/${orgSlug}/sentry-app-installations/`;\n\n  const installs: SentryAppInstallation[] = await api.requestPromise(installsUri);\n  SentryAppInstallationStore.load(installs);\n};\n\nexport default fetchSentryAppInstallations;\n","import {Client} from 'sentry/api';\nimport SentryAppComponentsStore from 'sentry/stores/sentryAppComponentsStore';\nimport {SentryAppComponent} from 'sentry/types';\n\nexport async function fetchSentryAppComponents(\n  api: Client,\n  orgSlug: string,\n  projectId: string\n): Promise<SentryAppComponent[]> {\n  const componentsUri = `/organizations/${orgSlug}/sentry-app-components/?projectId=${projectId}`;\n\n  const res = await api.requestPromise(componentsUri);\n  SentryAppComponentsStore.loadComponents(res);\n  return res;\n}\n","import {useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {fetchOrganizationEnvironments} from 'sentry/actionCreators/environments';\nimport {Client} from 'sentry/api';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {t} from 'sentry/locale';\nimport OrganizationEnvironmentsStore from 'sentry/stores/organizationEnvironmentsStore';\nimport {useLegacyStore} from 'sentry/stores/useLegacyStore';\nimport {Environment, Group, Organization, PageFilters, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {ReprocessingStatus} from '../utils';\n\nimport GroupEventDetails from './groupEventDetails';\n\nexport interface GroupEventDetailsProps\n  extends RouteComponentProps<{groupId: string; orgId: string; eventId?: string}, {}> {\n  api: Client;\n  event: Event;\n  eventError: boolean;\n  group: Group;\n  groupReprocessingStatus: ReprocessingStatus;\n  loadingEvent: boolean;\n  onRetry: () => void;\n  organization: Organization;\n  project: Project;\n  selection: PageFilters;\n}\n\nexport function GroupEventDetailsContainer(props: GroupEventDetailsProps) {\n  const state = useLegacyStore(OrganizationEnvironmentsStore);\n\n  useEffect(() => {\n    if (!state.environments && !state.error) {\n      fetchOrganizationEnvironments(props.api, props.organization.slug);\n    }\n    // XXX: Missing dependencies, but it reflects the old of componentDidMount\n  }, []);\n\n  if (state.error) {\n    return (\n      <LoadingError\n        message={t(\"There was an error loading your organization's environments\")}\n      />\n    );\n  }\n  // null implies loading state\n  if (!state.environments) {\n    return <LoadingIndicator />;\n  }\n\n  const {selection, ...otherProps} = props;\n  const environments: Environment[] = state.environments.filter(env =>\n    selection.environments.includes(env.name)\n  );\n\n  return <GroupEventDetails {...otherProps} environments={environments} />;\n}\n\nexport default withApi(withOrganization(withPageFilters(GroupEventDetailsContainer)));\n","import EnvironmentActions from 'sentry/actions/environmentActions';\nimport {Client} from 'sentry/api';\n\n/**\n * Fetches all environments for an organization\n *\n * @param organizationSlug The organization slug\n */\nexport async function fetchOrganizationEnvironments(\n  api: Client,\n  organizationSlug: string\n) {\n  EnvironmentActions.fetchEnvironments();\n  try {\n    const environments = await api.requestPromise(\n      `/organizations/${organizationSlug}/environments/`\n    );\n    if (!environments) {\n      EnvironmentActions.fetchEnvironmentsError(\n        new Error('retrieved environments is falsey')\n      );\n      return;\n    }\n    EnvironmentActions.fetchEnvironmentsSuccess(environments);\n  } catch (err) {\n    EnvironmentActions.fetchEnvironmentsError(err);\n  }\n}\n","import orderBy from 'lodash/orderBy';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {Client} from 'sentry/api';\nimport {t, tct} from 'sentry/locale';\nimport {Group, GroupActivity} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\n/**\n * Fetches group data and mark as seen\n *\n * @param orgId organization slug\n * @param groupId groupId\n * @param eventId eventId or \"latest\" or \"oldest\"\n * @param envNames\n * @param projectId project slug required for eventId that is not latest or oldest\n */\nexport async function fetchGroupEvent(\n  api: Client,\n  orgId: string,\n  groupId: string,\n  eventId: string,\n  envNames: string[],\n  projectId?: string\n): Promise<Event> {\n  const url =\n    eventId === 'latest' || eventId === 'oldest'\n      ? `/issues/${groupId}/events/${eventId}/`\n      : `/projects/${orgId}/${projectId}/events/${eventId}/`;\n\n  const query: {environment?: string[]} = {};\n  if (envNames.length !== 0) {\n    query.environment = envNames;\n  }\n\n  const data = await api.requestPromise(url, {query});\n  return data;\n}\n\nexport function markEventSeen(\n  api: Client,\n  orgId: string,\n  projectId: string,\n  groupId: string\n) {\n  bulkUpdate(\n    api,\n    {\n      orgId,\n      projectId,\n      itemIds: [groupId],\n      failSilently: true,\n      data: {hasSeen: true},\n    },\n    {}\n  );\n}\n\nexport function fetchGroupUserReports(groupId: string, query: Record<string, string>) {\n  const api = new Client();\n\n  return api.requestPromise(`/issues/${groupId}/user-reports/`, {\n    includeAllArgs: true,\n    query,\n  });\n}\n\n/**\n * Returns the environment name for an event or null\n *\n * @param event\n */\nexport function getEventEnvironment(event: Event) {\n  const tag = event.tags.find(({key}) => key === 'environment');\n\n  return tag ? tag.value : null;\n}\n\nconst SUBSCRIPTION_REASONS = {\n  commented: t(\n    \"You're receiving workflow notifications because you have commented on this issue.\"\n  ),\n  assigned: t(\n    \"You're receiving workflow notifications because you were assigned to this issue.\"\n  ),\n  bookmarked: t(\n    \"You're receiving workflow notifications because you have bookmarked this issue.\"\n  ),\n  changed_status: t(\n    \"You're receiving workflow notifications because you have changed the status of this issue.\"\n  ),\n  mentioned: t(\n    \"You're receiving workflow notifications because you have been mentioned in this issue.\"\n  ),\n};\n\n/**\n * @param group\n * @param removeLinks add/remove links to subscription reasons text (default: false)\n * @returns Reason for subscription\n */\nexport function getSubscriptionReason(group: Group, removeLinks = false) {\n  if (group.subscriptionDetails && group.subscriptionDetails.disabled) {\n    return tct('You have [link:disabled workflow notifications] for this project.', {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    });\n  }\n\n  if (!group.isSubscribed) {\n    return t('Subscribe to workflow notifications for this issue');\n  }\n\n  if (group.subscriptionDetails) {\n    const {reason} = group.subscriptionDetails;\n    if (reason === 'unknown') {\n      return t(\n        \"You're receiving workflow notifications because you are subscribed to this issue.\"\n      );\n    }\n\n    if (reason && SUBSCRIPTION_REASONS.hasOwnProperty(reason)) {\n      return SUBSCRIPTION_REASONS[reason];\n    }\n  }\n\n  return tct(\n    \"You're receiving updates because you are [link:subscribed to workflow notifications] for this project.\",\n    {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    }\n  );\n}\n\nexport function getGroupMostRecentActivity(activities: GroupActivity[]) {\n  // Most recent activity\n  return orderBy([...activities], ({dateCreated}) => new Date(dateCreated), ['desc'])[0];\n}\n\nexport enum ReprocessingStatus {\n  REPROCESSED_AND_HASNT_EVENT = 'reprocessed_and_hasnt_event',\n  REPROCESSED_AND_HAS_EVENT = 'reprocessed_and_has_event',\n  REPROCESSING = 'reprocessing',\n  NO_STATUS = 'no_status',\n}\n\n// Reprocessing Checks\nexport function getGroupReprocessingStatus(\n  group: Group,\n  mostRecentActivity?: GroupActivity\n) {\n  const {status, count, activity: activities} = group;\n  const groupCount = Number(count);\n\n  switch (status) {\n    case 'reprocessing':\n      return ReprocessingStatus.REPROCESSING;\n    case 'unresolved': {\n      const groupMostRecentActivity =\n        mostRecentActivity ?? getGroupMostRecentActivity(activities);\n      if (groupMostRecentActivity?.type === 'reprocess') {\n        if (groupCount === 0) {\n          return ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT;\n        }\n        return ReprocessingStatus.REPROCESSED_AND_HAS_EVENT;\n      }\n      return ReprocessingStatus.NO_STATUS;\n    }\n    default:\n      return ReprocessingStatus.NO_STATUS;\n  }\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Integration} from 'sentry/types';\nimport IntegrationIcon from 'sentry/views/organizationIntegrations/integrationIcon';\n\ntype DefaultProps = {\n  compact: boolean;\n};\n\ntype Props = DefaultProps & {\n  integration: Integration;\n};\nexport default class IntegrationItem extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    compact: false,\n  };\n\n  render() {\n    const {integration, compact} = this.props;\n    return (\n      <Flex>\n        <div>\n          <IntegrationIcon size={compact ? 22 : 32} integration={integration} />\n        </div>\n        <Labels compact={compact}>\n          <IntegrationName data-test-id=\"integration-name\">\n            {integration.name}\n          </IntegrationName>\n          <DomainName compact={compact}>{integration.domainName}</DomainName>\n        </Labels>\n      </Flex>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\ntype StyledProps = Pick<Props, 'compact'>;\nconst Labels = styled('div')<StyledProps>`\n  box-sizing: border-box;\n  display: flex;\n  ${p => (p.compact ? 'align-items: center;' : '')};\n  flex-direction: ${p => (p.compact ? 'row' : 'column')};\n  padding-left: ${space(1)};\n  min-width: 0;\n  justify-content: center;\n`;\n\nconst IntegrationName = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n`;\n\n// Not using the overflowEllipsis style import here\n// as it sets width 100% which causes layout issues in the\n// integration list.\nconst DomainName = styled('div')<StyledProps>`\n  color: ${p => p.theme.subText};\n  margin-left: ${p => (p.compact ? space(1) : 'inherit')};\n  margin-top: ${p => (!p.compact ? 0 : 'inherit')};\n  font-size: ${p => p.theme.fontSizeSmall};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import {Component} from 'react';\nimport {createFilter} from 'react-select';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form from 'sentry/components/forms/form';\nimport FormModel from 'sentry/components/forms/model';\nimport {Field, FieldValue} from 'sentry/components/forms/type';\nimport {t} from 'sentry/locale';\nimport {replaceAtArrayIndex} from 'sentry/utils/replaceAtArrayIndex';\nimport withApi from 'sentry/utils/withApi';\n\n// 0 is a valid choice but empty string, undefined, and null are not\nconst hasValue = value => !!value || value === 0;\n\nexport type FieldFromSchema = Omit<Field, 'choices' | 'type'> & {\n  type: 'select' | 'textarea' | 'text';\n  async?: boolean;\n  choices?: Array<[any, string]>;\n  default?: 'issue.title' | 'issue.description';\n  depends_on?: string[];\n  uri?: string;\n};\n\nexport type SchemaFormConfig = {\n  description: string | null;\n  uri: string;\n  optional_fields?: FieldFromSchema[];\n  required_fields?: FieldFromSchema[];\n};\n\n// only need required_fields and optional_fields\ntype State = Omit<SchemaFormConfig, 'uri' | 'description'> & {\n  optionsByField: Map<string, Array<{label: string; value: any}>>;\n};\n\ntype Props = {\n  action: 'create' | 'link';\n  api: Client;\n  appName: string;\n  config: SchemaFormConfig;\n  element: 'issue-link' | 'alert-rule-action';\n  onSubmitSuccess: Function;\n  sentryAppInstallationUuid: string;\n  /**\n   * Additional form data to submit with the request\n   */\n  extraFields?: {[key: string]: any};\n  /**\n   * Additional body parameters to submit with the request\n   */\n  extraRequestBody?: {[key: string]: any};\n  /**\n   * Function to provide fields with pre-written data if a default is specified\n   */\n  getFieldDefault?: (field: FieldFromSchema) => string;\n  /**\n   * Object containing reset values for fields if previously entered, in case this form is unmounted\n   */\n  resetValues?: {[key: string]: any; settings?: {name: string; value: any}[]};\n};\n\n/**\n *  This component is the result of a refactor of sentryAppExternalIssueForm.tsx.\n *  Most of it contains a direct copy of the code from that original file (comments included)\n *  to allow for an abstract way of turning Sentry App Schema -> Form UI, rather than being\n *  specific to Issue Linking.\n *\n *  See (#28465) for more details.\n */\nexport class SentryAppExternalForm extends Component<Props, State> {\n  state: State = {optionsByField: new Map()};\n\n  componentDidMount() {\n    this.resetStateFromProps();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.action !== this.props.action) {\n      this.model.reset();\n      this.resetStateFromProps();\n    }\n  }\n\n  model = new FormModel();\n\n  // reset the state when we mount or the action changes\n  resetStateFromProps() {\n    const {config, action, extraFields, element} = this.props;\n    this.setState({\n      required_fields: config.required_fields,\n      optional_fields: config.optional_fields,\n    });\n    // For alert-rule-actions, the forms are entirely custom, extra fields are\n    // passed in on submission, not as part of the form. See handleAlertRuleSubmit().\n    if (element === 'alert-rule-action') {\n      const defaultResetValues = (this.props.resetValues || {}).settings || [];\n      const initialData = defaultResetValues.reduce((acc, curr) => {\n        acc[curr.name] = curr.value;\n        return acc;\n      }, {});\n      this.model.setInitialData({...initialData});\n    } else {\n      this.model.setInitialData({\n        ...extraFields,\n        // we need to pass these fields in the API so just set them as values so we don't need hidden form fields\n        action,\n        uri: config.uri,\n      });\n    }\n  }\n\n  onSubmitError = () => {\n    const {action, appName} = this.props;\n    addErrorMessage(t('Unable to %s %s %s.', action, appName, this.getElementText()));\n  };\n\n  getOptions = (field: FieldFromSchema, input: string) =>\n    new Promise(resolve => {\n      this.debouncedOptionLoad(field, input, resolve);\n    });\n\n  getElementText = () => {\n    const {element} = this.props;\n    switch (element) {\n      case 'issue-link':\n        return 'issue';\n      case 'alert-rule-action':\n        return 'alert';\n      default:\n        return 'connection';\n    }\n  };\n\n  getDefaultFieldValue = (field: FieldFromSchema) => {\n    // Interpret the default if a getFieldDefault function is provided.\n    const {resetValues, getFieldDefault} = this.props;\n    let defaultValue;\n\n    // Override this default if a reset value is provided\n    if (field.default && getFieldDefault) {\n      defaultValue = getFieldDefault(field);\n    }\n\n    const reset = ((resetValues || {}).settings || []).find(\n      value => value.name === field.name\n    );\n\n    if (reset) {\n      defaultValue = reset.value;\n    }\n    return defaultValue;\n  };\n\n  debouncedOptionLoad = debounce(\n    // debounce is used to prevent making a request for every input change and\n    // instead makes the requests every 200ms\n    async (field: FieldFromSchema, input, resolve) => {\n      const choices = await this.makeExternalRequest(field, input);\n      const options = choices.map(([value, label]) => ({value, label}));\n      const optionsByField = new Map(this.state.optionsByField);\n      optionsByField.set(field.name, options);\n      this.setState({\n        optionsByField,\n      });\n      return resolve(options);\n    },\n    200,\n    {trailing: true}\n  );\n\n  makeExternalRequest = async (field: FieldFromSchema, input: FieldValue) => {\n    const {extraRequestBody = {}, sentryAppInstallationUuid} = this.props;\n    const query: {[key: string]: any} = {\n      ...extraRequestBody,\n      uri: field.uri,\n      query: input,\n    };\n\n    if (field.depends_on) {\n      const dependentData = field.depends_on.reduce((accum, dependentField: string) => {\n        accum[dependentField] = this.model.getValue(dependentField);\n        return accum;\n      }, {});\n      // stringify the data\n      query.dependentData = JSON.stringify(dependentData);\n    }\n\n    const {choices} = await this.props.api.requestPromise(\n      `/sentry-app-installations/${sentryAppInstallationUuid}/external-requests/`,\n      {\n        query,\n      }\n    );\n    return choices || [];\n  };\n\n  /**\n   * This function determines which fields need to be reset and new options fetched\n   * based on the dependencies defined with the depends_on attribute.\n   * This is done because the autoload flag causes fields to load at different times\n   * if you have multiple dependent fields while this solution updates state at once.\n   */\n  handleFieldChange = async (id: string) => {\n    const config = this.state;\n\n    let requiredFields = config.required_fields || [];\n    let optionalFields = config.optional_fields || [];\n\n    const fieldList: FieldFromSchema[] = requiredFields.concat(optionalFields);\n\n    // could have multiple impacted fields\n    const impactedFields = fieldList.filter(({depends_on}) => {\n      if (!depends_on) {\n        return false;\n      }\n      // must be dependent on the field we just set\n      return depends_on.includes(id);\n    });\n\n    // load all options in parallel\n    const choiceArray = await Promise.all(\n      impactedFields.map(field => {\n        // reset all impacted fields first\n        this.model.setValue(field.name || '', '', {quiet: true});\n        return this.makeExternalRequest(field, '');\n      })\n    );\n\n    this.setState(state => {\n      // pull the field lists from latest state\n      requiredFields = state.required_fields || [];\n      optionalFields = state.optional_fields || [];\n      // iterate through all the impacted fields and get new values\n      impactedFields.forEach((impactedField, i) => {\n        const choices = choiceArray[i];\n        const requiredIndex = requiredFields.indexOf(impactedField);\n        const optionalIndex = optionalFields.indexOf(impactedField);\n\n        const updatedField = {...impactedField, choices};\n\n        // immutably update the lists with the updated field depending where we got it from\n        if (requiredIndex > -1) {\n          requiredFields = replaceAtArrayIndex(\n            requiredFields,\n            requiredIndex,\n            updatedField\n          );\n        } else if (optionalIndex > -1) {\n          optionalFields = replaceAtArrayIndex(\n            optionalFields,\n            optionalIndex,\n            updatedField\n          );\n        }\n      });\n      return {\n        required_fields: requiredFields,\n        optional_fields: optionalFields,\n      };\n    });\n  };\n\n  renderField = (field: FieldFromSchema, required: boolean) => {\n    // This function converts the field we get from the backend into\n    // the field we need to pass down\n    let fieldToPass: Field = {\n      ...field,\n      inline: false,\n      stacked: true,\n      flexibleControlStateSize: true,\n      required,\n    };\n\n    // async only used for select components\n    const isAsync = typeof field.async === 'undefined' ? true : !!field.async; // default to true\n    if (fieldToPass.type === 'select') {\n      // find the options from state to pass down\n      const defaultOptions = (field.choices || []).map(([value, label]) => ({\n        value,\n        label,\n      }));\n      const options = this.state.optionsByField.get(field.name) || defaultOptions;\n      const allowClear = !required;\n      const defaultValue = this.getDefaultFieldValue(field);\n      // filter by what the user is typing\n      const filterOption = createFilter({});\n      fieldToPass = {\n        ...fieldToPass,\n        options,\n        defaultValue,\n        defaultOptions,\n        filterOption,\n        allowClear,\n      };\n      // default message for async select fields\n      if (isAsync) {\n        fieldToPass.noOptionsMessage = () => 'Type to search';\n      }\n\n      if (field.depends_on) {\n        // check if this is dependent on other fields which haven't been set yet\n        const shouldDisable = field.depends_on.some(\n          dependentField => !hasValue(this.model.getValue(dependentField))\n        );\n        if (shouldDisable) {\n          fieldToPass = {...fieldToPass, disabled: true};\n        }\n      }\n    }\n    if (['text', 'textarea'].includes(fieldToPass.type || '')) {\n      fieldToPass = {\n        ...fieldToPass,\n        defaultValue: this.getDefaultFieldValue(field),\n      };\n    }\n\n    // if we have a uri, we need to set extra parameters\n    const extraProps = field.uri\n      ? {\n          loadOptions: (input: string) => this.getOptions(field, input),\n          async: isAsync,\n          cache: false,\n          onSelectResetsInput: false,\n          onCloseResetsInput: false,\n          onBlurResetsInput: false,\n          autoload: false,\n        }\n      : {};\n\n    return (\n      <FieldFromConfig\n        key={field.name}\n        field={fieldToPass}\n        data-test-id={field.name}\n        {...extraProps}\n      />\n    );\n  };\n\n  handleAlertRuleSubmit = (formData, onSubmitSuccess) => {\n    const {sentryAppInstallationUuid} = this.props;\n    if (this.model.validateForm()) {\n      onSubmitSuccess({\n        // The form data must be nested in 'settings' to ensure they don't overlap with any other field names.\n        settings: Object.entries(formData).map(([name, value]) => ({name, value})),\n        sentryAppInstallationUuid,\n        // Used on the backend to explicitly associate with a different rule than those without a custom form.\n        hasSchemaFormConfig: true,\n      });\n    }\n  };\n\n  render() {\n    const {sentryAppInstallationUuid, action, element, onSubmitSuccess} = this.props;\n\n    const requiredFields = this.state.required_fields || [];\n    const optionalFields = this.state.optional_fields || [];\n\n    if (!sentryAppInstallationUuid) {\n      return '';\n    }\n\n    return (\n      <Form\n        key={action}\n        apiEndpoint={`/sentry-app-installations/${sentryAppInstallationUuid}/external-issue-actions/`}\n        apiMethod=\"POST\"\n        // Without defining onSubmit, the Form will send an `apiMethod` request to the above `apiEndpoint`\n        onSubmit={\n          element === 'alert-rule-action' ? this.handleAlertRuleSubmit : undefined\n        }\n        onSubmitSuccess={(...params) => {\n          onSubmitSuccess(...params);\n        }}\n        onSubmitError={this.onSubmitError}\n        onFieldChange={this.handleFieldChange}\n        model={this.model}\n      >\n        {requiredFields.map((field: FieldFromSchema) => {\n          return this.renderField(field, true);\n        })}\n\n        {optionalFields.map((field: FieldFromSchema) => {\n          return this.renderField(field, false);\n        })}\n      </Form>\n    );\n  }\n}\n\nexport default withApi(SentryAppExternalForm);\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"names":["AbstractExternalIssueForm","AsyncComponent","FormModel","action","dynamicFieldValues","this","state","query","endpoint","getEndPointString","api","request","method","success","data","_","resp","handleRequestSuccess","stateKey","error","handleError","Error","integrationDetailsParam","integrationDetails","integrationDetailsFromState","config","getConfigName","Object","fromEntries","filter","field","updatesForm","map","name","default","handleReceiveIntegrationDetails","setState","getDynamicFields","fieldName","value","hasOwnProperty","reloading","remainingRequests","refetchConfig","result","fetchedFieldOptionsCache","obj","label","currentOption","getDefaultOptions","find","option","model","getValue","Fragment","title","tct","size","currentOptionResultIndex","findIndex","newResult","input","Promise","resolve","reject","debouncedOptionLoad","err","ensureCurrentOption","updateFetchedFieldOptionsCache","debounce","async","cb","qs","url","separator","includes","response","fetch","ok","json","trailing","choices","autoload","cache","loadOptions","getOptions","defaultOptions","onBlurResetsInput","onCloseResetsInput","onSelectResetsInput","_data","footerClass","onFieldChange","submitDisabled","fieldCopy","formFields","errors","initialData","reduce","accumulator","multiple","Header","Body","props","closeButton","getTitle","renderNavTabs","shouldRenderLoading","renderLoading","renderBodyText","getFormProps","fields","noOptionsMessage","i","disabled","flexibleControlStateSize","inline","stacked","getFieldProps","getDefaultState","super","renderComponent","renderError","renderBody","Wrapper","project","className","appStoreConnectContext","useContext","AppStoreConnectContext","keys","some","key","updateAlertMessage","notices","Notices","NoMarginBottomAlert","type","showIcon","AlertContent","space","Alert","GlobalAppStoreConnectUpdateAlert","organization","rest","NavigationButtonGroup","links","hasNext","hasPrevious","onOldestClick","onOlderClick","onNewerClick","onNewestClick","merged","to","t","icon","onClick","createContext","undefined","Provider","children","useApi","projectDetails","setProjectDetails","useState","appStoreConnectStatusData","setAppStoreConnectStatusData","appStoreConnectSymbolSources","useMemo","symbolSources","JSON","parse","acc","id","symbolSource","toLowerCase","getUpdateAlertMessage","respository","credentials","status","getAppStoreValidationErrorMessage","useEffect","unmounted","requestPromise","slug","then","responseProjectDetails","catch","length","appStoreConnectStatus","appStoreConnect","link","FRONTEND_PLATFORMS","frontend","mobile","BACKEND_PLATFORMS","backend","serverless","TOOLTIP_PREFIX","root","ancestors","parent","current","descendants","QuickTrace","parsedQuickTrace","event","quickTrace","location","anchor","errorDest","transactionDest","parseQuickTrace","traceLength","trace","nodes","push","EventNodeSelector","events","currentEvent","text","nodeKey","tn","currentNode","orgId","slugs","project_slug","projects","p","platform","MissingServiceNode","connectorSide","handleDropdownItem","extra","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","node_key","numEvents","flatMap","hasErrors","event_id","hoverText","target","generateSingleErrorTarget","generateSingleTransactionTarget","StyledEventNode","handleNode","shouldOffset","eventPrefix","eventType","caret","anchorRight","first","slice","DropdownNodeItem","allowDefaultEvent","onSelect","subtext","getDuration","generateTraceTarget","disableLink","hideName","avatarSize","isQuickTraceEvent","transaction","expandDirection","maxLength","leftTrim","trimRegex","position","containerDisplayMode","HIDE_MISSING_SERVICE_KEY","readHideMissingServiceState","localStorage","Date","getTime","Component","hideMissing","now","toString","render","docPlatform","getDocsPlatform","docsHref","width","href","trackExternalLink","dismissMissingService","ReprocessedBox","isBannerHidden","getBannerUniqueId","reprocessActivity","renderMessage","orgSlug","groupCount","groupId","eventCount","oldGroupId","newGroupId","reprocessedEventsRoute","Number","priority","StyledBannerSummary","color","isCircled","StyledIconClose","handleBannerDismiss","BannerSummary","IconClose","unexpectedErrorMessage","repo","code","linkToCustomRepository","customRepositoryName","Sentry","QueryError","constructor","errorMessage","originalError","message","getOriginalError","_GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","route","cursor","parseError","detail","responseJSON","beforeFetch","afterFetch","didFetch","eventView","setError","isValid","Symbol","apiPayload","clear","doDiscoverQuery","prevState","getResponseHeader","_parseError","componentDidMount","fetchData","componentDidUpdate","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","noPagination","referrer","payload","getRequestPayload","getEventsAPIPayload","per_page","queryUserModified","decodeScalar","userModified","user_modified","assign","queryExtras","childrenProps","GenericDiscoverQuery","organizationSlug","OrganizationContext","performanceEventView","PerformanceEventViewContext","_props","params","includeAllArgs","platforms","performancePlatforms","performanceOnly","index","indexOf","prefix","substring","validDocPlatform","validPerformancePrefix","getConfigureTracingDocsLink","docsPlatform","getUrlRoutingName","env","encodeURIComponent","displayName","getDisplayName","getStacktraceBody","entries","exc","msg","formatted","values","stacktrace","rawStacktraceContent","concat","PerformanceEventViewProvider","_usePerformanceEventView","createDefinedContext","options","strict","Context","context","getTraceLiteRequestPayload","eventId","additionalApiPayload","getTraceRequestPayload","EmptyTrace","TraceLiteQuery","traceId","start","end","statsPeriod","makeEventView","withApi","QuickTraceQuery","contexts","trace_id","getTraceTimeRangeFromEvent","traceLiteResults","traceFullResults","traces","subtrace","flattenRelevantPaths","e","isCurrentEvent","getTraceFullRequestPayload","detailed","GenericTraceFullQuery","TraceFullQuery","TraceFullDetailedQuery","replaceAtArrayIndex","array","newArray","splice","createActions","storeConfig","unsubscribeListeners","environments","init","listenTo","EnvironmentActions","onFetchEnvironments","onFetchEnvironmentsSuccess","onFetchEnvironmentsError","makeEnvironment","item","urlRoutingName","trigger","getState","createStore","makeSafeRefluxStore","GroupEventDetailsLoadingError","onRetry","reasons","reason","heading","IssueSyncListElement","callIfFunction","onClose","externalIssueId","isLinked","handleDelete","onOpen","externalIssueLink","getIcon","getIntegrationIcon","integrationType","getPrettyName","capitalize","getLink","IntegrationLink","getText","externalIssueDisplayName","externalIssueKey","IssueSyncListElementContainer","css","containerClassName","header","hoverCardHeader","body","hoverCardBody","bodyClassName","show","showHoverCard","StyledIcon","handleIconClick","theme","textColor","blue300","MESSAGES_BY_ACTION","create","SUBMIT_LABEL_BY_ACTION","ExternalIssueForm","reloadData","group","integration","configureScope","scope","setSpan","setTag","provider","submitTransaction","startTransaction","onChange","closeModal","addSuccessMessage","finish","loadTransaction","getDefaultFormProps","submitLabel","apiEndpoint","apiMethod","onPreSubmit","handlePreSubmit","onSubmitError","handleSubmitError","onSubmitSuccess","underlined","handleClick","getEndpoints","renderForm","getCleanedFields","ExternalIssueActions","configurations","linked","unlinked","sort","a","b","localeCompare","curr","externalIssues","doOpenModal","openModal","deps","allowClickClose","issue","addErrorMessage","deleteIssue","IssueTitle","description","IssueDescription","Container","overflowEllipsis","PluginActions","pluginLoading","plugin","loadPlugin","plugins","issue_id","PluginActionsModal","onSuccess","handleModalClose","UNSAFE_componentWillReceiveProps","nextProps","actionType","renderGroupActions","withOrganization","items","getInitialState","load","get","getAll","add","SentryAppExternalIssueForm","ExternalIssueStore","getStacktrace","evt","contentArr","getFieldDefault","appName","maxRows","autosize","queryParams","addQueryParamsToExistingUrl","permalink","shortId","sentryAppInstallationUuid","sentryAppInstallation","uuid","element","extraFields","extraRequestBody","projectId","SentryAppExternalIssueModal","externalIssue","sentryAppComponent","sentryApp","schema","showCreate","showLink","SentryAppExternalIssueActions","recordInteraction","componentType","preventDefault","PlatformExternalIssueActions","deleteExternalIssue","_error","updateExternalIssue","webUrl","IssueLinkContainer","IssueLink","StyledSentryAppComponentIcon","onAddRemoveClick","SentryAppComponentIcon","Heading","fontSizeMedium","innerBorder","Subheading","gray300","fontSizeExtraSmall","SidebarSection","secondary","HeaderComponent","SectionContent","ExternalIssueList","sentryAppInstallations","sentryAppComponents","components","c","SentryAppComponentsStore","SentryAppInstallationStore","UNSAFE_componentWillMount","unsubscribables","onSentryAppInstallationChange","onExternalIssueChange","onSentryAppComponentsChange","fetchSentryAppData","componentWillUnmount","forEach","unsubscribe","onError","integrations","renderIntegrationIssues","activeIntegrations","activeIntegrationsByProvider","set","Map","updateIntegrations","bind","renderSentryAppIssues","component","installation","app","serviceType","mini","renderPluginIssues","pluginIssues","renderPluginActions","pluginActions","height","sentryAppIssues","integrationIssues","showSetup","GroupParticipants","participants","Faces","user","Face","hasTooltip","username","GroupReleaseChart","lastSeen","firstSeen","release","releaseStats","environment","environmentLabel","environmentStats","stats","environmentPeriodStats","series","seriesName","point","firstTime","formatVersion","version","markers","firstSeenX","lastSeenX","totalEvents","isGroupedByDate","showTimeInTooltip","colors","SeenInfo","shouldComponentUpdate","date","getReleaseTrackingUrl","projectSlug","dateGlobal","HovercardWrapper","StyledHovercard","showUnderline","TimeSinceWrapper","disabledAbsoluteTooltip","toTitleCase","StyledDateTime","NoEnvironment","DateWrapper","TooltipWrapper","StyledTimeSince","NoDateTime","defined","releaseVersion","dateTimeCss","DateTime","TimeSince","Hovercard","GroupReleaseStats","allEnvironments","currentRelease","join","shortEnvironmentLabel","hasRelease","Set","features","has","releaseTrackingUrl","GraphContainer","disableForVisualTest","getDynamicText","fixed","lastRelease","firstRelease","memo","findMatchedRules","rules","owner","actorHasOwner","actorType","email","matchOwner","ruleActors","rule","CodeOwnersCTA","HookOrDefault","hookName","defaultComponent","SetupButton","trackIntegrationAnalytics","view","project_id","OwnershipRules","issueId","codeowners","isDismissed","handleCTAClose","handleOpenCreateOwnershipRule","openCreateOwnershipRule","showCTA","createRuleButton","access","hasAccess","offset","tooltipProps","codeOwnersCTA","dashedBorder","HeaderContainer","DismissButton","Content","gap","external","HelpfulBody","StyledIconQuestion","IconQuestion","Panel","Button","white","gray400","SuggestedOwnerHovercard","commitsExpanded","rulesExpanded","actor","commits","modalData","emails","source","HovercardHeader","HovercardActorAvatar","EmailAlert","actorEmail","accountSettings","inviteUser","openInviteMembersModal","HovercardBody","dateCreated","CommitReasonItem","CommitIcon","CommitMessage","ViewMoreButton","matched","RuleReasonItem","OwnershipTag","tagType","OwnershipValue","tagColors","path","tag","IconCommit","split","CommitDate","moment","fromNow","fontSizeSmall","SuggestedAssignees","owners","onAssign","SuggestedOwners","promptsUpdate","organizationId","feature","assignToUser","groupID","assignedBy","assignToActor","endpoints","checkCodeOwnersPrompt","loading","promptData","promptsCheck","promptIsDismissed","startSession","getOwnerList","committers","commiter","author","event_owners","normalizedOwner","existingIdx","o","handleAssign","SuggestedOwnersWrapper","useOrganization","useCommitters","GroupTagDistributionMeter","totalValues","topValues","segments","deviceNameMapper","hasError","BaseGroupSidebar","fetchAllEnvironmentsGroupData","fetchCurrentRelease","fetchParticipants","fetchTagData","isEqual","collapse","allEnvironmentsGroupData","pickBy","tags","tagsWithTopValues","keyBy","renderPluginIssue","issues","shortName","isObject","ExternalIssues","renderParticipantData","PageFiltersContainer","alignDropdown","tagWithTopValues","topValuesTotal","TagPlaceholders","MutedBox","statusDetails","ignoreUntil","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","toLocaleString","seconds","renderReason","activities","style","marginLeft","relevantActivity","activity","GroupActivityType","currentReleaseVersion","current_release_version","inNextRelease","inRelease","tooltipRawVersion","inCommit","commit","commitId","repository","ResolutionBox","StyledIconCheckmark","IconCheckmark","breakpoints","small","DISTRIBUTED_TRACING_FEATURE","ConfigureDistributedTracing","shouldShow","promptCanShow","eventID","trackAnalytics","renderActionButton","docsLink","noFeatureMessage","renderDisabled","hideHelpToggle","featureName","ExampleQuickTracePanel","Description","Image","src","quickTraceExample","alt","ActionButtons","IssueQuickTrace","projectID","nextState","handleTraceLink","renderTraceLink","LinkContainer","renderQuickTrace","results","StyledAlert","trailingItems","snoozePrompt","QuickTraceWrapper","border","hasPerformanceView","hasTraceContext","Boolean","formatDateDelta","reference","observed","duration","Math","abs","hours","floor","minutes","GroupEventToolbar","handleNavigationClick","button","trackAdvancedAnalyticsEvent","getDateTooltip","ConfigStore","format","clock24Hours","dateReceived","DescriptionList","is24Hours","shouldUse24Hours","baseEventsPath","jsonUrl","isOverLatencyThreshold","StyledDataSection","StyledNavigationButtonGroup","previousEventID","nextEventID","pathname","EventIdLink","group_id","bytes","StyledIconWarning","StyledGlobalAppStoreConnectUpdateAlert","DataSection","Link","fontSizeLarge","IconWarning","subText","ReprocessingProgress","pendingEvents","remainingEventsToReprocess","remainingEventsToReprocessPercent","percent","Inner","Title","variant","headerFontSize","GroupEventDetails","eventNavLinks","releasesCompletion","projSlug","releasesCompletionPromise","installsUri","installs","fetchSentryAppInstallations","componentsUri","res","fetchSentryAppComponents","setExtra","getEventEnvironment","browserHistory","showExampleCommit","isMember","firstEvent","step","complete","renderContent","eventWithMeta","loadingEvent","eventError","router","renderReprocessedBox","reprocessStatus","mostRecentActivity","ReprocessingStatus","count","groupReprocessingStatus","withMeta","hasReprocessingV2Feature","getGroupMostRecentActivity","StyledLayoutBody","StyledLayoutMain","StyledLayoutSide","Layout","large","GroupEventDetailsContainer","useLegacyStore","OrganizationEnvironmentsStore","fetchOrganizationEnvironments","selection","otherProps","withPageFilters","fetchGroupEvent","envNames","markEventSeen","bulkUpdate","itemIds","failSilently","hasSeen","fetchGroupUserReports","Client","SUBSCRIPTION_REASONS","commented","assigned","bookmarked","changed_status","mentioned","getSubscriptionReason","removeLinks","subscriptionDetails","isSubscribed","orderBy","getGroupReprocessingStatus","REPROCESSING","groupMostRecentActivity","REPROCESSED_AND_HASNT_EVENT","REPROCESSED_AND_HAS_EVENT","NO_STATUS","IntegrationItem","compact","Flex","Labels","IntegrationName","DomainName","domainName","SentryAppExternalForm","optionsByField","getElementText","resetValues","defaultValue","reset","settings","makeExternalRequest","uri","depends_on","dependentData","accum","dependentField","stringify","requiredFields","required_fields","optionalFields","optional_fields","impactedFields","choiceArray","all","setValue","quiet","impactedField","requiredIndex","optionalIndex","updatedField","required","fieldToPass","isAsync","allowClear","getDefaultFieldValue","filterOption","createFilter","extraProps","formData","validateForm","hasSchemaFormConfig","resetStateFromProps","setInitialData","onSubmit","handleAlertRuleSubmit","handleFieldChange","renderField","baseAssignValue","createAggregator","module","exports","baseOrderBy","isArray","collection","iteratees","orders","guard"],"sourceRoot":""}