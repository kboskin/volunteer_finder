{"version":3,"file":"chunks/app_views_organizationGroupDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/avatar/avatarList.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/pageAlertBar.tsx","webpack:///./app/components/seenByList.tsx","webpack:///./app/utils/discover/genericDiscoverQuery.tsx","webpack:///./app/utils/displayReprocessEventAction.tsx","webpack:///./app/utils/performance/contexts/performanceEventViewContext.tsx","webpack:///./app/utils/performance/contexts/utils.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/organizationGroupDetails/constants.tsx","webpack:///./app/views/organizationGroupDetails/actions/shareIssue.tsx","webpack:///./app/views/organizationGroupDetails/actions/subscribeAction.tsx","webpack:///./app/views/organizationGroupDetails/actions/index.tsx","webpack:///./app/views/organizationGroupDetails/header.tsx","webpack:///./app/views/organizationGroupDetails/sampleEventAlert.tsx","webpack:///./app/views/organizationGroupDetails/groupDetails.tsx","webpack:///./app/views/organizationGroupDetails/index.tsx","webpack:///./app/views/organizationGroupDetails/utils.tsx","webpack:///../node_modules/lodash/orderBy.js"],"sourcesContent":["import {Component} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Tooltip from 'sentry/components/tooltip';\nimport {AvatarUser} from 'sentry/types';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n  users: AvatarUser[];\n  className?: string;\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n} & DefaultProps;\n\nexport default class AvatarList extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize} data-test-id=\"avatarList-collapsedusers\">\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = p => css`\n  border-radius: 50%;\n  border: 2px solid ${p.theme.background};\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray200};\n  color: ${p => p.theme.gray300};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport space from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst BaseEventMessage = ({\n  className,\n  level,\n  levelIndicatorSize,\n  message,\n  annotations,\n}: Props) => (\n  <div className={className}>\n    {level && (\n      <StyledErrorLevel size={levelIndicatorSize} level={level}>\n        {level}\n      </StyledErrorLevel>\n    )}\n\n    {message && <Message>{message}</Message>}\n\n    {annotations}\n  </div>\n);\n\nconst EventMessage = styled(BaseEventMessage)`\n  display: flex;\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  margin-right: ${space(1)};\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import styled from '@emotion/styled';\n\nconst PageAlertBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.headerBackground};\n  background-color: ${p => p.theme.bannerBackground};\n  padding: 6px 30px;\n  font-size: 14px;\n`;\n\nexport default PageAlertBar;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconShow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {AvatarUser, User} from 'sentry/types';\nimport {userDisplayName} from 'sentry/utils/formatters';\n\ntype Props = {\n  // Avatar size\n  avatarSize?: number;\n\n  className?: string;\n\n  iconPosition?: 'left' | 'right';\n\n  // Tooltip message for the \"Seen By\" icon\n  iconTooltip?: string;\n\n  // Max avatars to display\n  maxVisibleAvatars?: number;\n  // List of *all* users that have seen something\n  seenBy?: User[];\n};\n\nconst SeenByList = ({\n  avatarSize = 28,\n  seenBy = [],\n  iconTooltip = t('People who have viewed this'),\n  maxVisibleAvatars = 10,\n  iconPosition = 'left',\n  className,\n}: Props) => {\n  const activeUser = ConfigStore.get('user');\n  const displayUsers = seenBy.filter(user => activeUser.id !== user.id);\n\n  if (displayUsers.length === 0) {\n    return null;\n  }\n\n  // Note className=\"seen-by\" is required for responsive design\n  return (\n    <SeenByWrapper\n      iconPosition={iconPosition}\n      className={classNames('seen-by', className)}\n    >\n      <AvatarList\n        users={displayUsers}\n        avatarSize={avatarSize}\n        maxVisibleAvatars={maxVisibleAvatars}\n        renderTooltip={user => (\n          <Fragment>\n            {userDisplayName(user)}\n            <br />\n            {moment((user as AvatarUser).lastSeen).format('LL')}\n          </Fragment>\n        )}\n      />\n      <IconWrapper iconPosition={iconPosition}>\n        <Tooltip title={iconTooltip} skipWrapper>\n          <IconShow size=\"sm\" color=\"subText\" />\n        </Tooltip>\n      </IconWrapper>\n    </SeenByWrapper>\n  );\n};\n\nconst SeenByWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  margin-top: 15px;\n  float: right;\n  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};\n`;\n\nconst IconWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: ${p => p.theme.textColor};\n  height: 28px;\n  width: 24px;\n  text-align: center;\n  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};\n`;\n\nexport default SeenByList;\n","import {Component, useContext} from 'react';\nimport {Location} from 'history';\n\nimport {EventQuery} from 'sentry/actionCreators/events';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport EventView, {\n  ImmutableEventView,\n  isAPIPayloadSimilar,\n  LocationQuery,\n} from 'sentry/utils/discover/eventView';\nimport {PerformanceEventViewContext} from 'sentry/utils/performance/contexts/performanceEventViewContext';\nimport {OrganizationContext} from 'sentry/views/organizationContext';\n\nimport {decodeScalar} from '../queryString';\n\nexport class QueryError {\n  message: string;\n  private originalError: any; // For debugging in case parseError picks a value that doesn't make sense.\n  constructor(errorMessage: string, originalError?: any) {\n    this.message = errorMessage;\n    this.originalError = originalError;\n  }\n\n  getOriginalError() {\n    return this.originalError;\n  }\n}\n\nexport type GenericChildrenProps<T> = {\n  /**\n   * Error, if not null.\n   */\n  error: null | QueryError;\n  /**\n   * Loading state of this query.\n   */\n  isLoading: boolean;\n  /**\n   * Pagelinks, if applicable. Can be provided to the Pagination component.\n   */\n  pageLinks: null | string;\n  /**\n   * Data / result.\n   */\n  tableData: T | null;\n};\n\ntype OptionalContextProps = {\n  eventView?: EventView | ImmutableEventView;\n  orgSlug?: string;\n};\n\ntype BaseDiscoverQueryProps = {\n  api: Client;\n  /**\n   * Used as the default source for cursor values.\n   */\n  location: Location;\n  /**\n   * Explicit cursor value if you aren't using `location.query.cursor` because there are\n   * multiple paginated results on the page.\n   */\n  cursor?: string;\n  /**\n   * Record limit to get.\n   */\n  limit?: number;\n  /**\n   * Include this whenever pagination won't be used. Limit can still be used when this is\n   * passed, but cursor will be ignored.\n   */\n  noPagination?: boolean;\n  /**\n   * Extra query parameters to be added.\n   */\n  queryExtras?: Record<string, string>;\n  /**\n   * Sets referrer parameter in the API Payload. Set of allowed referrers are defined\n   * on the OrganizationEventsV2Endpoint view.\n   */\n  referrer?: string;\n  /**\n   * A callback to set an error so that the error can be rendered in parent components\n   */\n  setError?: (errObject: QueryError | undefined) => void;\n};\n\nexport type DiscoverQueryPropsWithContext = BaseDiscoverQueryProps & OptionalContextProps;\nexport type DiscoverQueryProps = BaseDiscoverQueryProps & {\n  eventView: EventView | ImmutableEventView;\n  orgSlug: string;\n};\n\ntype InnerRequestProps<P> = DiscoverQueryProps & P;\ntype OuterRequestProps<P> = DiscoverQueryPropsWithContext & P;\n\nexport type ReactProps<T> = {\n  children?: (props: GenericChildrenProps<T>) => React.ReactNode;\n};\n\ntype ComponentProps<T, P> = {\n  /**\n   * Route to the endpoint\n   */\n  route: string;\n  /**\n   * A hook to modify data into the correct output after data has been received\n   */\n  afterFetch?: (data: any, props?: Props<T, P>) => T;\n  /**\n   * A hook before fetch that can be used to do things like clearing the api\n   */\n  beforeFetch?: (api: Client) => void;\n  /**\n   * A hook for parent orchestrators to pass down data based on query results, unlike afterFetch it is not meant for specializations as it will not modify data.\n   */\n  didFetch?: (data: T) => void;\n  /**\n   * Allows components to modify the payload before it is set.\n   */\n  getRequestPayload?: (props: Props<T, P>) => any;\n  /**\n   * An external hook to parse errors in case there are differences for a specific api.\n   */\n  parseError?: (error: any) => QueryError | null;\n  /**\n   * An external hook in addition to the event view check to check if data should be refetched\n   */\n  shouldRefetchData?: (prevProps: Props<T, P>, props: Props<T, P>) => boolean;\n};\n\ntype Props<T, P> = InnerRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\ntype OuterProps<T, P> = OuterRequestProps<P> & ReactProps<T> & ComponentProps<T, P>;\n\ntype State<T> = {\n  tableFetchID: symbol | undefined;\n} & GenericChildrenProps<T>;\n\n/**\n * Generic component for discover queries\n */\nclass _GenericDiscoverQuery<T, P> extends Component<Props<T, P>, State<T>> {\n  state: State<T> = {\n    isLoading: true,\n    tableFetchID: undefined,\n    error: null,\n\n    tableData: null,\n    pageLinks: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props<T, P>) {\n    // Reload data if the payload changes\n    const refetchCondition = this._shouldRefetchData(prevProps);\n\n    // or if we've moved from an invalid view state to a valid one,\n    const eventViewValidation =\n      prevProps.eventView.isValid() === false && this.props.eventView.isValid();\n\n    const shouldRefetchExternal = this.props.shouldRefetchData\n      ? this.props.shouldRefetchData(prevProps, this.props)\n      : false;\n\n    if (refetchCondition || eventViewValidation || shouldRefetchExternal) {\n      this.fetchData();\n    }\n  }\n\n  getPayload(props: Props<T, P>) {\n    const {cursor, limit, noPagination, referrer, location} = props;\n    const payload = this.props.getRequestPayload\n      ? this.props.getRequestPayload(props)\n      : props.eventView.getEventsAPIPayload(props.location);\n\n    if (cursor) {\n      payload.cursor = cursor;\n    }\n    if (limit) {\n      payload.per_page = limit;\n    }\n    if (noPagination) {\n      payload.noPagination = noPagination;\n    }\n    if (referrer) {\n      payload.referrer = referrer;\n    }\n\n    if (['events', 'eventsv2'].includes(props.route)) {\n      const queryUserModified = decodeScalar(location.query?.userModified);\n      if (queryUserModified !== undefined) {\n        payload.user_modified = queryUserModified;\n      }\n    }\n\n    Object.assign(payload, props.queryExtras ?? {});\n\n    return payload;\n  }\n\n  _shouldRefetchData = (prevProps: Props<T, P>): boolean => {\n    const thisAPIPayload = this.getPayload(this.props);\n    const otherAPIPayload = this.getPayload(prevProps);\n\n    return (\n      !isAPIPayloadSimilar(thisAPIPayload, otherAPIPayload) ||\n      prevProps.limit !== this.props.limit ||\n      prevProps.route !== this.props.route ||\n      prevProps.cursor !== this.props.cursor\n    );\n  };\n\n  /**\n   * The error type isn't consistent across APIs. We see detail as just string some times, other times as an object.\n   */\n  _parseError = (error: any): QueryError | null => {\n    if (this.props.parseError) {\n      return this.props.parseError(error);\n    }\n\n    if (!error) {\n      return null;\n    }\n\n    const detail = error.responseJSON?.detail;\n    if (typeof detail === 'string') {\n      return new QueryError(detail, error);\n    }\n\n    const message = detail?.message;\n    if (typeof message === 'string') {\n      return new QueryError(message, error);\n    }\n\n    const unknownError = new QueryError(t('An unknown error occurred.'), error);\n    return unknownError;\n  };\n\n  fetchData = async () => {\n    const {api, beforeFetch, afterFetch, didFetch, eventView, orgSlug, route, setError} =\n      this.props;\n\n    if (!eventView.isValid()) {\n      return;\n    }\n\n    const url = `/organizations/${orgSlug}/${route}/`;\n    const tableFetchID = Symbol(`tableFetchID`);\n    const apiPayload: Partial<EventQuery & LocationQuery> = this.getPayload(this.props);\n\n    this.setState({isLoading: true, tableFetchID});\n\n    setError?.(undefined);\n\n    beforeFetch?.(api);\n\n    // clear any inflight requests since they are now stale\n    api.clear();\n\n    try {\n      const [data, , resp] = await doDiscoverQuery<T>(api, url, apiPayload);\n      if (this.state.tableFetchID !== tableFetchID) {\n        // invariant: a different request was initiated after this request\n        return;\n      }\n\n      const tableData = afterFetch ? afterFetch(data, this.props) : data;\n      didFetch?.(tableData);\n\n      this.setState(prevState => ({\n        isLoading: false,\n        tableFetchID: undefined,\n        error: null,\n        pageLinks: resp?.getResponseHeader('Link') ?? prevState.pageLinks,\n        tableData,\n      }));\n    } catch (err) {\n      const error = this._parseError(err);\n      this.setState({\n        isLoading: false,\n        tableFetchID: undefined,\n        error,\n        tableData: null,\n      });\n      if (setError) {\n        setError(error ?? undefined);\n      }\n    }\n  };\n\n  render() {\n    const {isLoading, error, tableData, pageLinks} = this.state;\n\n    const childrenProps: GenericChildrenProps<T> = {\n      isLoading,\n      error,\n      tableData,\n      pageLinks,\n    };\n    const children: ReactProps<T>['children'] = this.props.children; // Explicitly setting type due to issues with generics and React's children\n    return children?.(childrenProps);\n  }\n}\n\n// Shim to allow us to use generic discover query or any specialization with or without passing org slug or eventview, which are now contexts.\n// This will help keep tests working and we can remove extra uses of context-provided props and update tests as we go.\nexport function GenericDiscoverQuery<T, P>(props: OuterProps<T, P>) {\n  const organizationSlug = useContext(OrganizationContext)?.slug;\n  const performanceEventView = useContext(PerformanceEventViewContext)?.eventView;\n\n  const orgSlug = props.orgSlug ?? organizationSlug;\n  const eventView = props.eventView ?? performanceEventView;\n\n  if (orgSlug === undefined || eventView === undefined) {\n    throw new Error('GenericDiscoverQuery requires both an orgSlug and eventView');\n  }\n\n  const _props: Props<T, P> = {\n    ...props,\n    orgSlug,\n    eventView,\n  };\n  return <_GenericDiscoverQuery<T, P> {..._props} />;\n}\n\nexport type DiscoverQueryRequestParams = Partial<EventQuery & LocationQuery>;\n\nexport function doDiscoverQuery<T>(\n  api: Client,\n  url: string,\n  params: DiscoverQueryRequestParams\n): Promise<[T, string | undefined, ResponseMeta | undefined]> {\n  return api.requestPromise(url, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      // marking params as any so as to not cause typescript errors\n      ...(params as any),\n    },\n  });\n}\n\nexport default GenericDiscoverQuery;\n","import {\n  EntryException,\n  EntryType,\n  Event,\n  ExceptionValue,\n  PlatformType,\n  StacktraceType,\n  Thread,\n} from 'sentry/types';\n\nconst NATIVE_PLATFORMS = ['cocoa', 'native'] as Array<PlatformType>;\n\n// Finds all frames in a given data blob and returns it's platforms\nfunction getPlatforms(exceptionValue: ExceptionValue | StacktraceType | null) {\n  const frames = exceptionValue?.frames ?? [];\n  const stacktraceFrames = (exceptionValue as ExceptionValue)?.stacktrace?.frames ?? [];\n\n  if (!frames.length && !stacktraceFrames.length) {\n    return [];\n  }\n\n  return [...frames, ...stacktraceFrames]\n    .map(frame => frame.platform)\n    .filter(platform => !!platform);\n}\n\nfunction getStackTracePlatforms(event: Event, exceptionEntry: EntryException) {\n  // Fetch platforms in stack traces of an exception entry\n  const exceptionEntryPlatforms = (exceptionEntry.data.values ?? []).flatMap(\n    getPlatforms\n  );\n\n  // Fetch platforms in an exception entry\n  const stackTraceEntry = (event.entries.find(\n    entry => entry.type === EntryType.STACKTRACE\n  )?.data ?? {}) as StacktraceType;\n\n  // Fetch platforms in an exception entry\n  const stackTraceEntryPlatforms = Object.keys(stackTraceEntry).flatMap(key =>\n    getPlatforms(stackTraceEntry[key])\n  );\n\n  // Fetch platforms in an thread entry\n  const threadEntry = (event.entries.find(entry => entry.type === EntryType.THREADS)?.data\n    .values ?? []) as Array<Thread>;\n\n  // Fetch platforms in a thread entry\n  const threadEntryPlatforms = threadEntry.flatMap(({stacktrace}) =>\n    getPlatforms(stacktrace)\n  );\n\n  return new Set([\n    ...exceptionEntryPlatforms,\n    ...stackTraceEntryPlatforms,\n    ...threadEntryPlatforms,\n  ]);\n}\n\n// Checks whether an event indicates that it is a native event.\nfunction isNativeEvent(event: Event, exceptionEntry: EntryException) {\n  const {platform} = event;\n\n  if (platform && NATIVE_PLATFORMS.includes(platform)) {\n    return true;\n  }\n\n  const stackTracePlatforms = getStackTracePlatforms(event, exceptionEntry);\n\n  return NATIVE_PLATFORMS.some(nativePlatform => stackTracePlatforms.has(nativePlatform));\n}\n\n//  Checks whether an event indicates that it has an associated minidump.\nfunction isMinidumpEvent(exceptionEntry: EntryException) {\n  const {data} = exceptionEntry;\n  return (data.values ?? []).some(value => value.mechanism?.type === 'minidump');\n}\n\n// Checks whether an event indicates that it has an apple crash report.\nfunction isAppleCrashReportEvent(exceptionEntry: EntryException) {\n  const {data} = exceptionEntry;\n  return (data.values ?? []).some(value => value.mechanism?.type === 'applecrashreport');\n}\n\nexport function displayReprocessEventAction(orgFeatures: Array<string>, event?: Event) {\n  if (!event || !orgFeatures.includes('reprocessing-v2')) {\n    return false;\n  }\n\n  const {entries} = event;\n  const exceptionEntry = entries.find(entry => entry.type === EntryType.EXCEPTION) as\n    | EntryException\n    | undefined;\n\n  if (!exceptionEntry) {\n    return false;\n  }\n\n  // We want to show the reprocessing button if the issue in question is native or contains native frames.\n  // The logic is taken from the symbolication pipeline in Python, where it is used to determine whether reprocessing\n  // payloads should be stored:\n  // https://github.com/getsentry/sentry/blob/cb7baef414890336881d67b7a8433ee47198c701/src/sentry/lang/native/processing.py#L425-L426\n  // It is still not ideal as one can always merge native and non-native events together into one issue,\n  // but it's the best approximation we have.\n  if (\n    !isMinidumpEvent(exceptionEntry) &&\n    !isAppleCrashReportEvent(exceptionEntry) &&\n    !isNativeEvent(event, exceptionEntry)\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import EventView, {ImmutableEventView} from 'sentry/utils/discover/eventView';\n\nimport {createDefinedContext} from './utils';\n\ntype usePerformanceEventViewContext = {\n  eventView: EventView;\n};\n\nconst [\n  PerformanceEventViewProvider,\n  _usePerformanceEventView,\n  PerformanceEventViewContext,\n] = createDefinedContext<usePerformanceEventViewContext>({\n  name: 'PerformanceEventViewContext',\n});\n\nexport {PerformanceEventViewProvider, PerformanceEventViewContext};\n\n// Provides a readonly event view. Also omits anything that isn't currently read-only, although in the future we should switch the code in EventView instead.\n// If you need mutability, use the mutable version.\nexport function usePerformanceEventView(): ImmutableEventView {\n  return _usePerformanceEventView().eventView;\n}\n\nexport function useMutablePerformanceEventView() {\n  return usePerformanceEventView().clone();\n}\n","import {createContext, useContext} from 'react';\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n/*\n * Creates provider, context and useContext hook, guarding against calling useContext without a provider.\n * [0]: https://github.com/chakra-ui/chakra-ui/blob/c0f9c287df0397e2aa9bd90eb3d5c2f2c08aa0b1/packages/utils/src/react-helpers.ts#L27\n *\n * Renamed to createDefinedContext to not conflate with React context.\n */\nexport function createDefinedContext<ContextType>(options: {\n  name: string;\n  errorMessage?: string;\n  strict?: boolean;\n}) {\n  const {\n    strict = true,\n    errorMessage = `useContext for \"${options.name}\" must be inside a Provider with a value`,\n    name,\n  } = options;\n\n  const Context = createContext<ContextType | undefined>(undefined);\n\n  Context.displayName = name;\n\n  function useDefinedContext() {\n    const context = useContext(Context);\n    if (!context && strict) {\n      throw new Error(errorMessage);\n    }\n    return context;\n  }\n\n  return [\n    Context.Provider,\n    useDefinedContext,\n    Context,\n  ] as CreateContextReturn<ContextType>;\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","export const ERROR_TYPES = {\n  GROUP_NOT_FOUND: 'GROUP_NOT_FOUND',\n  MISSING_MEMBERSHIP: 'MISSING_MEMBERSHIP',\n} as const;\n","import {useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActionButton from 'sentry/components/actions/button';\nimport AutoSelectText from 'sentry/components/autoSelectText';\nimport Button from 'sentry/components/button';\nimport Clipboard from 'sentry/components/clipboard';\nimport Confirm from 'sentry/components/confirm';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Switch from 'sentry/components/switchButton';\nimport {IconChevron, IconCopy, IconRefresh} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype ContainerProps = {\n  onCancel: () => void;\n  onConfirm: () => void;\n  onConfirming: () => void;\n  shareUrl: string;\n};\n\ntype Props = {\n  loading: boolean;\n  /**\n   * Called when refreshing an existing link\n   */\n  onReshare: () => void;\n  onToggle: () => void;\n  disabled?: boolean;\n  /**\n   * Link is public\n   */\n  isShared?: boolean;\n  shareUrl?: string | null;\n};\n\nfunction ShareIssue({loading, onReshare, onToggle, disabled, isShared, shareUrl}: Props) {\n  const [hasConfirmModal, setHasConfirmModal] = useState(false);\n\n  // State of confirm modal so we can keep dropdown menu opn\n  const handleConfirmCancel = () => {\n    setHasConfirmModal(false);\n  };\n\n  const handleConfirmReshare = () => {\n    setHasConfirmModal(true);\n  };\n\n  const handleToggleShare = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    onToggle();\n  };\n\n  const handleOpen = () => {\n    // Starts sharing as soon as dropdown is opened\n    if (!loading && !isShared) {\n      onToggle();\n    }\n  };\n\n  return (\n    <DropdownLink\n      shouldIgnoreClickOutside={() => hasConfirmModal}\n      customTitle={\n        <ActionButton disabled={disabled}>\n          <DropdownTitleContent>\n            <IndicatorDot isShared={isShared} />\n            {t('Share')}\n          </DropdownTitleContent>\n\n          <IconChevron direction=\"down\" size=\"xs\" />\n        </ActionButton>\n      }\n      onOpen={handleOpen}\n      disabled={disabled}\n      keepMenuOpen\n    >\n      <DropdownContent>\n        <Header>\n          <Title>{t('Enable public share link')}</Title>\n          <Switch isActive={isShared} size=\"sm\" toggle={handleToggleShare} />\n        </Header>\n\n        {loading && (\n          <LoadingContainer>\n            <LoadingIndicator mini />\n          </LoadingContainer>\n        )}\n\n        {!loading && isShared && shareUrl && (\n          <ShareUrlContainer\n            shareUrl={shareUrl}\n            onCancel={handleConfirmCancel}\n            onConfirming={handleConfirmReshare}\n            onConfirm={onReshare}\n          />\n        )}\n      </DropdownContent>\n    </DropdownLink>\n  );\n}\n\nexport default ShareIssue;\n\ntype UrlRef = React.ElementRef<typeof AutoSelectText>;\n\nfunction ShareUrlContainer({\n  shareUrl,\n  onConfirming,\n  onCancel,\n  onConfirm,\n}: ContainerProps) {\n  const urlRef = useRef<UrlRef>(null);\n\n  return (\n    <UrlContainer>\n      <TextContainer>\n        <StyledAutoSelectText ref={urlRef}>{shareUrl}</StyledAutoSelectText>\n      </TextContainer>\n\n      <Clipboard hideUnsupported value={shareUrl}>\n        <ClipboardButton\n          title={t('Copy to clipboard')}\n          borderless\n          size=\"xsmall\"\n          onClick={() => urlRef.current?.selectText()}\n          icon={<IconCopy />}\n          aria-label={t('Copy to clipboard')}\n        />\n      </Clipboard>\n\n      <Confirm\n        message={t(\n          'You are about to regenerate a new shared URL. Your previously shared URL will no longer work. Do you want to continue?'\n        )}\n        onCancel={onCancel}\n        onConfirming={onConfirming}\n        onConfirm={onConfirm}\n      >\n        <ReshareButton\n          title={t('Generate new URL')}\n          aria-label={t('Generate new URL')}\n          borderless\n          size=\"xsmall\"\n          icon={<IconRefresh />}\n        />\n      </Confirm>\n    </UrlContainer>\n  );\n}\n\nconst UrlContainer = styled('div')`\n  display: flex;\n  align-items: stretch;\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${space(0.5)};\n`;\n\nconst LoadingContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n\nconst DropdownTitleContent = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(0.5)};\n`;\n\nconst DropdownContent = styled('li')`\n  padding: ${space(1.5)} ${space(2)};\n\n  > div:not(:last-of-type) {\n    margin-bottom: ${space(1.5)};\n  }\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled('div')`\n  padding-right: ${space(4)};\n  white-space: nowrap;\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: 600;\n`;\n\nconst IndicatorDot = styled('span')<{isShared?: boolean}>`\n  display: inline-block;\n  margin-right: ${space(0.5)};\n  border-radius: 50%;\n  width: 10px;\n  height: 10px;\n  background: ${p => (p.isShared ? p.theme.active : p.theme.border)};\n`;\n\nconst StyledAutoSelectText = styled(AutoSelectText)`\n  flex: 1;\n  padding: ${space(0.5)} 0 ${space(0.5)} ${space(0.75)};\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst TextContainer = styled('div')`\n  position: relative;\n  display: flex;\n  flex: 1;\n  background-color: transparent;\n  border-right: 1px solid ${p => p.theme.border};\n  max-width: 288px;\n`;\n\nconst ClipboardButton = styled(Button)`\n  border-radius: 0;\n  border-right: 1px solid ${p => p.theme.border};\n  height: 100%;\n\n  &:hover {\n    border-right: 1px solid ${p => p.theme.border};\n  }\n`;\n\nconst ReshareButton = styled(Button)`\n  height: 100%;\n`;\n","import ActionButton from 'sentry/components/actions/button';\nimport {IconBell} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Group} from 'sentry/types';\n\nimport {getSubscriptionReason} from '../utils';\n\ntype Props = {\n  group: Group;\n  onClick: (event: React.MouseEvent) => void;\n  disabled?: boolean;\n};\n\nfunction SubscribeAction({disabled, group, onClick}: Props) {\n  const disabledNotifications = group.subscriptionDetails?.disabled ?? false;\n\n  return (\n    <ActionButton\n      disabled={disabled || disabledNotifications}\n      title={getSubscriptionReason(group, true)}\n      tooltipProps={{delay: 300}}\n      priority={group.isSubscribed ? 'primary' : 'default'}\n      size=\"xsmall\"\n      aria-label={t('Subscribe')}\n      onClick={onClick}\n      icon={<IconBell size=\"xs\" />}\n    />\n  );\n}\n\nexport default SubscribeAction;\n","import {Component, Fragment, MouseEvent} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Query} from 'history';\n\nimport {bulkDelete, bulkUpdate} from 'sentry/actionCreators/group';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {\n  ModalRenderProps,\n  openModal,\n  openReprocessEventModal,\n} from 'sentry/actionCreators/modal';\nimport GroupActions from 'sentry/actions/groupActions';\nimport {Client} from 'sentry/api';\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport ActionButton from 'sentry/components/actions/button';\nimport IgnoreActions from 'sentry/components/actions/ignore';\nimport ResolveActions from 'sentry/components/actions/resolve';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  Group,\n  Organization,\n  Project,\n  ResolutionStatus,\n  SavedQueryVersions,\n  UpdateResolutionStatus,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {analytics} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {displayReprocessEventAction} from 'sentry/utils/displayReprocessEventAction';\nimport {uniqueId} from 'sentry/utils/guid';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport ReviewAction from 'sentry/views/issueList/actions/reviewAction';\nimport ShareIssue from 'sentry/views/organizationGroupDetails/actions/shareIssue';\n\nimport SubscribeAction from './subscribeAction';\n\ntype Props = {\n  api: Client;\n  disabled: boolean;\n  group: Group;\n  organization: Organization;\n  project: Project;\n  event?: Event;\n  query?: Query;\n};\n\ntype State = {\n  shareBusy: boolean;\n};\n\nclass Actions extends Component<Props, State> {\n  state: State = {\n    shareBusy: false,\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.state.shareBusy && nextProps.group.shareId !== this.props.group.shareId) {\n      this.setState({shareBusy: false});\n    }\n  }\n\n  getShareUrl(shareId: string) {\n    if (!shareId) {\n      return '';\n    }\n\n    const path = `/share/issue/${shareId}/`;\n    const {host, protocol} = window.location;\n    return `${protocol}//${host}${path}`;\n  }\n\n  getDiscoverUrl() {\n    const {group, project, organization} = this.props;\n    const {title, id, type} = group;\n\n    const discoverQuery = {\n      id: undefined,\n      name: title || type,\n      fields: ['title', 'release', 'environment', 'user.display', 'timestamp'],\n      orderby: '-timestamp',\n      query: `issue.id:${id}`,\n      projects: [Number(project.id)],\n      version: 2 as SavedQueryVersions,\n      range: '90d',\n    };\n\n    const discoverView = EventView.fromSavedQuery(discoverQuery);\n    return discoverView.getResultsViewUrlTarget(organization.slug);\n  }\n\n  trackIssueAction(\n    action:\n      | 'shared'\n      | 'deleted'\n      | 'bookmarked'\n      | 'subscribed'\n      | 'mark_reviewed'\n      | 'discarded'\n      | 'open_in_discover'\n      | ResolutionStatus\n  ) {\n    const {group, project, organization, query = {}} = this.props;\n    const {alert_date, alert_rule_id, alert_type} = query;\n    trackAdvancedAnalyticsEvent('issue_details.action_clicked', {\n      organization,\n      project_id: parseInt(project.id, 10),\n      group_id: parseInt(group.id, 10),\n      action_type: action,\n      // Alert properties track if the user came from email/slack alerts\n      alert_date:\n        typeof alert_date === 'string' ? getUtcDateString(Number(alert_date)) : undefined,\n      alert_rule_id: typeof alert_rule_id === 'string' ? alert_rule_id : undefined,\n      alert_type: typeof alert_type === 'string' ? alert_type : undefined,\n    });\n  }\n\n  onDelete = () => {\n    const {group, project, organization, api} = this.props;\n\n    addLoadingMessage(t('Delete event\\u2026'));\n\n    bulkDelete(\n      api,\n      {\n        orgId: organization.slug,\n        projectId: project.slug,\n        itemIds: [group.id],\n      },\n      {\n        complete: () => {\n          clearIndicators();\n\n          browserHistory.push(`/${organization.slug}/${project.slug}/`);\n        },\n      }\n    );\n\n    this.trackIssueAction('deleted');\n  };\n\n  onUpdate = (\n    data:\n      | {isBookmarked: boolean}\n      | {isSubscribed: boolean}\n      | {inbox: boolean}\n      | UpdateResolutionStatus\n  ) => {\n    const {group, project, organization, api} = this.props;\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      api,\n      {\n        orgId: organization.slug,\n        projectId: project.slug,\n        itemIds: [group.id],\n        data,\n      },\n      {\n        complete: clearIndicators,\n      }\n    );\n\n    if ((data as UpdateResolutionStatus).status) {\n      this.trackIssueAction((data as UpdateResolutionStatus).status);\n    }\n    if ((data as {inbox: boolean}).inbox !== undefined) {\n      this.trackIssueAction('mark_reviewed');\n    }\n  };\n\n  onReprocessEvent = () => {\n    const {group, organization} = this.props;\n    openReprocessEventModal({organization, groupId: group.id});\n  };\n\n  onShare(shared: boolean) {\n    const {group, project, organization, api} = this.props;\n    this.setState({shareBusy: true});\n\n    // not sure why this is a bulkUpdate\n    bulkUpdate(\n      api,\n      {\n        orgId: organization.slug,\n        projectId: project.slug,\n        itemIds: [group.id],\n        data: {\n          isPublic: shared,\n        },\n      },\n      {\n        error: () => {\n          addErrorMessage(t('Error sharing'));\n        },\n        complete: () => {\n          // shareBusy marked false in componentWillReceiveProps to sync\n          // busy state update with shareId update\n        },\n      }\n    );\n\n    this.trackIssueAction('shared');\n  }\n\n  onToggleShare = () => {\n    const newIsPublic = !this.props.group.isPublic;\n    if (newIsPublic) {\n      trackAdvancedAnalyticsEvent('issue.shared_publicly', {\n        organization: this.props.organization,\n      });\n    }\n    this.onShare(newIsPublic);\n  };\n\n  onToggleBookmark = () => {\n    this.onUpdate({isBookmarked: !this.props.group.isBookmarked});\n    this.trackIssueAction('bookmarked');\n  };\n\n  onToggleSubscribe = () => {\n    this.onUpdate({isSubscribed: !this.props.group.isSubscribed});\n    this.trackIssueAction('subscribed');\n  };\n\n  onRedirectDiscover = () => {\n    const {organization} = this.props;\n    trackAdvancedAnalyticsEvent('growth.issue_open_in_discover_btn_clicked', {\n      organization,\n    });\n    browserHistory.push(this.getDiscoverUrl());\n  };\n\n  onDiscard = () => {\n    const {group, project, organization, api} = this.props;\n    const id = uniqueId();\n    addLoadingMessage(t('Discarding event\\u2026'));\n\n    GroupActions.discard(id, group.id);\n\n    api.request(`/issues/${group.id}/`, {\n      method: 'PUT',\n      data: {discard: true},\n      success: response => {\n        GroupActions.discardSuccess(id, group.id, response);\n        browserHistory.push(`/${organization.slug}/${project.slug}/`);\n      },\n      error: error => {\n        GroupActions.discardError(id, group.id, error);\n      },\n      complete: clearIndicators,\n    });\n    this.trackIssueAction('discarded');\n  };\n\n  renderDiscardModal = ({Body, Footer, closeModal}: ModalRenderProps) => {\n    const {organization, project} = this.props;\n\n    function renderDiscardDisabled({children, ...props}) {\n      return children({\n        ...props,\n        renderDisabled: ({features}: {features: string[]}) => (\n          <FeatureDisabled\n            alert\n            featureName={t('Discard and Delete')}\n            features={features}\n          />\n        ),\n      });\n    }\n\n    return (\n      <Feature\n        features={['projects:discard-groups']}\n        hookName=\"feature-disabled:discard-groups\"\n        organization={organization}\n        project={project}\n        renderDisabled={renderDiscardDisabled}\n      >\n        {({hasFeature, renderDisabled, ...props}) => (\n          <Fragment>\n            <Body>\n              {!hasFeature &&\n                typeof renderDisabled === 'function' &&\n                renderDisabled({...props, hasFeature, children: null})}\n              {t(\n                `Discarding this event will result in the deletion of most data associated with this issue and future events being discarded before reaching your stream. Are you sure you wish to continue?`\n              )}\n            </Body>\n            <Footer>\n              <Button onClick={closeModal}>{t('Cancel')}</Button>\n              <Button\n                style={{marginLeft: space(1)}}\n                priority=\"primary\"\n                onClick={this.onDiscard}\n                disabled={!hasFeature}\n              >\n                {t('Discard Future Events')}\n              </Button>\n            </Footer>\n          </Fragment>\n        )}\n      </Feature>\n    );\n  };\n\n  openDiscardModal = () => {\n    const {organization} = this.props;\n\n    openModal(this.renderDiscardModal);\n    analytics('feature.discard_group.modal_opened', {\n      org_id: parseInt(organization.id, 10),\n    });\n  };\n\n  handleClick(disabled: boolean, onClick: (event?: MouseEvent) => void) {\n    return function (event: MouseEvent) {\n      if (disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n\n      onClick(event);\n    };\n  }\n\n  render() {\n    const {group, project, organization, disabled, event} = this.props;\n    const {status, isBookmarked} = group;\n\n    const orgFeatures = new Set(organization.features);\n\n    const bookmarkTitle = isBookmarked ? t('Remove bookmark') : t('Bookmark');\n    const hasRelease = !!project.features?.includes('releases');\n\n    const isResolved = status === 'resolved';\n    const isIgnored = status === 'ignored';\n\n    return (\n      <Wrapper>\n        <GuideAnchor target=\"resolve\" position=\"bottom\" offset={space(3)}>\n          <ResolveActions\n            disabled={disabled}\n            disableDropdown={disabled}\n            hasRelease={hasRelease}\n            latestRelease={project.latestRelease}\n            onUpdate={this.onUpdate}\n            orgSlug={organization.slug}\n            projectSlug={project.slug}\n            isResolved={isResolved}\n            isAutoResolved={\n              group.status === 'resolved' ? group.statusDetails.autoResolved : undefined\n            }\n          />\n        </GuideAnchor>\n        <GuideAnchor target=\"ignore_delete_discard\" position=\"bottom\" offset={space(3)}>\n          <IgnoreActions\n            isIgnored={isIgnored}\n            onUpdate={this.onUpdate}\n            disabled={disabled}\n          />\n        </GuideAnchor>\n        <Tooltip\n          disabled={!!group.inbox || disabled}\n          title={t('Issue has been reviewed')}\n          delay={300}\n        >\n          <ReviewAction onUpdate={this.onUpdate} disabled={!group.inbox || disabled} />\n        </Tooltip>\n        <Feature\n          hookName=\"feature-disabled:open-in-discover\"\n          features={['discover-basic']}\n          organization={organization}\n        >\n          <ActionButton\n            disabled={disabled}\n            to={disabled ? '' : this.getDiscoverUrl()}\n            onClick={() => {\n              this.trackIssueAction('open_in_discover');\n              trackAdvancedAnalyticsEvent('growth.issue_open_in_discover_btn_clicked', {\n                organization,\n              });\n            }}\n          >\n            <GuideAnchor target=\"open_in_discover\">{t('Open in Discover')}</GuideAnchor>\n          </ActionButton>\n        </Feature>\n        {orgFeatures.has('shared-issues') && (\n          <ShareIssue\n            disabled={disabled}\n            loading={this.state.shareBusy}\n            isShared={group.isPublic}\n            shareUrl={this.getShareUrl(group.shareId)}\n            onToggle={this.onToggleShare}\n            onReshare={() => this.onShare(true)}\n          />\n        )}\n        <SubscribeAction\n          disabled={disabled}\n          group={group}\n          onClick={this.handleClick(disabled, this.onToggleSubscribe)}\n        />\n        <Access organization={organization} access={['event:admin']}>\n          {({hasAccess}) => (\n            <DropdownMenuControlV2\n              triggerProps={{\n                'aria-label': t('More Actions'),\n                icon: <IconEllipsis size=\"xs\" />,\n                showChevron: false,\n                size: 'xsmall',\n              }}\n              items={[\n                {\n                  key: 'bookmark',\n                  label: bookmarkTitle,\n                  hidden: false,\n                  onAction: this.onToggleBookmark,\n                },\n                {\n                  key: 'reprocess',\n                  label: t('Reprocess events'),\n                  hidden: !displayReprocessEventAction(organization.features, event),\n                  onAction: this.onReprocessEvent,\n                },\n                {\n                  key: 'delete-issue',\n                  priority: 'danger',\n                  label: t('Delete'),\n                  hidden: !hasAccess,\n                  onAction: () =>\n                    openModal(({Body, Footer, closeModal}: ModalRenderProps) => (\n                      <Fragment>\n                        <Body>\n                          {t(\n                            'Deleting this issue is permanent. Are you sure you wish to continue?'\n                          )}\n                        </Body>\n                        <Footer>\n                          <Button onClick={closeModal}>{t('Cancel')}</Button>\n                          <Button\n                            style={{marginLeft: space(1)}}\n                            priority=\"primary\"\n                            onClick={this.onDelete}\n                          >\n                            {t('Delete')}\n                          </Button>\n                        </Footer>\n                      </Fragment>\n                    )),\n                },\n                {\n                  key: 'delete-and-discard',\n                  priority: 'danger',\n                  label: t('Delete and discard future events'),\n                  hidden: !hasAccess,\n                  onAction: () => this.openDiscardModal(),\n                },\n              ]}\n            />\n          )}\n        </Access>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled('div')`\n  display: grid;\n  justify-content: flex-start;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: ${space(0.5)};\n  margin-top: ${space(2)};\n  white-space: nowrap;\n`;\n\nexport {Actions};\n\nexport default withApi(withOrganization(Actions));\n","import {Component, Fragment} from 'react';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport {fetchOrgMembers} from 'sentry/actionCreators/members';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport AssigneeSelector from 'sentry/components/assigneeSelector';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Badge from 'sentry/components/badge';\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport Count from 'sentry/components/count';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport EventAnnotation from 'sentry/components/events/eventAnnotation';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport InboxReason from 'sentry/components/group/inboxBadges/inboxReason';\nimport UnhandledInboxTag from 'sentry/components/group/inboxBadges/unhandledTag';\nimport IdBadge from 'sentry/components/idBadge';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport SeenByList from 'sentry/components/seenByList';\nimport ShortId from 'sentry/components/shortId';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconChat} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {getMessage} from 'sentry/utils/events';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport GroupActions from './actions';\nimport {Tab} from './types';\nimport {TagAndMessageWrapper} from './unhandledTag';\nimport {ReprocessingStatus} from './utils';\n\ntype Props = WithRouterProps & {\n  api: Client;\n  baseUrl: string;\n  currentTab: string;\n  group: Group;\n  groupReprocessingStatus: ReprocessingStatus;\n  organization: Organization;\n  project: Project;\n  replaysCount: number | null;\n  event?: Event;\n};\n\ntype MemberList = NonNullable<\n  React.ComponentProps<typeof AssigneeSelector>['memberList']\n>;\n\ntype State = {\n  memberList?: MemberList;\n};\n\nclass GroupHeader extends Component<Props, State> {\n  state: State = {};\n\n  componentDidMount() {\n    const {group, api, organization} = this.props;\n    const {project} = group;\n\n    fetchOrgMembers(api, organization.slug, [project.id]).then(memberList => {\n      const users = memberList.map(member => member.user);\n      this.setState({memberList: users});\n    });\n  }\n\n  getDisabledTabs() {\n    const {organization} = this.props;\n\n    const hasReprocessingV2Feature = organization.features.includes('reprocessing-v2');\n\n    if (!hasReprocessingV2Feature) {\n      return [];\n    }\n\n    const {groupReprocessingStatus} = this.props;\n\n    if (groupReprocessingStatus === ReprocessingStatus.REPROCESSING) {\n      return [\n        Tab.ACTIVITY,\n        Tab.USER_FEEDBACK,\n        Tab.ATTACHMENTS,\n        Tab.EVENTS,\n        Tab.MERGED,\n        Tab.GROUPING,\n        Tab.SIMILAR_ISSUES,\n        Tab.TAGS,\n      ];\n    }\n\n    if (groupReprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT) {\n      return [\n        Tab.DETAILS,\n        Tab.ATTACHMENTS,\n        Tab.EVENTS,\n        Tab.MERGED,\n        Tab.GROUPING,\n        Tab.SIMILAR_ISSUES,\n        Tab.TAGS,\n        Tab.USER_FEEDBACK,\n      ];\n    }\n\n    return [];\n  }\n\n  render() {\n    const {\n      project,\n      group,\n      currentTab,\n      baseUrl,\n      event,\n      organization,\n      location,\n      replaysCount,\n    } = this.props;\n    const projectFeatures = new Set(project ? project.features : []);\n    const organizationFeatures = new Set(organization ? organization.features : []);\n    const userCount = group.userCount;\n\n    const hasGroupingTreeUI = organizationFeatures.has('grouping-tree-ui');\n    const hasSimilarView = projectFeatures.has('similarity-view');\n    const hasEventAttachments = organizationFeatures.has('event-attachments');\n    const hasIssueIdBreadcrumbs = organizationFeatures.has('issue-id-breadcrumbs');\n\n    let className = 'group-detail';\n\n    if (group.hasSeen) {\n      className += ' hasSeen';\n    }\n\n    if (group.status === 'resolved') {\n      className += ' isResolved';\n    }\n\n    const {memberList} = this.state;\n    const orgId = organization.slug;\n    const message = getMessage(group);\n\n    const searchTermWithoutQuery = omit(location.query, 'query');\n    const eventRouteToObject = {\n      pathname: `${baseUrl}events/`,\n      query: searchTermWithoutQuery,\n    };\n\n    const disabledTabs = this.getDisabledTabs();\n    const disableActions = !!disabledTabs.length;\n\n    const shortIdBreadCrumb = group.shortId && (\n      <GuideAnchor target=\"issue_number\" position=\"bottom\">\n        <IssueBreadcrumbWrapper>\n          <BreadcrumbProjectBadge\n            project={project}\n            avatarSize={16}\n            hideName\n            avatarProps={{hasTooltip: true, tooltip: project.slug}}\n          />\n          <StyledTooltip\n            className=\"help-link\"\n            title={t(\n              'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'\n            )}\n            position=\"bottom\"\n          >\n            <StyledShortId shortId={group.shortId} />\n          </StyledTooltip>\n        </IssueBreadcrumbWrapper>\n      </GuideAnchor>\n    );\n\n    return (\n      <Layout.Header>\n        <div className={className}>\n          <StyledBreadcrumbs\n            crumbs={[\n              {label: 'Issues', to: `/organizations/${orgId}/issues/${location.search}`},\n              {\n                label: hasIssueIdBreadcrumbs ? shortIdBreadCrumb : t('Issue Details'),\n              },\n            ]}\n          />\n          <div className=\"row\">\n            <div className=\"col-sm-7\">\n              <TitleWrapper>\n                {!hasIssueIdBreadcrumbs && (\n                  <StyledIdBadge\n                    project={project}\n                    avatarSize={24}\n                    hideName\n                    avatarProps={{hasTooltip: true, tooltip: project.slug}}\n                  />\n                )}\n                <h3>\n                  <EventOrGroupTitle hasGuideAnchor data={group} />\n                </h3>\n                {group.inbox && (\n                  <InboxReasonWrapper>\n                    <InboxReason inbox={group.inbox} fontSize=\"md\" />\n                  </InboxReasonWrapper>\n                )}\n              </TitleWrapper>\n              <StyledTagAndMessageWrapper>\n                {group.level && <ErrorLevel level={group.level} size=\"11px\" />}\n                {group.isUnhandled && <UnhandledInboxTag />}\n                <EventMessage\n                  message={message}\n                  annotations={\n                    <Fragment>\n                      {group.logger && (\n                        <EventAnnotationWithSpace>\n                          <Link\n                            to={{\n                              pathname: `/organizations/${orgId}/issues/`,\n                              query: {query: 'logger:' + group.logger},\n                            }}\n                          >\n                            {group.logger}\n                          </Link>\n                        </EventAnnotationWithSpace>\n                      )}\n                      {group.annotations.map((annotation, i) => (\n                        <EventAnnotationWithSpace\n                          key={i}\n                          dangerouslySetInnerHTML={{__html: annotation}}\n                        />\n                      ))}\n                    </Fragment>\n                  }\n                />\n              </StyledTagAndMessageWrapper>\n            </div>\n\n            {hasIssueIdBreadcrumbs ? (\n              <StatsWrapper>\n                <div className=\"count align-right m-l-1\">\n                  <h6 className=\"nav-header\">{t('Events')}</h6>\n                  {disableActions ? (\n                    <Count className=\"count\" value={group.count} />\n                  ) : (\n                    <Link to={eventRouteToObject}>\n                      <Count className=\"count\" value={group.count} />\n                    </Link>\n                  )}\n                </div>\n                <div className=\"count align-right m-l-1\">\n                  <h6 className=\"nav-header\">{t('Users')}</h6>\n                  {userCount !== 0 ? (\n                    disableActions ? (\n                      <Count className=\"count\" value={userCount} />\n                    ) : (\n                      <Link to={`${baseUrl}tags/user/${location.search}`}>\n                        <Count className=\"count\" value={userCount} />\n                      </Link>\n                    )\n                  ) : (\n                    <span>0</span>\n                  )}\n                </div>\n                <div className=\"assigned-to m-l-1\">\n                  <h6 className=\"nav-header\">{t('Assignee')}</h6>\n                  <AssigneeSelector\n                    id={group.id}\n                    memberList={memberList}\n                    disabled={disableActions}\n                  />\n                </div>\n              </StatsWrapper>\n            ) : (\n              <div className=\"col-sm-5 stats\">\n                <div className=\"flex flex-justify-right\">\n                  {group.shortId && (\n                    <GuideAnchor target=\"issue_number\" position=\"bottom\">\n                      <div className=\"short-id-box count align-right\">\n                        <h6 className=\"nav-header\">\n                          <Tooltip\n                            className=\"help-link\"\n                            showUnderline\n                            title={t(\n                              'This identifier is unique across your organization, and can be used to reference an issue in various places, like commit messages.'\n                            )}\n                            position=\"bottom\"\n                          >\n                            <ExternalLink href=\"https://docs.sentry.io/product/integrations/source-code-mgmt/github/#resolve-via-commit-or-pull-request\">\n                              {t('Issue #')}\n                            </ExternalLink>\n                          </Tooltip>\n                        </h6>\n                        <ShortId\n                          shortId={group.shortId}\n                          avatar={\n                            <StyledProjectBadge\n                              project={project}\n                              avatarSize={20}\n                              hideName\n                            />\n                          }\n                        />\n                      </div>\n                    </GuideAnchor>\n                  )}\n                  <div className=\"count align-right m-l-1\">\n                    <h6 className=\"nav-header\">{t('Events')}</h6>\n                    {disableActions ? (\n                      <Count className=\"count\" value={group.count} />\n                    ) : (\n                      <Link to={eventRouteToObject}>\n                        <Count className=\"count\" value={group.count} />\n                      </Link>\n                    )}\n                  </div>\n                  <div className=\"count align-right m-l-1\">\n                    <h6 className=\"nav-header\">{t('Users')}</h6>\n                    {userCount !== 0 ? (\n                      disableActions ? (\n                        <Count className=\"count\" value={userCount} />\n                      ) : (\n                        <Link to={`${baseUrl}tags/user/${location.search}`}>\n                          <Count className=\"count\" value={userCount} />\n                        </Link>\n                      )\n                    ) : (\n                      <span>0</span>\n                    )}\n                  </div>\n                  <div className=\"assigned-to m-l-1\">\n                    <h6 className=\"nav-header\">{t('Assignee')}</h6>\n                    <AssigneeSelector\n                      id={group.id}\n                      memberList={memberList}\n                      disabled={disableActions}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n          <SeenByList\n            seenBy={group.seenBy}\n            iconTooltip={t('People who have viewed this issue')}\n          />\n          <GroupActions\n            group={group}\n            project={project}\n            disabled={disableActions}\n            event={event}\n            query={location.query}\n          />\n          <NavTabs>\n            <ListLink\n              to={`${baseUrl}${location.search}`}\n              isActive={() => currentTab === Tab.DETAILS}\n              disabled={disabledTabs.includes(Tab.DETAILS)}\n            >\n              {t('Details')}\n            </ListLink>\n            <StyledListLink\n              to={`${baseUrl}activity/${location.search}`}\n              isActive={() => currentTab === Tab.ACTIVITY}\n              disabled={disabledTabs.includes(Tab.ACTIVITY)}\n            >\n              {t('Activity')}\n              <Badge>\n                {group.numComments}\n                <IconChat size=\"xs\" />\n              </Badge>\n            </StyledListLink>\n            <StyledListLink\n              to={`${baseUrl}feedback/${location.search}`}\n              isActive={() => currentTab === Tab.USER_FEEDBACK}\n              disabled={disabledTabs.includes(Tab.USER_FEEDBACK)}\n            >\n              {t('User Feedback')} <Badge text={group.userReportCount} />\n            </StyledListLink>\n            {hasEventAttachments && (\n              <ListLink\n                to={`${baseUrl}attachments/${location.search}`}\n                isActive={() => currentTab === Tab.ATTACHMENTS}\n                disabled={disabledTabs.includes(Tab.ATTACHMENTS)}\n              >\n                {t('Attachments')}\n              </ListLink>\n            )}\n            <ListLink\n              to={`${baseUrl}tags/${location.search}`}\n              isActive={() => currentTab === Tab.TAGS}\n              disabled={disabledTabs.includes(Tab.TAGS)}\n            >\n              {t('Tags')}\n            </ListLink>\n            <ListLink\n              to={eventRouteToObject}\n              isActive={() => currentTab === Tab.EVENTS}\n              disabled={disabledTabs.includes(Tab.EVENTS)}\n            >\n              {t('Events')}\n            </ListLink>\n            <ListLink\n              to={`${baseUrl}merged/${location.search}`}\n              isActive={() => currentTab === Tab.MERGED}\n              disabled={disabledTabs.includes(Tab.MERGED)}\n            >\n              {t('Merged Issues')}\n            </ListLink>\n            {hasGroupingTreeUI && (\n              <ListLink\n                to={`${baseUrl}grouping/${location.search}`}\n                isActive={() => currentTab === Tab.GROUPING}\n                disabled={disabledTabs.includes(Tab.GROUPING)}\n              >\n                {t('Grouping')}\n              </ListLink>\n            )}\n            {hasSimilarView && (\n              <ListLink\n                to={`${baseUrl}similar/${location.search}`}\n                isActive={() => currentTab === Tab.SIMILAR_ISSUES}\n                disabled={disabledTabs.includes(Tab.SIMILAR_ISSUES)}\n              >\n                {t('Similar Issues')}\n              </ListLink>\n            )}\n            <Feature features={['session-replay']} organization={organization}>\n              <ListLink\n                to={`${baseUrl}replays/${location.search}`}\n                isActive={() => currentTab === Tab.REPLAYS}\n              >\n                {t('Replays')} <Badge text={replaysCount ?? ''} />\n              </ListLink>\n            </Feature>\n          </NavTabs>\n        </div>\n      </Layout.Header>\n    );\n  }\n}\n\nexport default withApi(withRouter(withOrganization(GroupHeader)));\n\nconst TitleWrapper = styled('div')`\n  display: flex;\n  line-height: 24px;\n`;\n\nconst StyledBreadcrumbs = styled(Breadcrumbs)`\n  margin-bottom: ${space(2)};\n`;\n\nconst IssueBreadcrumbWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIdBadge = styled(IdBadge)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledTooltip = styled(Tooltip)`\n  display: flex;\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-family: ${p => p.theme.text.family};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StatsWrapper = styled('div')`\n  display: grid;\n  justify-content: flex-end;\n  grid-template-columns: repeat(3, min-content);\n  gap: ${space(3)};\n  margin-right: 15px;\n`;\n\nconst InboxReasonWrapper = styled('div')`\n  margin-left: ${space(1)};\n`;\n\nconst StyledTagAndMessageWrapper = styled(TagAndMessageWrapper)`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  justify-content: flex-start;\n  line-height: 1.2;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst StyledListLink = styled(ListLink)`\n  svg {\n    margin-left: ${space(0.5)};\n    margin-bottom: ${space(0.25)};\n    vertical-align: middle;\n  }\n`;\n\nconst StyledProjectBadge = styled(ProjectBadge)`\n  flex-shrink: 0;\n`;\n\nconst BreadcrumbProjectBadge = styled(StyledProjectBadge)`\n  margin-right: ${space(0.75)};\n`;\n\nconst EventAnnotationWithSpace = styled(EventAnnotation)`\n  margin-left: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport PageAlertBar from 'sentry/components/pageAlertBar';\nimport {IconLightning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarProject, Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\n\nfunction SampleEventAlert({\n  organization,\n  project,\n}: {\n  organization: Organization;\n  project: AvatarProject;\n}) {\n  return (\n    <PageAlertBar>\n      <IconLightning />\n      <TextWrapper>\n        {t(\n          'You are viewing a sample error. Configure Sentry to start viewing real errors.'\n        )}\n      </TextWrapper>\n      <Button\n        size=\"xsmall\"\n        priority=\"primary\"\n        to={`/${organization.slug}/${project.slug}/getting-started/${\n          project.platform || ''\n        }`}\n        onClick={() =>\n          trackAdvancedAnalyticsEvent('growth.sample_error_onboarding_link_clicked', {\n            project_id: project.id?.toString(),\n            organization,\n            platform: project.platform,\n          })\n        }\n      >\n        {t('Get Started')}\n      </Button>\n    </PageAlertBar>\n  );\n}\n\nexport default SampleEventAlert;\n\nconst TextWrapper = styled('span')`\n  margin: 0 ${space(1)};\n`;\n","import {cloneElement, Component, Fragment, isValidElement} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport * as PropTypes from 'prop-types';\n\nimport {Client} from 'sentry/api';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport MissingProjectMembership from 'sentry/components/projects/missingProjectMembership';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SentryTypes from 'sentry/sentryTypes';\nimport GroupStore from 'sentry/stores/groupStore';\nimport space from 'sentry/styles/space';\nimport {AvatarProject, Group, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString} from 'sentry/utils/dates';\nimport {TableData} from 'sentry/utils/discover/discoverQuery';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {getMessage, getTitle} from 'sentry/utils/events';\nimport Projects from 'sentry/utils/projects';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withApi from 'sentry/utils/withApi';\n\nimport {ERROR_TYPES} from './constants';\nimport GroupHeader from './header';\nimport SampleEventAlert from './sampleEventAlert';\nimport {Tab} from './types';\nimport {\n  fetchGroupEvent,\n  getGroupReprocessingStatus,\n  markEventSeen,\n  ReprocessingStatus,\n} from './utils';\n\ntype Error = typeof ERROR_TYPES[keyof typeof ERROR_TYPES] | null;\n\ntype Props = {\n  api: Client;\n  children: React.ReactNode;\n  environments: string[];\n  isGlobalSelectionReady: boolean;\n  organization: Organization;\n  projects: Project[];\n} & RouteComponentProps<{groupId: string; orgId: string; eventId?: string}, {}>;\n\ntype State = {\n  error: boolean;\n  errorType: Error;\n  eventError: boolean;\n  group: Group | null;\n  loading: boolean;\n  loadingEvent: boolean;\n  loadingGroup: boolean;\n  loadingReplaysCount: boolean;\n  project: null | (Pick<Project, 'id' | 'slug'> & Partial<Pick<Project, 'platform'>>);\n  replaysCount: number | null;\n  event?: Event;\n};\n\nclass GroupDetails extends Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n    location: PropTypes.object,\n  };\n\n  state = this.initialState;\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n      location: this.props.location,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData(true);\n    this.fetchReplaysCount();\n    this.updateReprocessingProgress();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const globalSelectionReadyChanged =\n      prevProps.isGlobalSelectionReady !== this.props.isGlobalSelectionReady;\n\n    if (\n      globalSelectionReadyChanged ||\n      prevProps.location.pathname !== this.props.location.pathname\n    ) {\n      // Skip tracking for other navigation events like switching events\n      this.fetchData(globalSelectionReadyChanged);\n    }\n\n    if (\n      (!this.canLoadEventEarly(prevProps) && !prevState?.group && this.state.group) ||\n      (prevProps.params?.eventId !== this.props.params?.eventId && this.state.group)\n    ) {\n      this.getEvent(this.state.group);\n    }\n  }\n\n  componentWillUnmount() {\n    GroupStore.reset();\n    callIfFunction(this.listener);\n    if (this.refetchInterval) {\n      window.clearInterval(this.refetchInterval);\n    }\n  }\n\n  refetchInterval: number | null = null;\n\n  get initialState(): State {\n    return {\n      group: null,\n      loading: true,\n      loadingEvent: true,\n      loadingGroup: true,\n      loadingReplaysCount: true,\n      error: false,\n      eventError: false,\n      errorType: null,\n      project: null,\n      replaysCount: null,\n    };\n  }\n\n  trackView(project: Project) {\n    const {organization, params, location} = this.props;\n    const {alert_date, alert_rule_id, alert_type} = location.query;\n    trackAdvancedAnalyticsEvent('issue_details.viewed', {\n      organization,\n      project_id: parseInt(project.id, 10),\n      group_id: parseInt(params.groupId, 10),\n      // Alert properties track if the user came from email/slack alerts\n      alert_date:\n        typeof alert_date === 'string' ? getUtcDateString(Number(alert_date)) : undefined,\n      alert_rule_id: typeof alert_rule_id === 'string' ? alert_rule_id : undefined,\n      alert_type: typeof alert_type === 'string' ? alert_type : undefined,\n    });\n  }\n\n  remountComponent = () => {\n    this.setState(this.initialState);\n    this.fetchData();\n  };\n\n  canLoadEventEarly(props: Props) {\n    return !props.params.eventId || ['oldest', 'latest'].includes(props.params.eventId);\n  }\n\n  get groupDetailsEndpoint() {\n    return `/issues/${this.props.params.groupId}/`;\n  }\n\n  get groupReleaseEndpoint() {\n    return `/issues/${this.props.params.groupId}/first-last-release/`;\n  }\n\n  async getEvent(group?: Group) {\n    if (group) {\n      this.setState({loadingEvent: true, eventError: false});\n    }\n\n    const {params, environments, api} = this.props;\n    const orgSlug = params.orgId;\n    const groupId = params.groupId;\n    const eventId = params?.eventId || 'latest';\n    const projectId = group?.project?.slug;\n    try {\n      const event = await fetchGroupEvent(\n        api,\n        orgSlug,\n        groupId,\n        eventId,\n        environments,\n        projectId\n      );\n      this.setState({event, loading: false, eventError: false, loadingEvent: false});\n    } catch (err) {\n      // This is an expected error, capture to Sentry so that it is not considered as an unhandled error\n      Sentry.captureException(err);\n      this.setState({eventError: true, loading: false, loadingEvent: false});\n    }\n  }\n\n  getCurrentRouteInfo(group: Group): {baseUrl: string; currentTab: Tab} {\n    const {routes, organization} = this.props;\n    const {event} = this.state;\n\n    // All the routes under /organizations/:orgId/issues/:groupId have a defined props\n    const {currentTab, isEventRoute} = routes[routes.length - 1].props as {\n      currentTab: Tab;\n      isEventRoute: boolean;\n    };\n\n    const baseUrl =\n      isEventRoute && event\n        ? `/organizations/${organization.slug}/issues/${group.id}/events/${event.id}/`\n        : `/organizations/${organization.slug}/issues/${group.id}/`;\n\n    return {currentTab, baseUrl};\n  }\n\n  updateReprocessingProgress() {\n    const hasReprocessingV2Feature = this.hasReprocessingV2Feature();\n    if (!hasReprocessingV2Feature) {\n      return;\n    }\n    if (this.refetchInterval) {\n      window.clearInterval(this.refetchInterval);\n    }\n    this.refetchInterval = window.setInterval(this.refetchGroup, 30000);\n  }\n\n  hasReprocessingV2Feature() {\n    const {organization} = this.props;\n    return organization.features?.includes('reprocessing-v2');\n  }\n\n  getReprocessingNewRoute(data: Group) {\n    const {routes, location, params} = this.props;\n    const {groupId} = params;\n\n    const {id: nextGroupId} = data;\n\n    const hasReprocessingV2Feature = this.hasReprocessingV2Feature();\n\n    const reprocessingStatus = getGroupReprocessingStatus(data);\n    const {currentTab, baseUrl} = this.getCurrentRouteInfo(data);\n\n    if (groupId !== nextGroupId) {\n      if (hasReprocessingV2Feature) {\n        // Redirects to the Activities tab\n        if (\n          reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n          currentTab !== Tab.ACTIVITY\n        ) {\n          return {\n            pathname: `${baseUrl}${Tab.ACTIVITY}/`,\n            query: {...params, groupId: nextGroupId},\n          };\n        }\n      }\n\n      return recreateRoute('', {\n        routes,\n        location,\n        params: {...params, groupId: nextGroupId},\n      });\n    }\n\n    if (hasReprocessingV2Feature) {\n      if (\n        reprocessingStatus === ReprocessingStatus.REPROCESSING &&\n        currentTab !== Tab.DETAILS\n      ) {\n        return {\n          pathname: baseUrl,\n          query: params,\n        };\n      }\n\n      if (\n        reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n        currentTab !== Tab.ACTIVITY &&\n        currentTab !== Tab.USER_FEEDBACK\n      ) {\n        return {\n          pathname: `${baseUrl}${Tab.ACTIVITY}/`,\n          query: params,\n        };\n      }\n    }\n\n    return undefined;\n  }\n\n  getGroupQuery(): Record<string, string | string[]> {\n    const {environments} = this.props;\n\n    // Note, we do not want to include the environment key at all if there are no environments\n    const query: Record<string, string | string[]> = {\n      ...(environments ? {environment: environments} : {}),\n      expand: 'inbox',\n      collapse: 'release',\n    };\n\n    return query;\n  }\n\n  getFetchDataRequestErrorType(status: any): Error {\n    if (!status) {\n      return null;\n    }\n\n    if (status === 404) {\n      return ERROR_TYPES.GROUP_NOT_FOUND;\n    }\n\n    if (status === 403) {\n      return ERROR_TYPES.MISSING_MEMBERSHIP;\n    }\n\n    return null;\n  }\n\n  handleRequestError(error: any) {\n    Sentry.captureException(error);\n    const errorType = this.getFetchDataRequestErrorType(error?.status);\n\n    this.setState({\n      loadingGroup: false,\n      loading: false,\n      error: true,\n      errorType,\n    });\n  }\n\n  refetchGroup = async () => {\n    const {loadingGroup, loading, loadingEvent, group} = this.state;\n\n    if (\n      group?.status !== ReprocessingStatus.REPROCESSING ||\n      loadingGroup ||\n      loading ||\n      loadingEvent\n    ) {\n      return;\n    }\n\n    const {api} = this.props;\n\n    this.setState({loadingGroup: true});\n\n    try {\n      const updatedGroup = await api.requestPromise(this.groupDetailsEndpoint, {\n        query: this.getGroupQuery(),\n      });\n\n      const reprocessingNewRoute = this.getReprocessingNewRoute(updatedGroup);\n\n      if (reprocessingNewRoute) {\n        browserHistory.push(reprocessingNewRoute);\n        return;\n      }\n\n      this.setState({group: updatedGroup, loadingGroup: false});\n    } catch (error) {\n      this.handleRequestError(error);\n    }\n  };\n\n  async fetchGroupReleases() {\n    const {api} = this.props;\n    const releases = await api.requestPromise(this.groupReleaseEndpoint);\n    GroupStore.onPopulateReleases(this.props.params.groupId, releases);\n  }\n\n  async fetchReplaysCount() {\n    const {api, location, organization, params} = this.props;\n    const {groupId} = params;\n\n    this.setState({loadingReplaysCount: true});\n\n    const eventView = EventView.fromSavedQuery({\n      id: '',\n      name: `Replays in issue ${groupId}`,\n      version: 2,\n      fields: ['count()'],\n      query: `issue.id:${groupId}`,\n      projects: [],\n    });\n\n    try {\n      const [data] = await doDiscoverQuery<TableData>(\n        api,\n        `/organizations/${organization.slug}/events/`,\n        eventView.getEventsAPIPayload(location)\n      );\n\n      const replaysCount = data.data[0]['count()'].toString();\n\n      this.setState({\n        replaysCount: parseInt(replaysCount, 10),\n        loadingReplaysCount: false,\n      });\n    } catch (err) {\n      this.setState({loadingReplaysCount: false});\n    }\n  }\n\n  async fetchData(trackView = false) {\n    const {api, isGlobalSelectionReady, params} = this.props;\n\n    // Need to wait for global selection store to be ready before making request\n    if (!isGlobalSelectionReady) {\n      return;\n    }\n\n    try {\n      const eventPromise = this.canLoadEventEarly(this.props)\n        ? this.getEvent()\n        : undefined;\n\n      const groupPromise = await api.requestPromise(this.groupDetailsEndpoint, {\n        query: this.getGroupQuery(),\n      });\n\n      const [data] = await Promise.all([groupPromise, eventPromise]);\n      this.fetchGroupReleases();\n\n      const reprocessingNewRoute = this.getReprocessingNewRoute(data);\n\n      if (reprocessingNewRoute) {\n        browserHistory.push(reprocessingNewRoute);\n        return;\n      }\n\n      const project = data.project;\n\n      markEventSeen(api, params.orgId, project.slug, params.groupId);\n\n      if (!project) {\n        Sentry.withScope(() => {\n          Sentry.captureException(new Error('Project not found'));\n        });\n      } else {\n        const locationWithProject = {...this.props.location};\n        if (\n          locationWithProject.query.project === undefined &&\n          locationWithProject.query._allp === undefined\n        ) {\n          // We use _allp as a temporary measure to know they came from the\n          // issue list page with no project selected (all projects included in\n          // filter).\n          //\n          // If it is not defined, we add the locked project id to the URL\n          // (this is because if someone navigates directly to an issue on\n          // single-project priveleges, then goes back - they were getting\n          // assigned to the first project).\n          //\n          // If it is defined, we do not so that our back button will bring us\n          // to the issue list page with no project selected instead of the\n          // locked project.\n          locationWithProject.query = {...locationWithProject.query, project: project.id};\n        }\n        // We delete _allp from the URL to keep the hack a bit cleaner, but\n        // this is not an ideal solution and will ultimately be replaced with\n        // something smarter.\n        delete locationWithProject.query._allp;\n        browserHistory.replace(locationWithProject);\n      }\n\n      this.setState({project, loadingGroup: false});\n\n      GroupStore.loadInitialData([data]);\n\n      if (trackView) {\n        this.trackView(project);\n      }\n    } catch (error) {\n      this.handleRequestError(error);\n    }\n  }\n\n  listener = GroupStore.listen(itemIds => this.onGroupChange(itemIds), undefined);\n\n  onGroupChange(itemIds: Set<string>) {\n    const id = this.props.params.groupId;\n    if (itemIds.has(id)) {\n      const group = GroupStore.get(id) as Group;\n      if (group) {\n        // TODO(ts) This needs a better approach. issueActions is splicing attributes onto\n        // group objects to cheat here.\n        if ((group as Group & {stale?: boolean}).stale) {\n          this.fetchData();\n          return;\n        }\n        this.setState({\n          group,\n        });\n      }\n    }\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    const {group} = this.state;\n    const defaultTitle = 'Sentry';\n\n    if (!group) {\n      return defaultTitle;\n    }\n\n    const {title} = getTitle(group, organization?.features);\n    const message = getMessage(group);\n\n    const {project} = group;\n    const eventDetails = `${organization.slug} - ${project.slug}`;\n\n    if (title && message) {\n      return `${title}: ${message} - ${eventDetails}`;\n    }\n\n    return `${title || message || defaultTitle} - ${eventDetails}`;\n  }\n\n  renderError() {\n    const {projects, location} = this.props;\n    const projectId = location.query.project;\n\n    const project = projects.find(proj => proj.id === projectId);\n\n    switch (this.state.errorType) {\n      case ERROR_TYPES.GROUP_NOT_FOUND:\n        return (\n          <StyledLoadingError\n            message={t('The issue you were looking for was not found.')}\n          />\n        );\n\n      case ERROR_TYPES.MISSING_MEMBERSHIP:\n        return (\n          <MissingProjectMembership\n            organization={this.props.organization}\n            project={project}\n          />\n        );\n      default:\n        return <StyledLoadingError onRetry={this.remountComponent} />;\n    }\n  }\n\n  renderContent(project: AvatarProject, group: Group) {\n    const {children, environments, organization} = this.props;\n    const {loadingEvent, eventError, event, replaysCount} = this.state;\n\n    const {currentTab, baseUrl} = this.getCurrentRouteInfo(group);\n    const groupReprocessingStatus = getGroupReprocessingStatus(group);\n\n    let childProps: Record<string, any> = {\n      environments,\n      group,\n      project,\n    };\n\n    if (currentTab === Tab.DETAILS) {\n      if (group.id !== event?.groupID && !eventError) {\n        // if user pastes only the event id into the url, but it's from another group, redirect to correct group/event\n        const redirectUrl = `/organizations/${organization.slug}/issues/${event?.groupID}/events/${event?.id}/`;\n        this.props.router.push(redirectUrl);\n      } else {\n        childProps = {\n          ...childProps,\n          event,\n          loadingEvent,\n          eventError,\n          groupReprocessingStatus,\n          onRetry: () => this.remountComponent(),\n        };\n      }\n    }\n\n    if (currentTab === Tab.TAGS) {\n      childProps = {...childProps, event, baseUrl};\n    }\n\n    return (\n      <Fragment>\n        <GroupHeader\n          groupReprocessingStatus={groupReprocessingStatus}\n          project={project as Project}\n          event={event}\n          group={group}\n          replaysCount={replaysCount}\n          currentTab={currentTab}\n          baseUrl={baseUrl}\n        />\n        {isValidElement(children) ? cloneElement(children, childProps) : children}\n      </Fragment>\n    );\n  }\n\n  renderPageContent() {\n    const {error: isError, group, project, loading} = this.state;\n    const isLoading = loading || (!group && !isError);\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    if (isError) {\n      return this.renderError();\n    }\n\n    const {organization} = this.props;\n\n    return (\n      <Projects\n        orgId={organization.slug}\n        slugs={[project?.slug ?? '']}\n        data-test-id=\"group-projects-container\"\n      >\n        {({projects, initiallyLoaded, fetchError}) =>\n          initiallyLoaded ? (\n            fetchError ? (\n              <StyledLoadingError message={t('Error loading the specified project')} />\n            ) : (\n              // TODO(ts): Update renderContent function to deal with empty group\n              this.renderContent(projects[0], group!)\n            )\n          ) : (\n            <LoadingIndicator />\n          )\n        }\n      </Projects>\n    );\n  }\n\n  render() {\n    const {project, group} = this.state;\n    const {organization} = this.props;\n    const isSampleError = group?.tags.some(tag => tag.key === 'sample_event');\n\n    return (\n      <Fragment>\n        {isSampleError && project && (\n          <SampleEventAlert project={project} organization={organization} />\n        )}\n        <SentryDocumentTitle noSuffix title={this.getTitle()}>\n          <PageFiltersContainer\n            skipLoadLastUsed\n            forceProject={project}\n            showDateSelector={false}\n            shouldForceProject\n            lockedMessageSubject={t('issue')}\n            showIssueStreamLink\n            showProjectSettingsLink\n            hideGlobalHeader\n          >\n            {this.renderPageContent()}\n          </PageFiltersContainer>\n        </SentryDocumentTitle>\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(Sentry.withProfiler(GroupDetails));\n\nconst StyledLoadingError = styled(LoadingError)`\n  margin: ${space(2)};\n`;\n","import {useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {PageFilters} from 'sentry/types';\nimport {analytics} from 'sentry/utils/analytics';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport GroupDetails from './groupDetails';\n\ntype Props = {\n  children: React.ReactNode;\n  isGlobalSelectionReady: boolean;\n  selection: PageFilters;\n} & RouteComponentProps<{groupId: string; orgId: string}, {}>;\n\nfunction OrganizationGroupDetails({selection, ...props}: Props) {\n  const organization = useOrganization();\n  const {projects} = useProjects();\n\n  const {params} = props;\n\n  useEffect(() => {\n    analytics('issue_page.viewed', {\n      group_id: parseInt(params.groupId, 10),\n      org_id: parseInt(organization.id, 10),\n    });\n  }, [organization, params.groupId]);\n\n  return (\n    <GroupDetails\n      key={`${params.groupId}-envs:${selection.environments.join(',')}`}\n      environments={selection.environments}\n      organization={organization}\n      projects={projects}\n      {...props}\n    />\n  );\n}\n\nexport default withPageFilters(OrganizationGroupDetails);\n","import orderBy from 'lodash/orderBy';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {Client} from 'sentry/api';\nimport {t, tct} from 'sentry/locale';\nimport {Group, GroupActivity} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\n/**\n * Fetches group data and mark as seen\n *\n * @param orgId organization slug\n * @param groupId groupId\n * @param eventId eventId or \"latest\" or \"oldest\"\n * @param envNames\n * @param projectId project slug required for eventId that is not latest or oldest\n */\nexport async function fetchGroupEvent(\n  api: Client,\n  orgId: string,\n  groupId: string,\n  eventId: string,\n  envNames: string[],\n  projectId?: string\n): Promise<Event> {\n  const url =\n    eventId === 'latest' || eventId === 'oldest'\n      ? `/issues/${groupId}/events/${eventId}/`\n      : `/projects/${orgId}/${projectId}/events/${eventId}/`;\n\n  const query: {environment?: string[]} = {};\n  if (envNames.length !== 0) {\n    query.environment = envNames;\n  }\n\n  const data = await api.requestPromise(url, {query});\n  return data;\n}\n\nexport function markEventSeen(\n  api: Client,\n  orgId: string,\n  projectId: string,\n  groupId: string\n) {\n  bulkUpdate(\n    api,\n    {\n      orgId,\n      projectId,\n      itemIds: [groupId],\n      failSilently: true,\n      data: {hasSeen: true},\n    },\n    {}\n  );\n}\n\nexport function fetchGroupUserReports(groupId: string, query: Record<string, string>) {\n  const api = new Client();\n\n  return api.requestPromise(`/issues/${groupId}/user-reports/`, {\n    includeAllArgs: true,\n    query,\n  });\n}\n\n/**\n * Returns the environment name for an event or null\n *\n * @param event\n */\nexport function getEventEnvironment(event: Event) {\n  const tag = event.tags.find(({key}) => key === 'environment');\n\n  return tag ? tag.value : null;\n}\n\nconst SUBSCRIPTION_REASONS = {\n  commented: t(\n    \"You're receiving workflow notifications because you have commented on this issue.\"\n  ),\n  assigned: t(\n    \"You're receiving workflow notifications because you were assigned to this issue.\"\n  ),\n  bookmarked: t(\n    \"You're receiving workflow notifications because you have bookmarked this issue.\"\n  ),\n  changed_status: t(\n    \"You're receiving workflow notifications because you have changed the status of this issue.\"\n  ),\n  mentioned: t(\n    \"You're receiving workflow notifications because you have been mentioned in this issue.\"\n  ),\n};\n\n/**\n * @param group\n * @param removeLinks add/remove links to subscription reasons text (default: false)\n * @returns Reason for subscription\n */\nexport function getSubscriptionReason(group: Group, removeLinks = false) {\n  if (group.subscriptionDetails && group.subscriptionDetails.disabled) {\n    return tct('You have [link:disabled workflow notifications] for this project.', {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    });\n  }\n\n  if (!group.isSubscribed) {\n    return t('Subscribe to workflow notifications for this issue');\n  }\n\n  if (group.subscriptionDetails) {\n    const {reason} = group.subscriptionDetails;\n    if (reason === 'unknown') {\n      return t(\n        \"You're receiving workflow notifications because you are subscribed to this issue.\"\n      );\n    }\n\n    if (reason && SUBSCRIPTION_REASONS.hasOwnProperty(reason)) {\n      return SUBSCRIPTION_REASONS[reason];\n    }\n  }\n\n  return tct(\n    \"You're receiving updates because you are [link:subscribed to workflow notifications] for this project.\",\n    {\n      link: removeLinks ? <span /> : <a href=\"/account/settings/notifications/\" />,\n    }\n  );\n}\n\nexport function getGroupMostRecentActivity(activities: GroupActivity[]) {\n  // Most recent activity\n  return orderBy([...activities], ({dateCreated}) => new Date(dateCreated), ['desc'])[0];\n}\n\nexport enum ReprocessingStatus {\n  REPROCESSED_AND_HASNT_EVENT = 'reprocessed_and_hasnt_event',\n  REPROCESSED_AND_HAS_EVENT = 'reprocessed_and_has_event',\n  REPROCESSING = 'reprocessing',\n  NO_STATUS = 'no_status',\n}\n\n// Reprocessing Checks\nexport function getGroupReprocessingStatus(\n  group: Group,\n  mostRecentActivity?: GroupActivity\n) {\n  const {status, count, activity: activities} = group;\n  const groupCount = Number(count);\n\n  switch (status) {\n    case 'reprocessing':\n      return ReprocessingStatus.REPROCESSING;\n    case 'unresolved': {\n      const groupMostRecentActivity =\n        mostRecentActivity ?? getGroupMostRecentActivity(activities);\n      if (groupMostRecentActivity?.type === 'reprocess') {\n        if (groupCount === 0) {\n          return ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT;\n        }\n        return ReprocessingStatus.REPROCESSED_AND_HAS_EVENT;\n      }\n      return ReprocessingStatus.NO_STATUS;\n    }\n    default:\n      return ReprocessingStatus.NO_STATUS;\n  }\n}\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n"],"names":["AvatarList","Component","render","className","users","avatarSize","maxVisibleAvatars","renderTooltip","typeMembers","tooltipOptions","this","props","visibleUsers","slice","numCollapsedUsers","length","position","AvatarListWrapper","title","CollapsedUsers","size","Plus","map","user","StyledAvatar","hasTooltip","id","email","Circle","p","css","theme","background","UserAvatar","gray200","gray300","Math","floor","DEFAULT_SIZE","level","error","BaseEventMessage","levelIndicatorSize","message","annotations","StyledErrorLevel","Message","EventMessage","ErrorLevel","space","overflowEllipsis","ListLink","_classNames","activeClassName","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","children","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","headerBackground","bannerBackground","SeenByList","seenBy","iconTooltip","t","iconPosition","activeUser","ConfigStore","displayUsers","filter","SeenByWrapper","Fragment","userDisplayName","moment","lastSeen","format","IconWrapper","skipWrapper","color","textColor","QueryError","constructor","errorMessage","originalError","getOriginalError","_GenericDiscoverQuery","isLoading","tableFetchID","tableData","pageLinks","prevProps","thisAPIPayload","getPayload","otherAPIPayload","isAPIPayloadSimilar","limit","route","cursor","parseError","detail","responseJSON","async","api","beforeFetch","afterFetch","didFetch","eventView","orgSlug","setError","isValid","url","Symbol","apiPayload","setState","clear","data","resp","doDiscoverQuery","state","prevState","getResponseHeader","err","_parseError","componentDidMount","fetchData","componentDidUpdate","refetchCondition","_shouldRefetchData","eventViewValidation","shouldRefetchExternal","shouldRefetchData","noPagination","referrer","location","payload","getRequestPayload","getEventsAPIPayload","per_page","includes","queryUserModified","decodeScalar","userModified","user_modified","Object","assign","queryExtras","childrenProps","GenericDiscoverQuery","organizationSlug","useContext","OrganizationContext","slug","performanceEventView","PerformanceEventViewContext","Error","_props","params","requestPromise","method","includeAllArgs","NATIVE_PLATFORMS","getPlatforms","exceptionValue","frames","stacktraceFrames","stacktrace","frame","platform","displayReprocessEventAction","orgFeatures","event","entries","exceptionEntry","find","entry","type","EntryType","values","some","value","mechanism","isMinidumpEvent","isAppleCrashReportEvent","stackTracePlatforms","exceptionEntryPlatforms","flatMap","stackTraceEntry","stackTraceEntryPlatforms","keys","key","threadEntryPlatforms","Set","getStackTracePlatforms","nativePlatform","has","isNativeEvent","PerformanceEventViewProvider","_usePerformanceEventView","createDefinedContext","name","options","strict","Context","createContext","displayName","Provider","context","recreateRoute","routes","stepBack","paths","path","lastRootIndex","routeIndex","indexOf","findLastIndex","baseRoute","search","hash","fullRoute","join","replaceRouterParams","ERROR_TYPES","ShareIssue","loading","onReshare","onToggle","isShared","shareUrl","hasConfirmModal","setHasConfirmModal","useState","shouldIgnoreClickOutside","customTitle","DropdownTitleContent","IndicatorDot","direction","onOpen","keepMenuOpen","DropdownContent","Header","Title","toggle","e","preventDefault","LoadingContainer","mini","ShareUrlContainer","onCancel","onConfirming","onConfirm","urlRef","useRef","UrlContainer","TextContainer","StyledAutoSelectText","ref","hideUnsupported","ClipboardButton","borderless","onClick","current","selectText","icon","ReshareButton","border","fontSizeMedium","active","AutoSelectText","Button","SubscribeAction","group","disabledNotifications","subscriptionDetails","getSubscriptionReason","tooltipProps","delay","priority","isSubscribed","Actions","shareBusy","project","organization","addLoadingMessage","bulkDelete","orgId","projectId","itemIds","complete","clearIndicators","browserHistory","trackIssueAction","bulkUpdate","status","inbox","openReprocessEventModal","groupId","newIsPublic","isPublic","trackAdvancedAnalyticsEvent","onShare","onUpdate","isBookmarked","getDiscoverUrl","uniqueId","GroupActions","request","discard","success","response","Body","Footer","closeModal","features","hookName","renderDisabled","alert","featureName","hasFeature","style","marginLeft","onDiscard","openModal","renderDiscardModal","analytics","org_id","parseInt","componentWillReceiveProps","nextProps","shareId","getShareUrl","host","protocol","window","discoverQuery","fields","orderby","projects","Number","version","range","EventView","getResultsViewUrlTarget","action","alert_date","alert_rule_id","alert_type","project_id","group_id","action_type","getUtcDateString","shared","addErrorMessage","handleClick","stopPropagation","bookmarkTitle","hasRelease","isResolved","isIgnored","Wrapper","offset","disableDropdown","latestRelease","projectSlug","isAutoResolved","statusDetails","autoResolved","onToggleShare","onToggleSubscribe","access","hasAccess","triggerProps","showChevron","items","label","hidden","onAction","onToggleBookmark","onReprocessEvent","onDelete","openDiscardModal","withApi","withOrganization","GroupHeader","fetchOrgMembers","then","memberList","member","getDisabledTabs","groupReprocessingStatus","ReprocessingStatus","Tab","currentTab","baseUrl","replaysCount","projectFeatures","organizationFeatures","userCount","hasGroupingTreeUI","hasSimilarView","hasEventAttachments","hasIssueIdBreadcrumbs","hasSeen","getMessage","eventRouteToObject","disabledTabs","disableActions","shortIdBreadCrumb","shortId","IssueBreadcrumbWrapper","BreadcrumbProjectBadge","hideName","avatarProps","tooltip","StyledTooltip","StyledShortId","StyledBreadcrumbs","crumbs","TitleWrapper","StyledIdBadge","hasGuideAnchor","InboxReasonWrapper","fontSize","StyledTagAndMessageWrapper","isUnhandled","logger","EventAnnotationWithSpace","annotation","i","dangerouslySetInnerHTML","__html","StatsWrapper","count","showUnderline","href","avatar","StyledProjectBadge","StyledListLink","numComments","text","userReportCount","Breadcrumbs","IdBadge","Tooltip","ShortId","family","TagAndMessageWrapper","breakpoints","small","ProjectBadge","EventAnnotation","SampleEventAlert","TextWrapper","toString","GroupDetails","initialState","loadingGroup","loadingEvent","updatedGroup","groupDetailsEndpoint","getGroupQuery","reprocessingNewRoute","getReprocessingNewRoute","handleRequestError","GroupStore","onGroupChange","getChildContext","fetchReplaysCount","updateReprocessingProgress","globalSelectionReadyChanged","isGlobalSelectionReady","canLoadEventEarly","eventId","getEvent","componentWillUnmount","callIfFunction","listener","refetchInterval","clearInterval","loadingReplaysCount","eventError","errorType","trackView","groupReleaseEndpoint","environments","fetchGroupEvent","Sentry","getCurrentRouteInfo","isEventRoute","hasReprocessingV2Feature","setInterval","refetchGroup","nextGroupId","reprocessingStatus","getGroupReprocessingStatus","environment","expand","collapse","getFetchDataRequestErrorType","releases","eventPromise","groupPromise","Promise","all","fetchGroupReleases","markEventSeen","locationWithProject","_allp","stale","getTitle","defaultTitle","eventDetails","renderError","proj","StyledLoadingError","onRetry","remountComponent","renderContent","childProps","groupID","redirectUrl","push","isValidElement","cloneElement","renderPageContent","isError","slugs","initiallyLoaded","fetchError","isSampleError","tags","tag","noSuffix","skipLoadLastUsed","forceProject","showDateSelector","shouldForceProject","lockedMessageSubject","showIssueStreamLink","showProjectSettingsLink","hideGlobalHeader","SentryTypes","PropTypes","LoadingError","OrganizationGroupDetails","selection","useOrganization","useProjects","useEffect","withPageFilters","envNames","failSilently","fetchGroupUserReports","Client","getEventEnvironment","SUBSCRIPTION_REASONS","commented","assigned","bookmarked","changed_status","mentioned","removeLinks","tct","link","reason","hasOwnProperty","getGroupMostRecentActivity","activities","orderBy","dateCreated","Date","mostRecentActivity","activity","groupCount","REPROCESSING","groupMostRecentActivity","REPROCESSED_AND_HASNT_EVENT","REPROCESSED_AND_HAS_EVENT","NO_STATUS","baseOrderBy","isArray","module","exports","collection","iteratees","orders","guard"],"sourceRoot":""}