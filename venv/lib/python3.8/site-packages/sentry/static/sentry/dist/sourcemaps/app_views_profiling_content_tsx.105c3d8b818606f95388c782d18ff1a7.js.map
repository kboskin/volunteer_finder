{"version":3,"file":"chunks/app_views_profiling_content_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/optionSelector.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/performanceDuration.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/utils/profiling/hooks/useProfileFilters.tsx","webpack:///./app/utils/profiling/hooks/useProfiles.tsx","webpack:///./app/utils/profiling/routes.tsx","webpack:///./app/utils/profiling/tableRenderer.tsx","webpack:///./app/utils/useLocation.tsx","webpack:///./app/components/profiling/profileTransactionsTable.tsx","webpack:///./app/components/charts/scatterChart.tsx","webpack:///./app/components/charts/series/scatterSeries.tsx","webpack:///./app/views/profiling/utils.tsx","webpack:///./app/views/profiling/landing/profilingScatterChart.tsx","webpack:///./app/views/profiling/content.tsx","webpack:///./app/utils/profiling/hooks/useProfileTransactions.tsx"],"sourcesContent":["import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is avialable but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Fragment, useMemo} from 'react';\nimport styled from '@emotion/styled';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport Truncate from 'sentry/components/truncate';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\n\ntype BaseProps = React.ComponentProps<typeof CompactSelect> & {\n  options: SelectValue<string>[];\n  title: string;\n  featureType?: 'alpha' | 'beta' | 'new';\n};\n\ntype SingleProps = BaseProps & {\n  onChange: (value: string) => void;\n  selected: string;\n  multiple?: false;\n};\ntype MultipleProps = BaseProps & {\n  multiple: true;\n  onChange: (value: string[]) => void;\n  selected: string[];\n};\n\nfunction OptionSelector({\n  options,\n  onChange,\n  selected,\n  title,\n  featureType,\n  multiple,\n  ...rest\n}: SingleProps | MultipleProps) {\n  const mappedOptions = useMemo(() => {\n    return options.map(opt => ({\n      ...opt,\n      label: <Truncate value={String(opt.label)} maxLength={60} expandDirection=\"left\" />,\n    }));\n  }, [options]);\n\n  function onValueChange(option) {\n    onChange(multiple ? option.map(o => o.value) : option.value);\n  }\n\n  function isOptionDisabled(option) {\n    return (\n      // Option is explicitly marked as disabled\n      option.disabled ||\n      // The user has reached the maximum number of selections (3), and the option hasn't\n      // yet been selected. These options should be disabled to visually indicate that the\n      // user has reached the max.\n      (multiple && selected.length === 3 && !selected.includes(option.value))\n    );\n  }\n\n  return (\n    <CompactSelect\n      options={mappedOptions}\n      value={selected}\n      onChange={onValueChange}\n      isOptionDisabled={isOptionDisabled}\n      multiple={multiple}\n      triggerProps={{\n        size: 'small',\n        borderless: true,\n        prefix: (\n          <Fragment>\n            {title}\n            {defined(featureType) ? <StyledFeatureBadge type={featureType} /> : null}\n          </Fragment>\n        ),\n      }}\n      placement=\"bottom right\"\n      {...rest}\n    />\n  );\n}\n\nconst StyledFeatureBadge = styled(FeatureBadge)`\n  margin-left: 0px;\n`;\n\nexport default OptionSelector;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nfunction SortLink({align, title, canSort, generateSortLink, onClick, direction}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  return (\n    <StyledLink align={align} to={target} onClick={onClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import Duration from 'sentry/components/duration';\nimport {defined} from 'sentry/utils';\n\ninterface DurationProps {\n  abbreviation?: boolean;\n}\n\ninterface SecondsProps extends DurationProps {\n  seconds: number;\n}\n\ninterface MillisecondsProps extends DurationProps {\n  milliseconds: number;\n}\n\ninterface NanosecondsProps extends DurationProps {\n  nanoseconds: number;\n}\n\ntype PerformanceDurationProps = SecondsProps | MillisecondsProps | NanosecondsProps;\n\nfunction isMilliseconds(props: PerformanceDurationProps): props is MillisecondsProps {\n  return defined((props as MillisecondsProps).milliseconds);\n}\n\nfunction isNanoseconds(props: PerformanceDurationProps): props is NanosecondsProps {\n  return defined((props as NanosecondsProps).nanoseconds);\n}\n\nfunction PerformanceDuration(props: PerformanceDurationProps) {\n  const normalizedSeconds = isNanoseconds(props)\n    ? props.nanoseconds / 1_000_000_000\n    : isMilliseconds(props)\n    ? props.milliseconds / 1000\n    : props.seconds;\n\n  return (\n    <Duration\n      abbreviation={props.abbreviation}\n      seconds={normalizedSeconds}\n      fixedDigits={2}\n    />\n  );\n}\n\nexport default PerformanceDuration;\n","import {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(value: number | null, seriesName: string = ''): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = value.toFixed(0);\n  return t('%sms', label);\n}\n","import {useEffect, useState} from 'react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {Organization, PageFilters, Tag} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype ProfileFilters = Record<string, Tag>;\n\ninterface ProfileFiltersOptions {\n  query: string;\n  selection?: PageFilters;\n}\n\nfunction useProfileFilters({query, selection}: ProfileFiltersOptions): ProfileFilters {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [profileFilters, setProfileFilters] = useState<ProfileFilters>({});\n\n  useEffect(() => {\n    if (!selection) {\n      return undefined;\n    }\n\n    fetchProfileFilters(api, organization, query, selection).then(response => {\n      const withPredefinedFilters = response.reduce(\n        (filters: ProfileFilters, tag: Tag) => {\n          filters[tag.key] = {\n            ...tag,\n            // predefined allows us to specify a list of possible values\n            predefined: true,\n          };\n          return filters;\n        },\n        {}\n      );\n\n      setProfileFilters(withPredefinedFilters);\n    });\n\n    return () => api.clear();\n  }, [api, organization, query, selection]);\n\n  return profileFilters;\n}\n\nfunction fetchProfileFilters(\n  api: Client,\n  organization: Organization,\n  query: string,\n  selection: PageFilters\n): Promise<[Tag]> {\n  return api.requestPromise(`/organizations/${organization.slug}/profiling/filters/`, {\n    method: 'GET',\n    query: {\n      query,\n      project: selection.projects,\n      environment: selection.environments,\n      ...normalizeDateTimeParams(selection.datetime),\n    },\n  });\n}\n\nexport {useProfileFilters};\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, RequestState} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\nimport {defined} from 'sentry/utils';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype ProfilesResult = {\n  pageLinks: string | null;\n  traces: Trace[];\n};\n\ninterface UseProfilesOptions {\n  query: string;\n  cursor?: string;\n  limit?: number;\n  selection?: PageFilters;\n}\n\nfunction useProfiles({\n  cursor,\n  limit,\n  query,\n  selection,\n}: UseProfilesOptions): RequestState<ProfilesResult> {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [requestState, setRequestState] = useState<RequestState<ProfilesResult>>({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    if (!defined(selection)) {\n      return undefined;\n    }\n\n    setRequestState({type: 'loading'});\n\n    fetchTraces(api, organization, {cursor, limit, query, selection})\n      .then(([traces, , response]) => {\n        setRequestState({\n          type: 'resolved',\n          data: {\n            traces,\n            pageLinks: response?.getResponseHeader('Link') ?? null,\n          },\n        });\n      })\n      .catch(err => {\n        setRequestState({type: 'errored', error: t('Error: Unable to load profiles')});\n        Sentry.captureException(err);\n      });\n\n    return () => api.clear();\n  }, [api, organization, cursor, limit, query, selection]);\n\n  return requestState;\n}\n\nfunction fetchTraces(\n  api: Client,\n  organization: Organization,\n  {\n    cursor,\n    limit,\n    query,\n    selection,\n  }: {\n    cursor: string | undefined;\n    limit: number | undefined;\n    query: string;\n    selection: PageFilters;\n  }\n) {\n  return api.requestPromise(`/organizations/${organization.slug}/profiling/profiles/`, {\n    method: 'GET',\n    includeAllArgs: true,\n    query: {\n      cursor,\n      query,\n      per_page: limit,\n      project: selection.projects,\n      environment: selection.environments,\n      ...normalizeDateTimeParams(selection.datetime),\n    },\n  });\n}\n\nexport {useProfiles};\n","import {Location, LocationDescriptor, Path} from 'history';\n\nimport {Organization, Project} from 'sentry/types';\nimport {Trace} from 'sentry/types/profiling/core';\n\nexport function generateProfilingRoute({orgSlug}: {orgSlug: Organization['slug']}): Path {\n  return `/organizations/${orgSlug}/profiling/`;\n}\n\nexport function generateProfileSummaryRoute({\n  orgSlug,\n  projectSlug,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n}): Path {\n  return `/organizations/${orgSlug}/profiling/summary/${projectSlug}/`;\n}\n\nexport function generateProfileFlamegraphRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/flamegraph/`;\n}\n\nexport function generateProfileDetailsRoute({\n  orgSlug,\n  projectSlug,\n  profileId,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n}): string {\n  return `/organizations/${orgSlug}/profiling/profile/${projectSlug}/${profileId}/details/`;\n}\n\nexport function generateProfilingRouteWithQuery({\n  location,\n  orgSlug,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfilingRoute({orgSlug});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileSummaryRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  transaction,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  projectSlug: Project['slug'];\n  transaction: string;\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileSummaryRoute({orgSlug, projectSlug});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n      transaction,\n    },\n  };\n}\n\nexport function generateProfileFlamegraphRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileFlamegraphRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n\nexport function generateProfileDetailsRouteWithQuery({\n  location,\n  orgSlug,\n  projectSlug,\n  profileId,\n  query,\n}: {\n  orgSlug: Organization['slug'];\n  profileId: Trace['id'];\n  projectSlug: Project['slug'];\n  location?: Location;\n  query?: Location['query'];\n}): LocationDescriptor {\n  const pathname = generateProfileDetailsRoute({orgSlug, projectSlug, profileId});\n  return {\n    pathname,\n    query: {\n      ...location?.query,\n      ...query,\n    },\n  };\n}\n","import {GridColumnOrder} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\n\nexport function renderTableHead<K>(rightAlignedColumns: Set<K>) {\n  return (column: GridColumnOrder<K>, _columnIndex: number) => {\n    return (\n      <SortLink\n        align={rightAlignedColumns.has(column.key) ? 'right' : 'left'}\n        title={column.name}\n        direction={undefined}\n        canSort={false}\n        generateSortLink={() => undefined}\n      />\n    );\n  };\n}\n","import {Location, Query} from 'history';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\ntype DefaultQuery<T = string> = {\n  [key: string]: T | T[] | null | undefined;\n};\n\nexport function useLocation<Q extends Query = DefaultQuery>(): Location<Q> {\n  const route = useRouteContext();\n  return route.location;\n}\n","import {useMemo} from 'react';\n\nimport Count from 'sentry/components/count';\nimport DateTime from 'sentry/components/dateTime';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport PerformanceDuration from 'sentry/components/performanceDuration';\nimport {t} from 'sentry/locale';\nimport {ProfileTransaction} from 'sentry/types/profiling/core';\nimport {defined} from 'sentry/utils';\nimport {Container, NumberContainer} from 'sentry/utils/discover/styles';\nimport {generateProfileSummaryRouteWithQuery} from 'sentry/utils/profiling/routes';\nimport {renderTableHead} from 'sentry/utils/profiling/tableRenderer';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\ninterface ProfileTransactionsTableProps {\n  error: string | null;\n  isLoading: boolean;\n  transactions: ProfileTransaction[];\n}\n\nfunction ProfileTransactionsTable(props: ProfileTransactionsTableProps) {\n  const location = useLocation();\n  const organization = useOrganization();\n  const {projects} = useProjects();\n\n  const transactions: TableDataRow[] = useMemo(() => {\n    return props.transactions.map(transaction => {\n      const project = projects.find(proj => proj.id === transaction.project_id);\n      return {\n        transaction: project ? (\n          <Link\n            to={generateProfileSummaryRouteWithQuery({\n              location,\n              orgSlug: organization.slug,\n              projectSlug: project.slug,\n              transaction: transaction.name,\n            })}\n          >\n            {transaction.name}\n          </Link>\n        ) : (\n          transaction.name\n        ),\n        count: transaction.profiles_count,\n        project,\n        p50: transaction.duration_ms.p50,\n        p75: transaction.duration_ms.p75,\n        p90: transaction.duration_ms.p90,\n        p95: transaction.duration_ms.p95,\n        p99: transaction.duration_ms.p99,\n        lastSeen: transaction.last_profile_at,\n      };\n    });\n  }, [props.transactions, location, organization, projects]);\n\n  return (\n    <GridEditable\n      isLoading={props.isLoading}\n      error={props.error}\n      data={transactions}\n      columnOrder={COLUMN_ORDER.map(key => COLUMNS[key])}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell: renderTableHead(RIGHT_ALIGNED_COLUMNS),\n        renderBodyCell: renderTableBody,\n      }}\n      location={location}\n    />\n  );\n}\n\nconst RIGHT_ALIGNED_COLUMNS = new Set<TableColumnKey>([\n  'count',\n  'p50',\n  'p75',\n  'p90',\n  'p95',\n  'p99',\n]);\n\nfunction renderTableBody(\n  column: TableColumn,\n  dataRow: TableDataRow,\n  rowIndex: number,\n  columnIndex: number\n) {\n  return (\n    <ProfilingTransactionsTableCell\n      column={column}\n      dataRow={dataRow}\n      rowIndex={rowIndex}\n      columnIndex={columnIndex}\n    />\n  );\n}\n\ninterface ProfilingTransactionsTableCellProps {\n  column: TableColumn;\n  columnIndex: number;\n  dataRow: TableDataRow;\n  rowIndex: number;\n}\n\nfunction ProfilingTransactionsTableCell({\n  column,\n  dataRow,\n}: ProfilingTransactionsTableCellProps) {\n  const value = dataRow[column.key];\n\n  switch (column.key) {\n    case 'project':\n      if (!defined(value)) {\n        // should never happen but just in case\n        return <Container>{t('n/a')}</Container>;\n      }\n\n      return (\n        <Container>\n          <ProjectBadge project={value} avatarSize={16} />\n        </Container>\n      );\n    case 'count':\n      return (\n        <NumberContainer>\n          <Count value={value} />\n        </NumberContainer>\n      );\n    case 'p50':\n    case 'p75':\n    case 'p90':\n    case 'p95':\n    case 'p99':\n      return (\n        <NumberContainer>\n          <PerformanceDuration milliseconds={value} abbreviation />\n        </NumberContainer>\n      );\n    case 'lastSeen':\n      return (\n        <Container>\n          <DateTime date={value} />\n        </Container>\n      );\n    default:\n      return <Container>{value}</Container>;\n  }\n}\n\ntype TableColumnKey =\n  | 'transaction'\n  | 'count'\n  | 'project'\n  | 'p50'\n  | 'p75'\n  | 'p90'\n  | 'p95'\n  | 'p99'\n  | 'lastSeen';\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\nconst COLUMN_ORDER: TableColumnKey[] = [\n  'transaction',\n  'project',\n  'lastSeen',\n  'p75',\n  'p95',\n  'count',\n];\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  transaction: {\n    key: 'transaction',\n    name: t('Transaction'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  count: {\n    key: 'count',\n    name: t('Count'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  project: {\n    key: 'project',\n    name: t('Project'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p50: {\n    key: 'p50',\n    name: t('P50'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p75: {\n    key: 'p75',\n    name: t('P75'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p90: {\n    key: 'p90',\n    name: t('P90'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p95: {\n    key: 'p95',\n    name: t('P95'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  p99: {\n    key: 'p99',\n    name: t('P99'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  lastSeen: {\n    key: 'lastSeen',\n    name: t('Last Seen'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nexport {ProfileTransactionsTable};\n","import {Series} from 'sentry/types/echarts';\n\nimport ScatterSeries from './series/scatterSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type ScatterChartSeries = Series;\n\ntype Props = Omit<ChartProps, 'series'> & {\n  series: ScatterChartSeries[];\n};\n\nfunction ScatterChart({series, ...props}: Props) {\n  return (\n    <BaseChart\n      {...props}\n      xAxis={{\n        // do not want the axis pointer when working with scatter charts\n        axisPointer: {\n          show: false,\n          ...props.xAxis?.axisPointer,\n        },\n        ...props.xAxis,\n      }}\n      series={series.map(({seriesName, data, ...options}) =>\n        ScatterSeries({\n          name: seriesName,\n          data: data.map(({name, value}) => [name, value]),\n          ...options,\n          animation: false,\n        })\n      )}\n    />\n  );\n}\n\nexport default ScatterChart;\n","import 'echarts/lib/chart/scatter';\n\nimport type {ScatterSeriesOption} from 'echarts';\n\nimport theme from 'sentry/utils/theme';\n\nexport default function ScatterSeries(props: ScatterSeriesOption): ScatterSeriesOption {\n  return {\n    symbolSize: theme.charts.symbolSize,\n    ...props,\n    type: 'scatter',\n    emphasis: {\n      ...props.emphasis,\n      scale: true,\n    },\n  };\n}\n","import {Location} from 'history';\n\nimport {GridColumnOrder} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport {t} from 'sentry/locale';\nimport {SelectValue} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {decodeScalar} from 'sentry/utils/queryString';\n\ntype ColorEncoding =\n  | 'version' // this will use a concatenation of `app_version_name` and `app_version`\n  | 'device_manufacturer'\n  | 'device_model'\n  | 'device_os_version'\n  | 'transaction_name';\n\nconst COLOR_ENCODING_LABELS: Record<ColorEncoding, string> = {\n  version: t('App Version'),\n  device_manufacturer: t('Device Manufacturer'),\n  device_model: t('Device Model'),\n  device_os_version: t('Device Os Version'),\n  transaction_name: t('Transaction Name'),\n};\n\nexport const COLOR_ENCODINGS: SelectValue<ColorEncoding>[] = Object.entries(\n  COLOR_ENCODING_LABELS\n).map(([value, label]) => ({label, value: value as ColorEncoding}));\n\nexport function getColorEncodingFromLocation(location: Location): ColorEncoding {\n  const colorCoding = decodeScalar(location.query.colorEncoding);\n\n  if (defined(colorCoding) && COLOR_ENCODING_LABELS.hasOwnProperty(colorCoding)) {\n    return colorCoding as ColorEncoding;\n  }\n\n  return 'transaction_name';\n}\n\nexport function renderTableHeader<K>(rightAlignedColumns: Set<K>) {\n  return (column: GridColumnOrder<K>, _columnIndex: number) => {\n    return (\n      <SortLink\n        align={rightAlignedColumns.has(column.key) ? 'right' : 'left'}\n        title={column.name}\n        direction={undefined}\n        canSort={false}\n        generateSortLink={() => undefined}\n      />\n    );\n  };\n}\n","import {useCallback, useMemo} from 'react';\nimport {browserHistory, withRouter, WithRouterProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport type {TooltipComponentFormatterCallback} from 'echarts';\nimport {Location} from 'history';\nimport moment from 'moment';\nimport momentTimezone from 'moment-timezone';\n\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport OptionSelector from 'sentry/components/charts/optionSelector';\nimport ScatterChart from 'sentry/components/charts/scatterChart';\nimport {\n  ChartContainer,\n  ChartControls,\n  InlineContainer,\n} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {getSeriesSelection} from 'sentry/components/charts/utils';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, PageFilters, Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {Trace} from 'sentry/types/profiling/core';\nimport {defined} from 'sentry/utils';\nimport {axisLabelFormatter} from 'sentry/utils/discover/charts';\nimport {getDuration} from 'sentry/utils/formatters';\nimport {generateProfileDetailsRoute} from 'sentry/utils/profiling/routes';\nimport {Theme} from 'sentry/utils/theme';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {COLOR_ENCODINGS, getColorEncodingFromLocation} from '../utils';\n\ninterface ProfilingScatterChartProps extends WithRouterProps {\n  datetime: PageFilters['datetime'];\n  isLoading: boolean;\n  traces: Trace[];\n}\n\nfunction ProfilingScatterChart({\n  router,\n  location,\n  datetime,\n  isLoading,\n  traces,\n}: ProfilingScatterChartProps) {\n  const organization = useOrganization();\n  const {projects} = useProjects();\n  const theme = useTheme();\n\n  const colorEncoding = useMemo(() => getColorEncodingFromLocation(location), [location]);\n\n  const data: Record<string, Trace[]> = useMemo(() => {\n    const dataMap = {};\n    for (const row of traces) {\n      const seriesName =\n        colorEncoding === 'version'\n          ? `${row.version_name} (build ${row.version_code})`\n          : row[colorEncoding];\n      if (!dataMap[seriesName]) {\n        dataMap[seriesName] = [];\n      }\n      dataMap[seriesName].push(row);\n    }\n    return dataMap;\n  }, [colorEncoding, traces]);\n\n  const series: Series[] = useMemo(() => {\n    return Object.entries(data).map(([seriesName, seriesData]) => {\n      return {\n        seriesName,\n        data: seriesData.map(row => ({\n          name: row.timestamp * 1000,\n          value: row.trace_duration_ms,\n        })),\n      };\n    });\n  }, [data]);\n\n  const chartOptions = useMemo(\n    () =>\n      makeScatterChartOptions({\n        data,\n        datetime,\n        location,\n        organization,\n        projects,\n        theme,\n      }),\n    [location, datetime, theme, data, organization, projects]\n  );\n\n  const handleColorEncodingChange = useCallback(\n    value => {\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          colorEncoding: value,\n        },\n      });\n    },\n    [location]\n  );\n\n  return (\n    <Panel>\n      <ChartContainer>\n        <ChartZoom\n          router={router}\n          period={datetime.period}\n          start={datetime.start}\n          end={datetime.end}\n          utc={datetime.utc}\n        >\n          {zoomRenderProps => {\n            return (\n              <TransitionChart loading={isLoading} reloading={isLoading}>\n                <TransparentLoadingMask visible={isLoading} />\n                <ScatterChart series={series} {...chartOptions} {...zoomRenderProps} />\n              </TransitionChart>\n            );\n          }}\n        </ChartZoom>\n      </ChartContainer>\n      <ChartControls>\n        <InlineContainer>\n          <OptionSelector\n            title={t('Group By')}\n            selected={colorEncoding}\n            options={COLOR_ENCODINGS}\n            onChange={handleColorEncodingChange}\n          />\n        </InlineContainer>\n      </ChartControls>\n    </Panel>\n  );\n}\n\nfunction makeScatterChartOptions({\n  data,\n  datetime,\n  location,\n  organization,\n  projects,\n  theme,\n}: {\n  /**\n   * The data is a mapping from the series name to a list of traces in the series. In particular,\n   * the order of the traces must match the order of the data in the series in the scatter plot.\n   */\n  data: Record<string, Trace[]>;\n  datetime: PageFilters['datetime'];\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n  theme: Theme;\n}) {\n  const user = ConfigStore.get('user');\n  const options = user?.options;\n\n  const _tooltipFormatter: TooltipComponentFormatterCallback<any> = seriesParams => {\n    const dataPoint = data[seriesParams.seriesName]?.[seriesParams.dataIndex];\n    const project = dataPoint && projects.find(proj => proj.id === dataPoint.project_id);\n\n    const entries = [\n      {label: t('Project'), value: project?.slug},\n      {label: t('App Version'), value: dataPoint?.version_code},\n      {\n        label: t('Duration'),\n        value: defined(dataPoint?.trace_duration_ms)\n          ? getDuration(dataPoint?.trace_duration_ms / 1000, 2, true)\n          : null,\n      },\n      {label: t('Transaction'), value: dataPoint?.transaction_name},\n      {label: t('Device Model'), value: dataPoint?.device_model},\n      {label: t('Device Classification'), value: dataPoint?.device_classification},\n      {label: t('Device Manufacturer'), value: dataPoint?.device_manufacturer},\n    ].map(\n      ({label, value}) =>\n        `<div><span class=\"tooltip-label\"><strong>${label}</strong></span> ${\n          value ?? t('Unknown')\n        }</div>`\n    );\n\n    const date = defined(dataPoint?.timestamp)\n      ? momentTimezone\n          .tz(dataPoint?.timestamp * 1000, options?.timezone ?? '')\n          .format('lll')\n      : null;\n\n    return [\n      '<div class=\"tooltip-series\">',\n      ...entries,\n      '</div>',\n      `<div class=\"tooltip-date\">${date}</div>`,\n      '<div class=\"tooltip-arrow\"></div>',\n    ].join('');\n  };\n\n  const now = moment.utc();\n  const end = (defined(datetime.end) ? moment.utc(datetime.end) : now).valueOf();\n  const start = (\n    defined(datetime.start)\n      ? moment.utc(datetime.start)\n      : now.subtract(\n          parseInt(datetime.period ?? '14', 10),\n          datetime.period?.charAt(datetime.period.length - 1) === 'h' ? 'hours' : 'days'\n        )\n  ).valueOf();\n\n  return {\n    grid: {\n      left: '10px',\n      right: '10px',\n      top: '40px',\n      bottom: '0px',\n    },\n    tooltip: {\n      trigger: 'item' as const,\n      formatter: _tooltipFormatter,\n    },\n    xAxis: {\n      // need to specify a min/max on the date range here\n      // or echarts will use the min/max from the series\n      min: start,\n      max: end,\n    },\n    yAxis: {\n      axisLabel: {\n        color: theme.chartLabel,\n        formatter: (value: number) => axisLabelFormatter(value, 'p50()'),\n      },\n    },\n    legend: {\n      right: 10,\n      top: 5,\n      selected: getSeriesSelection(location),\n    },\n    onClick: params => {\n      const dataPoint = data[params.seriesName]?.[params.dataIndex];\n      if (!defined(dataPoint)) {\n        return;\n      }\n      const project = projects.find(proj => proj.id === dataPoint.project_id);\n      if (!defined(project)) {\n        return;\n      }\n      browserHistory.push(\n        generateProfileDetailsRoute({\n          orgSlug: organization.slug,\n          projectSlug: project.slug,\n          profileId: dataPoint.id,\n        })\n      );\n    },\n  };\n}\n\nconst ProfilingScatterChartWithRouter = withRouter(ProfilingScatterChart);\n\nexport {ProfilingScatterChartWithRouter as ProfilingScatterChart};\n","import {useCallback} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Alert from 'sentry/components/alert';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport {ProfileTransactionsTable} from 'sentry/components/profiling/profileTransactionsTable';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport SmartSearchBar, {SmartSearchBarProps} from 'sentry/components/smartSearchBar';\nimport {MAX_QUERY_LENGTH} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {useProfileFilters} from 'sentry/utils/profiling/hooks/useProfileFilters';\nimport {useProfiles} from 'sentry/utils/profiling/hooks/useProfiles';\nimport {useProfileTransactions} from 'sentry/utils/profiling/hooks/useProfileTransactions';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport usePageFilters from 'sentry/utils/usePageFilters';\n\nimport {ProfilingScatterChart} from './landing/profilingScatterChart';\n\ninterface ProfilingContentProps {\n  location: Location;\n}\n\nfunction ProfilingContent({location}: ProfilingContentProps) {\n  const organization = useOrganization();\n  const {selection} = usePageFilters();\n  const cursor = decodeScalar(location.query.cursor);\n  const query = decodeScalar(location.query.query, '');\n  const profileFilters = useProfileFilters({query: '', selection});\n  const profiles = useProfiles({cursor, query, selection});\n  const transactions = useProfileTransactions({cursor, query, selection});\n\n  const handleSearch: SmartSearchBarProps['onSearch'] = useCallback(\n    (searchQuery: string) => {\n      browserHistory.push({\n        ...location,\n        query: {\n          ...location.query,\n          cursor: undefined,\n          query: searchQuery || undefined,\n        },\n      });\n    },\n    [location]\n  );\n\n  return (\n    <SentryDocumentTitle title={t('Profiling')} orgSlug={organization.slug}>\n      <PageFiltersContainer hideGlobalHeader>\n        <NoProjectMessage organization={organization}>\n          <StyledPageContent>\n            <Layout.Header>\n              <Layout.HeaderContent>\n                <StyledHeading>{t('Profiling')}</StyledHeading>\n              </Layout.HeaderContent>\n            </Layout.Header>\n            <Layout.Body>\n              <Layout.Main fullWidth>\n                <ActionBar>\n                  <PageFilterBar condensed>\n                    <ProjectPageFilter />\n                    <EnvironmentPageFilter />\n                    <DatePageFilter alignDropdown=\"left\" />\n                  </PageFilterBar>\n                  <SmartSearchBar\n                    organization={organization}\n                    hasRecentSearches\n                    searchSource=\"profile_landing\"\n                    supportedTags={profileFilters}\n                    query={query}\n                    onSearch={handleSearch}\n                    maxQueryLength={MAX_QUERY_LENGTH}\n                  />\n                </ActionBar>\n                {profiles.type === 'errored' && (\n                  <Alert type=\"error\" showIcon>\n                    {t('Unable to load profiles')}\n                  </Alert>\n                )}\n                <ProfilingScatterChart\n                  datetime={\n                    selection?.datetime ?? {\n                      start: null,\n                      end: null,\n                      period: null,\n                      utc: null,\n                    }\n                  }\n                  traces={profiles.type === 'resolved' ? profiles.data.traces : []}\n                  isLoading={profiles.type === 'loading'}\n                />\n                <ProfileTransactionsTable\n                  error={\n                    transactions.type === 'errored' ? t('Unable to load profiles') : null\n                  }\n                  isLoading={transactions.type === 'loading'}\n                  transactions={\n                    transactions.type === 'resolved' ? transactions.data.transactions : []\n                  }\n                />\n                <Pagination\n                  pageLinks={\n                    transactions.type === 'resolved' ? transactions.data.pageLinks : null\n                  }\n                />\n              </Layout.Main>\n            </Layout.Body>\n          </StyledPageContent>\n        </NoProjectMessage>\n      </PageFiltersContainer>\n    </SentryDocumentTitle>\n  );\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledHeading = styled(PageHeading)`\n  line-height: 40px;\n`;\n\nconst ActionBar = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: min-content auto;\n  margin-bottom: ${space(2)};\n`;\n\nexport default ProfilingContent;\n","import {useEffect, useState} from 'react';\nimport * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters, RequestState} from 'sentry/types';\nimport {ProfileTransaction} from 'sentry/types/profiling/core';\nimport {defined} from 'sentry/utils';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype ProfileTransactionsResult = {\n  pageLinks: string | null;\n  transactions: ProfileTransaction[];\n};\n\ninterface UseProfileTransactionsOptions {\n  query: string;\n  cursor?: string;\n  limit?: number;\n  selection?: PageFilters;\n}\n\nfunction useProfileTransactions({\n  cursor,\n  limit,\n  query,\n  selection,\n}: UseProfileTransactionsOptions): RequestState<ProfileTransactionsResult> {\n  const api = useApi();\n  const organization = useOrganization();\n\n  const [requestState, setRequestState] = useState<\n    RequestState<ProfileTransactionsResult>\n  >({\n    type: 'initial',\n  });\n\n  useEffect(() => {\n    if (!defined(selection)) {\n      return undefined;\n    }\n\n    setRequestState({type: 'loading'});\n\n    fetchTransactions(api, organization, {cursor, limit, query, selection})\n      .then(([transactions, , response]) => {\n        setRequestState({\n          type: 'resolved',\n          data: {\n            transactions,\n            pageLinks: response?.getResponseHeader('Link') ?? null,\n          },\n        });\n      })\n      .catch(err => {\n        setRequestState({\n          type: 'errored',\n          error: t('Error: Unable to load transactions'),\n        });\n        Sentry.captureException(err);\n      });\n\n    return () => api.clear();\n  }, [api, organization, cursor, limit, query, selection]);\n\n  return requestState;\n}\n\nfunction fetchTransactions(\n  api: Client,\n  organization: Organization,\n  {\n    cursor,\n    limit,\n    query,\n    selection,\n  }: {\n    cursor: string | undefined;\n    limit: number | undefined;\n    query: string;\n    selection: PageFilters;\n  }\n) {\n  return api.requestPromise(\n    `/organizations/${organization.slug}/profiling/transactions/`,\n    {\n      method: 'GET',\n      includeAllArgs: true,\n      query: {\n        cursor,\n        query,\n        per_page: limit,\n        project: selection.projects,\n        environment: selection.environments,\n        ...normalizeDateTimeParams(selection.datetime),\n      },\n    }\n  );\n}\n\nexport {useProfileTransactions};\n"],"names":["DEFAULT","realtime","showDetail","left","right","bottom","DataZoomSlider","props","Array","isArray","getDate","date","moment","format","ChartZoom","Component","constructor","super","this","currentPeriod","period","start","end","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","callIfFunction","zooming","newQuery","location","query","pageStart","getUtcDateString","undefined","pageEnd","pageStatsPeriod","qs","pathname","updateDateTime","getUtcToLocalDateObject","saveCurrentPeriod","chart","onChartReady","evt","length","setPeriod","onRestore","model","getModel","startValue","endValue","_payload","batch","previousPeriod","pop","onDataZoom","_props","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","onFinished","componentDidUpdate","disabled","render","utc","_utc","_start","_end","children","xAxisIndex","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","handleChartReady","DataZoomInside","showTimeInTooltip","toolBox","ToolBox","title","back","iconStyle","borderWidth","color","opacity","handleDataZoom","handleChartFinished","handleZoomRestore","zoomOnMouseWheel","zoomLock","throttle","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","LoadingPanel","height","_height","p","defaultProps","OptionSelector","onChange","selected","featureType","multiple","rest","mappedOptions","useMemo","map","opt","label","value","String","maxLength","expandDirection","option","o","isOptionDisabled","includes","triggerProps","size","borderless","prefix","Fragment","defined","StyledFeatureBadge","placement","FeatureBadge","TransitionChart","prevReloading","reloading","prevLoading","loading","state","nextReloading","nextLoading","className","visible","other","SortLink","align","canSort","generateSortLink","onClick","direction","target","StyledNonLink","arrow","StyledIconArrow","StyledLink","to","forwardProps","omit","IconArrow","theme","backgroundSecondary","borderRadius","PerformanceDuration","normalizedSeconds","nanoseconds","isNanoseconds","milliseconds","isMilliseconds","seconds","abbreviation","fixedDigits","tooltipFormatter","seriesName","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","formatAbbreviatedNumber","axisDuration","WEEK","toFixed","t","DAY","HOUR","MINUTE","SECOND","useProfileFilters","selection","api","useApi","organization","useOrganization","profileFilters","setProfileFilters","useState","useEffect","requestPromise","slug","method","project","projects","environment","environments","normalizeDateTimeParams","datetime","fetchProfileFilters","then","response","withPredefinedFilters","reduce","filters","tag","predefined","clear","useProfiles","cursor","limit","requestState","setRequestState","includeAllArgs","per_page","fetchTraces","traces","data","pageLinks","getResponseHeader","catch","err","error","Sentry","generateProfileDetailsRoute","orgSlug","projectSlug","profileId","generateProfilingRouteWithQuery","generateProfilingRoute","generateProfileSummaryRouteWithQuery","transaction","generateProfileSummaryRoute","generateProfileFlamegraphRouteWithQuery","generateProfileFlamegraphRoute","generateProfileDetailsRouteWithQuery","renderTableHead","rightAlignedColumns","column","_columnIndex","has","name","useLocation","useRouteContext","ProfileTransactionsTable","useProjects","transactions","proj","id","project_id","count","profiles_count","p50","duration_ms","p75","p90","p95","p99","lastSeen","last_profile_at","isLoading","columnOrder","COLUMN_ORDER","COLUMNS","columnSortBy","grid","renderHeadCell","RIGHT_ALIGNED_COLUMNS","renderBodyCell","renderTableBody","Set","dataRow","rowIndex","columnIndex","ProfilingTransactionsTableCell","avatarSize","width","COL_WIDTH_UNDEFINED","ScatterChart","series","xAxis","axisPointer","show","symbolSize","emphasis","scale","ScatterSeries","animation","COLOR_ENCODING_LABELS","version","device_manufacturer","device_model","device_os_version","transaction_name","COLOR_ENCODINGS","Object","entries","ProfilingScatterChart","useTheme","colorEncoding","colorCoding","decodeScalar","hasOwnProperty","getColorEncodingFromLocation","dataMap","row","version_name","version_code","seriesData","timestamp","trace_duration_ms","chartOptions","user","ConfigStore","now","valueOf","tooltip","trigger","formatter","seriesParams","dataPoint","dataIndex","device_classification","momentTimezone","timezone","join","min","subtract","parseInt","charAt","max","yAxis","axisLabel","chartLabel","legend","getSeriesSelection","params","browserHistory","makeScatterChartOptions","handleColorEncodingChange","useCallback","zoomRenderProps","ProfilingScatterChartWithRouter","withRouter","ProfilingContent","usePageFilters","profiles","fetchTransactions","useProfileTransactions","handleSearch","searchQuery","hideGlobalHeader","StyledPageContent","StyledHeading","fullWidth","ActionBar","condensed","alignDropdown","hasRecentSearches","searchSource","supportedTags","onSearch","maxQueryLength","MAX_QUERY_LENGTH","showIcon","PageContent","PageHeading","space"],"sourceRoot":""}