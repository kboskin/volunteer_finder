{"version":3,"file":"chunks/app_views_releases_list_index_tsx-node_modules_lodash_mean_js-node_modules_lodash_omitBy_js-i-4b5f7e.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/avatar/avatarList.tsx","webpack:///./app/components/charts/components/dataZoomSlider.tsx","webpack:///./app/components/charts/chartZoom.tsx","webpack:///./app/components/charts/components/dataZoomInside.tsx","webpack:///./app/components/charts/components/toolBox.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/charts/loadingPanel.tsx","webpack:///./app/components/charts/transitionChart.tsx","webpack:///./app/components/charts/transparentLoadingMask.tsx","webpack:///./app/components/loadingMask.tsx","webpack:///./app/components/notAvailable.tsx","webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/releases/detail/overview/releaseArchivedNotice.tsx","webpack:///./app/views/releases/list/releaseCard/releaseCardCommits.tsx","webpack:///./app/views/releases/list/releasesDropdown.tsx","webpack:///./app/views/releases/list/releasesDisplayOptions.tsx","webpack:///./app/views/releases/list/releaseCard/releaseCardProjectRow.tsx","webpack:///./app/views/releases/list/releaseCard/releaseCardStatsPeriod.tsx","webpack:///./app/views/releases/list/releaseCard/index.tsx","webpack:///./app/views/releases/list/releasesRequest.tsx","webpack:///./app/views/releases/list/releasesAdoptionChart.tsx","webpack:///./app/views/releases/list/releasesSortOptions.tsx","webpack:///./app/views/releases/list/releasesStatusOptions.tsx","webpack:///./app/views/releases/list/index.tsx","webpack:///./app/views/releases/list/releasesPromo.tsx","webpack:///../node_modules/lodash/_baseMean.js","webpack:///../node_modules/lodash/_baseSum.js","webpack:///../node_modules/lodash/mean.js","webpack:///../node_modules/lodash/negate.js","webpack:///../node_modules/lodash/omitBy.js"],"sourcesContent":["import {Component} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Tooltip from 'sentry/components/tooltip';\nimport {AvatarUser} from 'sentry/types';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n  users: AvatarUser[];\n  className?: string;\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n} & DefaultProps;\n\nexport default class AvatarList extends Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize} data-test-id=\"avatarList-collapsedusers\">\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = p => css`\n  border-radius: 50%;\n  border: 2px solid ${p.theme.background};\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray200};\n  color: ${p => p.theme.gray300};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","import 'echarts/lib/component/dataZoomSlider';\n\nimport type {SliderDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: SliderDataZoomComponentOption = {\n  realtime: false,\n  showDetail: false,\n  left: 0,\n  right: 6,\n  bottom: 8,\n};\n\nexport default function DataZoomSlider(\n  props: SliderDataZoomComponentOption | SliderDataZoomComponentOption[]\n): SliderDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport type {\n  DataZoomComponentOption,\n  InsideDataZoomComponentOption,\n  ToolboxComponentOption,\n  XAXisComponentOption,\n} from 'echarts';\nimport moment from 'moment';\nimport * as qs from 'query-string';\n\nimport {updateDateTime} from 'sentry/actionCreators/pageFilters';\nimport DataZoomInside from 'sentry/components/charts/components/dataZoomInside';\nimport DataZoomSlider from 'sentry/components/charts/components/dataZoomSlider';\nimport ToolBox from 'sentry/components/charts/components/toolBox';\nimport {DateString} from 'sentry/types';\nimport {\n  EChartChartReadyHandler,\n  EChartDataZoomHandler,\n  EChartFinishedHandler,\n  EChartRestoreHandler,\n} from 'sentry/types/echarts';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {getUtcDateString, getUtcToLocalDateObject} from 'sentry/utils/dates';\n\nconst getDate = date =>\n  date ? moment.utc(date).format(moment.HTML5_FMT.DATETIME_LOCAL_SECONDS) : null;\n\ntype Period = {\n  end: DateString;\n  period: string | null;\n  start: DateString;\n};\n\nconst ZoomPropKeys = [\n  'period',\n  'xAxis',\n  'onChartReady',\n  'onDataZoom',\n  'onRestore',\n  'onFinished',\n] as const;\n\nexport type ZoomRenderProps = Pick<Props, typeof ZoomPropKeys[number]> & {\n  dataZoom?: DataZoomComponentOption[];\n  end?: Date;\n  isGroupedByDate?: boolean;\n  showTimeInTooltip?: boolean;\n  start?: Date;\n  toolBox?: ToolboxComponentOption;\n  utc?: boolean;\n};\n\ntype Props = {\n  children: (props: ZoomRenderProps) => React.ReactNode;\n  chartZoomOptions?: DataZoomComponentOption;\n  disabled?: boolean;\n  end?: DateString;\n  onChartReady?: EChartChartReadyHandler;\n  onDataZoom?: EChartDataZoomHandler;\n  onFinished?: EChartFinishedHandler;\n  onRestore?: EChartRestoreHandler;\n  onZoom?: (period: Period) => void;\n  period?: string | null;\n  router?: InjectedRouter;\n  showSlider?: boolean;\n  start?: DateString;\n  usePageDate?: boolean;\n  utc?: boolean | null;\n  xAxis?: XAXisComponentOption;\n  xAxisIndex?: number | number[];\n};\n\n/**\n * This is a very opinionated component that takes a render prop through `children`. It\n * will provide props to be passed to `BaseChart` to enable support of zooming without\n * eCharts' clunky zoom toolboxes.\n *\n * This also is very tightly coupled with the Global Selection Header. We can make it more\n * generic if need be in the future.\n */\nclass ChartZoom extends Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Zoom history\n    this.history = [];\n\n    // Initialize current period instance state for zoom history\n    this.saveCurrentPeriod(props);\n  }\n\n  componentDidUpdate() {\n    if (this.props.disabled) {\n      return;\n    }\n\n    // When component updates, make sure we sync current period state\n    // for use in zoom history\n    this.saveCurrentPeriod(this.props);\n  }\n\n  history: Period[];\n  currentPeriod?: Period;\n  zooming: (() => void) | null = null;\n\n  /**\n   * Save current period state from period in props to be used\n   * in handling chart's zoom history state\n   */\n  saveCurrentPeriod = props => {\n    this.currentPeriod = {\n      period: props.period,\n      start: getDate(props.start),\n      end: getDate(props.end),\n    };\n  };\n\n  /**\n   * Sets the new period due to a zoom related action\n   *\n   * Saves the current period to an instance property so that we\n   * can control URL state when zoom history is being manipulated\n   * by the chart controls.\n   *\n   * Saves a callback function to be called after chart animation is completed\n   */\n  setPeriod = ({period, start, end}, saveHistory = false) => {\n    const {router, onZoom, usePageDate} = this.props;\n    const startFormatted = getDate(start);\n    const endFormatted = getDate(end);\n\n    // Save period so that we can revert back to it when using echarts \"back\" navigation\n    if (saveHistory) {\n      this.history.push(this.currentPeriod!);\n    }\n\n    // Callback to let parent component know zoom has changed\n    // This is required for some more perceived responsiveness since\n    // we delay updating URL state so that chart animation can finish\n    //\n    // Parent container can use this to change into a loading state before\n    // URL parameters are changed\n    callIfFunction(onZoom, {\n      period,\n      start: startFormatted,\n      end: endFormatted,\n    });\n\n    this.zooming = () => {\n      if (usePageDate && router) {\n        const newQuery = {\n          ...router.location.query,\n          pageStart: start ? getUtcDateString(start) : undefined,\n          pageEnd: end ? getUtcDateString(end) : undefined,\n          pageStatsPeriod: period ?? undefined,\n        };\n\n        // Only push new location if query params has changed because this will cause a heavy re-render\n        if (qs.stringify(newQuery) !== qs.stringify(router.location.query)) {\n          router.push({\n            pathname: router.location.pathname,\n            query: newQuery,\n          });\n        }\n      } else {\n        updateDateTime(\n          {\n            period,\n            start: startFormatted\n              ? getUtcToLocalDateObject(startFormatted)\n              : startFormatted,\n            end: endFormatted ? getUtcToLocalDateObject(endFormatted) : endFormatted,\n          },\n          router\n        );\n      }\n\n      this.saveCurrentPeriod({period, start, end});\n    };\n  };\n\n  /**\n   * Enable zoom immediately instead of having to toggle to zoom\n   */\n  handleChartReady = chart => {\n    callIfFunction(this.props.onChartReady, chart);\n  };\n\n  /**\n   * Restores the chart to initial viewport/zoom level\n   *\n   * Updates URL state to reflect initial params\n   */\n  handleZoomRestore = (evt, chart) => {\n    if (!this.history.length) {\n      return;\n    }\n\n    this.setPeriod(this.history[0]);\n\n    // reset history\n    this.history = [];\n\n    callIfFunction(this.props.onRestore, evt, chart);\n  };\n\n  handleDataZoom = (evt, chart) => {\n    const model = chart.getModel();\n    const {startValue, endValue} = model._payload.batch[0];\n\n    // if `rangeStart` and `rangeEnd` are null, then we are going back\n    if (startValue === null && endValue === null) {\n      const previousPeriod = this.history.pop();\n\n      if (!previousPeriod) {\n        return;\n      }\n\n      this.setPeriod(previousPeriod);\n    } else {\n      const start = moment.utc(startValue);\n\n      // Add a day so we go until the end of the day (e.g. next day at midnight)\n      const end = moment.utc(endValue);\n\n      this.setPeriod({period: null, start, end}, true);\n    }\n\n    callIfFunction(this.props.onDataZoom, evt, chart);\n  };\n\n  /**\n   * Chart event when *any* rendering+animation finishes\n   *\n   * `this.zooming` acts as a callback function so that\n   * we can let the native zoom animation on the chart complete\n   * before we update URL state and re-render\n   */\n  handleChartFinished = (_props, chart) => {\n    if (typeof this.zooming === 'function') {\n      this.zooming();\n      this.zooming = null;\n    }\n\n    // This attempts to activate the area zoom toolbox feature\n    const zoom = chart._componentsViews?.find(c => c._features && c._features.dataZoom);\n    if (zoom && !zoom._features.dataZoom._isZoomActive) {\n      // Calling dispatchAction will re-trigger handleChartFinished\n      chart.dispatchAction({\n        type: 'takeGlobalCursor',\n        key: 'dataZoomSelect',\n        dataZoomSelectActive: true,\n      });\n    }\n\n    callIfFunction(this.props.onFinished);\n  };\n\n  render() {\n    const {\n      utc: _utc,\n      start: _start,\n      end: _end,\n      disabled,\n      children,\n      xAxisIndex,\n\n      router: _router,\n      onZoom: _onZoom,\n      onRestore: _onRestore,\n      onChartReady: _onChartReady,\n      onDataZoom: _onDataZoom,\n      onFinished: _onFinished,\n      showSlider,\n      chartZoomOptions,\n      ...props\n    } = this.props;\n\n    const utc = _utc ?? undefined;\n    const start = _start ? getUtcToLocalDateObject(_start) : undefined;\n    const end = _end ? getUtcToLocalDateObject(_end) : undefined;\n\n    if (disabled) {\n      return children({\n        utc,\n        start,\n        end,\n        ...props,\n      });\n    }\n    const renderProps = {\n      // Zooming only works when grouped by date\n      isGroupedByDate: true,\n      onChartReady: this.handleChartReady,\n      utc,\n      start,\n      end,\n      dataZoom: showSlider\n        ? [\n            ...DataZoomSlider({xAxisIndex, ...chartZoomOptions}),\n            ...DataZoomInside({\n              xAxisIndex,\n              ...(chartZoomOptions as InsideDataZoomComponentOption),\n            }),\n          ]\n        : DataZoomInside({\n            xAxisIndex,\n            ...(chartZoomOptions as InsideDataZoomComponentOption),\n          }),\n      showTimeInTooltip: true,\n      toolBox: ToolBox(\n        {},\n        {\n          dataZoom: {\n            title: {\n              zoom: '',\n              back: '',\n            },\n            iconStyle: {\n              borderWidth: 0,\n              color: 'transparent',\n              opacity: 0,\n            },\n          },\n        }\n      ),\n      onDataZoom: this.handleDataZoom,\n      onFinished: this.handleChartFinished,\n      onRestore: this.handleZoomRestore,\n      ...props,\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default ChartZoom;\n","import 'echarts/lib/component/dataZoomInside';\n\nimport type {InsideDataZoomComponentOption} from 'echarts';\n\nconst DEFAULT: InsideDataZoomComponentOption = {\n  type: 'inside',\n  // Mouse wheel can not trigger zoom\n  zoomOnMouseWheel: false,\n  // The translation (by mouse drag or touch drag) is avialable but zoom is not\n  zoomLock: true,\n  throttle: 50,\n};\n\nexport default function DataZoomInside(\n  props: InsideDataZoomComponentOption | InsideDataZoomComponentOption[]\n): InsideDataZoomComponentOption[] {\n  // `props` can be boolean, if so return default\n  if (!props || !Array.isArray(props)) {\n    const dataZoom = {\n      ...DEFAULT,\n      ...props,\n    };\n    return [dataZoom];\n  }\n\n  return props;\n}\n","import type {ToolboxComponentOption} from 'echarts';\n\nfunction getFeatures({\n  dataZoom,\n  ...features\n}: ToolboxComponentOption['feature'] = {}): ToolboxComponentOption['feature'] {\n  return {\n    ...(dataZoom\n      ? {\n          dataZoom: {\n            yAxisIndex: 'none',\n            title: {\n              zoom: 'zoom',\n              back: 'undo',\n            },\n            ...dataZoom,\n          },\n        }\n      : {}),\n    ...features,\n  };\n}\n\nexport default function ToolBox(\n  options: ToolboxComponentOption,\n  features: ToolboxComponentOption['feature']\n): ToolboxComponentOption {\n  return {\n    right: 0,\n    top: 0,\n    itemSize: 16,\n    // Stack the toolbox under the legend.\n    // so all series names are clickable.\n    z: -1,\n\n    feature: getFeatures(features),\n    ...options,\n  };\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import styled from '@emotion/styled';\n\nimport LoadingMask from 'sentry/components/loadingMask';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  height?: string;\n}\n\nconst LoadingPanel = styled(({height: _height, ...props}: Props) => (\n  <div {...props}>\n    <LoadingMask />\n  </div>\n))`\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n`;\n\nLoadingPanel.defaultProps = {\n  height: '200px',\n};\n\nexport default LoadingPanel;\n","import {Component, Fragment} from 'react';\n\nimport LoadingPanel from 'sentry/components/charts/loadingPanel';\n\nconst defaultProps = {\n  height: '200px',\n};\n\ntype Props = {\n  loading: boolean;\n  reloading: boolean;\n} & typeof defaultProps;\n\ntype State = {\n  key: number;\n  prevLoading: boolean;\n  prevReloading: boolean;\n};\n\nclass TransitionChart extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    prevReloading: this.props.reloading,\n    prevLoading: this.props.loading,\n    key: 1,\n  };\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    // Transitions are controlled using variables called:\n    // - loading and,\n    // - reloading (also called pending in other apps)\n    //\n    // This component remounts the chart to ensure the stable transition\n    // from one dataset to the next.\n\n    const prevReloading = state.prevReloading;\n    const nextReloading = props.reloading;\n\n    const prevLoading = state.prevLoading;\n    const nextLoading = props.loading;\n\n    // whenever loading changes, we explicitly remount the children by updating\n    // the key prop; regardless of what state reloading is in\n    if (prevLoading !== nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // invariant: prevLoading === nextLoading\n\n    // if loading is true, and hasn't changed from the previous re-render,\n    // do not remount the children.\n    if (nextLoading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key,\n      };\n    }\n\n    // invariant: loading is false\n\n    // whenever the chart is transitioning from the reloading (pending) state to a non-loading state,\n    // remount the children\n    if (prevReloading && !nextReloading) {\n      return {\n        prevReloading: nextReloading,\n        prevLoading: nextLoading,\n        key: state.key + 1,\n      };\n    }\n\n    // do not remount the children in these remaining cases:\n    // !prevReloading && !nextReloading (re-render with no prop change)\n    // prevReloading && nextReloading (re-render with no prop change)\n    // !prevReloading && nextReloading (from loaded to pending state)\n\n    return {\n      prevReloading: nextReloading,\n      prevLoading: nextLoading,\n      key: state.key,\n    };\n  }\n\n  render() {\n    const {height, loading, reloading} = this.props;\n\n    if (loading && !reloading) {\n      return <LoadingPanel height={height} data-test-id=\"events-request-loading\" />;\n    }\n\n    // We make use of the key prop to explicitly remount the children\n    // https://reactjs.org/docs/lists-and-keys.html#keys\n    return <Fragment key={String(this.state.key)}>{this.props.children}</Fragment>;\n  }\n}\n\nexport default TransitionChart;\n","import styled from '@emotion/styled';\n\nimport LoadingMask, {LoadingMaskProps} from 'sentry/components/loadingMask';\n\ninterface TransparentLoadingMaskProps extends LoadingMaskProps {\n  visible: boolean;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst TransparentLoadingMask = styled(\n  ({className, visible, children, ...props}: TransparentLoadingMaskProps) => {\n    const other = visible ? {...props, 'data-test-id': 'loading-placeholder'} : props;\n    return (\n      <LoadingMask className={className} {...other}>\n        {children}\n      </LoadingMask>\n    );\n  }\n)<TransparentLoadingMaskProps>`\n  ${p => !p.visible && 'display: none;'};\n  opacity: 0.4;\n  z-index: 1;\n`;\n\nexport default TransparentLoadingMask;\n","import styled from '@emotion/styled';\n\nexport interface LoadingMaskProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst LoadingMask = styled('div')<LoadingMaskProps>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport default LoadingMask;\n","import styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\n\ntype Props = {\n  className?: string;\n  tooltip?: React.ReactNode;\n};\n\nfunction NotAvailable({tooltip, className}: Props) {\n  return (\n    <Tooltip title={tooltip} skipWrapper disabled={tooltip === undefined}>\n      <Wrapper className={className}>{'\\u2014'}</Wrapper>\n    </Tooltip>\n  );\n}\n\nconst Wrapper = styled('div')`\n  color: ${p => p.theme.gray200};\n`;\n\nexport default NotAvailable;\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  image: React.ReactNode;\n  className?: string;\n};\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  multi?: boolean;\n  onRestore?: () => void;\n};\n\nfunction ReleaseArchivedNotice({onRestore, multi}: Props) {\n  return (\n    <Alert type=\"warning\">\n      {multi\n        ? t('These releases have been archived.')\n        : t('This release has been archived.')}\n\n      {!multi && onRestore && (\n        <Fragment>\n          {' '}\n          <UnarchiveButton size=\"zero\" priority=\"link\" onClick={onRestore}>\n            {t('Restore this release')}\n          </UnarchiveButton>\n        </Fragment>\n      )}\n    </Alert>\n  );\n}\n\nconst UnarchiveButton = styled(Button)`\n  font-size: inherit;\n  text-decoration: underline;\n  &,\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default ReleaseArchivedNotice;\n","import styled from '@emotion/styled';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Release} from 'sentry/types';\n\ntype Props = {\n  release: Release;\n  withHeading: boolean;\n};\n\nconst ReleaseCardCommits = ({release, withHeading = true}: Props) => {\n  const commitCount = release.commitCount || 0;\n  const authorCount = (release.authors && release.authors.length) || 0;\n  if (commitCount === 0) {\n    return null;\n  }\n\n  const releaseSummary = [\n    tn('%s commit', '%s commits', commitCount),\n    t('by'),\n    tn('%s author', '%s authors', authorCount),\n  ].join(' ');\n\n  return (\n    <div className=\"release-stats\">\n      {withHeading && <ReleaseSummaryHeading>{releaseSummary}</ReleaseSummaryHeading>}\n      <span style={{display: 'inline-block'}}>\n        <AvatarList users={release.authors} avatarSize={25} typeMembers=\"authors\" />\n      </span>\n    </div>\n  );\n};\n\nconst ReleaseSummaryHeading = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1.2;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: ${space(0.5)};\n`;\n\nexport default ReleaseCardCommits;\n","import CompactSelect from 'sentry/components/forms/compactSelect';\n\ntype DropdownItemProps = Omit<\n  React.ComponentProps<typeof CompactSelect>['options'][0],\n  'value'\n>;\n\ntype Props = {\n  label: string;\n  onSelect: (key: string) => void;\n  options: Record<string, DropdownItemProps>;\n  selected: string;\n};\n\nconst ReleasesDropdown = ({label: prefix, options, selected, onSelect}: Props) => {\n  const mappedOptions = Object.entries(options).map(\n    ([key, {label, tooltip, disabled}]) => ({\n      value: key,\n      label,\n      tooltip,\n      isDisabled: disabled,\n    })\n  );\n\n  return (\n    <CompactSelect\n      options={mappedOptions}\n      onChange={opt => onSelect(opt.value)}\n      value={selected}\n      triggerProps={{prefix, style: {width: '100%'}}}\n    />\n  );\n};\n\nexport default ReleasesDropdown;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\n\nimport ReleasesDropdown from './releasesDropdown';\n\nexport enum ReleasesDisplayOption {\n  USERS = 'users',\n  SESSIONS = 'sessions',\n}\n\nconst displayOptions = {\n  [ReleasesDisplayOption.SESSIONS]: {label: t('Sessions')},\n  [ReleasesDisplayOption.USERS]: {label: t('Users')},\n};\n\ntype Props = {\n  onSelect: (key: string) => void;\n  selected: ReleasesDisplayOption;\n};\n\nfunction ReleasesDisplayOptions({selected, onSelect}: Props) {\n  return (\n    <StyledReleasesDropdown\n      label={t('Display')}\n      options={displayOptions}\n      selected={selected}\n      onSelect={onSelect}\n    />\n  );\n}\n\nexport default ReleasesDisplayOptions;\n\nconst StyledReleasesDropdown = styled(ReleasesDropdown)`\n  z-index: 1;\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    order: 3;\n  }\n`;\n","import LazyLoad from 'react-lazyload';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport Count from 'sentry/components/count';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport NotAvailable from 'sentry/components/notAvailable';\nimport {extractSelectionParameters} from 'sentry/components/organizations/pageFilters/utils';\nimport {PanelItem} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport Tag from 'sentry/components/tag';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconFire, IconWarning} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Release, ReleaseProject} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport type {IconSize} from 'sentry/utils/theme';\n\nimport {\n  ADOPTION_STAGE_LABELS,\n  displayCrashFreePercent,\n  getReleaseNewIssuesUrl,\n  getReleaseUnhandledIssuesUrl,\n  isMobileRelease,\n} from '../../utils';\nimport {ReleasesDisplayOption} from '../releasesDisplayOptions';\nimport {ReleasesRequestRenderProps} from '../releasesRequest';\n\nimport {\n  AdoptionColumn,\n  AdoptionStageColumn,\n  CrashesColumn,\n  CrashFreeRateColumn,\n  NewIssuesColumn,\n  ReleaseProjectColumn,\n  ReleaseProjectsLayout,\n} from '.';\n\nconst CRASH_FREE_DANGER_THRESHOLD = 98;\nconst CRASH_FREE_WARNING_THRESHOLD = 99.5;\n\nfunction getCrashFreeIcon(crashFreePercent: number, iconSize: IconSize = 'sm') {\n  if (crashFreePercent < CRASH_FREE_DANGER_THRESHOLD) {\n    return <IconFire color=\"red300\" size={iconSize} />;\n  }\n\n  if (crashFreePercent < CRASH_FREE_WARNING_THRESHOLD) {\n    return <IconWarning color=\"yellow300\" size={iconSize} />;\n  }\n\n  return <IconCheckmark isCircled color=\"green300\" size={iconSize} />;\n}\n\ntype Props = {\n  activeDisplay: ReleasesDisplayOption;\n  getHealthData: ReleasesRequestRenderProps['getHealthData'];\n  index: number;\n  isTopRelease: boolean;\n  location: Location;\n  organization: Organization;\n  project: ReleaseProject;\n  releaseVersion: string;\n  showPlaceholders: boolean;\n  showReleaseAdoptionStages: boolean;\n  adoptionStages?: Release['adoptionStages'];\n};\n\nfunction ReleaseCardProjectRow({\n  index,\n  project,\n  organization,\n  location,\n  getHealthData,\n  releaseVersion,\n  activeDisplay,\n  showPlaceholders,\n  showReleaseAdoptionStages,\n  isTopRelease,\n  adoptionStages,\n}: Props) {\n  const theme = useTheme();\n  const {id, newGroups} = project;\n\n  const crashCount = getHealthData.getCrashCount(\n    releaseVersion,\n    id,\n    ReleasesDisplayOption.SESSIONS\n  );\n  const crashFreeRate = getHealthData.getCrashFreeRate(releaseVersion, id, activeDisplay);\n  const get24hCountByProject = getHealthData.get24hCountByProject(id, activeDisplay);\n  const timeSeries = getHealthData.getTimeSeries(releaseVersion, id, activeDisplay);\n  const adoption = getHealthData.getAdoption(releaseVersion, id, activeDisplay);\n\n  const adoptionStage =\n    showReleaseAdoptionStages &&\n    adoptionStages?.[project.slug] &&\n    adoptionStages?.[project.slug].stage;\n\n  const adoptionStageLabel =\n    Boolean(get24hCountByProject && adoptionStage && isMobileRelease(project.platform)) &&\n    ADOPTION_STAGE_LABELS[adoptionStage];\n\n  return (\n    <ProjectRow data-test-id=\"release-card-project-row\">\n      <ReleaseProjectsLayout showReleaseAdoptionStages={showReleaseAdoptionStages}>\n        <ReleaseProjectColumn>\n          <ProjectBadge project={project} avatarSize={16} />\n        </ReleaseProjectColumn>\n\n        {showReleaseAdoptionStages && (\n          <AdoptionStageColumn>\n            {adoptionStageLabel ? (\n              <Tooltip title={adoptionStageLabel.tooltipTitle} isHoverable>\n                <Link\n                  to={{\n                    pathname: `/organizations/${organization.slug}/releases/`,\n                    query: {\n                      ...location.query,\n                      query: `release.stage:${adoptionStage}`,\n                    },\n                  }}\n                >\n                  <Tag type={adoptionStageLabel.type}>{adoptionStageLabel.name}</Tag>\n                </Link>\n              </Tooltip>\n            ) : (\n              <NotAvailable />\n            )}\n          </AdoptionStageColumn>\n        )}\n\n        <AdoptionColumn>\n          {showPlaceholders ? (\n            <StyledPlaceholder width=\"100px\" />\n          ) : (\n            <AdoptionWrapper>\n              <span>{adoption ? Math.round(adoption) : '0'}%</span>\n              <LazyLoad debounce={50} height={20}>\n                <MiniBarChart\n                  series={timeSeries}\n                  height={20}\n                  isGroupedByDate\n                  showTimeInTooltip\n                  hideDelay={50}\n                  tooltipFormatter={(value: number) => {\n                    const suffix =\n                      activeDisplay === ReleasesDisplayOption.USERS\n                        ? tn('user', 'users', value)\n                        : tn('session', 'sessions', value);\n\n                    return `${value.toLocaleString()} ${suffix}`;\n                  }}\n                  colors={[theme.purple300, theme.gray200]}\n                />\n              </LazyLoad>\n            </AdoptionWrapper>\n          )}\n        </AdoptionColumn>\n\n        <CrashFreeRateColumn>\n          {showPlaceholders ? (\n            <StyledPlaceholder width=\"60px\" />\n          ) : defined(crashFreeRate) ? (\n            <CrashFreeWrapper>\n              {getCrashFreeIcon(crashFreeRate)}\n              {displayCrashFreePercent(crashFreeRate)}\n            </CrashFreeWrapper>\n          ) : (\n            <NotAvailable />\n          )}\n        </CrashFreeRateColumn>\n\n        <CrashesColumn>\n          {showPlaceholders ? (\n            <StyledPlaceholder width=\"30px\" />\n          ) : defined(crashCount) ? (\n            <Tooltip title={t('Open in Issues')}>\n              <GlobalSelectionLink\n                to={getReleaseUnhandledIssuesUrl(\n                  organization.slug,\n                  project.id,\n                  releaseVersion\n                )}\n              >\n                <Count value={crashCount} />\n              </GlobalSelectionLink>\n            </Tooltip>\n          ) : (\n            <NotAvailable />\n          )}\n        </CrashesColumn>\n\n        <NewIssuesColumn>\n          <Tooltip title={t('Open in Issues')}>\n            <GlobalSelectionLink\n              to={getReleaseNewIssuesUrl(organization.slug, project.id, releaseVersion)}\n            >\n              <Count value={newGroups || 0} />\n            </GlobalSelectionLink>\n          </Tooltip>\n        </NewIssuesColumn>\n\n        <ViewColumn>\n          <GuideAnchor disabled={!isTopRelease || index !== 0} target=\"view_release\">\n            <Button\n              size=\"xsmall\"\n              to={{\n                pathname: `/organizations/${\n                  organization.slug\n                }/releases/${encodeURIComponent(releaseVersion)}/`,\n                query: {\n                  ...extractSelectionParameters(location.query),\n                  project: project.id,\n                  yAxis: undefined,\n                },\n              }}\n            >\n              {t('View')}\n            </Button>\n          </GuideAnchor>\n        </ViewColumn>\n      </ReleaseProjectsLayout>\n    </ProjectRow>\n  );\n}\n\nexport default ReleaseCardProjectRow;\n\nconst ProjectRow = styled(PanelItem)`\n  padding: ${space(1)} ${space(2)};\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    font-size: ${p => p.theme.fontSizeMedium};\n  }\n`;\n\nconst StyledPlaceholder = styled(Placeholder)`\n  height: 15px;\n  display: inline-block;\n  position: relative;\n  top: ${space(0.25)};\n`;\n\nconst AdoptionWrapper = styled('span')`\n  flex: 1;\n  display: inline-grid;\n  grid-template-columns: 30px 1fr;\n  gap: ${space(1)};\n  align-items: center;\n\n  /* Chart tooltips need overflow */\n  overflow: visible;\n`;\n\nconst CrashFreeWrapper = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  vertical-align: middle;\n`;\n\nconst ViewColumn = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  line-height: 20px;\n  text-align: right;\n`;\n","import styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {HealthStatsPeriodOption, PageFilters} from 'sentry/types';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\ntype Props = {\n  location: Location;\n  selection: PageFilters;\n};\n\nconst ReleaseCardStatsPeriod = ({location, selection}: Props) => {\n  const activePeriod =\n    location.query.healthStatsPeriod || HealthStatsPeriodOption.TWENTY_FOUR_HOURS;\n  const {pathname, query} = location;\n\n  return (\n    <Wrapper>\n      {selection.datetime.period !== HealthStatsPeriodOption.TWENTY_FOUR_HOURS && (\n        <Period\n          to={{\n            pathname,\n            query: {\n              ...query,\n              healthStatsPeriod: HealthStatsPeriodOption.TWENTY_FOUR_HOURS,\n            },\n          }}\n          selected={activePeriod === HealthStatsPeriodOption.TWENTY_FOUR_HOURS}\n        >\n          {t('24h')}\n        </Period>\n      )}\n\n      <Period\n        to={{\n          pathname,\n          query: {...query, healthStatsPeriod: HealthStatsPeriodOption.AUTO},\n        }}\n        selected={activePeriod === HealthStatsPeriodOption.AUTO}\n      >\n        {selection.datetime.start ? t('Custom') : selection.datetime.period ?? t('14d')}\n      </Period>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-column-gap: ${space(0.75)};\n  flex: 1;\n  justify-content: flex-end;\n  text-align: right;\n  margin-left: ${space(0.5)};\n`;\n\nconst Period = styled(Link)<{selected: boolean}>`\n  color: ${p => (p.selected ? p.theme.gray400 : p.theme.gray300)};\n\n  &:hover,\n  &:focus {\n    color: ${p => (p.selected ? p.theme.gray400 : p.theme.gray300)};\n  }\n`;\n\nexport default withPageFilters(ReleaseCardStatsPeriod);\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\nimport color from 'color';\nimport {Location} from 'history';\nimport partition from 'lodash/partition';\n\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport Button from 'sentry/components/button';\nimport Collapsible from 'sentry/components/collapsible';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport {Panel, PanelHeader} from 'sentry/components/panels';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, Release} from 'sentry/types';\n\nimport {ReleasesDisplayOption} from '../releasesDisplayOptions';\nimport {ReleasesRequestRenderProps} from '../releasesRequest';\n\nimport ReleaseCardCommits from './releaseCardCommits';\nimport ReleaseCardProjectRow from './releaseCardProjectRow';\nimport ReleaseCardStatsPeriod from './releaseCardStatsPeriod';\n\nfunction getReleaseProjectId(release: Release, selection: PageFilters) {\n  // if a release has only one project\n  if (release.projects.length === 1) {\n    return release.projects[0].id;\n  }\n\n  // if only one project is selected in global header and release has it (second condition will prevent false positives like -1)\n  if (\n    selection.projects.length === 1 &&\n    release.projects.map(p => p.id).includes(selection.projects[0])\n  ) {\n    return selection.projects[0];\n  }\n\n  // project selector on release detail page will pick it up\n  return undefined;\n}\n\ntype Props = {\n  activeDisplay: ReleasesDisplayOption;\n  getHealthData: ReleasesRequestRenderProps['getHealthData'];\n  isTopRelease: boolean;\n  location: Location;\n  organization: Organization;\n  release: Release;\n  reloading: boolean;\n  selection: PageFilters;\n  showHealthPlaceholders: boolean;\n  showReleaseAdoptionStages: boolean;\n};\n\nclass ReleaseCard extends Component<Props> {\n  shouldComponentUpdate(nextProps: Props) {\n    // we don't want project health rows to reorder/jump while the whole card is loading\n    if (this.props.reloading && nextProps.reloading) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      release,\n      organization,\n      activeDisplay,\n      location,\n      reloading,\n      selection,\n      showHealthPlaceholders,\n      isTopRelease,\n      getHealthData,\n      showReleaseAdoptionStages,\n    } = this.props;\n    const {version, commitCount, lastDeploy, dateCreated, versionInfo} = release;\n\n    // sort health rows inside release card alphabetically by project name,\n    // show only the ones that are selected in global header\n    const [projectsToShow, projectsToHide] = partition(\n      release.projects.sort((a, b) => a.slug.localeCompare(b.slug)),\n      p =>\n        // do not filter for My Projects & All Projects\n        selection.projects.length > 0 && !selection.projects.includes(-1)\n          ? selection.projects.includes(p.id)\n          : true\n    );\n\n    function getHiddenProjectsTooltip() {\n      const limitedProjects = projectsToHide.map(p => p.slug).slice(0, 5);\n      const remainderLength = projectsToHide.length - limitedProjects.length;\n\n      if (remainderLength) {\n        limitedProjects.push(tn('and %s more', 'and %s more', remainderLength));\n      }\n\n      return limitedProjects.join(', ');\n    }\n\n    return (\n      <StyledPanel reloading={reloading ? 1 : 0} data-test-id=\"release-panel\">\n        <ReleaseInfo>\n          <ReleaseInfoHeader>\n            <GlobalSelectionLink\n              to={{\n                pathname: `/organizations/${\n                  organization.slug\n                }/releases/${encodeURIComponent(version)}/`,\n                query: {project: getReleaseProjectId(release, selection)},\n              }}\n            >\n              <GuideAnchor disabled={!isTopRelease} target=\"release_version\">\n                <VersionWrapper>\n                  <StyledVersion version={version} tooltipRawVersion anchor={false} />\n                </VersionWrapper>\n              </GuideAnchor>\n            </GlobalSelectionLink>\n            {commitCount > 0 && (\n              <ReleaseCardCommits release={release} withHeading={false} />\n            )}\n          </ReleaseInfoHeader>\n          <ReleaseInfoSubheader>\n            {versionInfo?.package && (\n              <PackageName ellipsisDirection=\"left\">{versionInfo.package}</PackageName>\n            )}\n            <TimeSince date={lastDeploy?.dateFinished || dateCreated} />\n            {lastDeploy?.dateFinished && ` \\u007C ${lastDeploy.environment}`}\n          </ReleaseInfoSubheader>\n        </ReleaseInfo>\n\n        <ReleaseProjects>\n          <ReleaseProjectsHeader lightText>\n            <ReleaseProjectsLayout showReleaseAdoptionStages={showReleaseAdoptionStages}>\n              <ReleaseProjectColumn>{t('Project Name')}</ReleaseProjectColumn>\n              {showReleaseAdoptionStages && (\n                <AdoptionStageColumn>{t('Adoption Stage')}</AdoptionStageColumn>\n              )}\n              <AdoptionColumn>\n                <span>{t('Adoption')}</span>\n                <ReleaseCardStatsPeriod location={location} />\n              </AdoptionColumn>\n              <CrashFreeRateColumn>{t('Crash Free Rate')}</CrashFreeRateColumn>\n              <CrashesColumn>{t('Crashes')}</CrashesColumn>\n              <NewIssuesColumn>{t('New Issues')}</NewIssuesColumn>\n            </ReleaseProjectsLayout>\n          </ReleaseProjectsHeader>\n\n          <ProjectRows>\n            <Collapsible\n              expandButton={({onExpand, numberOfHiddenItems}) => (\n                <ExpandButtonWrapper>\n                  <Button priority=\"primary\" size=\"xsmall\" onClick={onExpand}>\n                    {tct('Show [numberOfHiddenItems] More', {numberOfHiddenItems})}\n                  </Button>\n                </ExpandButtonWrapper>\n              )}\n              collapseButton={({onCollapse}) => (\n                <CollapseButtonWrapper>\n                  <Button priority=\"primary\" size=\"xsmall\" onClick={onCollapse}>\n                    {t('Collapse')}\n                  </Button>\n                </CollapseButtonWrapper>\n              )}\n            >\n              {projectsToShow.map((project, index) => (\n                <ReleaseCardProjectRow\n                  key={`${release.version}-${project.slug}-row`}\n                  index={index}\n                  organization={organization}\n                  project={project}\n                  location={location}\n                  getHealthData={getHealthData}\n                  releaseVersion={release.version}\n                  activeDisplay={activeDisplay}\n                  showPlaceholders={showHealthPlaceholders}\n                  showReleaseAdoptionStages={showReleaseAdoptionStages}\n                  isTopRelease={isTopRelease}\n                  adoptionStages={release.adoptionStages}\n                />\n              ))}\n            </Collapsible>\n          </ProjectRows>\n\n          {projectsToHide.length > 0 && (\n            <HiddenProjectsMessage data-test-id=\"hidden-projects\">\n              <Tooltip title={getHiddenProjectsTooltip()}>\n                <TextOverflow>\n                  {projectsToHide.length === 1\n                    ? tct('[number:1] hidden project', {number: <strong />})\n                    : tct('[number] hidden projects', {\n                        number: <strong>{projectsToHide.length}</strong>,\n                      })}\n                </TextOverflow>\n              </Tooltip>\n            </HiddenProjectsMessage>\n          )}\n        </ReleaseProjects>\n      </StyledPanel>\n    );\n  }\n}\n\nconst VersionWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledVersion = styled(Version)`\n  ${p => p.theme.overflowEllipsis};\n`;\n\nconst StyledPanel = styled(Panel)<{reloading: number}>`\n  opacity: ${p => (p.reloading ? 0.5 : 1)};\n  pointer-events: ${p => (p.reloading ? 'none' : 'auto')};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    display: flex;\n  }\n`;\n\nconst ReleaseInfo = styled('div')`\n  padding: ${space(1.5)} ${space(2)};\n  flex-shrink: 0;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    border-right: 1px solid ${p => p.theme.border};\n    min-width: 260px;\n    width: 22%;\n    max-width: 300px;\n  }\n`;\n\nconst ReleaseInfoSubheader = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray400};\n`;\n\nconst PackageName = styled(TextOverflow)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst ReleaseProjects = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  flex-grow: 1;\n  display: grid;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    border-top: none;\n  }\n`;\n\nconst ReleaseInfoHeader = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) max-content;\n  gap: ${space(2)};\n  align-items: center;\n`;\n\nconst ReleaseProjectsHeader = styled(PanelHeader)`\n  border-top-left-radius: 0;\n  padding: ${space(1.5)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst ProjectRows = styled('div')`\n  position: relative;\n`;\n\nconst ExpandButtonWrapper = styled('div')`\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: linear-gradient(\n    180deg,\n    ${p => color(p.theme.background).alpha(0).string()} 0,\n    ${p => p.theme.background}\n  );\n  background-repeat: repeat-x;\n  border-bottom: ${space(1)} solid ${p => p.theme.background};\n  border-top: ${space(1)} solid transparent;\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nconst CollapseButtonWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 41px;\n`;\n\nexport const ReleaseProjectsLayout = styled('div')<{showReleaseAdoptionStages?: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr 1.4fr 0.6fr 0.7fr;\n\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 1fr 1fr 1fr 0.5fr 0.5fr 0.5fr;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: 1fr 1fr 1fr 0.5fr 0.5fr 0.5fr;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    ${p =>\n      p.showReleaseAdoptionStages\n        ? `\n      grid-template-columns: 1fr 0.7fr 1fr 1fr 0.7fr 0.7fr 0.5fr;\n    `\n        : `\n      grid-template-columns: 1fr 1fr 1fr 0.7fr 0.7fr 0.5fr;\n    `}\n  }\n`;\n\nexport const ReleaseProjectColumn = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  line-height: 20px;\n`;\n\nexport const NewIssuesColumn = styled(ReleaseProjectColumn)`\n  font-variant-numeric: tabular-nums;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    text-align: right;\n  }\n`;\n\nexport const AdoptionColumn = styled(ReleaseProjectColumn)`\n  display: none;\n  font-variant-numeric: tabular-nums;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    /* Chart tooltips need overflow */\n    overflow: visible;\n  }\n\n  & > * {\n    flex: 1;\n  }\n`;\n\nexport const AdoptionStageColumn = styled(ReleaseProjectColumn)`\n  display: none;\n  font-variant-numeric: tabular-nums;\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    display: flex;\n\n    /* Need to show the edges of the tags */\n    overflow: visible;\n  }\n`;\n\nexport const CrashFreeRateColumn = styled(ReleaseProjectColumn)`\n  font-variant-numeric: tabular-nums;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    text-align: center;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    text-align: right;\n  }\n`;\n\nexport const CrashesColumn = styled(ReleaseProjectColumn)`\n  display: none;\n  font-variant-numeric: tabular-nums;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: block;\n    text-align: right;\n  }\n`;\n\nconst HiddenProjectsMessage = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: 0 ${space(2)};\n  border-top: 1px solid ${p => p.theme.border};\n  overflow: hidden;\n  height: 24px;\n  line-height: 24px;\n  color: ${p => p.theme.gray300};\n  background-color: ${p => p.theme.backgroundSecondary};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    border-bottom-left-radius: ${p => p.theme.borderRadius};\n  }\n`;\n\nexport default ReleaseCard;\n","import {Component} from 'react';\nimport {Location} from 'history';\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {\n  DateTimeObject,\n  getDiffInMinutes,\n  ONE_WEEK,\n  TWENTY_FOUR_HOURS,\n  TWO_WEEKS,\n} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {\n  HealthStatsPeriodOption,\n  Organization,\n  PageFilters,\n  SessionApiResponse,\n  SessionFieldWithOperation,\n} from 'sentry/types';\nimport {defined, percent} from 'sentry/utils';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport withApi from 'sentry/utils/withApi';\n\nimport {getCrashFreePercent} from '../utils';\n\nimport {ReleasesDisplayOption} from './releasesDisplayOptions';\n\nfunction omitIgnoredProps(props: Props) {\n  return omit(props, [\n    'api',\n    'organization',\n    'children',\n    'selection.datetime.utc',\n    'location',\n  ]);\n}\n\nfunction getInterval(datetimeObj: DateTimeObject) {\n  const diffInMinutes = getDiffInMinutes(datetimeObj);\n\n  if (diffInMinutes >= TWO_WEEKS) {\n    return '1d';\n  }\n  if (diffInMinutes >= ONE_WEEK) {\n    return '6h';\n  }\n\n  if (diffInMinutes > TWENTY_FOUR_HOURS) {\n    return '4h';\n  }\n\n  // TODO(sessions): sub-hour session resolution is still not possible\n  return '1h';\n}\nexport function reduceTimeSeriesGroups(\n  acc: number[],\n  group: SessionApiResponse['groups'][number],\n  field: 'count_unique(user)' | 'sum(session)'\n) {\n  group.series[field]?.forEach(\n    (value, index) => (acc[index] = (acc[index] ?? 0) + value)\n  );\n\n  return acc;\n}\n\nexport function sessionDisplayToField(display: ReleasesDisplayOption) {\n  switch (display) {\n    case ReleasesDisplayOption.USERS:\n      return SessionFieldWithOperation.USERS;\n    case ReleasesDisplayOption.SESSIONS:\n    default:\n      return SessionFieldWithOperation.SESSIONS;\n  }\n}\n\nexport type ReleasesRequestRenderProps = {\n  errored: boolean;\n  getHealthData: ReturnType<ReleasesRequest['getHealthData']>;\n  isHealthLoading: boolean;\n};\n\ntype Props = {\n  api: Client;\n  children: (renderProps: ReleasesRequestRenderProps) => React.ReactNode;\n  display: ReleasesDisplayOption[];\n  location: Location;\n  organization: Organization;\n  releases: string[];\n  selection: PageFilters;\n  defaultStatsPeriod?: string;\n  disable?: boolean;\n  healthStatsPeriod?: HealthStatsPeriodOption;\n  releasesReloading?: boolean;\n};\ntype State = {\n  errored: boolean;\n  loading: boolean;\n  statusCountByProjectInPeriod: SessionApiResponse | null;\n  statusCountByReleaseInPeriod: SessionApiResponse | null;\n  totalCountByProjectIn24h: SessionApiResponse | null;\n  totalCountByProjectInPeriod: SessionApiResponse | null;\n  totalCountByReleaseIn24h: SessionApiResponse | null;\n  totalCountByReleaseInPeriod: SessionApiResponse | null;\n};\n\nclass ReleasesRequest extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    errored: false,\n    statusCountByReleaseInPeriod: null,\n    totalCountByReleaseIn24h: null,\n    totalCountByProjectIn24h: null,\n    statusCountByProjectInPeriod: null,\n    totalCountByReleaseInPeriod: null,\n    totalCountByProjectInPeriod: null,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.releasesReloading) {\n      return;\n    }\n    if (isEqual(omitIgnoredProps(prevProps), omitIgnoredProps(this.props))) {\n      return;\n    }\n\n    this.fetchData();\n  }\n\n  get path() {\n    const {organization} = this.props;\n\n    return `/organizations/${organization.slug}/sessions/`;\n  }\n\n  get baseQueryParams() {\n    const {location, selection, defaultStatsPeriod, releases} = this.props;\n\n    return {\n      query: new MutableSearch(\n        releases.reduce((acc, release, index, allReleases) => {\n          acc.push(`release:\"${release}\"`);\n          if (index < allReleases.length - 1) {\n            acc.push('OR');\n          }\n\n          return acc;\n        }, [] as string[])\n      ).formatString(),\n      interval: getInterval(selection.datetime),\n      ...normalizeDateTimeParams(pick(location.query, Object.values(URL_PARAM)), {\n        defaultStatsPeriod,\n      }),\n    };\n  }\n\n  fetchData = async () => {\n    const {api, healthStatsPeriod, disable} = this.props;\n\n    if (disable) {\n      return;\n    }\n\n    api.clear();\n    this.setState({\n      loading: true,\n      errored: false,\n      statusCountByReleaseInPeriod: null,\n      totalCountByReleaseIn24h: null,\n      totalCountByProjectIn24h: null,\n    });\n\n    const promises = [\n      this.fetchStatusCountByReleaseInPeriod(),\n      this.fetchTotalCountByReleaseIn24h(),\n      this.fetchTotalCountByProjectIn24h(),\n    ];\n\n    if (healthStatsPeriod === HealthStatsPeriodOption.AUTO) {\n      promises.push(this.fetchStatusCountByProjectInPeriod());\n      promises.push(this.fetchTotalCountByReleaseInPeriod());\n      promises.push(this.fetchTotalCountByProjectInPeriod());\n    }\n\n    try {\n      const [\n        statusCountByReleaseInPeriod,\n        totalCountByReleaseIn24h,\n        totalCountByProjectIn24h,\n        statusCountByProjectInPeriod,\n        totalCountByReleaseInPeriod,\n        totalCountByProjectInPeriod,\n      ] = await Promise.all(promises);\n\n      this.setState({\n        loading: false,\n        statusCountByReleaseInPeriod,\n        totalCountByReleaseIn24h,\n        totalCountByProjectIn24h,\n        statusCountByProjectInPeriod,\n        totalCountByReleaseInPeriod,\n        totalCountByProjectInPeriod,\n      });\n    } catch (error) {\n      addErrorMessage(error.responseJSON?.detail ?? t('Error loading health data'));\n      this.setState({\n        loading: false,\n        errored: true,\n      });\n    }\n  };\n\n  /**\n   * Used to calculate crash free rate, count histogram (This Release series), and crash count\n   */\n  async fetchStatusCountByReleaseInPeriod() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        field: [\n          ...new Set([...display.map(d => sessionDisplayToField(d)), 'sum(session)']),\n        ], // this request needs to be fired for sessions in both display options (because of crash count), removing potential sum(session) duplicated with Set\n        groupBy: ['project', 'release', 'session.status'],\n      },\n    });\n\n    return response;\n  }\n\n  /**\n   * Used to calculate count histogram (Total Project series)\n   */\n  async fetchStatusCountByProjectInPeriod() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        query: undefined,\n        field: [\n          ...new Set([...display.map(d => sessionDisplayToField(d)), 'sum(session)']),\n        ],\n        groupBy: ['project', 'session.status'],\n      },\n    });\n\n    return response;\n  }\n\n  /**\n   * Used to calculate adoption, and count histogram (This Release series)\n   */\n  async fetchTotalCountByReleaseIn24h() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        field: display.map(d => sessionDisplayToField(d)),\n        groupBy: ['project', 'release'],\n        interval: '1h',\n        statsPeriod: '24h',\n      },\n    });\n\n    return response;\n  }\n\n  async fetchTotalCountByReleaseInPeriod() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        field: display.map(d => sessionDisplayToField(d)),\n        groupBy: ['project', 'release'],\n      },\n    });\n\n    return response;\n  }\n\n  /**\n   * Used to calculate adoption, and count histogram (Total Project series)\n   */\n  async fetchTotalCountByProjectIn24h() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        query: undefined,\n        field: display.map(d => sessionDisplayToField(d)),\n        groupBy: ['project'],\n        interval: '1h',\n        statsPeriod: '24h',\n      },\n    });\n\n    return response;\n  }\n\n  async fetchTotalCountByProjectInPeriod() {\n    const {api, display} = this.props;\n\n    const response: SessionApiResponse = await api.requestPromise(this.path, {\n      query: {\n        ...this.baseQueryParams,\n        query: undefined,\n        field: display.map(d => sessionDisplayToField(d)),\n        groupBy: ['project'],\n      },\n    });\n\n    return response;\n  }\n\n  getHealthData = () => {\n    // TODO(sessions): investigate if this needs to be optimized to lower O(n) complexity\n    return {\n      getCrashCount: this.getCrashCount,\n      getCrashFreeRate: this.getCrashFreeRate,\n      get24hCountByRelease: this.get24hCountByRelease,\n      get24hCountByProject: this.get24hCountByProject,\n      getTimeSeries: this.getTimeSeries,\n      getAdoption: this.getAdoption,\n    };\n  };\n\n  getCrashCount = (version: string, project: number, display: ReleasesDisplayOption) => {\n    const {statusCountByReleaseInPeriod} = this.state;\n    const field = sessionDisplayToField(display);\n\n    return statusCountByReleaseInPeriod?.groups.find(\n      ({by}) =>\n        by.release === version &&\n        by.project === project &&\n        by['session.status'] === 'crashed'\n    )?.totals[field];\n  };\n\n  getCrashFreeRate = (\n    version: string,\n    project: number,\n    display: ReleasesDisplayOption\n  ) => {\n    const {statusCountByReleaseInPeriod} = this.state;\n    const field = sessionDisplayToField(display);\n\n    const totalCount = statusCountByReleaseInPeriod?.groups\n      .filter(({by}) => by.release === version && by.project === project)\n      ?.reduce((acc, group) => acc + group.totals[field], 0);\n\n    const crashedCount = this.getCrashCount(version, project, display);\n\n    return !defined(totalCount) || totalCount === 0\n      ? null\n      : getCrashFreePercent(100 - percent(crashedCount ?? 0, totalCount ?? 0));\n  };\n\n  get24hCountByRelease = (\n    version: string,\n    project: number,\n    display: ReleasesDisplayOption\n  ) => {\n    const {totalCountByReleaseIn24h} = this.state;\n    const field = sessionDisplayToField(display);\n\n    return totalCountByReleaseIn24h?.groups\n      .filter(({by}) => by.release === version && by.project === project)\n      ?.reduce((acc, group) => acc + group.totals[field], 0);\n  };\n\n  getPeriodCountByRelease = (\n    version: string,\n    project: number,\n    display: ReleasesDisplayOption\n  ) => {\n    const {totalCountByReleaseInPeriod} = this.state;\n    const field = sessionDisplayToField(display);\n\n    return totalCountByReleaseInPeriod?.groups\n      .filter(({by}) => by.release === version && by.project === project)\n      ?.reduce((acc, group) => acc + group.totals[field], 0);\n  };\n\n  get24hCountByProject = (project: number, display: ReleasesDisplayOption) => {\n    const {totalCountByProjectIn24h} = this.state;\n    const field = sessionDisplayToField(display);\n\n    return totalCountByProjectIn24h?.groups\n      .filter(({by}) => by.project === project)\n      ?.reduce((acc, group) => acc + group.totals[field], 0);\n  };\n\n  getPeriodCountByProject = (project: number, display: ReleasesDisplayOption) => {\n    const {totalCountByProjectInPeriod} = this.state;\n    const field = sessionDisplayToField(display);\n\n    return totalCountByProjectInPeriod?.groups\n      .filter(({by}) => by.project === project)\n      ?.reduce((acc, group) => acc + group.totals[field], 0);\n  };\n\n  getTimeSeries = (version: string, project: number, display: ReleasesDisplayOption) => {\n    const {healthStatsPeriod} = this.props;\n    if (healthStatsPeriod === HealthStatsPeriodOption.AUTO) {\n      return this.getPeriodTimeSeries(version, project, display);\n    }\n\n    return this.get24hTimeSeries(version, project, display);\n  };\n\n  get24hTimeSeries = (\n    version: string,\n    project: number,\n    display: ReleasesDisplayOption\n  ) => {\n    const {totalCountByReleaseIn24h, totalCountByProjectIn24h} = this.state;\n    const field = sessionDisplayToField(display);\n\n    const intervals = totalCountByProjectIn24h?.intervals ?? [];\n\n    const projectData = totalCountByProjectIn24h?.groups.find(\n      ({by}) => by.project === project\n    )?.series[field];\n\n    const releaseData = totalCountByReleaseIn24h?.groups.find(\n      ({by}) => by.project === project && by.release === version\n    )?.series[field];\n\n    return [\n      {\n        seriesName: t('This Release'),\n        data: intervals?.map((interval, index) => ({\n          name: moment(interval).valueOf(),\n          value: releaseData?.[index] ?? 0,\n        })),\n      },\n      {\n        seriesName: t('Total Project'),\n        data: intervals?.map((interval, index) => ({\n          name: moment(interval).valueOf(),\n          value: projectData?.[index] ?? 0,\n        })),\n        z: 0,\n      },\n    ];\n  };\n\n  getPeriodTimeSeries = (\n    version: string,\n    project: number,\n    display: ReleasesDisplayOption\n  ) => {\n    const {statusCountByReleaseInPeriod, statusCountByProjectInPeriod} = this.state;\n    const field = sessionDisplayToField(display);\n\n    const intervals = statusCountByProjectInPeriod?.intervals ?? [];\n\n    const projectData = statusCountByProjectInPeriod?.groups\n      .filter(({by}) => by.project === project)\n      ?.reduce((acc, group) => reduceTimeSeriesGroups(acc, group, field), [] as number[]);\n\n    const releaseData = statusCountByReleaseInPeriod?.groups\n      .filter(({by}) => by.project === project && by.release === version)\n      ?.reduce((acc, group) => reduceTimeSeriesGroups(acc, group, field), [] as number[]);\n\n    return [\n      {\n        seriesName: t('This Release'),\n        data: intervals?.map((interval, index) => ({\n          name: moment(interval).valueOf(),\n          value: releaseData?.[index] ?? 0,\n        })),\n      },\n      {\n        seriesName: t('Total Project'),\n        data: intervals?.map((interval, index) => ({\n          name: moment(interval).valueOf(),\n          value: projectData?.[index] ?? 0,\n        })),\n        z: 0,\n      },\n    ];\n  };\n\n  getAdoption = (version: string, project: number, display: ReleasesDisplayOption) => {\n    const {healthStatsPeriod} = this.props;\n\n    const countByRelease = (\n      healthStatsPeriod === HealthStatsPeriodOption.AUTO\n        ? this.getPeriodCountByRelease\n        : this.get24hCountByRelease\n    )(version, project, display);\n    const countByProject = (\n      healthStatsPeriod === HealthStatsPeriodOption.AUTO\n        ? this.getPeriodCountByProject\n        : this.get24hCountByProject\n    )(project, display);\n\n    return defined(countByRelease) && defined(countByProject)\n      ? percent(countByRelease, countByProject)\n      : undefined;\n  };\n\n  render() {\n    const {loading, errored} = this.state;\n    const {children} = this.props;\n\n    return children({\n      isHealthLoading: loading,\n      errored,\n      getHealthData: this.getHealthData(),\n    });\n  }\n}\n\nexport default withApi(ReleasesRequest);\n","import {Component} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport type {LineSeriesOption} from 'echarts';\nimport {Location} from 'history';\nimport compact from 'lodash/compact';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport {Client} from 'sentry/api';\nimport ChartZoom from 'sentry/components/charts/chartZoom';\nimport {LineChart} from 'sentry/components/charts/lineChart';\nimport SessionsRequest from 'sentry/components/charts/sessionsRequest';\nimport {\n  HeaderTitleLegend,\n  InlineContainer,\n  SectionHeading,\n  SectionValue,\n} from 'sentry/components/charts/styles';\nimport TransitionChart from 'sentry/components/charts/transitionChart';\nimport TransparentLoadingMask from 'sentry/components/charts/transparentLoadingMask';\nimport {\n  getDiffInMinutes,\n  ONE_WEEK,\n  truncationFormatter,\n} from 'sentry/components/charts/utils';\nimport Count from 'sentry/components/count';\nimport {\n  normalizeDateTimeParams,\n  parseStatsPeriod,\n  StatsPeriodType,\n} from 'sentry/components/organizations/pageFilters/parse';\nimport {Panel, PanelBody, PanelFooter} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters, SessionApiResponse} from 'sentry/types';\nimport {EChartClickHandler} from 'sentry/types/echarts';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {getAdoptionSeries, getCount} from 'sentry/utils/sessions';\nimport withApi from 'sentry/utils/withApi';\nimport {sessionDisplayToField} from 'sentry/views/releases/list/releasesRequest';\n\nimport {ReleasesDisplayOption} from './releasesDisplayOptions';\n\ntype Props = {\n  activeDisplay: ReleasesDisplayOption;\n  api: Client;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n};\n\nclass ReleasesAdoptionChart extends Component<Props> {\n  // needs to have different granularity, that's why we use custom getInterval instead of getSessionsInterval\n  getInterval() {\n    const {organization, location} = this.props;\n\n    const datetimeObj = {\n      start: decodeScalar(location.query.start),\n      end: decodeScalar(location.query.end),\n      period: decodeScalar(location.query.statsPeriod),\n    };\n\n    const diffInMinutes = getDiffInMinutes(datetimeObj);\n\n    // use high fidelity intervals when available\n    // limit on backend is set to six hour\n    if (\n      organization.features.includes('minute-resolution-sessions') &&\n      diffInMinutes < 360\n    ) {\n      return '10m';\n    }\n\n    if (diffInMinutes >= ONE_WEEK) {\n      return '1d';\n    }\n    return '1h';\n  }\n\n  getReleasesSeries(response: SessionApiResponse | null) {\n    const {activeDisplay} = this.props;\n\n    // If there are many releases, display releases with the highest number of sessions\n    // Often this due to many releases with low session counts or not filtering by environment\n    let releases: string[] | undefined =\n      response?.groups.map(group => group.by.release as string) ?? [];\n    if (response?.groups && response.groups.length > 50) {\n      releases = response!.groups\n        .sort((a, b) => b.totals['sum(session)'] - a.totals['sum(session)'])\n        .slice(0, 50)\n        .map(group => group.by.release as string);\n    }\n\n    if (!releases) {\n      return null;\n    }\n\n    return releases.map(release => ({\n      id: release,\n      seriesName: formatVersion(release),\n      data: getAdoptionSeries(\n        [response?.groups.find(({by}) => by.release === release)!],\n        response?.groups,\n        response?.intervals,\n        sessionDisplayToField(activeDisplay)\n      ),\n      emphasis: {\n        focus: 'series',\n      } as LineSeriesOption['emphasis'],\n    }));\n  }\n\n  handleClick: EChartClickHandler = params => {\n    const {organization, router, selection, location} = this.props;\n\n    const project = selection.projects[0];\n\n    router.push({\n      pathname: `/organizations/${organization?.slug}/releases/${encodeURIComponent(\n        params.seriesId\n      )}/`,\n      query: {project, environment: location.query.environment},\n    });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <PanelBody withPadding>\n          <ChartHeader>\n            <Placeholder height=\"24px\" />\n          </ChartHeader>\n          <Placeholder height=\"200px\" />\n        </PanelBody>\n        <ChartFooter>\n          <Placeholder height=\"34px\" />\n        </ChartFooter>\n      </Panel>\n    );\n  }\n\n  render() {\n    const {activeDisplay, router, selection, api, organization, location} = this.props;\n    const {start, end, period, utc} = selection.datetime;\n    const interval = this.getInterval();\n    const field = sessionDisplayToField(activeDisplay);\n\n    return (\n      <SessionsRequest\n        api={api}\n        organization={organization}\n        interval={interval}\n        groupBy={['release']}\n        field={[field]}\n        {...normalizeDateTimeParams(pick(location.query, Object.values(URL_PARAM)))}\n      >\n        {({response, loading, reloading}) => {\n          const totalCount = getCount(response?.groups, field);\n          const releasesSeries = this.getReleasesSeries(response);\n          if (loading) {\n            return this.renderEmpty();\n          }\n\n          if (!releasesSeries?.length) {\n            return null;\n          }\n\n          const numDataPoints = releasesSeries[0].data.length;\n          const xAxisData = releasesSeries[0].data.map(point => point.name);\n          const hideLastPoint =\n            releasesSeries.findIndex(\n              series => series.data[numDataPoints - 1].value > 0\n            ) === -1;\n\n          return (\n            <Panel>\n              <PanelBody withPadding>\n                <ChartHeader>\n                  <ChartTitle>{t('Release Adoption')}</ChartTitle>\n                </ChartHeader>\n                <TransitionChart loading={loading} reloading={reloading}>\n                  <TransparentLoadingMask visible={reloading} />\n                  <ChartZoom\n                    router={router}\n                    period={period}\n                    utc={utc}\n                    start={start}\n                    end={end}\n                  >\n                    {zoomRenderProps => (\n                      <LineChart\n                        {...zoomRenderProps}\n                        grid={{left: '10px', right: '10px', top: '40px', bottom: '0px'}}\n                        series={releasesSeries.map(series => ({\n                          ...series,\n                          data: hideLastPoint ? series.data.slice(0, -1) : series.data,\n                        }))}\n                        yAxis={{\n                          min: 0,\n                          max: 100,\n                          type: 'value',\n                          interval: 10,\n                          splitNumber: 10,\n                          data: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\n                          axisLabel: {\n                            formatter: '{value}%',\n                          },\n                        }}\n                        xAxis={{\n                          show: true,\n                          min: xAxisData[0],\n                          max: xAxisData[numDataPoints - 1],\n                          type: 'time',\n                          data: xAxisData,\n                        }}\n                        tooltip={{\n                          formatter: seriesParams => {\n                            const series = Array.isArray(seriesParams)\n                              ? seriesParams\n                              : [seriesParams];\n                            const timestamp = series[0].data[0];\n                            const [first, second, third, ...rest] = series\n                              .filter(s => s.data[1] > 0)\n                              .sort((a, b) => b.data[1] - a.data[1]);\n\n                            const restSum = rest.reduce((acc, s) => acc + s.data[1], 0);\n\n                            const seriesToRender = compact([first, second, third]);\n\n                            if (rest.length) {\n                              seriesToRender.push({\n                                seriesName: tn('%s Other', '%s Others', rest.length),\n                                data: [timestamp, restSum],\n                                marker:\n                                  '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;\"></span>',\n                              });\n                            }\n\n                            if (!seriesToRender.length) {\n                              return '<div/>';\n                            }\n\n                            const periodObj = parseStatsPeriod(interval) || {\n                              periodLength: 'd',\n                              period: '1',\n                            };\n                            const intervalStart = moment(timestamp).format('MMM D LT');\n                            const intervalEnd = (\n                              series[0].dataIndex === numDataPoints - 1\n                                ? moment(response?.end)\n                                : moment(timestamp).add(\n                                    parseInt(periodObj.period, 10),\n                                    periodObj.periodLength as StatsPeriodType\n                                  )\n                            ).format('MMM D LT');\n\n                            return [\n                              '<div class=\"tooltip-series\">',\n                              seriesToRender\n                                .map(\n                                  s =>\n                                    `<div><span class=\"tooltip-label\">${\n                                      s.marker\n                                    }<strong>${\n                                      s.seriesName &&\n                                      truncationFormatter(s.seriesName, 12)\n                                    }</strong></span>${s.data[1].toFixed(2)}%</div>`\n                                )\n                                .join(''),\n                              '</div>',\n                              `<div class=\"tooltip-date\">${intervalStart} &mdash; ${intervalEnd}</div>`,\n                              '<div class=\"tooltip-arrow\"></div>',\n                            ].join('');\n                          },\n                        }}\n                        onClick={this.handleClick}\n                      />\n                    )}\n                  </ChartZoom>\n                </TransitionChart>\n              </PanelBody>\n              <ChartFooter>\n                <InlineContainer>\n                  <SectionHeading>\n                    {tct('Total [display]', {\n                      display:\n                        activeDisplay === ReleasesDisplayOption.USERS\n                          ? 'Users'\n                          : 'Sessions',\n                    })}\n                  </SectionHeading>\n                  <SectionValue>\n                    <Count value={totalCount || 0} />\n                  </SectionValue>\n                </InlineContainer>\n              </ChartFooter>\n            </Panel>\n          );\n        }}\n      </SessionsRequest>\n    );\n  }\n}\n\nexport default withApi(ReleasesAdoptionChart);\n\nconst ChartHeader = styled(HeaderTitleLegend)`\n  margin-bottom: ${space(1)};\n`;\n\nconst ChartTitle = styled('header')`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ChartFooter = styled(PanelFooter)`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} 20px;\n`;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\n\nimport {ReleasesDisplayOption} from './releasesDisplayOptions';\nimport ReleasesDropdown from './releasesDropdown';\n\nexport enum ReleasesSortOption {\n  CRASH_FREE_USERS = 'crash_free_users',\n  CRASH_FREE_SESSIONS = 'crash_free_sessions',\n  USERS_24_HOURS = 'users_24h',\n  SESSIONS_24_HOURS = 'sessions_24h',\n  SESSIONS = 'sessions',\n  DATE = 'date',\n  BUILD = 'build',\n  SEMVER = 'semver',\n  ADOPTION = 'adoption',\n}\n\ntype Props = {\n  environments: string[];\n  onSelect: (key: string) => void;\n  selected: ReleasesSortOption;\n  selectedDisplay: ReleasesDisplayOption;\n};\n\nfunction ReleasesSortOptions({selected, selectedDisplay, onSelect, environments}: Props) {\n  const sortOptions = {\n    [ReleasesSortOption.DATE]: {label: t('Date Created')},\n    [ReleasesSortOption.SESSIONS]: {label: t('Total Sessions')},\n    ...(selectedDisplay === ReleasesDisplayOption.USERS\n      ? {\n          [ReleasesSortOption.USERS_24_HOURS]: {label: t('Active Users')},\n          [ReleasesSortOption.CRASH_FREE_USERS]: {label: t('Crash Free Users')},\n        }\n      : {\n          [ReleasesSortOption.SESSIONS_24_HOURS]: {label: t('Active Sessions')},\n          [ReleasesSortOption.CRASH_FREE_SESSIONS]: {label: t('Crash Free Sessions')},\n        }),\n    [ReleasesSortOption.BUILD]: {label: t('Build Number')},\n    [ReleasesSortOption.SEMVER]: {label: t('Semantic Version')},\n  } as React.ComponentProps<typeof ReleasesDropdown>['options'];\n\n  const isDisabled = environments.length !== 1;\n  sortOptions[ReleasesSortOption.ADOPTION] = {\n    label: t('Date Adopted'),\n    disabled: isDisabled,\n    tooltip: isDisabled\n      ? t('Select one environment to use this sort option.')\n      : undefined,\n  };\n\n  return (\n    <StyledReleasesDropdown\n      label={t('Sort By')}\n      options={sortOptions}\n      selected={selected}\n      onSelect={onSelect}\n    />\n  );\n}\n\nexport default ReleasesSortOptions;\n\nconst StyledReleasesDropdown = styled(ReleasesDropdown)`\n  z-index: 2;\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    order: 2;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\n\nimport ReleasesDropdown from './releasesDropdown';\n\nexport enum ReleasesStatusOption {\n  ACTIVE = 'active',\n  ARCHIVED = 'archived',\n}\n\nconst options = {\n  [ReleasesStatusOption.ACTIVE]: {label: t('Active')},\n  [ReleasesStatusOption.ARCHIVED]: {label: t('Archived')},\n};\n\ntype Props = {\n  onSelect: (key: string) => void;\n  selected: ReleasesStatusOption;\n};\n\nfunction ReleasesStatusOptions({selected, onSelect}: Props) {\n  return (\n    <StyledReleasesDropdown\n      label={t('Status')}\n      options={options}\n      selected={selected}\n      onSelect={onSelect}\n    />\n  );\n}\n\nexport default ReleasesStatusOptions;\n\nconst StyledReleasesDropdown = styled(ReleasesDropdown)`\n  z-index: 3;\n  @media (max-width: ${p => p.theme.breakpoints.large}) {\n    order: 1;\n  }\n`;\n","import {Fragment} from 'react';\nimport {forceCheck} from 'react-lazyload';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport Alert from 'sentry/components/alert';\nimport GuideAnchor from 'sentry/components/assistant/guideAnchor';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {getRelativeSummary} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {ItemType} from 'sentry/components/smartSearchBar/types';\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {ALL_ACCESS_PROJECTS} from 'sentry/constants/pageFilters';\nimport {releaseHealth} from 'sentry/data/platformCategories';\nimport {IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport {PageContent, PageHeader} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {\n  Organization,\n  PageFilters,\n  Project,\n  Release,\n  ReleaseStatus,\n  Tag,\n} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {SEMVER_TAGS} from 'sentry/utils/discover/fields';\nimport Projects from 'sentry/utils/projects';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport withProjects from 'sentry/utils/withProjects';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport ReleaseArchivedNotice from '../detail/overview/releaseArchivedNotice';\nimport {isMobileRelease} from '../utils';\n\nimport ReleaseCard from './releaseCard';\nimport ReleasesAdoptionChart from './releasesAdoptionChart';\nimport ReleasesDisplayOptions, {ReleasesDisplayOption} from './releasesDisplayOptions';\nimport ReleasesPromo from './releasesPromo';\nimport ReleasesRequest from './releasesRequest';\nimport ReleasesSortOptions, {ReleasesSortOption} from './releasesSortOptions';\nimport ReleasesStatusOptions, {ReleasesStatusOption} from './releasesStatusOptions';\n\ntype RouteParams = {\n  orgId: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  projects: Project[];\n  selection: PageFilters;\n};\n\ntype State = {\n  releases: Release[];\n} & AsyncView['state'];\n\nclass ReleasesList extends AsyncView<Props, State> {\n  shouldReload = true;\n  shouldRenderBadRequests = true;\n\n  getTitle() {\n    return routeTitleGen(t('Releases'), this.props.organization.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, location} = this.props;\n    const {statsPeriod} = location.query;\n    const activeSort = this.getSort();\n    const activeStatus = this.getStatus();\n\n    const query = {\n      ...pick(location.query, ['project', 'environment', 'cursor', 'query', 'sort']),\n      summaryStatsPeriod: statsPeriod,\n      per_page: 20,\n      flatten: activeSort === ReleasesSortOption.DATE ? 0 : 1,\n      adoptionStages: 1,\n      status:\n        activeStatus === ReleasesStatusOption.ARCHIVED\n          ? ReleaseStatus.Archived\n          : ReleaseStatus.Active,\n    };\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'releases',\n        `/organizations/${organization.slug}/releases/`,\n        {query},\n        {disableEntireQuery: true},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    super.componentDidUpdate(prevProps, prevState);\n\n    if (prevState.releases !== this.state.releases) {\n      /**\n       * Manually trigger checking for elements in viewport.\n       * Helpful when LazyLoad components enter the viewport without resize or scroll events,\n       * https://github.com/twobin/react-lazyload#forcecheck\n       *\n       * HealthStatsCharts are being rendered only when they are scrolled into viewport.\n       * This is how we re-check them without scrolling once releases change as this view\n       * uses shouldReload=true and there is no reloading happening.\n       */\n      forceCheck();\n    }\n  }\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getSort(): ReleasesSortOption {\n    const {environments} = this.props.selection;\n    const {sort} = this.props.location.query;\n\n    // Require 1 environment for date adopted\n    if (sort === ReleasesSortOption.ADOPTION && environments.length !== 1) {\n      return ReleasesSortOption.DATE;\n    }\n\n    const sortExists = Object.values(ReleasesSortOption).includes(sort);\n    if (sortExists) {\n      return sort;\n    }\n\n    return ReleasesSortOption.DATE;\n  }\n\n  getDisplay(): ReleasesDisplayOption {\n    const {display} = this.props.location.query;\n\n    switch (display) {\n      case ReleasesDisplayOption.USERS:\n        return ReleasesDisplayOption.USERS;\n      default:\n        return ReleasesDisplayOption.SESSIONS;\n    }\n  }\n\n  getStatus(): ReleasesStatusOption {\n    const {status} = this.props.location.query;\n\n    switch (status) {\n      case ReleasesStatusOption.ARCHIVED:\n        return ReleasesStatusOption.ARCHIVED;\n      default:\n        return ReleasesStatusOption.ACTIVE;\n    }\n  }\n\n  getSelectedProject(): Project | undefined {\n    const {selection, projects} = this.props;\n\n    const selectedProjectId =\n      selection.projects && selection.projects.length === 1 && selection.projects[0];\n    return projects?.find(p => p.id === `${selectedProjectId}`);\n  }\n\n  get projectHasSessions() {\n    return this.getSelectedProject()?.hasSessions ?? null;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleSortBy = (sort: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, sort},\n    });\n  };\n\n  handleDisplay = (display: string) => {\n    const {location, router} = this.props;\n\n    let sort = location.query.sort;\n    if (\n      sort === ReleasesSortOption.USERS_24_HOURS &&\n      display === ReleasesDisplayOption.SESSIONS\n    ) {\n      sort = ReleasesSortOption.SESSIONS_24_HOURS;\n    } else if (\n      sort === ReleasesSortOption.SESSIONS_24_HOURS &&\n      display === ReleasesDisplayOption.USERS\n    ) {\n      sort = ReleasesSortOption.USERS_24_HOURS;\n    } else if (\n      sort === ReleasesSortOption.CRASH_FREE_USERS &&\n      display === ReleasesDisplayOption.SESSIONS\n    ) {\n      sort = ReleasesSortOption.CRASH_FREE_SESSIONS;\n    } else if (\n      sort === ReleasesSortOption.CRASH_FREE_SESSIONS &&\n      display === ReleasesDisplayOption.USERS\n    ) {\n      sort = ReleasesSortOption.CRASH_FREE_USERS;\n    }\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, display, sort},\n    });\n  };\n\n  handleStatus = (status: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, status},\n    });\n  };\n\n  trackAddReleaseHealth = () => {\n    const {organization, selection} = this.props;\n\n    if (organization.id && selection.projects[0]) {\n      trackAnalyticsEvent({\n        eventKey: `releases_list.click_add_release_health`,\n        eventName: `Releases List: Click Add Release Health`,\n        organization_id: parseInt(organization.id, 10),\n        project_id: selection.projects[0],\n      });\n    }\n  };\n\n  tagValueLoader = (key: string, search: string) => {\n    const {location, organization} = this.props;\n    const {project: projectId} = location.query;\n\n    return fetchTagValues(\n      this.api,\n      organization.slug,\n      key,\n      search,\n      projectId ? [projectId] : null,\n      location.query\n    );\n  };\n\n  getTagValues = async (tag: Tag, currentQuery: string): Promise<string[]> => {\n    const values = await this.tagValueLoader(tag.key, currentQuery);\n    return values.map(({value}) => value);\n  };\n\n  shouldShowLoadingIndicator() {\n    const {loading, releases, reloading} = this.state;\n\n    return (loading && !reloading) || (loading && !releases?.length);\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderError() {\n    return this.renderBody();\n  }\n\n  renderEmptyMessage() {\n    const {location} = this.props;\n    const {statsPeriod, start, end} = location.query;\n    const searchQuery = this.getQuery();\n    const activeSort = this.getSort();\n    const activeStatus = this.getStatus();\n\n    const selectedPeriod =\n      !!start && !!end\n        ? t('time range')\n        : getRelativeSummary(statsPeriod || DEFAULT_STATS_PERIOD).toLowerCase();\n\n    if (searchQuery && searchQuery.length) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">{`${t(\n            'There are no releases that match'\n          )}: '${searchQuery}'.`}</EmptyMessage>\n        </Panel>\n      );\n    }\n\n    if (activeSort === ReleasesSortOption.USERS_24_HOURS) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n            {t(\n              'There are no releases with active user data (users in the last 24 hours).'\n            )}\n          </EmptyMessage>\n        </Panel>\n      );\n    }\n\n    if (activeSort === ReleasesSortOption.SESSIONS_24_HOURS) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n            {t(\n              'There are no releases with active session data (sessions in the last 24 hours).'\n            )}\n          </EmptyMessage>\n        </Panel>\n      );\n    }\n\n    if (\n      activeSort === ReleasesSortOption.BUILD ||\n      activeSort === ReleasesSortOption.SEMVER\n    ) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n            {t('There are no releases with semantic versioning.')}\n          </EmptyMessage>\n        </Panel>\n      );\n    }\n\n    if (activeSort !== ReleasesSortOption.DATE) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n            {`${t('There are no releases with data in the')} ${selectedPeriod}.`}\n          </EmptyMessage>\n        </Panel>\n      );\n    }\n\n    if (activeStatus === ReleasesStatusOption.ARCHIVED) {\n      return (\n        <Panel>\n          <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n            {t('There are no archived releases.')}\n          </EmptyMessage>\n        </Panel>\n      );\n    }\n\n    return (\n      <Panel>\n        <EmptyMessage icon={<IconSearch size=\"xl\" />} size=\"large\">\n          {`${t('There are no releases with data in the')} ${selectedPeriod}.`}\n        </EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderHealthCta() {\n    const {organization} = this.props;\n    const {releases} = this.state;\n\n    const selectedProject = this.getSelectedProject();\n\n    if (!selectedProject || this.projectHasSessions !== false || !releases?.length) {\n      return null;\n    }\n\n    return (\n      <Projects orgId={organization.slug} slugs={[selectedProject.slug]}>\n        {({projects, initiallyLoaded, fetchError}) => {\n          const project = projects && projects.length === 1 && projects[0];\n          const projectCanHaveReleases =\n            project && project.platform && releaseHealth.includes(project.platform);\n\n          if (!initiallyLoaded || fetchError || !projectCanHaveReleases) {\n            return null;\n          }\n\n          return (\n            <Alert type=\"info\" showIcon>\n              <AlertText>\n                <div>\n                  {t(\n                    'To track user adoption, crash rates, session data and more, add Release Health to your current setup.'\n                  )}\n                </div>\n                <ExternalLink\n                  href=\"https://docs.sentry.io/product/releases/health/setup/\"\n                  onClick={this.trackAddReleaseHealth}\n                >\n                  {t('Add Release Health')}\n                </ExternalLink>\n              </AlertText>\n            </Alert>\n          );\n        }}\n      </Projects>\n    );\n  }\n\n  renderInnerBody(\n    activeDisplay: ReleasesDisplayOption,\n    showReleaseAdoptionStages: boolean\n  ) {\n    const {location, selection, organization, router} = this.props;\n    const {releases, reloading, releasesPageLinks} = this.state;\n\n    const selectedProject = this.getSelectedProject();\n    const hasReleasesSetup = selectedProject?.features.includes('releases');\n\n    if (this.shouldShowLoadingIndicator()) {\n      return <LoadingIndicator />;\n    }\n\n    if (!releases?.length && hasReleasesSetup) {\n      return this.renderEmptyMessage();\n    }\n\n    if (!releases?.length && !hasReleasesSetup) {\n      return (\n        <ReleasesPromo\n          organization={organization}\n          projectId={selection.projects.filter(p => p !== ALL_ACCESS_PROJECTS)[0]}\n        />\n      );\n    }\n\n    return (\n      <ReleasesRequest\n        releases={releases.map(({version}) => version)}\n        organization={organization}\n        selection={selection}\n        location={location}\n        display={[this.getDisplay()]}\n        releasesReloading={reloading}\n        healthStatsPeriod={location.query.healthStatsPeriod}\n      >\n        {({isHealthLoading, getHealthData}) => {\n          const singleProjectSelected =\n            selection.projects?.length === 1 &&\n            selection.projects[0] !== ALL_ACCESS_PROJECTS;\n          const isMobileProject =\n            selectedProject?.platform && isMobileRelease(selectedProject.platform);\n\n          return (\n            <Fragment>\n              {singleProjectSelected && this.projectHasSessions && isMobileProject && (\n                <ReleasesAdoptionChart\n                  organization={organization}\n                  selection={selection}\n                  location={location}\n                  router={router}\n                  activeDisplay={activeDisplay}\n                />\n              )}\n\n              {releases.map((release, index) => (\n                <ReleaseCard\n                  key={`${release.version}-${release.projects[0].slug}`}\n                  activeDisplay={activeDisplay}\n                  release={release}\n                  organization={organization}\n                  location={location}\n                  selection={selection}\n                  reloading={reloading}\n                  showHealthPlaceholders={isHealthLoading}\n                  isTopRelease={index === 0}\n                  getHealthData={getHealthData}\n                  showReleaseAdoptionStages={showReleaseAdoptionStages}\n                />\n              ))}\n              <Pagination pageLinks={releasesPageLinks} />\n            </Fragment>\n          );\n        }}\n      </ReleasesRequest>\n    );\n  }\n\n  renderBody() {\n    const {organization, selection} = this.props;\n    const {releases, reloading, error} = this.state;\n\n    const activeSort = this.getSort();\n    const activeStatus = this.getStatus();\n    const activeDisplay = this.getDisplay();\n\n    const hasAnyMobileProject = selection.projects\n      .map(id => `${id}`)\n      .map(ProjectsStore.getById)\n      .some(project => project?.platform && isMobileRelease(project.platform));\n    const showReleaseAdoptionStages =\n      hasAnyMobileProject && selection.environments.length === 1;\n    const hasReleasesSetup = releases && releases.length > 0;\n\n    return (\n      <PageFiltersContainer\n        showAbsolute={false}\n        timeRangeHint={t(\n          'Changing this date range will recalculate the release metrics.'\n        )}\n        hideGlobalHeader\n      >\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <PageHeader>\n              <PageHeading>{t('Releases')}</PageHeading>\n            </PageHeader>\n\n            {this.renderHealthCta()}\n\n            <ReleasesPageFilterBar condensed>\n              <ProjectPageFilter />\n              <EnvironmentPageFilter />\n              <DatePageFilter alignDropdown=\"left\" />\n            </ReleasesPageFilterBar>\n\n            <SortAndFilterWrapper>\n              <GuideAnchor\n                target=\"releases_search\"\n                position=\"bottom\"\n                disabled={!hasReleasesSetup}\n              >\n                <StyledSmartSearchBar\n                  searchSource=\"releases\"\n                  query={this.getQuery()}\n                  placeholder={t('Search by version, build, package, or stage')}\n                  maxSearchItems={5}\n                  hasRecentSearches={false}\n                  supportedTags={{\n                    ...SEMVER_TAGS,\n                    release: {\n                      key: 'release',\n                      name: 'release',\n                    },\n                  }}\n                  supportedTagType={ItemType.PROPERTY}\n                  onSearch={this.handleSearch}\n                  onGetTagValues={this.getTagValues}\n                />\n              </GuideAnchor>\n              <ReleasesStatusOptions\n                selected={activeStatus}\n                onSelect={this.handleStatus}\n              />\n              <ReleasesSortOptions\n                selected={activeSort}\n                selectedDisplay={activeDisplay}\n                onSelect={this.handleSortBy}\n                environments={selection.environments}\n              />\n              <ReleasesDisplayOptions\n                selected={activeDisplay}\n                onSelect={this.handleDisplay}\n              />\n            </SortAndFilterWrapper>\n\n            {!reloading &&\n              activeStatus === ReleasesStatusOption.ARCHIVED &&\n              !!releases?.length && <ReleaseArchivedNotice multi />}\n\n            {error\n              ? super.renderError(new Error('Unable to load all required endpoints'))\n              : this.renderInnerBody(activeDisplay, showReleaseAdoptionStages)}\n          </NoProjectMessage>\n        </PageContent>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nconst AlertText = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: ${space(2)};\n\n  > *:nth-child(1) {\n    flex: 1;\n  }\n  flex-direction: column;\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    flex-direction: row;\n  }\n`;\n\nconst ReleasesPageFilterBar = styled(PageFilterBar)`\n  margin-bottom: ${space(2)};\n`;\n\nconst SortAndFilterWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr repeat(3, max-content);\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst StyledSmartSearchBar = styled(SmartSearchBar)`\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-column: 1 / -1;\n  }\n`;\n\nexport default withProjects(withOrganization(withPageFilters(ReleasesList)));\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/releases-empty-state.svg';\nimport commitImage from 'sentry-images/spot/releases-tour-commits.svg';\nimport emailImage from 'sentry-images/spot/releases-tour-email.svg';\nimport resolutionImage from 'sentry-images/spot/releases-tour-resolution.svg';\nimport statsImage from 'sentry-images/spot/releases-tour-stats.svg';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureTourModal, {\n  TourImage,\n  TourStep,\n  TourText,\n} from 'sentry/components/modals/featureTourModal';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\n\nconst releasesSetupUrl = 'https://docs.sentry.io/product/releases/';\n\nconst docsLink = (\n  <Button external href={releasesSetupUrl}>\n    {t('Setup')}\n  </Button>\n);\n\nexport const RELEASES_TOUR_STEPS: TourStep[] = [\n  {\n    title: t('Suspect Commits'),\n    image: <TourImage src={commitImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Sentry suggests which commit caused an issue and who is likely responsible so you can triage.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Release Stats'),\n    image: <TourImage src={statsImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Get an overview of the commits in each release, and which issues were introduced or fixed.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Easily Resolve'),\n    image: <TourImage src={resolutionImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Automatically resolve issues by including the issue number in your commit message.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Deploy Emails'),\n    image: <TourImage src={emailImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Receive email notifications about when your code gets deployed. This can be customized in settings.'\n        )}\n      </TourText>\n    ),\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  projectId?: number;\n};\n\nclass ReleasesPromo extends Component<Props> {\n  componentDidMount() {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.landing_card_viewed',\n      eventName: 'Releases: Landing Card Viewed',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n    });\n  }\n\n  handleTourAdvance = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.advance',\n      eventName: 'Releases: Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  handleClose = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.close',\n      eventName: 'Releases: Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  render() {\n    return (\n      <OnboardingPanel image={<img src={emptyStateImg} />}>\n        <h3>{t('Demystify Releases')}</h3>\n        <p>\n          {t(\n            'Did you know how many errors your latest release triggered? We do. And more, too.'\n          )}\n        </p>\n        <ButtonList gap={1}>\n          <Button priority=\"primary\" href={releasesSetupUrl} external>\n            {t('Start Setup')}\n          </Button>\n          <FeatureTourModal\n            steps={RELEASES_TOUR_STEPS}\n            onAdvance={this.handleTourAdvance}\n            onCloseModal={this.handleClose}\n            doneText={t('Start Setup')}\n            doneUrl={releasesSetupUrl}\n          >\n            {({showModal}) => (\n              <Button priority=\"default\" onClick={showModal}>\n                {t('Take a Tour')}\n              </Button>\n            )}\n          </FeatureTourModal>\n        </ButtonList>\n      </OnboardingPanel>\n    );\n  }\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport default ReleasesPromo;\n","var baseSum = require('./_baseSum');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nmodule.exports = baseMean;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseMean = require('./_baseMean'),\n    identity = require('./identity');\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n","var baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n"],"names":["AvatarList","Component","render","className","users","avatarSize","maxVisibleAvatars","renderTooltip","typeMembers","tooltipOptions","this","props","visibleUsers","slice","numCollapsedUsers","length","position","AvatarListWrapper","title","CollapsedUsers","size","Plus","map","user","StyledAvatar","hasTooltip","id","email","Circle","p","css","theme","background","UserAvatar","gray200","gray300","Math","floor","DEFAULT","realtime","showDetail","left","right","bottom","DataZoomSlider","Array","isArray","getDate","date","moment","format","ChartZoom","constructor","super","currentPeriod","period","start","end","saveHistory","router","onZoom","usePageDate","startFormatted","endFormatted","history","push","callIfFunction","zooming","newQuery","location","query","pageStart","getUtcDateString","undefined","pageEnd","pageStatsPeriod","qs","pathname","updateDateTime","getUtcToLocalDateObject","saveCurrentPeriod","chart","onChartReady","evt","setPeriod","onRestore","model","getModel","startValue","endValue","_payload","batch","previousPeriod","pop","onDataZoom","_props","zoom","_componentsViews","find","c","_features","dataZoom","_isZoomActive","dispatchAction","type","key","dataZoomSelectActive","onFinished","componentDidUpdate","disabled","utc","_utc","_start","_end","children","xAxisIndex","_router","_onZoom","_onRestore","_onChartReady","_onDataZoom","_onFinished","showSlider","chartZoomOptions","isGroupedByDate","handleChartReady","DataZoomInside","showTimeInTooltip","toolBox","ToolBox","back","iconStyle","borderWidth","color","opacity","handleDataZoom","handleChartFinished","handleZoomRestore","zoomOnMouseWheel","zoomLock","throttle","getFeatures","features","yAxisIndex","options","top","itemSize","z","feature","LineChart","series","seriesOptions","seriesName","data","dataArray","LineSeries","name","value","animation","animationThreshold","animationDuration","LoadingPanel","height","_height","defaultProps","TransitionChart","prevReloading","reloading","prevLoading","loading","state","nextReloading","nextLoading","Fragment","String","visible","other","backgroundSecondary","borderRadius","NotAvailable","tooltip","skipWrapper","Wrapper","OnboardingPanel","image","Container","IlloBox","StyledBox","space","breakpoints","small","medium","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","renderComponent","ReleaseArchivedNotice","multi","t","UnarchiveButton","priority","onClick","Button","textColor","ReleaseCardCommits","release","withHeading","commitCount","authorCount","authors","releaseSummary","tn","join","ReleaseSummaryHeading","style","display","fontSizeSmall","ReleasesDropdown","label","prefix","selected","onSelect","mappedOptions","Object","entries","isDisabled","onChange","opt","triggerProps","width","ReleasesDisplayOption","displayOptions","SESSIONS","USERS","ReleasesDisplayOptions","StyledReleasesDropdown","large","getCrashFreeIcon","crashFreePercent","iconSize","isCircled","ReleaseCardProjectRow","index","project","organization","getHealthData","releaseVersion","activeDisplay","showPlaceholders","showReleaseAdoptionStages","isTopRelease","adoptionStages","useTheme","newGroups","crashCount","getCrashCount","crashFreeRate","getCrashFreeRate","get24hCountByProject","timeSeries","getTimeSeries","adoption","getAdoption","adoptionStage","slug","stage","adoptionStageLabel","Boolean","isMobileRelease","platform","ADOPTION_STAGE_LABELS","ProjectRow","ReleaseProjectsLayout","ReleaseProjectColumn","AdoptionStageColumn","tooltipTitle","isHoverable","to","AdoptionColumn","StyledPlaceholder","AdoptionWrapper","round","debounce","hideDelay","tooltipFormatter","suffix","toLocaleString","colors","purple300","CrashFreeRateColumn","defined","CrashFreeWrapper","displayCrashFreePercent","CrashesColumn","getReleaseUnhandledIssuesUrl","NewIssuesColumn","getReleaseNewIssuesUrl","ViewColumn","target","encodeURIComponent","extractSelectionParameters","yAxis","PanelItem","fontSizeMedium","Placeholder","overflowEllipsis","ReleaseCardStatsPeriod","selection","activePeriod","healthStatsPeriod","HealthStatsPeriodOption","datetime","Period","Link","gray400","withPageFilters","getReleaseProjectId","projects","includes","ReleaseCard","shouldComponentUpdate","nextProps","showHealthPlaceholders","version","lastDeploy","dateCreated","versionInfo","projectsToShow","projectsToHide","partition","sort","a","b","localeCompare","StyledPanel","ReleaseInfo","ReleaseInfoHeader","VersionWrapper","StyledVersion","tooltipRawVersion","anchor","ReleaseInfoSubheader","package","PackageName","ellipsisDirection","dateFinished","environment","ReleaseProjects","ReleaseProjectsHeader","lightText","ProjectRows","expandButton","onExpand","numberOfHiddenItems","ExpandButtonWrapper","tct","collapseButton","onCollapse","CollapseButtonWrapper","HiddenProjectsMessage","limitedProjects","remainderLength","getHiddenProjectsTooltip","number","Version","Panel","border","TextOverflow","fontSizeExtraLarge","PanelHeader","alpha","string","xlarge","omitIgnoredProps","omit","getInterval","datetimeObj","diffInMinutes","getDiffInMinutes","TWO_WEEKS","ONE_WEEK","TWENTY_FOUR_HOURS","reduceTimeSeriesGroups","acc","group","field","forEach","sessionDisplayToField","SessionFieldWithOperation","ReleasesRequest","errored","statusCountByReleaseInPeriod","totalCountByReleaseIn24h","totalCountByProjectIn24h","statusCountByProjectInPeriod","totalCountByReleaseInPeriod","totalCountByProjectInPeriod","async","api","disable","clear","setState","promises","fetchStatusCountByReleaseInPeriod","fetchTotalCountByReleaseIn24h","fetchTotalCountByProjectIn24h","fetchStatusCountByProjectInPeriod","fetchTotalCountByReleaseInPeriod","fetchTotalCountByProjectInPeriod","Promise","all","error","addErrorMessage","responseJSON","detail","get24hCountByRelease","groups","by","totals","totalCount","filter","reduce","crashedCount","getCrashFreePercent","percent","getPeriodTimeSeries","get24hTimeSeries","intervals","projectData","releaseData","interval","valueOf","countByRelease","getPeriodCountByRelease","countByProject","getPeriodCountByProject","componentDidMount","fetchData","prevProps","releasesReloading","isEqual","path","baseQueryParams","defaultStatsPeriod","releases","MutableSearch","allReleases","formatString","normalizeDateTimeParams","pick","values","URL_PARAM","requestPromise","Set","d","groupBy","statsPeriod","isHealthLoading","withApi","ReleasesAdoptionChart","params","seriesId","decodeScalar","getReleasesSeries","response","formatVersion","getAdoptionSeries","emphasis","focus","renderEmpty","withPadding","ChartHeader","ChartFooter","getCount","releasesSeries","numDataPoints","xAxisData","point","hideLastPoint","findIndex","ChartTitle","zoomRenderProps","grid","min","max","splitNumber","axisLabel","formatter","xAxis","show","seriesParams","timestamp","first","second","third","rest","s","restSum","seriesToRender","compact","marker","periodObj","parseStatsPeriod","periodLength","intervalStart","intervalEnd","dataIndex","add","parseInt","truncationFormatter","toFixed","handleClick","HeaderTitleLegend","PanelFooter","ReleasesSortOption","ReleasesSortOptions","selectedDisplay","environments","sortOptions","DATE","USERS_24_HOURS","CRASH_FREE_USERS","SESSIONS_24_HOURS","CRASH_FREE_SESSIONS","BUILD","SEMVER","ADOPTION","ReleasesStatusOption","ACTIVE","ARCHIVED","ReleasesStatusOptions","ReleasesList","cursor","status","trackAnalyticsEvent","eventKey","eventName","organization_id","project_id","search","projectId","fetchTagValues","tag","currentQuery","tagValueLoader","routeTitleGen","getEndpoints","activeSort","getSort","activeStatus","getStatus","summaryStatsPeriod","per_page","flatten","ReleaseStatus","disableEntireQuery","prevState","forceCheck","getQuery","getDisplay","getSelectedProject","selectedProjectId","projectHasSessions","hasSessions","shouldShowLoadingIndicator","renderLoading","renderBody","renderError","renderEmptyMessage","searchQuery","selectedPeriod","getRelativeSummary","DEFAULT_STATS_PERIOD","toLowerCase","icon","renderHealthCta","selectedProject","orgId","slugs","initiallyLoaded","fetchError","projectCanHaveReleases","releaseHealth","showIcon","AlertText","href","trackAddReleaseHealth","renderInnerBody","releasesPageLinks","hasReleasesSetup","singleProjectSelected","ALL_ACCESS_PROJECTS","isMobileProject","pageLinks","ProjectsStore","some","showAbsolute","timeRangeHint","hideGlobalHeader","ReleasesPageFilterBar","condensed","alignDropdown","SortAndFilterWrapper","StyledSmartSearchBar","searchSource","placeholder","maxSearchItems","hasRecentSearches","supportedTags","SEMVER_TAGS","supportedTagType","ItemType","onSearch","handleSearch","onGetTagValues","getTagValues","handleStatus","handleSortBy","handleDisplay","Error","PageFilterBar","SmartSearchBar","withProjects","withOrganization","releasesSetupUrl","docsLink","external","RELEASES_TOUR_STEPS","src","body","actions","ReleasesPromo","step","duration","emptyStateImg","ButtonList","gap","steps","onAdvance","handleTourAdvance","onCloseModal","handleClose","doneText","doneUrl","showModal","ButtonBar","baseSum","module","exports","array","iteratee","result","current","baseMean","identity","predicate","TypeError","args","arguments","call","apply","baseIteratee","negate","pickBy","object"],"sourceRoot":""}