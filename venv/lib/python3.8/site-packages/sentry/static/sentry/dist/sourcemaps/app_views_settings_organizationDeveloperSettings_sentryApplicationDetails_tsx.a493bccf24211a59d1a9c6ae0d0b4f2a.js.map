{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_sentryApplicationDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/sentryApplication.tsx","webpack:///./app/utils/consolidatedScopes.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/permissionSelection.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/constants.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/subscriptionBox.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/resourceSubscriptions.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/permissionsObserver.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/sentryApplicationDetails.tsx","webpack:///./app/actionCreators/sentryAppTokens.tsx","webpack:///../node_modules/lodash/invertBy.js"],"sourcesContent":["import {Field} from 'sentry/components/forms/type';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {tct} from 'sentry/locale';\nimport {extractMultilineFields} from 'sentry/utils';\n\nconst getPublicFormFields = (): Field[] => [\n  {\n    name: 'name',\n    type: 'string',\n    required: true,\n    placeholder: 'e.g. My Integration',\n    label: 'Name',\n    help: 'Human readable name of your Integration.',\n  },\n  {\n    name: 'author',\n    type: 'string',\n    required: true,\n    placeholder: 'e.g. Acme Software',\n    label: 'Author',\n    help: 'The company or person who built and maintains this Integration.',\n  },\n  {\n    name: 'webhookUrl',\n    type: 'string',\n    required: true,\n    label: 'Webhook URL',\n    placeholder: 'e.g. https://example.com/sentry/webhook/',\n    help: tct(\n      'All webhook requests for your integration will be sent to this URL. Visit the [webhook_docs:documentation] to see the different types and payloads.',\n      {\n        webhook_docs: (\n          <ExternalLink href=\"https://docs.sentry.io/product/integrations/integration-platform/webhooks/\" />\n        ),\n      }\n    ),\n  },\n  {\n    name: 'redirectUrl',\n    type: 'string',\n    label: 'Redirect URL',\n    placeholder: 'e.g. https://example.com/sentry/setup/',\n    help: 'The URL Sentry will redirect users to after installation.',\n  },\n  {\n    name: 'verifyInstall',\n    label: 'Verify Installation',\n    type: 'boolean',\n    help: 'If enabled, installations will need to be verified before becoming installed.',\n  },\n  {\n    name: 'isAlertable',\n    type: 'boolean',\n    label: 'Alert Rule Action',\n    disabled: ({webhookDisabled}) => webhookDisabled,\n    disabledReason: 'Cannot enable alert rule action without a webhook url',\n    help: tct(\n      'If enabled, this integration will be available in Issue Alert rules and Metric Alert rules in Sentry. The notification destination is the Webhook URL specified above. More on actions [learn_more:here].',\n      {\n        learn_more: (\n          <ExternalLink href=\"https://docs.sentry.io/product/alerts-notifications/notifications/\" />\n        ),\n      }\n    ),\n  },\n  {\n    name: 'schema',\n    type: 'textarea',\n    label: 'Schema',\n    autosize: true,\n    rows: 1,\n    help: tct(\n      'Schema for your UI components. Click [schema_docs:here] for documentation.',\n      {\n        schema_docs: (\n          <ExternalLink href=\"https://docs.sentry.io/product/integrations/integration-platform/ui-components/\" />\n        ),\n      }\n    ),\n    getValue: (val: string) => (val === '' ? {} : JSON.parse(val)),\n    setValue: (val: string) => {\n      const schema = JSON.stringify(val, null, 2);\n      if (schema === '{}') {\n        return '';\n      }\n      return schema;\n    },\n    validate: ({id, form}) => {\n      if (!form.schema) {\n        return [];\n      }\n\n      try {\n        JSON.parse(form.schema);\n      } catch (e) {\n        return [[id, 'Invalid JSON']];\n      }\n      return [];\n    },\n  },\n  {\n    name: 'overview',\n    type: 'textarea',\n    label: 'Overview',\n    autosize: true,\n    rows: 1,\n    help: 'Description of your Integration and its functionality.',\n  },\n  {\n    name: 'allowedOrigins',\n    type: 'string',\n    multiline: true,\n    placeholder: 'e.g. example.com',\n    label: 'Authorized JavaScript Origins',\n    help: 'Separate multiple entries with a newline.',\n    getValue: (val: string) => extractMultilineFields(val),\n    setValue: (val: string[] | undefined | null) =>\n      (val && typeof val.join === 'function' && val.join('\\n')) || '',\n  },\n];\n\nexport const publicIntegrationForms = [\n  {\n    title: 'Public Integration Details',\n    fields: getPublicFormFields(),\n  },\n];\n\nconst getInternalFormFields = () => {\n  // Generate internal form fields copy copying the public form fields and\n  // making adjustments:\n  //\n  //   1. remove fields not needed for internal integrations\n  //   2. make webhookUrl optional\n\n  const internalFormFields = getPublicFormFields().filter(\n    formField =>\n      !['redirectUrl', 'verifyInstall', 'author'].includes(formField.name || '')\n  );\n  const webhookField = internalFormFields.find(field => field.name === 'webhookUrl');\n  if (webhookField) {\n    webhookField.required = false;\n  }\n  return internalFormFields;\n};\n\nexport const internalIntegrationForms = [\n  {\n    title: 'Internal Integration Details',\n    fields: getInternalFormFields(),\n  },\n];\n","import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'sentry/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  admin: string[];\n  read: string[];\n  write: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport find from 'lodash/find';\nimport flatMap from 'lodash/flatMap';\n\nimport FormContext from 'sentry/components/forms/formContext';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {SENTRY_APP_PERMISSIONS} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {PermissionResource, Permissions, PermissionValue} from 'sentry/types/index';\n\n/**\n * Custom form element that presents API scopes in a resource-centric way. Meaning\n * a dropdown for each resource, that rolls up into a flat list of scopes.\n *\n *\n * API Scope vs Permission\n *\n *    \"API Scopes\" are the string identifier that gates an endpoint. For example,\n *    `project:read` or `org:admin`. They're made up of two parts:\n *\n *       <resource>:<access>\n *\n *    \"Permissions\" are a more user-friendly way of conveying this same information.\n *    They're roughly the same with one exception:\n *\n *       - No Access\n *       - Read\n *       - Read & Write\n *       - Admin\n *\n *    \"Read & Write\" actually maps to the `write` access level since `read` is\n *    implied. Similarly, `admin` implies `read` and `write`.\n *\n *    This components displays things per Resource. Meaning the User selects\n *    \"Read\", \"Read & Write\", or \"Admin\" for Project or Organization or etc.\n *\n *    === Scopes to Permissions\n *\n *    The first thing this component does on instantiation is take the list of API\n *    Scopes passed via `props` and converts them to \"Permissions.\n *\n *    So a list of scopes like the following:\n *\n *       ['project:read', 'project:write', 'org:admin']\n *\n *    will become an object that looks like:\n *\n *       {\n *         'Project': 'write',\n *         'Organization': 'admin',\n *       }\n *\n *\n * State\n *\n *    This component stores state like the example object from above. When the\n *    User changes the Permission for a particular resource, it updates the\n *    `state.permissions` object to reflect the change.\n *\n *\n * Updating the Form Field Value\n *\n *    In addition to updating the state, when a value is changed this component\n *    recalculates the full list of API Scopes that need to be passed to the API.\n *\n *    So if the User has changed Project to \"Admin\" and Organization to \"Read & Write\",\n *    we end up with a `state.permissions` like:\n *\n *       {\n *         'Project': 'admin',\n *         'Organization': 'write',\n *       }\n *\n *    From there, we calculate the full list of API Scopes. This list includes all\n *    implied scopes, meaning the above state would result in:\n *\n *       ['project:read', 'project:write', 'project:admin', 'org:read', 'org:write']\n *\n */\n\ntype Props = {\n  appPublished: boolean;\n  onChange: (permissions: Permissions) => void;\n  permissions: Permissions;\n};\n\ntype State = {\n  permissions: Permissions;\n};\n\nfunction findResource(r: PermissionResource) {\n  return find(SENTRY_APP_PERMISSIONS, ['resource', r]);\n}\n\nexport default class PermissionSelection extends Component<Props, State> {\n  state: State = {\n    permissions: this.props.permissions,\n  };\n\n  static contextType = FormContext;\n\n  /**\n   * Converts the \"Permission\" values held in `state` to a list of raw\n   * API scopes we can send to the server. For example:\n   *\n   *    ['org:read', 'org:write', ...]\n   *\n   */\n  permissionStateToList() {\n    const {permissions} = this.state;\n    return flatMap(\n      Object.entries(permissions),\n      ([r, p]) => findResource(r as PermissionResource)?.choices?.[p]?.scopes\n    );\n  }\n\n  onChange = (resource: PermissionResource, choice: PermissionValue) => {\n    const {permissions} = this.state;\n    permissions[resource] = choice;\n    this.save(permissions);\n  };\n\n  save = (permissions: Permissions) => {\n    this.setState({permissions});\n    this.props.onChange(permissions);\n    this.context.form.setValue('scopes', this.permissionStateToList());\n  };\n\n  render() {\n    const {permissions} = this.state;\n\n    return (\n      <Fragment>\n        {SENTRY_APP_PERMISSIONS.map(config => {\n          const options = Object.entries(config.choices).map(([value, {label}]) => ({\n            value,\n            label,\n          }));\n\n          const value = permissions[config.resource];\n\n          return (\n            <SelectField\n              // These are not real fields we want submitted, so we use\n              // `--permission` as a suffix here, then filter these\n              // fields out when submitting the form in\n              // sentryApplicationDetails.jsx\n              name={`${config.resource}--permission`}\n              key={config.resource}\n              options={options}\n              help={t(config.help)}\n              label={t(config.label || config.resource)}\n              onChange={this.onChange.bind(this, config.resource)}\n              value={value}\n              defaultValue={value}\n              disabled={this.props.appPublished}\n              disabledReason={t('Cannot update permissions on a published integration')}\n            />\n          );\n        })}\n      </Fragment>\n    );\n  }\n}\n","export const EVENT_CHOICES = ['issue', 'error', 'comment'] as const;\n\nexport const DESCRIPTIONS = {\n  issue: 'created, resolved, assigned, ignored',\n  error: 'created',\n  comment: 'created, edited, deleted',\n} as const;\n\nexport const PERMISSIONS_MAP = {\n  issue: 'Event',\n  error: 'Event',\n  comment: 'Event',\n} as const;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {\n  DESCRIPTIONS,\n  EVENT_CHOICES,\n  PERMISSIONS_MAP,\n} from 'sentry/views/settings/organizationDeveloperSettings/constants';\n\ntype Resource = typeof EVENT_CHOICES[number];\n\ntype DefaultProps = {\n  webhookDisabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  checked: boolean;\n  disabledFromPermissions: boolean;\n  isNew: boolean;\n  onChange: (resource: Resource, checked: boolean) => void;\n  organization: Organization;\n  resource: Resource;\n};\n\nexport class SubscriptionBox extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    webhookDisabled: false,\n  };\n\n  onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = evt.target.checked;\n    const {resource} = this.props;\n    this.props.onChange(resource, checked);\n  };\n\n  render() {\n    const {resource, organization, webhookDisabled, checked, isNew} = this.props;\n    const features = new Set(organization.features);\n\n    let disabled = this.props.disabledFromPermissions || webhookDisabled;\n    let message = `Must have at least 'Read' permissions enabled for ${PERMISSIONS_MAP[resource]}`;\n    if (resource === 'error' && !features.has('integrations-event-hooks')) {\n      disabled = true;\n      message =\n        'Your organization does not have access to the error subscription resource.';\n    }\n    if (webhookDisabled) {\n      message = 'Cannot enable webhook subscription without specifying a webhook url';\n    }\n\n    return (\n      <Fragment>\n        <Tooltip disabled={!disabled} title={message} key={resource}>\n          <SubscriptionGridItem disabled={disabled}>\n            <SubscriptionInfo>\n              <SubscriptionTitle>\n                {t(`${resource}`)}\n                {isNew && <FeatureBadge type=\"new\" />}\n              </SubscriptionTitle>\n              <SubscriptionDescription>\n                {t(`${DESCRIPTIONS[resource]}`)}\n              </SubscriptionDescription>\n            </SubscriptionInfo>\n            <Checkbox\n              key={`${resource}${checked}`}\n              disabled={disabled}\n              id={resource}\n              value={resource}\n              checked={checked}\n              onChange={this.onChange}\n            />\n          </SubscriptionGridItem>\n        </Tooltip>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(SubscriptionBox);\n\nconst SubscriptionGridItem = styled('div')<{disabled: boolean}>`\n  display: flex;\n  justify-content: space-between;\n  background: ${p => p.theme.backgroundSecondary};\n  opacity: ${p => (p.disabled ? 0.3 : 1)};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: ${space(1.5)};\n  padding: ${space(1.5)};\n  box-sizing: border-box;\n`;\n\nconst SubscriptionInfo = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst SubscriptionDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n  color: ${p => p.theme.gray300};\n`;\n\nconst SubscriptionTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1;\n  color: ${p => p.theme.textColor};\n  white-space: nowrap;\n  margin-bottom: ${space(0.75)};\n`;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Context} from 'sentry/components/deprecatedforms/form';\nimport FormContext from 'sentry/components/forms/formContext';\nimport {Permissions, WebhookEvent} from 'sentry/types';\nimport {\n  EVENT_CHOICES,\n  PERMISSIONS_MAP,\n} from 'sentry/views/settings/organizationDeveloperSettings/constants';\nimport SubscriptionBox from 'sentry/views/settings/organizationDeveloperSettings/subscriptionBox';\n\ntype Resource = typeof EVENT_CHOICES[number];\n\ntype DefaultProps = {\n  webhookDisabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  events: WebhookEvent[];\n  onChange: (events: WebhookEvent[]) => void;\n  permissions: Permissions;\n};\n\nexport default class Subscriptions extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    webhookDisabled: false,\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    this.context.form.setValue('events', this.props.events);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // if webhooks are disabled, unset the events\n    if (nextProps.webhookDisabled && this.props.events.length) {\n      this.save([]);\n    }\n  }\n\n  componentDidUpdate() {\n    const {permissions, events} = this.props;\n\n    const permittedEvents = events.filter(\n      resource => permissions[PERMISSIONS_MAP[resource]] !== 'no-access'\n    );\n\n    if (JSON.stringify(events) !== JSON.stringify(permittedEvents)) {\n      this.save(permittedEvents);\n    }\n  }\n\n  static contextType = FormContext;\n\n  onChange = (resource: Resource, checked: boolean) => {\n    const events = new Set(this.props.events);\n    checked ? events.add(resource) : events.delete(resource);\n    this.save(Array.from(events));\n  };\n\n  save = (events: WebhookEvent[]) => {\n    this.props.onChange(events);\n    this.context.form.setValue('events', events);\n  };\n\n  render() {\n    const {permissions, webhookDisabled, events} = this.props;\n\n    return (\n      <SubscriptionGrid>\n        {EVENT_CHOICES.map(choice => {\n          const disabledFromPermissions =\n            permissions[PERMISSIONS_MAP[choice]] === 'no-access';\n          return (\n            <Fragment key={choice}>\n              <SubscriptionBox\n                key={choice}\n                disabledFromPermissions={disabledFromPermissions}\n                webhookDisabled={webhookDisabled}\n                checked={events.includes(choice) && !disabledFromPermissions}\n                resource={choice}\n                onChange={this.onChange}\n                isNew={choice === 'comment'}\n              />\n            </Fragment>\n          );\n        })}\n      </SubscriptionGrid>\n    );\n  }\n}\n\nconst SubscriptionGrid = styled('div')`\n  display: grid;\n  grid-template: auto / 1fr 1fr 1fr;\n  @media (max-width: ${props => props.theme.breakpoints.large}) {\n    grid-template: 1fr 1fr 1fr / auto;\n  }\n`;\n","import {Component, Fragment} from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Permissions, Scope, WebhookEvent} from 'sentry/types';\nimport {toResourcePermissions} from 'sentry/utils/consolidatedScopes';\nimport PermissionSelection from 'sentry/views/settings/organizationDeveloperSettings/permissionSelection';\nimport Subscriptions from 'sentry/views/settings/organizationDeveloperSettings/resourceSubscriptions';\n\ntype DefaultProps = {\n  appPublished: boolean;\n  webhookDisabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  events: WebhookEvent[];\n  scopes: Scope[];\n};\n\ntype State = {\n  events: WebhookEvent[];\n  permissions: Permissions;\n};\n\nexport default class PermissionsObserver extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    webhookDisabled: false,\n    appPublished: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      permissions: this.scopeListToPermissionState(),\n      events: this.props.events,\n    };\n  }\n\n  /**\n   * Converts the list of raw API scopes passed in to an object that can\n   * before stored and used via `state`. This object is structured by\n   * resource and holds \"Permission\" values. For example:\n   *\n   *    {\n   *      'Project': 'read',\n   *      ...,\n   *    }\n   *\n   */\n  scopeListToPermissionState() {\n    return toResourcePermissions(this.props.scopes);\n  }\n\n  onPermissionChange = (permissions: Permissions) => {\n    this.setState({permissions});\n  };\n\n  onEventChange = (events: WebhookEvent[]) => {\n    this.setState({events});\n  };\n\n  render() {\n    const {permissions, events} = this.state;\n    return (\n      <Fragment>\n        <Panel>\n          <PanelHeader>{t('Permissions')}</PanelHeader>\n          <PanelBody>\n            <PermissionSelection\n              permissions={permissions}\n              onChange={this.onPermissionChange}\n              appPublished={this.props.appPublished}\n            />\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Webhooks')}</PanelHeader>\n          <PanelBody>\n            <Subscriptions\n              permissions={permissions}\n              events={events}\n              onChange={this.onEventChange}\n              webhookDisabled={this.props.webhookDisabled}\n            />\n          </PanelBody>\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\nimport {Observer} from 'mobx-react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {\n  addSentryAppToken,\n  removeSentryAppToken,\n} from 'sentry/actionCreators/sentryAppTokens';\nimport Avatar from 'sentry/components/avatar';\nimport AvatarChooser, {Model} from 'sentry/components/avatarChooser';\nimport Button from 'sentry/components/button';\nimport DateTime from 'sentry/components/dateTime';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport FormModel, {FieldValue} from 'sentry/components/forms/model';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {SENTRY_APP_PERMISSIONS} from 'sentry/constants';\nimport {\n  internalIntegrationForms,\n  publicIntegrationForms,\n} from 'sentry/data/forms/sentryApplication';\nimport {IconAdd, IconDelete} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {InternalAppApiToken, Scope, SentryApp} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport AsyncView from 'sentry/views/asyncView';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionsObserver from 'sentry/views/settings/organizationDeveloperSettings/permissionsObserver';\n\ntype Resource = 'Project' | 'Team' | 'Release' | 'Event' | 'Organization' | 'Member';\n\nconst AVATAR_STYLES = {\n  color: {\n    size: 50,\n    title: t('Default Logo'),\n    previewText: t('The default icon for integrations'),\n    help: t('Image must be between 256px by 256px and 1024px by 1024px.'),\n  },\n  simple: {\n    size: 20,\n    title: t('Default Icon'),\n    previewText: tct('This is a silhouette icon used only for [uiDocs:UI Components]', {\n      uiDocs: (\n        <ExternalLink href=\"https://docs.sentry.io/product/integrations/integration-platform/ui-components/\" />\n      ),\n    }),\n    help: t(\n      'Image must be between 256px by 256px and 1024px by 1024px, and may only use black and transparent pixels.'\n    ),\n  },\n};\n\n/**\n * Finds the resource in SENTRY_APP_PERMISSIONS that contains a given scope\n * We should always find a match unless there is a bug\n * @param {Scope} scope\n * @return {Resource | undefined}\n */\nconst getResourceFromScope = (scope: Scope): Resource | undefined => {\n  for (const permObj of SENTRY_APP_PERMISSIONS) {\n    const allChoices = Object.values(permObj.choices);\n\n    const allScopes = allChoices.reduce(\n      (_allScopes: string[], choice) => _allScopes.concat(choice?.scopes ?? []),\n      []\n    );\n\n    if (allScopes.includes(scope)) {\n      return permObj.resource as Resource;\n    }\n  }\n  return undefined;\n};\n\nclass SentryAppFormModel extends FormModel {\n  /**\n   * Filter out Permission input field values.\n   *\n   * Permissions (API Scopes) are presented as a list of SelectFields.\n   * Instead of them being submitted individually, we want them rolled\n   * up into a single list of scopes (this is done in `PermissionSelection`).\n   *\n   * Because they are all individual inputs, we end up with attributes\n   * in the JSON we send to the API that we don't want.\n   *\n   * This function filters those attributes out of the data that is\n   * ultimately sent to the API.\n   */\n  getData() {\n    return this.fields.toJSON().reduce((data, [k, v]) => {\n      if (!k.endsWith('--permission')) {\n        data[k] = v;\n      }\n      return data;\n    }, {});\n  }\n\n  /**\n   * We need to map the API response errors to the actual form fields.\n   * We do this by pulling out scopes and mapping each scope error to the correct input.\n   * @param {Object} responseJSON\n   */\n  mapFormErrors(responseJSON?: any) {\n    if (!responseJSON) {\n      return responseJSON;\n    }\n    const formErrors = omit(responseJSON, ['scopes']);\n    if (responseJSON.scopes) {\n      responseJSON.scopes.forEach((message: string) => {\n        // find the scope from the error message of a specific format\n        const matches = message.match(/Requested permission of (\\w+:\\w+)/);\n        if (matches) {\n          const scope = matches[1];\n          const resource = getResourceFromScope(scope as Scope);\n          // should always match but technically resource can be undefined\n          if (resource) {\n            formErrors[`${resource}--permission`] = [message];\n          }\n        }\n      });\n    }\n    return formErrors;\n  }\n}\n\ntype Props = RouteComponentProps<{orgId: string; appSlug?: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  app: SentryApp | null;\n  tokens: InternalAppApiToken[];\n};\n\nexport default class SentryApplicationDetails extends AsyncView<Props, State> {\n  form = new SentryAppFormModel();\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      app: null,\n      tokens: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {appSlug} = this.props.params;\n    if (appSlug) {\n      return [\n        ['app', `/sentry-apps/${appSlug}/`],\n        ['tokens', `/sentry-apps/${appSlug}/api-tokens/`],\n      ];\n    }\n\n    return [];\n  }\n\n  getHeaderTitle() {\n    const {app} = this.state;\n    const action = app ? 'Edit' : 'Create';\n    const type = this.isInternal ? 'Internal' : 'Public';\n    return tct('[action] [type] Integration', {action, type});\n  }\n\n  // Events may come from the API as \"issue.created\" when we just want \"issue\" here.\n  normalize(events) {\n    if (events.length === 0) {\n      return events;\n    }\n\n    return events.map(e => e.split('.').shift());\n  }\n\n  handleSubmitSuccess = (data: SentryApp) => {\n    const {app} = this.state;\n    const {orgId} = this.props.params;\n    const type = this.isInternal ? 'internal' : 'public';\n    const baseUrl = `/settings/${orgId}/developer-settings/`;\n    const url = app ? `${baseUrl}?type=${type}` : `${baseUrl}${data.slug}/`;\n    if (app) {\n      addSuccessMessage(t('%s successfully saved.', data.name));\n    } else {\n      addSuccessMessage(t('%s successfully created.', data.name));\n    }\n    browserHistory.push(url);\n  };\n\n  handleSubmitError = err => {\n    let errorMessage = t('Unknown Error');\n    if (err.status >= 400 && err.status < 500) {\n      errorMessage = err?.responseJSON.detail ?? errorMessage;\n    }\n    addErrorMessage(errorMessage);\n\n    if (this.form.formErrors) {\n      const firstErrorFieldId = Object.keys(this.form.formErrors)[0];\n\n      if (firstErrorFieldId) {\n        scrollToElement(`#${firstErrorFieldId}`, {\n          align: 'middle',\n          offset: 0,\n        });\n      }\n    }\n  };\n\n  get isInternal() {\n    const {app} = this.state;\n    if (app) {\n      // if we are editing an existing app, check the status of the app\n      return app.status === 'internal';\n    }\n    return this.props.route.path === 'new-internal/';\n  }\n\n  get showAuthInfo() {\n    const {app} = this.state;\n    return !(app && app.clientSecret && app.clientSecret[0] === '*');\n  }\n\n  onAddToken = async (evt: React.MouseEvent): Promise<void> => {\n    evt.preventDefault();\n    const {app, tokens} = this.state;\n    if (!app) {\n      return;\n    }\n\n    const api = this.api;\n\n    const token = await addSentryAppToken(api, app);\n    const newTokens = tokens.concat(token);\n    this.setState({tokens: newTokens});\n  };\n\n  onRemoveToken = async (token: InternalAppApiToken, evt: React.MouseEvent) => {\n    evt.preventDefault();\n    const {app, tokens} = this.state;\n    if (!app) {\n      return;\n    }\n\n    const api = this.api;\n    const newTokens = tokens.filter(tok => tok.token !== token.token);\n\n    await removeSentryAppToken(api, app, token.token);\n    this.setState({tokens: newTokens});\n  };\n\n  renderTokens = () => {\n    const {tokens} = this.state;\n    if (tokens.length > 0) {\n      return tokens.map(token => (\n        <StyledPanelItem key={token.token}>\n          <TokenItem>\n            <Tooltip\n              disabled={this.showAuthInfo}\n              position=\"right\"\n              containerDisplayMode=\"inline\"\n              title={t(\n                'You do not have access to view these credentials because the permissions for this integration exceed those of your role.'\n              )}\n            >\n              <TextCopyInput>\n                {getDynamicText({value: token.token, fixed: 'xxxxxx'})}\n              </TextCopyInput>\n            </Tooltip>\n          </TokenItem>\n          <CreatedDate>\n            <CreatedTitle>Created:</CreatedTitle>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000),\n              })}\n            />\n          </CreatedDate>\n          <Button\n            onClick={this.onRemoveToken.bind(this, token)}\n            size=\"small\"\n            icon={<IconDelete />}\n            data-test-id=\"token-delete\"\n            type=\"button\"\n          >\n            {t('Revoke')}\n          </Button>\n        </StyledPanelItem>\n      ));\n    }\n    return <EmptyMessage description={t('No tokens created yet.')} />;\n  };\n\n  onFieldChange = (name: string, value: FieldValue): void => {\n    if (name === 'webhookUrl' && !value && this.isInternal) {\n      // if no webhook, then set isAlertable to false\n      this.form.setValue('isAlertable', false);\n    }\n  };\n\n  addAvatar = ({avatar}: Model) => {\n    const {app} = this.state;\n    if (app && avatar) {\n      const avatars =\n        app?.avatars?.filter(prevAvatar => prevAvatar.color !== avatar.color) || [];\n      avatars.push(avatar);\n      this.setState({app: {...app, avatars}});\n    }\n  };\n\n  getAvatarModel = (isColor: boolean): Model => {\n    const {app} = this.state;\n    const defaultModel: Model = {\n      avatar: {\n        avatarType: 'default',\n        avatarUuid: null,\n      },\n    };\n    if (!app) {\n      return defaultModel;\n    }\n    return {\n      avatar: app?.avatars?.find(({color}) => color === isColor) || defaultModel.avatar,\n    };\n  };\n\n  getAvatarPreview = (isColor: boolean) => {\n    const {app} = this.state;\n    if (!app) {\n      return null;\n    }\n    const avatarStyle = isColor ? 'color' : 'simple';\n    return (\n      <AvatarPreview>\n        <StyledPreviewAvatar\n          size={AVATAR_STYLES[avatarStyle].size}\n          sentryApp={app}\n          isDefault\n        />\n        <AvatarPreviewTitle>{AVATAR_STYLES[avatarStyle].title}</AvatarPreviewTitle>\n        <AvatarPreviewText>{AVATAR_STYLES[avatarStyle].previewText}</AvatarPreviewText>\n      </AvatarPreview>\n    );\n  };\n\n  getAvatarChooser = (isColor: boolean) => {\n    const {app} = this.state;\n    if (!app) {\n      return null;\n    }\n    const avatarStyle = isColor ? 'color' : 'simple';\n    return (\n      <AvatarChooser\n        type={isColor ? 'sentryAppColor' : 'sentryAppSimple'}\n        allowGravatar={false}\n        allowLetter={false}\n        endpoint={`/sentry-apps/${app.slug}/avatar/`}\n        model={this.getAvatarModel(isColor)}\n        onSave={this.addAvatar}\n        title={isColor ? t('Logo') : t('Small Icon')}\n        help={AVATAR_STYLES[avatarStyle].help.concat(\n          this.isInternal ? '' : t(' Required for publishing.')\n        )}\n        savedDataUrl={undefined}\n        defaultChoice={{\n          allowDefault: true,\n          choiceText: isColor ? t('Default logo') : t('Default small icon'),\n          preview: this.getAvatarPreview(isColor),\n        }}\n      />\n    );\n  };\n\n  renderBody() {\n    const {orgId} = this.props.params;\n    const {app} = this.state;\n    const scopes = (app && [...app.scopes]) || [];\n    const events = (app && this.normalize(app.events)) || [];\n    const method = app ? 'PUT' : 'POST';\n    const endpoint = app ? `/sentry-apps/${app.slug}/` : '/sentry-apps/';\n\n    const forms = this.isInternal ? internalIntegrationForms : publicIntegrationForms;\n    let verifyInstall: boolean;\n    if (this.isInternal) {\n      // force verifyInstall to false for all internal apps\n      verifyInstall = false;\n    } else {\n      // use the existing value for verifyInstall if the app exists, otherwise default to true\n      verifyInstall = app ? app.verifyInstall : true;\n    }\n\n    return (\n      <div>\n        <SettingsPageHeader title={this.getHeaderTitle()} />\n        <Form\n          apiMethod={method}\n          apiEndpoint={endpoint}\n          allowUndo\n          initialData={{\n            organization: orgId,\n            isAlertable: false,\n            isInternal: this.isInternal,\n            schema: {},\n            scopes: [],\n            ...app,\n            verifyInstall, // need to overwrite the value in app for internal if it is true\n          }}\n          model={this.form}\n          onSubmitSuccess={this.handleSubmitSuccess}\n          onSubmitError={this.handleSubmitError}\n          onFieldChange={this.onFieldChange}\n        >\n          <Observer>\n            {() => {\n              const webhookDisabled =\n                this.isInternal && !this.form.getValue('webhookUrl');\n              return (\n                <Fragment>\n                  <JsonForm additionalFieldProps={{webhookDisabled}} forms={forms} />\n                  {this.getAvatarChooser(true)}\n                  {this.getAvatarChooser(false)}\n                  <PermissionsObserver\n                    webhookDisabled={webhookDisabled}\n                    appPublished={app ? app.status === 'published' : false}\n                    scopes={scopes}\n                    events={events}\n                  />\n                </Fragment>\n              );\n            }}\n          </Observer>\n\n          {app && app.status === 'internal' && (\n            <Panel>\n              <PanelHeader hasButtons>\n                {t('Tokens')}\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconAdd size=\"xs\" isCircled />}\n                  onClick={evt => this.onAddToken(evt)}\n                  data-test-id=\"token-add\"\n                  type=\"button\"\n                >\n                  {t('New Token')}\n                </Button>\n              </PanelHeader>\n              <PanelBody>{this.renderTokens()}</PanelBody>\n            </Panel>\n          )}\n\n          {app && (\n            <Panel>\n              <PanelHeader>{t('Credentials')}</PanelHeader>\n              <PanelBody>\n                {app.status !== 'internal' && (\n                  <FormField name=\"clientId\" label=\"Client ID\">\n                    {({value}) => (\n                      <TextCopyInput>\n                        {getDynamicText({value, fixed: 'CI_CLIENT_ID'})}\n                      </TextCopyInput>\n                    )}\n                  </FormField>\n                )}\n                <FormField name=\"clientSecret\" label=\"Client Secret\">\n                  {({value}) =>\n                    value ? (\n                      <Tooltip\n                        disabled={this.showAuthInfo}\n                        position=\"right\"\n                        containerDisplayMode=\"inline\"\n                        title={t(\n                          'You do not have access to view these credentials because the permissions for this integration exceed those of your role.'\n                        )}\n                      >\n                        <TextCopyInput>\n                          {getDynamicText({value, fixed: 'CI_CLIENT_SECRET'})}\n                        </TextCopyInput>\n                      </Tooltip>\n                    ) : (\n                      <em>hidden</em>\n                    )\n                  }\n                </FormField>\n              </PanelBody>\n            </Panel>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TokenItem = styled('div')`\n  width: 70%;\n`;\n\nconst CreatedTitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  margin-bottom: 2px;\n`;\n\nconst CreatedDate = styled('div')`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 0 10px;\n`;\n\nconst AvatarPreview = styled('div')`\n  flex: 1;\n  display: grid;\n  grid: 25px 25px / 50px 1fr;\n`;\n\nconst StyledPreviewAvatar = styled(Avatar)`\n  grid-area: 1 / 1 / 3 / 2;\n  justify-self: end;\n`;\n\nconst AvatarPreviewTitle = styled('span')`\n  display: block;\n  grid-area: 1 / 2 / 2 / 3;\n  padding-left: ${space(2)};\n  font-weight: bold;\n`;\n\nconst AvatarPreviewText = styled('span')`\n  display: block;\n  grid-area: 2 / 2 / 3 / 3;\n  padding-left: ${space(2)};\n`;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {InternalAppApiToken, SentryApp} from 'sentry/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} app SentryApp\n */\nexport async function addSentryAppToken(\n  client: Client,\n  app: SentryApp\n): Promise<InternalAppApiToken> {\n  addLoadingMessage();\n  try {\n    const token = await client.requestPromise(`/sentry-apps/${app.slug}/api-tokens/`, {\n      method: 'POST',\n    });\n    addSuccessMessage(t('Token successfully added.'));\n    return token;\n  } catch (err) {\n    addErrorMessage(t('Unable to create token'));\n    throw err;\n  }\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} app SentryApp\n * @param {String} token Token string\n */\nexport async function removeSentryAppToken(\n  client: Client,\n  app: SentryApp,\n  token: string\n): Promise<void> {\n  addLoadingMessage();\n  try {\n    await client.requestPromise(`/sentry-apps/${app.slug}/api-tokens/${token}/`, {\n      method: 'DELETE',\n    });\n    addSuccessMessage(t('Token successfully deleted.'));\n    return;\n  } catch (err) {\n    addErrorMessage(t('Unable to delete token'));\n    throw err;\n  }\n}\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n"],"names":["getPublicFormFields","name","type","required","placeholder","label","help","tct","webhook_docs","href","disabled","webhookDisabled","disabledReason","learn_more","autosize","rows","schema_docs","getValue","val","JSON","parse","setValue","schema","stringify","validate","id","form","e","multiline","extractMultilineFields","join","publicIntegrationForms","title","fields","internalIntegrationForms","internalFormFields","filter","formField","includes","webhookField","find","field","getInternalFormFields","PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","PROJECT_RELEASES","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","permissions","filteredScopes","scopeList","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","PermissionSelection","Component","props","choice","state","save","setState","onChange","context","permissionStateToList","flatMap","entries","r","p","SENTRY_APP_PERMISSIONS","findResource","choices","Fragment","config","options","value","t","bind","defaultValue","appPublished","FormContext","EVENT_CHOICES","DESCRIPTIONS","issue","error","comment","PERMISSIONS_MAP","SubscriptionBox","evt","checked","target","organization","isNew","features","Set","disabledFromPermissions","message","has","SubscriptionGridItem","SubscriptionInfo","SubscriptionTitle","SubscriptionDescription","withOrganization","theme","backgroundSecondary","borderRadius","space","fontSizeMedium","gray300","fontSizeLarge","textColor","Subscriptions","constructor","super","events","add","delete","Array","from","UNSAFE_componentWillReceiveProps","nextProps","length","componentDidUpdate","permittedEvents","SubscriptionGrid","breakpoints","large","PermissionsObserver","scopeListToPermissionState","onPermissionChange","onEventChange","AVATAR_STYLES","color","size","previewText","simple","uiDocs","SentryAppFormModel","FormModel","getData","toJSON","reduce","data","k","v","endsWith","mapFormErrors","responseJSON","formErrors","omit","matches","match","permObj","_allScopes","concat","getResourceFromScope","SentryApplicationDetails","app","orgId","params","isInternal","baseUrl","url","slug","addSuccessMessage","browserHistory","err","errorMessage","status","detail","addErrorMessage","firstErrorFieldId","keys","scrollToElement","align","offset","async","preventDefault","tokens","api","token","client","addLoadingMessage","requestPromise","method","addSentryAppToken","newTokens","tok","removeSentryAppToken","StyledPanelItem","TokenItem","showAuthInfo","position","containerDisplayMode","getDynamicText","fixed","CreatedDate","CreatedTitle","date","dateCreated","Date","onClick","onRemoveToken","icon","description","avatar","avatars","prevAvatar","push","isColor","defaultModel","avatarType","avatarUuid","avatarStyle","AvatarPreview","StyledPreviewAvatar","sentryApp","isDefault","AvatarPreviewTitle","AvatarPreviewText","allowGravatar","allowLetter","endpoint","model","getAvatarModel","onSave","addAvatar","savedDataUrl","undefined","defaultChoice","allowDefault","choiceText","preview","getAvatarPreview","getDefaultState","getEndpoints","appSlug","getHeaderTitle","action","normalize","shift","route","path","clientSecret","renderBody","forms","verifyInstall","apiMethod","apiEndpoint","allowUndo","initialData","isAlertable","onSubmitSuccess","handleSubmitSuccess","onSubmitError","handleSubmitError","onFieldChange","additionalFieldProps","getAvatarChooser","hasButtons","isCircled","onAddToken","renderTokens","PanelItem","Avatar","baseIteratee","createInverter","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","result","key","call","module","exports"],"sourceRoot":""}