{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMembersList_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/roleSelectControl.tsx","webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/defaultSearchBar.tsx","webpack:///./app/views/settings/organizationMembers/components/membersFilter.tsx","webpack:///./app/views/settings/organizationMembers/inviteRequestRow.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberRow.tsx","webpack:///./app/views/settings/organizationMembers/organizationMembersList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport SelectControl, {ControlProps} from 'sentry/components/forms/selectControl';\nimport {MemberRole} from 'sentry/types';\n\ntype OptionType = {\n  details: React.ReactNode;\n  disabled: boolean;\n  label: string;\n  value: string;\n};\n\ntype Props = Omit<ControlProps<OptionType>, 'onChange' | 'value'> & {\n  disableUnallowed: boolean;\n  roles: MemberRole[];\n  /**\n   * Narrower type than SelectControl because there is no empty value\n   */\n  onChange?: (value: OptionType) => void;\n  value?: string;\n};\n\nfunction RoleSelectControl({roles, disableUnallowed, ...props}: Props) {\n  return (\n    <SelectControl\n      options={roles?.map(\n        (r: MemberRole) =>\n          ({\n            value: r.id,\n            label: r.name,\n            disabled: disableUnallowed && !r.allowed,\n            details: <Details>{r.desc}</Details>,\n          } as OptionType)\n      )}\n      showDividers\n      {...props}\n    />\n  );\n}\n\nexport default RoleSelectControl;\n\nconst Details = styled('span')`\n  display: inline-block;\n  width: 20rem;\n`;\n","import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport AsyncView from 'sentry/views/asyncView';\n\nexport type RenderSearch = React.ComponentProps<\n  typeof AsyncView.prototype.renderSearchInput\n>['children'];\n\nexport const SearchWrapper = styled('div')`\n  display: flex;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(1.5)};\n  margin-top: ${space(4)};\n  margin-bottom: ${space(1.5)};\n  position: relative;\n`;\n","import styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport Switch from 'sentry/components/switchButton';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {MemberRole} from 'sentry/types';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\ntype Props = {\n  onChange: (query: string) => void;\n  query: string;\n  roles: MemberRole[];\n  className?: string;\n};\n\ntype BooleanFilterProps = {\n  children: React.ReactNode;\n  onChange: (value: boolean | null) => void;\n  value: boolean | null;\n};\n\ntype Filters = {\n  has2fa: boolean | null;\n  isInvited: boolean | null;\n  roles: string[];\n  ssoLinked: boolean | null;\n};\n\nconst getBoolean = (list: string[]) =>\n  Array.isArray(list) && list.length\n    ? list && list.map(v => v.toLowerCase()).includes('true')\n    : null;\n\nconst MembersFilter = ({className, roles, query, onChange}: Props) => {\n  const search = new MutableSearch(query);\n\n  const filters = {\n    roles: search.getFilterValues('role') || [],\n    isInvited: getBoolean(search.getFilterValues('isInvited')),\n    ssoLinked: getBoolean(search.getFilterValues('ssoLinked')),\n    has2fa: getBoolean(search.getFilterValues('has2fa')),\n  };\n\n  const handleRoleFilter = (id: string) => () => {\n    const roleList = new Set(\n      search.getFilterValues('role') ? [...search.getFilterValues('role')] : []\n    );\n\n    if (roleList.has(id)) {\n      roleList.delete(id);\n    } else {\n      roleList.add(id);\n    }\n\n    const newSearch = search.copy();\n    newSearch.setFilterValues('role', [...roleList]);\n    onChange(newSearch.formatString());\n  };\n\n  const handleBoolFilter = (key: keyof Filters) => (value: boolean | null) => {\n    const newQueryObject = search.copy();\n    newQueryObject.removeFilter(key);\n    if (value !== null) {\n      newQueryObject.setFilterValues(key, [Boolean(value).toString()]);\n    }\n\n    onChange(newQueryObject.formatString());\n  };\n\n  return (\n    <FilterContainer className={className}>\n      <FilterHeader>{t('Filter By')}</FilterHeader>\n\n      <FilterLists>\n        <FilterList>\n          <h3>{t('User Role')}</h3>\n          {roles.map(({id, name}) => (\n            <label key={id}>\n              <Checkbox\n                data-test-id={`filter-role-${id}`}\n                checked={filters.roles.includes(id)}\n                onChange={handleRoleFilter(id)}\n              />\n              {name}\n            </label>\n          ))}\n        </FilterList>\n\n        <FilterList>\n          <h3>{t('Status')}</h3>\n          <BooleanFilter\n            data-test-id=\"filter-isInvited\"\n            onChange={handleBoolFilter('isInvited')}\n            value={filters.isInvited}\n          >\n            {t('Invited')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-has2fa\"\n            onChange={handleBoolFilter('has2fa')}\n            value={filters.has2fa}\n          >\n            {t('2FA')}\n          </BooleanFilter>\n          <BooleanFilter\n            data-test-id=\"filter-ssoLinked\"\n            onChange={handleBoolFilter('ssoLinked')}\n            value={filters.ssoLinked}\n          >\n            {t('SSO Linked')}\n          </BooleanFilter>\n        </FilterList>\n      </FilterLists>\n    </FilterContainer>\n  );\n};\n\nconst BooleanFilter = ({onChange, value, children}: BooleanFilterProps) => (\n  <label>\n    <Checkbox\n      checked={value !== null}\n      onChange={() => onChange(value === null ? true : null)}\n    />\n    {children}\n    <Switch\n      isDisabled={value === null}\n      isActive={value === true}\n      toggle={() => onChange(!value)}\n    />\n  </label>\n);\n\nconst FilterContainer = styled('div')`\n  border-radius: 4px;\n  background: ${p => p.theme.background};\n  box-shadow: ${p => p.theme.dropShadowLight};\n  border: 1px solid ${p => p.theme.border};\n`;\n\nconst FilterHeader = styled('h2')`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom: 1px solid ${p => p.theme.border};\n  background: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.subText};\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n  padding: ${space(1)};\n  margin: 0;\n`;\n\nconst FilterLists = styled('div')`\n  display: grid;\n  grid-template-columns: 100px max-content;\n  gap: ${space(3)};\n  margin: ${space(1.5)};\n  margin-top: ${space(0.75)};\n`;\n\nconst FilterList = styled('div')`\n  display: grid;\n  grid-template-rows: repeat(auto-fit, minmax(0, max-content));\n  gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  h3 {\n    color: #000;\n    font-size: ${p => p.theme.fontSizeSmall};\n    text-transform: uppercase;\n    margin: ${space(1)} 0;\n  }\n\n  label {\n    display: grid;\n    grid-template-columns: max-content 1fr max-content;\n    gap: ${space(0.75)};\n    align-items: center;\n    font-weight: normal;\n    white-space: nowrap;\n    height: ${space(2)};\n  }\n\n  input,\n  label {\n    margin: 0;\n  }\n`;\nexport default MembersFilter;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {MultiControlProps} from 'sentry/components/deprecatedforms/multiSelectControl';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {PanelItem} from 'sentry/components/panels';\nimport RoleSelectControl from 'sentry/components/roleSelectControl';\nimport Tag from 'sentry/components/tag';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCheckmark, IconClose} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Member, MemberRole, Organization} from 'sentry/types';\n\ntype Props = {\n  allRoles: MemberRole[];\n  inviteRequest: Member;\n  inviteRequestBusy: {[key: string]: boolean};\n  onApprove: (inviteRequest: Member) => void;\n  onDeny: (inviteRequest: Member) => void;\n  onUpdate: (data: Partial<Member>) => void;\n  organization: Organization;\n};\n\nconst InviteModalHook = HookOrDefault({\n  hookName: 'member-invite-modal:customization',\n  defaultComponent: ({onSendInvites, children}) =>\n    children({sendInvites: onSendInvites, canSend: true}),\n});\n\ntype InviteModalRenderFunc = React.ComponentProps<typeof InviteModalHook>['children'];\ntype OnChangeArgs = Parameters<NonNullable<MultiControlProps['onChange']>>[0];\n\nconst InviteRequestRow = ({\n  inviteRequest,\n  inviteRequestBusy,\n  organization,\n  onApprove,\n  onDeny,\n  onUpdate,\n  allRoles,\n}: Props) => {\n  const role = allRoles.find(r => r.id === inviteRequest.role);\n  const roleDisallowed = !(role && role.allowed);\n  const {access} = organization;\n  const canApprove = access.includes('member:admin');\n\n  // eslint-disable-next-line react/prop-types\n  const hookRenderer: InviteModalRenderFunc = ({sendInvites, canSend, headerInfo}) => (\n    <StyledPanelItem>\n      <div>\n        <h5 style={{marginBottom: space(0.5)}}>\n          <UserName>{inviteRequest.email}</UserName>\n        </h5>\n        {inviteRequest.inviteStatus === 'requested_to_be_invited' ? (\n          inviteRequest.inviterName && (\n            <Description>\n              <Tooltip\n                title={t(\n                  'An existing member has asked to invite this user to your organization'\n                )}\n              >\n                {tct('Requested by [inviterName]', {\n                  inviterName: inviteRequest.inviterName,\n                })}\n              </Tooltip>\n            </Description>\n          )\n        ) : (\n          <JoinRequestIndicator\n            tooltipText={t('This user has asked to join your organization.')}\n          >\n            {t('Join request')}\n          </JoinRequestIndicator>\n        )}\n      </div>\n\n      {canApprove ? (\n        <StyledRoleSelectControl\n          name=\"role\"\n          disableUnallowed\n          onChange={r => onUpdate({role: r.value})}\n          value={inviteRequest.role}\n          roles={allRoles}\n        />\n      ) : (\n        <div>{inviteRequest.roleName}</div>\n      )}\n      {canApprove ? (\n        <TeamSelectControl\n          name=\"teams\"\n          placeholder={t('Add to teams\\u2026')}\n          onChange={(teams: OnChangeArgs) =>\n            onUpdate({teams: (teams || []).map(team => team.value)})\n          }\n          value={inviteRequest.teams}\n          clearable\n          multiple\n        />\n      ) : (\n        <div>{inviteRequest.teams.join(', ')}</div>\n      )}\n\n      <ButtonGroup>\n        <Button\n          size=\"small\"\n          busy={inviteRequestBusy[inviteRequest.id]}\n          onClick={() => onDeny(inviteRequest)}\n          icon={<IconClose />}\n          disabled={!canApprove}\n          title={\n            canApprove\n              ? undefined\n              : t('This request needs to be reviewed by a privileged user')\n          }\n        >\n          {t('Deny')}\n        </Button>\n        <Confirm\n          onConfirm={sendInvites}\n          disableConfirmButton={!canSend}\n          disabled={!canApprove || roleDisallowed}\n          message={\n            <Fragment>\n              {tct('Are you sure you want to invite [email] to your organization?', {\n                email: inviteRequest.email,\n              })}\n              {headerInfo}\n            </Fragment>\n          }\n        >\n          <Button\n            priority=\"primary\"\n            size=\"small\"\n            busy={inviteRequestBusy[inviteRequest.id]}\n            title={\n              canApprove\n                ? roleDisallowed\n                  ? t(\n                      `You do not have permission to approve a user of this role.\n                      Select a different role to approve this user.`\n                    )\n                  : undefined\n                : t('This request needs to be reviewed by a privileged user')\n            }\n            icon={<IconCheckmark />}\n          >\n            {t('Approve')}\n          </Button>\n        </Confirm>\n      </ButtonGroup>\n    </StyledPanelItem>\n  );\n\n  return (\n    <InviteModalHook\n      willInvite\n      organization={organization}\n      onSendInvites={() => onApprove(inviteRequest)}\n    >\n      {hookRenderer}\n    </InviteModalHook>\n  );\n};\n\nconst JoinRequestIndicator = styled(Tag)`\n  text-transform: uppercase;\n`;\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(150px, auto) minmax(100px, 140px) 220px max-content;\n  gap: ${space(2)};\n  align-items: center;\n`;\n\nconst UserName = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Description = styled('div')`\n  display: block;\n  color: ${p => p.theme.subText};\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst StyledRoleSelectControl = styled(RoleSelectControl)`\n  max-width: 140px;\n`;\n\nconst TeamSelectControl = styled(TeamSelector)`\n  max-width: 220px;\n  .Select-value-label {\n    max-width: 150px;\n    word-break: break-all;\n  }\n`;\n\nconst ButtonGroup = styled('div')`\n  display: inline-grid;\n  grid-template-columns: repeat(2, max-content);\n  gap: ${space(1)};\n`;\n\nexport default InviteRequestRow;\n","import {Fragment, PureComponent} from 'react';\nimport {PlainRoute} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconCheckmark, IconClose, IconFlag, IconMail, IconSubtract} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {AvatarUser, Member} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport recreateRoute from 'sentry/utils/recreateRoute';\n\ntype Props = {\n  canAddMembers: boolean;\n  canRemoveMembers: boolean;\n  currentUser: AvatarUser;\n  member: Member;\n  memberCanLeave: boolean;\n  onLeave: (member: Member) => void;\n  onRemove: (member: Member) => void;\n  onSendInvite: (member: Member) => void;\n  orgName: string;\n  params: Record<string, string>;\n  requireLink: boolean;\n  routes: PlainRoute[];\n  status: '' | 'loading' | 'success' | 'error' | null;\n};\n\ntype State = {\n  busy: boolean;\n};\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nexport default class OrganizationMemberRow extends PureComponent<Props, State> {\n  state: State = {\n    busy: false,\n  };\n\n  handleRemove = () => {\n    const {onRemove} = this.props;\n\n    if (typeof onRemove !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onRemove(this.props.member);\n  };\n\n  handleLeave = () => {\n    const {onLeave} = this.props;\n\n    if (typeof onLeave !== 'function') {\n      return;\n    }\n\n    this.setState({busy: true});\n    onLeave(this.props.member);\n  };\n\n  handleSendInvite = () => {\n    const {onSendInvite, member} = this.props;\n\n    if (typeof onSendInvite !== 'function') {\n      return;\n    }\n\n    onSendInvite(member);\n  };\n\n  renderMemberRole() {\n    const {member} = this.props;\n    const {roleName, pending, expired} = member;\n    if (isMemberDisabledFromLimit(member)) {\n      return <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>;\n    }\n    if (pending) {\n      return (\n        <InvitedRole>\n          <IconMail size=\"md\" />\n          {expired ? t('Expired Invite') : tct('Invited [roleName]', {roleName})}\n        </InvitedRole>\n      );\n    }\n    return roleName;\n  }\n\n  render() {\n    const {\n      params,\n      routes,\n      member,\n      orgName,\n      status,\n      requireLink,\n      memberCanLeave,\n      currentUser,\n      canRemoveMembers,\n      canAddMembers,\n    } = this.props;\n\n    const {id, flags, email, name, pending, user} = member;\n\n    // if member is not the only owner, they can leave\n    const needsSso = !flags['sso:linked'] && requireLink;\n    const isCurrentUser = currentUser.email === email;\n    const showRemoveButton = !isCurrentUser;\n    const showLeaveButton = isCurrentUser;\n    const canRemoveMember = canRemoveMembers && !isCurrentUser;\n    // member has a `user` property if they are registered with sentry\n    // i.e. has accepted an invite to join org\n    const has2fa = user && user.has2fa;\n    const detailsUrl = recreateRoute(id, {routes, params});\n    const isInviteSuccessful = status === 'success';\n    const isInviting = status === 'loading';\n    const showResendButton = pending || needsSso;\n\n    return (\n      <StyledPanelItem data-test-id={email}>\n        <MemberHeading>\n          <UserAvatar size={32} user={user ?? {id: email, email}} />\n          <MemberDescription to={detailsUrl}>\n            <h5 style={{margin: '0 0 3px'}}>\n              <UserName>{name}</UserName>\n            </h5>\n            <Email>{email}</Email>\n          </MemberDescription>\n        </MemberHeading>\n\n        <div data-test-id=\"member-role\">{this.renderMemberRole()}</div>\n\n        <div data-test-id=\"member-status\">\n          {showResendButton ? (\n            <Fragment>\n              {isInviting && (\n                <LoadingContainer>\n                  <LoadingIndicator mini />\n                </LoadingContainer>\n              )}\n              {isInviteSuccessful && <span>{t('Sent!')}</span>}\n              {!isInviting && !isInviteSuccessful && (\n                <Button\n                  disabled={!canAddMembers}\n                  priority=\"primary\"\n                  size=\"small\"\n                  onClick={this.handleSendInvite}\n                >\n                  {pending ? t('Resend invite') : t('Resend SSO link')}\n                </Button>\n              )}\n            </Fragment>\n          ) : (\n            <AuthStatus>\n              {has2fa ? (\n                <IconCheckmark isCircled color=\"success\" />\n              ) : (\n                <IconFlag color=\"error\" />\n              )}\n              {has2fa ? t('2FA Enabled') : t('2FA Not Enabled')}\n            </AuthStatus>\n          )}\n        </div>\n\n        {showRemoveButton || showLeaveButton ? (\n          <RightColumn>\n            {showRemoveButton && canRemoveMember && (\n              <Confirm\n                message={tct('Are you sure you want to remove [name] from [orgName]?', {\n                  name,\n                  orgName,\n                })}\n                onConfirm={this.handleRemove}\n              >\n                <Button\n                  data-test-id=\"remove\"\n                  icon={<IconSubtract isCircled size=\"xs\" />}\n                  size=\"small\"\n                  busy={this.state.busy}\n                >\n                  {t('Remove')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showRemoveButton && !canRemoveMember && (\n              <Button\n                disabled\n                size=\"small\"\n                title={t('You do not have access to remove members')}\n                icon={<IconSubtract isCircled size=\"xs\" />}\n              >\n                {t('Remove')}\n              </Button>\n            )}\n\n            {showLeaveButton && memberCanLeave && (\n              <Confirm\n                message={tct('Are you sure you want to leave [orgName]?', {\n                  orgName,\n                })}\n                onConfirm={this.handleLeave}\n              >\n                <Button priority=\"danger\" size=\"small\" icon={<IconClose size=\"xs\" />}>\n                  {t('Leave')}\n                </Button>\n              </Confirm>\n            )}\n\n            {showLeaveButton && !memberCanLeave && (\n              <Button\n                size=\"small\"\n                icon={<IconClose size=\"xs\" />}\n                disabled\n                title={t(\n                  'You cannot leave this organization as you are the only organization owner.'\n                )}\n              >\n                {t('Leave')}\n              </Button>\n            )}\n          </RightColumn>\n        ) : null}\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: minmax(150px, 4fr) minmax(90px, 2fr) minmax(120px, 2fr) minmax(\n      100px,\n      1fr\n    );\n  gap: ${space(2)};\n  align-items: center;\n`;\n// Force action button at the end to align to right\nconst RightColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Section = styled('div')`\n  display: inline-grid;\n  grid-template-columns: max-content auto;\n  gap: ${space(1)};\n  align-items: center;\n`;\n\nconst MemberHeading = styled(Section)``;\nconst MemberDescription = styled(Link)`\n  overflow: hidden;\n`;\n\nconst UserName = styled('div')`\n  display: block;\n  overflow: hidden;\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-overflow: ellipsis;\n`;\n\nconst Email = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InvitedRole = styled(Section)``;\nconst LoadingContainer = styled('div')`\n  margin-top: 0;\n  margin-bottom: ${space(1.5)};\n`;\n\nconst AuthStatus = styled(Section)``;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {ClassNames} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite} from 'sentry/actionCreators/members';\nimport {redirectToRemainingOrganization} from 'sentry/actionCreators/organizations';\nimport Button from 'sentry/components/button';\nimport DropdownMenu from 'sentry/components/dropdownMenu';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {MEMBER_ROLES} from 'sentry/constants';\nimport {IconSliders} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Member, MemberRole, Organization} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport theme from 'sentry/utils/theme';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport {\n  RenderSearch,\n  SearchWrapper,\n} from 'sentry/views/settings/components/defaultSearchBar';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\nimport MembersFilter from './components/membersFilter';\nimport InviteRequestRow from './inviteRequestRow';\nimport OrganizationMemberRow from './organizationMemberRow';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  inviteRequests: Member[];\n  invited: {[key: string]: 'loading' | 'success' | null};\n  member: (Member & {roles: MemberRole[]}) | null;\n  members: Member[];\n};\n\nconst MemberListHeader = HookOrDefault({\n  hookName: 'component:member-list-header',\n  defaultComponent: () => <PanelHeader>{t('Active Members')}</PanelHeader>,\n});\n\nclass OrganizationMembersList extends AsyncView<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      members: [],\n      invited: {},\n    };\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {organization} = this.props;\n    const {inviteRequests, members} = this.state;\n    trackAdvancedAnalyticsEvent('member_settings_page.loaded', {\n      organization,\n      num_members: members?.length,\n      num_invite_requests: inviteRequests?.length,\n    });\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    return [\n      ['members', `/organizations/${orgId}/members/`, {}, {paginate: true}],\n      [\n        'member',\n        `/organizations/${orgId}/members/me/`,\n        {},\n        {allowError: error => error.status === 404},\n      ],\n      [\n        'authProvider',\n        `/organizations/${orgId}/auth-provider/`,\n        {},\n        {allowError: error => error.status === 403},\n      ],\n\n      ['inviteRequests', `/organizations/${orgId}/invite-requests/`],\n    ];\n  }\n\n  getTitle() {\n    const orgId = this.props.organization.slug;\n    return routeTitleGen(t('Members'), orgId, false);\n  }\n\n  removeMember = async (id: string) => {\n    const {orgId} = this.props.params;\n\n    await this.api.requestPromise(`/organizations/${orgId}/members/${id}/`, {\n      method: 'DELETE',\n      data: {},\n    });\n\n    this.setState(state => ({\n      members: state.members.filter(({id: existingId}) => existingId !== id),\n    }));\n  };\n\n  handleRemove = async ({id, name}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error removing [name] from [orgName]', {name, orgName}));\n      return;\n    }\n\n    addSuccessMessage(tct('Removed [name] from [orgName]', {name, orgName}));\n  };\n\n  handleLeave = async ({id}: Member) => {\n    const {organization} = this.props;\n    const {slug: orgName} = organization;\n\n    try {\n      await this.removeMember(id);\n    } catch {\n      addErrorMessage(tct('Error leaving [orgName]', {orgName}));\n      return;\n    }\n\n    redirectToRemainingOrganization({orgId: orgName, removeOrg: true});\n    addSuccessMessage(tct('You left [orgName]', {orgName}));\n  };\n\n  handleSendInvite = async ({id, expired}) => {\n    this.setState(state => ({\n      invited: {...state.invited, [id]: 'loading'},\n    }));\n\n    try {\n      await resendMemberInvite(this.api, {\n        orgId: this.props.params.orgId,\n        memberId: id,\n        regenerate: expired,\n      });\n    } catch {\n      this.setState(state => ({invited: {...state.invited, [id]: null}}));\n      addErrorMessage(t('Error sending invite'));\n      return;\n    }\n\n    this.setState(state => ({invited: {...state.invited, [id]: 'success'}}));\n  };\n\n  updateInviteRequest = (id: string, data: Partial<Member>) =>\n    this.setState(state => {\n      const inviteRequests = [...state.inviteRequests];\n      const inviteIndex = inviteRequests.findIndex(request => request.id === id);\n\n      inviteRequests[inviteIndex] = {...inviteRequests[inviteIndex], ...data};\n\n      return {inviteRequests};\n    });\n\n  removeInviteRequest = (id: string) =>\n    this.setState(state => ({\n      inviteRequests: state.inviteRequests.filter(request => request.id !== id),\n    }));\n\n  handleInviteRequestAction = async ({\n    inviteRequest,\n    method,\n    data,\n    successMessage,\n    errorMessage,\n    eventKey,\n  }) => {\n    const {params, organization} = this.props;\n\n    this.setState(state => ({\n      inviteRequestBusy: {...state.inviteRequestBusy, [inviteRequest.id]: true},\n    }));\n\n    try {\n      await this.api.requestPromise(\n        `/organizations/${params.orgId}/invite-requests/${inviteRequest.id}/`,\n        {\n          method,\n          data,\n        }\n      );\n\n      this.removeInviteRequest(inviteRequest.id);\n      addSuccessMessage(successMessage);\n      trackAdvancedAnalyticsEvent(eventKey, {\n        member_id: parseInt(inviteRequest.id, 10),\n        invite_status: inviteRequest.inviteStatus,\n        organization,\n      });\n    } catch {\n      addErrorMessage(errorMessage);\n    }\n\n    this.setState(state => ({\n      inviteRequestBusy: {...state.inviteRequestBusy, [inviteRequest.id]: false},\n    }));\n  };\n\n  handleInviteRequestApprove = (inviteRequest: Member) => {\n    this.handleInviteRequestAction({\n      inviteRequest,\n      method: 'PUT',\n      data: {\n        role: inviteRequest.role,\n        teams: inviteRequest.teams,\n        approve: 1,\n      },\n      successMessage: tct('[email] has been invited', {email: inviteRequest.email}),\n      errorMessage: tct('Error inviting [email]', {email: inviteRequest.email}),\n      eventKey: 'invite_request.approved',\n    });\n  };\n\n  handleInviteRequestDeny = (inviteRequest: Member) => {\n    this.handleInviteRequestAction({\n      inviteRequest,\n      method: 'DELETE',\n      data: {},\n      successMessage: tct('Invite request for [email] denied', {\n        email: inviteRequest.email,\n      }),\n      errorMessage: tct('Error denying invite request for [email]', {\n        email: inviteRequest.email,\n      }),\n      eventKey: 'invite_request.denied',\n    });\n  };\n\n  renderBody() {\n    const {params, organization, routes} = this.props;\n    const {membersPageLinks, members, member: currentMember, inviteRequests} = this.state;\n    const {name: orgName, access} = organization;\n\n    const canAddMembers = access.includes('member:write');\n    const canRemove = access.includes('member:admin');\n    const currentUser = ConfigStore.get('user');\n\n    // Find out if current user is the only owner\n    const isOnlyOwner = !members.find(\n      ({role, email, pending}) =>\n        role === 'owner' && email !== currentUser.email && !pending\n    );\n\n    // Only admins/owners can remove members\n    const requireLink = !!this.state.authProvider && this.state.authProvider.require_link;\n\n    // eslint-disable-next-line react/prop-types\n    const renderSearch: RenderSearch = ({defaultSearchBar, value, handleChange}) => (\n      <SearchWrapperWithFilter>\n        <DropdownMenu closeOnEscape>\n          {({getActorProps, isOpen}) => (\n            <FilterWrapper>\n              <Button icon={<IconSliders size=\"xs\" />} {...getActorProps({})}>\n                {t('Filter')}\n              </Button>\n              {isOpen && (\n                <StyledMembersFilter\n                  roles={currentMember?.roles ?? MEMBER_ROLES}\n                  query={value}\n                  onChange={(query: string) => handleChange(query)}\n                />\n              )}\n            </FilterWrapper>\n          )}\n        </DropdownMenu>\n        {defaultSearchBar}\n      </SearchWrapperWithFilter>\n    );\n\n    return (\n      <Fragment>\n        <ClassNames>\n          {({css}) =>\n            this.renderSearchInput({\n              updateRoute: true,\n              placeholder: t('Search Members'),\n              children: renderSearch,\n              className: css`\n                font-size: ${theme.fontSizeMedium};\n              `,\n            })\n          }\n        </ClassNames>\n        {inviteRequests && inviteRequests.length > 0 && (\n          <Panel>\n            <PanelHeader>\n              <StyledPanelItem>\n                <div>{t('Pending Members')}</div>\n                <div>{t('Role')}</div>\n                <div>{t('Teams')}</div>\n              </StyledPanelItem>\n            </PanelHeader>\n            <PanelBody>\n              {inviteRequests.map(inviteRequest => (\n                <InviteRequestRow\n                  key={inviteRequest.id}\n                  organization={organization}\n                  inviteRequest={inviteRequest}\n                  inviteRequestBusy={{}}\n                  allRoles={currentMember?.roles ?? MEMBER_ROLES}\n                  onApprove={this.handleInviteRequestApprove}\n                  onDeny={this.handleInviteRequestDeny}\n                  onUpdate={data => this.updateInviteRequest(inviteRequest.id, data)}\n                />\n              ))}\n            </PanelBody>\n          </Panel>\n        )}\n        <Panel data-test-id=\"org-member-list\">\n          <MemberListHeader members={members} organization={organization} />\n          <PanelBody>\n            {members.map(member => (\n              <OrganizationMemberRow\n                routes={routes}\n                params={params}\n                key={member.id}\n                member={member}\n                status={this.state.invited[member.id]}\n                orgName={orgName}\n                memberCanLeave={!isOnlyOwner}\n                currentUser={currentUser}\n                canRemoveMembers={canRemove}\n                canAddMembers={canAddMembers}\n                requireLink={requireLink}\n                onSendInvite={this.handleSendInvite}\n                onRemove={this.handleRemove}\n                onLeave={this.handleLeave}\n              />\n            ))}\n            {members.length === 0 && (\n              <EmptyMessage>{t('No members found.')}</EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n\n        <Pagination pageLinks={membersPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst SearchWrapperWithFilter = styled(SearchWrapper)`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  margin-top: 0;\n`;\n\nconst FilterWrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledMembersFilter = styled(MembersFilter)`\n  position: absolute;\n  right: 0;\n  top: 42px;\n  z-index: ${p => p.theme.zIndex.dropdown};\n\n  &:before,\n  &:after {\n    position: absolute;\n    top: -16px;\n    right: 32px;\n    content: '';\n    height: 16px;\n    width: 16px;\n    border: 8px solid transparent;\n    border-bottom-color: ${p => p.theme.backgroundSecondary};\n  }\n\n  &:before {\n    margin-top: -1px;\n    border-bottom-color: ${p => p.theme.border};\n  }\n`;\n\nconst StyledPanelItem = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(150px, auto) minmax(100px, 140px) 420px;\n  gap: ${space(2)};\n  align-items: center;\n  width: 100%;\n`;\n\nexport default withOrganization(OrganizationMembersList);\n"],"names":["RoleSelectControl","roles","disableUnallowed","props","options","map","r","value","id","label","name","disabled","allowed","details","Details","desc","showDividers","isMemberDisabledFromLimit","member","flags","recreateRoute","to","routes","params","location","stepBack","paths","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","SearchWrapper","space","getBoolean","list","Array","isArray","length","v","toLowerCase","includes","MembersFilter","className","query","onChange","MutableSearch","filters","getFilterValues","isInvited","ssoLinked","has2fa","handleRoleFilter","roleList","Set","has","delete","add","newSearch","copy","setFilterValues","formatString","handleBoolFilter","key","newQueryObject","removeFilter","Boolean","toString","FilterContainer","FilterHeader","t","FilterLists","FilterList","checked","BooleanFilter","children","isDisabled","isActive","toggle","p","theme","background","dropShadowLight","border","backgroundSecondary","subText","fontSizeExtraSmall","fontSizeMedium","fontSizeSmall","InviteModalHook","HookOrDefault","hookName","defaultComponent","onSendInvites","sendInvites","canSend","InviteRequestRow","inviteRequest","inviteRequestBusy","organization","onApprove","onDeny","onUpdate","allRoles","role","find","roleDisallowed","access","canApprove","willInvite","headerInfo","StyledPanelItem","style","marginBottom","UserName","email","inviteStatus","inviterName","Description","tct","JoinRequestIndicator","tooltipText","StyledRoleSelectControl","roleName","TeamSelectControl","placeholder","teams","team","clearable","multiple","ButtonGroup","size","busy","onClick","icon","undefined","onConfirm","disableConfirmButton","message","Fragment","priority","Tag","PanelItem","fontSizeLarge","TeamSelector","DisabledMemberTooltip","OrganizationMemberRow","PureComponent","onRemove","setState","onLeave","onSendInvite","renderMemberRole","pending","expired","InvitedRole","orgName","status","requireLink","memberCanLeave","currentUser","canRemoveMembers","canAddMembers","user","needsSso","isCurrentUser","showRemoveButton","showLeaveButton","canRemoveMember","detailsUrl","isInviteSuccessful","isInviting","showResendButton","MemberHeading","MemberDescription","margin","Email","LoadingContainer","mini","handleSendInvite","AuthStatus","isCircled","color","RightColumn","handleRemove","state","handleLeave","Section","Link","MemberListHeader","OrganizationMembersList","async","orgId","api","requestPromise","method","data","members","filter","existingId","slug","removeMember","addErrorMessage","addSuccessMessage","redirectToRemainingOrganization","removeOrg","invited","resendMemberInvite","memberId","regenerate","inviteRequests","inviteIndex","findIndex","request","successMessage","errorMessage","eventKey","removeInviteRequest","trackAdvancedAnalyticsEvent","member_id","parseInt","invite_status","handleInviteRequestAction","approve","getDefaultState","super","onLoadAllEndpointsSuccess","num_members","num_invite_requests","getEndpoints","paginate","allowError","error","routeTitleGen","renderBody","membersPageLinks","currentMember","canRemove","ConfigStore","isOnlyOwner","authProvider","require_link","renderSearch","defaultSearchBar","handleChange","SearchWrapperWithFilter","closeOnEscape","getActorProps","isOpen","FilterWrapper","StyledMembersFilter","MEMBER_ROLES","css","renderSearchInput","updateRoute","handleInviteRequestApprove","handleInviteRequestDeny","updateInviteRequest","pageLinks","zIndex","dropdown","withOrganization"],"sourceRoot":""}