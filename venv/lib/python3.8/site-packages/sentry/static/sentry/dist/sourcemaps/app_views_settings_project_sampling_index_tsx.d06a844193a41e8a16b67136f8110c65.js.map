{"version":3,"file":"chunks/app_views_settings_project_sampling_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/actions/menuItemActionLink.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/useLocation.tsx","webpack:///./app/utils/useParams.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx","webpack:///./app/views/settings/project/sampling/utils.tsx","webpack:///./app/views/settings/project/sampling/modal/truncatedLabel.tsx","webpack:///./app/views/settings/project/sampling/modal/utils.tsx","webpack:///./app/components/bulkController/bulkNotice.tsx","webpack:///./app/components/bulkController/index.tsx","webpack:///./app/views/settings/project/sampling/modal/legacyBrowsers.tsx","webpack:///./app/views/settings/project/sampling/modal/tagKeyAutocomplete.tsx","webpack:///./app/views/settings/project/sampling/modal/tagValueAutocomplete.tsx","webpack:///./app/views/settings/project/sampling/modal/conditions.tsx","webpack:///./app/views/settings/project/sampling/modal/index.tsx","webpack:///./app/utils/useRoutes.tsx","webpack:///./app/views/settings/project/sampling/rules/draggableList/item.tsx","webpack:///./app/views/settings/project/sampling/rules/draggableList/sortableItem.tsx","webpack:///./app/views/settings/project/sampling/rules/draggableList/index.tsx","webpack:///./app/views/settings/project/sampling/rules/utils.tsx","webpack:///./app/views/settings/project/sampling/rules/rule/actions.tsx","webpack:///./app/views/settings/project/sampling/rules/rule/conditionValue.tsx","webpack:///./app/views/settings/project/sampling/rules/rule/index.tsx","webpack:///./app/views/settings/project/sampling/rules/index.tsx","webpack:///./app/views/settings/project/sampling/rulesPanel.tsx","webpack:///./app/views/settings/project/sampling/traceRules.tsx","webpack:///./app/views/settings/project/sampling/transactionRules.tsx","webpack:///./app/views/settings/project/sampling/sampling.tsx","webpack:///./app/views/settings/project/sampling/index.tsx","webpack:///../node_modules/lodash/_baseDifference.js","webpack:///../node_modules/lodash/_baseIntersection.js","webpack:///../node_modules/lodash/_baseXor.js","webpack:///../node_modules/lodash/_castArrayLikeObject.js","webpack:///../node_modules/lodash/intersection.js","webpack:///../node_modules/lodash/xor.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport ActionLink from 'sentry/components/actions/actionLink';\nimport MenuItem from 'sentry/components/menuItem';\n\nfunction MenuItemActionLink({\n  className,\n  ...props\n}: React.ComponentProps<typeof ActionLink>) {\n  return (\n    <MenuItem noAnchor withBorder disabled={props.disabled} className={className}>\n      <InnerActionLink {...props} />\n    </MenuItem>\n  );\n}\nconst InnerActionLink = styled(ActionLink)`\n  color: ${p => p.theme.textColor};\n  ${p => p.theme.overflowEllipsis}\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n\n  .dropdown-menu > li > &,\n  .dropdown-menu > span > li > & {\n    &.disabled:hover {\n      background: ${p => p.theme.background};\n    }\n  }\n`;\n\nexport default MenuItemActionLink;\n","import {Component} from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Location, Query} from 'history';\n\nimport {useRouteContext} from 'sentry/utils/useRouteContext';\n\ntype DefaultQuery<T = string> = {\n  [key: string]: T | T[] | null | undefined;\n};\n\nexport function useLocation<Q extends Query = DefaultQuery>(): Location<Q> {\n  const route = useRouteContext();\n  return route.location;\n}\n","import {useRouteContext} from 'sentry/utils/useRouteContext';\n\nexport function useParams() {\n  const route = useRouteContext();\n  return route.params;\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" showIcon {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {t} from 'sentry/locale';\nimport {LegacyBrowser, SamplingInnerName} from 'sentry/types/sampling';\n\n// TODO(PRISCILA): Update this link as soon as we have one for sampling\nexport const SAMPLING_DOC_LINK =\n  'https://docs.sentry.io/product/data-management-settings/filtering/';\n\nexport const LEGACY_BROWSER_LIST = {\n  [LegacyBrowser.IE_PRE_9]: {\n    icon: 'internet-explorer',\n    title: t('Internet Explorer version 8 and lower'),\n  },\n  [LegacyBrowser.IE9]: {\n    icon: 'internet-explorer',\n    title: t('Internet Explorer version 9'),\n  },\n  [LegacyBrowser.IE10]: {\n    icon: 'internet-explorer',\n    title: t('Internet Explorer version 10'),\n  },\n  [LegacyBrowser.IE11]: {\n    icon: 'internet-explorer',\n    title: t('Internet Explorer version 11'),\n  },\n  [LegacyBrowser.SAFARI_PRE_6]: {\n    icon: 'safari',\n    title: t('Safari version 5 and lower'),\n  },\n  [LegacyBrowser.OPERA_PRE_15]: {\n    icon: 'opera',\n    title: t('Opera version 14 and lower'),\n  },\n  [LegacyBrowser.OPERA_MINI_PRE_8]: {\n    icon: 'opera',\n    title: t('Opera Mini version 8 and lower'),\n  },\n  [LegacyBrowser.ANDROID_PRE_4]: {\n    icon: 'android',\n    title: t('Android version 3 and lower'),\n  },\n};\n\nexport function getInnerNameLabel(name: SamplingInnerName | string) {\n  switch (name) {\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n    case SamplingInnerName.EVENT_ENVIRONMENT:\n      return t('Environment');\n    case SamplingInnerName.TRACE_RELEASE:\n    case SamplingInnerName.EVENT_RELEASE:\n      return t('Release');\n    case SamplingInnerName.EVENT_USER_ID:\n    case SamplingInnerName.TRACE_USER_ID:\n      return t('User Id');\n    case SamplingInnerName.EVENT_USER_SEGMENT:\n    case SamplingInnerName.TRACE_USER_SEGMENT:\n      return t('User Segment');\n    case SamplingInnerName.EVENT_BROWSER_EXTENSIONS:\n      return t('Browser Extensions');\n    case SamplingInnerName.EVENT_LOCALHOST:\n      return t('Localhost');\n    case SamplingInnerName.EVENT_WEB_CRAWLERS:\n      return t('Web Crawlers');\n    case SamplingInnerName.EVENT_LEGACY_BROWSER:\n      return t('Legacy Browser');\n    case SamplingInnerName.EVENT_TRANSACTION:\n    case SamplingInnerName.TRACE_TRANSACTION:\n      return t('Transaction');\n    case SamplingInnerName.EVENT_ERROR_MESSAGES:\n      return t('Error Message');\n    case SamplingInnerName.EVENT_CSP:\n      return t('Content Security Policy');\n    case SamplingInnerName.EVENT_IP_ADDRESSES:\n      return t('IP Address');\n    case SamplingInnerName.EVENT_OS_NAME:\n      return t('OS Name');\n    case SamplingInnerName.EVENT_OS_VERSION:\n      return t('OS Version');\n    case SamplingInnerName.EVENT_DEVICE_FAMILY:\n      return t('Device Family');\n    case SamplingInnerName.EVENT_DEVICE_NAME:\n      return t('Device Name');\n    case SamplingInnerName.EVENT_CUSTOM_TAG:\n      return t('Add Custom Tag');\n\n    default:\n      return `${stripCustomTagPrefix(name)} - ${t('Custom')}`;\n  }\n}\n\nconst CUSTOM_TAG_PREFIX = 'event.tags.';\n\nexport function isCustomTagName(name: SamplingInnerName | string): boolean {\n  return (\n    name === SamplingInnerName.EVENT_CUSTOM_TAG || name.startsWith(CUSTOM_TAG_PREFIX)\n  );\n}\n\nexport function stripCustomTagPrefix(name: string): string {\n  if (name.startsWith(CUSTOM_TAG_PREFIX)) {\n    return name.replace(CUSTOM_TAG_PREFIX, '');\n  }\n\n  return name;\n}\n\nexport function addCustomTagPrefix(name: string): string {\n  if (name.startsWith(CUSTOM_TAG_PREFIX)) {\n    return name;\n  }\n\n  return `${CUSTOM_TAG_PREFIX}${name}`;\n}\n","import Truncate from 'sentry/components/truncate';\nimport theme from 'sentry/utils/theme';\nimport useMedia from 'sentry/utils/useMedia';\n\ntype Props = {\n  value: string;\n};\n\nexport function TruncatedLabel({value}: Props) {\n  const isSmallDevice = useMedia(`(max-width: ${theme.breakpoints.small})`);\n\n  return (\n    <Truncate value={value} maxLength={isSmallDevice ? 30 : 40} expandable={false} />\n  );\n}\n","import {css} from '@emotion/react';\n\nimport {t, tct} from 'sentry/locale';\nimport {\n  LegacyBrowser,\n  SamplingConditionLogicalInner,\n  SamplingInnerName,\n  SamplingInnerOperator,\n  SamplingRule,\n} from 'sentry/types/sampling';\nimport theme from 'sentry/utils/theme';\n\nimport {\n  getInnerNameLabel,\n  isCustomTagName,\n  LEGACY_BROWSER_LIST,\n  stripCustomTagPrefix,\n} from '../utils';\n\nimport Conditions from './conditions';\nimport {TruncatedLabel} from './truncatedLabel';\n\ntype Condition = React.ComponentProps<typeof Conditions>['conditions'][0];\n\nexport const modalCss = css`\n  [role='document'] {\n    overflow: initial;\n  }\n\n  @media (min-width: ${theme.breakpoints.small}) {\n    width: 100%;\n    max-width: 700px;\n  }\n`;\n\nexport enum Transaction {\n  ALL = 'all',\n  MATCH_CONDITIONS = 'match-conditions',\n}\n\nexport function isLegacyBrowser(\n  maybe: Array<string> | Array<LegacyBrowser>\n): maybe is Array<LegacyBrowser> {\n  return maybe.every(m => !!LEGACY_BROWSER_LIST[m]);\n}\n\nexport function getMatchFieldPlaceholder(category: SamplingInnerName | string) {\n  switch (category) {\n    case SamplingInnerName.EVENT_LEGACY_BROWSER:\n      return t('Match all selected legacy browsers below');\n    case SamplingInnerName.EVENT_BROWSER_EXTENSIONS:\n      return t('Match all browser extensions');\n    case SamplingInnerName.EVENT_LOCALHOST:\n      return t('Match all localhosts');\n    case SamplingInnerName.EVENT_WEB_CRAWLERS:\n      return t('Match all web crawlers');\n    case SamplingInnerName.EVENT_USER_ID:\n    case SamplingInnerName.TRACE_USER_ID:\n      return t('ex. 4711 (Multiline)');\n    case SamplingInnerName.EVENT_USER_SEGMENT:\n    case SamplingInnerName.TRACE_USER_SEGMENT:\n      return t('ex. paid, common (Multiline)');\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n    case SamplingInnerName.EVENT_ENVIRONMENT:\n      return t('ex. prod, dev');\n    case SamplingInnerName.TRACE_RELEASE:\n    case SamplingInnerName.EVENT_RELEASE:\n      return t('ex. 1*, [I3].[0-9].*');\n    case SamplingInnerName.EVENT_IP_ADDRESSES:\n      return t('ex. 127.0.0.1 or 10.0.0.0/8 (Multiline)');\n    case SamplingInnerName.EVENT_CSP:\n      return t('ex. file://*, example.com (Multiline)');\n    case SamplingInnerName.EVENT_ERROR_MESSAGES:\n      return t('ex. TypeError* (Multiline)');\n    case SamplingInnerName.TRACE_TRANSACTION:\n    case SamplingInnerName.EVENT_TRANSACTION:\n      return t('ex. page-load');\n    case SamplingInnerName.EVENT_OS_NAME:\n      return t('ex. Mac OS X, Windows');\n    case SamplingInnerName.EVENT_OS_VERSION:\n      return t('ex. 11, 9* (Multiline)');\n    case SamplingInnerName.EVENT_DEVICE_FAMILY:\n      return t('ex. Mac, Pixel*');\n    case SamplingInnerName.EVENT_DEVICE_NAME:\n      return t('ex. Mac, Pixel*');\n    default:\n      return t('tag values');\n  }\n}\n\nexport function getNewCondition(condition: Condition): SamplingConditionLogicalInner {\n  // SamplingConditionLogicalInnerEqBoolean\n  if (\n    condition.category === SamplingInnerName.EVENT_BROWSER_EXTENSIONS ||\n    condition.category === SamplingInnerName.EVENT_WEB_CRAWLERS ||\n    condition.category === SamplingInnerName.EVENT_LOCALHOST\n  ) {\n    return {\n      op: SamplingInnerOperator.EQUAL,\n      name: condition.category,\n      value: true,\n    };\n  }\n\n  // SamplingConditionLogicalInnerCustom\n  if (condition.category === SamplingInnerName.EVENT_LEGACY_BROWSER) {\n    return {\n      op: SamplingInnerOperator.CUSTOM,\n      name: condition.category,\n      value: condition.legacyBrowsers ?? [],\n    };\n  }\n\n  const newValue = (condition.match ?? '')\n    .split('\\n')\n    .filter(match => !!match.trim())\n    .map(match => match.trim());\n\n  if (\n    condition.category === SamplingInnerName.EVENT_IP_ADDRESSES ||\n    condition.category === SamplingInnerName.EVENT_ERROR_MESSAGES ||\n    condition.category === SamplingInnerName.EVENT_CSP\n  ) {\n    return {\n      op: SamplingInnerOperator.CUSTOM,\n      name: condition.category,\n      value: newValue,\n    };\n  }\n\n  // SamplingConditionLogicalInnerGlob\n  if (\n    condition.category === SamplingInnerName.EVENT_RELEASE ||\n    condition.category === SamplingInnerName.TRACE_RELEASE ||\n    condition.category === SamplingInnerName.EVENT_TRANSACTION ||\n    condition.category === SamplingInnerName.TRACE_TRANSACTION ||\n    condition.category === SamplingInnerName.EVENT_OS_NAME ||\n    condition.category === SamplingInnerName.EVENT_OS_VERSION ||\n    condition.category === SamplingInnerName.EVENT_DEVICE_FAMILY ||\n    condition.category === SamplingInnerName.EVENT_DEVICE_NAME ||\n    isCustomTagName(condition.category)\n  ) {\n    return {\n      op: SamplingInnerOperator.GLOB_MATCH,\n      name: condition.category,\n      value: newValue,\n    };\n  }\n\n  // SamplingConditionLogicalInnerEq\n  if (\n    condition.category === SamplingInnerName.TRACE_USER_ID ||\n    condition.category === SamplingInnerName.EVENT_USER_ID\n  ) {\n    return {\n      op: SamplingInnerOperator.EQUAL,\n      name: condition.category,\n      value: newValue,\n      options: {\n        ignoreCase: false,\n      },\n    };\n  }\n\n  // SamplingConditionLogicalInnerEq\n  return {\n    op: SamplingInnerOperator.EQUAL,\n    // TODO(sampling): remove the cast\n    name: condition.category as\n      | SamplingInnerName.TRACE_ENVIRONMENT\n      | SamplingInnerName.TRACE_USER_ID\n      | SamplingInnerName.TRACE_USER_SEGMENT\n      | SamplingInnerName.EVENT_ENVIRONMENT\n      | SamplingInnerName.EVENT_USER_ID\n      | SamplingInnerName.EVENT_USER_SEGMENT,\n    value: newValue,\n    options: {\n      ignoreCase: true,\n    },\n  };\n}\n\nconst unexpectedErrorMessage = t('An internal error occurred while saving sampling rule');\n\ntype ResponseJSONDetailed = {\n  detail: string[];\n};\n\ntype ResponseJSON = {\n  dynamicSampling?: {\n    rules: Array<Partial<SamplingRule>>;\n  };\n};\n\nexport function getErrorMessage(\n  error: {\n    responseJSON?: ResponseJSON | ResponseJSONDetailed;\n  },\n  currentRuleIndex: number\n) {\n  const detailedErrorResponse = (error.responseJSON as undefined | ResponseJSONDetailed)\n    ?.detail;\n\n  if (detailedErrorResponse) {\n    // This is a temp solution until we enable error rules again, therefore it does not need translation\n    return detailedErrorResponse[0];\n  }\n\n  const errorResponse = error.responseJSON as undefined | ResponseJSON;\n\n  if (!errorResponse) {\n    return unexpectedErrorMessage;\n  }\n\n  const responseErrors = errorResponse.dynamicSampling?.rules[currentRuleIndex] ?? {};\n\n  const [type, _value] = Object.entries(responseErrors)[0];\n\n  if (type === 'sampleRate') {\n    return {\n      type: 'sampleRate',\n      message: t('Ensure this value is a floating number between 0 and 100'),\n    };\n  }\n\n  return unexpectedErrorMessage;\n}\n\nexport function getTagKey(condition: Condition) {\n  switch (condition.category) {\n    case SamplingInnerName.TRACE_RELEASE:\n    case SamplingInnerName.EVENT_RELEASE:\n      return 'release';\n    case SamplingInnerName.TRACE_ENVIRONMENT:\n    case SamplingInnerName.EVENT_ENVIRONMENT:\n      return 'environment';\n    case SamplingInnerName.TRACE_TRANSACTION:\n    case SamplingInnerName.EVENT_TRANSACTION:\n      return 'transaction';\n    case SamplingInnerName.EVENT_OS_NAME:\n      return 'os.name';\n    case SamplingInnerName.EVENT_OS_VERSION:\n      return 'os.version';\n    case SamplingInnerName.EVENT_DEVICE_FAMILY:\n      return 'device.family';\n    case SamplingInnerName.EVENT_DEVICE_NAME:\n      return 'device.name';\n    case SamplingInnerName.EVENT_CUSTOM_TAG:\n      return '';\n    default:\n      // custom tags\n      return stripCustomTagPrefix(condition.category);\n  }\n}\n\nexport const distributedTracesConditions = [\n  SamplingInnerName.TRACE_RELEASE,\n  SamplingInnerName.TRACE_ENVIRONMENT,\n  SamplingInnerName.TRACE_USER_ID,\n  SamplingInnerName.TRACE_USER_SEGMENT,\n  SamplingInnerName.TRACE_TRANSACTION,\n];\n\nexport const individualTransactionsConditions = [\n  SamplingInnerName.EVENT_RELEASE,\n  SamplingInnerName.EVENT_ENVIRONMENT,\n  SamplingInnerName.EVENT_USER_ID,\n  SamplingInnerName.EVENT_USER_SEGMENT,\n  SamplingInnerName.EVENT_BROWSER_EXTENSIONS,\n  SamplingInnerName.EVENT_LOCALHOST,\n  SamplingInnerName.EVENT_LEGACY_BROWSER,\n  SamplingInnerName.EVENT_WEB_CRAWLERS,\n  SamplingInnerName.EVENT_IP_ADDRESSES,\n  SamplingInnerName.EVENT_CSP,\n  SamplingInnerName.EVENT_ERROR_MESSAGES,\n  SamplingInnerName.EVENT_TRANSACTION,\n  SamplingInnerName.EVENT_OS_NAME,\n  SamplingInnerName.EVENT_OS_VERSION,\n  SamplingInnerName.EVENT_DEVICE_FAMILY,\n  SamplingInnerName.EVENT_DEVICE_NAME,\n  SamplingInnerName.EVENT_CUSTOM_TAG,\n];\n\nexport function generateConditionCategoriesOptions(\n  conditionCategories: SamplingInnerName[]\n): [SamplingInnerName, string][] {\n  const hasCustomTagCategory = conditionCategories.includes(\n    SamplingInnerName.EVENT_CUSTOM_TAG\n  );\n\n  const sortedConditionCategories = conditionCategories\n    // filter our custom tag category, we will append it to the bottom\n    .filter(category => category !== SamplingInnerName.EVENT_CUSTOM_TAG)\n    // sort dropdown options alphabetically based on display labels\n    .sort((a, b) => getInnerNameLabel(a).localeCompare(getInnerNameLabel(b)));\n\n  if (hasCustomTagCategory) {\n    sortedConditionCategories.push(SamplingInnerName.EVENT_CUSTOM_TAG);\n  }\n\n  // massage into format that select component understands\n  return sortedConditionCategories.map(innerName => [\n    innerName,\n    getInnerNameLabel(innerName),\n  ]);\n}\n\nexport function formatCreateTagLabel(label: string) {\n  return tct('Add \"[newLabel]\"', {\n    newLabel: <TruncatedLabel value={label} />,\n  });\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {t, tct, tn} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\nimport Button from '../button';\nimport {PanelAlert} from '../panels';\n\nfunction getSelectAllText(allRowsCount?: number, bulkLimit?: number) {\n  if (!defined(allRowsCount)) {\n    return {\n      noticeText: t('Selected all items across all pages.'),\n      actionText: t('Select all items across all pages.'),\n    };\n  }\n\n  if (bulkLimit && allRowsCount > bulkLimit) {\n    return {\n      noticeText: tct('Selected up to the first [count] items.', {\n        count: bulkLimit,\n      }),\n      actionText: tct('Select the first [count] items.', {\n        count: bulkLimit,\n      }),\n    };\n  }\n\n  return {\n    noticeText: tct('Selected all [count] items.', {\n      count: allRowsCount,\n    }),\n    actionText: tct('Select all [count] items.', {\n      count: allRowsCount,\n    }),\n  };\n}\n\ntype Props = {\n  /**\n   * Number of columns to stretch the notice (used in grid-column)\n   */\n  columnsCount: number;\n  /**\n   * Are all rows across all pages selected?\n   */\n  isAllSelected: boolean;\n  /**\n   * Are all rows on current page selected?\n   */\n  isPageSelected: boolean;\n  /**\n   * Callback to select all rows across all pages\n   */\n  onSelectAllRows: () => void;\n  /**\n   * Callback to clear selection of all rows\n   */\n  onUnselectAllRows: () => void;\n  /**\n   * Number of selected rows\n   */\n  selectedRowsCount: number;\n  /**\n   * Number of all rows across all pages\n   */\n  allRowsCount?: number;\n  /**\n   * Number of max items we can perform bulk operations on\n   */\n  bulkLimit?: number;\n  className?: string;\n};\n\nfunction BulkNotice({\n  selectedRowsCount,\n  columnsCount,\n  isPageSelected,\n  isAllSelected,\n  onSelectAllRows,\n  onUnselectAllRows,\n  bulkLimit,\n  allRowsCount,\n  className,\n}: Props) {\n  if ((allRowsCount && allRowsCount <= selectedRowsCount) || !isPageSelected) {\n    return null;\n  }\n\n  const {noticeText, actionText} = getSelectAllText(allRowsCount, bulkLimit);\n\n  return (\n    <Wrapper columnsCount={columnsCount} className={className}>\n      {isAllSelected ? (\n        <Fragment>\n          {noticeText}{' '}\n          <AlertButton priority=\"link\" onClick={onUnselectAllRows}>\n            {t('Cancel selection.')}\n          </AlertButton>\n        </Fragment>\n      ) : (\n        <Fragment>\n          {tn(\n            '%s item on this page selected.',\n            '%s items on this page selected.',\n            selectedRowsCount\n          )}{' '}\n          <AlertButton priority=\"link\" onClick={onSelectAllRows}>\n            {actionText}\n          </AlertButton>\n        </Fragment>\n      )}\n    </Wrapper>\n  );\n}\n\ntype WrapperProps = {columnsCount: number} & React.ComponentProps<typeof PanelAlert>;\nconst Wrapper = styled(({columnsCount: _columnsCount, ...props}: WrapperProps) => (\n  <PanelAlert {...props} />\n))`\n  grid-column: span ${p => p.columnsCount};\n  text-align: center;\n`;\n\nconst AlertButton = styled(Button)`\n  &,\n  &:hover,\n  &:active,\n  &:focus {\n    /* match the styles of an <a> tag inside Alert */\n    color: ${p => p.theme.textColor};\n    border: none;\n    border-radius: 0;\n    border-bottom: 1px dotted ${p => p.theme.textColor};\n    padding-bottom: 1px;\n    font-size: 15px;\n  }\n`;\n\nexport default BulkNotice;\n","import {Component} from 'react';\nimport intersection from 'lodash/intersection';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport xor from 'lodash/xor';\n\nimport BulkNotice from './bulkNotice';\n\ntype RenderProps = {\n  /**\n   * Are all rows on current page selected?\n   */\n  isPageSelected: boolean;\n  /**\n   * Callback for toggling all rows across all pages\n   */\n  onAllRowsToggle: (select: boolean) => void;\n  /**\n   * Callback for toggling all rows on current page\n   */\n  onPageRowsToggle: (select: boolean) => void;\n  /**\n   * Callback for toggling single row\n   */\n  onRowToggle: (id: string) => void;\n  /**\n   * Ready to be rendered summary component showing how many items are selected,\n   * with buttons to select everything, cancel everything, etc...\n   */\n  renderBulkNotice: () => React.ReactNode;\n} & Pick<State, 'selectedIds' | 'isAllSelected'>;\n\ntype State = {\n  /**\n   * Are all rows across all pages selected?\n   */\n  isAllSelected: boolean;\n  /**\n   * Selected ids on the current page\n   */\n  selectedIds: string[];\n};\n\ntype Props = {\n  /**\n   * Number of all rows across all pages\n   */\n  allRowsCount: number;\n  /**\n   * Children with render props\n   */\n  children: (props: RenderProps) => React.ReactNode;\n  /**\n   * Number of grid columns to stretch the selection summary (used in BulkNotice)\n   */\n  columnsCount: number;\n  /**\n   * Array of ids on current page\n   */\n  pageIds: string[];\n  /**\n   * Maximum number of rows that can be bulk manipulated at once (used in BulkNotice)\n   */\n  bulkLimit?: number;\n  /**\n   * Array of default selected ids\n   */\n  defaultSelectedIds?: string[];\n  /**\n   * BulkController State\n   */\n  onChange?: (props: State) => void;\n};\n\nclass BulkController extends Component<Props, State> {\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    const {defaultSelectedIds, pageIds} = this.props;\n    return {\n      selectedIds: intersection(defaultSelectedIds ?? [], pageIds),\n      isAllSelected: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props: Readonly<Props>, state: State) {\n    return {\n      ...state,\n      selectedIds: intersection(state.selectedIds, props.pageIds),\n    };\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (!isEqual(prevState, this.state)) {\n      this.props.onChange?.(this.state);\n    }\n  }\n\n  handleRowToggle = (id: string) => {\n    this.setState(state => ({\n      selectedIds: xor(state.selectedIds, [id]),\n      isAllSelected: false,\n    }));\n  };\n\n  handleAllRowsToggle = (select: boolean) => {\n    const {pageIds} = this.props;\n    this.setState({\n      selectedIds: select ? [...pageIds] : [],\n      isAllSelected: select,\n    });\n  };\n\n  handlePageRowsToggle = (select: boolean) => {\n    const {pageIds} = this.props;\n    this.setState(state => ({\n      selectedIds: select\n        ? uniq([...state.selectedIds, ...pageIds])\n        : state.selectedIds.filter(id => !pageIds.includes(id)),\n      isAllSelected: false,\n    }));\n  };\n\n  render() {\n    const {pageIds, children, columnsCount, allRowsCount, bulkLimit} = this.props;\n    const {selectedIds, isAllSelected} = this.state;\n\n    const isPageSelected =\n      pageIds.length > 0 && pageIds.every(id => selectedIds.includes(id));\n\n    const renderProps: RenderProps = {\n      selectedIds,\n      isAllSelected,\n      isPageSelected,\n      onRowToggle: this.handleRowToggle,\n      onAllRowsToggle: this.handleAllRowsToggle,\n      onPageRowsToggle: this.handlePageRowsToggle,\n      renderBulkNotice: () => (\n        <BulkNotice\n          allRowsCount={allRowsCount}\n          selectedRowsCount={selectedIds.length}\n          onUnselectAllRows={() => this.handleAllRowsToggle(false)}\n          onSelectAllRows={() => this.handleAllRowsToggle(true)}\n          columnsCount={columnsCount}\n          isPageSelected={isPageSelected}\n          isAllSelected={isAllSelected}\n          bulkLimit={bulkLimit}\n        />\n      ),\n    };\n\n    return children(renderProps);\n  }\n}\n\nexport default BulkController;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport BulkController from 'sentry/components/bulkController';\nimport Switch from 'sentry/components/switchButton';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {LegacyBrowser} from 'sentry/types/sampling';\n\nimport {LEGACY_BROWSER_LIST} from '../utils';\n\nconst legacyBrowsers = Object.values(LegacyBrowser) as Array<LegacyBrowser>;\n\ntype Props = {\n  onChange: (selectedLegacyBrowsers: Array<LegacyBrowser>) => void;\n  selectedLegacyBrowsers?: Array<LegacyBrowser>;\n};\n\nfunction LegacyBrowsers({onChange, selectedLegacyBrowsers = []}: Props) {\n  function handleChange({\n    selectedIds,\n  }: Parameters<NonNullable<BulkController['props']['onChange']>>[0]) {\n    onChange(selectedIds as Array<LegacyBrowser>);\n  }\n\n  return (\n    <BulkController\n      pageIds={legacyBrowsers}\n      defaultSelectedIds={selectedLegacyBrowsers}\n      allRowsCount={legacyBrowsers.length}\n      onChange={handleChange}\n      columnsCount={0}\n    >\n      {({selectedIds, onRowToggle, onPageRowsToggle, isPageSelected}) => (\n        <Wrapper>\n          {t('All browsers')}\n          <Switch\n            key=\"switch\"\n            size=\"lg\"\n            isActive={isPageSelected}\n            toggle={() => {\n              onPageRowsToggle(!isPageSelected);\n            }}\n          />\n          {legacyBrowsers.map(legacyBrowser => {\n            const {icon, title} = LEGACY_BROWSER_LIST[legacyBrowser];\n            return (\n              <Fragment key={legacyBrowser}>\n                <BrowserWrapper>\n                  <Icon className={`icon-${icon}`} data-test-id={`icon-${icon}`} />\n                  {title}\n                </BrowserWrapper>\n                <Switch\n                  size=\"lg\"\n                  isActive={selectedIds.includes(legacyBrowser)}\n                  toggle={() => onRowToggle(legacyBrowser)}\n                />\n              </Fragment>\n            );\n          })}\n        </Wrapper>\n      )}\n    </BulkController>\n  );\n}\n\nexport default LegacyBrowsers;\n\nconst Wrapper = styled('div')`\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  gap: ${space(2)};\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray400};\n  padding-top: ${space(2)};\n  padding-bottom: ${space(1)};\n`;\n\nconst BrowserWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-column-gap: ${space(1)};\n  color: ${p => p.theme.gray500};\n`;\n\nconst Icon = styled('div')`\n  width: 24px;\n  height: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 24px 24px;\n  flex-shrink: 0;\n`;\n","import styled from '@emotion/styled';\n\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t} from 'sentry/locale';\nimport {Tag} from 'sentry/types';\nimport {SamplingInnerName} from 'sentry/types/sampling';\n\nimport {TruncatedLabel} from './truncatedLabel';\nimport {formatCreateTagLabel} from './utils';\n\ntype Props = {\n  disabledOptions: string[];\n  onChange: (value: string) => void;\n  tags: Tag[];\n  value?: string;\n};\n\n/**\n * This component is used for the autocomplete of custom tag key\n */\nfunction TagKeyAutocomplete({tags, onChange, value, disabledOptions}: Props) {\n  // select doesn't play nicely with selected values that are not in the listed options\n  const options = tags.map(({key}) => ({\n    value: key,\n    label: <TruncatedLabel value={key} />,\n  }));\n\n  if (\n    value &&\n    value !== SamplingInnerName.EVENT_CUSTOM_TAG &&\n    !tags.some(({key}) => key === value)\n  ) {\n    options.push({\n      value,\n      label: <TruncatedLabel value={value} />,\n    });\n  }\n\n  return (\n    <Wrapper>\n      <SelectField\n        aria-label={t('Search or add a tag')}\n        name=\"customTagKey\"\n        options={options}\n        isOptionDisabled={option => disabledOptions.includes(option.value)}\n        inline={false}\n        stacked\n        hideControlState\n        required\n        creatable\n        placeholder={t('tag')}\n        onChange={onChange}\n        value={value}\n        formatCreateLabel={formatCreateTagLabel}\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled('div')`\n  width: 100%;\n`;\n\nexport {TagKeyAutocomplete};\n","import {useCallback, useEffect, useState} from 'react';\nimport {components, MultiValueProps} from 'react-select';\nimport styled from '@emotion/styled';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SelectField from 'sentry/components/forms/selectField';\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {SamplingInnerName} from 'sentry/types/sampling';\nimport useApi from 'sentry/utils/useApi';\n\nimport {TruncatedLabel} from './truncatedLabel';\nimport {formatCreateTagLabel, getMatchFieldPlaceholder} from './utils';\n\ntype Tag = {\n  value: string;\n};\n\ntype Props = {\n  category:\n    | SamplingInnerName.EVENT_ENVIRONMENT\n    | SamplingInnerName.EVENT_RELEASE\n    | SamplingInnerName.EVENT_TRANSACTION\n    | SamplingInnerName.EVENT_OS_NAME\n    | SamplingInnerName.EVENT_OS_VERSION\n    | SamplingInnerName.EVENT_DEVICE_FAMILY\n    | SamplingInnerName.EVENT_DEVICE_NAME\n    | SamplingInnerName.EVENT_CUSTOM_TAG\n    | SamplingInnerName.TRACE_ENVIRONMENT\n    | SamplingInnerName.TRACE_RELEASE\n    | SamplingInnerName.TRACE_TRANSACTION\n    | string;\n  onChange: (value: string) => void;\n  orgSlug: Organization['slug'];\n  projectId: Project['id'];\n  tagKey?: string;\n  value?: string;\n};\n\nfunction TagValueAutocomplete({\n  orgSlug,\n  projectId,\n  category,\n  onChange,\n  value,\n  tagKey,\n}: Props) {\n  const api = useApi();\n  const [tagValues, setTagValues] = useState<Tag[]>([]);\n\n  function getAriaLabel() {\n    switch (category) {\n      case SamplingInnerName.TRACE_RELEASE:\n      case SamplingInnerName.EVENT_RELEASE:\n        return t('Search or add a release');\n      case SamplingInnerName.TRACE_ENVIRONMENT:\n      case SamplingInnerName.EVENT_ENVIRONMENT:\n        return t('Search or add an environment');\n      case SamplingInnerName.TRACE_TRANSACTION:\n      case SamplingInnerName.EVENT_TRANSACTION:\n        return t('Search or add a transaction');\n      case SamplingInnerName.EVENT_OS_NAME:\n        return t('Search or add an os name');\n      case SamplingInnerName.EVENT_OS_VERSION:\n        return t('Search or add an os version');\n      case SamplingInnerName.EVENT_DEVICE_FAMILY:\n        return t('Search or add a device family');\n      case SamplingInnerName.EVENT_DEVICE_NAME:\n        return t('Search or add a device name');\n\n      default:\n        // custom tags\n        return t('Search or add tag values');\n    }\n  }\n\n  const tagValueLoader = useCallback(async () => {\n    if (!tagKey) {\n      return;\n    }\n\n    try {\n      const response = await fetchTagValues(api, orgSlug, tagKey, null, [projectId]);\n      setTagValues(response);\n    } catch {\n      // Do nothing. No results will be suggested\n    }\n  }, [tagKey, api, orgSlug, projectId]);\n\n  useEffect(() => {\n    tagValueLoader();\n  }, [tagValueLoader]);\n\n  // react-select doesn't seem to work very well when its value contains\n  // a created item that isn't listed in the options\n  const createdOptions: Tag[] = !value\n    ? []\n    : value\n        .split('\\n')\n        .filter(v => !tagValues.some(tagValue => tagValue.value === v))\n        .map(v => ({value: v}));\n\n  return (\n    <StyledSelectField\n      name=\"match\"\n      aria-label={getAriaLabel()}\n      options={[...createdOptions, ...tagValues].map(tagValue => ({\n        value: tagValue.value,\n        label: <TruncatedLabel value={tagValue.value} />,\n      }))}\n      value={value?.split('\\n')}\n      onChange={newValue => {\n        onChange(newValue?.join('\\n'));\n      }}\n      components={{\n        MultiValue: (multiValueProps: MultiValueProps<{}>) => (\n          <components.MultiValue\n            {...multiValueProps}\n            innerProps={{...multiValueProps.innerProps, 'data-test-id': 'multivalue'}}\n          />\n        ),\n      }}\n      formatCreateLabel={formatCreateTagLabel}\n      placeholder={getMatchFieldPlaceholder(category)}\n      inline={false}\n      multiple\n      hideControlState\n      flexibleControlStateSize\n      required\n      stacked\n      creatable\n      allowClear\n    />\n  );\n}\n\nconst StyledSelectField = styled(SelectField)`\n  width: 100%;\n`;\n\nexport {TagValueAutocomplete};\n","import {Fragment, useEffect, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport FieldRequiredBadge from 'sentry/components/forms/field/fieldRequiredBadge';\nimport TextareaField from 'sentry/components/forms/textareaField';\nimport {IconDelete} from 'sentry/icons/iconDelete';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project, Tag} from 'sentry/types';\nimport {LegacyBrowser, SamplingInnerName} from 'sentry/types/sampling';\nimport useApi from 'sentry/utils/useApi';\n\nimport {\n  addCustomTagPrefix,\n  getInnerNameLabel,\n  isCustomTagName,\n  stripCustomTagPrefix,\n} from '../utils';\n\nimport LegacyBrowsers from './legacyBrowsers';\nimport {TagKeyAutocomplete} from './tagKeyAutocomplete';\nimport {TagValueAutocomplete} from './tagValueAutocomplete';\nimport {getMatchFieldPlaceholder, getTagKey} from './utils';\n\ntype Condition = {\n  category: SamplingInnerName | string; // string is used for custom tags\n  legacyBrowsers?: Array<LegacyBrowser>;\n  match?: string;\n};\n\ntype Props = Pick<\n  React.ComponentProps<typeof TagValueAutocomplete>,\n  'orgSlug' | 'projectId'\n> & {\n  conditions: Condition[];\n  onChange: <T extends keyof Condition>(\n    index: number,\n    field: T,\n    value: Condition[T]\n  ) => void;\n  onDelete: (index: number) => void;\n  projectSlug: Project['slug'];\n};\n\nfunction Conditions({\n  conditions,\n  orgSlug,\n  projectId,\n  projectSlug,\n  onDelete,\n  onChange,\n}: Props) {\n  const api = useApi();\n  const [tags, setTags] = useState<Tag[]>([]);\n\n  useEffect(() => {\n    async function fetchTags() {\n      try {\n        const response = await api.requestPromise(\n          `/projects/${orgSlug}/${projectSlug}/tags/`,\n          {query: {onlySamplingTags: 1}}\n        );\n        setTags(response);\n      } catch {\n        // Do nothing, just autocomplete won't suggest any results\n      }\n    }\n\n    fetchTags();\n  }, [api, orgSlug, projectSlug]);\n\n  return (\n    <Fragment>\n      {conditions.map((condition, index) => {\n        const {category, match, legacyBrowsers} = condition;\n        const displayLegacyBrowsers = category === SamplingInnerName.EVENT_LEGACY_BROWSER;\n        const isCustomTag = isCustomTagName(category);\n\n        const isBooleanField =\n          category === SamplingInnerName.EVENT_BROWSER_EXTENSIONS ||\n          category === SamplingInnerName.EVENT_LOCALHOST ||\n          category === SamplingInnerName.EVENT_WEB_CRAWLERS;\n        displayLegacyBrowsers;\n\n        const isAutoCompleteField =\n          category === SamplingInnerName.EVENT_ENVIRONMENT ||\n          category === SamplingInnerName.EVENT_RELEASE ||\n          category === SamplingInnerName.EVENT_TRANSACTION ||\n          category === SamplingInnerName.EVENT_OS_NAME ||\n          category === SamplingInnerName.EVENT_DEVICE_FAMILY ||\n          category === SamplingInnerName.EVENT_DEVICE_NAME ||\n          category === SamplingInnerName.TRACE_ENVIRONMENT ||\n          category === SamplingInnerName.TRACE_RELEASE ||\n          category === SamplingInnerName.TRACE_TRANSACTION ||\n          isCustomTag;\n\n        return (\n          <ConditionWrapper key={index}>\n            <LeftCell>\n              {isCustomTag ? (\n                <TagKeyAutocomplete\n                  tags={tags}\n                  onChange={value =>\n                    onChange(index, 'category', addCustomTagPrefix(value))\n                  }\n                  value={stripCustomTagPrefix(category)}\n                  disabledOptions={conditions\n                    .filter(\n                      cond => isCustomTagName(cond.category) && cond.category !== category\n                    )\n                    .map(cond => stripCustomTagPrefix(cond.category))}\n                />\n              ) : (\n                <span>\n                  {getInnerNameLabel(category)}\n                  <FieldRequiredBadge />\n                </span>\n              )}\n            </LeftCell>\n            <CenterCell>\n              {!isBooleanField &&\n                (isAutoCompleteField ? (\n                  <TagValueAutocomplete\n                    category={category}\n                    tagKey={getTagKey(condition)}\n                    orgSlug={orgSlug}\n                    projectId={projectId}\n                    value={match}\n                    onChange={value => onChange(index, 'match', value)}\n                  />\n                ) : (\n                  <StyledTextareaField\n                    name=\"match\"\n                    value={match}\n                    onChange={value => onChange(index, 'match', value)}\n                    placeholder={getMatchFieldPlaceholder(category)}\n                    inline={false}\n                    rows={1}\n                    autosize\n                    hideControlState\n                    flexibleControlStateSize\n                    required\n                    stacked\n                  />\n                ))}\n            </CenterCell>\n            <RightCell>\n              <Button\n                onClick={() => onDelete(index)}\n                icon={<IconDelete />}\n                aria-label={t('Delete Condition')}\n              />\n            </RightCell>\n            {displayLegacyBrowsers && (\n              <LegacyBrowsers\n                selectedLegacyBrowsers={legacyBrowsers}\n                onChange={value => {\n                  onChange(index, 'legacyBrowsers', value);\n                }}\n              />\n            )}\n          </ConditionWrapper>\n        );\n      })}\n    </Fragment>\n  );\n}\n\nexport default Conditions;\n\nconst ConditionWrapper = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n  align-items: flex-start;\n  padding: ${space(1)} ${space(2)};\n  :not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.gray100};\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 0.6fr) minmax(0, 1fr) max-content;\n  }\n`;\n\nconst Cell = styled('div')`\n  min-height: 40px;\n  display: inline-flex;\n  align-items: center;\n`;\n\nconst LeftCell = styled(Cell)`\n  padding-right: ${space(1)};\n  line-height: 16px;\n`;\n\nconst CenterCell = styled(Cell)`\n  padding-top: ${space(1)};\n  grid-column: 1/-1;\n  grid-row: 2/2;\n  ${p => !p.children && 'display: none'};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-column: auto;\n    grid-row: auto;\n    padding-top: 0;\n  }\n`;\n\nconst RightCell = styled(Cell)`\n  justify-content: flex-end;\n  padding-left: ${space(1)};\n`;\n\nconst StyledTextareaField = styled(TextareaField)`\n  padding-bottom: 0;\n  width: 100%;\n`;\n","import {Fragment, KeyboardEvent, useEffect, useState} from 'react';\nimport {components, createFilter} from 'react-select';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\nimport partition from 'lodash/partition';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport NumberField from 'sentry/components/forms/numberField';\nimport Option from 'sentry/components/forms/selectOption';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Truncate from 'sentry/components/truncate';\nimport {IconAdd} from 'sentry/icons';\nimport {IconSearch} from 'sentry/icons/iconSearch';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project, SelectValue} from 'sentry/types';\nimport {\n  SamplingConditionOperator,\n  SamplingInnerName,\n  SamplingRule,\n  SamplingRules,\n  SamplingRuleType,\n} from 'sentry/types/sampling';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport useApi from 'sentry/utils/useApi';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport {useParams} from 'sentry/utils/useParams';\nimport {useRoutes} from 'sentry/utils/useRoutes';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {getInnerNameLabel, isCustomTagName} from '../utils';\n\nimport Conditions from './conditions';\nimport {\n  distributedTracesConditions,\n  generateConditionCategoriesOptions,\n  getErrorMessage,\n  getNewCondition,\n  individualTransactionsConditions,\n  isLegacyBrowser,\n} from './utils';\n\nconst conditionAlreadyAddedTooltip = t('This condition has already been added');\n\ntype ConditionsProps = React.ComponentProps<typeof Conditions>['conditions'];\n\ntype State = {\n  conditions: ConditionsProps;\n  errors: {\n    sampleRate?: string;\n  };\n  sampleRate: number | null;\n};\n\ntype Props = ModalRenderProps & {\n  disabled: boolean;\n  onSubmitSuccess: (project: Project, successMessage: React.ReactNode) => void;\n  organization: Organization;\n  project: Project;\n  rules: SamplingRules;\n  type: SamplingRuleType;\n  rule?: SamplingRule;\n};\n\nexport function SamplingRuleModal({\n  Header,\n  Body,\n  Footer,\n  closeModal,\n  project,\n  onSubmitSuccess,\n  rule,\n  rules,\n  disabled,\n  type,\n  organization,\n}: Props) {\n  const api = useApi();\n  const params = useParams();\n  const location = useLocation();\n  const routes = useRoutes();\n\n  const [data, setData] = useState<State>(getInitialState());\n  const [isSaving, setIsSaving] = useState(false);\n\n  const conditionCategories = generateConditionCategoriesOptions(\n    type === SamplingRuleType.TRACE\n      ? distributedTracesConditions\n      : individualTransactionsConditions\n  );\n\n  useEffect(() => {\n    setData(d => {\n      if (!!d.errors.sampleRate) {\n        return {...d, errors: {...d.errors, sampleRate: undefined}};\n      }\n\n      return d;\n    });\n  }, [data.sampleRate]);\n\n  function getInitialState(): State {\n    if (rule) {\n      const {condition: conditions, sampleRate} = rule;\n\n      const {inner} = conditions;\n\n      return {\n        conditions: inner.map(innerItem => {\n          const {name, value} = innerItem;\n\n          if (Array.isArray(value)) {\n            if (isLegacyBrowser(value)) {\n              return {\n                category: name,\n                legacyBrowsers: value,\n              };\n            }\n            return {\n              category: name,\n              match: value.join('\\n'),\n            };\n          }\n          return {category: name};\n        }),\n        sampleRate: sampleRate * 100,\n        errors: {},\n      };\n    }\n\n    return {\n      conditions: [],\n      sampleRate: null,\n      errors: {},\n    };\n  }\n\n  function getDescription() {\n    if (type === SamplingRuleType.TRACE) {\n      return {\n        title: rule ? t('Edit Distributed Trace Rule') : t('Add Distributed Trace Rule'),\n        description: tct(\n          'Using a Trace ID, select all Transactions distributed across multiple projects/services which match your conditions. However, if you only want to select Transactions from within this project, we recommend you add a [link] rule instead.',\n          {\n            link: (\n              <Link\n                to={recreateRoute(`${SamplingRuleType.TRANSACTION}/`, {\n                  routes,\n                  location,\n                  params,\n                  stepBack: -1,\n                })}\n              >\n                {t('Individual Transaction')}\n              </Link>\n            ),\n          }\n        ),\n      };\n    }\n\n    return {\n      title: rule\n        ? t('Edit Individual Transaction Rule')\n        : t('Add Individual Transaction Rule'),\n      description: tct(\n        'Select Transactions only within this project which match your conditions. However, If you want to select all Transactions distributed across multiple projects/services, we recommend you add a [link] rule instead.',\n        {\n          link: (\n            <Link\n              to={recreateRoute(`${SamplingRuleType.TRACE}/`, {\n                routes,\n                location,\n                params,\n                stepBack: -1,\n              })}\n            >\n              {t('Distributed Trace')}\n            </Link>\n          ),\n        }\n      ),\n    };\n  }\n\n  const {errors, conditions, sampleRate} = data;\n\n  function convertRequestErrorResponse(error: ReturnType<typeof getErrorMessage>) {\n    if (typeof error === 'string') {\n      addErrorMessage(error);\n      return;\n    }\n\n    switch (error.type) {\n      case 'sampleRate':\n        setData({...data, errors: {...errors, sampleRate: error.message}});\n        break;\n      default:\n        addErrorMessage(error.message);\n    }\n  }\n\n  async function handleSubmit() {\n    if (!defined(sampleRate)) {\n      return;\n    }\n\n    const newRule: SamplingRule = {\n      // All new/updated rules must have id equal to 0\n      id: 0,\n      type,\n      condition: {\n        op: SamplingConditionOperator.AND,\n        inner: !conditions.length ? [] : conditions.map(getNewCondition),\n      },\n      sampleRate: sampleRate / 100,\n    };\n\n    const newTransactionRules = rule\n      ? rules.map(r => (isEqual(r, rule) ? newRule : r))\n      : [...rules, newRule];\n\n    const [transactionTraceRules, individualTransactionRules] = partition(\n      newTransactionRules,\n      transactionRule => transactionRule.type === SamplingRuleType.TRACE\n    );\n\n    const newRules = [...transactionTraceRules, ...individualTransactionRules];\n\n    const currentRuleIndex = newRules.findIndex(newR => newR === newRule);\n\n    setIsSaving(true);\n\n    try {\n      const newProjectDetails = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {method: 'PUT', data: {dynamicSampling: {rules: newRules}}}\n      );\n      onSubmitSuccess(\n        newProjectDetails,\n        rule\n          ? t('Successfully edited sampling rule')\n          : t('Successfully added sampling rule')\n      );\n      closeModal();\n    } catch (error) {\n      convertRequestErrorResponse(getErrorMessage(error, currentRuleIndex));\n    }\n\n    setIsSaving(false);\n\n    const analyticsConditions = conditions.map(condition => condition.category);\n    const analyticsConditionsStringified = analyticsConditions.sort().join(', ');\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.save', {\n      organization,\n      project_id: project.id,\n      sampling_rate: sampleRate,\n      conditions: analyticsConditions,\n      conditions_stringified: analyticsConditionsStringified,\n    });\n\n    if (defined(rule)) {\n      trackAdvancedAnalyticsEvent('sampling.settings.rule.update', {\n        organization,\n        project_id: project.id,\n        sampling_rate: sampleRate,\n        conditions: analyticsConditions,\n        conditions_stringified: analyticsConditionsStringified,\n        old_conditions: rule.condition.inner.map(({name}) => name),\n        old_conditions_stringified: rule.condition.inner\n          .map(({name}) => name)\n          .sort()\n          .join(', '),\n        old_sampling_rate: rule.sampleRate * 100,\n      });\n      return;\n    }\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.create', {\n      organization,\n      project_id: project.id,\n      sampling_rate: sampleRate,\n      conditions: analyticsConditions,\n      conditions_stringified: analyticsConditionsStringified,\n    });\n  }\n\n  function handleAddCondition(selectedOptions: SelectValue<SamplingInnerName>[]) {\n    const previousCategories = conditions.map(({category}) => category);\n    const addedCategories = selectedOptions\n      .filter(\n        ({value}) =>\n          value === SamplingInnerName.EVENT_CUSTOM_TAG || // We can have more than 1 custom tag rules\n          !previousCategories.includes(value)\n      )\n      .map(({value}) => value);\n\n    trackAdvancedAnalyticsEvent('sampling.settings.condition.add', {\n      organization,\n      project_id: project.id,\n      conditions: addedCategories,\n    });\n\n    setData({\n      ...data,\n      conditions: [\n        ...conditions,\n        ...addedCategories.map(addedCategory => ({category: addedCategory, match: ''})),\n      ],\n    });\n  }\n\n  function handleDeleteCondition(index: number) {\n    const newConditions = [...conditions];\n    newConditions.splice(index, 1);\n    setData({...data, conditions: newConditions});\n  }\n\n  function handleChangeCondition<T extends keyof ConditionsProps[0]>(\n    index: number,\n    field: T,\n    value: ConditionsProps[0][T]\n  ) {\n    const newConditions = [...conditions];\n    newConditions[index][field] = value;\n\n    // If custom tag key changes, reset the value\n    if (field === 'category') {\n      newConditions[index].match = '';\n\n      trackAdvancedAnalyticsEvent('sampling.settings.condition.add', {\n        organization,\n        project_id: project.id,\n        conditions: [value as SamplingInnerName],\n      });\n    }\n\n    setData({...data, conditions: newConditions});\n  }\n\n  // Distributed Trace and Individual Transaction Rule can only have one 'sample all' rule at a time\n  const ruleWithoutConditionExists = rules\n    .filter(r => r.type === type && !isEqual(r, rule))\n    .some(r => !r.condition.inner.length);\n\n  const submitDisabled =\n    !defined(sampleRate) ||\n    (ruleWithoutConditionExists && !conditions.length) ||\n    !!conditions?.find(condition => {\n      if (condition.category === SamplingInnerName.EVENT_LEGACY_BROWSER) {\n        return !(condition.legacyBrowsers ?? []).length;\n      }\n\n      if (\n        condition.category === SamplingInnerName.EVENT_LOCALHOST ||\n        condition.category === SamplingInnerName.EVENT_BROWSER_EXTENSIONS ||\n        condition.category === SamplingInnerName.EVENT_WEB_CRAWLERS\n      ) {\n        return false;\n      }\n\n      // They probably did not specify custom tag key\n      if (\n        condition.category === '' ||\n        condition.category === SamplingInnerName.EVENT_CUSTOM_TAG\n      ) {\n        return true;\n      }\n\n      return !condition.match;\n    });\n\n  const customTagConditionsOptions = conditions\n    .filter(\n      condition =>\n        isCustomTagName(condition.category) &&\n        condition.category !== SamplingInnerName.EVENT_CUSTOM_TAG\n    )\n    .map(({category}) => ({\n      value: category,\n      label: (\n        <Truncate value={getInnerNameLabel(category)} expandable={false} maxLength={40} />\n      ),\n      disabled: true,\n      tooltip: conditionAlreadyAddedTooltip,\n    }));\n\n  const predefinedConditionsOptions = conditionCategories.map(([value, label]) => {\n    // Never disable the \"Add Custom Tag\" option, you can add more of those\n    const optionDisabled =\n      value === SamplingInnerName.EVENT_CUSTOM_TAG\n        ? false\n        : conditions.some(condition => condition.category === value);\n    return {\n      value,\n      label,\n      disabled: optionDisabled,\n      tooltip: disabled ? conditionAlreadyAddedTooltip : undefined,\n    };\n  });\n\n  const {title, description} = getDescription();\n\n  return (\n    <Fragment>\n      <Header closeButton>\n        <h4>{title}</h4>\n      </Header>\n      <Body>\n        <Fields>\n          <Description>{description}</Description>\n          <StyledPanel>\n            <StyledPanelHeader hasButtons>\n              {t('Conditions')}\n              <StyledCompactSelect\n                placement=\"bottom right\"\n                triggerLabel={\n                  <TriggerLabel>\n                    <IconAdd isCircled />\n                    {t('Add Condition')}\n                  </TriggerLabel>\n                }\n                placeholder={t('Filter conditions')}\n                isOptionDisabled={opt => opt.disabled}\n                options={[...customTagConditionsOptions, ...predefinedConditionsOptions]}\n                value={conditions\n                  // We need to filter our custom tag option so that it can be selected multiple times without being unselected every other time\n                  .filter(({category}) => category !== SamplingInnerName.EVENT_CUSTOM_TAG)\n                  .map(({category}) => category)}\n                onChange={handleAddCondition}\n                isSearchable\n                multiple\n                filterOption={(candidate, input) => {\n                  // Always offer the \"Add Custom Tag\" option in the autocomplete\n                  if (candidate.value === SamplingInnerName.EVENT_CUSTOM_TAG) {\n                    return true;\n                  }\n                  return createFilter(null)(candidate, input);\n                }}\n                components={{\n                  Option: containerProps => {\n                    if (containerProps.value === SamplingInnerName.EVENT_CUSTOM_TAG) {\n                      return (\n                        <components.Option className=\"select-option\" {...containerProps}>\n                          <AddCustomTag isFocused={containerProps.isFocused}>\n                            <IconAdd isCircled /> {t('Add Custom Tag')}\n                          </AddCustomTag>\n                        </components.Option>\n                      );\n                    }\n                    return <Option {...containerProps} />;\n                  },\n                }}\n              />\n            </StyledPanelHeader>\n            <PanelBody>\n              {!conditions.length ? (\n                <EmptyMessage\n                  icon={<IconSearch size=\"xl\" />}\n                  title={t('No conditions added')}\n                  description={\n                    ruleWithoutConditionExists\n                      ? tct(\n                          'A rule without conditions already exists. [lineBreak]Add (+) a condition for creating a new rule',\n                          {\n                            lineBreak: <br />,\n                          }\n                        )\n                      : tct(\n                          \"if you don't want to add (+) a condition, [lineBreak]simply, add a sample rate below\",\n                          {\n                            lineBreak: <br />,\n                          }\n                        )\n                  }\n                />\n              ) : (\n                <Conditions\n                  conditions={conditions}\n                  onDelete={handleDeleteCondition}\n                  onChange={handleChangeCondition}\n                  orgSlug={organization.slug}\n                  projectId={project.id}\n                  projectSlug={project.slug}\n                />\n              )}\n            </PanelBody>\n          </StyledPanel>\n          <NumberField\n            label={`${t('Sample Rate')} \\u0025`}\n            name=\"sampleRate\"\n            onChange={value => {\n              setData({...data, sampleRate: !!value ? Number(value) : null});\n            }}\n            onKeyDown={(_value: string, e: KeyboardEvent) => {\n              if (e.key === 'Enter') {\n                handleSubmit();\n              }\n            }}\n            placeholder={'\\u0025'}\n            value={sampleRate}\n            inline={false}\n            hideControlState={!errors.sampleRate}\n            error={errors.sampleRate}\n            showHelpInTooltip\n            stacked\n            required\n          />\n        </Fields>\n      </Body>\n      <Footer>\n        <ButtonBar gap={1}>\n          <Button onClick={closeModal}>{t('Cancel')}</Button>\n          <Button\n            priority=\"primary\"\n            onClick={handleSubmit}\n            title={\n              disabled\n                ? t('You do not have permission to add sampling rules.')\n                : submitDisabled\n                ? t('Required fields must be filled out')\n                : undefined\n            }\n            disabled={disabled || isSaving || submitDisabled}\n          >\n            {t('Save Rule')}\n          </Button>\n        </ButtonBar>\n      </Footer>\n    </Fragment>\n  );\n}\n\nconst Fields = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n`;\n\nconst StyledCompactSelect = styled(CompactSelect)`\n  font-weight: 400;\n  text-transform: none;\n`;\n\nconst StyledPanelHeader = styled(PanelHeader)`\n  padding-right: ${space(2)};\n`;\n\nconst StyledPanel = styled(Panel)`\n  margin-bottom: 0;\n`;\n\nconst AddCustomTag = styled('div')<{isFocused: boolean}>`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} ${space(1)} ${space(1)} ${space(1.5)};\n  gap: ${space(1)};\n  line-height: 1.4;\n  border-radius: ${p => p.theme.borderRadius};\n  ${p => p.isFocused && `background: ${p.theme.hover};`};\n`;\n\nconst TriggerLabel = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, max-content);\n  align-items: center;\n  gap: ${space(1)};\n`;\n\nconst Description = styled(TextBlock)`\n  margin: 0;\n`;\n","import {useRouteContext} from 'sentry/utils/useRouteContext';\n\nexport function useRoutes() {\n  const route = useRouteContext();\n  return route.routes;\n}\n","import {DraggableSyntheticListeners} from '@dnd-kit/core';\nimport {useSortable} from '@dnd-kit/sortable';\nimport {Transform} from '@dnd-kit/utilities';\nimport styled from '@emotion/styled';\n\ntype UseSortableOutputProps = ReturnType<typeof useSortable>;\n\nexport type ItemProps = {\n  renderItem(args: {\n    dragging: boolean;\n    sorting: boolean;\n    value: ItemProps['value'];\n    attributes?: ItemProps['attributes'];\n    index?: ItemProps['index'];\n    listeners?: ItemProps['listeners'];\n    transform?: ItemProps['transform'];\n    transition?: ItemProps['transition'];\n  }): React.ReactElement | null;\n  value: React.ReactNode;\n  attributes?: UseSortableOutputProps['attributes'];\n  dragging?: boolean;\n  forwardRef?: React.Ref<HTMLDivElement>;\n  index?: number;\n  listeners?: DraggableSyntheticListeners;\n  sorting?: boolean;\n  transform?: Transform | null;\n  transition?: string | null;\n  wrapperStyle?: React.CSSProperties;\n};\n\nexport function Item({\n  value,\n  dragging,\n  index,\n  transform,\n  listeners,\n  sorting,\n  transition,\n  forwardRef,\n  attributes,\n  renderItem,\n  wrapperStyle,\n}: ItemProps) {\n  return (\n    <Wrapper\n      data-test-id=\"sampling-rule\"\n      ref={forwardRef}\n      style={\n        {\n          ...wrapperStyle,\n          transition,\n          '--translate-x': transform ? `${Math.round(transform.x)}px` : undefined,\n          '--translate-y': transform ? `${Math.round(transform.y)}px` : undefined,\n          '--scale-x': transform?.scaleX ? `${transform.scaleX}` : undefined,\n          '--scale-y': transform?.scaleY ? `${transform.scaleY}` : undefined,\n        } as React.CSSProperties\n      }\n    >\n      <InnerWrapper>\n        {renderItem({\n          dragging: Boolean(dragging),\n          sorting: Boolean(sorting),\n          listeners,\n          transform,\n          transition,\n          value,\n          index,\n          attributes,\n        })}\n      </InnerWrapper>\n    </Wrapper>\n  );\n}\n\nconst boxShadowBorder = '0 0 0 calc(1px / var(--scale-x, 1)) rgba(63, 63, 68, 0.05)';\nconst boxShadowCommon = '0 1px calc(3px / var(--scale-x, 1)) 0 rgba(34, 33, 81, 0.15)';\nconst boxShadow = `${boxShadowBorder}, ${boxShadowCommon}`;\n\nconst Wrapper = styled('div')`\n  transform: translate3d(var(--translate-x, 0), var(--translate-y, 0), 0)\n    scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1));\n  transform-origin: 0 0;\n  touch-action: manipulation;\n  --box-shadow: ${boxShadow};\n  --box-shadow-picked-up: ${boxShadowBorder}, -1px 0 15px 0 rgba(34, 33, 81, 0.01),\n    0px 15px 15px 0 rgba(34, 33, 81, 0.25);\n`;\n\nconst InnerWrapper = styled('div')`\n  background-color: ${p => p.theme.background};\n\n  animation: pop 200ms cubic-bezier(0.18, 0.67, 0.6, 1.22);\n  box-shadow: var(--box-shadow-picked-up);\n  opacity: 1;\n\n  :focus {\n    box-shadow: 0 0px 4px 1px rgba(76, 159, 254, 1), ${boxShadow};\n  }\n\n  @keyframes pop {\n    0% {\n      transform: scale(1);\n      box-shadow: var(--box-shadow);\n    }\n    100% {\n      box-shadow: var(--box-shadow-picked-up);\n    }\n  }\n`;\n","import {useSortable} from '@dnd-kit/sortable';\n\nimport {Item} from './item';\n\nexport type SortableItemProps = Pick<\n  React.ComponentProps<typeof Item>,\n  'renderItem' | 'index'\n> & {\n  id: string;\n  index: number;\n  wrapperStyle(args: {\n    index: number;\n    isDragging: boolean;\n    isSorting: boolean;\n  }): React.CSSProperties;\n  disabled?: boolean;\n};\n\nexport function SortableItem({\n  id,\n  index,\n  renderItem,\n  disabled,\n  wrapperStyle,\n}: SortableItemProps) {\n  const {\n    attributes,\n    isSorting,\n    isDragging,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({id, disabled});\n\n  return (\n    <Item\n      forwardRef={setNodeRef}\n      value={id}\n      sorting={isSorting}\n      renderItem={renderItem}\n      index={index}\n      transform={transform}\n      transition={transition}\n      listeners={listeners}\n      attributes={attributes}\n      wrapperStyle={wrapperStyle({index, isDragging, isSorting})}\n    />\n  );\n}\n","import {useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {DndContext, DragOverlay} from '@dnd-kit/core';\nimport {arrayMove, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\n\nimport {SamplingRule} from 'sentry/types/sampling';\n\nimport {Item, ItemProps} from './item';\nimport {SortableItem, SortableItemProps} from './sortableItem';\n\nexport type UpdateItemsProps = {\n  activeIndex: string;\n  overIndex: string;\n  reorderedItems: Array<string>;\n};\n\ntype Props = Pick<SortableItemProps, 'disabled' | 'wrapperStyle'> &\n  Pick<ItemProps, 'renderItem'> & {\n    items: Array<\n      Omit<SamplingRule, 'id'> & {\n        id: string;\n      }\n    >;\n    onUpdateItems: (props: UpdateItemsProps) => void;\n  };\n\ntype State = {\n  activeId?: string;\n};\n\nexport function DraggableList({\n  items,\n  onUpdateItems,\n  renderItem,\n  disabled = false,\n  wrapperStyle = () => ({}),\n}: Props) {\n  const [state, setState] = useState<State>({});\n\n  const itemIds = items.map(item => item.id);\n  const getIndex = itemIds.indexOf.bind(itemIds);\n  const activeIndex = state.activeId ? getIndex(state.activeId) : -1;\n\n  return (\n    <DndContext\n      onDragStart={({active}) => {\n        if (!active) {\n          return;\n        }\n\n        setState({activeId: active.id});\n      }}\n      onDragEnd={({over}) => {\n        setState({activeId: undefined});\n\n        if (over) {\n          const overIndex = getIndex(over.id);\n\n          if (activeIndex !== overIndex) {\n            onUpdateItems({\n              activeIndex,\n              overIndex,\n              reorderedItems: arrayMove(itemIds, activeIndex, overIndex),\n            });\n          }\n        }\n      }}\n      onDragCancel={() => setState({activeId: undefined})}\n    >\n      <SortableContext items={itemIds} strategy={verticalListSortingStrategy}>\n        {itemIds.map((itemId, index) => (\n          <SortableItem\n            key={itemId}\n            id={itemId}\n            index={index}\n            renderItem={renderItem}\n            disabled={disabled || items[index].disabled}\n            wrapperStyle={wrapperStyle}\n          />\n        ))}\n      </SortableContext>\n      {createPortal(\n        <DragOverlay>\n          {state.activeId ? (\n            <Item\n              value={itemIds[activeIndex]}\n              renderItem={renderItem}\n              wrapperStyle={wrapperStyle({\n                index: activeIndex,\n                isDragging: true,\n                isSorting: false,\n              })}\n            />\n          ) : null}\n        </DragOverlay>,\n        document.body\n      )}\n    </DndContext>\n  );\n}\n","import {Theme} from 'sentry/utils/theme';\n\nexport const layout = (theme: Theme) => `\n> * {\n  :nth-child(-n + 5):nth-child(5n - 1) {\n    text-align: right;\n  }\n\n  @media (max-width: ${theme.breakpoints.small}) {\n    :nth-child(5n - 4),\n    :nth-child(5n - 3) {\n      display: none;\n    }\n  }\n}\n\ngrid-template-columns: 1fr 0.5fr 66px;\n\n@media (min-width: ${theme.breakpoints.small}) {\n  grid-template-columns: 48px 95px 1fr 0.5fr 66px;\n}\n\n@media (min-width: ${theme.breakpoints.large}) {\n  grid-template-columns: 48px 95px 1.5fr 1fr 124px;\n}\n\n@media (min-width: ${theme.breakpoints.xlarge}) {\n  grid-template-columns: 48px 95px 1fr 0.5fr 124px;\n}\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport MenuItemActionLink from 'sentry/components/actions/menuItemActionLink';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDelete, IconDownload, IconEdit, IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nconst deleteRuleConfirmMessage = t('Are you sure you wish to delete this sampling rule?');\n\nconst deleteRuleMessage = t('You do not have permission to delete sampling rules.');\n\nconst editRuleMessage = t('You do not have permission to edit sampling rules.');\n\ntype Props = {\n  disabled: boolean;\n  isMenuActionsOpen: boolean;\n  onDeleteRule: () => void;\n  onEditRule: () => void;\n  onOpenMenuActions: () => void;\n};\n\nexport function Actions({\n  disabled,\n  onEditRule,\n  onDeleteRule,\n  onOpenMenuActions,\n  isMenuActionsOpen,\n}: Props) {\n  return (\n    <Fragment>\n      <StyledButtonbar gap={1}>\n        <Button\n          aria-label={t('Edit Rule')}\n          size=\"small\"\n          onClick={onEditRule}\n          icon={<IconEdit />}\n          disabled={disabled}\n          title={disabled ? editRuleMessage : undefined}\n        />\n        <Confirm\n          priority=\"danger\"\n          message={deleteRuleConfirmMessage}\n          onConfirm={onDeleteRule}\n          disabled={disabled}\n        >\n          <Button\n            aria-label={t('Delete Rule')}\n            size=\"small\"\n            icon={<IconDelete />}\n            title={disabled ? deleteRuleMessage : undefined}\n          />\n        </Confirm>\n      </StyledButtonbar>\n      <StyledDropdownLink\n        caret={false}\n        customTitle={\n          <Button\n            aria-label={t('Actions')}\n            icon={<IconEllipsis size=\"sm\" />}\n            size=\"xsmall\"\n            onClick={onOpenMenuActions}\n          />\n        }\n        isOpen={isMenuActionsOpen}\n        anchorRight\n      >\n        <MenuItemActionLink\n          shouldConfirm={false}\n          icon={<IconDownload size=\"xs\" />}\n          title={t('Edit')}\n          onClick={\n            !disabled\n              ? onEditRule\n              : event => {\n                  event?.stopPropagation();\n                }\n          }\n          disabled={disabled}\n        >\n          <Tooltip\n            disabled={!disabled}\n            title={editRuleMessage}\n            containerDisplayMode=\"block\"\n          >\n            {t('Edit')}\n          </Tooltip>\n        </MenuItemActionLink>\n        <MenuItemActionLink\n          onAction={onDeleteRule}\n          message={deleteRuleConfirmMessage}\n          icon={<IconDownload size=\"xs\" />}\n          title={t('Delete')}\n          disabled={disabled}\n          priority=\"danger\"\n          shouldConfirm\n        >\n          <Tooltip\n            disabled={!disabled}\n            title={deleteRuleMessage}\n            containerDisplayMode=\"block\"\n          >\n            {t('Delete')}\n          </Tooltip>\n        </MenuItemActionLink>\n      </StyledDropdownLink>\n    </Fragment>\n  );\n}\n\nconst StyledButtonbar = styled(ButtonBar)`\n  justify-content: flex-end;\n  flex: 1;\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    display: grid;\n  }\n`;\n\nconst StyledDropdownLink = styled(DropdownLink)`\n  display: flex;\n  align-items: center;\n  transition: none;\n  @media (min-width: ${p => p.theme.breakpoints.large}) {\n    display: none;\n  }\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {SamplingConditionLogicalInner} from 'sentry/types/sampling';\n\nimport {LEGACY_BROWSER_LIST} from '../../utils';\n\ntype Props = {\n  value: SamplingConditionLogicalInner['value'];\n};\n\nexport function ConditionValue({value}: Props) {\n  if (Array.isArray(value)) {\n    return (\n      <div>\n        {[...value].map((v, index) => (\n          <Fragment key={v}>\n            <Value>{LEGACY_BROWSER_LIST[v]?.title ?? v}</Value>\n            {index !== value.length - 1 && <Separator>{'\\u002C'}</Separator>}\n          </Fragment>\n        ))}\n      </div>\n    );\n  }\n\n  return <Value>{LEGACY_BROWSER_LIST[String(value)]?.title ?? String(value)}</Value>;\n}\n\nconst Value = styled('span')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst Separator = styled(Value)`\n  padding-right: ${space(0.5)};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {DraggableSyntheticListeners, UseDraggableArguments} from '@dnd-kit/core';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconGrabbable} from 'sentry/icons/iconGrabbable';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {SamplingRule, SamplingRuleOperator} from 'sentry/types/sampling';\n\nimport {getInnerNameLabel} from '../../utils';\nimport {layout} from '../utils';\n\nimport {Actions} from './actions';\nimport {ConditionValue} from './conditionValue';\n\ntype Props = {\n  dragging: boolean;\n  /**\n   * Hide the grab button if true.\n   * This is used when the list has a single item, making sorting not possible.\n   */\n  hideGrabButton: boolean;\n  listeners: DraggableSyntheticListeners;\n  noPermission: boolean;\n  onDeleteRule: () => void;\n  onEditRule: () => void;\n  operator: SamplingRuleOperator;\n  rule: SamplingRule;\n  sorting: boolean;\n  grabAttributes?: UseDraggableArguments['attributes'];\n};\n\ntype State = {\n  isMenuActionsOpen: boolean;\n};\n\nexport function Rule({\n  dragging,\n  sorting,\n  rule,\n  noPermission,\n  onEditRule,\n  onDeleteRule,\n  listeners,\n  operator,\n  grabAttributes,\n  hideGrabButton,\n}: Props) {\n  const [state, setState] = useState<State>({isMenuActionsOpen: false});\n\n  useEffect(() => {\n    if ((dragging || sorting) && state.isMenuActionsOpen) {\n      setState({isMenuActionsOpen: false});\n    }\n  }, [dragging, sorting, state.isMenuActionsOpen]);\n\n  return (\n    <Columns disabled={rule.disabled || noPermission}>\n      {hideGrabButton ? (\n        <Column />\n      ) : (\n        <GrabColumn>\n          <Tooltip\n            title={\n              noPermission\n                ? t('You do not have permission to reorder rules.')\n                : operator === SamplingRuleOperator.ELSE\n                ? t('Rules without conditions cannot be reordered.')\n                : undefined\n            }\n            containerDisplayMode=\"flex\"\n          >\n            <IconGrabbableWrapper {...listeners} {...grabAttributes}>\n              <IconGrabbable />\n            </IconGrabbableWrapper>\n          </Tooltip>\n        </GrabColumn>\n      )}\n      <Column>\n        <Operator>\n          {operator === SamplingRuleOperator.IF\n            ? t('If')\n            : operator === SamplingRuleOperator.ELSE_IF\n            ? t('Else if')\n            : t('Else')}\n        </Operator>\n      </Column>\n      <Column>\n        <Conditions>\n          {hideGrabButton && !rule.condition.inner.length\n            ? t('All')\n            : rule.condition.inner.map((condition, index) => (\n                <Fragment key={index}>\n                  <ConditionName>{getInnerNameLabel(condition.name)}</ConditionName>\n                  <ConditionEqualOperator>{'='}</ConditionEqualOperator>\n                  <ConditionValue value={condition.value} />\n                </Fragment>\n              ))}\n        </Conditions>\n      </Column>\n      <RightColumn>\n        <SampleRate>{`${rule.sampleRate * 100}\\u0025`}</SampleRate>\n      </RightColumn>\n      <Column>\n        <Actions\n          onEditRule={onEditRule}\n          onDeleteRule={onDeleteRule}\n          disabled={noPermission}\n          onOpenMenuActions={() =>\n            setState({isMenuActionsOpen: !state.isMenuActionsOpen})\n          }\n          isMenuActionsOpen={state.isMenuActionsOpen}\n        />\n      </Column>\n    </Columns>\n  );\n}\n\nconst Operator = styled('div')`\n  color: ${p => p.theme.active};\n`;\n\nconst SampleRate = styled('div')`\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nconst Column = styled('div')`\n  display: flex;\n  padding: ${space(1)} ${space(2)};\n  cursor: default;\n  white-space: pre-wrap;\n  word-break: break-all;\n  /* match the height of edit and delete buttons */\n  line-height: 34px;\n`;\n\nconst IconGrabbableWrapper = styled('div')`\n  outline: none;\n  display: flex;\n  align-items: center;\n  /* match the height of edit and delete buttons */\n  height: 34px;\n`;\n\nconst GrabColumn = styled(Column)`\n  [role='button'] {\n    cursor: grab;\n  }\n`;\n\nconst Columns = styled('div')<{disabled: boolean}>`\n  display: grid;\n  align-items: flex-start;\n  line-height: 34px;\n  ${p => layout(p.theme)}\n  > * {\n    overflow: visible;\n    :nth-child(5n) {\n      justify-content: flex-end;\n    }\n  }\n\n  ${p =>\n    p.disabled &&\n    css`\n      ${GrabColumn} {\n        color: ${p.theme.disabled};\n        [role='button'] {\n          cursor: not-allowed;\n        }\n      }\n    `}\n`;\n\nconst RightColumn = styled(Column)`\n  text-align: right;\n  justify-content: flex-end;\n`;\n\nconst Conditions = styled('div')`\n  display: grid;\n  color: ${p => p.theme.purple300};\n  align-items: flex-start;\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: max-content max-content 1fr;\n    grid-column-gap: ${space(1)};\n  }\n`;\n\nconst ConditionName = styled('div')`\n  color: ${p => p.theme.gray400};\n`;\n\nconst ConditionEqualOperator = styled('div')`\n  display: none;\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    display: block;\n  }\n`;\n","import {PureComponent} from 'react';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {PanelAlert, PanelTable} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {\n  SamplingRule,\n  SamplingRuleOperator,\n  SamplingRuleType,\n} from 'sentry/types/sampling';\n\nimport {DraggableList, UpdateItemsProps} from './draggableList';\nimport {Rule} from './rule';\nimport {layout} from './utils';\n\ntype Props = {\n  disabled: boolean;\n  onDeleteRule: (rule: SamplingRule) => () => void;\n  onEditRule: (rule: SamplingRule) => () => void;\n  onUpdateRules: (rules: Array<SamplingRule>) => void;\n  rules: Array<SamplingRule>;\n  infoAlert?: React.ReactNode;\n};\n\ntype State = {\n  rules: Array<SamplingRule>;\n};\n\nexport class Rules extends PureComponent<Props, State> {\n  state: State = {rules: []};\n\n  componentDidMount() {\n    this.getRules();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.rules, this.props.rules)) {\n      this.getRules();\n      return;\n    }\n\n    if (!isEqual(this.props.rules, this.state.rules)) {\n      this.handleUpdateRulesParent();\n    }\n  }\n\n  getRules() {\n    this.setState({rules: this.props.rules});\n  }\n\n  handleUpdateRulesParent() {\n    const {onUpdateRules} = this.props;\n    const {rules} = this.state;\n\n    onUpdateRules(rules);\n  }\n\n  handleUpdateRules = ({\n    activeIndex,\n    overIndex,\n    reorderedItems: ruleIds,\n  }: UpdateItemsProps) => {\n    const {rules} = this.state;\n\n    const activeRule = rules[activeIndex];\n    const overRule = rules[overIndex];\n\n    if (!overRule.condition.inner.length) {\n      addErrorMessage(\n        t('Rules with conditions cannot be below rules without conditions')\n      );\n      return;\n    }\n\n    if (\n      activeRule.type === SamplingRuleType.TRACE &&\n      overRule.type === SamplingRuleType.TRANSACTION\n    ) {\n      addErrorMessage(\n        t('Transaction traces rules cannot be under individual transactions rules')\n      );\n      return;\n    }\n\n    if (\n      activeRule.type === SamplingRuleType.TRANSACTION &&\n      overRule.type === SamplingRuleType.TRACE\n    ) {\n      addErrorMessage(\n        t('Individual transactions rules cannot be above transaction traces rules')\n      );\n      return;\n    }\n\n    const reorderedRules = ruleIds\n      .map(ruleId => rules.find(rule => String(rule.id) === ruleId))\n      .filter(rule => !!rule) as Array<SamplingRule>;\n\n    this.setState({rules: reorderedRules});\n  };\n\n  render() {\n    const {onEditRule, onDeleteRule, disabled, infoAlert} = this.props;\n    const {rules} = this.state;\n\n    // Rules without conditions always have to be 'pinned' to the bottom of the list\n    const items = rules.map(rule => ({\n      ...rule,\n      id: String(rule.id),\n      disabled: !rule.condition.inner.length,\n    }));\n\n    return (\n      <StyledPanelTable\n        headers={['', t('Operator'), t('Condition'), t('Rate'), '']}\n        isEmpty={!rules.length}\n        emptyMessage={t('There are no transaction rules to display')}\n      >\n        {infoAlert && <StyledPanelAlert type=\"info\">{infoAlert}</StyledPanelAlert>}\n        <DraggableList\n          disabled={disabled}\n          items={items}\n          onUpdateItems={this.handleUpdateRules}\n          wrapperStyle={({isDragging, isSorting, index}) => {\n            if (isDragging) {\n              return {\n                cursor: 'grabbing',\n              };\n            }\n            if (isSorting) {\n              return {};\n            }\n            return {\n              transform: 'none',\n              transformOrigin: '0',\n              '--box-shadow': 'none',\n              '--box-shadow-picked-up': 'none',\n              overflow: 'visible',\n              position: 'relative',\n              zIndex: rules.length - index,\n              cursor: 'default',\n            };\n          }}\n          renderItem={({value, listeners, attributes, dragging, sorting}) => {\n            const itemsRuleIndex = items.findIndex(item => item.id === value);\n\n            if (itemsRuleIndex === -1) {\n              return null;\n            }\n\n            const itemsRule = items[itemsRuleIndex];\n            const currentRule = {\n              condition: itemsRule.condition,\n              sampleRate: itemsRule.sampleRate,\n              type: itemsRule.type,\n              id: Number(itemsRule.id),\n            };\n\n            return (\n              <Rule\n                operator={\n                  itemsRule.id === items[0].id\n                    ? SamplingRuleOperator.IF\n                    : itemsRule.disabled\n                    ? SamplingRuleOperator.ELSE\n                    : SamplingRuleOperator.ELSE_IF\n                }\n                hideGrabButton={items.length === 1}\n                rule={{...currentRule, disabled: itemsRule.disabled}}\n                onEditRule={onEditRule(currentRule)}\n                onDeleteRule={onDeleteRule(currentRule)}\n                noPermission={disabled}\n                listeners={listeners}\n                grabAttributes={attributes}\n                dragging={dragging}\n                sorting={sorting}\n              />\n            );\n          }}\n        />\n      </StyledPanelTable>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  overflow: visible;\n  margin-bottom: 0;\n  border: none;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n  ${p => layout(p.theme)}\n  > * {\n    ${p => p.theme.overflowEllipsis};\n    :not(:last-child) {\n      border-bottom: 1px solid ${p => p.theme.border};\n    }\n    :nth-child(n + 6) {\n      ${p =>\n        !p.isEmpty\n          ? `\n              display: grid;\n              grid-column: 1/-1;\n              padding: 0;\n            `\n          : `\n              display: block;\n              grid-column: 1/-1;\n            `}\n    }\n  }\n`;\n\nconst StyledPanelAlert = styled(PanelAlert)`\n  grid-column: 1/-1;\n  white-space: pre-wrap;\n  && {\n    display: flex;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {Panel, PanelFooter} from 'sentry/components/panels';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport {Rules} from './rules';\nimport {SAMPLING_DOC_LINK} from './utils';\n\nexport interface RulesPanelProps\n  extends Omit<React.ComponentProps<typeof Rules>, 'emptyMessage'> {\n  onAddRule: () => void;\n}\n\nexport function RulesPanel({\n  rules,\n  onAddRule,\n  onEditRule,\n  onDeleteRule,\n  onUpdateRules,\n  disabled,\n  infoAlert,\n}: RulesPanelProps) {\n  return (\n    <Panel>\n      <Rules\n        rules={rules}\n        onEditRule={onEditRule}\n        onDeleteRule={onDeleteRule}\n        disabled={disabled}\n        onUpdateRules={onUpdateRules}\n        infoAlert={infoAlert}\n      />\n      <StyledPanelFooter>\n        <StyledButtonBar gap={1}>\n          <Button href={SAMPLING_DOC_LINK} external>\n            {t('Read Docs')}\n          </Button>\n          <AddRuleButton\n            priority=\"primary\"\n            onClick={onAddRule}\n            icon={<IconAdd isCircled />}\n          >\n            {t('Add Rule')}\n          </AddRuleButton>\n        </StyledButtonBar>\n      </StyledPanelFooter>\n    </Panel>\n  );\n}\n\nconst StyledPanelFooter = styled(PanelFooter)`\n  padding: ${space(1)} ${space(2)};\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-row-gap: ${space(1)};\n  }\n`;\n\nconst AddRuleButton = styled(Button)`\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    width: 100%;\n  }\n`;\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {SamplingConditionOperator} from 'sentry/types/sampling';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {RulesPanel, RulesPanelProps} from './rulesPanel';\n\ninterface Props extends RulesPanelProps {}\n\nexport function TraceRules(props: Props) {\n  const notSupportedConditionOperator = props.rules.some(\n    rule => rule.condition.op !== SamplingConditionOperator.AND\n  );\n\n  return (\n    <Fragment>\n      <TextBlock>\n        {t(\n          'Using a Trace ID, select all Transactions distributed across multiple projects/services which match your conditions.'\n        )}\n      </TextBlock>\n      {notSupportedConditionOperator ? (\n        <Alert type=\"error\">\n          {t('A condition operator has been found that is not yet supported.')}\n        </Alert>\n      ) : (\n        <RulesPanel {...props} />\n      )}\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {SamplingConditionOperator} from 'sentry/types/sampling';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport {RulesPanel, RulesPanelProps} from './rulesPanel';\n\ninterface Props extends RulesPanelProps {}\n\nexport function TransactionRules(props: Props) {\n  const notSupportedConditionOperator = props.rules.some(\n    rule => rule.condition.op !== SamplingConditionOperator.AND\n  );\n\n  return (\n    <Fragment>\n      <TextBlock>\n        {t('Select Transactions only within this project which match your conditions.')}\n      </TextBlock>\n      {notSupportedConditionOperator ? (\n        <Alert type=\"error\">\n          {t('A condition operator has been found that is not yet supported.')}\n        </Alert>\n      ) : (\n        <RulesPanel {...props} />\n      )}\n    </Fragment>\n  );\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport partition from 'lodash/partition';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport Badge from 'sentry/components/badge';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport ListLink from 'sentry/components/links/listLink';\nimport NavTabs from 'sentry/components/navTabs';\nimport {t, tct, tn} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {SamplingRule, SamplingRules, SamplingRuleType} from 'sentry/types/sampling';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/organization/permissionAlert';\n\nimport TextBlock from '../../components/text/textBlock';\n\nimport {modalCss} from './modal/utils';\nimport {SamplingRuleModal} from './modal';\nimport {TraceRules} from './traceRules';\nimport {TransactionRules} from './transactionRules';\nimport {SAMPLING_DOC_LINK} from './utils';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{ruleType: SamplingRuleType}, {}> & {\n    hasAccess: boolean;\n    organization: Organization;\n    project: Project;\n  };\n\ntype State = AsyncView['state'] & {\n  projectDetails: Project | null;\n  rules: SamplingRules;\n};\n\nclass Sampling extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Sampling');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      rules: [],\n      projectDetails: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [['projectDetails', `/projects/${organization.slug}/${project.slug}/`]];\n  }\n\n  componentDidMount() {\n    const {organization, project} = this.props;\n\n    trackAdvancedAnalyticsEvent('sampling.settings.view', {\n      organization,\n      project_id: project.id,\n    });\n\n    this.getRules();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.projectDetails !== this.state.projectDetails) {\n      this.getRules();\n      return;\n    }\n  }\n\n  getRules() {\n    const {projectDetails} = this.state;\n\n    if (!projectDetails) {\n      return;\n    }\n\n    const {dynamicSampling} = projectDetails;\n    const rules = dynamicSampling?.rules ?? [];\n\n    const transactionRules = rules.filter(\n      rule =>\n        rule.type === SamplingRuleType.TRANSACTION || rule.type === SamplingRuleType.TRACE\n    );\n\n    const [rulesWithoutConditions, rulesWithConditions] = partition(\n      transactionRules,\n      transactionRule => !transactionRule.condition.inner.length\n    );\n\n    this.setState({rules: [...rulesWithConditions, ...rulesWithoutConditions]});\n  }\n\n  successfullySubmitted = (projectDetails: Project, successMessage?: React.ReactNode) => {\n    this.setState({projectDetails});\n\n    if (successMessage) {\n      addSuccessMessage(successMessage);\n    }\n  };\n\n  handleOpenRule = (type: SamplingRuleType) => (ruleToUpdate?: SamplingRule) => () => {\n    const {project, organization, hasAccess} = this.props;\n    const {rules} = this.state;\n\n    return openModal(\n      modalProps => (\n        <SamplingRuleModal\n          {...modalProps}\n          organization={organization}\n          project={project}\n          rule={ruleToUpdate}\n          rules={rules}\n          onSubmitSuccess={this.successfullySubmitted}\n          disabled={!hasAccess}\n          type={type}\n        />\n      ),\n      {\n        modalCss,\n      }\n    );\n  };\n\n  handleDeleteRule = (rule: SamplingRule) => () => {\n    const {organization, project} = this.props;\n    const {rules} = this.state;\n\n    const conditions = rule.condition.inner.map(({name}) => name);\n\n    trackAdvancedAnalyticsEvent('sampling.settings.rule.delete', {\n      organization,\n      project_id: project.id,\n      sampling_rate: rule.sampleRate * 100,\n      conditions,\n      conditions_stringified: conditions.sort().join(', '),\n    });\n\n    const newRules = rules.filter(({id}) => id !== rule.id);\n\n    this.submitRules(\n      newRules,\n      t('Successfully deleted sampling rule'),\n      t('An error occurred while deleting sampling rule')\n    );\n  };\n\n  handleUpdateRules = (rules: Array<SamplingRule>) => {\n    if (!rules.length) {\n      return;\n    }\n\n    this.submitRules(rules);\n  };\n\n  async submitRules(\n    newRules: SamplingRules,\n    successMessage?: string,\n    errorMessage?: string\n  ) {\n    const {organization, project} = this.props;\n\n    try {\n      const projectDetails = await this.api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/`,\n        {method: 'PUT', data: {dynamicSampling: {rules: newRules}}}\n      );\n      this.successfullySubmitted(projectDetails, successMessage);\n    } catch (error) {\n      this.getRules();\n      if (errorMessage) {\n        addErrorMessage(errorMessage);\n      }\n    }\n  }\n\n  renderBody() {\n    const {rules} = this.state;\n    const {hasAccess, location, params, routes} = this.props;\n    const disabled = !hasAccess;\n\n    const [traceRules, transactionRules] = partition(\n      rules,\n      rule => rule.type === SamplingRuleType.TRACE\n    );\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={this.getTitle()}\n          subtitle={\n            <Fragment>\n              <TextBlock>\n                {tct(\n                  'Here you can define what transactions count towards your quota without updating your SDK. Any rules specified here are applied after your [link:SDK sampling configuration]. New rules will propagate within a few minutes.',\n                  {\n                    link: <ExternalLink href={SAMPLING_DOC_LINK} />,\n                  }\n                )}\n              </TextBlock>\n              <PermissionAlert />\n            </Fragment>\n          }\n          tabs={\n            <NavTabs role=\"tablist\" aria-label={t('Rules tabs')} underlined>\n              <ListLink\n                to={recreateRoute(`${SamplingRuleType.TRACE}/`, {\n                  routes,\n                  location,\n                  params,\n                  stepBack: -1,\n                })}\n                role=\"tab\"\n                aria-selected={params.ruleType === SamplingRuleType.TRACE}\n                tabIndex={params.ruleType === SamplingRuleType.TRACE ? 0 : -1}\n                isActive={() => params.ruleType === SamplingRuleType.TRACE}\n                index\n              >\n                {t('Distributed Traces')}\n                <Badge>{traceRules.length}</Badge>\n              </ListLink>\n              <ListLink\n                to={recreateRoute(`${SamplingRuleType.TRANSACTION}/`, {\n                  routes,\n                  location,\n                  params,\n                  stepBack: -1,\n                })}\n                role=\"tab\"\n                aria-selected={params.ruleType === SamplingRuleType.TRANSACTION}\n                tabIndex={params.ruleType === SamplingRuleType.TRANSACTION ? 0 : -1}\n                isActive={() => params.ruleType === SamplingRuleType.TRANSACTION}\n              >\n                {t('Individual Transactions')}\n                <Badge>{transactionRules.length}</Badge>\n              </ListLink>\n            </NavTabs>\n          }\n        />\n        {params.ruleType === SamplingRuleType.TRANSACTION ? (\n          <TransactionRules\n            rules={transactionRules}\n            infoAlert={\n              !!traceRules.length\n                ? tct('[link] will initiate before these rules', {\n                    link: (\n                      <Link\n                        to={recreateRoute(`${SamplingRuleType.TRACE}/`, {\n                          routes,\n                          location,\n                          params,\n                          stepBack: -1,\n                        })}\n                      >\n                        {tn(\n                          '%s Distributed Trace rule',\n                          '%s Distributed Trace rules',\n                          traceRules.length\n                        )}\n                      </Link>\n                    ),\n                  })\n                : null\n            }\n            onUpdateRules={newRules =>\n              this.handleUpdateRules([...traceRules, ...newRules])\n            }\n            onDeleteRule={this.handleDeleteRule}\n            onAddRule={this.handleOpenRule(SamplingRuleType.TRANSACTION)()}\n            onEditRule={this.handleOpenRule(SamplingRuleType.TRANSACTION)}\n            disabled={disabled}\n          />\n        ) : (\n          <TraceRules\n            rules={traceRules}\n            onUpdateRules={newRules =>\n              this.handleUpdateRules([...transactionRules, ...newRules])\n            }\n            onDeleteRule={this.handleDeleteRule}\n            onAddRule={this.handleOpenRule(SamplingRuleType.TRACE)()}\n            onEditRule={this.handleOpenRule(SamplingRuleType.TRACE)}\n            disabled={disabled}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport {Sampling};\n","import {RouteComponentProps} from 'react-router';\n\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport {PanelAlert} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {SamplingRuleType} from 'sentry/types/sampling';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {Sampling} from './sampling';\n\ntype Props = RouteComponentProps<{ruleType: SamplingRuleType}, {}> & {\n  project: Project;\n};\n\nfunction Index(props: Props) {\n  const organization = useOrganization();\n\n  return (\n    <Feature\n      features={['filters-and-sampling']}\n      organization={organization}\n      renderDisabled={() => (\n        <FeatureDisabled\n          alert={PanelAlert}\n          features={['organization:filters-and-sampling']}\n          featureName={t('Sampling')}\n        />\n      )}\n    >\n      <Access organization={organization} access={['project:write']}>\n        {({hasAccess}) => (\n          <Sampling {...props} hasAccess={hasAccess} organization={organization} />\n        )}\n      </Access>\n    </Feature>\n  );\n}\n\nexport default Index;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nmodule.exports = baseXor;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var arrayFilter = require('./_arrayFilter'),\n    baseRest = require('./_baseRest'),\n    baseXor = require('./_baseXor'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.without\n * @example\n *\n * _.xor([2, 1], [2, 3]);\n * // => [1, 3]\n */\nvar xor = baseRest(function(arrays) {\n  return baseXor(arrayFilter(arrays, isArrayLikeObject));\n});\n\nmodule.exports = xor;\n"],"names":["MenuItemActionLink","className","props","noAnchor","withBorder","disabled","InnerActionLink","ActionLink","p","theme","textColor","overflowEllipsis","background","ListLink","Component","_classNames","activeClassName","this","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","render","children","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","recreateRoute","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","useLocation","useRouteContext","useParams","AsyncView","AsyncComponent","getTitle","title","renderComponent","PermissionAlert","access","hasAccess","type","showIcon","t","SAMPLING_DOC_LINK","LEGACY_BROWSER_LIST","LegacyBrowser","icon","getInnerNameLabel","name","SamplingInnerName","stripCustomTagPrefix","CUSTOM_TAG_PREFIX","isCustomTagName","startsWith","replace","TruncatedLabel","value","isSmallDevice","useMedia","maxLength","expandable","modalCss","css","Transaction","getMatchFieldPlaceholder","category","getNewCondition","condition","op","SamplingInnerOperator","legacyBrowsers","newValue","match","split","filter","trim","ignoreCase","unexpectedErrorMessage","getTagKey","distributedTracesConditions","individualTransactionsConditions","formatCreateTagLabel","label","tct","newLabel","BulkNotice","selectedRowsCount","columnsCount","isPageSelected","isAllSelected","onSelectAllRows","onUnselectAllRows","bulkLimit","allRowsCount","noticeText","actionText","defined","count","getSelectAllText","Wrapper","Fragment","AlertButton","priority","onClick","tn","_columnsCount","Button","BulkController","getInitialState","id","setState","state","selectedIds","xor","select","pageIds","uniq","includes","defaultSelectedIds","intersection","componentDidUpdate","_prevProps","prevState","isEqual","onChange","length","every","onRowToggle","handleRowToggle","onAllRowsToggle","handleAllRowsToggle","onPageRowsToggle","handlePageRowsToggle","renderBulkNotice","Object","values","LegacyBrowsers","selectedLegacyBrowsers","size","toggle","legacyBrowser","BrowserWrapper","Icon","space","fontSizeLarge","gray400","gray500","TagKeyAutocomplete","tags","disabledOptions","key","some","push","isOptionDisabled","option","inline","stacked","hideControlState","required","creatable","placeholder","formatCreateLabel","TagValueAutocomplete","orgSlug","projectId","tagKey","api","useApi","tagValues","setTagValues","useState","tagValueLoader","useCallback","async","response","fetchTagValues","useEffect","createdOptions","v","tagValue","StyledSelectField","getAriaLabel","components","MultiValue","multiValueProps","innerProps","multiple","flexibleControlStateSize","allowClear","SelectField","Conditions","conditions","projectSlug","onDelete","setTags","requestPromise","onlySamplingTags","fetchTags","displayLegacyBrowsers","isCustomTag","isBooleanField","isAutoCompleteField","ConditionWrapper","LeftCell","cond","CenterCell","StyledTextareaField","rows","autosize","RightCell","gray100","breakpoints","small","Cell","TextareaField","conditionAlreadyAddedTooltip","SamplingRuleModal","Header","Body","Footer","closeModal","project","onSubmitSuccess","rule","rules","organization","data","setData","sampleRate","inner","innerItem","Array","isArray","m","errors","isSaving","setIsSaving","conditionCategories","hasCustomTagCategory","sortedConditionCategories","sort","a","b","localeCompare","innerName","generateConditionCategoriesOptions","SamplingRuleType","d","handleSubmit","newRule","SamplingConditionOperator","newTransactionRules","r","transactionTraceRules","individualTransactionRules","partition","transactionRule","newRules","currentRuleIndex","findIndex","newR","newProjectDetails","slug","method","dynamicSampling","error","message","addErrorMessage","convertRequestErrorResponse","detailedErrorResponse","responseJSON","detail","errorResponse","responseErrors","_value","entries","getErrorMessage","analyticsConditions","analyticsConditionsStringified","trackAdvancedAnalyticsEvent","project_id","sampling_rate","conditions_stringified","old_conditions","old_conditions_stringified","old_sampling_rate","ruleWithoutConditionExists","submitDisabled","find","customTagConditionsOptions","tooltip","predefinedConditionsOptions","optionDisabled","description","link","closeButton","Fields","Description","StyledPanel","StyledPanelHeader","hasButtons","StyledCompactSelect","placement","triggerLabel","TriggerLabel","isCircled","opt","selectedOptions","previousCategories","addedCategories","addedCategory","isSearchable","filterOption","candidate","input","createFilter","Option","containerProps","AddCustomTag","isFocused","newConditions","splice","field","lineBreak","Number","onKeyDown","e","showHelpInTooltip","gap","CompactSelect","PanelHeader","Panel","borderRadius","hover","TextBlock","Item","dragging","transform","listeners","sorting","transition","forwardRef","attributes","renderItem","wrapperStyle","ref","style","Math","round","x","y","scaleX","scaleY","InnerWrapper","Boolean","boxShadowBorder","boxShadow","SortableItem","isSorting","isDragging","setNodeRef","useSortable","DraggableList","items","onUpdateItems","itemIds","item","getIndex","bind","activeIndex","activeId","onDragStart","active","onDragEnd","over","overIndex","reorderedItems","arrayMove","onDragCancel","strategy","verticalListSortingStrategy","itemId","createPortal","document","body","layout","large","xlarge","deleteRuleConfirmMessage","deleteRuleMessage","editRuleMessage","Actions","onEditRule","onDeleteRule","onOpenMenuActions","isMenuActionsOpen","StyledButtonbar","onConfirm","StyledDropdownLink","caret","customTitle","isOpen","anchorRight","shouldConfirm","event","stopPropagation","containerDisplayMode","onAction","ButtonBar","DropdownLink","ConditionValue","Value","Separator","String","gray300","Rule","noPermission","operator","grabAttributes","hideGrabButton","Columns","Column","GrabColumn","SamplingRuleOperator","IconGrabbableWrapper","Operator","ConditionName","ConditionEqualOperator","RightColumn","SampleRate","purple300","medium","Rules","PureComponent","ruleIds","activeRule","overRule","reorderedRules","ruleId","componentDidMount","getRules","prevProps","handleUpdateRulesParent","onUpdateRules","infoAlert","StyledPanelTable","headers","isEmpty","emptyMessage","StyledPanelAlert","handleUpdateRules","cursor","transformOrigin","overflow","position","zIndex","itemsRuleIndex","itemsRule","currentRule","PanelTable","border","PanelAlert","RulesPanel","onAddRule","StyledPanelFooter","StyledButtonBar","href","external","AddRuleButton","PanelFooter","TraceRules","notSupportedConditionOperator","TransactionRules","Sampling","projectDetails","successMessage","addSuccessMessage","ruleToUpdate","openModal","modalProps","successfullySubmitted","submitRules","getDefaultState","super","getEndpoints","transactionRules","rulesWithoutConditions","rulesWithConditions","errorMessage","renderBody","traceRules","subtitle","tabs","role","underlined","ruleType","tabIndex","handleDeleteRule","handleOpenRule","Index","useOrganization","features","renderDisabled","alert","featureName","SetCache","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","module","exports","array","iteratee","comparator","isCommon","result","valuesLength","outer","computed","valuesIndex","nativeMin","min","arrays","othLength","othIndex","caches","Infinity","seen","cache","baseDifference","baseFlatten","baseUniq","isArrayLikeObject","baseIntersection","baseRest","castArrayLikeObject","mapped","arrayFilter","baseXor"],"sourceRoot":""}