{"version":3,"file":"chunks/vendors-node_modules_echarts_lib_component_dataZoomSlider_js.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///../node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///../node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///../node_modules/echarts/lib/component/dataZoomSlider.js","webpack:///../node_modules/echarts/lib/component/dataZoom/installDataZoomSlider.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport DataZoomModel from './DataZoomModel.js';\nimport { inheritDefaultOption } from '../../util/component.js';\n\nvar SliderZoomModel =\n/** @class */\nfunction (_super) {\n  __extends(SliderZoomModel, _super);\n\n  function SliderZoomModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SliderZoomModel.type;\n    return _this;\n  }\n\n  SliderZoomModel.type = 'dataZoom.slider';\n  SliderZoomModel.layoutMode = 'box';\n  SliderZoomModel.defaultOption = inheritDefaultOption(DataZoomModel.defaultOption, {\n    show: true,\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    top: 'ph',\n    width: 'ph',\n    height: 'ph',\n    left: null,\n    bottom: null,\n    borderColor: '#d2dbee',\n    borderRadius: 3,\n    backgroundColor: 'rgba(47,69,84,0)',\n    // dataBackgroundColor: '#ddd',\n    dataBackground: {\n      lineStyle: {\n        color: '#d2dbee',\n        width: 0.5\n      },\n      areaStyle: {\n        color: '#d2dbee',\n        opacity: 0.2\n      }\n    },\n    selectedDataBackground: {\n      lineStyle: {\n        color: '#8fb0f7',\n        width: 0.5\n      },\n      areaStyle: {\n        color: '#8fb0f7',\n        opacity: 0.2\n      }\n    },\n    // Color of selected window.\n    fillerColor: 'rgba(135,175,274,0.2)',\n    handleIcon: 'path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#fff',\n      borderColor: '#ACB8D1'\n    },\n    moveHandleSize: 7,\n    moveHandleIcon: 'path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z',\n    moveHandleStyle: {\n      color: '#D2DBEE',\n      opacity: 0.7\n    },\n    showDetail: true,\n    showDataShadow: 'auto',\n    realtime: true,\n    zoomLock: false,\n    textStyle: {\n      color: '#6E7079'\n    },\n    brushSelect: true,\n    brushStyle: {\n      color: 'rgba(135,175,274,0.15)'\n    },\n    emphasis: {\n      handleStyle: {\n        borderColor: '#8FB0F7'\n      },\n      moveHandleStyle: {\n        color: '#8FB0F7'\n      }\n    }\n  });\n  return SliderZoomModel;\n}(DataZoomModel);\n\nexport default SliderZoomModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { bind, each, isFunction, isString, indexOf } from 'zrender/lib/core/util.js';\nimport * as eventTool from 'zrender/lib/core/event.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as throttle from '../../util/throttle.js';\nimport DataZoomView from './DataZoomView.js';\nimport { linearMap, asc, parsePercent } from '../../util/number.js';\nimport * as layout from '../../util/layout.js';\nimport sliderMove from '../helper/sliderMove.js';\nimport { getAxisMainType, collectReferCoordSysModelInfo } from './helper.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { createSymbol, symbolBuildProxies } from '../../util/symbol.js';\nimport { deprecateLog } from '../../util/log.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nvar Rect = graphic.Rect; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar DEFAULT_MOVE_HANDLE_SIZE = 7;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar REALTIME_ANIMATION_CONFIG = {\n  easing: 'cubicOut',\n  duration: 100,\n  delay: 0\n};\n\nvar SliderZoomView =\n/** @class */\nfunction (_super) {\n  __extends(SliderZoomView, _super);\n\n  function SliderZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SliderZoomView.type;\n    _this._displayables = {};\n    return _this;\n  }\n\n  SliderZoomView.prototype.init = function (ecModel, api) {\n    this.api = api; // A unique handler for each dataZoom component\n\n    this._onBrush = bind(this._onBrush, this);\n    this._onBrushEnd = bind(this._onBrushEnd, this);\n  };\n\n  SliderZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\n    _super.prototype.render.apply(this, arguments);\n\n    throttle.createOrUpdate(this, '_dispatchZoomAction', dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.getOrient();\n\n    if (dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    if (dataZoomModel.noTarget()) {\n      this._clear();\n\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  };\n\n  SliderZoomView.prototype.dispose = function () {\n    this._clear();\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  SliderZoomView.prototype._clear = function () {\n    throttle.clear(this, '_dispatchZoomAction');\n    var zr = this.api.getZr();\n    zr.off('mousemove', this._onBrush);\n    zr.off('mouseup', this._onBrushEnd);\n  };\n\n  SliderZoomView.prototype._buildView = function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    this._brushing = false;\n    this._displayables.brushRect = null;\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.sliderGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  };\n\n  SliderZoomView.prototype._resetLocation = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var showMoveHandle = dataZoomModel.get('brushSelect');\n    var moveHandleSize = showMoveHandle ? DEFAULT_MOVE_HANDLE_SIZE : 0; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP - moveHandleSize,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  };\n\n  SliderZoomView.prototype._positionGroup = function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var sliderGroup = this._displayables.sliderGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    sliderGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: 1\n    } : orient === HORIZONTAL && inverse ? {\n      scaleY: otherAxisInverse ? 1 : -1,\n      scaleX: -1\n    } : orient === VERTICAL && !inverse ? {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: 1,\n      rotation: Math.PI / 2\n    } // Dont use Math.PI, considering shadow direction.\n    : {\n      scaleY: otherAxisInverse ? -1 : 1,\n      scaleX: -1,\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([sliderGroup]);\n    thisGroup.x = location.x - rect.x;\n    thisGroup.y = location.y - rect.y;\n    thisGroup.markRedraw();\n  };\n\n  SliderZoomView.prototype._getViewExtent = function () {\n    return [0, this._size[0]];\n  };\n\n  SliderZoomView.prototype._renderBackground = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.sliderGroup;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    var clickPanel = new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: bind(this._onClickPanel, this)\n    });\n    var zr = this.api.getZr();\n\n    if (brushSelect) {\n      clickPanel.on('mousedown', this._onBrushStart, this);\n      clickPanel.cursor = 'crosshair';\n      zr.on('mousemove', this._onBrush);\n      zr.on('mouseup', this._onBrushEnd);\n    } else {\n      zr.off('mousemove', this._onBrush);\n      zr.off('mouseup', this._onBrushEnd);\n    }\n\n    barGroup.add(clickPanel);\n  };\n\n  SliderZoomView.prototype._renderDataShadow = function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    this._displayables.dataShadowSegs = [];\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var oldSize = this._shadowSize || [];\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var polygonPts = this._shadowPolygonPts;\n    var polylinePts = this._shadowPolylinePts; // Not re-render if data doesn't change.\n\n    if (data !== this._shadowData || otherDim !== this._shadowDim || size[0] !== oldSize[0] || size[1] !== oldSize[1]) {\n      var otherDataExtent_1 = data.getDataExtent(otherDim); // Nice extent.\n\n      var otherOffset = (otherDataExtent_1[1] - otherDataExtent_1[0]) * 0.3;\n      otherDataExtent_1 = [otherDataExtent_1[0] - otherOffset, otherDataExtent_1[1] + otherOffset];\n      var otherShadowExtent_1 = [0, size[1]];\n      var thisShadowExtent = [0, size[0]];\n      var areaPoints_1 = [[size[0], 0], [0, 0]];\n      var linePoints_1 = [];\n      var step_1 = thisShadowExtent[1] / (data.count() - 1);\n      var thisCoord_1 = 0; // Optimize for large data shadow\n\n      var stride_1 = Math.round(data.count() / size[0]);\n      var lastIsEmpty_1;\n      data.each([otherDim], function (value, index) {\n        if (stride_1 > 0 && index % stride_1) {\n          thisCoord_1 += step_1;\n          return;\n        } // FIXME\n        // Should consider axis.min/axis.max when drawing dataShadow.\n        // FIXME\n        // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n        var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n        var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent_1, otherShadowExtent_1, true); // Attempt to draw data shadow precisely when there are empty value.\n\n        if (isEmpty && !lastIsEmpty_1 && index) {\n          areaPoints_1.push([areaPoints_1[areaPoints_1.length - 1][0], 0]);\n          linePoints_1.push([linePoints_1[linePoints_1.length - 1][0], 0]);\n        } else if (!isEmpty && lastIsEmpty_1) {\n          areaPoints_1.push([thisCoord_1, 0]);\n          linePoints_1.push([thisCoord_1, 0]);\n        }\n\n        areaPoints_1.push([thisCoord_1, otherCoord]);\n        linePoints_1.push([thisCoord_1, otherCoord]);\n        thisCoord_1 += step_1;\n        lastIsEmpty_1 = isEmpty;\n      });\n      polygonPts = this._shadowPolygonPts = areaPoints_1;\n      polylinePts = this._shadowPolylinePts = linePoints_1;\n    }\n\n    this._shadowData = data;\n    this._shadowDim = otherDim;\n    this._shadowSize = [size[0], size[1]];\n    var dataZoomModel = this.dataZoomModel;\n\n    function createDataShadowGroup(isSelectedArea) {\n      var model = dataZoomModel.getModel(isSelectedArea ? 'selectedDataBackground' : 'dataBackground');\n      var group = new graphic.Group();\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: polygonPts\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('areaStyle').getAreaStyle(),\n        silent: true,\n        z2: -20\n      });\n      var polyline = new graphic.Polyline({\n        shape: {\n          points: polylinePts\n        },\n        segmentIgnoreThreshold: 1,\n        style: model.getModel('lineStyle').getLineStyle(),\n        silent: true,\n        z2: -19\n      });\n      group.add(polygon);\n      group.add(polyline);\n      return group;\n    } // let dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n\n    for (var i = 0; i < 3; i++) {\n      var group = createDataShadowGroup(i === 1);\n\n      this._displayables.sliderGroup.add(group);\n\n      this._displayables.dataShadowSegs.push(group);\n    }\n  };\n\n  SliderZoomView.prototype._prepareDataShadowInfo = function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(axisDim, axisIndex).getTargetSeriesModels();\n      each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(getAxisMainType(axisDim), axisIndex).axis;\n        var otherDim = getOtherDim(axisDim);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: axisDim,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  };\n\n  SliderZoomView.prototype._renderHandle = function () {\n    var thisGroup = this.group;\n    var displayables = this._displayables;\n    var handles = displayables.handles = [null, null];\n    var handleLabels = displayables.handleLabels = [null, null];\n    var sliderGroup = this._displayables.sliderGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api;\n    var borderRadius = dataZoomModel.get('borderRadius') || 0;\n    var brushSelect = dataZoomModel.get('brushSelect');\n    var filler = displayables.filler = new Rect({\n      silent: brushSelect,\n      style: {\n        fill: dataZoomModel.get('fillerColor')\n      },\n      textConfig: {\n        position: 'inside'\n      }\n    });\n    sliderGroup.add(filler); // Frame border.\n\n    sliderGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1],\n        r: borderRadius\n      },\n      style: {\n        // deprecated option\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })); // Left and right handle to resize\n\n    each([0, 1], function (handleIndex) {\n      var iconStr = dataZoomModel.get('handleIcon');\n\n      if (!symbolBuildProxies[iconStr] && iconStr.indexOf('path://') < 0 && iconStr.indexOf('image://') < 0) {\n        // Compatitable with the old icon parsers. Which can use a path string without path://\n        iconStr = 'path://' + iconStr;\n\n        if (process.env.NODE_ENV !== 'production') {\n          deprecateLog('handleIcon now needs \\'path://\\' prefix when using a path string');\n        }\n      }\n\n      var path = createSymbol(iconStr, -1, 0, 2, 2, null, true);\n      path.attr({\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false),\n        z2: 5\n      });\n      var bRect = path.getBoundingRect();\n      var handleSize = dataZoomModel.get('handleSize');\n      this._handleHeight = parsePercent(handleSize, this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      path.style.strokeNoScale = true;\n      path.rectHover = true;\n      path.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\n      enableHoverEmphasis(path);\n      var handleColor = dataZoomModel.get('handleColor'); // deprecated option\n      // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      sliderGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.getModel('textStyle');\n      thisGroup.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: createTextStyle(textStyleModel, {\n          x: 0,\n          y: 0,\n          text: '',\n          verticalAlign: 'middle',\n          align: 'center',\n          fill: textStyleModel.getTextColor(),\n          font: textStyleModel.getFont()\n        }),\n        z2: 10\n      }));\n    }, this); // Handle to move. Only visible when brushSelect is set true.\n\n    var actualMoveZone = filler;\n\n    if (brushSelect) {\n      var moveHandleHeight = parsePercent(dataZoomModel.get('moveHandleSize'), size[1]);\n      var moveHandle_1 = displayables.moveHandle = new graphic.Rect({\n        style: dataZoomModel.getModel('moveHandleStyle').getItemStyle(),\n        silent: true,\n        shape: {\n          r: [0, 0, 2, 2],\n          y: size[1] - 0.5,\n          height: moveHandleHeight\n        }\n      });\n      var iconSize = moveHandleHeight * 0.8;\n      var moveHandleIcon = displayables.moveHandleIcon = createSymbol(dataZoomModel.get('moveHandleIcon'), -iconSize / 2, -iconSize / 2, iconSize, iconSize, '#fff', true);\n      moveHandleIcon.silent = true;\n      moveHandleIcon.y = size[1] + moveHandleHeight / 2 - 0.5;\n      moveHandle_1.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'moveHandleStyle']).getItemStyle();\n      var moveZoneExpandSize = Math.min(size[1] / 2, Math.max(moveHandleHeight, 10));\n      actualMoveZone = displayables.moveZone = new graphic.Rect({\n        invisible: true,\n        shape: {\n          y: size[1] - moveZoneExpandSize,\n          height: moveHandleHeight + moveZoneExpandSize\n        }\n      });\n      actualMoveZone.on('mouseover', function () {\n        api.enterEmphasis(moveHandle_1);\n      }).on('mouseout', function () {\n        api.leaveEmphasis(moveHandle_1);\n      });\n      sliderGroup.add(moveHandle_1);\n      sliderGroup.add(moveHandleIcon);\n      sliderGroup.add(actualMoveZone);\n    }\n\n    actualMoveZone.attr({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false)\n    });\n  };\n\n  SliderZoomView.prototype._resetInterval = function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  };\n\n  SliderZoomView.prototype._updateInterval = function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  };\n\n  SliderZoomView.prototype._updateView = function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scaleX: handleHeight / 2,\n        scaleY: handleHeight / 2,\n        // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.\n        // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.\n        x: handleEnds[handleIndex] + (handleIndex ? -1 : 1),\n        y: size[1] / 2 - handleHeight / 2\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n    var viewExtent = {\n      x: handleInterval[0],\n      width: handleInterval[1] - handleInterval[0]\n    }; // Move handle\n\n    if (displaybles.moveHandle) {\n      displaybles.moveHandle.setShape(viewExtent);\n      displaybles.moveZone.setShape(viewExtent); // Force update path on the invisible object\n\n      displaybles.moveZone.getBoundingRect();\n      displaybles.moveHandleIcon && displaybles.moveHandleIcon.attr('x', viewExtent.x + viewExtent.width / 2);\n    } // update clip path of shadow.\n\n\n    var dataShadowSegs = displaybles.dataShadowSegs;\n    var segIntervals = [0, handleInterval[0], handleInterval[1], size[0]];\n\n    for (var i = 0; i < dataShadowSegs.length; i++) {\n      var segGroup = dataShadowSegs[i];\n      var clipPath = segGroup.getClipPath();\n\n      if (!clipPath) {\n        clipPath = new graphic.Rect();\n        segGroup.setClipPath(clipPath);\n      }\n\n      clipPath.setShape({\n        x: segIntervals[i],\n        y: 0,\n        width: segIntervals[i + 1] - segIntervals[i],\n        height: size[1]\n      });\n    }\n\n    this._updateDataInfo(nonRealtime);\n  };\n\n  SliderZoomView.prototype._updateDataInfo = function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        verticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        align: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  };\n\n  SliderZoomView.prototype._formatLabel = function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel({\n      value: Math.round(value)\n    }) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return isFunction(labelFormatter) ? labelFormatter(value, valueStr) : isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  };\n  /**\n   * @param showOrHide true: show, false: hide\n   */\n\n\n  SliderZoomView.prototype._showDataInfo = function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var displayables = this._displayables;\n    var handleLabels = displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide); // Highlight move handle\n\n    displayables.moveHandle && this.api[showOrHide ? 'enterEmphasis' : 'leaveEmphasis'](displayables.moveHandle, 1);\n  };\n\n  SliderZoomView.prototype._onDragMove = function (handleIndex, dx, dy, event) {\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\n\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.sliderGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction(true);\n  };\n\n  SliderZoomView.prototype._onDragEnd = function () {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onClickPanel = function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrushStart = function (e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    this._brushStart = new graphic.Point(x, y);\n    this._brushing = true;\n    this._brushStartTime = +new Date(); // this._updateBrushRect(x, y);\n  };\n\n  SliderZoomView.prototype._onBrushEnd = function (e) {\n    if (!this._brushing) {\n      return;\n    }\n\n    var brushRect = this._displayables.brushRect;\n    this._brushing = false;\n\n    if (!brushRect) {\n      return;\n    }\n\n    brushRect.attr('ignore', true);\n    var brushShape = brushRect.shape;\n    var brushEndTime = +new Date(); // console.log(brushEndTime - this._brushStartTime);\n\n    if (brushEndTime - this._brushStartTime < 200 && Math.abs(brushShape.width) < 5) {\n      // Will treat it as a click\n      return;\n    }\n\n    var viewExtend = this._getViewExtent();\n\n    var percentExtent = [0, 100];\n    this._range = asc([linearMap(brushShape.x, viewExtend, percentExtent, true), linearMap(brushShape.x + brushShape.width, viewExtend, percentExtent, true)]);\n    this._handleEnds = [brushShape.x, brushShape.x + brushShape.width];\n\n    this._updateView();\n\n    this._dispatchZoomAction(false);\n  };\n\n  SliderZoomView.prototype._onBrush = function (e) {\n    if (this._brushing) {\n      // For mobile device, prevent screen slider on the button.\n      eventTool.stop(e.event);\n\n      this._updateBrushRect(e.offsetX, e.offsetY);\n    }\n  };\n\n  SliderZoomView.prototype._updateBrushRect = function (mouseX, mouseY) {\n    var displayables = this._displayables;\n    var dataZoomModel = this.dataZoomModel;\n    var brushRect = displayables.brushRect;\n\n    if (!brushRect) {\n      brushRect = displayables.brushRect = new Rect({\n        silent: true,\n        style: dataZoomModel.getModel('brushStyle').getItemStyle()\n      });\n      displayables.sliderGroup.add(brushRect);\n    }\n\n    brushRect.attr('ignore', false);\n    var brushStart = this._brushStart;\n    var sliderGroup = this._displayables.sliderGroup;\n    var endPoint = sliderGroup.transformCoordToLocal(mouseX, mouseY);\n    var startPoint = sliderGroup.transformCoordToLocal(brushStart.x, brushStart.y);\n    var size = this._size;\n    endPoint[0] = Math.max(Math.min(size[0], endPoint[0]), 0);\n    brushRect.setShape({\n      x: startPoint[0],\n      y: 0,\n      width: endPoint[0] - startPoint[0],\n      height: size[1]\n    });\n  };\n  /**\n   * This action will be throttled.\n   */\n\n\n  SliderZoomView.prototype._dispatchZoomAction = function (realtime) {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      animation: realtime ? REALTIME_ANIMATION_CONFIG : null,\n      start: range[0],\n      end: range[1]\n    });\n  };\n\n  SliderZoomView.prototype._findCoordRect = function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    var coordSysInfoList = collectReferCoordSysModelInfo(this.dataZoomModel).infoList;\n\n    if (!rect && coordSysInfoList.length) {\n      var coordSys = coordSysInfoList[0].model.coordinateSystem;\n      rect = coordSys.getRect && coordSys.getRect();\n    }\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  };\n\n  SliderZoomView.type = 'dataZoom.slider';\n  return SliderZoomView;\n}(DataZoomView);\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nexport default SliderZoomView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../extension.js';\nimport { install } from './dataZoom/installDataZoomSlider.js';\nuse(install);","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport SliderZoomModel from './SliderZoomModel.js';\nimport SliderZoomView from './SliderZoomView.js';\nimport installCommon from './installCommon.js';\nexport function install(registers) {\n  registers.registerComponentModel(SliderZoomModel);\n  registers.registerComponentView(SliderZoomView);\n  installCommon(registers);\n}"],"names":["_super","SliderZoomModel","_this","apply","this","arguments","type","layoutMode","defaultOption","DataZoomModel","show","right","top","width","height","left","bottom","borderColor","borderRadius","backgroundColor","dataBackground","lineStyle","color","areaStyle","opacity","selectedDataBackground","fillerColor","handleIcon","handleSize","handleStyle","moveHandleSize","moveHandleIcon","moveHandleStyle","showDetail","showDataShadow","realtime","zoomLock","textStyle","brushSelect","brushStyle","emphasis","HORIZONTAL","VERTICAL","SHOW_DATA_SHADOW_SERIES_TYPE","REALTIME_ANIMATION_CONFIG","easing","duration","delay","getCursor","orient","SliderZoomView","_displayables","prototype","init","ecModel","api","_onBrush","bind","_onBrushEnd","render","dataZoomModel","payload","throttle","get","_orient","getOrient","noTarget","_clear","group","removeAll","from","uid","_buildView","_updateView","dispose","zr","getZr","off","thisGroup","_brushing","brushRect","_resetLocation","_resetInterval","barGroup","sliderGroup","_renderBackground","_renderHandle","_renderDataShadow","add","_positionGroup","coordRect","_findCoordRect","ecSize","getWidth","getHeight","positionInfo","x","y","layoutParams","layout","option","each","name","layoutRect","_location","_size","reverse","location","targetAxisModel","getFirstTargetAxisModel","inverse","otherAxisInverse","_dataShadowInfo","attr","scaleY","scaleX","rotation","Math","PI","rect","getBoundingRect","markRedraw","_getViewExtent","size","silent","shape","style","fill","z2","clickPanel","onclick","_onClickPanel","on","_onBrushStart","cursor","info","_prepareDataShadowInfo","dataShadowSegs","oldSize","_shadowSize","seriesModel","series","data","getRawData","otherDim","getShadowDim","polygonPts","_shadowPolygonPts","polylinePts","_shadowPolylinePts","_shadowData","_shadowDim","otherDataExtent_1","getDataExtent","otherOffset","lastIsEmpty_1","otherShadowExtent_1","thisShadowExtent","areaPoints_1","linePoints_1","step_1","count","thisCoord_1","stride_1","round","value","index","isEmpty","isNaN","otherCoord","push","length","i","createDataShadowGroup","isSelectedArea","model","getModel","polygon","points","segmentIgnoreThreshold","getAreaStyle","polyline","getLineStyle","result","eachTargetAxis","axisDim","axisIndex","seriesModels","getAxisProxy","getTargetSeriesModels","indexOf","thisAxis","getComponent","axis","radius","angle","coordSys","coordinateSystem","getOtherAxis","getData","mapDimension","thisDim","displayables","handles","handleLabels","filler","textConfig","position","subPixelOptimize","r","stroke","lineWidth","handleIndex","iconStr","symbol","path","draggable","drift","_onDragMove","ondragend","_onDragEnd","onmouseover","_showDataInfo","onmouseout","bRect","_handleHeight","_handleWidth","setStyle","getItemStyle","strokeNoScale","rectHover","ensureState","handleColor","textStyleModel","invisible","text","verticalAlign","align","getTextColor","font","getFont","actualMoveZone","moveHandleHeight","moveHandle_1","moveHandle","iconSize","moveZoneExpandSize","min","max","moveZone","enterEmphasis","leaveEmphasis","ondragstart","range","_range","getPercentRange","viewExtent","_handleEnds","_updateInterval","delta","handleEnds","viewExtend","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","percentExtent","sliderMove","minSpan","maxSpan","lastRange","nonRealtime","displaybles","handleInterval","slice","handle","handleHeight","setShape","segIntervals","segGroup","clipPath","getClipPath","setClipPath","_updateDataInfo","labelTexts","axisProxy","getAxisModel","dataInterval","calculateDataWindow","start","end","valueWindow","getDataValueWindow","_formatLabel","orderedHandleEnds","setLabel","barTransform","graphic","getTransform","parent","direction","transformDirection","offset","textPoint","applyTransform","call","labelFormatter","labelPrecision","getPixelPrecision","valueStr","scale","getLabel","toFixed","isFunction","isString","replace","showOrHide","_dragging","dx","dy","event","getLocalTransform","vertex","changed","_dispatchZoomAction","e","localPoint","transformCoordToLocal","offsetX","offsetY","center","_brushStart","_brushStartTime","Date","brushShape","abs","_updateBrushRect","mouseX","mouseY","brushStart","endPoint","startPoint","dispatchAction","dataZoomId","id","animation","coordSysInfoList","infoList","getRect","DataZoomView","registers","registerComponentModel","registerComponentView","installCommon"],"sourceRoot":""}